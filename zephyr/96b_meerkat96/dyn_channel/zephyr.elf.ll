; ModuleID = 'build/96b_meerkat96/dyn_channel/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type { i32 }
%struct.zbus_channel = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct._thread_arch = type { i32, i32 }
%struct.zbus_observer = type { i8, %struct.k_msgq*, {}* }
%struct.zbus_observer.16 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.15*)* }
%struct.zbus_channel.15 = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer.16** }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.external_data_msg = type { i8*, i32 }
%struct.version_msg = type { i8, i8, i16 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.k_spinlock, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct.k_spinlock, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.55], [13808 x i8], [191 x %struct.anon.55], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.55 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.55] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.zbus_channel.128 = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer.127** }
%struct.zbus_observer.127 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.128*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct._gpio_init_config = type { i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.55], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536858544 to i8*), void (i8*)* inttoptr (i32 536857743 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536858520 to i8*), void (i8*)* inttoptr (i32 536845901 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536858520 to i8*), void (i8*)* inttoptr (i32 536845901 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [31 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_consumer_thread_id to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_consumer_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub, i32 0, i32 0), i8* bitcast (%struct.k_mutex* @_zbus_mutex_ack to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_data_ready_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_pkt_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_version_chan to i8*), i8* bitcast (%struct.zbus_channel.15* @ack to i8*), i8* bitcast (%struct.zbus_channel.15* @data_ready_chan to i8*), i8* getelementptr inbounds (%struct.zbus_observer.16, %struct.zbus_observer.16* @filter_lis, i32 0, i32 0), i8* bitcast (%struct.zbus_channel.15* @pkt_chan to i8*), i8* bitcast (%struct.zbus_channel.15* @version_chan to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_producer_thread_id to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_producer_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub, i32 0, i32 0), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_observer_queue_consumer_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_consumer_sub", align 4, !dbg !25
@_k_fifo_buf__zbus_observer_queue_consumer_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.0", align 4, !dbg !324
@_k_thread_obj_consumer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !334
@_k_thread_stack_consumer_thread_id = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.1", align 8, !dbg !329
@.str = private unnamed_addr constant [19 x i8] c"consumer_thread_id\00", align 1
@_k_thread_data_consumer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_consumer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @_k_thread_stack_consumer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @consumer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 4, i32 0, i32 1000, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_consumer_thread_id", align 4, !dbg !289
@consumer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_consumer_thread_id, align 4, !dbg !320
@.str.1 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"chan == &data_ready_chan\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"CMAKE_SOURCE_DIR/src/consumer.c\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"%c: size=%02d\0A\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"Content\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@_zbus_mutex_pkt_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_pkt_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_pkt_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_pkt_chan", align 4, !dbg !336
@.str.7 = private unnamed_addr constant [9 x i8] c"pkt_chan\00", align 1
@_zbus_message_pkt_chan = internal global %struct.external_data_msg zeroinitializer, align 4, !dbg !500
@_zbus_observers_pkt_chan = internal constant [2 x %struct.zbus_observer.16*] [%struct.zbus_observer.16* @filter_lis, %struct.zbus_observer.16* null], align 4, !dbg !507
@_zbus_mutex_version_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_version_chan", align 4, !dbg !486
@.str.1.15 = private unnamed_addr constant [13 x i8] c"version_chan\00", align 1
@_zbus_message_version_chan = internal global %struct.version_msg { i8 0, i8 1, i16 1 }, align 2, !dbg !510
@_zbus_observers_version_chan = internal constant [1 x %struct.zbus_observer.16*] zeroinitializer, align 4, !dbg !517
@version_chan = dso_local constant %struct.zbus_channel.15 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.15, i32 0, i32 0), i16 4, i8* null, i8* getelementptr inbounds (%struct.version_msg, %struct.version_msg* @_zbus_message_version_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_version_chan, %struct.zbus_observer.16** getelementptr inbounds ([1 x %struct.zbus_observer.16*], [1 x %struct.zbus_observer.16*]* @_zbus_observers_version_chan, i32 0, i32 0) }, section "._zbus_channel.static.version_chan", align 4, !dbg !488
@_zbus_mutex_data_ready_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_data_ready_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_data_ready_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_data_ready_chan", align 4, !dbg !490
@.str.2.13 = private unnamed_addr constant [16 x i8] c"data_ready_chan\00", align 1
@_zbus_message_data_ready_chan = internal global %struct.z_thread_stack_element zeroinitializer, align 1, !dbg !522
@_zbus_observers_data_ready_chan = internal constant [2 x %struct.zbus_observer.16*] [%struct.zbus_observer.16* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.16*), %struct.zbus_observer.16* null], align 4, !dbg !527
@data_ready_chan = dso_local constant %struct.zbus_channel.15 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.13, i32 0, i32 0), i16 1, i8* null, i8* getelementptr inbounds (%struct.z_thread_stack_element, %struct.z_thread_stack_element* @_zbus_message_data_ready_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_data_ready_chan, %struct.zbus_observer.16** getelementptr inbounds ([2 x %struct.zbus_observer.16*], [2 x %struct.zbus_observer.16*]* @_zbus_observers_data_ready_chan, i32 0, i32 0) }, section "._zbus_channel.static.data_ready_chan", align 4, !dbg !492
@_zbus_mutex_ack = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_ack, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_ack, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_ack", align 4, !dbg !494
@.str.3.18 = private unnamed_addr constant [4 x i8] c"ack\00", align 1
@_zbus_message_ack = internal global %struct.z_thread_stack_element zeroinitializer, align 1, !dbg !529
@_zbus_observers_ack = internal constant [2 x %struct.zbus_observer.16*] [%struct.zbus_observer.16* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub to %struct.zbus_observer.16*), %struct.zbus_observer.16* null], align 4, !dbg !531
@ack = dso_local constant %struct.zbus_channel.15 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.18, i32 0, i32 0), i16 1, i8* null, i8* getelementptr inbounds (%struct.z_thread_stack_element, %struct.z_thread_stack_element* @_zbus_message_ack, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_ack, %struct.zbus_observer.16** getelementptr inbounds ([2 x %struct.zbus_observer.16*], [2 x %struct.zbus_observer.16*]* @_zbus_observers_ack, i32 0, i32 0) }, section "._zbus_channel.static.ack", align 4, !dbg !496
@filter_lis = dso_local global %struct.zbus_observer.16 { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel.15*)* @filter_cb }, section "._zbus_observer.static.filter_lis", align 4, !dbg !498
@consumer_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.consumer_sub", align 4, !dbg !115
@.str.4.8 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.9 = private unnamed_addr constant [18 x i8] c"chan == &pkt_chan\00", align 1
@.str.6.10 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7.14 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/include/zephyr/zbus/zbus.h\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@_zbus_observer_queue_producer_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_producer_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_producer_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_producer_sub", align 4, !dbg !533
@_k_fifo_buf__zbus_observer_queue_producer_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/producer.c\22.0", align 4, !dbg !709
@producer_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_producer_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.producer_sub", align 4, !dbg !540
@_k_thread_obj_producer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !714
@_k_thread_stack_producer_thread_id = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/producer.c\22.1", align 8, !dbg !711
@.str.22 = private unnamed_addr constant [19 x i8] c"producer_thread_id\00", align 1
@_k_thread_data_producer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_producer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @_k_thread_stack_producer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 1000, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_producer_thread_id", align 4, !dbg !684
@producer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_producer_thread_id, align 4, !dbg !705
@.str.1.23 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.24 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.3.25 = private unnamed_addr constant [32 x i8] c"CMAKE_SOURCE_DIR/src/producer.c\00", align 1
@pkt_chan = dso_local constant %struct.zbus_channel.15 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i16 8, i8* null, i8* bitcast (%struct.external_data_msg* @_zbus_message_pkt_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_pkt_chan, %struct.zbus_observer.16** getelementptr inbounds ([2 x %struct.zbus_observer.16*], [2 x %struct.zbus_observer.16*]* @_zbus_observers_pkt_chan, i32 0, i32 0) }, section "._zbus_channel.static.pkt_chan", align 4, !dbg !342
@.str.4.26 = private unnamed_addr constant [23 x i8] c"%c: Ack not received!\0A\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !716
@.str.1.30 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.32 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.33 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.34 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.35 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.36 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.37 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.38 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !739
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.41 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.42 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.44 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.45 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.46 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.47 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.48 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.49 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.50 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.51 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !748
@.str.64 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.66 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.67 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.65 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.69 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.70 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.68 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.71 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.72 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.73 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.74 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.75 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.76 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.77 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.78 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.81 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.82 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.83 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.84 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.96 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.88 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.89 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.90 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.91 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.92 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.93 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.94 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.95 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.87 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [100 x i8] c"\09Stacking or Data Access Violation error without stack guard, user-mode or null-pointer detection\0A\0A\00", align 1
@.str.22.86 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28.85 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1177
@.str.110 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0), i8 2 }, section ".log_const_zbus", align 4, !dbg !1187
@.str.1.114 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.115 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.3.116 = private unnamed_addr constant [31 x i8] c"ZEPHYR_BASE/subsys/zbus/zbus.c\00", align 1
@.str.4.117 = private unnamed_addr constant [34 x i8] c"\09zbus cannot be used inside ISRs\0A\00", align 1
@.str.5.118 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.6.119 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.7.120 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.8.121 = private unnamed_addr constant [18 x i8] c"\09msg is required\0A\00", align 1
@.str.9.131 = private unnamed_addr constant [19 x i8] c"sub != ((void *)0)\00", align 1
@.str.10.132 = private unnamed_addr constant [18 x i8] c"\09sub is required\0A\00", align 1
@.str.11.122 = private unnamed_addr constant [9 x i8] c"err == 0\00", align 1
@.str.12.123 = private unnamed_addr constant [49 x i8] c"\09could not deliver notification to observer %s.\0A\00", align 1
@.str.13.124 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_POST_KERNEL60_", align 4, !dbg !1199
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !1304
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1487
@.str.134 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.k_spinlock { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1440
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1471
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1438
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1426
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.134, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1414
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1416
@.str.1.135 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.24.141 = private unnamed_addr constant [24 x i8] c"pin < config->mux_count\00", align 1
@.str.25.142 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/drivers/gpio/gpio_imx.c\00", align 1
@.str.26.136 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.27.137 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.28.138 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.29.139 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.30.140 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1473
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1484
@.str.31.144 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1492
@.str.147 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1498
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1756
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1754
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1748
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.147, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1739
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1741
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1758
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1760
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1763
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1766
@overflow_cyc = internal global i32 0, align 4, !dbg !1777
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2035
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2037
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2033
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2028
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2002
@.str.151 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.152 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.153 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.154 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.155 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.156 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !2039
@.str.162 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.163 = private unnamed_addr constant [8 x i8] c"pre < 8\00", align 1
@.str.2.164 = private unnamed_addr constant [52 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_imx7d.c\00", align 1
@.str.3.165 = private unnamed_addr constant [10 x i8] c"post < 64\00", align 1
@.str.4.166 = private unnamed_addr constant [12 x i8] c"pre && post\00", align 1
@.str.169 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.170 = private unnamed_addr constant [56 x i8] c"!CCM_ANALOG_IsPllBypassed(base, ccmAnalogPll480Control)\00", align 1
@.str.2.171 = private unnamed_addr constant [59 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c\00", align 1
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.4 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@.str.174 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.175 = private unnamed_addr constant [9 x i8] c"pin < 32\00", align 1
@.str.2.176 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/gpio_imx.c\00", align 1
@.str.183 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.184 = private unnamed_addr constant [11 x i8] c"initConfig\00", align 1
@.str.2.185 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/uart_imx.c\00", align 1
@.str.3.186 = private unnamed_addr constant [63 x i8] c"(direction & uartDirectionTx) || (direction & uartDirectionRx)\00", align 1
@.str.4.193 = private unnamed_addr constant [57 x i8] c"(mode == uartModemModeDce) || (mode == uartModemModeDte)\00", align 1
@.str.5.194 = private unnamed_addr constant [14 x i8] c"data <= 0x1FF\00", align 1
@.str.6.195 = private unnamed_addr constant [86 x i8] c"(voteClock == uartIrdaVoteClockSampling) || (voteClock == uartIrdaVoteClockReference)\00", align 1
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2069
@.str.202 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.206 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.207 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.208 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.209 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.210 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.211 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.212 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.216 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.217 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.218 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.219 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.220 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.215 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.214 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.216, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.217, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.218, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.219, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.220, i32 0, i32 0)], align 4
@.str.222 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.222, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2075
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !2292
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !2281
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2287
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !2299
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2304
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.231 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.239, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.240, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.241, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.242, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.243, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.237, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.244, i32 0, i32 0)], align 4, !dbg !2332
@.str.238 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.239 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.240 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.241 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.242 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.243 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.237 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.244 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2440
@.str.8.236 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.247 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.248 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.249 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.250 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.251 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.252 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.255 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.256 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.266 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.267 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.268 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.273 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.274 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.275 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.276 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.277 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.278 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.279 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.280 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.281 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.288 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.289 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.290 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.291 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.292 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2454
@.str.4.303 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.293 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.294 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.295 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.296 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.297 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2558
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2662
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2665
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2667
@.str.304 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.326 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.311 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.333 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.345 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.314 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.340 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.310 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.350 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.351 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.357 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.358 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.359 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.360 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.305 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.306 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.307 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.308 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.309 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.313 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.330 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.341 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.342 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2289
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2297
@.str.23.352 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.366 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.367 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.368 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.369 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2669
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2699
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2704
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2702
@.str.4.370 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.371 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.372 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.376 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.377 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@kheap__system_heap = dso_local global [1024 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2710
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @kheap__system_heap, i32 0, i32 0), i32 1024 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2716
@.str.400 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.401 = private unnamed_addr constant [61 x i8] c"align / sizeof(void *) >= 1 && (align % sizeof(void *)) == 0\00", align 1
@.str.2.402 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/mempool.c\00", align 1
@.str.3.403 = private unnamed_addr constant [45 x i8] c"\09align must be a multiple of sizeof(void *)\0A\00", align 1
@.str.4.404 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.5.405 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2162
@.str.6.406 = private unnamed_addr constant [50 x i8] c"align == 0 || ((uintptr_t)mem & (align - 1)) == 0\00", align 1
@.str.7.407 = private unnamed_addr constant [40 x i8] c"\09misaligned memory at %p (align = %zu)\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2751
@.str.418 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.429 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.420 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.430 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.419 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.421 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.426 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.427 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.428 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.431 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.432 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3535 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3537, !srcloc !3538
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3539, !srcloc !3540
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3541, !srcloc !3542
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3543, !srcloc !3544
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3545, !srcloc !3546
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3547, !srcloc !3548
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3549, !srcloc !3550
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3551, !srcloc !3552
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3553, !srcloc !3554
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3555, !srcloc !3556
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3557, !srcloc !3558
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3559, !srcloc !3560
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3561, !srcloc !3562
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3563, !srcloc !3564
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3565, !srcloc !3566
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3567, !srcloc !3568
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3569, !srcloc !3570
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #23, !dbg !3571, !srcloc !3572
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #23, !dbg !3573, !srcloc !3574
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #23, !dbg !3575, !srcloc !3576
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3577, !srcloc !3578
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3579, !srcloc !3580
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3581, !srcloc !3582
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3583, !srcloc !3584
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3585, !srcloc !3588
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3589, !srcloc !3590
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3591, !srcloc !3592
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3593, !srcloc !3594
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3595, !srcloc !3596
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3597, !srcloc !3598
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3599, !srcloc !3600
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3601, !srcloc !3602
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3603, !srcloc !3604
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3605, !srcloc !3606
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3607, !srcloc !3608
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3609, !srcloc !3610
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3611, !srcloc !3612
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3613, !srcloc !3614
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3615, !srcloc !3616
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3617, !srcloc !3618
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3619, !srcloc !3620
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3621, !srcloc !3622
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3623, !srcloc !3624
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3625, !srcloc !3626
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3627, !srcloc !3628
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3629, !srcloc !3630
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #23, !dbg !3631, !srcloc !3632
  ret void, !dbg !3633
}

; Function Attrs: noinline nounwind optsize
define internal void @consumer_thread() #1 !dbg !3636 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca i8, align 1
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3656
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3656
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3644, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  %4 = call i32 bitcast (i32 (%struct.zbus_observer.127*, %struct.zbus_channel.128**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3658
  %5 = icmp eq i32 %4, 0, !dbg !3659
  br i1 %5, label %6, label %31, !dbg !3660

6:                                                ; preds = %0, %25
  %7 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3661
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %7, metadata !3644, metadata !DIExpression()), !dbg !3657
  %8 = icmp eq %struct.zbus_channel* %7, bitcast (%struct.zbus_channel.15* @data_ready_chan to %struct.zbus_channel*), !dbg !3661
  br i1 %8, label %10, label %9, !dbg !3664

9:                                                ; preds = %6
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i32 0, i32 0), i32 noundef 23) #24, !dbg !3665
  call void @assert_post_action(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i32 0, i32 0), i32 noundef 23) #24, !dbg !3665
  unreachable, !dbg !3665

10:                                               ; preds = %6
  %11 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 100) #25, !dbg !3667
  %12 = insertvalue [1 x i64] poison, i64 %11, 0, !dbg !3668
  %13 = call i32 bitcast (i32 (%struct.zbus_channel.128*, [1 x i64])* @zbus_chan_claim to i32 (%struct.zbus_channel*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.15* @pkt_chan to %struct.zbus_channel*), [1 x i64] %12) #24, !dbg !3668
  %14 = icmp eq i32 %13, 0, !dbg !3668
  br i1 %14, label %15, label %25, !dbg !3669

15:                                               ; preds = %10
  %16 = tail call fastcc i8* @zbus_chan_msg() #25, !dbg !3670
  call void @llvm.dbg.value(metadata i8* %16, metadata !3638, metadata !DIExpression()), !dbg !3657
  %17 = getelementptr inbounds i8, i8* %16, i32 4, !dbg !3671
  %18 = bitcast i8* %17 to i32*, !dbg !3671
  %19 = load i32, i32* %18, align 4, !dbg !3671
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i32 noundef 87, i32 noundef %19) #24, !dbg !3671
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), metadata !3645, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i1 false, metadata !3650, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3676
  call void @llvm.dbg.value(metadata i32 0, metadata !3651, metadata !DIExpression()), !dbg !3676
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i32 noundef 87, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0)) #24, !dbg !3677
  %20 = bitcast i8* %16 to i8**, !dbg !3681
  %21 = load i8*, i8** %20, align 4, !dbg !3681
  %22 = load i32, i32* %18, align 4, !dbg !3681
  call void @z_log_minimal_hexdump_print(i32 noundef 2, i8* noundef %21, i32 noundef %22) #24, !dbg !3681
  %23 = load i8*, i8** %20, align 4, !dbg !3682
  call void @k_free(i8* noundef %23) #24, !dbg !3683
  store i8* null, i8** %20, align 4, !dbg !3684
  store i32 0, i32* %18, align 4, !dbg !3685
  %24 = call i32 bitcast (i32 (%struct.zbus_channel.128*)* @zbus_chan_finish to i32 (%struct.zbus_channel*)*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.15* @pkt_chan to %struct.zbus_channel*)) #24, !dbg !3686
  br label %25, !dbg !3687

25:                                               ; preds = %15, %10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !3688
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element* undef, metadata !3652, metadata !DIExpression()), !dbg !3689
  store i8 1, i8* %2, align 1, !dbg !3689
  %26 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 250) #25, !dbg !3690
  %27 = insertvalue [1 x i64] poison, i64 %26, 0, !dbg !3691
  %28 = call i32 bitcast (i32 (%struct.zbus_channel.128*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.15* @ack to %struct.zbus_channel*), i8* noundef nonnull %2, [1 x i64] %27) #24, !dbg !3691
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #23, !dbg !3692
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3644, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  %29 = call i32 bitcast (i32 (%struct.zbus_observer.127*, %struct.zbus_channel.128**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3658
  %30 = icmp eq i32 %29, 0, !dbg !3659
  br i1 %30, label %6, label %31, !dbg !3660, !llvm.loop !3693

31:                                               ; preds = %25, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3694
  ret void, !dbg !3694
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3695 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3700, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.value(metadata i64 %0, metadata !3702, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i32 1000, metadata !3707, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i32 10000, metadata !3708, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8 1, metadata !3709, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8 0, metadata !3710, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8 1, metadata !3711, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8 0, metadata !3712, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8 1, metadata !3713, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8 0, metadata !3714, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i64 0, metadata !3715, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i64 0, metadata !3715, metadata !DIExpression()), !dbg !3719
  %2 = mul i64 %0, 10, !dbg !3721
  ret i64 %2, !dbg !3727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @zbus_chan_msg() unnamed_addr #4 !dbg !3728 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* bitcast (%struct.zbus_channel.15* @pkt_chan to %struct.zbus_channel*), metadata !3732, metadata !DIExpression()), !dbg !3733
  %1 = load i8*, i8** getelementptr inbounds (%struct.zbus_channel, %struct.zbus_channel* bitcast (%struct.zbus_channel.15* @pkt_chan to %struct.zbus_channel*), i32 0, i32 3), align 4, !dbg !3734
  ret i8* %1, !dbg !3735
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind optsize
define internal void @filter_cb(%struct.zbus_channel.15* noundef readnone %0) #1 !dbg !3736 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15* %0, metadata !3738, metadata !DIExpression()), !dbg !3743
  %3 = icmp eq %struct.zbus_channel.15* %0, @pkt_chan, !dbg !3744
  br i1 %3, label %5, label %4, !dbg !3747

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.10, i32 0, i32 0), i32 noundef 60) #24, !dbg !3748
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.10, i32 0, i32 0), i32 noundef 60) #24, !dbg !3748
  unreachable, !dbg !3748

5:                                                ; preds = %1
  %6 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.15* noundef nonnull @pkt_chan) #25, !dbg !3750
  call void @llvm.dbg.value(metadata i8* %6, metadata !3739, metadata !DIExpression()), !dbg !3743
  %7 = getelementptr inbounds i8, i8* %6, i32 4, !dbg !3751
  %8 = bitcast i8* %7 to i32*, !dbg !3751
  %9 = load i32, i32* %8, align 4, !dbg !3751
  %10 = and i32 %9, 1, !dbg !3753
  %11 = icmp eq i32 %10, 0, !dbg !3753
  br i1 %11, label %16, label %12, !dbg !3754

12:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* %6, metadata !3739, metadata !DIExpression()), !dbg !3743
  %13 = bitcast i8* %6 to i8**, !dbg !3755
  %14 = load i8*, i8** %13, align 4, !dbg !3755
  %15 = tail call i8* @memset(i8* noundef %14, i32 noundef 0, i32 noundef %9) #24, !dbg !3757
  br label %16, !dbg !3758

16:                                               ; preds = %12, %5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !3759
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element* undef, metadata !3742, metadata !DIExpression()), !dbg !3760
  store i8 1, i8* %2, align 1, !dbg !3760
  %17 = call i32 bitcast (i32 (%struct.zbus_channel.128*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel.15*, i8*, [1 x i64])*)(%struct.zbus_channel.15* noundef nonnull @data_ready_chan, i8* noundef nonnull %2, [1 x i64] zeroinitializer) #24, !dbg !3761
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #23, !dbg !3762
  ret void, !dbg !3762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.15* noundef readonly %0) unnamed_addr #1 !dbg !3763 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.15* %0, metadata !3767, metadata !DIExpression()), !dbg !3768
  %2 = icmp eq %struct.zbus_channel.15* %0, null, !dbg !3769
  br i1 %2, label %3, label %4, !dbg !3772

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #24, !dbg !3773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i32 0, i32 0)) #24, !dbg !3773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #24, !dbg !3773
  unreachable, !dbg !3773

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.zbus_channel.15, %struct.zbus_channel.15* %0, i32 0, i32 3, !dbg !3775
  %6 = load i8*, i8** %5, align 4, !dbg !3775
  ret i8* %6, !dbg !3776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3777 {
  %1 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.15* noundef nonnull @version_chan) #25, !dbg !3782
  call void @llvm.dbg.value(metadata i8* %1, metadata !3779, metadata !DIExpression()), !dbg !3783
  ret void, !dbg !3784
}

; Function Attrs: noinline nounwind optsize
define internal void @producer_thread() #1 !dbg !3785 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct.external_data_msg, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3800
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3800
  call void @llvm.dbg.value(metadata i8 0, metadata !3789, metadata !DIExpression()), !dbg !3801
  %4 = bitcast %struct.external_data_msg* %2 to i8*
  %5 = getelementptr inbounds %struct.external_data_msg, %struct.external_data_msg* %2, i32 0, i32 0
  %6 = getelementptr inbounds %struct.external_data_msg, %struct.external_data_msg* %2, i32 0, i32 1
  br label %8, !dbg !3802

7:                                                ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3803
  ret void, !dbg !3803

8:                                                ; preds = %0, %30
  %9 = phi i32 [ 0, %0 ], [ %10, %30 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3789, metadata !DIExpression()), !dbg !3801
  %10 = add nuw nsw i32 %9, 1, !dbg !3804
  %11 = call i8* @k_malloc(i32 noundef %10) #24, !dbg !3805
  call void @llvm.dbg.value(metadata i8* %11, metadata !3788, metadata !DIExpression()), !dbg !3806
  %12 = icmp eq i8* %11, null, !dbg !3807
  br i1 %12, label %13, label %14, !dbg !3810

13:                                               ; preds = %8
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3.25, i32 0, i32 0), i32 noundef 23) #24, !dbg !3811
  call void @assert_post_action(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3.25, i32 0, i32 0), i32 noundef 23) #24, !dbg !3811
  unreachable, !dbg !3811

14:                                               ; preds = %8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !3813
  call void @llvm.dbg.declare(metadata %struct.external_data_msg* %2, metadata !3791, metadata !DIExpression()), !dbg !3814
  store i8* %11, i8** %5, align 4, !dbg !3815
  store i32 %10, i32* %6, align 4, !dbg !3815
  call void @llvm.dbg.value(metadata i32 0, metadata !3798, metadata !DIExpression()), !dbg !3816
  %15 = trunc i32 %9 to i8
  call void @llvm.dbg.value(metadata i32 0, metadata !3798, metadata !DIExpression()), !dbg !3816
  store i8 %15, i8* %11, align 1, !dbg !3817
  call void @llvm.dbg.value(metadata i32 1, metadata !3798, metadata !DIExpression()), !dbg !3816
  %16 = load i32, i32* %6, align 4, !dbg !3820
  %17 = icmp ugt i32 %16, 1, !dbg !3821
  br i1 %17, label %22, label %18, !dbg !3822, !llvm.loop !3823

18:                                               ; preds = %22, %14
  %19 = call i32 bitcast (i32 (%struct.zbus_channel.128*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.15* @pkt_chan to %struct.zbus_channel*), i8* noundef nonnull %4, [1 x i64] [i64 2500]) #24, !dbg !3825
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3787, metadata !DIExpression(DW_OP_deref)), !dbg !3806
  %20 = call i32 bitcast (i32 (%struct.zbus_observer.127*, %struct.zbus_channel.128**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !3826
  %21 = icmp eq i32 %20, 0, !dbg !3826
  br i1 %21, label %30, label %29, !dbg !3828

22:                                               ; preds = %14, %22
  %23 = phi i32 [ %26, %22 ], [ 1, %14 ]
  %24 = load i8*, i8** %5, align 4, !dbg !3829
  call void @llvm.dbg.value(metadata i32 %23, metadata !3798, metadata !DIExpression()), !dbg !3816
  %25 = getelementptr inbounds i8, i8* %24, i32 %23, !dbg !3830
  store i8 %15, i8* %25, align 1, !dbg !3817
  %26 = add nuw nsw i32 %23, 1, !dbg !3831
  call void @llvm.dbg.value(metadata i32 %26, metadata !3798, metadata !DIExpression()), !dbg !3816
  %27 = load i32, i32* %6, align 4, !dbg !3820
  %28 = icmp ult i32 %26, %27, !dbg !3821
  br i1 %28, label %22, label %18, !dbg !3822, !llvm.loop !3823

29:                                               ; preds = %18
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef 69) #24, !dbg !3832
  br label %30, !dbg !3838

30:                                               ; preds = %29, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !3839
  call void @llvm.dbg.value(metadata i32 %10, metadata !3789, metadata !DIExpression()), !dbg !3801
  %31 = icmp eq i32 %10, 16, !dbg !3840
  br i1 %31, label %7, label %8, !dbg !3802, !llvm.loop !3841
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3843 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3858, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %0, metadata !3854, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %1, metadata !3855, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %2, metadata !3856, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %3, metadata !3857, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %0, metadata !3859, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %0, metadata !3860, metadata !DIExpression()), !dbg !3921
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3922
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3922
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3863, metadata !DIExpression()), !dbg !3923
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3924
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3924
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3865, metadata !DIExpression()), !dbg !3925
  call void @llvm.dbg.value(metadata i32 0, metadata !3866, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 0, metadata !3867, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 0, metadata !3868, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 -1, metadata !3869, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 0, metadata !3872, metadata !DIExpression()), !dbg !3921
  %12 = and i32 %2, 4, !dbg !3926
  %13 = icmp eq i32 %12, 0, !dbg !3927
  call void @llvm.dbg.value(metadata i1 %13, metadata !3873, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3921
  %14 = lshr i32 %2, 3, !dbg !3928
  %15 = and i32 %14, 7, !dbg !3928
  %16 = add nuw nsw i32 %15, 1, !dbg !3929
  call void @llvm.dbg.value(metadata i32 %16, metadata !3874, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 0, metadata !3875, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %0, metadata !3876, metadata !DIExpression()), !dbg !3921
  %17 = ptrtoint i8* %0 to i32, !dbg !3930
  %18 = and i32 %17, 3, !dbg !3932
  %19 = icmp eq i32 %18, 0, !dbg !3932
  br i1 %19, label %20, label %320, !dbg !3933

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3934
  call void @llvm.dbg.value(metadata i8* %21, metadata !3860, metadata !DIExpression()), !dbg !3921
  %22 = icmp eq i8* %0, null, !dbg !3935
  %23 = and i32 %1, 7, !dbg !3937
  %24 = sub nuw nsw i32 8, %23, !dbg !3937
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3937
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3937
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3937
  call void @llvm.dbg.value(metadata i32 %27, metadata !3855, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %26, metadata !3860, metadata !DIExpression()), !dbg !3921
  br i1 %22, label %33, label %28, !dbg !3938

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3940
  %30 = sub i32 4, %17, !dbg !3940
  %31 = add i32 %30, %29, !dbg !3941
  %32 = icmp ugt i32 %31, %27, !dbg !3942
  br i1 %32, label %320, label %33, !dbg !3943

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3944
  call void @llvm.dbg.value(metadata i8* %34, metadata !3857, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %3, metadata !3871, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 4, metadata !3862, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 4, metadata !3861, metadata !DIExpression()), !dbg !3921
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3945

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3858, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %42, metadata !3857, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %43, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %44, metadata !3861, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %45, metadata !3862, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %72, metadata !3869, metadata !DIExpression()), !dbg !3921
  br i1 %46, label %73, label %47, !dbg !3946

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3947
  %49 = zext i1 %48 to i32, !dbg !3951
  %50 = add nsw i32 %72, %49, !dbg !3951
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3951
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3951
  call void @llvm.dbg.value(metadata i32 %52, metadata !3861, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %51, metadata !3862, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 poison, metadata !3872, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %50, metadata !3869, metadata !DIExpression()), !dbg !3921
  br label %53, !dbg !3952

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3858, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %40, metadata !3857, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %58, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %57, metadata !3861, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %56, metadata !3862, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 poison, metadata !3872, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %54, metadata !3869, metadata !DIExpression()), !dbg !3921
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3953
  call void @llvm.dbg.value(metadata i8* %60, metadata !3857, metadata !DIExpression()), !dbg !3921
  %61 = load i8, i8* %60, align 1, !dbg !3955
  %62 = icmp eq i8 %61, 0, !dbg !3956
  br i1 %62, label %226, label %63, !dbg !3957, !llvm.loop !3958

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3946

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3961

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3872, metadata !DIExpression()), !dbg !3921
  %75 = add nsw i32 %72, -1, !dbg !3962
  call void @llvm.dbg.value(metadata i32 %75, metadata !3869, metadata !DIExpression()), !dbg !3921
  br label %53, !dbg !3963

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3964

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3862, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 4, metadata !3861, metadata !DIExpression()), !dbg !3921
  br label %53, !dbg !3965

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3862, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 4, metadata !3861, metadata !DIExpression()), !dbg !3921
  br label %53, !dbg !3966

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3967
  %81 = icmp eq i8 %80, 108, !dbg !3969
  br i1 %81, label %82, label %109, !dbg !3970

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3971
  %84 = load i8, i8* %83, align 1, !dbg !3971
  %85 = icmp eq i8 %84, 108, !dbg !3974
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3975
  %89 = add i32 %88, 7, !dbg !3975
  %90 = and i32 %89, -8, !dbg !3975
  %91 = inttoptr i32 %90 to i8*, !dbg !3975
  %92 = inttoptr i32 %90 to double*, !dbg !3975
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3975
  %94 = load double, double* %92, align 8, !dbg !3975
  call void @llvm.dbg.value(metadata i8* %93, metadata !3858, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 8, metadata !3861, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 8, metadata !3862, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata double %94, metadata !3889, metadata !DIExpression()), !dbg !3977
  %95 = ptrtoint i8* %43 to i32, !dbg !3978
  %96 = add i32 %95, 7, !dbg !3978
  %97 = and i32 %96, -8, !dbg !3978
  %98 = inttoptr i32 %97 to i8*, !dbg !3979
  call void @llvm.dbg.value(metadata i8* %98, metadata !3860, metadata !DIExpression()), !dbg !3921
  br i1 %22, label %104, label %99, !dbg !3980

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3981
  %101 = icmp ugt i32 %100, %196, !dbg !3985
  br i1 %101, label %320, label %102, !dbg !3986

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3987
  store double %94, double* %103, align 8, !dbg !3987
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3990
  call void @llvm.dbg.value(metadata i8* %105, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 poison, metadata !3872, metadata !DIExpression()), !dbg !3921
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3872, metadata !DIExpression()), !dbg !3921
  br label %53, !dbg !3991

107:                                              ; preds = %73, %73
  br label %109, !dbg !3992

108:                                              ; preds = %73
  br label %109, !dbg !3992

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3921
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3921
  call void @llvm.dbg.value(metadata i32 %113, metadata !3861, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %112, metadata !3862, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 poison, metadata !3875, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 poison, metadata !3872, metadata !DIExpression()), !dbg !3921
  %114 = ptrtoint i8* %43 to i32, !dbg !3992
  %115 = add i32 %114, -1, !dbg !3992
  %116 = add i32 %115, %112, !dbg !3992
  %117 = sub i32 0, %112, !dbg !3992
  %118 = and i32 %116, %117, !dbg !3992
  %119 = inttoptr i32 %118 to i8*, !dbg !3993
  call void @llvm.dbg.value(metadata i8* %119, metadata !3860, metadata !DIExpression()), !dbg !3921
  br i1 %22, label %124, label %120, !dbg !3994

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3996
  %122 = add i32 %121, %118, !dbg !3997
  %123 = icmp ugt i32 %122, %196, !dbg !3998
  br i1 %123, label %320, label %124, !dbg !3999

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4000

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3993
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4001
  call void @llvm.dbg.value(metadata i8* %127, metadata !3858, metadata !DIExpression()), !dbg !3921
  %128 = bitcast i8* %41 to i8**, !dbg !4001
  %129 = load i8*, i8** %128, align 4, !dbg !4001
  call void @llvm.dbg.value(metadata i8* %129, metadata !3871, metadata !DIExpression()), !dbg !3921
  br label %130, !dbg !4002

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3921
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4003
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3921
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4004
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3921
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3921
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3921
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3921
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3921
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3921
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4005
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3858, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %142, metadata !3855, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %141, metadata !3857, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %140, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %139, metadata !3861, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %138, metadata !3862, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %137, metadata !3866, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %136, metadata !3874, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %135, metadata !3867, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 poison, metadata !3872, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %133, metadata !3871, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %132, metadata !3869, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %131, metadata !3868, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.label(metadata !3920), !dbg !4007
  br i1 %22, label %146, label %144, !dbg !4008

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4009
  store i8* %133, i8** %145, align 4, !dbg !4012
  br label %146, !dbg !4013

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %147, metadata !3874, metadata !DIExpression()), !dbg !3921
  %148 = icmp sgt i32 %136, 0, !dbg !4015
  br i1 %148, label %152, label %149, !dbg !4016

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #25, !dbg !4017
  %151 = zext i1 %150 to i32, !dbg !4017
  br label %152, !dbg !4016

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4016
  %154 = icmp eq i32 %153, 0, !dbg !4016
  call void @llvm.dbg.value(metadata i1 %154, metadata !3898, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4018
  call void @llvm.dbg.value(metadata i1 %36, metadata !3901, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4018
  %155 = or i1 %36, %154, !dbg !4019
  br i1 %155, label %156, label %192, !dbg !4019

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4020
  %158 = sub i32 %157, %17, !dbg !4020
  %159 = lshr i32 %158, 2, !dbg !4021
  call void @llvm.dbg.value(metadata i32 %159, metadata !3902, metadata !DIExpression()), !dbg !4022
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4023
  br i1 %161, label %162, label %163, !dbg !4023

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 635) #24, !dbg !4025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.33, i32 0, i32 0)) #24, !dbg !4025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 635) #24, !dbg !4025
  unreachable, !dbg !4025

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4030
  br i1 %164, label %165, label %166, !dbg !4032

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 640) #24, !dbg !4033
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.34, i32 0, i32 0)) #24, !dbg !4033
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 640) #24, !dbg !4033
  unreachable, !dbg !4033

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4038

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4039
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4042
  store i8 %168, i8* %169, align 1, !dbg !4043
  %170 = trunc i32 %132 to i8, !dbg !4044
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4045
  store i8 %170, i8* %171, align 1, !dbg !4046
  br i1 %154, label %175, label %172, !dbg !4047

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4048
  store i8 %173, i8* %169, align 1, !dbg !4048
  %174 = add i32 %131, 1, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %174, metadata !3868, metadata !DIExpression()), !dbg !3921
  br label %187, !dbg !4052

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4053
  call void @llvm.dbg.value(metadata i32 %176, metadata !3867, metadata !DIExpression()), !dbg !3921
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4055

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4056
  call void @llvm.dbg.value(metadata i32 %179, metadata !3855, metadata !DIExpression()), !dbg !3921
  br label %187, !dbg !4059

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4060

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %182, metadata !3855, metadata !DIExpression()), !dbg !3921
  br label %187, !dbg !4064

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #24, !dbg !4065
  %185 = add i32 %142, 2, !dbg !4067
  %186 = add i32 %185, %184, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %186, metadata !3855, metadata !DIExpression()), !dbg !3921
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3921
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3921
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3921
  call void @llvm.dbg.value(metadata i32 %190, metadata !3855, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %189, metadata !3867, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %188, metadata !3868, metadata !DIExpression()), !dbg !3921
  %191 = add nuw nsw i32 %137, 1, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %191, metadata !3866, metadata !DIExpression()), !dbg !3921
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3921
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4004
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3921
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4005
  call void @llvm.dbg.value(metadata i32 %196, metadata !3855, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %195, metadata !3866, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %194, metadata !3867, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %193, metadata !3868, metadata !DIExpression()), !dbg !3921
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4070
  call void @llvm.dbg.value(metadata i8* %197, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %143, metadata !3858, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %141, metadata !3857, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %139, metadata !3861, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %138, metadata !3862, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 poison, metadata !3875, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 poison, metadata !3872, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %132, metadata !3869, metadata !DIExpression()), !dbg !3921
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3953
  call void @llvm.dbg.value(metadata i8* %198, metadata !3857, metadata !DIExpression()), !dbg !3921
  %199 = load i8, i8* %198, align 1, !dbg !3955
  %200 = icmp eq i8 %199, 0, !dbg !3956
  br i1 %200, label %226, label %63, !dbg !3957

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4071

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4072
  call void @llvm.dbg.value(metadata i8* %203, metadata !3858, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 undef, metadata !3905, metadata !DIExpression()), !dbg !4073
  br i1 %22, label %219, label %204, !dbg !4074

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4072
  %206 = load i32, i32* %205, align 4, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %206, metadata !3905, metadata !DIExpression()), !dbg !4073
  %207 = inttoptr i32 %118 to i32*, !dbg !4075
  store i32 %206, i32* %207, align 4, !dbg !4078
  br label %219, !dbg !4079

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4080
  %210 = add i32 %209, 7, !dbg !4080
  %211 = and i32 %210, -8, !dbg !4080
  %212 = inttoptr i32 %211 to i8*, !dbg !4080
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4080
  call void @llvm.dbg.value(metadata i8* %213, metadata !3858, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i64 undef, metadata !3911, metadata !DIExpression()), !dbg !4081
  br i1 %22, label %219, label %214, !dbg !4082

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4080
  %216 = load i64, i64* %215, align 8, !dbg !4080
  call void @llvm.dbg.value(metadata i64 %216, metadata !3911, metadata !DIExpression()), !dbg !4081
  %217 = inttoptr i32 %118 to i64*, !dbg !4083
  store i64 %216, i64* %217, align 8, !dbg !4088
  br label %219, !dbg !4089

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 709) #24, !dbg !4090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.35, i32 0, i32 0), i32 noundef %113) #24, !dbg !4090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 709) #24, !dbg !4090
  unreachable, !dbg !4090

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4095
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4095
  call void @llvm.dbg.value(metadata i8* %221, metadata !3858, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %40, metadata !3857, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %222, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %113, metadata !3861, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %112, metadata !3862, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 poison, metadata !3875, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 poison, metadata !3872, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %72, metadata !3869, metadata !DIExpression()), !dbg !3921
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3953
  call void @llvm.dbg.value(metadata i8* %223, metadata !3857, metadata !DIExpression()), !dbg !3921
  %224 = load i8, i8* %223, align 1, !dbg !3955
  %225 = icmp eq i8 %224, 0, !dbg !3956
  br i1 %225, label %226, label %38, !dbg !3957

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4096
  %228 = ptrtoint i8* %227 to i32, !dbg !4097
  %229 = sub i32 %228, %17, !dbg !4097
  %230 = lshr i32 %229, 2, !dbg !4099
  %231 = icmp ugt i32 %229, 1023, !dbg !4100
  br i1 %231, label %232, label %233, !dbg !4101

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 721) #24, !dbg !4102
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.36, i32 0, i32 0)) #24, !dbg !4102
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 721) #24, !dbg !4102
  unreachable, !dbg !4102

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4107

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4108
  %236 = add i32 %235, %229, !dbg !4111
  br label %320, !dbg !4112

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4113
  store i8 %238, i8* %0, align 1, !dbg !4114
  %239 = trunc i32 %194 to i8, !dbg !4115
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4117
  store i8 %240, i8* %242, align 1, !dbg !4119
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4120
  store i8 %241, i8* %243, align 1, !dbg !4121
  %244 = trunc i32 %193 to i8, !dbg !4122
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4123
  store i8 %244, i8* %245, align 1, !dbg !4124
  %246 = icmp eq i32 %193, 0, !dbg !4125
  %247 = xor i1 %246, true, !dbg !4126
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4126
  call void @llvm.dbg.value(metadata i8* %227, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 0, metadata !3870, metadata !DIExpression()), !dbg !3921
  br i1 %249, label %250, label %269, !dbg !4126

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4127

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %254, metadata !3870, metadata !DIExpression()), !dbg !3921
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4128
  %256 = load i8, i8* %255, align 1, !dbg !4128
  %257 = icmp sgt i8 %256, -1, !dbg !4130
  br i1 %257, label %265, label %258, !dbg !4131

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3914, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4132
  %259 = ptrtoint i8* %253 to i32, !dbg !4133
  %260 = add i32 %251, %259, !dbg !4135
  %261 = icmp ugt i32 %260, %196, !dbg !4136
  br i1 %261, label %320, label %262, !dbg !4137

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4138
  call void @llvm.dbg.value(metadata i8 %263, metadata !3914, metadata !DIExpression()), !dbg !4132
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4139
  call void @llvm.dbg.value(metadata i8* %264, metadata !3860, metadata !DIExpression()), !dbg !3921
  store i8 %263, i8* %253, align 1, !dbg !4140
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4070
  call void @llvm.dbg.value(metadata i8* %266, metadata !3860, metadata !DIExpression()), !dbg !3921
  %267 = add nuw i32 %254, 1, !dbg !4141
  call void @llvm.dbg.value(metadata i32 %267, metadata !3870, metadata !DIExpression()), !dbg !3921
  %268 = icmp eq i32 %267, %195, !dbg !4142
  br i1 %268, label %269, label %252, !dbg !4127, !llvm.loop !4143

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4070
  call void @llvm.dbg.value(metadata i8* %270, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 0, metadata !3870, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %133, metadata !3871, metadata !DIExpression()), !dbg !3921
  %271 = icmp eq i32 %195, 0, !dbg !4145
  br i1 %271, label %316, label %272, !dbg !4148

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4148

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %276, metadata !3871, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %277, metadata !3870, metadata !DIExpression()), !dbg !3921
  br i1 %246, label %282, label %278, !dbg !4149

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4152
  %280 = load i8, i8* %279, align 1, !dbg !4152
  %281 = icmp sgt i8 %280, -1, !dbg !4153
  br i1 %281, label %282, label %311, !dbg !4154

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4155

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3861, metadata !DIExpression()), !dbg !3921
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4156
  %285 = load i8, i8* %284, align 1, !dbg !4156
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4159
  call void @llvm.dbg.value(metadata i8* %286, metadata !3860, metadata !DIExpression()), !dbg !3921
  store i8 %285, i8* %275, align 1, !dbg !4160
  br label %297, !dbg !4161

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4162
  %289 = load i8, i8* %288, align 1, !dbg !4162
  %290 = zext i8 %289 to i32, !dbg !4162
  %291 = shl nuw nsw i32 %290, 2, !dbg !4164
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4165
  %293 = bitcast i8* %292 to i8**, !dbg !4166
  %294 = load i8*, i8** %293, align 4, !dbg !4166
  call void @llvm.dbg.value(metadata i8* %294, metadata !3871, metadata !DIExpression()), !dbg !3921
  store i8* null, i8** %293, align 4, !dbg !4167
  %295 = tail call i32 @strlen(i8* noundef %294) #24, !dbg !4168
  %296 = add i32 %295, 1, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %296, metadata !3861, metadata !DIExpression()), !dbg !3921
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3921
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4170
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3921
  call void @llvm.dbg.value(metadata i8* %300, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %299, metadata !3861, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %298, metadata !3871, metadata !DIExpression()), !dbg !3921
  %301 = ptrtoint i8* %300 to i32, !dbg !4171
  %302 = add i32 %273, %299, !dbg !4173
  %303 = add i32 %302, %301, !dbg !4174
  %304 = icmp ugt i32 %303, %196, !dbg !4175
  br i1 %304, label %320, label %305, !dbg !4176

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4177
  %307 = load i8, i8* %306, align 1, !dbg !4177
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4178
  call void @llvm.dbg.value(metadata i8* %308, metadata !3860, metadata !DIExpression()), !dbg !3921
  store i8 %307, i8* %300, align 1, !dbg !4179
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #24, !dbg !4180
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4181
  call void @llvm.dbg.value(metadata i8* %310, metadata !3860, metadata !DIExpression()), !dbg !3921
  br label %311, !dbg !4182

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4183
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3921
  call void @llvm.dbg.value(metadata i8* %313, metadata !3860, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8* %312, metadata !3871, metadata !DIExpression()), !dbg !3921
  %314 = add nuw i32 %277, 1, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %314, metadata !3870, metadata !DIExpression()), !dbg !3921
  %315 = icmp eq i32 %314, %195, !dbg !4145
  br i1 %315, label %316, label %274, !dbg !4148, !llvm.loop !4185

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4070
  %318 = ptrtoint i8* %317 to i32, !dbg !4187
  %319 = sub i32 %318, %17, !dbg !4187
  br label %320, !dbg !4188

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4189
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4189
  ret i32 %321, !dbg !4189
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4190 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4194, metadata !DIExpression()), !dbg !4195
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #25, !dbg !4196
  ret i1 %2, !dbg !4197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4198 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4203, metadata !DIExpression()), !dbg !4204
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4205
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4206
  %4 = and i1 %2, %3, !dbg !4206
  ret i1 %4, !dbg !4207
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4208 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4212, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %1, metadata !4213, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %2, metadata !4214, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i8* %3, metadata !4215, metadata !DIExpression()), !dbg !4218
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4219
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4219
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4216, metadata !DIExpression()), !dbg !4220
  call void @llvm.va_start(i8* nonnull %6), !dbg !4221
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4222
  %8 = load i32, i32* %7, align 4, !dbg !4222
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4222
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #25, !dbg !4222
  call void @llvm.dbg.value(metadata i32 %10, metadata !4217, metadata !DIExpression()), !dbg !4218
  call void @llvm.va_end(i8* nonnull %6), !dbg !4223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4224
  ret i32 %10, !dbg !4225
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4226 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4238, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4239, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata i8* %2, metadata !4240, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata i8* %3, metadata !4241, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata i8* %3, metadata !4242, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata i8* %3, metadata !4243, metadata !DIExpression()), !dbg !4257
  %5 = icmp eq i8* %3, null, !dbg !4258
  br i1 %5, label %45, label %6, !dbg !4260

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4252, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4257
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4261
  %8 = load i8, i8* %7, align 1, !dbg !4261
  %9 = zext i8 %8 to i32, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %9, metadata !4253, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata i8 undef, metadata !4254, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4257
  call void @llvm.dbg.value(metadata i8 undef, metadata !4255, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4257
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4257
  call void @llvm.dbg.value(metadata i32 0, metadata !4251, metadata !DIExpression()), !dbg !4257
  %10 = icmp eq i8 %8, 0, !dbg !4263
  br i1 %10, label %39, label %11, !dbg !4266

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4267
  call void @llvm.dbg.value(metadata i8 %12, metadata !4252, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4257
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4257
  %13 = zext i8 %12 to i32, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %13, metadata !4252, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4257
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4257
  %14 = shl nuw nsw i32 %13, 2, !dbg !4269
  call void @llvm.dbg.value(metadata i32 %14, metadata !4252, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4257
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4270
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4257
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4271
  %17 = load i8, i8* %16, align 1, !dbg !4271
  call void @llvm.dbg.value(metadata i8 %17, metadata !4254, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4257
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4257
  %18 = zext i8 %17 to i32, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %18, metadata !4254, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4257
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4273
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4257
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4274
  %21 = load i8, i8* %20, align 1, !dbg !4274
  call void @llvm.dbg.value(metadata i8 %21, metadata !4255, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4257
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4257
  %22 = zext i8 %21 to i32, !dbg !4275
  call void @llvm.dbg.value(metadata i32 %22, metadata !4255, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4257
  %23 = shl nuw nsw i32 %22, 1, !dbg !4276
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4257
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4277
  call void @llvm.dbg.value(metadata i8* %24, metadata !4249, metadata !DIExpression()), !dbg !4257
  br label %25, !dbg !4266

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4249, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.value(metadata i32 %27, metadata !4251, metadata !DIExpression()), !dbg !4257
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4278
  call void @llvm.dbg.value(metadata i8* %28, metadata !4249, metadata !DIExpression()), !dbg !4257
  %29 = load i8, i8* %26, align 1, !dbg !4280
  %30 = zext i8 %29 to i32, !dbg !4280
  call void @llvm.dbg.value(metadata i32 %30, metadata !4256, metadata !DIExpression()), !dbg !4257
  %31 = shl nuw nsw i32 %30, 2, !dbg !4281
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4282
  %33 = bitcast i8* %32 to i8**, !dbg !4283
  call void @llvm.dbg.value(metadata i8** %33, metadata !4250, metadata !DIExpression()), !dbg !4257
  store i8* %28, i8** %33, align 4, !dbg !4284
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #24, !dbg !4285
  %35 = add i32 %34, 1, !dbg !4286
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4287
  call void @llvm.dbg.value(metadata i8* %36, metadata !4249, metadata !DIExpression()), !dbg !4257
  %37 = add nuw nsw i32 %27, 1, !dbg !4288
  call void @llvm.dbg.value(metadata i32 %37, metadata !4251, metadata !DIExpression()), !dbg !4257
  %38 = icmp eq i32 %37, %9, !dbg !4263
  br i1 %38, label %39, label %25, !dbg !4266, !llvm.loop !4289

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4291
  call void @llvm.dbg.value(metadata i8* %40, metadata !4242, metadata !DIExpression()), !dbg !4257
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4292
  %42 = bitcast i8* %41 to i8**, !dbg !4292
  %43 = load i8*, i8** %42, align 1, !dbg !4292
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #25, !dbg !4293
  br label %45, !dbg !4294

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4257
  ret i32 %46, !dbg !4295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4296 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4300, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4301, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i8* %2, metadata !4302, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i8* %3, metadata !4303, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i8* %4, metadata !4304, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i8* %4, metadata !4305, metadata !DIExpression()), !dbg !4310
  %6 = ptrtoint i8* %4 to i32, !dbg !4311
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4311
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #24, !dbg !4311
  ret i32 %8, !dbg !4312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !4313 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4317, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i32 %1, metadata !4318, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i8 0, metadata !4320, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i32 0, metadata !4321, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i8 poison, metadata !4320, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i8* %0, metadata !4317, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4322
  %3 = load i8, i8* %0, align 1, !dbg !4323
  call void @llvm.dbg.value(metadata i8 %3, metadata !4319, metadata !DIExpression()), !dbg !4322
  %4 = icmp eq i8 %3, 0, !dbg !4324
  br i1 %4, label %29, label %5, !dbg !4325

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4326
  call void @llvm.dbg.value(metadata i32 %8, metadata !4321, metadata !DIExpression()), !dbg !4322
  br i1 %9, label %11, label %22, !dbg !4327

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4329
  br i1 %12, label %13, label %17, !dbg !4333

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4334
  br i1 %14, label %29, label %15, !dbg !4337

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !4338
  br i1 %16, label %29, label %22, !dbg !4340

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !4341
  %19 = xor i1 %18, true, !dbg !4343
  %20 = zext i1 %18 to i32, !dbg !4343
  %21 = add nsw i32 %8, %20, !dbg !4343
  br label %22, !dbg !4343

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4322
  call void @llvm.dbg.value(metadata i32 %24, metadata !4321, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i8 poison, metadata !4320, metadata !DIExpression()), !dbg !4322
  %25 = icmp eq i8 %6, 37, !dbg !4344
  %26 = xor i1 %25, %23, !dbg !4346
  call void @llvm.dbg.value(metadata i8* %10, metadata !4317, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i8* %10, metadata !4317, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4322
  %27 = load i8, i8* %10, align 1, !dbg !4323
  call void @llvm.dbg.value(metadata i8 %27, metadata !4319, metadata !DIExpression()), !dbg !4322
  %28 = icmp eq i8 %27, 0, !dbg !4324
  br i1 %28, label %29, label %5, !dbg !4325, !llvm.loop !4347

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4322
  ret i1 %30, !dbg !4349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4350 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4354, metadata !DIExpression()), !dbg !4355
  %2 = add i8 %0, -64, !dbg !4356
  %3 = icmp ult i8 %2, 59, !dbg !4356
  ret i1 %3, !dbg !4357
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4358 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4366, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %1, metadata !4367, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4368, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8* %3, metadata !4369, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %4, metadata !4370, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i16* %5, metadata !4371, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %6, metadata !4372, metadata !DIExpression()), !dbg !4435
  %11 = icmp eq i8* %0, null, !dbg !4436
  br i1 %11, label %12, label %13, !dbg !4439

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 916) #24, !dbg !4440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 916) #24, !dbg !4440
  unreachable, !dbg !4440

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4373, metadata !DIExpression()), !dbg !4435
  %14 = bitcast i8* %0 to i32*, !dbg !4442
  call void @llvm.dbg.value(metadata i32* %14, metadata !4374, metadata !DIExpression()), !dbg !4435
  %15 = and i32 %4, 8, !dbg !4443
  %16 = icmp eq i32 %15, 0, !dbg !4444
  call void @llvm.dbg.value(metadata i1 %16, metadata !4378, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4435
  call void @llvm.dbg.value(metadata i8* %0, metadata !4381, metadata !DIExpression()), !dbg !4435
  %17 = icmp eq i32 %1, 0, !dbg !4445
  br i1 %17, label %18, label %20, !dbg !4446

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #25, !dbg !4447
  br label %20, !dbg !4446

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4446
  call void @llvm.dbg.value(metadata i32 %21, metadata !4367, metadata !DIExpression()), !dbg !4435
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4448
  %23 = load i8, i8* %22, align 1, !dbg !4448
  %24 = zext i8 %23 to i32, !dbg !4449
  call void @llvm.dbg.value(metadata i32 %24, metadata !4376, metadata !DIExpression()), !dbg !4435
  %25 = icmp ne i8 %23, 0, !dbg !4450
  %26 = and i32 %4, 1, !dbg !4451
  %27 = icmp ne i32 %26, 0, !dbg !4451
  %28 = and i1 %27, %25, !dbg !4451
  call void @llvm.dbg.value(metadata i1 %28, metadata !4380, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4435
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4452
  %30 = load i8, i8* %29, align 1, !dbg !4452
  %31 = zext i8 %30 to i32, !dbg !4453
  call void @llvm.dbg.value(metadata i32 %31, metadata !4377, metadata !DIExpression()), !dbg !4435
  %32 = icmp ne i8 %30, 0, !dbg !4454
  %33 = and i32 %4, 2, !dbg !4455
  %34 = icmp ne i32 %33, 0, !dbg !4455
  %35 = and i1 %34, %32, !dbg !4455
  call void @llvm.dbg.value(metadata i1 %35, metadata !4379, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4435
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4456
  br i1 %36, label %41, label %37, !dbg !4456

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4458
  br i1 %38, label %287, label %39, !dbg !4461

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #24, !dbg !4462
  br label %287, !dbg !4464

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4465
  %43 = zext i8 %42 to i32, !dbg !4466
  %44 = shl nuw nsw i32 %43, 2, !dbg !4467
  call void @llvm.dbg.value(metadata i32 %44, metadata !4375, metadata !DIExpression()), !dbg !4435
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4468
  %46 = bitcast i8* %45 to i8**, !dbg !4469
  %47 = load i8*, i8** %46, align 4, !dbg !4469
  call void @llvm.dbg.value(metadata i8* %47, metadata !4384, metadata !DIExpression()), !dbg !4435
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4470
  call void @llvm.dbg.value(metadata i8* %48, metadata !4385, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 0, metadata !4386, metadata !DIExpression()), !dbg !4435
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4471
  br i1 %49, label %50, label %135, !dbg !4472

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4383, metadata !DIExpression()), !dbg !4435
  br i1 %28, label %51, label %76, !dbg !4473

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4383, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8* %48, metadata !4385, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 0, metadata !4386, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 0, metadata !4387, metadata !DIExpression()), !dbg !4474
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4475

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4383, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8* %55, metadata !4385, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %56, metadata !4386, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %57, metadata !4387, metadata !DIExpression()), !dbg !4474
  %58 = load i8, i8* %55, align 1, !dbg !4476
  %59 = zext i8 %58 to i32, !dbg !4477
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4477
  %61 = bitcast i32* %60 to i8**, !dbg !4478
  %62 = load i8*, i8** %61, align 4, !dbg !4478
  call void @llvm.dbg.value(metadata i8* %62, metadata !4393, metadata !DIExpression()), !dbg !4479
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #25, !dbg !4480
  call void @llvm.dbg.value(metadata i32 %63, metadata !4396, metadata !DIExpression()), !dbg !4479
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4481
  br i1 %65, label %66, label %70, !dbg !4481

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4483
  %68 = add nuw i32 %56, 1, !dbg !4485
  call void @llvm.dbg.value(metadata i32 %68, metadata !4386, metadata !DIExpression()), !dbg !4435
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4486
  store i16 %67, i16* %69, align 2, !dbg !4487
  br label %70, !dbg !4488

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4435
  call void @llvm.dbg.value(metadata i32 %71, metadata !4386, metadata !DIExpression()), !dbg !4435
  %72 = add nsw i32 %63, %54, !dbg !4489
  call void @llvm.dbg.value(metadata i32 %72, metadata !4383, metadata !DIExpression()), !dbg !4435
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4490
  call void @llvm.dbg.value(metadata i8* %73, metadata !4385, metadata !DIExpression()), !dbg !4435
  %74 = add nuw nsw i32 %57, 1, !dbg !4491
  call void @llvm.dbg.value(metadata i32 %74, metadata !4387, metadata !DIExpression()), !dbg !4474
  %75 = icmp eq i32 %74, %24, !dbg !4492
  br i1 %75, label %82, label %53, !dbg !4475, !llvm.loop !4493

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4495
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4495
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4495
  br label %82, !dbg !4495

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4498
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4435
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4499
  call void @llvm.dbg.value(metadata i1 undef, metadata !4397, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4500
  call void @llvm.dbg.value(metadata i32 0, metadata !4398, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.value(metadata i32 %85, metadata !4383, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8* %84, metadata !4385, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %83, metadata !4386, metadata !DIExpression()), !dbg !4435
  %86 = icmp eq i8 %30, 0, !dbg !4502
  br i1 %86, label %287, label %87, !dbg !4503

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4504
  %89 = icmp eq i32 %88, 0, !dbg !4505
  call void @llvm.dbg.value(metadata i1 %89, metadata !4397, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4500
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4503

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4383, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8* %96, metadata !4385, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %97, metadata !4386, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %98, metadata !4398, metadata !DIExpression()), !dbg !4501
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4506
  call void @llvm.dbg.value(metadata i8* %99, metadata !4385, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8 undef, metadata !4400, metadata !DIExpression()), !dbg !4507
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4508
  call void @llvm.dbg.value(metadata i8* %100, metadata !4385, metadata !DIExpression()), !dbg !4435
  %101 = load i8, i8* %99, align 1, !dbg !4509
  call void @llvm.dbg.value(metadata i8 %101, metadata !4403, metadata !DIExpression()), !dbg !4507
  %102 = zext i8 %101 to i32, !dbg !4510
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4510
  %104 = bitcast i32* %103 to i8**, !dbg !4511
  %105 = load i8*, i8** %104, align 4, !dbg !4511
  call void @llvm.dbg.value(metadata i8* %105, metadata !4404, metadata !DIExpression()), !dbg !4507
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #25, !dbg !4512
  call void @llvm.dbg.value(metadata i1 %106, metadata !4405, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4507
  br i1 %16, label %113, label %107, !dbg !4513

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4515
  call void @llvm.dbg.value(metadata i8 %108, metadata !4400, metadata !DIExpression()), !dbg !4507
  %109 = zext i8 %108 to i32, !dbg !4516
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #25, !dbg !4517
  br i1 %110, label %111, label %113, !dbg !4518

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.38, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #24, !dbg !4519
  %112 = add nsw i32 %95, -2, !dbg !4525
  call void @llvm.dbg.value(metadata i32 %112, metadata !4383, metadata !DIExpression()), !dbg !4435
  br label %130, !dbg !4526

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4527

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4528

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4530
  call void @llvm.dbg.value(metadata i32 %116, metadata !4383, metadata !DIExpression()), !dbg !4435
  br label %130, !dbg !4533

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4534

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4431), !dbg !4535
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #25, !dbg !4536
  call void @llvm.dbg.value(metadata i32 %119, metadata !4406, metadata !DIExpression()), !dbg !4507
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4537
  br i1 %121, label %122, label %126, !dbg !4537

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4539
  %124 = add nuw i32 %97, 1, !dbg !4541
  call void @llvm.dbg.value(metadata i32 %124, metadata !4386, metadata !DIExpression()), !dbg !4435
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4542
  store i16 %123, i16* %125, align 2, !dbg !4543
  br label %126, !dbg !4544

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4435
  call void @llvm.dbg.value(metadata i32 %127, metadata !4386, metadata !DIExpression()), !dbg !4435
  %128 = add i32 %95, -1, !dbg !4545
  %129 = add i32 %128, %119, !dbg !4546
  call void @llvm.dbg.value(metadata i32 %129, metadata !4383, metadata !DIExpression()), !dbg !4435
  br label %130, !dbg !4547

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4435
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4507
  call void @llvm.dbg.value(metadata i32 %132, metadata !4383, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %131, metadata !4386, metadata !DIExpression()), !dbg !4435
  %133 = add nuw nsw i32 %98, 1, !dbg !4548
  call void @llvm.dbg.value(metadata i8* %100, metadata !4385, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %133, metadata !4398, metadata !DIExpression()), !dbg !4501
  %134 = icmp eq i32 %133, %31, !dbg !4502
  br i1 %134, label %287, label %94, !dbg !4503, !llvm.loop !4549

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4408, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4409, metadata !DIExpression()), !dbg !4552
  br i1 %28, label %136, label %138, !dbg !4553

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4410, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8 0, metadata !4411, metadata !DIExpression()), !dbg !4435
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4554
  call void @llvm.dbg.value(metadata i8* %137, metadata !4412, metadata !DIExpression()), !dbg !4435
  br label %143, !dbg !4557

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4558
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4558

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4412, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8 undef, metadata !4411, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8 0, metadata !4410, metadata !DIExpression()), !dbg !4435
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #24, !dbg !4560
  br label %148, !dbg !4563

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4564
  call void @llvm.dbg.value(metadata i8* %151, metadata !4385, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 0, metadata !4414, metadata !DIExpression()), !dbg !4565
  call void @llvm.dbg.value(metadata i8 %149, metadata !4411, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8 %150, metadata !4410, metadata !DIExpression()), !dbg !4435
  %152 = icmp eq i8 %30, 0, !dbg !4566
  br i1 %152, label %153, label %155, !dbg !4567

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4568
  br label %160, !dbg !4567

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4567

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4568
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4569
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4570
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4435
  call void @llvm.dbg.value(metadata i8 undef, metadata !4407, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4435
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4571
  %166 = load i8, i8* %165, align 1, !dbg !4571
  %167 = zext i8 %162 to i32, !dbg !4572
  %168 = add i8 %166, %162, !dbg !4573
  call void @llvm.dbg.value(metadata i8 %168, metadata !4407, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4435
  %169 = icmp eq i32 %33, 0, !dbg !4574
  %170 = lshr i8 %163, 1, !dbg !4575
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4575
  call void @llvm.dbg.value(metadata i8 %171, metadata !4407, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4435
  %172 = icmp eq i32 %26, 0, !dbg !4576
  %173 = icmp eq i32 %161, 0, !dbg !4568
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4568
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4568
  call void @llvm.dbg.value(metadata i8 %175, metadata !4407, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4435
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4422, metadata !DIExpression()), !dbg !4577
  %176 = load i32, i32* %14, align 1, !dbg !4578
  store i8 %168, i8* %165, align 1, !dbg !4579
  store i8 %175, i8* %22, align 1, !dbg !4579
  store i8 %171, i8* %29, align 1, !dbg !4579
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #24, !dbg !4580
  call void @llvm.dbg.value(metadata i32 %177, metadata !4413, metadata !DIExpression()), !dbg !4435
  %178 = icmp slt i32 %177, 0, !dbg !4581
  br i1 %178, label %287, label %240, !dbg !4583

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4385, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %181, metadata !4414, metadata !DIExpression()), !dbg !4565
  call void @llvm.dbg.value(metadata i8 %182, metadata !4411, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8 %183, metadata !4410, metadata !DIExpression()), !dbg !4435
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4584
  call void @llvm.dbg.value(metadata i8* %184, metadata !4385, metadata !DIExpression()), !dbg !4435
  %185 = load i8, i8* %180, align 1, !dbg !4585
  call void @llvm.dbg.value(metadata i8 %185, metadata !4416, metadata !DIExpression()), !dbg !4586
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4587
  call void @llvm.dbg.value(metadata i8* %186, metadata !4385, metadata !DIExpression()), !dbg !4435
  %187 = load i8, i8* %184, align 1, !dbg !4588
  call void @llvm.dbg.value(metadata i8 %187, metadata !4419, metadata !DIExpression()), !dbg !4586
  %188 = zext i8 %187 to i32, !dbg !4589
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4589
  %190 = bitcast i32* %189 to i8**, !dbg !4590
  %191 = load i8*, i8** %190, align 4, !dbg !4590
  call void @llvm.dbg.value(metadata i8* %191, metadata !4420, metadata !DIExpression()), !dbg !4586
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #25, !dbg !4591
  call void @llvm.dbg.value(metadata i1 %192, metadata !4421, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4586
  br i1 %16, label %196, label %193, !dbg !4592

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4594
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #25, !dbg !4595
  br i1 %195, label %235, label %196, !dbg !4596

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4597

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4598

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4601
  br i1 %199, label %201, label %200, !dbg !4606

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4607
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4607
  unreachable, !dbg !4607

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4601
  %203 = add nuw nsw i8 %183, 1, !dbg !4609
  call void @llvm.dbg.value(metadata i8 %203, metadata !4410, metadata !DIExpression()), !dbg !4435
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4610
  br label %231, !dbg !4611

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4612

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4613
  br i1 %207, label %209, label %208, !dbg !4618

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4619
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4619
  unreachable, !dbg !4619

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4613
  %211 = add nuw nsw i8 %182, 1, !dbg !4621
  call void @llvm.dbg.value(metadata i8 %211, metadata !4411, metadata !DIExpression()), !dbg !4435
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4622
  br label %231, !dbg !4623

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4624

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4626
  br i1 %215, label %217, label %216, !dbg !4631

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4632
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4632
  unreachable, !dbg !4632

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4626
  %219 = add nuw nsw i8 %183, 1, !dbg !4634
  call void @llvm.dbg.value(metadata i8 %219, metadata !4410, metadata !DIExpression()), !dbg !4435
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4635
  br label %231, !dbg !4636

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4637
  br i1 %222, label %224, label %223, !dbg !4641

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4642
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4642
  unreachable, !dbg !4642

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4637
  %226 = add nuw nsw i8 %182, 1, !dbg !4644
  call void @llvm.dbg.value(metadata i8 %226, metadata !4411, metadata !DIExpression()), !dbg !4435
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4645
  store i8 %185, i8* %227, align 1, !dbg !4646
  %228 = add nuw nsw i8 %182, 2, !dbg !4647
  call void @llvm.dbg.value(metadata i8 %228, metadata !4411, metadata !DIExpression()), !dbg !4435
  %229 = zext i8 %226 to i32, !dbg !4648
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4648
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4649
  br label %235, !dbg !4650

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4435
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4570
  call void @llvm.dbg.value(metadata i8 %237, metadata !4411, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8 %236, metadata !4410, metadata !DIExpression()), !dbg !4435
  %238 = add nuw nsw i32 %181, 1, !dbg !4650
  call void @llvm.dbg.value(metadata i8* %186, metadata !4385, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %238, metadata !4414, metadata !DIExpression()), !dbg !4565
  %239 = icmp eq i32 %238, %31, !dbg !4566
  br i1 %239, label %160, label %179, !dbg !4567, !llvm.loop !4651

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4575
  call void @llvm.dbg.value(metadata i32 %177, metadata !4383, metadata !DIExpression()), !dbg !4435
  store i32 %176, i32* %14, align 1, !dbg !4653
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4654
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #24, !dbg !4655
  call void @llvm.dbg.value(metadata i32 %243, metadata !4413, metadata !DIExpression()), !dbg !4435
  %244 = icmp slt i32 %243, 0, !dbg !4656
  br i1 %244, label %287, label %245, !dbg !4658

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4383, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4435
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4659
  %248 = add nuw nsw i32 %44, %24, !dbg !4659
  %249 = sub i32 %247, %248, !dbg !4659
  call void @llvm.dbg.value(metadata i32 %249, metadata !4423, metadata !DIExpression()), !dbg !4435
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #24, !dbg !4660
  call void @llvm.dbg.value(metadata i32 %250, metadata !4413, metadata !DIExpression()), !dbg !4435
  %251 = icmp slt i32 %250, 0, !dbg !4661
  br i1 %251, label %287, label %252, !dbg !4663

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4664
  call void @llvm.dbg.value(metadata i32 %253, metadata !4383, metadata !DIExpression()), !dbg !4435
  %254 = add nuw nsw i32 %253, %250, !dbg !4665
  call void @llvm.dbg.value(metadata i32 %254, metadata !4383, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 0, metadata !4424, metadata !DIExpression()), !dbg !4666
  %255 = icmp eq i8 %162, 0, !dbg !4667
  br i1 %255, label %284, label %256, !dbg !4668

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4668

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4424, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.value(metadata i32 %260, metadata !4383, metadata !DIExpression()), !dbg !4435
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4669
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4670
  %262 = load i8, i8* %261, align 1, !dbg !4670
  call void @llvm.dbg.value(metadata i8 %262, metadata !4426, metadata !DIExpression()), !dbg !4671
  store i8 %262, i8* %10, align 1, !dbg !4672
  %263 = zext i8 %262 to i32, !dbg !4673
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4673
  %265 = bitcast i32* %264 to i8**, !dbg !4674
  %266 = load i8*, i8** %265, align 4, !dbg !4674
  call void @llvm.dbg.value(metadata i8* %266, metadata !4429, metadata !DIExpression()), !dbg !4671
  br i1 %257, label %270, label %267, !dbg !4675

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4676
  %269 = load i16, i16* %268, align 2, !dbg !4676
  br label %270, !dbg !4675

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4675
  call void @llvm.dbg.value(metadata i32 undef, metadata !4430, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4671
  call void @llvm.dbg.value(metadata i8* %10, metadata !4426, metadata !DIExpression(DW_OP_deref)), !dbg !4671
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #24, !dbg !4677
  call void @llvm.dbg.value(metadata i32 %272, metadata !4413, metadata !DIExpression()), !dbg !4435
  %273 = icmp slt i32 %272, 0, !dbg !4678
  br i1 %273, label %277, label %274, !dbg !4680

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4430, metadata !DIExpression()), !dbg !4671
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4383, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4435
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #25, !dbg !4681
  call void @llvm.dbg.value(metadata i32 %275, metadata !4413, metadata !DIExpression()), !dbg !4435
  %276 = icmp slt i32 %275, 0, !dbg !4682
  br i1 %276, label %277, label %279, !dbg !4684

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4383, metadata !DIExpression()), !dbg !4435
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4685
  call void @llvm.dbg.value(metadata i32 undef, metadata !4383, metadata !DIExpression()), !dbg !4435
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %280, metadata !4383, metadata !DIExpression()), !dbg !4435
  %281 = add nsw i32 %280, %275, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %281, metadata !4383, metadata !DIExpression()), !dbg !4435
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4685
  %282 = add nuw nsw i32 %259, 1, !dbg !4688
  call void @llvm.dbg.value(metadata i32 %282, metadata !4424, metadata !DIExpression()), !dbg !4666
  %283 = icmp eq i32 %282, %167, !dbg !4667
  br i1 %283, label %284, label %258, !dbg !4668, !llvm.loop !4689

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4665
  call void @llvm.dbg.value(metadata i32 %285, metadata !4383, metadata !DIExpression()), !dbg !4435
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #24, !dbg !4691
  br label %287, !dbg !4692

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4435
  ret i32 %288, !dbg !4693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4694 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4698, metadata !DIExpression()), !dbg !4706
  %2 = icmp eq i8* %0, null, !dbg !4707
  br i1 %2, label %3, label %4, !dbg !4710

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 198) #24, !dbg !4711
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 198) #24, !dbg !4711
  unreachable, !dbg !4711

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4699, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i8* %0, metadata !4700, metadata !DIExpression()), !dbg !4706
  %5 = load i8, i8* %0, align 1, !dbg !4713
  %6 = zext i8 %5 to i32, !dbg !4713
  %7 = shl nuw nsw i32 %6, 2, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %7, metadata !4701, metadata !DIExpression()), !dbg !4706
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4715
  %9 = load i8, i8* %8, align 1, !dbg !4715
  %10 = zext i8 %9 to i32, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %10, metadata !4702, metadata !DIExpression()), !dbg !4706
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4716
  %12 = load i8, i8* %11, align 1, !dbg !4716
  %13 = zext i8 %12 to i32, !dbg !4716
  call void @llvm.dbg.value(metadata i32 %13, metadata !4703, metadata !DIExpression()), !dbg !4706
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4717
  call void @llvm.dbg.value(metadata i8* %14, metadata !4699, metadata !DIExpression()), !dbg !4706
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4718
  call void @llvm.dbg.value(metadata i8* %15, metadata !4699, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 0, metadata !4704, metadata !DIExpression()), !dbg !4719
  %16 = icmp eq i8 %9, 0, !dbg !4720
  br i1 %16, label %17, label %22, !dbg !4722

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4706
  %19 = ptrtoint i8* %18 to i32, !dbg !4723
  %20 = ptrtoint i8* %0 to i32, !dbg !4723
  %21 = sub i32 %19, %20, !dbg !4723
  ret i32 %21, !dbg !4724

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4704, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i8* %24, metadata !4699, metadata !DIExpression()), !dbg !4706
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4725
  call void @llvm.dbg.value(metadata i8* %25, metadata !4699, metadata !DIExpression()), !dbg !4706
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #24, !dbg !4727
  %27 = add i32 %26, 1, !dbg !4728
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4729
  call void @llvm.dbg.value(metadata i8* %28, metadata !4699, metadata !DIExpression()), !dbg !4706
  %29 = add nuw nsw i32 %23, 1, !dbg !4730
  call void @llvm.dbg.value(metadata i32 %29, metadata !4704, metadata !DIExpression()), !dbg !4719
  %30 = icmp eq i32 %29, %10, !dbg !4720
  br i1 %30, label %17, label %22, !dbg !4722, !llvm.loop !4731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4733 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4737, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.value(metadata i8* %1, metadata !4738, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.value(metadata i8* %2, metadata !4739, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.value(metadata i16 %3, metadata !4740, metadata !DIExpression()), !dbg !4741
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4742
  br i1 %5, label %6, label %9, !dbg !4744

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4745
  %8 = add i32 %7, 1, !dbg !4747
  br label %20, !dbg !4748

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4749
  br i1 %10, label %13, label %11, !dbg !4750

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4750
  br label %16, !dbg !4750

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4751
  %15 = add i32 %14, 1, !dbg !4752
  br label %16, !dbg !4750

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4750
  %18 = and i32 %17, 65535, !dbg !4753
  call void @llvm.dbg.value(metadata i32 %17, metadata !4740, metadata !DIExpression()), !dbg !4741
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #24, !dbg !4754
  br label %20, !dbg !4755

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4741
  ret i32 %21, !dbg !4756
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4759, metadata !DIExpression()), !dbg !4760
  ret i32 0, !dbg !4761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4762 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4766, metadata !DIExpression()), !dbg !4767
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4768
  ret void, !dbg !4769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4770 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4773
  ret i8* %1, !dbg !4774
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4775 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4786, metadata !DIExpression()), !dbg !4795
  call void @llvm.dbg.value(metadata i8* %0, metadata !4785, metadata !DIExpression()), !dbg !4795
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !4796
  ret void, !dbg !4798
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4803, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.value(metadata i8* %1, metadata !4804, metadata !DIExpression()), !dbg !4805
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4806
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !4806
  ret i32 %4, !dbg !4807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4808 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4815, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4812, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.value(metadata i8* %1, metadata !4813, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.value(metadata i8* %2, metadata !4814, metadata !DIExpression()), !dbg !4816
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !4817
  ret void, !dbg !4818
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4819 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4823, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %1, metadata !4824, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 0, metadata !4825, metadata !DIExpression()), !dbg !4826
  %3 = icmp eq i32 %1, 0, !dbg !4827
  br i1 %3, label %13, label %4, !dbg !4830

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4825, metadata !DIExpression()), !dbg !4826
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4831
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4833
  %8 = load i8, i8* %7, align 1, !dbg !4833
  %9 = zext i8 %8 to i32, !dbg !4833
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !4831
  %11 = add nuw i32 %5, 1, !dbg !4834
  call void @llvm.dbg.value(metadata i32 %11, metadata !4825, metadata !DIExpression()), !dbg !4826
  %12 = icmp eq i32 %11, %1, !dbg !4827
  br i1 %12, label %13, label %4, !dbg !4830, !llvm.loop !4835

13:                                               ; preds = %4, %2
  ret void, !dbg !4837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4838 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4842, metadata !DIExpression()), !dbg !4844
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4845
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4845
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4843, metadata !DIExpression()), !dbg !4846
  call void @llvm.va_start(i8* nonnull %3), !dbg !4847
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4848
  %5 = load i32, i32* %4, align 4, !dbg !4848
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4848
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !4848
  call void @llvm.va_end(i8* nonnull %3), !dbg !4849
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4850
  ret void, !dbg !4850
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4851 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4855, metadata !DIExpression()), !dbg !4860
  call void @llvm.dbg.value(metadata i32 %1, metadata !4856, metadata !DIExpression()), !dbg !4860
  call void @llvm.dbg.value(metadata i8* %2, metadata !4857, metadata !DIExpression()), !dbg !4860
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4861
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4861
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4858, metadata !DIExpression()), !dbg !4862
  call void @llvm.va_start(i8* nonnull %5), !dbg !4863
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4864
  %7 = load i32, i32* %6, align 4, !dbg !4864
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4864
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %9, metadata !4859, metadata !DIExpression()), !dbg !4860
  call void @llvm.va_end(i8* nonnull %5), !dbg !4865
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4866
  ret i32 %9, !dbg !4867
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4868 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4875, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.value(metadata i8* %0, metadata !4872, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.value(metadata i32 %1, metadata !4873, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.value(metadata i8* %2, metadata !4874, metadata !DIExpression()), !dbg !4882
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4883
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4883
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4876, metadata !DIExpression()), !dbg !4884
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4885
  store i8* %0, i8** %7, align 4, !dbg !4885
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4885
  store i32 %1, i32* %8, align 4, !dbg !4885
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4885
  store i32 0, i32* %9, align 4, !dbg !4885
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !4886
  %10 = load i32, i32* %9, align 4, !dbg !4887
  %11 = load i32, i32* %8, align 4, !dbg !4889
  %12 = icmp slt i32 %10, %11, !dbg !4890
  br i1 %12, label %13, label %15, !dbg !4891

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4892
  store i8 0, i8* %14, align 1, !dbg !4894
  br label %15, !dbg !4895

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4896
  ret i32 %10, !dbg !4897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4903, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4904, metadata !DIExpression()), !dbg !4905
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4906
  %4 = load i8*, i8** %3, align 4, !dbg !4906
  %5 = icmp eq i8* %4, null, !dbg !4908
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4909
  br i1 %5, label %12, label %8, !dbg !4910

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4911
  %10 = load i32, i32* %9, align 4, !dbg !4911
  %11 = icmp slt i32 %7, %10, !dbg !4912
  br i1 %11, label %15, label %12, !dbg !4913

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4914
  %14 = add nsw i32 %7, 1, !dbg !4916
  store i32 %14, i32* %13, align 4, !dbg !4916
  br label %25, !dbg !4917

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4918
  %17 = icmp eq i32 %7, %16, !dbg !4920
  br i1 %17, label %18, label %21, !dbg !4921

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4922
  store i32 %19, i32* %6, align 4, !dbg !4922
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4924
  store i8 0, i8* %20, align 1, !dbg !4925
  br label %25, !dbg !4926

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4927
  %23 = add nsw i32 %7, 1, !dbg !4929
  store i32 %23, i32* %6, align 4, !dbg !4929
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4930
  store i8 %22, i8* %24, align 1, !dbg !4931
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4932
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4933 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4938, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i8* %1, metadata !4939, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i8* %2, metadata !4940, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i8* %3, metadata !4941, metadata !DIExpression()), !dbg !4942
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !4943
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4944
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !4945
  unreachable, !dbg !4946
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4947 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !5047
  ret %struct.k_thread* %1, !dbg !5048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5049 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5054, metadata !DIExpression()), !dbg !5055
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5056, !srcloc !5058
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !5059
  ret void, !dbg !5060
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !5061 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5062, !srcloc !5064
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !5065
  ret %struct.k_thread* %1, !dbg !5066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5067 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5078, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i8* %1, metadata !5079, metadata !DIExpression()), !dbg !5082
  %3 = icmp eq i8* %1, null, !dbg !5083
  br i1 %3, label %16, label %4, !dbg !5085

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5086
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5086
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5080, metadata !DIExpression()), !dbg !5082
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !5087, !range !5088
  call void @llvm.dbg.value(metadata i32 %7, metadata !5081, metadata !DIExpression()), !dbg !5082
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !5089
  br i1 %8, label %10, label %9, !dbg !5092

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 176) #24, !dbg !5093
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.42, i32 0, i32 0), i8* noundef nonnull %1) #24, !dbg !5093
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 176) #24, !dbg !5093
  unreachable, !dbg !5093

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !5095
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #25, !dbg !5095
  %13 = icmp eq i32 %12, %7, !dbg !5095
  br i1 %13, label %15, label %14, !dbg !5098

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 185) #24, !dbg !5099
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.44, i32 0, i32 0), i8* noundef nonnull %1) #24, !dbg !5099
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 185) #24, !dbg !5099
  unreachable, !dbg !5099

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #25, !dbg !5101
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !5102
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #4 !dbg !5104 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5108, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i8* %1, metadata !5109, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i8* %1, metadata !5110, metadata !DIExpression()), !dbg !5112
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5113
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5111, metadata !DIExpression()), !dbg !5112
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5114
  %5 = ptrtoint i8* %4 to i32, !dbg !5115
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5115
  %7 = sub i32 %5, %6, !dbg !5115
  %8 = lshr i32 %7, 3, !dbg !5116
  ret i32 %8, !dbg !5117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5118 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5122, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 %1, metadata !5123, metadata !DIExpression()), !dbg !5124
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !5125
  %4 = and i32 %3, 1, !dbg !5126
  %5 = icmp ne i32 %4, 0, !dbg !5125
  ret i1 %5, !dbg !5127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5128 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5132, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i32 %1, metadata !5133, metadata !DIExpression()), !dbg !5134
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5135
  %4 = add i32 %3, %1, !dbg !5136
  ret i32 %4, !dbg !5137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5138 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5140, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.value(metadata i32 %1, metadata !5141, metadata !DIExpression()), !dbg !5142
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #25, !dbg !5143
  %4 = sub i32 %1, %3, !dbg !5144
  ret i32 %4, !dbg !5145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !5146 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5150, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata i32 %1, metadata !5151, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata i1 %2, metadata !5152, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5155
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5156
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5153, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5154, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5155
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5157
  %6 = bitcast i8* %5 to i16*, !dbg !5157
  %7 = load i16, i16* %6, align 2, !dbg !5157
  %8 = and i16 %7, -2, !dbg !5161
  %9 = zext i1 %2 to i16, !dbg !5161
  %10 = or i16 %8, %9, !dbg !5161
  store i16 %10, i16* %6, align 2, !dbg !5157
  ret void, !dbg !5162
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5163 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5167, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.value(metadata i32 %1, metadata !5168, metadata !DIExpression()), !dbg !5169
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5170
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5172
  br i1 %4, label %7, label %5, !dbg !5173

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5174
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5176
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !5177
  br label %7, !dbg !5178

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5179
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !5181
  br i1 %9, label %13, label %10, !dbg !5182

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !5183
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5185
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #25, !dbg !5186
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %12, metadata !5168, metadata !DIExpression()), !dbg !5169
  br label %13, !dbg !5188

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5168, metadata !DIExpression()), !dbg !5169
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #25, !dbg !5189
  ret void, !dbg !5190
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5191 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5193, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i32 %1, metadata !5194, metadata !DIExpression()), !dbg !5198
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5199, !range !5200
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5201
  call void @llvm.dbg.value(metadata i32 %4, metadata !5195, metadata !DIExpression()), !dbg !5202
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !5203
  ret void, !dbg !5204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5205 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5209, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata i32 %1, metadata !5210, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata i32 %2, metadata !5211, metadata !DIExpression()), !dbg !5214
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5215
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5216
  %6 = add i32 %5, %4, !dbg !5217
  call void @llvm.dbg.value(metadata i32 %6, metadata !5212, metadata !DIExpression()), !dbg !5214
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !5218
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5219
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !5220
  ret void, !dbg !5221
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5222 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5224, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i32 %1, metadata !5225, metadata !DIExpression()), !dbg !5229
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5230, !range !5200
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5231
  call void @llvm.dbg.value(metadata i32 %4, metadata !5226, metadata !DIExpression()), !dbg !5232
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !5233
  ret void, !dbg !5234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5235 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5239, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata i32 %1, metadata !5240, metadata !DIExpression()), !dbg !5241
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !5242
  %4 = lshr i32 %3, 1, !dbg !5243
  ret i32 %4, !dbg !5244
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !5245 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5249, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.value(metadata i32 %1, metadata !5250, metadata !DIExpression()), !dbg !5252
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #25, !dbg !5253
  %4 = add i32 %1, 1, !dbg !5254
  %5 = sub i32 %4, %3, !dbg !5255
  call void @llvm.dbg.value(metadata i32 %5, metadata !5251, metadata !DIExpression()), !dbg !5252
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5256, !range !5257
  %7 = sub nsw i32 31, %6, !dbg !5258
  ret i32 %7, !dbg !5259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5260 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5264, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.value(metadata i32 %1, metadata !5265, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.value(metadata i32 %2, metadata !5266, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5267, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5273
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5274
  %5 = load i32, i32* %4, align 4, !dbg !5274
  %6 = icmp eq i32 %5, 0, !dbg !5275
  br i1 %6, label %7, label %12, !dbg !5276

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5277
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5279
  %10 = load i32, i32* %9, align 4, !dbg !5280
  %11 = or i32 %10, %8, !dbg !5280
  store i32 %11, i32* %9, align 4, !dbg !5280
  store i32 %1, i32* %4, align 4, !dbg !5281
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !5282
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !5283
  br label %14, !dbg !5284

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5269, metadata !DIExpression()), !dbg !5285
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #25, !dbg !5286, !range !5287
  call void @llvm.dbg.value(metadata i32 %13, metadata !5272, metadata !DIExpression()), !dbg !5285
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #25, !dbg !5288
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #25, !dbg !5289
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #25, !dbg !5290
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #25, !dbg !5291
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5293 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5295, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata i32 %1, metadata !5296, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata i32 %2, metadata !5297, metadata !DIExpression()), !dbg !5298
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #25, !dbg !5299
  ret void, !dbg !5300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5301 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5303, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata i32 %1, metadata !5304, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata i32 %2, metadata !5305, metadata !DIExpression()), !dbg !5306
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #25, !dbg !5307
  ret void, !dbg !5308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5309 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5311, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.value(metadata i32 %1, metadata !5312, metadata !DIExpression()), !dbg !5313
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #25, !dbg !5314
  ret i32 %3, !dbg !5315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5316 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5320, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata i32 %1, metadata !5321, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata i32 %2, metadata !5322, metadata !DIExpression()), !dbg !5325
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5326
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5323, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5324, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5325
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5324, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5325
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5327
  call void @llvm.dbg.value(metadata i8* %5, metadata !5324, metadata !DIExpression()), !dbg !5325
  %6 = bitcast i8* %5 to i16*, !dbg !5328
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5331
  %8 = load i16, i16* %7, align 2, !dbg !5331
  %9 = zext i16 %8 to i32, !dbg !5331
  ret i32 %9, !dbg !5332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #4 !dbg !5333 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5337, metadata !DIExpression()), !dbg !5338
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5339
  ret %struct.chunk_unit_t* %2, !dbg !5340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #7 !dbg !5341 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5345, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.value(metadata i32 %1, metadata !5346, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.value(metadata i32 %2, metadata !5347, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.value(metadata i32 %3, metadata !5348, metadata !DIExpression()), !dbg !5351
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5352
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5349, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5350, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5351
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5353
  call void @llvm.dbg.value(metadata i8* %6, metadata !5350, metadata !DIExpression()), !dbg !5351
  %7 = trunc i32 %3 to i16, !dbg !5354
  %8 = bitcast i8* %6 to i16*, !dbg !5357
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5358
  store i16 %7, i16* %9, align 2, !dbg !5359
  ret void, !dbg !5360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #4 !dbg !5361 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5365, metadata !DIExpression()), !dbg !5366
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #25, !dbg !5367
  ret i32 %2, !dbg !5368
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !5369 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5373, metadata !DIExpression()), !dbg !5375
  call void @llvm.dbg.value(metadata i32 %1, metadata !5374, metadata !DIExpression()), !dbg !5375
  %3 = add i32 %1, 4, !dbg !5376
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #25, !dbg !5377
  ret i32 %4, !dbg !5378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #4 !dbg !5379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5383, metadata !DIExpression()), !dbg !5384
  %2 = add i32 %0, 7, !dbg !5385
  %3 = lshr i32 %2, 3, !dbg !5386
  ret i32 %3, !dbg !5387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5388 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5392, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %1, metadata !5393, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %2, metadata !5394, metadata !DIExpression()), !dbg !5395
  %4 = shl i32 %2, 1, !dbg !5396
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #25, !dbg !5397
  ret void, !dbg !5398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5399 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5401, metadata !DIExpression()), !dbg !5404
  call void @llvm.dbg.value(metadata i32 %1, metadata !5402, metadata !DIExpression()), !dbg !5404
  call void @llvm.dbg.value(metadata i32 %2, metadata !5403, metadata !DIExpression()), !dbg !5404
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #25, !dbg !5405
  ret void, !dbg !5406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5407 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5409, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i32 %1, metadata !5410, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i32 %2, metadata !5411, metadata !DIExpression()), !dbg !5417
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5418
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5412, metadata !DIExpression()), !dbg !5417
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5419
  %6 = icmp eq i32 %5, %1, !dbg !5420
  br i1 %6, label %7, label %14, !dbg !5421

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5422
  %9 = xor i32 %8, -1, !dbg !5424
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5425
  %11 = load i32, i32* %10, align 4, !dbg !5426
  %12 = and i32 %11, %9, !dbg !5426
  store i32 %12, i32* %10, align 4, !dbg !5426
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5427
  store i32 0, i32* %13, align 4, !dbg !5428
  br label %17, !dbg !5429

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5430
  call void @llvm.dbg.value(metadata i32 %15, metadata !5413, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.value(metadata i32 %5, metadata !5416, metadata !DIExpression()), !dbg !5431
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5432
  store i32 %5, i32* %16, align 4, !dbg !5433
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #25, !dbg !5434
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #25, !dbg !5435
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5437 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5439, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 %1, metadata !5440, metadata !DIExpression()), !dbg !5441
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #25, !dbg !5442
  ret i32 %3, !dbg !5443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #8 !dbg !5444 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5448, metadata !DIExpression()), !dbg !5455
  call void @llvm.dbg.value(metadata i8* %1, metadata !5449, metadata !DIExpression()), !dbg !5455
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5456
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5456
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5450, metadata !DIExpression()), !dbg !5455
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #25, !dbg !5457
  call void @llvm.dbg.value(metadata i32 %5, metadata !5451, metadata !DIExpression()), !dbg !5455
  %6 = ptrtoint i8* %1 to i32, !dbg !5458
  call void @llvm.dbg.value(metadata i32 %6, metadata !5452, metadata !DIExpression()), !dbg !5455
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #25, !dbg !5459
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5459
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5460
  call void @llvm.dbg.value(metadata i32 %9, metadata !5453, metadata !DIExpression()), !dbg !5455
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #25, !dbg !5461
  %11 = shl i32 %10, 3, !dbg !5462
  call void @llvm.dbg.value(metadata i32 %11, metadata !5454, metadata !DIExpression()), !dbg !5455
  %12 = sub i32 %9, %6, !dbg !5463
  %13 = add i32 %12, %11, !dbg !5464
  ret i32 %13, !dbg !5465
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5466 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5470, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %1, metadata !5471, metadata !DIExpression()), !dbg !5476
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5477
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5477
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5472, metadata !DIExpression()), !dbg !5476
  %5 = icmp eq i32 %1, 0, !dbg !5478
  br i1 %5, label %19, label %6, !dbg !5480

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !5481
  br i1 %7, label %19, label %8, !dbg !5482

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !5483, !range !5088
  call void @llvm.dbg.value(metadata i32 %9, metadata !5474, metadata !DIExpression()), !dbg !5476
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #25, !dbg !5484
  call void @llvm.dbg.value(metadata i32 %10, metadata !5475, metadata !DIExpression()), !dbg !5476
  %11 = icmp eq i32 %10, 0, !dbg !5485
  br i1 %11, label %19, label %12, !dbg !5487

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !5488
  %14 = icmp ugt i32 %13, %9, !dbg !5490
  br i1 %14, label %15, label %17, !dbg !5491

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5492
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #25, !dbg !5494
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #25, !dbg !5495
  br label %17, !dbg !5496

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #25, !dbg !5497
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !5498
  call void @llvm.dbg.value(metadata i8* %18, metadata !5473, metadata !DIExpression()), !dbg !5476
  br label %19, !dbg !5499

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5476
  ret i8* %20, !dbg !5500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5501 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5505, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.value(metadata i32 %1, metadata !5506, metadata !DIExpression()), !dbg !5507
  %3 = lshr i32 %1, 3, !dbg !5508
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5509
  %5 = load i32, i32* %4, align 4, !dbg !5509
  %6 = icmp uge i32 %3, %5, !dbg !5510
  ret i1 %6, !dbg !5511
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5512 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5516, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.value(metadata i32 %1, metadata !5517, metadata !DIExpression()), !dbg !5531
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5532
  call void @llvm.dbg.value(metadata i32 %3, metadata !5518, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5519, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5531
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5533
  %5 = load i32, i32* %4, align 4, !dbg !5533
  %6 = icmp eq i32 %5, 0, !dbg !5534
  br i1 %6, label %19, label %7, !dbg !5535

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5536
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5537
  call void @llvm.dbg.value(metadata i32 %9, metadata !5523, metadata !DIExpression()), !dbg !5537
  call void @llvm.dbg.value(metadata i32 %8, metadata !5524, metadata !DIExpression()), !dbg !5538
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !5539
  %11 = icmp ult i32 %10, %1, !dbg !5541
  br i1 %11, label %13, label %12, !dbg !5542

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #25, !dbg !5543
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !5545
  store i32 %14, i32* %4, align 4, !dbg !5546
  %15 = add nsw i32 %9, -1, !dbg !5547
  call void @llvm.dbg.value(metadata i32 %15, metadata !5523, metadata !DIExpression()), !dbg !5537
  %16 = icmp eq i32 %15, 0, !dbg !5547
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5548
  br i1 %18, label %19, label %7, !dbg !5548, !llvm.loop !5549

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5552
  %21 = load i32, i32* %20, align 4, !dbg !5552
  %22 = add nsw i32 %3, 1, !dbg !5553
  %23 = shl nsw i32 -1, %22, !dbg !5553
  %24 = and i32 %21, %23, !dbg !5554
  call void @llvm.dbg.value(metadata i32 %24, metadata !5526, metadata !DIExpression()), !dbg !5531
  %25 = icmp eq i32 %24, 0, !dbg !5555
  br i1 %25, label %30, label %26, !dbg !5556

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5557, !range !5257
  call void @llvm.dbg.value(metadata i32 %27, metadata !5527, metadata !DIExpression()), !dbg !5558
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5559
  %29 = load i32, i32* %28, align 4, !dbg !5559
  call void @llvm.dbg.value(metadata i32 %29, metadata !5530, metadata !DIExpression()), !dbg !5558
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #25, !dbg !5560
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5531
  ret i32 %31, !dbg !5561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5562 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5564, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.value(metadata i32 %1, metadata !5565, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.value(metadata i32 %2, metadata !5566, metadata !DIExpression()), !dbg !5570
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5571
  call void @llvm.dbg.value(metadata i32 %4, metadata !5567, metadata !DIExpression()), !dbg !5570
  %5 = sub i32 %2, %1, !dbg !5572
  call void @llvm.dbg.value(metadata i32 %5, metadata !5568, metadata !DIExpression()), !dbg !5570
  %6 = sub i32 %4, %5, !dbg !5573
  call void @llvm.dbg.value(metadata i32 %6, metadata !5569, metadata !DIExpression()), !dbg !5570
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #25, !dbg !5574
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #25, !dbg !5575
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #25, !dbg !5576
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5577
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !5578
  ret void, !dbg !5579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !5580 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5584, metadata !DIExpression()), !dbg !5588
  call void @llvm.dbg.value(metadata i32 %1, metadata !5585, metadata !DIExpression()), !dbg !5588
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5589
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5586, metadata !DIExpression()), !dbg !5588
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5590
  call void @llvm.dbg.value(metadata i8* %4, metadata !5587, metadata !DIExpression()), !dbg !5588
  ret i8* %4, !dbg !5591
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5592 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5596, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 %1, metadata !5597, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 %2, metadata !5598, metadata !DIExpression()), !dbg !5608
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5609
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5609
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5599, metadata !DIExpression()), !dbg !5608
  %6 = sub i32 0, %1, !dbg !5610
  %7 = and i32 %6, %1, !dbg !5611
  call void @llvm.dbg.value(metadata i32 %7, metadata !5601, metadata !DIExpression()), !dbg !5608
  %8 = icmp eq i32 %7, %1, !dbg !5612
  br i1 %8, label %13, label %9, !dbg !5614

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5615
  call void @llvm.dbg.value(metadata i32 %10, metadata !5597, metadata !DIExpression()), !dbg !5608
  %11 = icmp ult i32 %7, 4, !dbg !5617
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5617
  br label %17, !dbg !5617

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5618
  br i1 %14, label %15, label %17, !dbg !5621

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #25, !dbg !5622
  br label %61, !dbg !5624

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5608
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5625
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5597, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 %19, metadata !5600, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 %18, metadata !5601, metadata !DIExpression()), !dbg !5608
  %21 = add i32 %20, -1, !dbg !5626
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5626, !range !5257
  %23 = icmp ult i32 %22, 2, !dbg !5626
  br i1 %23, label %25, label %24, !dbg !5629

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 324) #24, !dbg !5630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.46, i32 0, i32 0)) #24, !dbg !5630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 324) #24, !dbg !5630
  unreachable, !dbg !5630

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5632
  br i1 %26, label %61, label %27, !dbg !5634

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #25, !dbg !5635
  br i1 %28, label %61, label %29, !dbg !5636

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5637
  %31 = add i32 %30, %20, !dbg !5638
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #25, !dbg !5639, !range !5088
  call void @llvm.dbg.value(metadata i32 %32, metadata !5602, metadata !DIExpression()), !dbg !5608
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #25, !dbg !5640
  call void @llvm.dbg.value(metadata i32 %33, metadata !5603, metadata !DIExpression()), !dbg !5608
  %34 = icmp eq i32 %33, 0, !dbg !5641
  br i1 %34, label %61, label %35, !dbg !5643

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #25, !dbg !5644
  call void @llvm.dbg.value(metadata i8* %36, metadata !5604, metadata !DIExpression()), !dbg !5608
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5645
  %38 = ptrtoint i8* %37 to i32, !dbg !5645
  %39 = add i32 %21, %38, !dbg !5645
  %40 = sub i32 0, %20, !dbg !5645
  %41 = and i32 %39, %40, !dbg !5645
  %42 = inttoptr i32 %41 to i8*, !dbg !5646
  %43 = sub i32 0, %18, !dbg !5647
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5647
  call void @llvm.dbg.value(metadata i8* %44, metadata !5604, metadata !DIExpression()), !dbg !5608
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5648
  %46 = ptrtoint i8* %45 to i32, !dbg !5648
  %47 = add i32 %46, 7, !dbg !5648
  %48 = and i32 %47, -8, !dbg !5648
  call void @llvm.dbg.value(metadata i32 %48, metadata !5605, metadata !DIExpression()), !dbg !5608
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #25, !dbg !5649
  call void @llvm.dbg.value(metadata i32 %49, metadata !5606, metadata !DIExpression()), !dbg !5608
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #25, !dbg !5650
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5651
  %52 = sub i32 %48, %51, !dbg !5651
  %53 = ashr exact i32 %52, 3, !dbg !5651
  call void @llvm.dbg.value(metadata i32 %53, metadata !5607, metadata !DIExpression()), !dbg !5608
  %54 = icmp ugt i32 %49, %33, !dbg !5652
  br i1 %54, label %55, label %56, !dbg !5654

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #25, !dbg !5655
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #25, !dbg !5657
  br label %56, !dbg !5658

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #25, !dbg !5659
  %58 = icmp ugt i32 %57, %53, !dbg !5661
  br i1 %58, label %59, label %60, !dbg !5662

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #25, !dbg !5663
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #25, !dbg !5665
  br label %60, !dbg !5666

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #25, !dbg !5667
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5608
  ret i8* %62, !dbg !5668
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5669 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5673, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata i8* %1, metadata !5674, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata i32 %2, metadata !5675, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata i32 %3, metadata !5676, metadata !DIExpression()), !dbg !5692
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5693
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5693
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5677, metadata !DIExpression()), !dbg !5692
  %7 = icmp eq i8* %1, null, !dbg !5694
  br i1 %7, label %8, label %10, !dbg !5696

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !5697
  br label %63, !dbg !5699

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5700
  br i1 %11, label %12, label %13, !dbg !5702

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !5703
  br label %63, !dbg !5705

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5706
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5706, !range !5257
  %16 = icmp ult i32 %15, 2, !dbg !5706
  br i1 %16, label %18, label %17, !dbg !5709

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 393) #24, !dbg !5710
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.46, i32 0, i32 0)) #24, !dbg !5710
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 393) #24, !dbg !5710
  unreachable, !dbg !5710

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #25, !dbg !5712
  br i1 %19, label %63, label %20, !dbg !5714

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !5715, !range !5088
  call void @llvm.dbg.value(metadata i32 %21, metadata !5678, metadata !DIExpression()), !dbg !5692
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !5716
  call void @llvm.dbg.value(metadata i32 %22, metadata !5679, metadata !DIExpression()), !dbg !5692
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !5717
  %24 = ptrtoint i8* %1 to i32, !dbg !5718
  %25 = ptrtoint i8* %23 to i32, !dbg !5718
  %26 = sub i32 %24, %25, !dbg !5718
  call void @llvm.dbg.value(metadata i32 %26, metadata !5680, metadata !DIExpression()), !dbg !5692
  %27 = add i32 %26, %3, !dbg !5719
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #25, !dbg !5720
  call void @llvm.dbg.value(metadata i32 %28, metadata !5681, metadata !DIExpression()), !dbg !5692
  %29 = icmp eq i32 %2, 0, !dbg !5721
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5722
  br i1 %32, label %33, label %53, !dbg !5722

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !5723
  %35 = icmp eq i32 %28, %34, !dbg !5724
  br i1 %35, label %63, label %36, !dbg !5725

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5726
  br i1 %37, label %38, label %40, !dbg !5727

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5728
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #25, !dbg !5730
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #25, !dbg !5731
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #25, !dbg !5732
  br label %63, !dbg !5733

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !5734
  br i1 %41, label %53, label %42, !dbg !5735

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !5736
  %44 = add i32 %43, %34, !dbg !5737
  %45 = icmp ult i32 %44, %28, !dbg !5738
  br i1 %45, label %53, label %46, !dbg !5739

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5740
  call void @llvm.dbg.value(metadata i32 %47, metadata !5682, metadata !DIExpression()), !dbg !5741
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !5742
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !5743
  %49 = icmp ult i32 %47, %48, !dbg !5745
  br i1 %49, label %50, label %52, !dbg !5746

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5747
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #25, !dbg !5749
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #25, !dbg !5750
  br label %52, !dbg !5751

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #25, !dbg !5752
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #25, !dbg !5753
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !5754
  call void @llvm.dbg.value(metadata i8* %54, metadata !5688, metadata !DIExpression()), !dbg !5692
  %55 = icmp eq i8* %54, null, !dbg !5755
  br i1 %55, label %63, label %56, !dbg !5756

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !5757, !range !5200
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #25, !dbg !5758
  %59 = sub i32 %58, %26, !dbg !5759
  call void @llvm.dbg.value(metadata i32 %59, metadata !5689, metadata !DIExpression()), !dbg !5760
  %60 = icmp ult i32 %59, %3, !dbg !5761
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5761
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #24, !dbg !5762
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !5763
  br label %63, !dbg !5764

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5692
  ret i8* %64, !dbg !5765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !5766 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5770, metadata !DIExpression()), !dbg !5772
  call void @llvm.dbg.value(metadata i32 %1, metadata !5771, metadata !DIExpression()), !dbg !5772
  %3 = shl i32 %1, 3, !dbg !5773
  %4 = add i32 %3, -4, !dbg !5774
  ret i32 %4, !dbg !5775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5776 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5780, metadata !DIExpression()), !dbg !5791
  call void @llvm.dbg.value(metadata i8* %1, metadata !5781, metadata !DIExpression()), !dbg !5791
  call void @llvm.dbg.value(metadata i32 %2, metadata !5782, metadata !DIExpression()), !dbg !5791
  %4 = icmp ult i32 %2, 262144, !dbg !5792
  br i1 %4, label %6, label %5, !dbg !5797

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 491) #24, !dbg !5798
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.48, i32 0, i32 0)) #24, !dbg !5798
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 491) #24, !dbg !5798
  unreachable, !dbg !5798

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !5800
  br i1 %7, label %9, label %8, !dbg !5803

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 498) #24, !dbg !5804
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #24, !dbg !5804
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 498) #24, !dbg !5804
  unreachable, !dbg !5804

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !5806
  call void @llvm.dbg.value(metadata i32 %10, metadata !5782, metadata !DIExpression()), !dbg !5791
  %11 = ptrtoint i8* %1 to i32, !dbg !5807
  %12 = add i32 %11, 7, !dbg !5807
  %13 = and i32 %12, -8, !dbg !5807
  call void @llvm.dbg.value(metadata i32 %13, metadata !5783, metadata !DIExpression()), !dbg !5791
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !5808
  %15 = ptrtoint i8* %14 to i32, !dbg !5808
  %16 = and i32 %15, -8, !dbg !5808
  call void @llvm.dbg.value(metadata i32 %16, metadata !5784, metadata !DIExpression()), !dbg !5791
  %17 = sub i32 %16, %13, !dbg !5809
  %18 = lshr exact i32 %17, 3, !dbg !5810
  call void @llvm.dbg.value(metadata i32 %18, metadata !5785, metadata !DIExpression()), !dbg !5791
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #25, !dbg !5811
  %20 = icmp ugt i32 %18, %19, !dbg !5811
  br i1 %20, label %22, label %21, !dbg !5814

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 507) #24, !dbg !5815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #24, !dbg !5815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 507) #24, !dbg !5815
  unreachable, !dbg !5815

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !5817
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !5786, metadata !DIExpression()), !dbg !5791
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5818
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !5819
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !5820
  store i32 %18, i32* %25, align 8, !dbg !5821
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !5822
  store i32 0, i32* %26, align 4, !dbg !5823
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #25, !dbg !5824
  call void @llvm.dbg.value(metadata i32 %27, metadata !5787, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5791
  %28 = shl i32 %27, 2, !dbg !5825
  %29 = add i32 %28, 20, !dbg !5826
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #25, !dbg !5827
  call void @llvm.dbg.value(metadata i32 %30, metadata !5788, metadata !DIExpression()), !dbg !5791
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #25, !dbg !5828
  %32 = add i32 %31, %30, !dbg !5828
  %33 = icmp ugt i32 %32, %18, !dbg !5828
  br i1 %33, label %36, label %34, !dbg !5831

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !5789, metadata !DIExpression()), !dbg !5832
  %35 = icmp slt i32 %27, 0, !dbg !5833
  br i1 %35, label %37, label %39, !dbg !5835

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 524) #24, !dbg !5836
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #24, !dbg !5836
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 524) #24, !dbg !5836
  unreachable, !dbg !5836

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #25, !dbg !5838
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #25, !dbg !5839
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #25, !dbg !5840
  %38 = sub i32 %18, %30, !dbg !5841
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #25, !dbg !5842
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #25, !dbg !5843
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #25, !dbg !5844
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #25, !dbg !5845
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #25, !dbg !5846
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #25, !dbg !5847
  ret void, !dbg !5848

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !5789, metadata !DIExpression()), !dbg !5832
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !5849
  store i32 0, i32* %41, align 4, !dbg !5851
  %42 = add nuw i32 %40, 1, !dbg !5852
  call void @llvm.dbg.value(metadata i32 %42, metadata !5789, metadata !DIExpression()), !dbg !5832
  %43 = icmp eq i32 %40, %27, !dbg !5833
  br i1 %43, label %37, label %39, !dbg !5835, !llvm.loop !5853
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5855 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5868, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5865, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8* %1, metadata !5866, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8* %2, metadata !5867, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %4, metadata !5869, metadata !DIExpression()), !dbg !5994
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5995
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5995
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5870, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.value(metadata i32 0, metadata !5874, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i1 undef, metadata !5876, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5994
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5997

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5997

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5998
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5868, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8* %30, metadata !5867, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %29, metadata !5874, metadata !DIExpression()), !dbg !5994
  %31 = load i8, i8* %30, align 1, !dbg !5999
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5997

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5999
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6000
  call void @llvm.dbg.value(metadata i8* %34, metadata !5867, metadata !DIExpression()), !dbg !5994
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !6000
  call void @llvm.dbg.value(metadata i32 %35, metadata !5878, metadata !DIExpression()), !dbg !6001
  %36 = icmp slt i32 %35, 0, !dbg !6002
  %37 = add i32 %29, 1, !dbg !6000
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression()), !dbg !5994
  br i1 %36, label %365, label %28, !llvm.loop !6004

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !6006
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5883, metadata !DIExpression()), !dbg !6007
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6007
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5926, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5929, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8* %30, metadata !5932, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i32 -1, metadata !5933, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i32 -1, metadata !5934, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8* null, metadata !5935, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8* %14, metadata !5936, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8 0, metadata !5937, metadata !DIExpression()), !dbg !6008
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !6009
  call void @llvm.dbg.value(metadata i8* %39, metadata !5867, metadata !DIExpression()), !dbg !5994
  %40 = load i24, i24* %15, align 8, !dbg !6010
  %41 = and i24 %40, 256, !dbg !6010
  %42 = icmp eq i24 %41, 0, !dbg !6010
  br i1 %42, label %51, label %43, !dbg !6012

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6013
  call void @llvm.dbg.value(metadata i8* %44, metadata !5868, metadata !DIExpression()), !dbg !5994
  %45 = bitcast i8* %27 to i32*, !dbg !6013
  %46 = load i32, i32* %45, align 4, !dbg !6013
  call void @llvm.dbg.value(metadata i32 %46, metadata !5933, metadata !DIExpression()), !dbg !6008
  %47 = icmp slt i32 %46, 0, !dbg !6015
  br i1 %47, label %48, label %56, !dbg !6017

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6018
  store i24 %49, i24* %15, align 8, !dbg !6018
  %50 = sub nsw i32 0, %46, !dbg !6020
  call void @llvm.dbg.value(metadata i32 %50, metadata !5933, metadata !DIExpression()), !dbg !6008
  br label %56, !dbg !6021

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6022
  %53 = icmp eq i24 %52, 0, !dbg !6022
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6024
  br label %56, !dbg !6024

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6025
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6008
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5868, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %58, metadata !5933, metadata !DIExpression()), !dbg !6008
  %60 = and i24 %57, 1024, !dbg !6025
  %61 = icmp eq i24 %60, 0, !dbg !6025
  br i1 %61, label %69, label %62, !dbg !6026

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6027
  call void @llvm.dbg.value(metadata i8* %63, metadata !5868, metadata !DIExpression()), !dbg !5994
  %64 = bitcast i8* %59 to i32*, !dbg !6027
  %65 = load i32, i32* %64, align 4, !dbg !6027
  call void @llvm.dbg.value(metadata i32 %65, metadata !5938, metadata !DIExpression()), !dbg !6028
  %66 = icmp slt i32 %65, 0, !dbg !6029
  br i1 %66, label %67, label %74, !dbg !6031

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6032
  store i24 %68, i24* %15, align 8, !dbg !6032
  br label %74, !dbg !6034

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6035
  %71 = icmp eq i24 %70, 0, !dbg !6035
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6037
  br label %74, !dbg !6037

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6038
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6008
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6008
  call void @llvm.dbg.value(metadata i8* %77, metadata !5868, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %76, metadata !5934, metadata !DIExpression()), !dbg !6008
  store i32 0, i32* %16, align 4, !dbg !6039
  store i32 0, i32* %17, align 8, !dbg !6040
  %78 = lshr i24 %75, 16, !dbg !6038
  call void @llvm.dbg.value(metadata i24 %78, metadata !5941, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6008
  %79 = lshr i24 %75, 11, !dbg !6041
  %80 = and i24 %79, 15, !dbg !6041
  %81 = zext i24 %80 to i32, !dbg !6041
  call void @llvm.dbg.value(metadata i32 %81, metadata !5942, metadata !DIExpression()), !dbg !6008
  %82 = trunc i24 %78 to i3, !dbg !6042
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6042

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6043

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6046
  call void @llvm.dbg.value(metadata i8* %85, metadata !5868, metadata !DIExpression()), !dbg !5994
  %86 = bitcast i8* %77 to i32*, !dbg !6046
  %87 = load i32, i32* %86, align 4, !dbg !6046
  %88 = sext i32 %87 to i64, !dbg !6046
  store i64 %88, i64* %20, align 8, !dbg !6048
  br label %115, !dbg !6049

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6050
  call void @llvm.dbg.value(metadata i8* %90, metadata !5868, metadata !DIExpression()), !dbg !5994
  %91 = bitcast i8* %77 to i32*, !dbg !6050
  %92 = load i32, i32* %91, align 4, !dbg !6050
  %93 = sext i32 %92 to i64, !dbg !6050
  store i64 %93, i64* %20, align 8, !dbg !6053
  br label %115, !dbg !6054

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6055
  %96 = add i32 %95, 7, !dbg !6055
  %97 = and i32 %96, -8, !dbg !6055
  %98 = inttoptr i32 %97 to i8*, !dbg !6055
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6055
  call void @llvm.dbg.value(metadata i8* %99, metadata !5868, metadata !DIExpression()), !dbg !5994
  %100 = inttoptr i32 %97 to i64*, !dbg !6055
  %101 = load i64, i64* %100, align 8, !dbg !6055
  store i64 %101, i64* %20, align 8, !dbg !6056
  br label %115, !dbg !6057

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6058
  %104 = add i32 %103, 7, !dbg !6058
  %105 = and i32 %104, -8, !dbg !6058
  %106 = inttoptr i32 %105 to i8*, !dbg !6058
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6058
  call void @llvm.dbg.value(metadata i8* %107, metadata !5868, metadata !DIExpression()), !dbg !5994
  %108 = inttoptr i32 %105 to i64*, !dbg !6058
  %109 = load i64, i64* %108, align 8, !dbg !6058
  store i64 %109, i64* %20, align 8, !dbg !6059
  br label %115, !dbg !6060

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6061
  call void @llvm.dbg.value(metadata i8* %111, metadata !5868, metadata !DIExpression()), !dbg !5994
  %112 = bitcast i8* %77 to i32*, !dbg !6061
  %113 = load i32, i32* %112, align 4, !dbg !6061
  %114 = sext i32 %113 to i64, !dbg !6062
  store i64 %114, i64* %20, align 8, !dbg !6063
  br label %115, !dbg !6064

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6065
  call void @llvm.dbg.value(metadata i8* %117, metadata !5868, metadata !DIExpression()), !dbg !5994
  %118 = trunc i24 %79 to i4, !dbg !6066
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6066

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6067
  %121 = ashr exact i64 %120, 56, !dbg !6067
  store i64 %121, i64* %20, align 8, !dbg !6070
  br label %177, !dbg !6071

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6072
  %124 = ashr exact i64 %123, 48, !dbg !6072
  store i64 %124, i64* %20, align 8, !dbg !6075
  br label %177, !dbg !6076

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6077

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6080
  call void @llvm.dbg.value(metadata i8* %127, metadata !5868, metadata !DIExpression()), !dbg !5994
  %128 = bitcast i8* %77 to i32*, !dbg !6080
  %129 = load i32, i32* %128, align 4, !dbg !6080
  %130 = zext i32 %129 to i64, !dbg !6080
  store i64 %130, i64* %20, align 8, !dbg !6082
  br label %157, !dbg !6083

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6084
  call void @llvm.dbg.value(metadata i8* %132, metadata !5868, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8* %132, metadata !5868, metadata !DIExpression()), !dbg !5994
  %133 = bitcast i8* %77 to i32*, !dbg !6084
  %134 = load i32, i32* %133, align 4, !dbg !6084
  %135 = zext i32 %134 to i64, !dbg !6084
  store i64 %135, i64* %20, align 8, !dbg !6084
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6086
  %138 = add i32 %137, 7, !dbg !6086
  %139 = and i32 %138, -8, !dbg !6086
  %140 = inttoptr i32 %139 to i8*, !dbg !6086
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6086
  call void @llvm.dbg.value(metadata i8* %141, metadata !5868, metadata !DIExpression()), !dbg !5994
  %142 = inttoptr i32 %139 to i64*, !dbg !6086
  %143 = load i64, i64* %142, align 8, !dbg !6086
  store i64 %143, i64* %20, align 8, !dbg !6087
  br label %157, !dbg !6088

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6089
  %146 = add i32 %145, 7, !dbg !6089
  %147 = and i32 %146, -8, !dbg !6089
  %148 = inttoptr i32 %147 to i8*, !dbg !6089
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6089
  call void @llvm.dbg.value(metadata i8* %149, metadata !5868, metadata !DIExpression()), !dbg !5994
  %150 = inttoptr i32 %147 to i64*, !dbg !6089
  %151 = load i64, i64* %150, align 8, !dbg !6089
  store i64 %151, i64* %20, align 8, !dbg !6090
  br label %157, !dbg !6091

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6092
  call void @llvm.dbg.value(metadata i8* %153, metadata !5868, metadata !DIExpression()), !dbg !5994
  %154 = bitcast i8* %77 to i32*, !dbg !6092
  %155 = load i32, i32* %154, align 4, !dbg !6092
  %156 = zext i32 %155 to i64, !dbg !6093
  store i64 %156, i64* %20, align 8, !dbg !6094
  br label %157, !dbg !6095

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6096
  call void @llvm.dbg.value(metadata i8* %159, metadata !5868, metadata !DIExpression()), !dbg !5994
  %160 = trunc i24 %79 to i4, !dbg !6097
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6097

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6098
  store i64 %162, i64* %20, align 8, !dbg !6101
  br label %177, !dbg !6102

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6103
  store i64 %164, i64* %20, align 8, !dbg !6106
  br label %177, !dbg !6107

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6108
  %167 = add i32 %166, 7, !dbg !6108
  %168 = and i32 %167, -8, !dbg !6108
  %169 = inttoptr i32 %168 to i8*, !dbg !6108
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6108
  call void @llvm.dbg.value(metadata i8* %170, metadata !5868, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8* %170, metadata !5868, metadata !DIExpression()), !dbg !5994
  %171 = inttoptr i32 %168 to double*, !dbg !6108
  %172 = load double, double* %171, align 8, !dbg !6108
  store double %172, double* %19, align 8, !dbg !6108
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6112
  call void @llvm.dbg.value(metadata i8* %174, metadata !5868, metadata !DIExpression()), !dbg !5994
  %175 = bitcast i8* %77 to i8**, !dbg !6112
  %176 = load i8*, i8** %175, align 4, !dbg !6112
  store i8* %176, i8** %18, align 8, !dbg !6115
  br label %177, !dbg !6116

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6008
  call void @llvm.dbg.value(metadata i8* %178, metadata !5868, metadata !DIExpression()), !dbg !5994
  %179 = and i24 %75, 3, !dbg !6117
  %180 = icmp eq i24 %179, 0, !dbg !6117
  br i1 %180, label %185, label %181, !dbg !6117

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !6118
  call void @llvm.dbg.value(metadata i32 %182, metadata !5943, metadata !DIExpression()), !dbg !6119
  %183 = icmp slt i32 %182, 0, !dbg !6120
  %184 = add i32 %182, %29, !dbg !6118
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression()), !dbg !5994
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6122
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6123

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !6124
  call void @llvm.dbg.value(metadata i32 %188, metadata !5947, metadata !DIExpression()), !dbg !6125
  %189 = icmp slt i32 %188, 0, !dbg !6126
  %190 = add i32 %29, 1, !dbg !6124
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression()), !dbg !5994
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6128
  call void @llvm.dbg.value(metadata i8* %192, metadata !5935, metadata !DIExpression()), !dbg !6008
  %193 = icmp sgt i32 %76, -1, !dbg !6129
  br i1 %193, label %194, label %196, !dbg !6131

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !6132
  call void @llvm.dbg.value(metadata i32 %195, metadata !5950, metadata !DIExpression()), !dbg !6134
  br label %241, !dbg !6135

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !6136
  call void @llvm.dbg.value(metadata i32 %197, metadata !5950, metadata !DIExpression()), !dbg !6134
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5935, metadata !DIExpression()), !dbg !6008
  %199 = load i64, i64* %20, align 8, !dbg !6138
  %200 = trunc i64 %199 to i8, !dbg !6139
  store i8 %200, i8* %10, align 1, !dbg !6140
  call void @llvm.dbg.value(metadata i8* %23, metadata !5936, metadata !DIExpression()), !dbg !6008
  br label %245, !dbg !6141

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6142
  %203 = icmp eq i24 %202, 0, !dbg !6142
  %204 = trunc i24 %75 to i8, !dbg !6144
  %205 = shl i8 %204, 1, !dbg !6144
  %206 = and i8 %205, 32, !dbg !6144
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6144
  call void @llvm.dbg.value(metadata i8 %207, metadata !5937, metadata !DIExpression()), !dbg !6008
  %208 = load i64, i64* %20, align 8, !dbg !6145
  call void @llvm.dbg.value(metadata i64 %208, metadata !5875, metadata !DIExpression()), !dbg !5994
  %209 = icmp slt i64 %208, 0, !dbg !6146
  br i1 %209, label %210, label %212, !dbg !6148

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5937, metadata !DIExpression()), !dbg !6008
  %211 = sub nsw i64 0, %208, !dbg !6149
  store i64 %211, i64* %20, align 8, !dbg !6151
  br label %212, !dbg !6152

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6008
  call void @llvm.dbg.value(metadata i8 %213, metadata !5937, metadata !DIExpression()), !dbg !6008
  %214 = load i64, i64* %20, align 8, !dbg !6153
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !6154
  call void @llvm.dbg.value(metadata i8* %215, metadata !5935, metadata !DIExpression()), !dbg !6008
  br label %216, !dbg !6155

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6156
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6157
  call void @llvm.dbg.value(metadata i8* %218, metadata !5935, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8 %217, metadata !5937, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.label(metadata !5993), !dbg !6158
  %219 = icmp sgt i32 %76, -1, !dbg !6159
  br i1 %219, label %222, label %220, !dbg !6160

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6161
  br label %245, !dbg !6160

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6163
  %224 = sub i32 %22, %223, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %224, metadata !5952, metadata !DIExpression()), !dbg !6164
  %225 = load i24, i24* %15, align 8, !dbg !6165
  %226 = and i24 %225, -65, !dbg !6165
  store i24 %226, i24* %15, align 8, !dbg !6165
  %227 = icmp ugt i32 %76, %224, !dbg !6166
  br i1 %227, label %228, label %245, !dbg !6168

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6169
  store i32 %229, i32* %16, align 4, !dbg !6171
  br label %245, !dbg !6172

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6173
  %232 = icmp eq i8* %231, null, !dbg !6175
  br i1 %232, label %245, label %233, !dbg !6176

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6177
  %235 = zext i32 %234 to i64, !dbg !6177
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !6179
  call void @llvm.dbg.value(metadata i8* %236, metadata !5935, metadata !DIExpression()), !dbg !6008
  %237 = load i24, i24* %15, align 8, !dbg !6180
  %238 = or i24 %237, 1048576, !dbg !6180
  store i24 %238, i24* %15, align 8, !dbg !6180
  store i8 120, i8* %21, align 1, !dbg !6181
  br label %216, !dbg !6182

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6183
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !6186
  br label %363, !dbg !6187

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6188
  call void @llvm.dbg.value(metadata i32 %242, metadata !5950, metadata !DIExpression()), !dbg !6134
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6189
  call void @llvm.dbg.value(metadata i32 -1, metadata !5934, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i32 %29, metadata !5874, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8* %192, metadata !5935, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8* %243, metadata !5936, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8 0, metadata !5937, metadata !DIExpression()), !dbg !6008
  %244 = icmp eq i8* %192, null, !dbg !6190
  br i1 %244, label %363, label %245, !dbg !6192, !llvm.loop !6004

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6161
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6008
  call void @llvm.dbg.value(metadata i32 0, metadata !5956, metadata !DIExpression()), !dbg !6008
  %250 = zext i8 %249 to i32, !dbg !6193
  %251 = icmp eq i8 %249, 0, !dbg !6195
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6008
  call void @llvm.dbg.value(metadata i32 undef, metadata !5955, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6008
  call void @llvm.dbg.value(metadata i32 undef, metadata !5955, metadata !DIExpression()), !dbg !6008
  %252 = icmp sgt i32 %58, 0, !dbg !6196
  br i1 %252, label %253, label %302, !dbg !6197

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6161
  %255 = icmp eq i24 %254, 0, !dbg !6161
  %256 = ptrtoint i8* %248 to i32, !dbg !6198
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6008
  %257 = ptrtoint i8* %247 to i32, !dbg !6198
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6008
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6008
  %258 = xor i1 %251, true, !dbg !6199
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6008
  %259 = sext i1 %258 to i32, !dbg !6199
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6008
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6008
  %260 = lshr i24 %246, 19, !dbg !6200
  %261 = and i24 %260, 1, !dbg !6200
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6200
  %263 = zext i24 %262 to i32, !dbg !6200
  %264 = add i32 %257, %259, !dbg !6200
  %265 = add i32 %256, %263, !dbg !6200
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6008
  %266 = and i24 %246, 4194304, !dbg !6201
  %267 = icmp eq i24 %266, 0, !dbg !6201
  %268 = load i32, i32* %16, align 4, !dbg !6203
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5955, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6008
  call void @llvm.dbg.value(metadata i32 undef, metadata !5955, metadata !DIExpression()), !dbg !6008
  %269 = load i32, i32* %17, align 8, !dbg !6204
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6204
  call void @llvm.dbg.value(metadata i32 undef, metadata !5955, metadata !DIExpression()), !dbg !6008
  %271 = add i32 %264, %58, !dbg !6204
  %272 = add i32 %265, %268, !dbg !6204
  %273 = add i32 %272, %270, !dbg !6205
  %274 = sub i32 %271, %273, !dbg !6205
  call void @llvm.dbg.value(metadata i32 %274, metadata !5933, metadata !DIExpression()), !dbg !6008
  %275 = and i24 %246, 4, !dbg !6206
  %276 = icmp eq i24 %275, 0, !dbg !6206
  br i1 %276, label %277, label %302, !dbg !6207

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5957, metadata !DIExpression()), !dbg !6208
  %278 = and i24 %246, 64, !dbg !6209
  %279 = icmp eq i24 %278, 0, !dbg !6209
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6210
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6210
  %282 = select i1 %279, i32 32, i32 48, !dbg !6210
  br i1 %280, label %287, label %283, !dbg !6210

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !6211
  call void @llvm.dbg.value(metadata i32 %284, metadata !5962, metadata !DIExpression()), !dbg !6212
  %285 = icmp slt i32 %284, 0, !dbg !6213
  %286 = add i32 %29, 1, !dbg !6211
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression()), !dbg !5994
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6008
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5998
  call void @llvm.dbg.value(metadata i32 %290, metadata !5874, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8 undef, metadata !5957, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.value(metadata i8 %288, metadata !5937, metadata !DIExpression()), !dbg !6008
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6215
  %292 = add i32 %291, -1, !dbg !6215
  br label %293, !dbg !6215

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6216
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5998
  call void @llvm.dbg.value(metadata i32 %295, metadata !5874, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %294, metadata !5933, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i32 %294, metadata !5933, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6008
  %296 = icmp sgt i32 %294, 0, !dbg !6217
  br i1 %296, label %297, label %302, !dbg !6215

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6218
  call void @llvm.dbg.value(metadata i32 %298, metadata !5933, metadata !DIExpression()), !dbg !6008
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !6219
  call void @llvm.dbg.value(metadata i32 %299, metadata !5968, metadata !DIExpression()), !dbg !6220
  %300 = icmp slt i32 %299, 0, !dbg !6221
  %301 = add i32 %295, 1, !dbg !6219
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression()), !dbg !5994
  br i1 %300, label %361, label %293, !llvm.loop !6223

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6008
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6008
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5998
  call void @llvm.dbg.value(metadata i32 %305, metadata !5874, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %304, metadata !5933, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i8 %303, metadata !5937, metadata !DIExpression()), !dbg !6008
  %306 = icmp eq i8 %303, 0, !dbg !6225
  br i1 %306, label %312, label %307, !dbg !6226

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6227
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !6228
  call void @llvm.dbg.value(metadata i32 %309, metadata !5971, metadata !DIExpression()), !dbg !6229
  %310 = icmp slt i32 %309, 0, !dbg !6230
  %311 = add i32 %305, 1, !dbg !6228
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression()), !dbg !5994
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5998
  call void @llvm.dbg.value(metadata i32 %313, metadata !5874, metadata !DIExpression()), !dbg !5994
  %314 = lshr i24 %246, 20, !dbg !6232
  %315 = lshr i24 %246, 19, !dbg !6233
  %316 = or i24 %314, %315, !dbg !6234
  %317 = and i24 %316, 1, !dbg !6234
  %318 = icmp eq i24 %317, 0, !dbg !6234
  br i1 %318, label %323, label %319, !dbg !6235

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !6236
  call void @llvm.dbg.value(metadata i32 %320, metadata !5975, metadata !DIExpression()), !dbg !6237
  %321 = icmp slt i32 %320, 0, !dbg !6238
  %322 = add i32 %313, 1, !dbg !6236
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression()), !dbg !5994
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5998
  call void @llvm.dbg.value(metadata i32 %324, metadata !5874, metadata !DIExpression()), !dbg !5994
  %325 = and i24 %246, 1048576, !dbg !6240
  %326 = icmp eq i24 %325, 0, !dbg !6240
  br i1 %326, label %333, label %327, !dbg !6241

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6242
  %329 = zext i8 %328 to i32, !dbg !6242
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !6242
  call void @llvm.dbg.value(metadata i32 %330, metadata !5981, metadata !DIExpression()), !dbg !6243
  %331 = icmp slt i32 %330, 0, !dbg !6244
  %332 = add i32 %324, 1, !dbg !6242
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression()), !dbg !5994
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5998
  call void @llvm.dbg.value(metadata i32 %334, metadata !5874, metadata !DIExpression()), !dbg !5994
  %335 = load i32, i32* %16, align 4, !dbg !6246
  call void @llvm.dbg.value(metadata i32 %335, metadata !5956, metadata !DIExpression()), !dbg !6008
  br label %336, !dbg !6247

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6248
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5998
  call void @llvm.dbg.value(metadata i32 %338, metadata !5874, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %337, metadata !5956, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6008
  %339 = icmp sgt i32 %337, 0, !dbg !6249
  br i1 %339, label %340, label %345, !dbg !6247

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %341, metadata !5956, metadata !DIExpression()), !dbg !6008
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !6251
  call void @llvm.dbg.value(metadata i32 %342, metadata !5985, metadata !DIExpression()), !dbg !6252
  %343 = icmp slt i32 %342, 0, !dbg !6253
  %344 = add i32 %338, 1, !dbg !6251
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression()), !dbg !5994
  br i1 %343, label %361, label %336, !llvm.loop !6255

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !6257
  call void @llvm.dbg.value(metadata i32 %346, metadata !5988, metadata !DIExpression()), !dbg !6258
  %347 = icmp slt i32 %346, 0, !dbg !6259
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression()), !dbg !5994
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6257
  call void @llvm.dbg.value(metadata i32 %349, metadata !5874, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %304, metadata !5933, metadata !DIExpression()), !dbg !6008
  %350 = icmp sgt i32 %304, 0, !dbg !6261
  br i1 %350, label %351, label %363, !dbg !6262

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6262
  %353 = add i32 %352, %338, !dbg !6262
  br label %354, !dbg !6262

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %355, metadata !5933, metadata !DIExpression()), !dbg !6008
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !6263
  call void @llvm.dbg.value(metadata i32 %356, metadata !5990, metadata !DIExpression()), !dbg !6264
  %357 = icmp slt i32 %356, 0, !dbg !6265
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6267
  call void @llvm.dbg.value(metadata i32 undef, metadata !5874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %359, metadata !5933, metadata !DIExpression()), !dbg !6008
  %360 = icmp sgt i32 %355, 1, !dbg !6261
  br i1 %360, label %354, label %363, !dbg !6262, !llvm.loop !6268

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5874, metadata !DIExpression()), !dbg !5994
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !6005
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5998
  call void @llvm.dbg.value(metadata i32 %364, metadata !5874, metadata !DIExpression()), !dbg !5994
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !6005
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5994
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !6270
  ret i32 %366, !dbg !6270
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6271 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6275, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i8* %1, metadata !6276, metadata !DIExpression()), !dbg !6277
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6278
  store i24 0, i24* %3, align 4, !dbg !6278
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6278
  store i8 0, i8* %4, align 1, !dbg !6278
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6278
  store i32 0, i32* %5, align 4, !dbg !6278
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6278
  store i32 0, i32* %6, align 4, !dbg !6278
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6279
  call void @llvm.dbg.value(metadata i8* %7, metadata !6276, metadata !DIExpression()), !dbg !6277
  %8 = load i8, i8* %7, align 1, !dbg !6280
  %9 = icmp eq i8 %8, 37, !dbg !6282
  br i1 %9, label %10, label %12, !dbg !6283

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6284
  call void @llvm.dbg.value(metadata i8* %11, metadata !6276, metadata !DIExpression()), !dbg !6277
  store i8 37, i8* %4, align 1, !dbg !6286
  br label %18, !dbg !6287

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !6288
  call void @llvm.dbg.value(metadata i8* %13, metadata !6276, metadata !DIExpression()), !dbg !6277
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !6289
  call void @llvm.dbg.value(metadata i8* %14, metadata !6276, metadata !DIExpression()), !dbg !6277
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !6290
  call void @llvm.dbg.value(metadata i8* %15, metadata !6276, metadata !DIExpression()), !dbg !6277
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !6291
  call void @llvm.dbg.value(metadata i8* %16, metadata !6276, metadata !DIExpression()), !dbg !6277
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !6292
  call void @llvm.dbg.value(metadata i8* %17, metadata !6276, metadata !DIExpression()), !dbg !6277
  br label %18, !dbg !6293

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6277
  ret i8* %19, !dbg !6294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6295 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6299, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata i8* %1, metadata !6300, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata i8* %2, metadata !6301, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata i8* %3, metadata !6302, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata i32 0, metadata !6303, metadata !DIExpression()), !dbg !6306
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6307

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6308
  call void @llvm.dbg.value(metadata i32 %9, metadata !6303, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata i8* %8, metadata !6301, metadata !DIExpression()), !dbg !6306
  %10 = icmp ult i8* %8, %3, !dbg !6309
  br i1 %10, label %11, label %13, !dbg !6310

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6311
  br label %17, !dbg !6310

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6312

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6313
  %16 = icmp eq i8 %15, 0, !dbg !6312
  br i1 %16, label %24, label %17, !dbg !6307

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6311
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6314
  call void @llvm.dbg.value(metadata i8* %19, metadata !6301, metadata !DIExpression()), !dbg !6306
  %20 = zext i8 %18 to i32, !dbg !6315
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !6316
  call void @llvm.dbg.value(metadata i32 %21, metadata !6304, metadata !DIExpression()), !dbg !6317
  %22 = icmp slt i32 %21, 0, !dbg !6318
  %23 = add i32 %9, 1, !dbg !6320
  call void @llvm.dbg.value(metadata i32 undef, metadata !6303, metadata !DIExpression()), !dbg !6306
  br i1 %22, label %24, label %7, !llvm.loop !6321

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6306
  ret i32 %25, !dbg !6323
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6324 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6328, metadata !DIExpression()), !dbg !6338
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6329, metadata !DIExpression()), !dbg !6338
  call void @llvm.dbg.value(metadata i8* %2, metadata !6330, metadata !DIExpression()), !dbg !6338
  call void @llvm.dbg.value(metadata i8* %3, metadata !6331, metadata !DIExpression()), !dbg !6338
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6339
  %6 = load i8, i8* %5, align 1, !dbg !6339
  %7 = zext i8 %6 to i32, !dbg !6340
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !6341
  %9 = icmp eq i32 %8, 0, !dbg !6341
  call void @llvm.dbg.value(metadata i1 %9, metadata !6332, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6338
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !6342
  call void @llvm.dbg.value(metadata i32 %10, metadata !6333, metadata !DIExpression()), !dbg !6338
  %11 = ptrtoint i8* %3 to i32, !dbg !6343
  %12 = ptrtoint i8* %2 to i32, !dbg !6343
  %13 = sub i32 %11, %12, !dbg !6343
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6344
  call void @llvm.dbg.value(metadata i8* %14, metadata !6335, metadata !DIExpression()), !dbg !6338
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6345

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6338
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6328, metadata !DIExpression()), !dbg !6338
  call void @llvm.dbg.value(metadata i8* %18, metadata !6335, metadata !DIExpression()), !dbg !6338
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6346
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6347
  call void @llvm.dbg.value(metadata i32 %25, metadata !6336, metadata !DIExpression()), !dbg !6348
  %26 = icmp ult i32 %25, 10, !dbg !6349
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6350
  %28 = add i32 %27, %25, !dbg !6348
  %29 = trunc i32 %28 to i8, !dbg !6350
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6351
  call void @llvm.dbg.value(metadata i8* %30, metadata !6335, metadata !DIExpression()), !dbg !6338
  store i8 %29, i8* %30, align 1, !dbg !6352
  call void @llvm.dbg.value(metadata i64 %22, metadata !6328, metadata !DIExpression()), !dbg !6338
  %31 = icmp uge i64 %19, %15, !dbg !6353
  %32 = icmp ugt i8* %30, %2, !dbg !6354
  %33 = and i1 %31, %32, !dbg !6354
  br i1 %33, label %17, label %34, !dbg !6355, !llvm.loop !6356

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6358
  %36 = load i24, i24* %35, align 4, !dbg !6358
  %37 = and i24 %36, 32, !dbg !6358
  %38 = icmp eq i24 %37, 0, !dbg !6358
  br i1 %38, label %44, label %39, !dbg !6360

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6361

40:                                               ; preds = %39
  br label %41, !dbg !6363

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6367
  store i24 %43, i24* %35, align 4, !dbg !6367
  br label %44, !dbg !6368

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !6369 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6375, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i8* %1, metadata !6376, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i32 %2, metadata !6377, metadata !DIExpression()), !dbg !6378
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6379
  %5 = load i24, i24* %4, align 4, !dbg !6379
  %6 = lshr i24 %5, 11, !dbg !6379
  %7 = and i24 %6, 15, !dbg !6379
  %8 = zext i24 %7 to i32, !dbg !6379
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6380

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6381
  store i32 %2, i32* %10, align 4, !dbg !6383
  br label %28, !dbg !6384

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6385
  store i8 %12, i8* %1, align 1, !dbg !6386
  br label %28, !dbg !6387

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6388
  %15 = bitcast i8* %1 to i16*, !dbg !6389
  store i16 %14, i16* %15, align 2, !dbg !6390
  br label %28, !dbg !6391

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6392
  store i32 %2, i32* %17, align 4, !dbg !6393
  br label %28, !dbg !6394

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6395
  %20 = bitcast i8* %1 to i64*, !dbg !6396
  store i64 %19, i64* %20, align 8, !dbg !6397
  br label %28, !dbg !6398

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6399
  %23 = bitcast i8* %1 to i64*, !dbg !6400
  store i64 %22, i64* %23, align 8, !dbg !6401
  br label %28, !dbg !6402

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6403
  store i32 %2, i32* %25, align 4, !dbg !6404
  br label %28, !dbg !6405

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6406
  store i32 %2, i32* %27, align 4, !dbg !6407
  br label %28, !dbg !6408

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6409
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !6410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6413, metadata !DIExpression()), !dbg !6414
  %2 = add i32 %0, -65, !dbg !6415
  %3 = icmp ult i32 %2, 26, !dbg !6416
  %4 = zext i1 %3 to i32, !dbg !6416
  ret i32 %4, !dbg !6417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !6418 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6422, metadata !DIExpression()), !dbg !6423
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6424

2:                                                ; preds = %1
  br label %4, !dbg !6425

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6427

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6428
  ret i32 %5, !dbg !6429
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6430 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6432, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i8* %1, metadata !6433, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i8 1, metadata !6434, metadata !DIExpression()), !dbg !6435
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6436

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6434, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i8* %5, metadata !6433, metadata !DIExpression()), !dbg !6435
  %6 = load i8, i8* %5, align 1, !dbg !6437
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6439

7:                                                ; preds = %4
  br label %11, !dbg !6440

8:                                                ; preds = %4
  br label %11, !dbg !6442

9:                                                ; preds = %4
  br label %11, !dbg !6443

10:                                               ; preds = %4
  br label %11, !dbg !6444

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6445
  %14 = or i24 %13, %12, !dbg !6445
  store i24 %14, i24* %3, align 4, !dbg !6445
  call void @llvm.dbg.value(metadata i8 poison, metadata !6434, metadata !DIExpression()), !dbg !6435
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6433, metadata !DIExpression()), !dbg !6435
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6434, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i8* %15, metadata !6433, metadata !DIExpression()), !dbg !6435
  %17 = load i24, i24* %3, align 4, !dbg !6446
  %18 = and i24 %17, 68, !dbg !6448
  %19 = icmp eq i24 %18, 68, !dbg !6448
  br i1 %19, label %20, label %22, !dbg !6448

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6449
  store i24 %21, i24* %3, align 4, !dbg !6449
  br label %22, !dbg !6451

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6452
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6453 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6455, metadata !DIExpression()), !dbg !6459
  call void @llvm.dbg.value(metadata i8* %1, metadata !6456, metadata !DIExpression()), !dbg !6459
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6460
  %5 = load i24, i24* %4, align 4, !dbg !6461
  %6 = or i24 %5, 128, !dbg !6461
  store i24 %6, i24* %4, align 4, !dbg !6461
  call void @llvm.dbg.value(metadata i8* %1, metadata !6456, metadata !DIExpression()), !dbg !6459
  %7 = load i8, i8* %1, align 1, !dbg !6462
  %8 = icmp eq i8 %7, 42, !dbg !6464
  br i1 %8, label %9, label %12, !dbg !6465

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6466
  store i24 %10, i24* %4, align 4, !dbg !6466
  call void @llvm.dbg.value(metadata i8* %1, metadata !6456, metadata !DIExpression()), !dbg !6459
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6468
  call void @llvm.dbg.value(metadata i8* %11, metadata !6456, metadata !DIExpression()), !dbg !6459
  store i8* %11, i8** %3, align 4, !dbg !6468
  br label %29, !dbg !6469

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6457, metadata !DIExpression()), !dbg !6459
  call void @llvm.dbg.value(metadata i8** %3, metadata !6456, metadata !DIExpression(DW_OP_deref)), !dbg !6459
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6470
  call void @llvm.dbg.value(metadata i32 %13, metadata !6458, metadata !DIExpression()), !dbg !6459
  %14 = load i8*, i8** %3, align 4, !dbg !6471
  call void @llvm.dbg.value(metadata i8* %14, metadata !6456, metadata !DIExpression()), !dbg !6459
  %15 = icmp eq i8* %14, %1, !dbg !6473
  br i1 %15, label %29, label %16, !dbg !6474

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6475
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6477
  store i32 %13, i32* %18, align 4, !dbg !6478
  %19 = lshr i32 %13, 31, !dbg !6479
  %20 = lshr i24 %17, 1, !dbg !6480
  %21 = and i24 %20, 1, !dbg !6480
  %22 = zext i24 %21 to i32, !dbg !6480
  %23 = or i32 %19, %22, !dbg !6480
  %24 = trunc i32 %23 to i24, !dbg !6480
  %25 = shl nuw nsw i24 %24, 1, !dbg !6480
  %26 = and i24 %17, -131, !dbg !6480
  %27 = or i24 %26, 128, !dbg !6480
  %28 = or i24 %25, %27, !dbg !6480
  store i24 %28, i24* %4, align 4, !dbg !6480
  br label %29, !dbg !6481

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6459
  ret i8* %30, !dbg !6482
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6483 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6485, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata i8* %1, metadata !6486, metadata !DIExpression()), !dbg !6488
  %4 = load i8, i8* %1, align 1, !dbg !6489
  %5 = icmp eq i8 %4, 46, !dbg !6490
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6491
  %7 = load i24, i24* %6, align 4, !dbg !6492
  %8 = select i1 %5, i24 512, i24 0, !dbg !6492
  %9 = and i24 %7, -513, !dbg !6492
  %10 = or i24 %9, %8, !dbg !6492
  store i24 %10, i24* %6, align 4, !dbg !6492
  br i1 %5, label %11, label %32, !dbg !6493

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6486, metadata !DIExpression()), !dbg !6488
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6494
  call void @llvm.dbg.value(metadata i8* %12, metadata !6486, metadata !DIExpression()), !dbg !6488
  store i8* %12, i8** %3, align 4, !dbg !6494
  %13 = load i8, i8* %12, align 1, !dbg !6495
  %14 = icmp eq i8 %13, 42, !dbg !6497
  br i1 %14, label %15, label %18, !dbg !6498

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6499
  store i24 %16, i24* %6, align 4, !dbg !6499
  call void @llvm.dbg.value(metadata i8* %12, metadata !6486, metadata !DIExpression()), !dbg !6488
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6501
  call void @llvm.dbg.value(metadata i8* %17, metadata !6486, metadata !DIExpression()), !dbg !6488
  store i8* %17, i8** %3, align 4, !dbg !6501
  br label %32, !dbg !6502

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6486, metadata !DIExpression(DW_OP_deref)), !dbg !6488
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6503
  call void @llvm.dbg.value(metadata i32 %19, metadata !6487, metadata !DIExpression()), !dbg !6488
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6504
  store i32 %19, i32* %20, align 4, !dbg !6505
  %21 = lshr i32 %19, 31, !dbg !6506
  %22 = load i24, i24* %6, align 4, !dbg !6507
  %23 = lshr i24 %22, 1, !dbg !6507
  %24 = and i24 %23, 1, !dbg !6507
  %25 = zext i24 %24 to i32, !dbg !6507
  %26 = or i32 %21, %25, !dbg !6507
  %27 = trunc i32 %26 to i24, !dbg !6507
  %28 = shl nuw nsw i24 %27, 1, !dbg !6507
  %29 = and i24 %22, -3, !dbg !6507
  %30 = or i24 %28, %29, !dbg !6507
  store i24 %30, i24* %6, align 4, !dbg !6507
  %31 = load i8*, i8** %3, align 4, !dbg !6508
  call void @llvm.dbg.value(metadata i8* %31, metadata !6486, metadata !DIExpression()), !dbg !6488
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6488
  ret i8* %33, !dbg !6509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6510 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6512, metadata !DIExpression()), !dbg !6514
  call void @llvm.dbg.value(metadata i8* %1, metadata !6513, metadata !DIExpression()), !dbg !6514
  %3 = load i8, i8* %1, align 1, !dbg !6515
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6516

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6517
  call void @llvm.dbg.value(metadata i8* %5, metadata !6513, metadata !DIExpression()), !dbg !6514
  %6 = load i8, i8* %5, align 1, !dbg !6520
  %7 = icmp eq i8 %6, 104, !dbg !6521
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6522
  %9 = load i24, i24* %8, align 4, !dbg !6522
  %10 = and i24 %9, -30721, !dbg !6522
  br i1 %7, label %11, label %14, !dbg !6523

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6524
  store i24 %12, i24* %8, align 4, !dbg !6524
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6526
  call void @llvm.dbg.value(metadata i8* %13, metadata !6513, metadata !DIExpression()), !dbg !6514
  br label %56, !dbg !6527

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6528
  store i24 %15, i24* %8, align 4, !dbg !6528
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6530
  call void @llvm.dbg.value(metadata i8* %17, metadata !6513, metadata !DIExpression()), !dbg !6514
  %18 = load i8, i8* %17, align 1, !dbg !6532
  %19 = icmp eq i8 %18, 108, !dbg !6533
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6534
  %21 = load i24, i24* %20, align 4, !dbg !6534
  %22 = and i24 %21, -30721, !dbg !6534
  br i1 %19, label %23, label %26, !dbg !6535

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6536
  store i24 %24, i24* %20, align 4, !dbg !6536
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6538
  call void @llvm.dbg.value(metadata i8* %25, metadata !6513, metadata !DIExpression()), !dbg !6514
  br label %56, !dbg !6539

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6540
  store i24 %27, i24* %20, align 4, !dbg !6540
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6542
  %30 = load i24, i24* %29, align 4, !dbg !6543
  %31 = and i24 %30, -30721, !dbg !6543
  %32 = or i24 %31, 10240, !dbg !6543
  store i24 %32, i24* %29, align 4, !dbg !6543
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6544
  call void @llvm.dbg.value(metadata i8* %33, metadata !6513, metadata !DIExpression()), !dbg !6514
  br label %56, !dbg !6545

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6546
  %36 = load i24, i24* %35, align 4, !dbg !6547
  %37 = and i24 %36, -30721, !dbg !6547
  %38 = or i24 %37, 12288, !dbg !6547
  store i24 %38, i24* %35, align 4, !dbg !6547
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6548
  call void @llvm.dbg.value(metadata i8* %39, metadata !6513, metadata !DIExpression()), !dbg !6514
  br label %56, !dbg !6549

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6550
  %42 = load i24, i24* %41, align 4, !dbg !6551
  %43 = and i24 %42, -30721, !dbg !6551
  %44 = or i24 %43, 14336, !dbg !6551
  store i24 %44, i24* %41, align 4, !dbg !6551
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6552
  call void @llvm.dbg.value(metadata i8* %45, metadata !6513, metadata !DIExpression()), !dbg !6514
  br label %56, !dbg !6553

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6554
  %48 = load i24, i24* %47, align 4, !dbg !6555
  %49 = and i24 %48, -30723, !dbg !6555
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6556
  call void @llvm.dbg.value(metadata i8* %50, metadata !6513, metadata !DIExpression()), !dbg !6514
  %51 = or i24 %49, 16386, !dbg !6557
  store i24 %51, i24* %47, align 4, !dbg !6557
  br label %56, !dbg !6558

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6559
  %54 = load i24, i24* %53, align 4, !dbg !6560
  %55 = and i24 %54, -30721, !dbg !6560
  store i24 %55, i24* %53, align 4, !dbg !6560
  br label %56, !dbg !6561

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6513, metadata !DIExpression()), !dbg !6514
  ret i8* %57, !dbg !6562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6563 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6565, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata i8* %1, metadata !6566, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata i8 0, metadata !6567, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata i8* %1, metadata !6566, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6570
  %3 = load i8, i8* %1, align 1, !dbg !6571
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6572
  store i8 %3, i8* %4, align 1, !dbg !6573
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6574

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6575

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6576
  %9 = load i24, i24* %8, align 4, !dbg !6576
  %10 = and i24 %9, -458753, !dbg !6576
  %11 = or i24 %10, %7, !dbg !6576
  call void @llvm.dbg.label(metadata !6568), !dbg !6577
  %12 = and i24 %9, 30720, !dbg !6578
  %13 = icmp eq i24 %12, 16384, !dbg !6578
  %14 = zext i1 %13 to i24, !dbg !6580
  %15 = or i24 %11, %14, !dbg !6580
  %16 = icmp eq i8 %3, 99, !dbg !6581
  br i1 %16, label %17, label %43, !dbg !6583

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6584
  %19 = icmp ne i24 %18, 0, !dbg !6584
  call void @llvm.dbg.value(metadata i1 %19, metadata !6567, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6570
  br label %43, !dbg !6586

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6587
  %22 = load i24, i24* %21, align 4, !dbg !6588
  %23 = and i24 %22, -458753, !dbg !6588
  %24 = or i24 %23, 262144, !dbg !6588
  call void @llvm.dbg.value(metadata i8 1, metadata !6567, metadata !DIExpression()), !dbg !6570
  br label %43, !dbg !6589

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6592
  %27 = load i24, i24* %26, align 4, !dbg !6593
  %28 = and i24 %27, -458753, !dbg !6593
  %29 = or i24 %28, 196608, !dbg !6593
  %30 = and i24 %27, 30720, !dbg !6594
  %31 = icmp eq i24 %30, 16384, !dbg !6594
  br label %43, !dbg !6596

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6597
  %34 = load i24, i24* %33, align 4, !dbg !6598
  %35 = and i24 %34, -458753, !dbg !6598
  %36 = or i24 %35, 196608, !dbg !6598
  %37 = and i24 %34, 30720, !dbg !6599
  %38 = icmp ne i24 %37, 0, !dbg !6599
  br label %43, !dbg !6601

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6602
  %41 = load i24, i24* %40, align 4, !dbg !6603
  %42 = or i24 %41, 1, !dbg !6603
  br label %43, !dbg !6604

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6605
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6606
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6607
  call void @llvm.dbg.value(metadata i8* %48, metadata !6566, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata i8 poison, metadata !6567, metadata !DIExpression()), !dbg !6570
  %49 = lshr i24 %44, 1, !dbg !6605
  %50 = and i24 %49, 1, !dbg !6605
  %51 = zext i24 %50 to i32, !dbg !6605
  %52 = or i32 %51, %47, !dbg !6605
  %53 = trunc i32 %52 to i24, !dbg !6605
  %54 = shl nuw nsw i24 %53, 1, !dbg !6605
  %55 = and i24 %44, -3, !dbg !6605
  %56 = or i24 %54, %55, !dbg !6605
  store i24 %56, i24* %46, align 4, !dbg !6605
  ret i8* %48, !dbg !6608
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6609 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6613, metadata !DIExpression()), !dbg !6616
  %2 = load i8*, i8** %0, align 4, !dbg !6617
  call void @llvm.dbg.value(metadata i8* %2, metadata !6614, metadata !DIExpression()), !dbg !6616
  call void @llvm.dbg.value(metadata i32 0, metadata !6615, metadata !DIExpression()), !dbg !6616
  %3 = load i8, i8* %2, align 1, !dbg !6618
  %4 = zext i8 %3 to i32, !dbg !6619
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !6620
  %6 = icmp eq i32 %5, 0, !dbg !6621
  br i1 %6, label %19, label %7, !dbg !6621

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6615, metadata !DIExpression()), !dbg !6616
  call void @llvm.dbg.value(metadata i8* %10, metadata !6614, metadata !DIExpression()), !dbg !6616
  %11 = mul i32 %9, 10, !dbg !6622
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6624
  call void @llvm.dbg.value(metadata i8* %12, metadata !6614, metadata !DIExpression()), !dbg !6616
  %13 = add i32 %11, -48, !dbg !6625
  %14 = add i32 %13, %8, !dbg !6626
  call void @llvm.dbg.value(metadata i32 %14, metadata !6615, metadata !DIExpression()), !dbg !6616
  %15 = load i8, i8* %12, align 1, !dbg !6618
  %16 = zext i8 %15 to i32, !dbg !6619
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !6620
  %18 = icmp eq i32 %17, 0, !dbg !6621
  br i1 %18, label %19, label %7, !dbg !6621, !llvm.loop !6627

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6616
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6616
  store i8* %20, i8** %0, align 4, !dbg !6629
  ret i32 %21, !dbg !6630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !6631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6633, metadata !DIExpression()), !dbg !6634
  %2 = add i32 %0, -48, !dbg !6635
  %3 = icmp ult i32 %2, 10, !dbg !6636
  %4 = zext i1 %3 to i32, !dbg !6636
  ret i32 %4, !dbg !6637
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6638 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6643, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i32 %1, metadata !6644, metadata !DIExpression()), !dbg !6645
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !6646, !srcloc !6648
  ret void, !dbg !6649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6650 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6652, metadata !DIExpression()), !dbg !6660
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6661
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6661
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6653, metadata !DIExpression()), !dbg !6662
  call void @llvm.va_start(i8* nonnull %3), !dbg !6663
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6664
  %5 = load i32, i32* %4, align 4, !dbg !6664
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6664
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !6664
  call void @llvm.va_end(i8* nonnull %3), !dbg !6665
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6666
  ret void, !dbg !6666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6667 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !6669, !srcloc !6670
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !6671, !srcloc !6672
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #23, !dbg !6673, !srcloc !6674
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6675, !srcloc !6676
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6677, !srcloc !6678
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6679, !srcloc !6680
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !6681, !srcloc !6682
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6683, !srcloc !6684
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6685, !srcloc !6686
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6687, !srcloc !6688
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !6689, !srcloc !6690
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6691, !srcloc !6692
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6693, !srcloc !6694
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #23, !dbg !6695, !srcloc !6696
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6697, !srcloc !6698
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,1024\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6699, !srcloc !6700
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6701, !srcloc !6702
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !6703, !srcloc !6704
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6705, !srcloc !6706
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !6707, !srcloc !6708
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6709, !srcloc !6710
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6711, !srcloc !6712
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #23, !dbg !6713, !srcloc !6714
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6715, !srcloc !6716
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6717, !srcloc !6718
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6719, !srcloc !6720
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6721, !srcloc !6722
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6723, !srcloc !6724
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #23, !dbg !6725, !srcloc !6726
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6727, !srcloc !6728
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6729, !srcloc !6730
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #23, !dbg !6731, !srcloc !6732
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #23, !dbg !6733, !srcloc !6734
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #23, !dbg !6735, !srcloc !6736
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #23, !dbg !6737, !srcloc !6738
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #23, !dbg !6739, !srcloc !6740
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #23, !dbg !6741, !srcloc !6742
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #23, !dbg !6743, !srcloc !6744
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6745, !srcloc !6746
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6747, !srcloc !6748
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6749, !srcloc !6750
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6751, !srcloc !6752
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !6753, !srcloc !6754
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !6755, !srcloc !6756
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6757, !srcloc !6758
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6759, !srcloc !6760
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6761, !srcloc !6762
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6763, !srcloc !6764
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6765, !srcloc !6766
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6767, !srcloc !6768
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6769, !srcloc !6770
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6771, !srcloc !6772
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6773, !srcloc !6774
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6775, !srcloc !6776
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6777, !srcloc !6778
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6779, !srcloc !6780
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6781, !srcloc !6782
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6783, !srcloc !6784
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6785, !srcloc !6786
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6787, !srcloc !6788
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6789, !srcloc !6790
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !6791, !srcloc !6792
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !6793, !srcloc !6794
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !6795, !srcloc !6796
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !6797, !srcloc !6798
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !6799, !srcloc !6800
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !6801, !srcloc !6802
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !6803, !srcloc !6804
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !6805, !srcloc !6806
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !6807, !srcloc !6808
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #23, !dbg !6809, !srcloc !6810
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #23, !dbg !6811, !srcloc !6812
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #23, !dbg !6813, !srcloc !6814
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #23, !dbg !6815, !srcloc !6816
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !6817, !srcloc !6818
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #23, !dbg !6819, !srcloc !6820
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #23, !dbg !6821, !srcloc !6822
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !6823, !srcloc !6824
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #23, !dbg !6825, !srcloc !6826
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #23, !dbg !6827, !srcloc !6828
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #23, !dbg !6829, !srcloc !6830
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #23, !dbg !6831, !srcloc !6832
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6833, !srcloc !6834
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !6835, !srcloc !6836
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !6837, !srcloc !6838
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !6839, !srcloc !6840
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !6841, !srcloc !6842
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !6843, !srcloc !6844
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !6845, !srcloc !6846
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !6847, !srcloc !6848
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !6849, !srcloc !6850
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !6851, !srcloc !6852
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !6853, !srcloc !6854
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !6855, !srcloc !6856
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !6857, !srcloc !6858
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !6859, !srcloc !6860
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !6861, !srcloc !6862
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !6863, !srcloc !6864
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !6865, !srcloc !6866
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !6867, !srcloc !6868
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !6869, !srcloc !6870
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !6871, !srcloc !6872
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !6873, !srcloc !6874
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !6875, !srcloc !6876
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !6877, !srcloc !6878
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !6879, !srcloc !6880
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !6881, !srcloc !6882
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !6883, !srcloc !6884
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !6885, !srcloc !6886
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !6887, !srcloc !6888
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !6889, !srcloc !6890
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !6891, !srcloc !6892
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !6893, !srcloc !6894
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !6895, !srcloc !6896
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !6897, !srcloc !6898
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !6899, !srcloc !6900
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !6901, !srcloc !6902
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !6903, !srcloc !6904
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !6905, !srcloc !6906
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !6907, !srcloc !6908
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !6909, !srcloc !6910
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !6911, !srcloc !6912
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !6913, !srcloc !6914
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !6915, !srcloc !6916
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !6917, !srcloc !6918
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6919, !srcloc !6920
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !6921, !srcloc !6922
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !6923, !srcloc !6924
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !6925, !srcloc !6926
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !6927, !srcloc !6928
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !6929, !srcloc !6930
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6931, !srcloc !6932
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !6933, !srcloc !6934
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !6935, !srcloc !6936
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !6937, !srcloc !6938
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !6939, !srcloc !6940
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !6941, !srcloc !6942
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !6943, !srcloc !6944
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !6945, !srcloc !6946
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !6947, !srcloc !6948
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !6949, !srcloc !6950
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !6951, !srcloc !6952
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !6953, !srcloc !6954
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !6955, !srcloc !6956
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !6957, !srcloc !6958
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !6959, !srcloc !6960
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !6961, !srcloc !6962
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !6963, !srcloc !6964
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !6965, !srcloc !6966
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !6967, !srcloc !6968
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !6969, !srcloc !6970
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !6971, !srcloc !6972
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !6973, !srcloc !6974
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !6975, !srcloc !6976
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !6977, !srcloc !6978
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !6979, !srcloc !6980
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !6981, !srcloc !6982
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !6983, !srcloc !6984
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !6985, !srcloc !6986
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !6987, !srcloc !6988
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !6989, !srcloc !6990
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !6991, !srcloc !6992
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !6993, !srcloc !6994
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !6995, !srcloc !6996
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !6997, !srcloc !6998
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !6999, !srcloc !7000
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !7001, !srcloc !7002
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !7003, !srcloc !7004
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !7005, !srcloc !7006
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !7007, !srcloc !7008
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !7009, !srcloc !7010
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !7011, !srcloc !7012
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !7013, !srcloc !7014
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !7015, !srcloc !7016
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !7017, !srcloc !7018
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !7019, !srcloc !7020
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !7021, !srcloc !7022
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !7023, !srcloc !7024
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !7025, !srcloc !7026
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !7027, !srcloc !7028
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !7029, !srcloc !7030
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !7031, !srcloc !7032
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #23, !dbg !7033, !srcloc !7034
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !7035, !srcloc !7036
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !7037, !srcloc !7038
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !7039, !srcloc !7040
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !7041, !srcloc !7042
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !7043, !srcloc !7044
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !7045, !srcloc !7046
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !7047, !srcloc !7048
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !7049, !srcloc !7050
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !7051, !srcloc !7052
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #23, !dbg !7053, !srcloc !7054
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !7055, !srcloc !7056
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !7057, !srcloc !7058
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !7059, !srcloc !7060
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !7061, !srcloc !7062
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !7063, !srcloc !7064
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !7065, !srcloc !7066
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !7067, !srcloc !7068
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !7069, !srcloc !7070
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !7071, !srcloc !7072
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !7073, !srcloc !7074
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !7075, !srcloc !7076
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !7077, !srcloc !7078
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !7079, !srcloc !7080
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !7081, !srcloc !7082
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !7083, !srcloc !7084
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !7085, !srcloc !7086
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !7087, !srcloc !7088
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !7089, !srcloc !7090
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !7091, !srcloc !7092
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !7093, !srcloc !7094
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !7095, !srcloc !7096
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !7097, !srcloc !7098
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !7099, !srcloc !7100
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !7101, !srcloc !7102
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !7103, !srcloc !7104
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !7105, !srcloc !7106
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !7107, !srcloc !7108
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !7109, !srcloc !7110
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !7111, !srcloc !7112
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !7113, !srcloc !7114
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !7115, !srcloc !7116
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !7117, !srcloc !7118
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !7119, !srcloc !7120
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !7121, !srcloc !7122
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !7123, !srcloc !7124
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !7125, !srcloc !7126
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !7127, !srcloc !7128
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !7129, !srcloc !7130
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !7131, !srcloc !7132
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !7133, !srcloc !7134
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !7135, !srcloc !7136
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !7137, !srcloc !7138
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !7139, !srcloc !7140
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #23, !dbg !7141, !srcloc !7142
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #23, !dbg !7143, !srcloc !7144
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_CHANNEL_NAME\0A\09.equ\09CONFIG_ZBUS_CHANNEL_NAME,1\0A\09.type\09CONFIG_ZBUS_CHANNEL_NAME,%object", ""() #23, !dbg !7145, !srcloc !7146
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #23, !dbg !7147, !srcloc !7148
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_WRN\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_WRN,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_WRN,%object", ""() #23, !dbg !7149, !srcloc !7150
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,2\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #23, !dbg !7151, !srcloc !7152
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !7153, !srcloc !7154
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !7155, !srcloc !7156
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !7157, !srcloc !7158
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !7159, !srcloc !7160
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !7161, !srcloc !7162
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !7163, !srcloc !7164
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !7165, !srcloc !7166
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !7167, !srcloc !7168
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !7169, !srcloc !7170
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !7171, !srcloc !7172
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !7173, !srcloc !7174
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !7175, !srcloc !7176
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !7177, !srcloc !7178
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !7179, !srcloc !7180
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !7181, !srcloc !7182
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !7183, !srcloc !7184
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !7185, !srcloc !7186
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !7187, !srcloc !7188
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !7189, !srcloc !7190
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !7191, !srcloc !7192
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !7193, !srcloc !7194
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !7195, !srcloc !7196
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !7197, !srcloc !7198
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !7199, !srcloc !7200
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !7201, !srcloc !7202
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !7203, !srcloc !7204
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !7205, !srcloc !7206
  ret void, !dbg !7207
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7208 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7210, metadata !DIExpression()), !dbg !7211
  tail call void @SOC_RdcInit() #25, !dbg !7212
  tail call void @SOC_ClockInit() #25, !dbg !7213
  tail call fastcc void @nxp_mcimx7_gpio_config() #25, !dbg !7214
  ret i32 0, !dbg !7215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #16 !dbg !7216 {
  tail call fastcc void @RDC_SetDomainID() #25, !dbg !7217
  ret void, !dbg !7218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !7219 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #24, !dbg !7220
  tail call fastcc void @CCM_EnableRoot() #25, !dbg !7221
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #25, !dbg !7222
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #25, !dbg !7223
  tail call fastcc void @WDOG_DisablePowerdown() #25, !dbg !7224
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #25, !dbg !7225
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #25, !dbg !7226
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #25, !dbg !7227
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #25, !dbg !7228
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #25, !dbg !7229
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #25, !dbg !7230
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #25, !dbg !7231
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #25, !dbg !7232
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #25, !dbg !7233
  ret void, !dbg !7234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #16 !dbg !7235 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #25, !dbg !7236
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #25, !dbg !7237
  ret void, !dbg !7238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !7239 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !7244, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.value(metadata i32 %0, metadata !7245, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.value(metadata i8 %1, metadata !7246, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.value(metadata i8 0, metadata !7247, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.value(metadata i8 0, metadata !7248, metadata !DIExpression()), !dbg !7249
  %3 = zext i8 %1 to i32, !dbg !7250
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !7251
  store volatile i32 %3, i32* %4, align 4, !dbg !7252
  ret void, !dbg !7253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7254 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !7258, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.value(metadata i32 %0, metadata !7259, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.value(metadata i32 %1, metadata !7260, metadata !DIExpression()), !dbg !7261
  %3 = inttoptr i32 %0 to i32*, !dbg !7262
  store volatile i32 %1, i32* %3, align 4, !dbg !7263
  ret void, !dbg !7264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #16 !dbg !7265 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !7269, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata i32 809024384, metadata !7270, metadata !DIExpression()), !dbg !7271
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !7272
  ret void, !dbg !7273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #16 !dbg !7274 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !7279, metadata !DIExpression()), !dbg !7280
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !7281
  %2 = and i16 %1, -2, !dbg !7281
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !7281
  ret void, !dbg !7282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #16 !dbg !7283 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !7287, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i32 1, metadata !7288, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i32 1, metadata !7289, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i8 0, metadata !7290, metadata !DIExpression()), !dbg !7291
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !7292
  ret void, !dbg !7293
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7294 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7297, metadata !DIExpression()), !dbg !7305
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7306
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7306
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7298, metadata !DIExpression()), !dbg !7307
  call void @llvm.va_start(i8* nonnull %3), !dbg !7308
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7309
  %5 = load i32, i32* %4, align 4, !dbg !7309
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7309
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !7309
  call void @llvm.va_end(i8* nonnull %3), !dbg !7310
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7311
  ret void, !dbg !7311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7312 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7317, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.value(metadata i8* %0, metadata !7316, metadata !DIExpression()), !dbg !7318
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #24, !dbg !7319
  ret void, !dbg !7320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7325, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.value(metadata i8* %1, metadata !7326, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.value(metadata i32 %2, metadata !7327, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.value(metadata i8* %1, metadata !7328, metadata !DIExpression()), !dbg !7329
  %4 = icmp eq i32 %2, 0, !dbg !7330
  br i1 %4, label %14, label %5, !dbg !7331

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #25, !dbg !7329
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7331

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7328, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.value(metadata i32 %10, metadata !7327, metadata !DIExpression()), !dbg !7329
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), i32 noundef %7) #24, !dbg !7332
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #25, !dbg !7334
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7335
  call void @llvm.dbg.value(metadata i32 %11, metadata !7327, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.value(metadata i8* %12, metadata !7328, metadata !DIExpression()), !dbg !7329
  br i1 %13, label %14, label %8, !dbg !7335, !llvm.loop !7336

14:                                               ; preds = %8, %3
  ret void, !dbg !7338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !7339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7344, metadata !DIExpression()), !dbg !7345
  %2 = add i32 %0, -1, !dbg !7346
  %3 = icmp ult i32 %2, 4, !dbg !7346
  %4 = shl i32 %2, 3, !dbg !7346
  %5 = lshr i32 1145657157, %4, !dbg !7346
  %6 = trunc i32 %5 to i8, !dbg !7346
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7346
  ret i8 %7, !dbg !7347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7348 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7352, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.value(metadata i32 %1, metadata !7353, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.value(metadata i32 0, metadata !7354, metadata !DIExpression()), !dbg !7364
  br label %4, !dbg !7365

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.65, i32 0, i32 0)) #24, !dbg !7366
  call void @llvm.dbg.value(metadata i32 0, metadata !7356, metadata !DIExpression()), !dbg !7367
  br label %16, !dbg !7368

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7354, metadata !DIExpression()), !dbg !7364
  %6 = icmp ult i32 %5, %1, !dbg !7369
  br i1 %6, label %7, label %11, !dbg !7373

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7374
  %9 = load i8, i8* %8, align 1, !dbg !7374
  %10 = zext i8 %9 to i32, !dbg !7376
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.66, i32 0, i32 0), i32 noundef %10) #24, !dbg !7377
  br label %12, !dbg !7378

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.67, i32 0, i32 0)) #24, !dbg !7379
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7381
  call void @llvm.dbg.value(metadata i32 %13, metadata !7354, metadata !DIExpression()), !dbg !7364
  %14 = icmp eq i32 %13, 8, !dbg !7382
  br i1 %14, label %3, label %4, !dbg !7365, !llvm.loop !7383

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.68, i32 0, i32 0)) #24, !dbg !7385
  ret void, !dbg !7386

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7356, metadata !DIExpression()), !dbg !7367
  %18 = icmp ult i32 %17, %1, !dbg !7387
  br i1 %18, label %19, label %26, !dbg !7388

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7389
  %21 = load i8, i8* %20, align 1, !dbg !7389
  call void @llvm.dbg.value(metadata i8 %21, metadata !7358, metadata !DIExpression()), !dbg !7390
  %22 = zext i8 %21 to i32, !dbg !7391
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #25, !dbg !7392
  %24 = icmp eq i32 %23, 0, !dbg !7393
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7392
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.69, i32 0, i32 0), i32 noundef %25) #24, !dbg !7394
  br label %27, !dbg !7395

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.70, i32 0, i32 0)) #24, !dbg !7396
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7398
  call void @llvm.dbg.value(metadata i32 %28, metadata !7356, metadata !DIExpression()), !dbg !7367
  %29 = icmp eq i32 %28, 8, !dbg !7399
  br i1 %29, label %15, label %16, !dbg !7368, !llvm.loop !7400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !7402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7404, metadata !DIExpression()), !dbg !7405
  %2 = add i32 %0, -32, !dbg !7406
  %3 = icmp ult i32 %2, 95, !dbg !7406
  %4 = zext i1 %3 to i32, !dbg !7406
  ret i32 %4, !dbg !7407
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7457, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7458, metadata !DIExpression()), !dbg !7459
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7460
  br i1 %3, label %5, label %4, !dbg !7462

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #25, !dbg !7463
  br label %5, !dbg !7465

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !7466
  ret void, !dbg !7467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7468 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7472, metadata !DIExpression()), !dbg !7473
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7474
  %3 = load i32, i32* %2, align 4, !dbg !7474
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7474
  %5 = load i32, i32* %4, align 4, !dbg !7474
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7474
  %7 = load i32, i32* %6, align 4, !dbg !7474
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.71, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #24, !dbg !7474
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7479
  %9 = load i32, i32* %8, align 4, !dbg !7479
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7479
  %11 = load i32, i32* %10, align 4, !dbg !7479
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7479
  %13 = load i32, i32* %12, align 4, !dbg !7479
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.72, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #24, !dbg !7479
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7484
  %15 = load i32, i32* %14, align 4, !dbg !7484
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.73, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #24, !dbg !7484
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7489
  %17 = load i32, i32* %16, align 4, !dbg !7489
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.74, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !7489
  ret void, !dbg !7494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7495 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7512, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7513, metadata !DIExpression()), !dbg !7515
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7516
  %4 = load i32, i32* %3, align 4, !dbg !7516
  call void @llvm.dbg.value(metadata i32 %4, metadata !7514, metadata !DIExpression()), !dbg !7515
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !7517
  ret void, !dbg !7518
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7519 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7523, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata i8* %0, metadata !7524, metadata !DIExpression()), !dbg !7526
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7527
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !7527
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7525, metadata !DIExpression()), !dbg !7528
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7528
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7529
  %5 = bitcast i8* %4 to i32*, !dbg !7529
  %6 = load i32, i32* %5, align 4, !dbg !7529
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7530
  store i32 %6, i32* %7, align 4, !dbg !7531
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !7532
  unreachable, !dbg !7533
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7539, metadata !DIExpression()), !dbg !7540
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !7541
  ret void, !dbg !7542
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7547, metadata !DIExpression()), !dbg !7548
  %2 = icmp sgt i32 %0, -1, !dbg !7549
  br i1 %2, label %3, label %8, !dbg !7551

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7552, !srcloc !7554
  %4 = and i32 %0, 31, !dbg !7555
  %5 = shl nuw i32 1, %4, !dbg !7556
  %6 = lshr i32 %0, 5, !dbg !7557
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7558
  store volatile i32 %5, i32* %7, align 4, !dbg !7559
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7560, !srcloc !7561
  br label %8, !dbg !7562

8:                                                ; preds = %3, %1
  ret void, !dbg !7563
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7566, metadata !DIExpression()), !dbg !7567
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !7568
  ret void, !dbg !7569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7572, metadata !DIExpression()), !dbg !7573
  %2 = icmp sgt i32 %0, -1, !dbg !7574
  br i1 %2, label %3, label %8, !dbg !7576

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7577
  %5 = shl nuw i32 1, %4, !dbg !7579
  %6 = lshr i32 %0, 5, !dbg !7580
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7581
  store volatile i32 %5, i32* %7, align 4, !dbg !7582
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7583, !srcloc !7587
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7588, !srcloc !7591
  br label %8, !dbg !7592

8:                                                ; preds = %3, %1
  ret void, !dbg !7593
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7598, metadata !DIExpression()), !dbg !7599
  %2 = lshr i32 %0, 5, !dbg !7600
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7601
  %4 = load volatile i32, i32* %3, align 4, !dbg !7601
  %5 = and i32 %0, 31, !dbg !7602
  %6 = shl nuw i32 1, %5, !dbg !7602
  %7 = and i32 %4, %6, !dbg !7603
  ret i32 %7, !dbg !7604
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7609, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.value(metadata i32 %1, metadata !7610, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.value(metadata i32 %2, metadata !7611, metadata !DIExpression()), !dbg !7612
  %4 = add i32 %1, 1, !dbg !7613
  call void @llvm.dbg.value(metadata i32 %4, metadata !7610, metadata !DIExpression()), !dbg !7612
  %5 = icmp ult i32 %4, 16, !dbg !7616
  br i1 %5, label %7, label %6, !dbg !7619

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.75, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.76, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.77, i32 0, i32 0), i32 noundef 94) #24, !dbg !7620
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.78, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #24, !dbg !7620
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.77, i32 0, i32 0), i32 noundef 94) #24, !dbg !7620
  unreachable, !dbg !7620

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !7622
  ret void, !dbg !7623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7628, metadata !DIExpression()), !dbg !7630
  call void @llvm.dbg.value(metadata i32 %1, metadata !7629, metadata !DIExpression()), !dbg !7630
  %3 = trunc i32 %1 to i8, !dbg !7631
  %4 = shl i8 %3, 4, !dbg !7631
  %5 = and i32 %0, 15, !dbg !7633
  %6 = add nsw i32 %5, -4, !dbg !7633
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7633
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7633
  %9 = icmp slt i32 %0, 0, !dbg !7633
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7633
  store volatile i8 %4, i8* %10, align 1, !dbg !7631
  ret void, !dbg !7634
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7635 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7637, metadata !DIExpression()), !dbg !7638
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !7639
  ret void, !dbg !7640
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7641 {
  tail call void @z_SysNmiOnReset() #24, !dbg !7643
  tail call void @z_arm_int_exit() #24, !dbg !7644
  ret void, !dbg !7645
}

; Function Attrs: optsize
declare !dbg !7646 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7647 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !7649 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !7651
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !7652
  tail call void @z_bss_zero() #24, !dbg !7653
  tail call void @z_data_copy() #24, !dbg !7654
  tail call void @z_arm_interrupt_init() #24, !dbg !7655
  tail call void @z_cstart() #27, !dbg !7656
  unreachable, !dbg !7656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7657 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7658
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7659, !srcloc !7662
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7663, !srcloc !7666
  ret void, !dbg !7667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7668 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7669
  %2 = and i32 %1, -15728641, !dbg !7669
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7669
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !7670, !srcloc !7677
  call void @llvm.dbg.value(metadata i32 %3, metadata !7675, metadata !DIExpression()) #23, !dbg !7678
  %4 = and i32 %3, -5, !dbg !7679
  call void @llvm.dbg.value(metadata i32 %4, metadata !7680, metadata !DIExpression()) #23, !dbg !7685
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !7687, !srcloc !7688
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7689, !srcloc !7666
  ret void, !dbg !7691
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7695, metadata !DIExpression()), !dbg !7696
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7697
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 0, !dbg !7698
  store i32 %0, i32* %3, align 8, !dbg !7699
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7700
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 1, !dbg !7701
  store i32 %4, i32* %5, align 4, !dbg !7702
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7703
  %7 = or i32 %6, 268435456, !dbg !7703
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7703
  call void @llvm.dbg.value(metadata i32 0, metadata !7704, metadata !DIExpression()) #23, !dbg !7708
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7710, !srcloc !7711
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7712
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 6, i32 1, !dbg !7713
  %10 = load i32, i32* %9, align 4, !dbg !7713
  ret i32 %10, !dbg !7714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !7715 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7821, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7822, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata i8* %2, metadata !7823, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7824, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata i8* %4, metadata !7825, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata i8* %5, metadata !7826, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata i8* %6, metadata !7827, metadata !DIExpression()), !dbg !7829
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7830
  call void @llvm.dbg.value(metadata i8* %8, metadata !7828, metadata !DIExpression()), !dbg !7829
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7831
  %10 = bitcast i8* %9 to i32*, !dbg !7831
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7832
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7833
  %12 = bitcast i8* %8 to i32*, !dbg !7834
  store i32 %11, i32* %12, align 4, !dbg !7835
  %13 = ptrtoint i8* %4 to i32, !dbg !7836
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7837
  %15 = bitcast i8* %14 to i32*, !dbg !7837
  store i32 %13, i32* %15, align 4, !dbg !7838
  %16 = ptrtoint i8* %5 to i32, !dbg !7839
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7840
  %18 = bitcast i8* %17 to i32*, !dbg !7840
  store i32 %16, i32* %18, align 4, !dbg !7841
  %19 = ptrtoint i8* %6 to i32, !dbg !7842
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7843
  %21 = bitcast i8* %20 to i32*, !dbg !7843
  store i32 %19, i32* %21, align 4, !dbg !7844
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7845
  %23 = bitcast i8* %22 to i32*, !dbg !7845
  store i32 16777216, i32* %23, align 4, !dbg !7846
  %24 = ptrtoint i8* %8 to i32, !dbg !7847
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7848
  store i32 %24, i32* %25, align 8, !dbg !7849
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7850
  store i32 0, i32* %26, align 8, !dbg !7851
  ret void, !dbg !7852
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !7853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7857, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata i8* %1, metadata !7858, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7859, metadata !DIExpression()), !dbg !7860
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7861
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !7862, !srcloc !7863
  unreachable, !dbg !7864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7865 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7883, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i32 %1, metadata !7884, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i32 %2, metadata !7885, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7886, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i32 0, metadata !7887, metadata !DIExpression()), !dbg !7893
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7894
  call void @llvm.dbg.value(metadata i32 %8, metadata !7888, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !7893
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7895
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7895
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !7896
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !7896
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7892, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata i32 0, metadata !7898, metadata !DIExpression()) #23, !dbg !7901
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7903, !srcloc !7904
  call void @llvm.dbg.value(metadata i8* %6, metadata !7890, metadata !DIExpression(DW_OP_deref)), !dbg !7893
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !7905
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !7891, metadata !DIExpression()), !dbg !7893
  %11 = icmp eq %struct.__esf* %10, null, !dbg !7906
  br i1 %11, label %12, label %13, !dbg !7909

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.81, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.83, i32 0, i32 0), i32 noundef 1057) #24, !dbg !7910
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.84, i32 0, i32 0)) #24, !dbg !7910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.83, i32 0, i32 0), i32 noundef 1057) #24, !dbg !7910
  unreachable, !dbg !7910

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !7912
  call void @llvm.dbg.value(metadata i32 %14, metadata !7888, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i8* %5, metadata !7889, metadata !DIExpression(DW_OP_deref)), !dbg !7893
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #25, !dbg !7913
  call void @llvm.dbg.value(metadata i32 %15, metadata !7887, metadata !DIExpression()), !dbg !7893
  %16 = load i8, i8* %5, align 1, !dbg !7914, !range !7916
  call void @llvm.dbg.value(metadata i8 %16, metadata !7889, metadata !DIExpression()), !dbg !7893
  %17 = icmp eq i8 %16, 0, !dbg !7914
  br i1 %17, label %18, label %35, !dbg !7917

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !7918
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #24, !dbg !7919
  %21 = load i8, i8* %6, align 1, !dbg !7920, !range !7916
  call void @llvm.dbg.value(metadata i8 %21, metadata !7890, metadata !DIExpression()), !dbg !7893
  %22 = icmp eq i8 %21, 0, !dbg !7920
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7922
  %24 = load i32, i32* %23, align 4, !dbg !7922
  br i1 %22, label %30, label %25, !dbg !7923

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !7924
  %27 = icmp eq i32 %26, 0, !dbg !7927
  br i1 %27, label %28, label %34, !dbg !7928

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !7929
  br label %32, !dbg !7931

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !7932
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !7922
  br label %34, !dbg !7934

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #24, !dbg !7934
  br label %35, !dbg !7935

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !7935
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7935
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7935
  ret void, !dbg !7935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7941, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %1, metadata !7942, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %2, metadata !7943, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i8* %3, metadata !7944, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i8 0, metadata !7945, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7946, metadata !DIExpression()), !dbg !7947
  store i8 0, i8* %3, align 1, !dbg !7948
  %5 = icmp ugt i32 %2, -16777217, !dbg !7949
  br i1 %5, label %6, label %17, !dbg !7951

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7952
  %8 = icmp eq i32 %7, 8, !dbg !7952
  br i1 %8, label %9, label %10, !dbg !7952

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.96, i32 0, i32 0), i32 noundef 69) #24, !dbg !7954
  br label %17, !dbg !7960

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7961
  %12 = icmp eq i32 %11, 0, !dbg !7961
  br i1 %12, label %13, label %14, !dbg !7962

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7946, metadata !DIExpression()), !dbg !7947
  store i8 1, i8* %3, align 1, !dbg !7965
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7947
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7946, metadata !DIExpression()), !dbg !7947
  br label %17, !dbg !7968

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7947
  ret %struct.__esf* %18, !dbg !7969
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7970 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7974, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %1, metadata !7975, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %2, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 0, metadata !7977, metadata !DIExpression()), !dbg !7978
  store i8 0, i8* %2, align 1, !dbg !7979
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !7980

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !7981
  call void @llvm.dbg.value(metadata i32 %5, metadata !7977, metadata !DIExpression()), !dbg !7978
  br label %11, !dbg !7983

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !7984
  call void @llvm.dbg.value(metadata i32 0, metadata !7977, metadata !DIExpression()), !dbg !7978
  br label %11, !dbg !7985

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !7986
  call void @llvm.dbg.value(metadata i32 0, metadata !7977, metadata !DIExpression()), !dbg !7978
  br label %11, !dbg !7987

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !7988
  call void @llvm.dbg.value(metadata i32 0, metadata !7977, metadata !DIExpression()), !dbg !7978
  br label %11, !dbg !7989

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !7990
  br label %11, !dbg !7991

10:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #25, !dbg !7992
  br label %11, !dbg !7993

11:                                               ; preds = %4, %6, %7, %8, %9, %10
  %12 = phi i32 [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ 0, %7 ], [ 0, %6 ], [ %5, %4 ], !dbg !7978
  call void @llvm.dbg.value(metadata i32 %12, metadata !7977, metadata !DIExpression()), !dbg !7978
  ret i32 %12, !dbg !7994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7995 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7999, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i8* %1, metadata !8000, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 0, metadata !8001, metadata !DIExpression()), !dbg !8002
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.88, i32 0, i32 0), i32 noundef 69) #24, !dbg !8003
  store i8 0, i8* %1, align 1, !dbg !8008
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8009
  %4 = and i32 %3, 2, !dbg !8011
  %5 = icmp eq i32 %4, 0, !dbg !8012
  br i1 %5, label %7, label %6, !dbg !8013

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.89, i32 0, i32 0), i32 noundef 69) #24, !dbg !8014
  br label %37, !dbg !8020

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8021
  %9 = icmp sgt i32 %8, -1, !dbg !8023
  br i1 %9, label %11, label %10, !dbg !8024

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.90, i32 0, i32 0), i32 noundef 69) #24, !dbg !8025
  br label %37, !dbg !8031

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8032
  %13 = and i32 %12, 1073741824, !dbg !8034
  %14 = icmp eq i32 %13, 0, !dbg !8035
  br i1 %14, label %36, label %15, !dbg !8036

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.91, i32 0, i32 0), i32 noundef 69) #24, !dbg !8037
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !8043
  br i1 %16, label %17, label %21, !dbg !8045

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8046
  %19 = load i32, i32* %18, align 4, !dbg !8046
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.92, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #24, !dbg !8046
  %20 = load i32, i32* %18, align 4, !dbg !8052
  call void @llvm.dbg.value(metadata i32 %20, metadata !8001, metadata !DIExpression()), !dbg !8002
  br label %37, !dbg !8053

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8054
  %23 = and i32 %22, 255, !dbg !8056
  %24 = icmp eq i32 %23, 0, !dbg !8057
  br i1 %24, label %26, label %25, !dbg !8058

25:                                               ; preds = %21
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !8059
  call void @llvm.dbg.value(metadata i32 0, metadata !8001, metadata !DIExpression()), !dbg !8002
  br label %37, !dbg !8061

26:                                               ; preds = %21
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8062
  %28 = and i32 %27, 65280, !dbg !8064
  %29 = icmp eq i32 %28, 0, !dbg !8065
  br i1 %29, label %31, label %30, !dbg !8066

30:                                               ; preds = %26
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !8067
  call void @llvm.dbg.value(metadata i32 0, metadata !8001, metadata !DIExpression()), !dbg !8002
  br label %37, !dbg !8069

31:                                               ; preds = %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8070
  %33 = icmp ult i32 %32, 65536, !dbg !8072
  br i1 %33, label %35, label %34, !dbg !8073

34:                                               ; preds = %31
  tail call fastcc void @usage_fault() #25, !dbg !8074
  call void @llvm.dbg.value(metadata i32 0, metadata !8001, metadata !DIExpression()), !dbg !8002
  br label %37

35:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.81, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.83, i32 0, i32 0), i32 noundef 755) #24, !dbg !8076
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.94, i32 0, i32 0)) #24, !dbg !8076
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.83, i32 0, i32 0), i32 noundef 755) #24, !dbg !8076
  unreachable, !dbg !8076

36:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.81, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.83, i32 0, i32 0), i32 noundef 760) #24, !dbg !8081
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.95, i32 0, i32 0)) #24, !dbg !8081
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.83, i32 0, i32 0), i32 noundef 760) #24, !dbg !8081
  unreachable, !dbg !8081

37:                                               ; preds = %10, %17, %30, %34, %25, %6
  %38 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ 0, %25 ], [ 0, %30 ], [ 0, %34 ], !dbg !8002
  call void @llvm.dbg.value(metadata i32 %38, metadata !8001, metadata !DIExpression()), !dbg !8002
  ret i32 %38, !dbg !8086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8087 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8089, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 %0, metadata !8090, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %1, metadata !8091, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 0, metadata !8092, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 -22, metadata !8093, metadata !DIExpression()), !dbg !8097
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.87, i32 0, i32 0), i32 noundef 69) #24, !dbg !8098
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8103
  %4 = and i32 %3, 16, !dbg !8105
  %5 = icmp eq i32 %4, 0, !dbg !8106
  br i1 %5, label %7, label %6, !dbg !8107

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #24, !dbg !8108
  br label %7, !dbg !8114

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8115
  %9 = and i32 %8, 8, !dbg !8117
  %10 = icmp eq i32 %9, 0, !dbg !8118
  br i1 %10, label %12, label %11, !dbg !8119

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !8120
  br label %12, !dbg !8126

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8127
  %14 = and i32 %13, 2, !dbg !8128
  %15 = icmp eq i32 %14, 0, !dbg !8129
  br i1 %15, label %26, label %16, !dbg !8130

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #24, !dbg !8131
  %17 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8136
  call void @llvm.dbg.value(metadata i32 %17, metadata !8094, metadata !DIExpression()), !dbg !8137
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8138
  %19 = and i32 %18, 128, !dbg !8140
  %20 = icmp eq i32 %19, 0, !dbg !8141
  br i1 %20, label %26, label %21, !dbg !8142

21:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %17, metadata !8093, metadata !DIExpression()), !dbg !8097
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !8143
  %22 = icmp eq i32 %0, 0, !dbg !8149
  br i1 %22, label %26, label %23, !dbg !8151

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8152
  %25 = and i32 %24, -129, !dbg !8152
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8152
  br label %26, !dbg !8154

26:                                               ; preds = %16, %23, %21, %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !8093, metadata !DIExpression()), !dbg !8097
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8155
  %28 = and i32 %27, 1, !dbg !8157
  %29 = icmp eq i32 %28, 0, !dbg !8158
  br i1 %29, label %31, label %30, !dbg !8159

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #24, !dbg !8160
  br label %31, !dbg !8166

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8167
  %33 = and i32 %32, 32, !dbg !8169
  %34 = icmp eq i32 %33, 0, !dbg !8170
  br i1 %34, label %36, label %35, !dbg !8171

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #24, !dbg !8172
  br label %36, !dbg !8178

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8179
  %38 = and i32 %37, 16, !dbg !8181
  %39 = icmp eq i32 %38, 0, !dbg !8181
  br i1 %39, label %40, label %44, !dbg !8182

40:                                               ; preds = %36
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8183
  %42 = and i32 %41, 2, !dbg !8184
  %43 = icmp eq i32 %42, 0, !dbg !8184
  br i1 %43, label %49, label %44, !dbg !8185

44:                                               ; preds = %40, %36
  %45 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8186
  %46 = and i32 %45, 16, !dbg !8186
  %47 = icmp eq i32 %46, 0, !dbg !8186
  br i1 %47, label %49, label %48, !dbg !8190

48:                                               ; preds = %44
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.81, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.83, i32 0, i32 0), i32 noundef 350) #24, !dbg !8191
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.21, i32 0, i32 0)) #24, !dbg !8191
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.83, i32 0, i32 0), i32 noundef 350) #24, !dbg !8191
  unreachable, !dbg !8191

49:                                               ; preds = %44, %40
  %50 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8193
  %51 = and i32 %50, 32, !dbg !8195
  %52 = icmp eq i32 %51, 0, !dbg !8196
  br i1 %52, label %56, label %53, !dbg !8197

53:                                               ; preds = %49
  %54 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8198
  %55 = and i32 %54, -8193, !dbg !8198
  store volatile i32 %55, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8198
  br label %56, !dbg !8200

56:                                               ; preds = %53, %49
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8201
  %58 = or i32 %57, 255, !dbg !8201
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8201
  store i8 0, i8* %1, align 1, !dbg !8202
  ret void, !dbg !8203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8204 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8208, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i32 %0, metadata !8209, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i8* %1, metadata !8210, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i32 0, metadata !8211, metadata !DIExpression()), !dbg !8215
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.86, i32 0, i32 0), i32 noundef 69) #24, !dbg !8216
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8221
  %4 = and i32 %3, 4096, !dbg !8223
  %5 = icmp eq i32 %4, 0, !dbg !8223
  br i1 %5, label %7, label %6, !dbg !8224

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #24, !dbg !8225
  br label %7, !dbg !8231

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8232
  %9 = and i32 %8, 2048, !dbg !8234
  %10 = icmp eq i32 %9, 0, !dbg !8234
  br i1 %10, label %12, label %11, !dbg !8235

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !8236
  br label %12, !dbg !8242

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8243
  %14 = and i32 %13, 512, !dbg !8244
  %15 = icmp eq i32 %14, 0, !dbg !8244
  br i1 %15, label %26, label %16, !dbg !8245

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #24, !dbg !8246
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8251
  call void @llvm.dbg.value(metadata i32 %17, metadata !8212, metadata !DIExpression()), !dbg !8252
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8253
  %19 = and i32 %18, 32768, !dbg !8255
  %20 = icmp eq i32 %19, 0, !dbg !8256
  br i1 %20, label %26, label %21, !dbg !8257

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !8258
  %22 = icmp eq i32 %0, 0, !dbg !8264
  br i1 %22, label %26, label %23, !dbg !8266

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8267
  %25 = and i32 %24, -32769, !dbg !8267
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8267
  br label %26, !dbg !8269

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8270
  %28 = and i32 %27, 1024, !dbg !8272
  %29 = icmp eq i32 %28, 0, !dbg !8272
  br i1 %29, label %31, label %30, !dbg !8273

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #24, !dbg !8274
  br label %31, !dbg !8280

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8281
  %33 = and i32 %32, 256, !dbg !8283
  %34 = icmp eq i32 %33, 0, !dbg !8284
  br i1 %34, label %35, label %39, !dbg !8285

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8286
  %37 = and i32 %36, 8192, !dbg !8288
  %38 = icmp eq i32 %37, 0, !dbg !8288
  br i1 %38, label %41, label %39, !dbg !8289

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #24, !dbg !8290
  br label %41, !dbg !8291

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8291
  %43 = or i32 %42, 65280, !dbg !8291
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8291
  store i8 0, i8* %1, align 1, !dbg !8292
  ret void, !dbg !8293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8294 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8300, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.value(metadata i32 0, metadata !8301, metadata !DIExpression()), !dbg !8302
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28.85, i32 0, i32 0), i32 noundef 69) #24, !dbg !8303
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8308
  %2 = and i32 %1, 33554432, !dbg !8310
  %3 = icmp eq i32 %2, 0, !dbg !8311
  br i1 %3, label %5, label %4, !dbg !8312

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #24, !dbg !8313
  br label %5, !dbg !8319

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8320
  %7 = and i32 %6, 16777216, !dbg !8322
  %8 = icmp eq i32 %7, 0, !dbg !8323
  br i1 %8, label %10, label %9, !dbg !8324

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #24, !dbg !8325
  br label %10, !dbg !8331

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8332
  %12 = and i32 %11, 524288, !dbg !8334
  %13 = icmp eq i32 %12, 0, !dbg !8335
  br i1 %13, label %15, label %14, !dbg !8336

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #24, !dbg !8337
  br label %15, !dbg !8343

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8344
  %17 = and i32 %16, 262144, !dbg !8346
  %18 = icmp eq i32 %17, 0, !dbg !8347
  br i1 %18, label %20, label %19, !dbg !8348

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #24, !dbg !8349
  br label %20, !dbg !8355

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8356
  %22 = and i32 %21, 131072, !dbg !8358
  %23 = icmp eq i32 %22, 0, !dbg !8359
  br i1 %23, label %25, label %24, !dbg !8360

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #24, !dbg !8361
  br label %25, !dbg !8367

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8368
  %27 = and i32 %26, 65536, !dbg !8370
  %28 = icmp eq i32 %27, 0, !dbg !8371
  br i1 %28, label %30, label %29, !dbg !8372

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #24, !dbg !8373
  br label %30, !dbg !8379

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8380
  %32 = or i32 %31, -65536, !dbg !8380
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8380
  ret void, !dbg !8381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8382 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8386, metadata !DIExpression()), !dbg !8388
  call void @llvm.dbg.value(metadata i8* %0, metadata !8387, metadata !DIExpression()), !dbg !8388
  store i8 0, i8* %0, align 1, !dbg !8389
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #24, !dbg !8390
  ret void, !dbg !8395
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8396 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8400, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata i32 %0, metadata !8401, metadata !DIExpression()), !dbg !8402
  %2 = icmp slt i32 %0, 16, !dbg !8403
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !8403
  %4 = add nsw i32 %0, -16, !dbg !8403
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #24, !dbg !8403
  ret void, !dbg !8408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8409 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8413, metadata !DIExpression()), !dbg !8416
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8417
  %3 = load i32, i32* %2, align 4, !dbg !8417
  %4 = inttoptr i32 %3 to i16*, !dbg !8418
  call void @llvm.dbg.value(metadata i16* %4, metadata !8414, metadata !DIExpression()), !dbg !8416
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8419
  %6 = or i32 %5, 256, !dbg !8419
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8419
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8420, !srcloc !8423
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8424, !srcloc !8427
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8428
  %8 = load i16, i16* %7, align 2, !dbg !8429
  call void @llvm.dbg.value(metadata i16 %8, metadata !8415, metadata !DIExpression()), !dbg !8416
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8430
  %10 = and i32 %9, -257, !dbg !8430
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8430
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8431, !srcloc !8423
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8433, !srcloc !8427
  %11 = icmp eq i16 %8, -8446, !dbg !8435
  ret i1 %11, !dbg !8437
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !8438 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8439
  %2 = or i32 %1, 16, !dbg !8439
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8439
  ret void, !dbg !8440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !8441 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8444, metadata !DIExpression()), !dbg !8445
  br label %1, !dbg !8446

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8444, metadata !DIExpression()), !dbg !8445
  tail call fastcc void @__NVIC_SetPriority.99(i32 noundef %2) #25, !dbg !8448
  %3 = add nuw nsw i32 %2, 1, !dbg !8451
  call void @llvm.dbg.value(metadata i32 %3, metadata !8444, metadata !DIExpression()), !dbg !8445
  %4 = icmp eq i32 %3, 127, !dbg !8452
  br i1 %4, label %5, label %1, !dbg !8446, !llvm.loop !8453

5:                                                ; preds = %1
  ret void, !dbg !8455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.99(i32 noundef %0) unnamed_addr #16 !dbg !8456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8458, metadata !DIExpression()), !dbg !8460
  call void @llvm.dbg.value(metadata i32 1, metadata !8459, metadata !DIExpression()), !dbg !8460
  %2 = and i32 %0, 15, !dbg !8461
  %3 = add nsw i32 %2, -4, !dbg !8461
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8461
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8461
  %6 = icmp slt i32 %0, 0, !dbg !8461
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8461
  store volatile i8 16, i8* %7, align 1, !dbg !8462
  ret void, !dbg !8464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8465 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8567, metadata !DIExpression()), !dbg !8568
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8569
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8571
  br i1 %3, label %4, label %12, !dbg !8572

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8573, !srcloc !8585
  call void @llvm.dbg.value(metadata i32 %5, metadata !8576, metadata !DIExpression()) #23, !dbg !8586
  %6 = icmp eq i32 %5, 0, !dbg !8587
  br i1 %6, label %12, label %7, !dbg !8588

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8589
  %9 = or i32 %8, 268435456, !dbg !8589
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8589
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8591
  %11 = and i32 %10, -32769, !dbg !8591
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8591
  br label %12, !dbg !8592

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !8593
  ret void, !dbg !8594
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8595 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8602, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata i8* %1, metadata !8603, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata i8* %0, metadata !8604, metadata !DIExpression()), !dbg !8605
  %3 = load i8, i8* %1, align 1, !dbg !8606
  %4 = icmp eq i8 %3, 0, !dbg !8607
  br i1 %4, label %13, label %5, !dbg !8608

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8602, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata i8* %8, metadata !8603, metadata !DIExpression()), !dbg !8605
  store i8 %6, i8* %7, align 1, !dbg !8609
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8611
  call void @llvm.dbg.value(metadata i8* %9, metadata !8602, metadata !DIExpression()), !dbg !8605
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8612
  call void @llvm.dbg.value(metadata i8* %10, metadata !8603, metadata !DIExpression()), !dbg !8605
  %11 = load i8, i8* %10, align 1, !dbg !8606
  %12 = icmp eq i8 %11, 0, !dbg !8607
  br i1 %12, label %13, label %5, !dbg !8608, !llvm.loop !8613

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8615
  ret i8* %0, !dbg !8616
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8617 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8621, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata i8* %1, metadata !8622, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata i32 %2, metadata !8623, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata i8* %0, metadata !8624, metadata !DIExpression()), !dbg !8625
  %4 = icmp eq i32 %2, 0, !dbg !8626
  br i1 %4, label %22, label %5, !dbg !8627

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8621, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata i32 %7, metadata !8623, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata i8* %8, metadata !8622, metadata !DIExpression()), !dbg !8625
  %9 = load i8, i8* %8, align 1, !dbg !8628
  %10 = icmp eq i8 %9, 0, !dbg !8629
  br i1 %10, label %16, label %11, !dbg !8630

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8631
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8633
  call void @llvm.dbg.value(metadata i8* %12, metadata !8622, metadata !DIExpression()), !dbg !8625
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8634
  call void @llvm.dbg.value(metadata i8* %13, metadata !8621, metadata !DIExpression()), !dbg !8625
  %14 = add i32 %7, -1, !dbg !8635
  call void @llvm.dbg.value(metadata i32 %14, metadata !8623, metadata !DIExpression()), !dbg !8625
  %15 = icmp eq i32 %14, 0, !dbg !8626
  br i1 %15, label %22, label %5, !dbg !8627, !llvm.loop !8636

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8621, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata i32 %18, metadata !8623, metadata !DIExpression()), !dbg !8625
  store i8 0, i8* %17, align 1, !dbg !8638
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8640
  call void @llvm.dbg.value(metadata i8* %19, metadata !8621, metadata !DIExpression()), !dbg !8625
  %20 = add i32 %18, -1, !dbg !8641
  call void @llvm.dbg.value(metadata i32 %20, metadata !8623, metadata !DIExpression()), !dbg !8625
  %21 = icmp eq i32 %20, 0, !dbg !8642
  br i1 %21, label %22, label %16, !dbg !8643, !llvm.loop !8644

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8646
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !8647 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8651, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i32 %1, metadata !8652, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i32 %1, metadata !8653, metadata !DIExpression()), !dbg !8654
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8655

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8651, metadata !DIExpression()), !dbg !8654
  %6 = load i8, i8* %5, align 1, !dbg !8656
  %7 = icmp eq i8 %6, %3, !dbg !8657
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8658
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8659
  call void @llvm.dbg.value(metadata i8* %10, metadata !8651, metadata !DIExpression()), !dbg !8654
  br i1 %9, label %11, label %4, !dbg !8658, !llvm.loop !8661

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8663
  ret i8* %12, !dbg !8664
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !8665 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8667, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i32 %1, metadata !8668, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* null, metadata !8669, metadata !DIExpression()), !dbg !8670
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8671

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8670
  call void @llvm.dbg.value(metadata i8* %6, metadata !8669, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* %5, metadata !8667, metadata !DIExpression()), !dbg !8670
  %7 = load i8, i8* %5, align 1, !dbg !8672
  %8 = icmp eq i8 %7, %3, !dbg !8675
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8676
  call void @llvm.dbg.value(metadata i8* %9, metadata !8669, metadata !DIExpression()), !dbg !8670
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8677
  call void @llvm.dbg.value(metadata i8* %10, metadata !8667, metadata !DIExpression()), !dbg !8670
  %11 = icmp eq i8 %7, 0, !dbg !8678
  br i1 %11, label %12, label %4, !dbg !8678, !llvm.loop !8679

12:                                               ; preds = %4
  ret i8* %9, !dbg !8681
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !8682 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8686, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.value(metadata i32 0, metadata !8687, metadata !DIExpression()), !dbg !8688
  %2 = load i8, i8* %0, align 1, !dbg !8689
  %3 = icmp eq i8 %2, 0, !dbg !8690
  br i1 %3, label %11, label %4, !dbg !8691

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8687, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.value(metadata i8* %6, metadata !8686, metadata !DIExpression()), !dbg !8688
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8692
  call void @llvm.dbg.value(metadata i8* %7, metadata !8686, metadata !DIExpression()), !dbg !8688
  %8 = add i32 %5, 1, !dbg !8694
  call void @llvm.dbg.value(metadata i32 %8, metadata !8687, metadata !DIExpression()), !dbg !8688
  %9 = load i8, i8* %7, align 1, !dbg !8689
  %10 = icmp eq i8 %9, 0, !dbg !8690
  br i1 %10, label %11, label %4, !dbg !8691, !llvm.loop !8695

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8688
  ret i32 %12, !dbg !8697
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !8698 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8702, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 %1, metadata !8703, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 0, metadata !8704, metadata !DIExpression()), !dbg !8705
  %3 = load i8, i8* %0, align 1, !dbg !8706
  %4 = icmp ne i8 %3, 0, !dbg !8707
  %5 = icmp ne i32 %1, 0, !dbg !8708
  %6 = and i1 %4, %5, !dbg !8708
  br i1 %6, label %7, label %16, !dbg !8709

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8704, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i8* %9, metadata !8702, metadata !DIExpression()), !dbg !8705
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8710
  call void @llvm.dbg.value(metadata i8* %10, metadata !8702, metadata !DIExpression()), !dbg !8705
  %11 = add nuw i32 %8, 1, !dbg !8712
  call void @llvm.dbg.value(metadata i32 %11, metadata !8704, metadata !DIExpression()), !dbg !8705
  %12 = load i8, i8* %10, align 1, !dbg !8706
  %13 = icmp ne i8 %12, 0, !dbg !8707
  %14 = icmp ult i32 %11, %1, !dbg !8708
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8708
  br i1 %15, label %7, label %16, !dbg !8709, !llvm.loop !8713

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8705
  ret i32 %17, !dbg !8715
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !8716 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8720, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i8* %1, metadata !8721, metadata !DIExpression()), !dbg !8722
  %3 = load i8, i8* %0, align 1, !dbg !8723
  %4 = load i8, i8* %1, align 1, !dbg !8724
  %5 = icmp ne i8 %3, %4, !dbg !8725
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8726
  br i1 %7, label %18, label %8, !dbg !8726

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8721, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i8* %10, metadata !8720, metadata !DIExpression()), !dbg !8722
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8727
  call void @llvm.dbg.value(metadata i8* %11, metadata !8720, metadata !DIExpression()), !dbg !8722
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8729
  call void @llvm.dbg.value(metadata i8* %12, metadata !8721, metadata !DIExpression()), !dbg !8722
  %13 = load i8, i8* %11, align 1, !dbg !8723
  %14 = load i8, i8* %12, align 1, !dbg !8724
  %15 = icmp ne i8 %13, %14, !dbg !8725
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8726
  br i1 %17, label %18, label %8, !dbg !8726, !llvm.loop !8730

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8723
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8724
  %21 = zext i8 %19 to i32, !dbg !8733
  %22 = zext i8 %20 to i32, !dbg !8734
  %23 = sub nsw i32 %21, %22, !dbg !8735
  ret i32 %23, !dbg !8736
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8737 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8741, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i8* %1, metadata !8742, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i32 %2, metadata !8743, metadata !DIExpression()), !dbg !8744
  %4 = icmp eq i32 %2, 0, !dbg !8745
  br i1 %4, label %23, label %5, !dbg !8745

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8743, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i8* %7, metadata !8742, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i8* %8, metadata !8741, metadata !DIExpression()), !dbg !8744
  %9 = load i8, i8* %8, align 1, !dbg !8746
  %10 = load i8, i8* %7, align 1, !dbg !8747
  %11 = icmp ne i8 %9, %10, !dbg !8748
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8749
  br i1 %13, label %19, label %14, !dbg !8749

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8750
  call void @llvm.dbg.value(metadata i8* %15, metadata !8741, metadata !DIExpression()), !dbg !8744
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8752
  call void @llvm.dbg.value(metadata i8* %16, metadata !8742, metadata !DIExpression()), !dbg !8744
  %17 = add i32 %6, -1, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %17, metadata !8743, metadata !DIExpression()), !dbg !8744
  %18 = icmp eq i32 %17, 0, !dbg !8745
  br i1 %18, label %23, label %5, !dbg !8745, !llvm.loop !8754

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8757
  %21 = zext i8 %10 to i32, !dbg !8758
  %22 = sub nsw i32 %20, %21, !dbg !8759
  br label %23, !dbg !8760

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8760
  ret i32 %24, !dbg !8761
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !8762 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8766, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i8* %1, metadata !8767, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i8** %2, metadata !8768, metadata !DIExpression()), !dbg !8771
  %4 = icmp eq i8* %0, null, !dbg !8772
  br i1 %4, label %5, label %7, !dbg !8772

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8773
  br label %7, !dbg !8772

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8772
  call void @llvm.dbg.value(metadata i8* %8, metadata !8769, metadata !DIExpression()), !dbg !8771
  %9 = load i8, i8* %8, align 1, !dbg !8774
  %10 = icmp eq i8 %9, 0, !dbg !8774
  br i1 %10, label %33, label %11, !dbg !8775

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8769, metadata !DIExpression()), !dbg !8771
  %14 = zext i8 %12 to i32, !dbg !8774
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !8776
  %16 = icmp eq i8* %15, null, !dbg !8775
  br i1 %16, label %21, label %17, !dbg !8777

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8778
  call void @llvm.dbg.value(metadata i8* %18, metadata !8769, metadata !DIExpression()), !dbg !8771
  %19 = load i8, i8* %18, align 1, !dbg !8774
  %20 = icmp eq i8 %19, 0, !dbg !8774
  br i1 %20, label %33, label %11, !dbg !8775, !llvm.loop !8780

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8770, metadata !DIExpression()), !dbg !8771
  %24 = zext i8 %22 to i32, !dbg !8782
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !8783
  %26 = icmp eq i8* %25, null, !dbg !8784
  br i1 %26, label %27, label %31, !dbg !8785

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8786
  call void @llvm.dbg.value(metadata i8* %28, metadata !8770, metadata !DIExpression()), !dbg !8771
  %29 = load i8, i8* %28, align 1, !dbg !8782
  %30 = icmp eq i8 %29, 0, !dbg !8782
  br i1 %30, label %33, label %21, !dbg !8788, !llvm.loop !8789

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8791
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8794
  br label %33, !dbg !8795

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8771
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8771
  store i8* %34, i8** %2, align 4, !dbg !8771
  ret i8* %35, !dbg !8796
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8797 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8799, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i8* %1, metadata !8800, metadata !DIExpression()), !dbg !8801
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8802
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8803
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !8804
  ret i8* %0, !dbg !8805
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8806 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8808, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i8* %1, metadata !8809, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i32 %2, metadata !8810, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i8* %0, metadata !8811, metadata !DIExpression()), !dbg !8813
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8814
  call void @llvm.dbg.value(metadata i32 %4, metadata !8812, metadata !DIExpression()), !dbg !8813
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8815
  call void @llvm.dbg.value(metadata i8* %5, metadata !8808, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i8* %1, metadata !8809, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i32 %2, metadata !8810, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i32 %2, metadata !8810, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8813
  %6 = icmp eq i32 %2, 0, !dbg !8816
  br i1 %6, label %18, label %7, !dbg !8817

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8818
  call void @llvm.dbg.value(metadata i8* %9, metadata !8808, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i8* %10, metadata !8809, metadata !DIExpression()), !dbg !8813
  %12 = load i8, i8* %10, align 1, !dbg !8819
  %13 = icmp eq i8 %12, 0, !dbg !8820
  br i1 %13, label %18, label %14, !dbg !8821

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8822
  call void @llvm.dbg.value(metadata i8* %15, metadata !8809, metadata !DIExpression()), !dbg !8813
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8824
  call void @llvm.dbg.value(metadata i8* %16, metadata !8808, metadata !DIExpression()), !dbg !8813
  store i8 %12, i8* %9, align 1, !dbg !8825
  call void @llvm.dbg.value(metadata i32 %11, metadata !8810, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i32 %11, metadata !8810, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8813
  %17 = icmp eq i32 %11, 0, !dbg !8816
  br i1 %17, label %18, label %7, !dbg !8817, !llvm.loop !8826

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8813
  store i8 0, i8* %19, align 1, !dbg !8828
  ret i8* %0, !dbg !8829
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8830 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8834, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i8* %1, metadata !8835, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i32 %2, metadata !8836, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i8* %0, metadata !8837, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i8* %1, metadata !8838, metadata !DIExpression()), !dbg !8839
  %4 = icmp eq i32 %2, 0, !dbg !8840
  br i1 %4, label %31, label %5, !dbg !8842

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8838, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i8* %0, metadata !8837, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i32 %2, metadata !8836, metadata !DIExpression()), !dbg !8839
  %6 = add i32 %2, -1, !dbg !8843
  call void @llvm.dbg.value(metadata i32 %6, metadata !8836, metadata !DIExpression()), !dbg !8839
  %7 = icmp eq i32 %6, 0, !dbg !8844
  br i1 %7, label %23, label %8, !dbg !8845

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8846
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8846
  br label %11, !dbg !8846

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8838, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i8* %14, metadata !8837, metadata !DIExpression()), !dbg !8839
  %15 = load i8, i8* %14, align 1, !dbg !8847
  %16 = load i8, i8* %13, align 1, !dbg !8848
  %17 = icmp eq i8 %15, %16, !dbg !8849
  br i1 %17, label %18, label %23, !dbg !8846

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8850
  call void @llvm.dbg.value(metadata i8* %19, metadata !8837, metadata !DIExpression()), !dbg !8839
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8852
  call void @llvm.dbg.value(metadata i8* %20, metadata !8838, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i32 %12, metadata !8836, metadata !DIExpression()), !dbg !8839
  %21 = add i32 %12, -1, !dbg !8843
  call void @llvm.dbg.value(metadata i32 %21, metadata !8836, metadata !DIExpression()), !dbg !8839
  %22 = icmp eq i32 %21, 0, !dbg !8844
  br i1 %22, label %23, label %11, !dbg !8845, !llvm.loop !8853

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8839
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8839
  %26 = load i8, i8* %24, align 1, !dbg !8855
  %27 = zext i8 %26 to i32, !dbg !8855
  %28 = load i8, i8* %25, align 1, !dbg !8856
  %29 = zext i8 %28 to i32, !dbg !8856
  %30 = sub nsw i32 %27, %29, !dbg !8857
  br label %31, !dbg !8858

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8839
  ret i32 %32, !dbg !8859
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8860 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8864, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.value(metadata i8* %1, metadata !8865, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.value(metadata i32 %2, metadata !8866, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.value(metadata i8* %0, metadata !8867, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.value(metadata i8* %1, metadata !8868, metadata !DIExpression()), !dbg !8869
  %4 = ptrtoint i8* %0 to i32, !dbg !8870
  %5 = ptrtoint i8* %1 to i32, !dbg !8870
  %6 = sub i32 %4, %5, !dbg !8870
  %7 = icmp ult i32 %6, %2, !dbg !8872
  br i1 %7, label %10, label %8, !dbg !8873

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8868, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.value(metadata i8* %0, metadata !8867, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.value(metadata i32 %2, metadata !8866, metadata !DIExpression()), !dbg !8869
  %9 = icmp eq i32 %2, 0, !dbg !8874
  br i1 %9, label %26, label %17, !dbg !8876

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8866, metadata !DIExpression()), !dbg !8869
  %12 = add i32 %11, -1, !dbg !8877
  call void @llvm.dbg.value(metadata i32 %12, metadata !8866, metadata !DIExpression()), !dbg !8869
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8880
  %14 = load i8, i8* %13, align 1, !dbg !8880
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8881
  store i8 %14, i8* %15, align 1, !dbg !8882
  %16 = icmp eq i32 %12, 0, !dbg !8883
  br i1 %16, label %26, label %10, !dbg !8884, !llvm.loop !8885

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8868, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.value(metadata i8* %19, metadata !8867, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.value(metadata i32 %20, metadata !8866, metadata !DIExpression()), !dbg !8869
  %21 = load i8, i8* %18, align 1, !dbg !8887
  store i8 %21, i8* %19, align 1, !dbg !8889
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8890
  call void @llvm.dbg.value(metadata i8* %22, metadata !8867, metadata !DIExpression()), !dbg !8869
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8891
  call void @llvm.dbg.value(metadata i8* %23, metadata !8868, metadata !DIExpression()), !dbg !8869
  %24 = add i32 %20, -1, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %24, metadata !8866, metadata !DIExpression()), !dbg !8869
  %25 = icmp eq i32 %24, 0, !dbg !8874
  br i1 %25, label %26, label %17, !dbg !8876, !llvm.loop !8893

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8895
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8896 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8902, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i8* %1, metadata !8903, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i32 %2, metadata !8904, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i8* %0, metadata !8905, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i8* %1, metadata !8906, metadata !DIExpression()), !dbg !8907
  %4 = icmp eq i32 %2, 0, !dbg !8908
  br i1 %4, label %14, label %5, !dbg !8909

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8906, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i8* %7, metadata !8905, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i32 %8, metadata !8904, metadata !DIExpression()), !dbg !8907
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8910
  call void @llvm.dbg.value(metadata i8* %9, metadata !8906, metadata !DIExpression()), !dbg !8907
  %10 = load i8, i8* %6, align 1, !dbg !8912
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8913
  call void @llvm.dbg.value(metadata i8* %11, metadata !8905, metadata !DIExpression()), !dbg !8907
  store i8 %10, i8* %7, align 1, !dbg !8914
  %12 = add i32 %8, -1, !dbg !8915
  call void @llvm.dbg.value(metadata i32 %12, metadata !8904, metadata !DIExpression()), !dbg !8907
  %13 = icmp eq i32 %12, 0, !dbg !8908
  br i1 %13, label %14, label %5, !dbg !8909, !llvm.loop !8916

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8918
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8919 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8923, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i32 %1, metadata !8924, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i32 %2, metadata !8925, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i8* %0, metadata !8926, metadata !DIExpression()), !dbg !8928
  %4 = trunc i32 %1 to i8, !dbg !8929
  call void @llvm.dbg.value(metadata i8 %4, metadata !8927, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i32 %2, metadata !8925, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i8* %0, metadata !8926, metadata !DIExpression()), !dbg !8928
  %5 = icmp eq i32 %2, 0, !dbg !8930
  br i1 %5, label %12, label %6, !dbg !8931

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8925, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i8* %8, metadata !8926, metadata !DIExpression()), !dbg !8928
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8932
  call void @llvm.dbg.value(metadata i8* %9, metadata !8926, metadata !DIExpression()), !dbg !8928
  store i8 %4, i8* %8, align 1, !dbg !8934
  %10 = add i32 %7, -1, !dbg !8935
  call void @llvm.dbg.value(metadata i32 %10, metadata !8925, metadata !DIExpression()), !dbg !8928
  %11 = icmp eq i32 %10, 0, !dbg !8930
  br i1 %11, label %12, label %6, !dbg !8931, !llvm.loop !8936

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8938
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8939 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8943, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.value(metadata i32 %1, metadata !8944, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.value(metadata i32 %2, metadata !8945, metadata !DIExpression()), !dbg !8949
  %4 = icmp eq i32 %2, 0, !dbg !8950
  br i1 %4, label %17, label %5, !dbg !8951

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8952

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8953
  call void @llvm.dbg.value(metadata i8* %9, metadata !8946, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.value(metadata i32 %8, metadata !8945, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.value(metadata i8* %9, metadata !8946, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8953
  %10 = load i8, i8* %9, align 1, !dbg !8954
  %11 = icmp eq i8 %10, %6, !dbg !8957
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8958
  call void @llvm.dbg.value(metadata i8* %12, metadata !8946, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.value(metadata i32 %13, metadata !8945, metadata !DIExpression()), !dbg !8949
  br i1 %15, label %16, label %7, !dbg !8958, !llvm.loop !8959

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8961

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8949
  ret i8* %19, !dbg !8962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8963 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8965, metadata !DIExpression()), !dbg !8966
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8967
  ret void, !dbg !8968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8971, metadata !DIExpression()), !dbg !8972
  ret i32 -1, !dbg !8973
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8978, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i32* %1, metadata !8979, metadata !DIExpression()), !dbg !8980
  %3 = ptrtoint i32* %1 to i32, !dbg !8981
  %4 = and i32 %3, -2, !dbg !8981
  %5 = icmp eq i32 %4, 2, !dbg !8981
  br i1 %5, label %6, label %9, !dbg !8981

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8982
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !8982
  br label %9, !dbg !8983

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8983
  ret i32 %10, !dbg !8984
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8987, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i32* %1, metadata !8988, metadata !DIExpression()), !dbg !8989
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8990
  ret i32 %3, !dbg !8991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8995, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i32* %1, metadata !8996, metadata !DIExpression()), !dbg !8997
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8998, !srcloc !9000
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !9001
  ret i32 %3, !dbg !9002
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9003 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9008, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32* %1, metadata !9009, metadata !DIExpression()), !dbg !9012
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !9013
  call void @llvm.dbg.value(metadata i32 %3, metadata !9010, metadata !DIExpression()), !dbg !9012
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !9014
  call void @llvm.dbg.value(metadata i32 %4, metadata !9011, metadata !DIExpression()), !dbg !9012
  %5 = icmp ne i32 %3, %4, !dbg !9015
  %6 = sext i1 %5 to i32, !dbg !9016
  ret i32 %6, !dbg !9017
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9018 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9022, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %1, metadata !9023, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %2, metadata !9024, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32* %3, metadata !9025, metadata !DIExpression()), !dbg !9026
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !9027
  ret i32 %5, !dbg !9028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9029 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9031, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i32 %1, metadata !9032, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i32 %2, metadata !9033, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i32* %3, metadata !9034, metadata !DIExpression()), !dbg !9035
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9036, !srcloc !9038
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !9039
  ret i32 %5, !dbg !9040
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9041 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9043, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.value(metadata i32 %1, metadata !9044, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.value(metadata i32 %2, metadata !9045, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.value(metadata i32* %3, metadata !9046, metadata !DIExpression()), !dbg !9051
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9052
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9054
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9054
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9054
  br i1 %11, label %33, label %12, !dbg !9054

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9051
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9051
  call void @llvm.dbg.value(metadata i8* %14, metadata !9049, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.value(metadata i32 %13, metadata !9047, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.value(metadata i32 %1, metadata !9048, metadata !DIExpression()), !dbg !9051
  br label %15, !dbg !9055

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9057
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9051
  call void @llvm.dbg.value(metadata i8* %17, metadata !9049, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.value(metadata i32 %16, metadata !9048, metadata !DIExpression()), !dbg !9051
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9058
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9061
  call void @llvm.dbg.value(metadata i8* %19, metadata !9049, metadata !DIExpression()), !dbg !9051
  %20 = load i8, i8* %17, align 1, !dbg !9062
  %21 = zext i8 %20 to i32, !dbg !9063
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !9058
  %23 = icmp eq i32 %22, -1, !dbg !9064
  br i1 %23, label %30, label %24, !dbg !9065

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9066
  call void @llvm.dbg.value(metadata i32 %25, metadata !9048, metadata !DIExpression()), !dbg !9051
  %26 = icmp eq i32 %25, 0, !dbg !9067
  br i1 %26, label %27, label %15, !dbg !9068, !llvm.loop !9069

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9071
  call void @llvm.dbg.value(metadata i32 %28, metadata !9047, metadata !DIExpression()), !dbg !9051
  %29 = icmp eq i32 %28, 0, !dbg !9072
  br i1 %29, label %30, label %12, !dbg !9073, !llvm.loop !9074

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9051
  call void @llvm.dbg.value(metadata i32 %31, metadata !9047, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.label(metadata !9050), !dbg !9077
  %32 = sub i32 %2, %31, !dbg !9078
  br label %33, !dbg !9079

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9051
  ret i32 %34, !dbg !9080
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9081 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9085, metadata !DIExpression()), !dbg !9086
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !9087
  %3 = icmp eq i32 %2, -1, !dbg !9089
  br i1 %3, label %8, label %4, !dbg !9090

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !9091
  %6 = icmp eq i32 %5, -1, !dbg !9092
  %7 = sext i1 %6 to i32, !dbg !9091
  br label %8, !dbg !9093

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9086
  ret i32 %9, !dbg !9094
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9095 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9103, metadata !DIExpression()), !dbg !9105
  %3 = tail call i64 @sys_clock_tick_get() #24, !dbg !9106
  call void @llvm.dbg.value(metadata i64 %3, metadata !9104, metadata !DIExpression()), !dbg !9105
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9107
  %5 = sub i64 %1, %3, !dbg !9107
  store i64 %5, i64* %4, align 8, !dbg !9107
  ret void, !dbg !9108
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel.128* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9109 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9256, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.value(metadata %struct.zbus_channel.128* %0, metadata !9254, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.value(metadata i8* %1, metadata !9255, metadata !DIExpression()), !dbg !9259
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #24, !dbg !9260
  call void @llvm.dbg.value(metadata i64 %4, metadata !9258, metadata !DIExpression()), !dbg !9259
  %5 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9261
  br i1 %5, label %6, label %7, !dbg !9264

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 108) #24, !dbg !9265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.117, i32 0, i32 0)) #24, !dbg !9265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 108) #24, !dbg !9265
  unreachable, !dbg !9265

7:                                                ; preds = %3
  %8 = icmp eq %struct.zbus_channel.128* %0, null, !dbg !9267
  br i1 %8, label %9, label %10, !dbg !9270

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 109) #24, !dbg !9271
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.119, i32 0, i32 0)) #24, !dbg !9271
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 109) #24, !dbg !9271
  unreachable, !dbg !9271

10:                                               ; preds = %7
  %11 = icmp eq i8* %1, null, !dbg !9273
  br i1 %11, label %12, label %13, !dbg !9276

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 110) #24, !dbg !9277
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.121, i32 0, i32 0)) #24, !dbg !9277
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 110) #24, !dbg !9277
  unreachable, !dbg !9277

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 4, !dbg !9279
  %15 = load i1 (i8*, i32)*, i1 (i8*, i32)** %14, align 4, !dbg !9279
  %16 = icmp eq i1 (i8*, i32)* %15, null, !dbg !9281
  br i1 %16, label %22, label %17, !dbg !9282

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 1, !dbg !9283
  %19 = load i16, i16* %18, align 4, !dbg !9283
  %20 = zext i16 %19 to i32, !dbg !9284
  %21 = tail call zeroext i1 %15(i8* noundef nonnull %1, i32 noundef %20) #24, !dbg !9285
  br i1 %21, label %22, label %36, !dbg !9286

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 5, !dbg !9287
  %24 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !9287
  %25 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %24, [1 x i64] %2) #25, !dbg !9288
  call void @llvm.dbg.value(metadata i32 %25, metadata !9257, metadata !DIExpression()), !dbg !9259
  %26 = icmp eq i32 %25, 0, !dbg !9289
  br i1 %26, label %27, label %36, !dbg !9291

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 3, !dbg !9292
  %29 = load i8*, i8** %28, align 4, !dbg !9292
  %30 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 1, !dbg !9293
  %31 = load i16, i16* %30, align 4, !dbg !9293
  %32 = zext i16 %31 to i32, !dbg !9294
  %33 = tail call i8* @memcpy(i8* noundef %29, i8* noundef nonnull %1, i32 noundef %32) #24, !dbg !9295
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.128* noundef nonnull %0, i64 noundef %4) #25, !dbg !9296
  call void @llvm.dbg.value(metadata i32 0, metadata !9257, metadata !DIExpression()), !dbg !9259
  %34 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !9297
  %35 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %34) #25, !dbg !9298
  br label %36, !dbg !9299

36:                                               ; preds = %22, %17, %27
  %37 = phi i32 [ 0, %27 ], [ -35, %17 ], [ %25, %22 ], !dbg !9259
  ret i32 %37, !dbg !9300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9301 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9306, metadata !DIExpression()), !dbg !9307
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9305, metadata !DIExpression()), !dbg !9307
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9308, !srcloc !9310
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #24, !dbg !9311
  ret i32 %3, !dbg !9312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_observers(%struct.zbus_channel.128* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9313 {
  %3 = alloca %struct.zbus_channel.128*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel.128* %0, metadata !9317, metadata !DIExpression()), !dbg !9325
  store %struct.zbus_channel.128* %0, %struct.zbus_channel.128** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9318, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i32 0, metadata !9319, metadata !DIExpression()), !dbg !9325
  %5 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 6, !dbg !9326
  %6 = load %struct.zbus_observer.127**, %struct.zbus_observer.127*** %5, align 4, !dbg !9326
  call void @llvm.dbg.value(metadata %struct.zbus_observer.127** %6, metadata !9321, metadata !DIExpression()), !dbg !9327
  %7 = load %struct.zbus_observer.127*, %struct.zbus_observer.127** %6, align 4, !dbg !9328
  %8 = icmp eq %struct.zbus_observer.127* %7, null, !dbg !9330
  br i1 %8, label %31, label %16, !dbg !9331

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer.127**, %struct.zbus_observer.127*** %5, align 4, !dbg !9332
  %11 = load %struct.zbus_observer.127*, %struct.zbus_observer.127** %10, align 4, !dbg !9333
  call void @llvm.dbg.value(metadata %struct.zbus_channel.128* %0, metadata !9317, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata %struct.zbus_observer.127** %10, metadata !9323, metadata !DIExpression()), !dbg !9335
  call void @llvm.dbg.value(metadata i32 0, metadata !9319, metadata !DIExpression()), !dbg !9325
  %12 = icmp eq %struct.zbus_observer.127* %11, null, !dbg !9336
  br i1 %12, label %31, label %13, !dbg !9337

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel.128** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %32, !dbg !9337

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer.127* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer.127** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.127** %18, metadata !9321, metadata !DIExpression()), !dbg !9327
  %19 = getelementptr inbounds %struct.zbus_observer.127, %struct.zbus_observer.127* %17, i32 0, i32 0, !dbg !9338
  %20 = load i8, i8* %19, align 4, !dbg !9338, !range !7916
  %21 = icmp eq i8 %20, 0, !dbg !9338
  br i1 %21, label %27, label %22, !dbg !9341

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer.127, %struct.zbus_observer.127* %17, i32 0, i32 2, !dbg !9342
  %24 = load void (%struct.zbus_channel.128*)*, void (%struct.zbus_channel.128*)** %23, align 4, !dbg !9342
  %25 = icmp eq void (%struct.zbus_channel.128*)* %24, null, !dbg !9343
  br i1 %25, label %27, label %26, !dbg !9344

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel.128* %0, metadata !9317, metadata !DIExpression()), !dbg !9325
  tail call void %24(%struct.zbus_channel.128* noundef %0) #24, !dbg !9345
  br label %27, !dbg !9347

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer.127*, %struct.zbus_observer.127** %18, i32 1, !dbg !9348
  call void @llvm.dbg.value(metadata %struct.zbus_observer.127** %28, metadata !9321, metadata !DIExpression()), !dbg !9327
  %29 = load %struct.zbus_observer.127*, %struct.zbus_observer.127** %28, align 4, !dbg !9328
  %30 = icmp eq %struct.zbus_observer.127* %29, null, !dbg !9330
  br i1 %30, label %9, label %16, !dbg !9331, !llvm.loop !9349

31:                                               ; preds = %48, %2, %9
  ret void, !dbg !9351

32:                                               ; preds = %13, %48
  %33 = phi %struct.zbus_observer.127* [ %11, %13 ], [ %50, %48 ]
  %34 = phi %struct.zbus_observer.127** [ %10, %13 ], [ %49, %48 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.127** %34, metadata !9323, metadata !DIExpression()), !dbg !9335
  %35 = getelementptr inbounds %struct.zbus_observer.127, %struct.zbus_observer.127* %33, i32 0, i32 0, !dbg !9352
  %36 = load i8, i8* %35, align 4, !dbg !9352, !range !7916
  %37 = icmp eq i8 %36, 0, !dbg !9352
  br i1 %37, label %48, label %38, !dbg !9355

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.zbus_observer.127, %struct.zbus_observer.127* %33, i32 0, i32 1, !dbg !9356
  %40 = load %struct.k_msgq*, %struct.k_msgq** %39, align 4, !dbg !9356
  %41 = icmp eq %struct.k_msgq* %40, null, !dbg !9357
  br i1 %41, label %48, label %42, !dbg !9358

42:                                               ; preds = %38
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #25, !dbg !9359
  %43 = load i64, i64* %15, align 8, !dbg !9361
  %44 = insertvalue [1 x i64] poison, i64 %43, 0, !dbg !9361
  call void @llvm.dbg.value(metadata %struct.zbus_channel.128** %3, metadata !9317, metadata !DIExpression(DW_OP_deref)), !dbg !9325
  %45 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %40, i8* noundef nonnull %14, [1 x i64] %44) #25, !dbg !9361
  call void @llvm.dbg.value(metadata i32 %45, metadata !9320, metadata !DIExpression()), !dbg !9325
  %46 = icmp eq i32 %45, 0, !dbg !9362
  br i1 %46, label %48, label %47, !dbg !9365

47:                                               ; preds = %42
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 85) #24, !dbg !9366
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.124, i32 0, i32 0)) #24, !dbg !9366
  call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 85) #24, !dbg !9366
  unreachable, !dbg !9366

48:                                               ; preds = %42, %32, %38
  call void @llvm.dbg.value(metadata i32 0, metadata !9319, metadata !DIExpression()), !dbg !9325
  %49 = getelementptr inbounds %struct.zbus_observer.127*, %struct.zbus_observer.127** %34, i32 1, !dbg !9368
  call void @llvm.dbg.value(metadata %struct.zbus_observer.127** %49, metadata !9323, metadata !DIExpression()), !dbg !9335
  %50 = load %struct.zbus_observer.127*, %struct.zbus_observer.127** %49, align 4, !dbg !9333
  %51 = icmp eq %struct.zbus_observer.127* %50, null, !dbg !9336
  br i1 %51, label %31, label %32, !dbg !9337, !llvm.loop !9369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9371 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9375, metadata !DIExpression()), !dbg !9376
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9377, !srcloc !9379
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #24, !dbg !9380
  ret i32 %2, !dbg !9381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9382 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9388, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9386, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i8* %1, metadata !9387, metadata !DIExpression()), !dbg !9389
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9390, !srcloc !9392
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #24, !dbg !9393
  ret i32 %4, !dbg !9394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel.128* noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9395 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9401, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.value(metadata %struct.zbus_channel.128* %0, metadata !9399, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.value(metadata i8* %1, metadata !9400, metadata !DIExpression()), !dbg !9403
  %4 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9404
  br i1 %4, label %5, label %6, !dbg !9407

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 134) #24, !dbg !9408
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.117, i32 0, i32 0)) #24, !dbg !9408
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 134) #24, !dbg !9408
  unreachable, !dbg !9408

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_channel.128* %0, null, !dbg !9410
  br i1 %7, label %8, label %9, !dbg !9413

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 135) #24, !dbg !9414
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.119, i32 0, i32 0)) #24, !dbg !9414
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 135) #24, !dbg !9414
  unreachable, !dbg !9414

9:                                                ; preds = %6
  %10 = icmp eq i8* %1, null, !dbg !9416
  br i1 %10, label %11, label %12, !dbg !9419

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 136) #24, !dbg !9420
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.121, i32 0, i32 0)) #24, !dbg !9420
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 136) #24, !dbg !9420
  unreachable, !dbg !9420

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 5, !dbg !9422
  %14 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !9422
  %15 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %14, [1 x i64] %2) #25, !dbg !9423
  call void @llvm.dbg.value(metadata i32 %15, metadata !9402, metadata !DIExpression()), !dbg !9403
  %16 = icmp eq i32 %15, 0, !dbg !9424
  br i1 %16, label %17, label %26, !dbg !9426

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 3, !dbg !9427
  %19 = load i8*, i8** %18, align 4, !dbg !9427
  %20 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 1, !dbg !9428
  %21 = load i16, i16* %20, align 4, !dbg !9428
  %22 = zext i16 %21 to i32, !dbg !9429
  %23 = tail call i8* @memcpy(i8* noundef nonnull %1, i8* noundef %19, i32 noundef %22) #24, !dbg !9430
  %24 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !9431
  %25 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %24) #25, !dbg !9432
  br label %26, !dbg !9433

26:                                               ; preds = %12, %17
  %27 = phi i32 [ %25, %17 ], [ %15, %12 ], !dbg !9403
  ret i32 %27, !dbg !9434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel.128* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9435 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9440, metadata !DIExpression()), !dbg !9443
  call void @llvm.dbg.value(metadata %struct.zbus_channel.128* %0, metadata !9439, metadata !DIExpression()), !dbg !9443
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #24, !dbg !9444
  call void @llvm.dbg.value(metadata i64 %3, metadata !9442, metadata !DIExpression()), !dbg !9443
  %4 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9445
  br i1 %4, label %5, label %6, !dbg !9448

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 153) #24, !dbg !9449
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.117, i32 0, i32 0)) #24, !dbg !9449
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 153) #24, !dbg !9449
  unreachable, !dbg !9449

6:                                                ; preds = %2
  %7 = icmp eq %struct.zbus_channel.128* %0, null, !dbg !9451
  br i1 %7, label %8, label %9, !dbg !9454

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 154) #24, !dbg !9455
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.119, i32 0, i32 0)) #24, !dbg !9455
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 154) #24, !dbg !9455
  unreachable, !dbg !9455

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 5, !dbg !9457
  %11 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !9457
  %12 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %11, [1 x i64] %1) #25, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %12, metadata !9441, metadata !DIExpression()), !dbg !9443
  %13 = icmp eq i32 %12, 0, !dbg !9459
  br i1 %13, label %14, label %17, !dbg !9461

14:                                               ; preds = %9
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.128* noundef nonnull %0, i64 noundef %3) #25, !dbg !9462
  call void @llvm.dbg.value(metadata i32 0, metadata !9441, metadata !DIExpression()), !dbg !9443
  %15 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !9463
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #25, !dbg !9464
  br label %17, !dbg !9465

17:                                               ; preds = %9, %14
  ret i32 %12, !dbg !9466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel.128* noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9467 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9470, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.value(metadata %struct.zbus_channel.128* %0, metadata !9469, metadata !DIExpression()), !dbg !9472
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9473
  br i1 %3, label %4, label %5, !dbg !9476

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 170) #24, !dbg !9477
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.117, i32 0, i32 0)) #24, !dbg !9477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 170) #24, !dbg !9477
  unreachable, !dbg !9477

5:                                                ; preds = %2
  %6 = icmp eq %struct.zbus_channel.128* %0, null, !dbg !9479
  br i1 %6, label %7, label %8, !dbg !9482

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 171) #24, !dbg !9483
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.119, i32 0, i32 0)) #24, !dbg !9483
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 171) #24, !dbg !9483
  unreachable, !dbg !9483

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 5, !dbg !9485
  %10 = load %struct.k_mutex*, %struct.k_mutex** %9, align 4, !dbg !9485
  %11 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %10, [1 x i64] %1) #25, !dbg !9486
  call void @llvm.dbg.value(metadata i32 %11, metadata !9471, metadata !DIExpression()), !dbg !9472
  ret i32 %11, !dbg !9487
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel.128* noundef readonly %0) local_unnamed_addr #1 !dbg !9488 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.128* %0, metadata !9492, metadata !DIExpression()), !dbg !9494
  %2 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9495
  br i1 %2, label %3, label %4, !dbg !9498

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 184) #24, !dbg !9499
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.117, i32 0, i32 0)) #24, !dbg !9499
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 184) #24, !dbg !9499
  unreachable, !dbg !9499

4:                                                ; preds = %1
  %5 = icmp eq %struct.zbus_channel.128* %0, null, !dbg !9501
  br i1 %5, label %6, label %7, !dbg !9504

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 185) #24, !dbg !9505
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.119, i32 0, i32 0)) #24, !dbg !9505
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 185) #24, !dbg !9505
  unreachable, !dbg !9505

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.zbus_channel.128, %struct.zbus_channel.128* %0, i32 0, i32 5, !dbg !9507
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !9507
  %10 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %9) #25, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %10, metadata !9493, metadata !DIExpression()), !dbg !9494
  ret i32 %10, !dbg !9509
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer.127* noundef readonly %0, %struct.zbus_channel.128** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9510 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9517, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata %struct.zbus_observer.127* %0, metadata !9515, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata %struct.zbus_channel.128** %1, metadata !9516, metadata !DIExpression()), !dbg !9518
  %4 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9519
  br i1 %4, label %5, label %6, !dbg !9522

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 195) #24, !dbg !9523
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.117, i32 0, i32 0)) #24, !dbg !9523
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 195) #24, !dbg !9523
  unreachable, !dbg !9523

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_observer.127* %0, null, !dbg !9525
  br i1 %7, label %8, label %9, !dbg !9528

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 196) #24, !dbg !9529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.132, i32 0, i32 0)) #24, !dbg !9529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 196) #24, !dbg !9529
  unreachable, !dbg !9529

9:                                                ; preds = %6
  %10 = icmp eq %struct.zbus_channel.128** %1, null, !dbg !9531
  br i1 %10, label %11, label %12, !dbg !9534

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 197) #24, !dbg !9535
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.119, i32 0, i32 0)) #24, !dbg !9535
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef 197) #24, !dbg !9535
  unreachable, !dbg !9535

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_observer.127, %struct.zbus_observer.127* %0, i32 0, i32 1, !dbg !9537
  %14 = load %struct.k_msgq*, %struct.k_msgq** %13, align 4, !dbg !9537
  %15 = icmp eq %struct.k_msgq* %14, null, !dbg !9539
  br i1 %15, label %19, label %16, !dbg !9540

16:                                               ; preds = %12
  %17 = bitcast %struct.zbus_channel.128** %1 to i8*, !dbg !9541
  %18 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %14, i8* noundef nonnull %17, [1 x i64] %2) #25, !dbg !9542
  br label %19, !dbg !9543

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %18, %16 ], [ -22, %12 ], !dbg !9518
  ret i32 %20, !dbg !9544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9545 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9551, metadata !DIExpression()), !dbg !9552
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9549, metadata !DIExpression()), !dbg !9552
  call void @llvm.dbg.value(metadata i8* %1, metadata !9550, metadata !DIExpression()), !dbg !9552
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9553, !srcloc !9555
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #24, !dbg !9556
  ret i32 %4, !dbg !9557
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9558 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9560, metadata !DIExpression()), !dbg !9561
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !9562
  br i1 %2, label %3, label %4, !dbg !9564

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !9565
  br label %4, !dbg !9566

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9561
  ret i32 %5, !dbg !9567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9568 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9573, metadata !DIExpression()), !dbg !9574
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9575, !srcloc !9577
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !9578
  ret i1 %1, !dbg !9579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9580 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9581
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9582
  ret void, !dbg !9583
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9586, metadata !DIExpression()), !dbg !9587
  %2 = icmp eq i32 %0, 10, !dbg !9588
  br i1 %2, label %3, label %4, !dbg !9590

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !9591
  br label %4, !dbg !9593

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9594
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !9595
  ret i32 %0, !dbg !9596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9597 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9600, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i8 %0, metadata !9601, metadata !DIExpression()), !dbg !9602
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9603, !srcloc !9605
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !9606
  ret void, !dbg !9607
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9608 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9610, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.value(metadata i8 %0, metadata !9611, metadata !DIExpression()), !dbg !9613
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9614
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9612, metadata !DIExpression()), !dbg !9613
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9615
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9615
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #24, !dbg !9616
  ret void, !dbg !9617
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9618 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9620, metadata !DIExpression()), !dbg !9621
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !9622
  ret i1 %1, !dbg !9623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !9624 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9673, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9674, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9675, metadata !DIExpression()), !dbg !9676
  ret void, !dbg !9677
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9678 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9680, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i8 %1, metadata !9681, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i32 %2, metadata !9682, metadata !DIExpression()), !dbg !9693
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9694
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !9694
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !9694
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !9683, metadata !DIExpression()), !dbg !9693
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !9695
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9695
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !9685, metadata !DIExpression()), !dbg !9693
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !9696
  %13 = icmp eq i32 %12, 196608, !dbg !9696
  br i1 %13, label %71, label %14, !dbg !9696

14:                                               ; preds = %3
  %15 = zext i8 %1 to i32, !dbg !9698
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 3, !dbg !9698
  %17 = load i8, i8* %16, align 4, !dbg !9698
  %18 = icmp ugt i8 %17, %1, !dbg !9698
  br i1 %18, label %20, label %19, !dbg !9701

19:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.142, i32 0, i32 0), i32 noundef 50) #24, !dbg !9702
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.142, i32 0, i32 0), i32 noundef 50) #24, !dbg !9702
  unreachable, !dbg !9702

20:                                               ; preds = %14
  %21 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !9704
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %21) #23, !dbg !9704
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !9686, metadata !DIExpression()), !dbg !9705
  %22 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !9706
  %23 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %22, align 4, !dbg !9706
  %24 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, i32 1, !dbg !9707
  %25 = load i32, i32* %24, align 4, !dbg !9707
  %26 = inttoptr i32 %25 to i32*, !dbg !9708
  call void @llvm.dbg.value(metadata i32* %26, metadata !9691, metadata !DIExpression()), !dbg !9693
  %27 = load volatile i32, i32* %26, align 4, !dbg !9709
  call void @llvm.dbg.value(metadata i32 %27, metadata !9692, metadata !DIExpression()), !dbg !9693
  %28 = and i32 %2, 2, !dbg !9710
  %29 = icmp eq i32 %28, 0, !dbg !9712
  br i1 %29, label %30, label %69, !dbg !9713

30:                                               ; preds = %20
  %31 = and i32 %2, 48, !dbg !9714
  %32 = icmp eq i32 %31, 0, !dbg !9714
  br i1 %32, label %41, label %33, !dbg !9714

33:                                               ; preds = %30
  %34 = and i32 %2, 16, !dbg !9716
  %35 = icmp eq i32 %34, 0, !dbg !9717
  call void @llvm.dbg.value(metadata i32 %27, metadata !9692, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !9693
  br i1 %35, label %38, label %36, !dbg !9718

36:                                               ; preds = %33
  %37 = or i32 %27, 48, !dbg !9720
  call void @llvm.dbg.value(metadata i32 %37, metadata !9692, metadata !DIExpression()), !dbg !9693
  br label %43, !dbg !9723

38:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %27, metadata !9692, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !9693
  %39 = and i32 %27, -49, !dbg !9724
  %40 = or i32 %39, 16, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %40, metadata !9692, metadata !DIExpression()), !dbg !9693
  br label %43

41:                                               ; preds = %30
  %42 = and i32 %27, -17, !dbg !9726
  call void @llvm.dbg.value(metadata i32 %42, metadata !9692, metadata !DIExpression()), !dbg !9693
  br label %43

43:                                               ; preds = %36, %38, %41
  %44 = phi i32 [ %37, %36 ], [ %40, %38 ], [ %42, %41 ], !dbg !9728
  call void @llvm.dbg.value(metadata i32 %44, metadata !9692, metadata !DIExpression()), !dbg !9693
  %45 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, !dbg !9729
  %46 = bitcast %struct.pinctrl_soc_pinmux* %45 to i8*, !dbg !9730
  %47 = call i8* @memcpy(i8* noundef nonnull %21, i8* noundef %46, i32 noundef 20) #24, !dbg !9731
  %48 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !9732
  store i32 %44, i32* %48, align 4, !dbg !9733
  %49 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #24, !dbg !9734
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #24, !dbg !9735
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #24, !dbg !9736
  br i1 %11, label %63, label %50, !dbg !9737

50:                                               ; preds = %43
  %51 = and i32 %2, 262144, !dbg !9738
  %52 = icmp eq i32 %51, 0, !dbg !9742
  br i1 %52, label %53, label %56, !dbg !9743

53:                                               ; preds = %50
  %54 = and i32 %2, 524288, !dbg !9744
  %55 = icmp eq i32 %54, 0, !dbg !9746
  br i1 %55, label %58, label %56, !dbg !9747

56:                                               ; preds = %53, %50
  %57 = phi i32 [ 0, %50 ], [ 1, %53 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %15, i32 noundef %57) #24, !dbg !9748
  br label %58, !dbg !9749

58:                                               ; preds = %56, %53
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9749
  %60 = load volatile i32, i32* %59, align 4, !dbg !9749
  %61 = shl nuw i32 1, %15, !dbg !9749
  %62 = or i32 %60, %61, !dbg !9749
  store volatile i32 %62, i32* %59, align 4, !dbg !9749
  br label %69, !dbg !9750

63:                                               ; preds = %43
  %64 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9751
  %65 = load volatile i32, i32* %64, align 4, !dbg !9751
  %66 = shl nuw i32 1, %15, !dbg !9751
  %67 = xor i32 %66, -1, !dbg !9751
  %68 = and i32 %65, %67, !dbg !9751
  store volatile i32 %68, i32* %64, align 4, !dbg !9751
  br label %69

69:                                               ; preds = %58, %63, %20
  %70 = phi i32 [ -134, %20 ], [ 0, %63 ], [ 0, %58 ], !dbg !9693
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #23, !dbg !9753
  br label %71

71:                                               ; preds = %3, %69
  %72 = phi i32 [ %70, %69 ], [ -134, %3 ], !dbg !9693
  ret i32 %72, !dbg !9753
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !9754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9758, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i32* %1, metadata !9759, metadata !DIExpression()), !dbg !9762
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9763
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9763
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9763
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9760, metadata !DIExpression()), !dbg !9762
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9764
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9764
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9761, metadata !DIExpression()), !dbg !9762
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !9765
  store i32 %8, i32* %1, align 4, !dbg !9766
  ret i32 0, !dbg !9767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !9768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9770, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i32 %1, metadata !9771, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i32 %2, metadata !9772, metadata !DIExpression()), !dbg !9775
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9776
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !9776
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !9776
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !9773, metadata !DIExpression()), !dbg !9775
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !9777
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !9777
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !9774, metadata !DIExpression()), !dbg !9775
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #25, !dbg !9778
  %10 = xor i32 %1, -1, !dbg !9779
  %11 = and i32 %9, %10, !dbg !9780
  %12 = and i32 %2, %1, !dbg !9781
  %13 = or i32 %11, %12, !dbg !9782
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #25, !dbg !9783
  ret i32 0, !dbg !9784
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9787, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i32 %1, metadata !9788, metadata !DIExpression()), !dbg !9791
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9792
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9792
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9792
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9789, metadata !DIExpression()), !dbg !9791
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9793
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9793
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9790, metadata !DIExpression()), !dbg !9791
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !9794
  %9 = or i32 %8, %1, !dbg !9795
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #25, !dbg !9796
  ret i32 0, !dbg !9797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9798 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9800, metadata !DIExpression()), !dbg !9804
  call void @llvm.dbg.value(metadata i32 %1, metadata !9801, metadata !DIExpression()), !dbg !9804
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9805
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9805
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9805
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9802, metadata !DIExpression()), !dbg !9804
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9806
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9806
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9803, metadata !DIExpression()), !dbg !9804
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !9807
  %9 = xor i32 %1, -1, !dbg !9808
  %10 = and i32 %8, %9, !dbg !9809
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #25, !dbg !9810
  ret i32 0, !dbg !9811
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9812 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9814, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata i32 %1, metadata !9815, metadata !DIExpression()), !dbg !9818
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9819
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9819
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9819
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9816, metadata !DIExpression()), !dbg !9818
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9820
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9820
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9817, metadata !DIExpression()), !dbg !9818
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !9821
  %9 = xor i32 %8, %1, !dbg !9822
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #25, !dbg !9823
  ret i32 0, !dbg !9824
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9825 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9827, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i8 %1, metadata !9828, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i32 %2, metadata !9829, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i32 %3, metadata !9830, metadata !DIExpression()), !dbg !9837
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9838
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !9838
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !9838
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !9831, metadata !DIExpression()), !dbg !9837
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !9839
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9839
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !9832, metadata !DIExpression()), !dbg !9837
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9840
  %11 = load volatile i32, i32* %10, align 4, !dbg !9840
  %12 = zext i8 %1 to i32, !dbg !9842
  %13 = shl nuw i32 1, %12, !dbg !9842
  %14 = and i32 %11, %13, !dbg !9843
  %15 = icmp ne i32 %14, 0, !dbg !9844
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !9845
  br i1 %17, label %77, label %18, !dbg !9845

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !9846
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !9848
  br i1 %21, label %29, label %22, !dbg !9848

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !9849
  br i1 %24, label %29, label %25, !dbg !9849

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !9851
  %27 = and i1 %26, %23, !dbg !9853
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !9854
  call void @llvm.dbg.value(metadata i32 %30, metadata !9835, metadata !DIExpression()), !dbg !9837
  %31 = icmp ult i8 %1, 16, !dbg !9855
  br i1 %31, label %32, label %35, !dbg !9857

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !9858
  call void @llvm.dbg.value(metadata i8 %33, metadata !9836, metadata !DIExpression()), !dbg !9837
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !9860
  call void @llvm.dbg.value(metadata i32* %34, metadata !9833, metadata !DIExpression()), !dbg !9837
  br label %41, !dbg !9861

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !9862
  br i1 %36, label %37, label %77, !dbg !9864

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !9865
  %39 = add nsw i8 %38, -32, !dbg !9865
  call void @llvm.dbg.value(metadata i8 %39, metadata !9836, metadata !DIExpression()), !dbg !9837
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !9867
  call void @llvm.dbg.value(metadata i32* %40, metadata !9833, metadata !DIExpression()), !dbg !9837
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !9868
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !9868
  call void @llvm.dbg.value(metadata i8 %43, metadata !9836, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i32* %42, metadata !9833, metadata !DIExpression()), !dbg !9837
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9869, !srcloc !9877
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !9869
  call void @llvm.dbg.value(metadata i32 %45, metadata !9874, metadata !DIExpression()) #23, !dbg !9878
  call void @llvm.dbg.value(metadata i32 undef, metadata !9875, metadata !DIExpression()) #23, !dbg !9878
  call void @llvm.dbg.value(metadata i32 %45, metadata !9834, metadata !DIExpression()), !dbg !9837
  %46 = load volatile i32, i32* %42, align 4, !dbg !9879
  %47 = zext i8 %43 to i32, !dbg !9880
  %48 = shl nuw i32 3, %47, !dbg !9881
  %49 = xor i32 %48, -1, !dbg !9882
  %50 = and i32 %46, %49, !dbg !9883
  %51 = shl nuw i32 %30, %47, !dbg !9884
  %52 = or i32 %50, %51, !dbg !9885
  store volatile i32 %52, i32* %42, align 4, !dbg !9886
  %53 = icmp eq i32 %3, 100663296, !dbg !9887
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !9887
  %55 = load volatile i32, i32* %54, align 4, !dbg !9887
  %56 = or i32 %55, %13, !dbg !9887
  %57 = xor i32 %13, -1, !dbg !9887
  %58 = and i32 %55, %57, !dbg !9887
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !9887
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !9887
  store volatile i32 %59, i32* %60, align 4, !dbg !9887
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !9888
  %62 = load volatile i32, i32* %61, align 4, !dbg !9888
  br i1 %16, label %63, label %68, !dbg !9888

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !9888
  store volatile i32 %64, i32* %61, align 4, !dbg !9888
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9889
  %66 = load volatile i32, i32* %65, align 4, !dbg !9889
  %67 = or i32 %66, %13, !dbg !9889
  br label %74, !dbg !9889

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !9888
  %70 = and i32 %62, %69, !dbg !9888
  store volatile i32 %70, i32* %61, align 4, !dbg !9888
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9889
  %72 = load volatile i32, i32* %71, align 4, !dbg !9889
  %73 = and i32 %72, %69, !dbg !9889
  br label %74, !dbg !9889

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !9889
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9889
  store volatile i32 %75, i32* %76, align 4, !dbg !9889
  call void @llvm.dbg.value(metadata i32 %45, metadata !9890, metadata !DIExpression()) #23, !dbg !9893
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #23, !dbg !9895, !srcloc !9896
  br label %77, !dbg !9897

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !9837
  ret i32 %78, !dbg !9898
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9899 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9901, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9902, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i1 %2, metadata !9903, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9906
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9907
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !9907
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !9907
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !9904, metadata !DIExpression()), !dbg !9906
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !9908
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !9909
  ret i32 %8, !dbg !9910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9911 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9917, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9918, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i1 %2, metadata !9919, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9920
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9921
  br i1 %4, label %5, label %6, !dbg !9924

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.137, i32 0, i32 0), i32 noundef 42) #24, !dbg !9925
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28.138, i32 0, i32 0)) #24, !dbg !9925
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.137, i32 0, i32 0), i32 noundef 42) #24, !dbg !9925
  unreachable, !dbg !9925

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9927
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9927
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9927
  br i1 %9, label %10, label %11, !dbg !9930

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.137, i32 0, i32 0), i32 noundef 43) #24, !dbg !9931
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.140, i32 0, i32 0)) #24, !dbg !9931
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.137, i32 0, i32 0), i32 noundef 43) #24, !dbg !9931
  unreachable, !dbg !9931

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !9933
  br i1 %12, label %18, label %13, !dbg !9935

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9936
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #25, !dbg !9939
  %16 = or i1 %15, %2, !dbg !9940
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9940
  br i1 %2, label %19, label %21, !dbg !9940

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9941

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9942
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #25, !dbg !9945
  br label %21, !dbg !9946

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9920
  ret i32 %22, !dbg !9947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9948 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9952, metadata !DIExpression()), !dbg !9953
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9954
  %3 = icmp eq %struct._snode* %2, null, !dbg !9954
  ret i1 %3, !dbg !9954
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !9955 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9959, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9960, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9961, metadata !DIExpression()), !dbg !9963
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9964
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9962, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9961, metadata !DIExpression()), !dbg !9963
  %4 = icmp eq %struct._snode* %3, null, !dbg !9966
  br i1 %4, label %15, label %5, !dbg !9964

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9962, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9961, metadata !DIExpression()), !dbg !9963
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9968
  br i1 %6, label %9, label %11, !dbg !9971

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9962, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9961, metadata !DIExpression()), !dbg !9963
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9968
  br i1 %8, label %9, label %11, !dbg !9971, !llvm.loop !9972

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !9973
  br label %15, !dbg !9973

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9962, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9961, metadata !DIExpression()), !dbg !9963
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !9966
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9962, metadata !DIExpression()), !dbg !9963
  %14 = icmp eq %struct._snode* %13, null, !dbg !9966
  br i1 %14, label %15, label %7, !dbg !9964, !llvm.loop !9972

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9976 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9980, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9981, metadata !DIExpression()), !dbg !9982
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9983
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !9983
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !9983
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9984
  %5 = icmp eq %struct._snode* %4, null, !dbg !9984
  br i1 %5, label %6, label %8, !dbg !9983

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9986
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !9986
  br label %8, !dbg !9986

8:                                                ; preds = %6, %2
  ret void, !dbg !9983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9988 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9992, metadata !DIExpression()), !dbg !9993
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9994
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9994
  ret %struct._snode* %3, !dbg !9995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9996 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10000, metadata !DIExpression()), !dbg !10002
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10001, metadata !DIExpression()), !dbg !10002
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10003
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10004
  ret void, !dbg !10005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10006 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10008, metadata !DIExpression()), !dbg !10010
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10009, metadata !DIExpression()), !dbg !10010
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10011
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10012
  ret void, !dbg !10013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10014 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10016, metadata !DIExpression()), !dbg !10017
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10018
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10018
  ret %struct._snode* %3, !dbg !10019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10020 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10023, metadata !DIExpression()), !dbg !10024
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10025
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10026
  ret void, !dbg !10027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10028 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10032, metadata !DIExpression()), !dbg !10035
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10033, metadata !DIExpression()), !dbg !10035
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10034, metadata !DIExpression()), !dbg !10035
  %4 = icmp eq %struct._snode* %1, null, !dbg !10036
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !10038
  br i1 %4, label %6, label %11, !dbg !10039

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !10040
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !10042
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10042
  br i1 %8, label %9, label %15, !dbg !10040

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !10044
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !10044
  br label %15, !dbg !10044

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !10046
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !10048
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10048
  br i1 %13, label %14, label %15, !dbg !10046

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !10050
  br label %15, !dbg !10050

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !10039
  ret void, !dbg !10039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10052 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10056, metadata !DIExpression()), !dbg !10057
  %2 = icmp eq %struct._snode* %0, null, !dbg !10058
  br i1 %2, label %5, label %3, !dbg !10058

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !10058
  br label %5, !dbg !10058

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10058
  ret %struct._snode* %6, !dbg !10058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10059 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10061, metadata !DIExpression()), !dbg !10062
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !10063
  ret %struct._snode* %2, !dbg !10063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10064 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10066, metadata !DIExpression()), !dbg !10067
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10068
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10068
  ret %struct._snode* %3, !dbg !10069
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #17 !dbg !10070 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10074, metadata !DIExpression()), !dbg !10075
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10076
  %3 = load volatile i32, i32* %2, align 4, !dbg !10076
  ret i32 %3, !dbg !10077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10078 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10082, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata i32 %1, metadata !10083, metadata !DIExpression()), !dbg !10084
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10085
  store volatile i32 %1, i32* %3, align 4, !dbg !10086
  ret void, !dbg !10087
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !10088 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10092, metadata !DIExpression()), !dbg !10096
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10097
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !10097
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !10097
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !10093, metadata !DIExpression()), !dbg !10096
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10098
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !10098
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !10098
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !10094, metadata !DIExpression()), !dbg !10096
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !10099
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !10099
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !10100
  %11 = load volatile i32, i32* %10, align 4, !dbg !10100
  call void @llvm.dbg.value(metadata i32 %11, metadata !10095, metadata !DIExpression()), !dbg !10096
  store volatile i32 %11, i32* %10, align 4, !dbg !10101
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !10102
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #25, !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10105 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10109, metadata !DIExpression()), !dbg !10114
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10110, metadata !DIExpression()), !dbg !10114
  call void @llvm.dbg.value(metadata i32 %2, metadata !10111, metadata !DIExpression()), !dbg !10114
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !10115
  %5 = icmp eq %struct._snode* %4, null, !dbg !10115
  br i1 %5, label %24, label %6, !dbg !10115

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !10117
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10113, metadata !DIExpression()), !dbg !10114
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10112, metadata !DIExpression()), !dbg !10114
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10118
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10118
  %12 = load i32, i32* %11, align 4, !dbg !10118
  %13 = and i32 %12, %2, !dbg !10122
  %14 = icmp eq i32 %13, 0, !dbg !10122
  br i1 %14, label %22, label %15, !dbg !10123

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10124
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10124
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10124
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10124
  br i1 %19, label %20, label %21, !dbg !10128

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.137, i32 0, i32 0), i32 noundef 77) #24, !dbg !10129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.140, i32 0, i32 0)) #24, !dbg !10129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.137, i32 0, i32 0), i32 noundef 77) #24, !dbg !10129
  unreachable, !dbg !10129

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #24, !dbg !10131
  br label %22, !dbg !10132

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10112, metadata !DIExpression()), !dbg !10114
  %23 = icmp eq %struct._snode* %8, null, !dbg !10133
  br i1 %23, label %24, label %6, !dbg !10133

24:                                               ; preds = %22, %3
  ret void, !dbg !10134
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1477, metadata !DIExpression()), !dbg !10135
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #24, !dbg !10136
  tail call void @arch_irq_enable(i32 noundef 64) #24, !dbg !10138
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #24, !dbg !10139
  tail call void @arch_irq_enable(i32 noundef 65) #24, !dbg !10138
  ret i32 0, !dbg !10138
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !10141 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10143, metadata !DIExpression()), !dbg !10147
  call void @llvm.dbg.value(metadata i8* %1, metadata !10144, metadata !DIExpression()), !dbg !10147
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10148
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10148
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10148
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10148
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10148
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10145, metadata !DIExpression()), !dbg !10147
  call void @llvm.dbg.value(metadata i32 -1, metadata !10146, metadata !DIExpression()), !dbg !10147
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #25, !dbg !10149
  br i1 %8, label %9, label %13, !dbg !10151

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #25, !dbg !10152
  store i8 %10, i8* %1, align 1, !dbg !10154
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #25, !dbg !10155
  br i1 %11, label %12, label %13, !dbg !10157

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #24, !dbg !10158
  br label %13, !dbg !10160

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !10147
  call void @llvm.dbg.value(metadata i32 %14, metadata !10146, metadata !DIExpression()), !dbg !10147
  ret i32 %14, !dbg !10161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #16 !dbg !10162 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10164, metadata !DIExpression()), !dbg !10167
  call void @llvm.dbg.value(metadata i8 %1, metadata !10165, metadata !DIExpression()), !dbg !10167
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10168
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10168
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10168
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10168
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10168
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10166, metadata !DIExpression()), !dbg !10167
  br label %8, !dbg !10169

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #25, !dbg !10170
  br i1 %9, label %10, label %8, !dbg !10169, !llvm.loop !10171

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #25, !dbg !10173
  ret void, !dbg !10174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #16 !dbg !10175 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10177, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.value(metadata i8* %1, metadata !10178, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.value(metadata i32 %2, metadata !10179, metadata !DIExpression()), !dbg !10182
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10183
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !10183
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !10183
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !10183
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !10183
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !10180, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.value(metadata i32 0, metadata !10181, metadata !DIExpression()), !dbg !10182
  %9 = icmp eq i32 %2, 0, !dbg !10184
  br i1 %9, label %18, label %10, !dbg !10185

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10181, metadata !DIExpression()), !dbg !10182
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #25, !dbg !10186
  br i1 %12, label %13, label %18, !dbg !10187

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !10188
  %15 = load i8, i8* %14, align 1, !dbg !10188
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #25, !dbg !10190
  %16 = add nuw i32 %11, 1, !dbg !10191
  call void @llvm.dbg.value(metadata i32 %16, metadata !10181, metadata !DIExpression()), !dbg !10182
  %17 = icmp eq i32 %16, %2, !dbg !10184
  br i1 %17, label %18, label %10, !dbg !10185, !llvm.loop !10192

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !10182
  ret i32 %19, !dbg !10194
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !10195 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10197, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i8* %1, metadata !10198, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i32 %2, metadata !10199, metadata !DIExpression()), !dbg !10202
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10203
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !10203
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !10203
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !10203
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !10203
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !10200, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i32 0, metadata !10201, metadata !DIExpression()), !dbg !10202
  %9 = icmp eq i32 %2, 0, !dbg !10204
  br i1 %9, label %18, label %10, !dbg !10205

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10201, metadata !DIExpression()), !dbg !10202
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #25, !dbg !10206
  br i1 %12, label %13, label %18, !dbg !10207

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #25, !dbg !10208
  %15 = add nuw i32 %11, 1, !dbg !10210
  call void @llvm.dbg.value(metadata i32 %15, metadata !10201, metadata !DIExpression()), !dbg !10202
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !10211
  store i8 %14, i8* %16, align 1, !dbg !10212
  %17 = icmp eq i32 %15, %2, !dbg !10204
  br i1 %17, label %18, label %10, !dbg !10205, !llvm.loop !10213

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !10202
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #25, !dbg !10215
  br i1 %20, label %21, label %22, !dbg !10217

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #24, !dbg !10218
  br label %22, !dbg !10220

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !10221
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10222 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10224, metadata !DIExpression()), !dbg !10226
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10227
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10227
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10227
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10227
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10227
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10225, metadata !DIExpression()), !dbg !10226
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #24, !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10230 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10232, metadata !DIExpression()), !dbg !10234
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10235
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10235
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10235
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10235
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10235
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10233, metadata !DIExpression()), !dbg !10234
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #24, !dbg !10236
  ret void, !dbg !10237
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10238 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10240, metadata !DIExpression()), !dbg !10242
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10243
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10243
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10243
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10243
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10243
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10241, metadata !DIExpression()), !dbg !10242
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #25, !dbg !10244
  %8 = zext i1 %7 to i32, !dbg !10244
  ret i32 %8, !dbg !10245
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10246 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10248, metadata !DIExpression()), !dbg !10250
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10251
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10251
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10251
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10251
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10251
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10249, metadata !DIExpression()), !dbg !10250
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #24, !dbg !10252
  ret void, !dbg !10253
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10254 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10256, metadata !DIExpression()), !dbg !10258
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10259
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10259
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10259
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10259
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10259
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10257, metadata !DIExpression()), !dbg !10258
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #24, !dbg !10260
  ret void, !dbg !10261
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10264, metadata !DIExpression()), !dbg !10266
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10267
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10267
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10267
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10267
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10267
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10265, metadata !DIExpression()), !dbg !10266
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #25, !dbg !10268
  %8 = zext i1 %7 to i32, !dbg !10268
  ret i32 %8, !dbg !10269
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10270 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10272, metadata !DIExpression()), !dbg !10274
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10275
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10275
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10275
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10275
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10275
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10273, metadata !DIExpression()), !dbg !10274
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #24, !dbg !10276
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #24, !dbg !10277
  ret void, !dbg !10278
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10279 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10281, metadata !DIExpression()), !dbg !10283
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10284
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10284
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10284
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10284
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10284
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10282, metadata !DIExpression()), !dbg !10283
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #24, !dbg !10285
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #24, !dbg !10286
  ret void, !dbg !10287
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #17 !dbg !10288 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10290, metadata !DIExpression()), !dbg !10292
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10293
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10293
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10293
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10293
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10293
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10291, metadata !DIExpression()), !dbg !10292
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #25, !dbg !10294
  br i1 %7, label %11, label %8, !dbg !10295

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #25, !dbg !10296
  %10 = zext i1 %9 to i32, !dbg !10295
  br label %11, !dbg !10295

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !10297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #4 !dbg !10298 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10300, metadata !DIExpression()), !dbg !10301
  ret i32 1, !dbg !10302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #9 !dbg !10303 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10305, metadata !DIExpression()), !dbg !10310
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10306, metadata !DIExpression()), !dbg !10310
  call void @llvm.dbg.value(metadata i8* %2, metadata !10307, metadata !DIExpression()), !dbg !10310
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10311
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !10311
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !10311
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !10308, metadata !DIExpression()), !dbg !10310
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !10312
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10313
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !10314
  store i8* %2, i8** %8, align 4, !dbg !10315
  ret void, !dbg !10316
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10317 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10321, metadata !DIExpression()), !dbg !10324
  call void @llvm.dbg.value(metadata i32 %1, metadata !10322, metadata !DIExpression()), !dbg !10324
  call void @llvm.dbg.value(metadata i32* null, metadata !10323, metadata !DIExpression()), !dbg !10324
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10325
  %4 = lshr i32 %1, 16, !dbg !10326
  %5 = add i32 %4, %3, !dbg !10327
  %6 = inttoptr i32 %5 to i32*, !dbg !10328
  call void @llvm.dbg.value(metadata i32* %6, metadata !10323, metadata !DIExpression()), !dbg !10324
  %7 = load volatile i32, i32* %6, align 4, !dbg !10329
  %8 = and i32 %1, 65535, !dbg !10330
  %9 = shl nuw i32 1, %8, !dbg !10331
  %10 = and i32 %7, %9, !dbg !10331
  %11 = icmp ne i32 %10, 0, !dbg !10331
  ret i1 %11, !dbg !10332
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #17 !dbg !10333 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10337, metadata !DIExpression()), !dbg !10338
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !10339
  %3 = load volatile i32, i32* %2, align 4, !dbg !10339
  %4 = trunc i32 %3 to i8, !dbg !10340
  ret i8 %4, !dbg !10341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !10342 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10346, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.value(metadata i8 %1, metadata !10347, metadata !DIExpression()), !dbg !10348
  %3 = zext i8 %1 to i32, !dbg !10349
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !10350
  store volatile i32 %3, i32* %4, align 4, !dbg !10351
  ret void, !dbg !10352
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1770, metadata !DIExpression()), !dbg !10353
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #24, !dbg !10354
  tail call void @arch_irq_enable(i32 noundef 26) #24, !dbg !10356
  ret void, !dbg !10356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !10357 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10359, metadata !DIExpression()), !dbg !10361
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10362
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !10362
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !10362
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !10360, metadata !DIExpression()), !dbg !10361
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !10363
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10363
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10365
  br i1 %7, label %11, label %8, !dbg !10366

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !10367
  %10 = load i8*, i8** %9, align 4, !dbg !10367
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #24, !dbg !10369
  br label %11, !dbg !10370

11:                                               ; preds = %8, %1
  ret void, !dbg !10371
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !10372 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10374, metadata !DIExpression()), !dbg !10389
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10390
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10390
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10390
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10390
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10390
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10375, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !10376, metadata !DIExpression()), !dbg !10389
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10391, !srcloc !10397
  call void @llvm.dbg.value(metadata i32 undef, metadata !10394, metadata !DIExpression()) #23, !dbg !10398
  call void @llvm.dbg.value(metadata i32 undef, metadata !10395, metadata !DIExpression()) #23, !dbg !10398
  call void @llvm.dbg.value(metadata i32 undef, metadata !10377, metadata !DIExpression()), !dbg !10389
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !10399
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #23, !dbg !10399
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !10379, metadata !DIExpression()), !dbg !10400
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !10401
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !10402
  %12 = load i32, i32* %11, align 4, !dbg !10402
  store i32 %12, i32* %10, align 4, !dbg !10401
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !10401
  store i32 32, i32* %13, align 4, !dbg !10401
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !10401
  store i32 0, i32* %14, align 4, !dbg !10401
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !10401
  store i32 0, i32* %15, align 4, !dbg !10401
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !10401
  store i32 6, i32* %16, align 4, !dbg !10401
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !10403
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !10403
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #25, !dbg !10404
  call void @llvm.dbg.value(metadata i32 %19, metadata !10378, metadata !DIExpression()), !dbg !10389
  %20 = icmp eq i32 %19, 0, !dbg !10405
  br i1 %20, label %21, label %30, !dbg !10407

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !10401
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !10391
  call void @llvm.dbg.value(metadata i32 %23, metadata !10394, metadata !DIExpression()) #23, !dbg !10398
  call void @llvm.dbg.value(metadata i32 %23, metadata !10377, metadata !DIExpression()), !dbg !10389
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #24, !dbg !10408
  store i32 %24, i32* %22, align 4, !dbg !10409
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #24, !dbg !10410
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #25, !dbg !10411
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #25, !dbg !10412
  call void @llvm.dbg.value(metadata i32 undef, metadata !10413, metadata !DIExpression()) #23, !dbg !10416
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !10418, !srcloc !10419
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !10420
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !10420
  call void %26(%struct.device* noundef nonnull %0) #24, !dbg !10421
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !10422
  %28 = load i8, i8* %27, align 4, !dbg !10422
  %29 = zext i8 %28 to i32, !dbg !10423
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #24, !dbg !10424
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #25, !dbg !10425
  br label %30, !dbg !10426

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #23, !dbg !10427
  ret i32 %19, !dbg !10427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10428 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10432, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata i8 0, metadata !10433, metadata !DIExpression()), !dbg !10436
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10437
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10437
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10435, metadata !DIExpression(DW_OP_deref)), !dbg !10436
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %4, metadata !10434, metadata !DIExpression()), !dbg !10436
  %5 = icmp slt i32 %4, 0, !dbg !10439
  br i1 %5, label %9, label %6, !dbg !10441

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10442
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10435, metadata !DIExpression()), !dbg !10436
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !10443
  br label %9, !dbg !10444

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10436
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10445
  ret i32 %10, !dbg !10445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !10446 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10448, metadata !DIExpression()), !dbg !10450
  call void @llvm.dbg.value(metadata i8 2, metadata !10449, metadata !DIExpression()), !dbg !10450
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10451
  %3 = load volatile i32, i32* %2, align 4, !dbg !10451
  %4 = and i32 %3, -64513, !dbg !10452
  %5 = or i32 %4, 2048, !dbg !10453
  store volatile i32 %5, i32* %2, align 4, !dbg !10454
  ret void, !dbg !10455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !10456 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10458, metadata !DIExpression()), !dbg !10460
  call void @llvm.dbg.value(metadata i8 1, metadata !10459, metadata !DIExpression()), !dbg !10460
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10461
  %3 = load volatile i32, i32* %2, align 4, !dbg !10461
  %4 = and i32 %3, -64, !dbg !10462
  %5 = or i32 %4, 1, !dbg !10463
  store volatile i32 %5, i32* %2, align 4, !dbg !10464
  ret void, !dbg !10465
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !10466 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10470, metadata !DIExpression()), !dbg !10471
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10472
  %3 = load volatile i32, i32* %2, align 4, !dbg !10473
  %4 = or i32 %3, 1, !dbg !10473
  store volatile i32 %4, i32* %2, align 4, !dbg !10473
  ret void, !dbg !10474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10475 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10479, metadata !DIExpression()), !dbg !10482
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10480, metadata !DIExpression()), !dbg !10482
  call void @llvm.dbg.value(metadata i32 0, metadata !10481, metadata !DIExpression()), !dbg !10482
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10483
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !10483
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10484
  %5 = load i8, i8* %4, align 4, !dbg !10484
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !10485
  ret i32 %6, !dbg !10486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !10487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10489, metadata !DIExpression()), !dbg !10490
  tail call fastcc void @__NVIC_SetPriority.150() #25, !dbg !10491
  store i32 19999, i32* @last_load, align 4, !dbg !10492
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10493
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10494
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10495
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10496
  %3 = or i32 %2, 7, !dbg !10496
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10496
  ret i32 0, !dbg !10497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.150() unnamed_addr #16 !dbg !10498 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10500, metadata !DIExpression()), !dbg !10502
  call void @llvm.dbg.value(metadata i32 1, metadata !10501, metadata !DIExpression()), !dbg !10502
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10503
  ret void, !dbg !10506
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10507 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10509, metadata !DIExpression()), !dbg !10511
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !10512
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10513
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10514
  %5 = add i32 %4, %3, !dbg !10514
  store i32 %5, i32* @cycle_count, align 4, !dbg !10514
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10515
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10516
  %7 = sub i32 %5, %6, !dbg !10519
  %8 = udiv i32 %7, 20000, !dbg !10520
  call void @llvm.dbg.value(metadata i32 %8, metadata !10510, metadata !DIExpression()), !dbg !10511
  %9 = mul nuw i32 %8, 20000, !dbg !10521
  %10 = add i32 %9, %6, !dbg !10522
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10522
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !10523
  tail call void @z_arm_int_exit() #24, !dbg !10524
  ret void, !dbg !10525
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !10526 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10531
  call void @llvm.dbg.value(metadata i32 %1, metadata !10528, metadata !DIExpression()), !dbg !10532
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10533
  call void @llvm.dbg.value(metadata i32 %2, metadata !10529, metadata !DIExpression()), !dbg !10532
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10534
  call void @llvm.dbg.value(metadata i32 %3, metadata !10530, metadata !DIExpression()), !dbg !10532
  %4 = and i32 %2, 65536, !dbg !10535
  %5 = icmp ne i32 %4, 0, !dbg !10535
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10537
  %8 = load i32, i32* @last_load, align 4, !dbg !10532
  br i1 %7, label %9, label %13, !dbg !10537

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10538
  %11 = add i32 %10, %8, !dbg !10538
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10538
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10540
  br label %13, !dbg !10541

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10542
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10543
  %16 = add i32 %14, %15, !dbg !10544
  ret i32 %16, !dbg !10545
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10550, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.value(metadata i1 %1, metadata !10551, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10563
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10564
  br i1 %4, label %5, label %8, !dbg !10564

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10566
  %7 = and i32 %6, -2, !dbg !10566
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10566
  store i32 -16777216, i32* @last_load, align 4, !dbg !10568
  br label %60, !dbg !10569

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10570
  call void @llvm.dbg.value(metadata i32 %9, metadata !10555, metadata !DIExpression()), !dbg !10563
  br i1 %3, label %18, label %10, !dbg !10571

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10571
  call void @llvm.dbg.value(metadata i32 undef, metadata !10550, metadata !DIExpression()), !dbg !10563
  %12 = icmp slt i32 %11, 1, !dbg !10572
  br i1 %12, label %18, label %13, !dbg !10572

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !10572
  %15 = select i1 %14, i32 %11, i32 837, !dbg !10572
  %16 = mul nuw nsw i32 %15, 20000, !dbg !10572
  %17 = add nuw nsw i32 %16, 19999, !dbg !10572
  br label %18, !dbg !10572

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10550, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10573, metadata !DIExpression()) #23, !dbg !10580
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10582, !srcloc !10588
  call void @llvm.dbg.value(metadata i32 undef, metadata !10585, metadata !DIExpression()) #23, !dbg !10589
  call void @llvm.dbg.value(metadata i32 undef, metadata !10586, metadata !DIExpression()) #23, !dbg !10589
  call void @llvm.dbg.value(metadata i32 undef, metadata !10579, metadata !DIExpression()) #23, !dbg !10580
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10590
  br i1 %21, label %23, label %22, !dbg !10593

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #24, !dbg !10594
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.154, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10594
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #24, !dbg !10594
  unreachable, !dbg !10594

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10582
  call void @llvm.dbg.value(metadata i32 %24, metadata !10585, metadata !DIExpression()) #23, !dbg !10589
  call void @llvm.dbg.value(metadata i32 %24, metadata !10579, metadata !DIExpression()) #23, !dbg !10580
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10596
  call void @llvm.dbg.value(metadata i32 %24, metadata !10556, metadata !DIExpression()), !dbg !10563
  %25 = tail call fastcc i32 @elapsed() #25, !dbg !10597
  call void @llvm.dbg.value(metadata i32 %25, metadata !10561, metadata !DIExpression()), !dbg !10563
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10598
  call void @llvm.dbg.value(metadata i32 %26, metadata !10553, metadata !DIExpression()), !dbg !10563
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10599
  %28 = add i32 %27, %25, !dbg !10599
  store i32 %28, i32* @cycle_count, align 4, !dbg !10599
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10600
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10601
  %30 = sub i32 %28, %29, !dbg !10602
  call void @llvm.dbg.value(metadata i32 %30, metadata !10562, metadata !DIExpression()), !dbg !10563
  %31 = icmp slt i32 %30, 0, !dbg !10603
  br i1 %31, label %41, label %32, !dbg !10605

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10552, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.value(metadata i32 undef, metadata !10552, metadata !DIExpression()), !dbg !10563
  %33 = add nuw i32 %19, %30, !dbg !10606
  %34 = urem i32 %33, 20000, !dbg !10608
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10563
  %35 = sub nuw nsw i32 %19, %34, !dbg !10609
  call void @llvm.dbg.value(metadata i32 %35, metadata !10552, metadata !DIExpression()), !dbg !10563
  %36 = icmp ugt i32 %35, 1250, !dbg !10610
  br i1 %36, label %37, label %39, !dbg !10610

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10552, metadata !DIExpression()), !dbg !10563
  %38 = icmp ugt i32 %35, 16740000, !dbg !10611
  br i1 %38, label %41, label %39, !dbg !10613

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1250, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1250, %23 ], [ 16740000, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10614
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10615
  call void @llvm.dbg.value(metadata i32 %43, metadata !10554, metadata !DIExpression()), !dbg !10563
  %44 = add nsw i32 %42, -1, !dbg !10616
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10617
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10618
  %45 = icmp ult i32 %26, %43, !dbg !10619
  br i1 %45, label %46, label %51, !dbg !10621

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10622
  %48 = add i32 %26, %9, !dbg !10624
  %49 = sub i32 %48, %43, !dbg !10625
  %50 = add i32 %49, %47, !dbg !10622
  br label %55, !dbg !10626

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10627
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10629
  %54 = add i32 %52, %53, !dbg !10629
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10630
  store i32 %56, i32* @cycle_count, align 4, !dbg !10630
  call void @llvm.dbg.value(metadata i32 undef, metadata !10631, metadata !DIExpression()) #23, !dbg !10637
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10636, metadata !DIExpression()) #23, !dbg !10637
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10639
  br i1 %57, label %59, label %58, !dbg !10642

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #24, !dbg !10643
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10643
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #24, !dbg !10643
  unreachable, !dbg !10643

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10631, metadata !DIExpression()) #23, !dbg !10637
  call void @llvm.dbg.value(metadata i32 %24, metadata !10645, metadata !DIExpression()) #23, !dbg !10648
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10650, !srcloc !10651
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10652
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10653 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10573, metadata !DIExpression()) #23, !dbg !10657
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10659, !srcloc !10588
  call void @llvm.dbg.value(metadata i32 undef, metadata !10585, metadata !DIExpression()) #23, !dbg !10661
  call void @llvm.dbg.value(metadata i32 undef, metadata !10586, metadata !DIExpression()) #23, !dbg !10661
  call void @llvm.dbg.value(metadata i32 undef, metadata !10579, metadata !DIExpression()) #23, !dbg !10657
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10662
  br i1 %2, label %4, label %3, !dbg !10663

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #24, !dbg !10664
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.154, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10664
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #24, !dbg !10664
  unreachable, !dbg !10664

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10585, metadata !DIExpression()) #23, !dbg !10661
  call void @llvm.dbg.value(metadata i32 undef, metadata !10579, metadata !DIExpression()) #23, !dbg !10657
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10665
  call void @llvm.dbg.value(metadata i32 undef, metadata !10655, metadata !DIExpression()), !dbg !10666
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10667
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10668
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10669
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10656, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10666
  call void @llvm.dbg.value(metadata i32 undef, metadata !10631, metadata !DIExpression()) #23, !dbg !10670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10636, metadata !DIExpression()) #23, !dbg !10670
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10672
  br i1 %8, label %10, label %9, !dbg !10673

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #24, !dbg !10674
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10674
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #24, !dbg !10674
  unreachable, !dbg !10674

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10675
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10656, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10666
  %12 = sub i32 %11, %7, !dbg !10676
  call void @llvm.dbg.value(metadata i32 %12, metadata !10656, metadata !DIExpression()), !dbg !10666
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10659
  call void @llvm.dbg.value(metadata i32 %13, metadata !10585, metadata !DIExpression()) #23, !dbg !10661
  call void @llvm.dbg.value(metadata i32 %13, metadata !10579, metadata !DIExpression()) #23, !dbg !10657
  call void @llvm.dbg.value(metadata i32 %13, metadata !10655, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 undef, metadata !10631, metadata !DIExpression()) #23, !dbg !10670
  call void @llvm.dbg.value(metadata i32 undef, metadata !10645, metadata !DIExpression()) #23, !dbg !10677
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10679, !srcloc !10651
  %14 = udiv i32 %12, 20000, !dbg !10680
  ret i32 %14, !dbg !10681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10682 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10573, metadata !DIExpression()) #23, !dbg !10686
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10688, !srcloc !10588
  call void @llvm.dbg.value(metadata i32 undef, metadata !10585, metadata !DIExpression()) #23, !dbg !10690
  call void @llvm.dbg.value(metadata i32 undef, metadata !10586, metadata !DIExpression()) #23, !dbg !10690
  call void @llvm.dbg.value(metadata i32 undef, metadata !10579, metadata !DIExpression()) #23, !dbg !10686
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10691
  br i1 %2, label %4, label %3, !dbg !10692

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #24, !dbg !10693
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.154, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10693
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #24, !dbg !10693
  unreachable, !dbg !10693

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10585, metadata !DIExpression()) #23, !dbg !10690
  call void @llvm.dbg.value(metadata i32 undef, metadata !10579, metadata !DIExpression()) #23, !dbg !10686
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10694
  call void @llvm.dbg.value(metadata i32 undef, metadata !10684, metadata !DIExpression()), !dbg !10695
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10696
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10697
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10685, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10695
  call void @llvm.dbg.value(metadata i32 undef, metadata !10631, metadata !DIExpression()) #23, !dbg !10698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10636, metadata !DIExpression()) #23, !dbg !10698
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10700
  br i1 %7, label %9, label %8, !dbg !10701

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #24, !dbg !10702
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10702
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #24, !dbg !10702
  unreachable, !dbg !10702

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10703
  call void @llvm.dbg.value(metadata i32 %10, metadata !10685, metadata !DIExpression()), !dbg !10695
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10688
  call void @llvm.dbg.value(metadata i32 %11, metadata !10585, metadata !DIExpression()) #23, !dbg !10690
  call void @llvm.dbg.value(metadata i32 %11, metadata !10579, metadata !DIExpression()) #23, !dbg !10686
  call void @llvm.dbg.value(metadata i32 %11, metadata !10684, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i32 undef, metadata !10631, metadata !DIExpression()) #23, !dbg !10698
  call void @llvm.dbg.value(metadata i32 undef, metadata !10645, metadata !DIExpression()) #23, !dbg !10704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10706, !srcloc !10651
  ret i32 %10, !dbg !10707
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !10708 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10709
  %2 = icmp eq i32 %1, -16777216, !dbg !10711
  br i1 %2, label %3, label %6, !dbg !10712

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10713
  %5 = or i32 %4, 1, !dbg !10713
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10713
  br label %6, !dbg !10715

6:                                                ; preds = %3, %0
  ret void, !dbg !10716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !10717 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10718
  %2 = and i32 %1, -2, !dbg !10718
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10718
  ret void, !dbg !10719
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !10720 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10753, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.value(metadata i8 %1, metadata !10754, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10755, metadata !DIExpression()), !dbg !10756
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10757
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10757
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10756
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10758
  %8 = load i8, i8* %6, align 4, !dbg !10759
  %9 = zext i8 %8 to i32, !dbg !10760
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10760
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10761
  br i1 %11, label %18, label %24, !dbg !10762

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10756
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10758
  %14 = load i8, i8* %6, align 4, !dbg !10759
  %15 = zext i8 %14 to i32, !dbg !10760
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10760
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10761
  br i1 %17, label %18, label %24, !dbg !10762, !llvm.loop !10763

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10765
  %21 = load i8, i8* %20, align 1, !dbg !10765
  %22 = icmp eq i8 %21, %1, !dbg !10768
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10769
  br i1 %22, label %24, label %12, !dbg !10770

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10756
  ret i32 %25, !dbg !10771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #4 !dbg !10772 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10774, metadata !DIExpression()), !dbg !10775
  ret i32 0, !dbg !10776
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #16 !dbg !10777 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !10795, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i8 %1, metadata !10796, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i32 %2, metadata !10797, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i8 0, metadata !10798, metadata !DIExpression()), !dbg !10809
  %4 = icmp eq i8 %1, 0, !dbg !10810
  br i1 %4, label %7, label %5, !dbg !10811

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10810
  br label %8, !dbg !10811

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !10812

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10798, metadata !DIExpression()), !dbg !10809
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !10813
  %11 = load i32, i32* %10, align 4, !dbg !10813
  call void @llvm.dbg.value(metadata i32 %11, metadata !10800, metadata !DIExpression()), !dbg !10814
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !10815
  %13 = load i8, i8* %12, align 4, !dbg !10815
  call void @llvm.dbg.value(metadata i8 %13, metadata !10803, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10814
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !10816
  %15 = load i32, i32* %14, align 4, !dbg !10816
  call void @llvm.dbg.value(metadata i32 %15, metadata !10804, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata i8 %13, metadata !10805, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10814
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !10817
  %17 = load i32, i32* %16, align 4, !dbg !10817
  call void @llvm.dbg.value(metadata i32 %17, metadata !10806, metadata !DIExpression()), !dbg !10814
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !10818
  %19 = load i32, i32* %18, align 4, !dbg !10818
  call void @llvm.dbg.value(metadata i32 %19, metadata !10807, metadata !DIExpression()), !dbg !10814
  %20 = and i8 %13, 15, !dbg !10819
  %21 = zext i8 %20 to i32, !dbg !10819
  %22 = lshr i32 %19, 27, !dbg !10820
  %23 = and i32 %22, 16, !dbg !10820
  %24 = or i32 %23, %21, !dbg !10821
  %25 = inttoptr i32 %11 to i32*, !dbg !10822
  store volatile i32 %24, i32* %25, align 4, !dbg !10823
  %26 = icmp eq i32 %15, 0, !dbg !10824
  br i1 %26, label %32, label %27, !dbg !10826

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !10827
  call void @llvm.dbg.value(metadata i8 %28, metadata !10805, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10814
  %29 = and i8 %28, 7, !dbg !10828
  %30 = zext i8 %29 to i32, !dbg !10828
  %31 = inttoptr i32 %15 to i32*, !dbg !10830
  store volatile i32 %30, i32* %31, align 4, !dbg !10831
  br label %32, !dbg !10832

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !10833
  br i1 %33, label %37, label %34, !dbg !10835

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !10836
  %36 = inttoptr i32 %17 to i32*, !dbg !10838
  store volatile i32 %35, i32* %36, align 4, !dbg !10839
  br label %37, !dbg !10840

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !10841
  call void @llvm.dbg.value(metadata i32 %38, metadata !10798, metadata !DIExpression()), !dbg !10809
  %39 = icmp eq i32 %38, %6, !dbg !10810
  br i1 %39, label %7, label %8, !dbg !10811, !llvm.loop !10842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10844 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10901, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32 %1, metadata !10902, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32 %2, metadata !10903, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32 %3, metadata !10904, metadata !DIExpression()), !dbg !10905
  %5 = icmp ult i32 %2, 8, !dbg !10906
  br i1 %5, label %7, label %6, !dbg !10909

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 45) #24, !dbg !10910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 45) #24, !dbg !10910
  unreachable, !dbg !10910

7:                                                ; preds = %4
  %8 = icmp ult i32 %3, 64, !dbg !10912
  br i1 %8, label %10, label %9, !dbg !10915

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 46) #24, !dbg !10916
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 46) #24, !dbg !10916
  unreachable, !dbg !10916

10:                                               ; preds = %7
  %11 = inttoptr i32 %1 to i32*, !dbg !10918
  %12 = load volatile i32, i32* %11, align 4, !dbg !10918
  %13 = and i32 %12, -458816, !dbg !10919
  %14 = shl nuw nsw i32 %2, 16, !dbg !10920
  %15 = and i32 %14, 458752, !dbg !10920
  %16 = or i32 %15, %3, !dbg !10921
  %17 = or i32 %16, %13, !dbg !10922
  store volatile i32 %17, i32* %11, align 4, !dbg !10923
  ret void, !dbg !10924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* noundef writeonly %2, i32* noundef writeonly %3) local_unnamed_addr #1 !dbg !10925 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10929, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i32 %1, metadata !10930, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i32* %2, metadata !10931, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i32* %3, metadata !10932, metadata !DIExpression()), !dbg !10933
  %5 = icmp ne i32* %2, null, !dbg !10934
  %6 = icmp ne i32* %3, null, !dbg !10934
  %7 = and i1 %5, %6, !dbg !10934
  br i1 %7, label %9, label %8, !dbg !10934

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.166, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 61) #24, !dbg !10937
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 61) #24, !dbg !10937
  unreachable, !dbg !10937

9:                                                ; preds = %4
  %10 = inttoptr i32 %1 to i32*, !dbg !10939
  %11 = load volatile i32, i32* %10, align 4, !dbg !10939
  %12 = lshr i32 %11, 16, !dbg !10940
  %13 = and i32 %12, 7, !dbg !10940
  store i32 %13, i32* %2, align 4, !dbg !10941
  %14 = load volatile i32, i32* %10, align 4, !dbg !10942
  %15 = and i32 %14, 63, !dbg !10943
  store i32 %15, i32* %3, align 4, !dbg !10944
  ret void, !dbg !10945
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #1 !dbg !10946 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10950, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.value(metadata i32 %1, metadata !10951, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.value(metadata i32 %2, metadata !10952, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.value(metadata i32 %3, metadata !10953, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.value(metadata i32 %4, metadata !10954, metadata !DIExpression()), !dbg !10955
  %6 = icmp ult i32 %3, 8, !dbg !10956
  br i1 %6, label %8, label %7, !dbg !10959

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 75) #24, !dbg !10960
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 75) #24, !dbg !10960
  unreachable, !dbg !10960

8:                                                ; preds = %5
  %9 = icmp ult i32 %4, 64, !dbg !10962
  br i1 %9, label %11, label %10, !dbg !10965

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 76) #24, !dbg !10966
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 76) #24, !dbg !10966
  unreachable, !dbg !10966

11:                                               ; preds = %8
  %12 = inttoptr i32 %1 to i32*, !dbg !10968
  %13 = load volatile i32, i32* %12, align 4, !dbg !10968
  %14 = and i32 %13, -117899328, !dbg !10969
  %15 = shl i32 %2, 24, !dbg !10970
  %16 = and i32 %15, 117440512, !dbg !10970
  %17 = shl nuw nsw i32 %3, 16, !dbg !10971
  %18 = and i32 %17, 458752, !dbg !10971
  %19 = or i32 %16, %4, !dbg !10972
  %20 = or i32 %19, %18, !dbg !10973
  %21 = or i32 %20, %14, !dbg !10974
  store volatile i32 %21, i32* %12, align 4, !dbg !10975
  ret void, !dbg !10976
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !10977 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10982, metadata !DIExpression()), !dbg !10983
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #25, !dbg !10984
  br i1 %2, label %7, label %3, !dbg !10986

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !10987
  %5 = and i32 %4, 127, !dbg !10988
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !10989
  br label %7, !dbg !10990

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !10983
  ret i32 %8, !dbg !10991
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10992 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10996, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.value(metadata i32 %1, metadata !10997, metadata !DIExpression()), !dbg !10998
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !10999
  %4 = and i32 %1, 65535, !dbg !10999
  %5 = add i32 %4, %3, !dbg !10999
  %6 = inttoptr i32 %5 to i32*, !dbg !10999
  %7 = load volatile i32, i32* %6, align 4, !dbg !10999
  %8 = and i32 %7, 65536, !dbg !11000
  %9 = icmp ne i32 %8, 0, !dbg !11001
  ret i1 %9, !dbg !11002
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11003 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11005, metadata !DIExpression()), !dbg !11006
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #25, !dbg !11007
  br i1 %2, label %8, label %3, !dbg !11009

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !11010
  %5 = and i32 %4, 1, !dbg !11012
  %6 = icmp eq i32 %5, 0, !dbg !11012
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !11013
  br label %8, !dbg !11013

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !11006
  ret i32 %9, !dbg !11014
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11015 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11017, metadata !DIExpression()), !dbg !11021
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #25, !dbg !11022
  br i1 %2, label %40, label %3, !dbg !11024

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !11025
  %5 = trunc i32 %4 to i8, !dbg !11025
  %6 = and i8 %5, 127, !dbg !11025
  call void @llvm.dbg.value(metadata i8 %6, metadata !11018, metadata !DIExpression()), !dbg !11021
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !11026
  %8 = lshr i32 %7, 21, !dbg !11027
  %9 = and i32 %8, 3, !dbg !11028
  call void @llvm.dbg.value(metadata i32 %9, metadata !11019, metadata !DIExpression()), !dbg !11021
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %9, !dbg !11029
  %11 = load i32, i32* %10, align 4, !dbg !11029
  call void @llvm.dbg.value(metadata i8 undef, metadata !11019, metadata !DIExpression()), !dbg !11021
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !11030
  %13 = load volatile i32, i32* %12, align 4, !dbg !11030
  %14 = and i32 %13, 32768, !dbg !11032
  %15 = icmp eq i32 %14, 0, !dbg !11032
  br i1 %15, label %36, label %16, !dbg !11033

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !11034
  %18 = and i32 %17, 32767, !dbg !11036
  %19 = uitofp i32 %18 to float, !dbg !11037
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !11038
  %21 = load volatile i32, i32* %20, align 4, !dbg !11038
  %22 = and i32 %21, 1073741823, !dbg !11039
  %23 = uitofp i32 %22 to float, !dbg !11040
  %24 = fdiv float %19, %23, !dbg !11041
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !11042
  %26 = load volatile i32, i32* %25, align 4, !dbg !11042
  %27 = and i32 %26, 1073741823, !dbg !11043
  %28 = uitofp i32 %27 to float, !dbg !11044
  %29 = fmul float %24, %28, !dbg !11045
  call void @llvm.dbg.value(metadata float %29, metadata !11020, metadata !DIExpression()), !dbg !11021
  %30 = lshr i32 24000000, %11, !dbg !11046
  %31 = uitofp i32 %30 to float, !dbg !11047
  %32 = uitofp i8 %6 to float, !dbg !11048
  %33 = fadd float %29, %32, !dbg !11049
  %34 = fmul float %33, %31, !dbg !11050
  %35 = fptoui float %34 to i32, !dbg !11051
  br label %40, !dbg !11052

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !11053
  %38 = zext i8 %6 to i32, !dbg !11055
  %39 = mul nuw i32 %37, %38, !dbg !11056
  br label %40, !dbg !11057

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !11021
  ret i32 %41, !dbg !11058
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11059 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11061, metadata !DIExpression()), !dbg !11062
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #25, !dbg !11063
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !11062
  ret i32 %3, !dbg !11065
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11066 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11068, metadata !DIExpression()), !dbg !11073
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #25, !dbg !11074
  br i1 %2, label %47, label %3, !dbg !11076

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11077
  %5 = trunc i32 %4 to i8, !dbg !11077
  %6 = and i8 %5, 127, !dbg !11077
  call void @llvm.dbg.value(metadata i8 %6, metadata !11069, metadata !DIExpression()), !dbg !11073
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11078
  %8 = lshr i32 %7, 22, !dbg !11079
  %9 = and i32 %8, 3, !dbg !11080
  call void @llvm.dbg.value(metadata i32 %8, metadata !11070, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11073
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11081
  %11 = lshr i32 %10, 19, !dbg !11082
  %12 = and i32 %11, 3, !dbg !11083
  call void @llvm.dbg.value(metadata i32 %11, metadata !11071, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11073
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !11084
  %14 = load i32, i32* %13, align 4, !dbg !11084
  call void @llvm.dbg.value(metadata i8 undef, metadata !11070, metadata !DIExpression()), !dbg !11073
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !11085
  %16 = load i32, i32* %15, align 4, !dbg !11085
  call void @llvm.dbg.value(metadata i8 undef, metadata !11071, metadata !DIExpression()), !dbg !11073
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !11086
  %18 = load volatile i32, i32* %17, align 4, !dbg !11086
  %19 = and i32 %18, 32768, !dbg !11088
  %20 = icmp eq i32 %19, 0, !dbg !11088
  br i1 %20, label %42, label %21, !dbg !11089

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !11090
  %23 = and i32 %22, 32767, !dbg !11092
  %24 = uitofp i32 %23 to float, !dbg !11093
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !11094
  %26 = load volatile i32, i32* %25, align 4, !dbg !11094
  %27 = and i32 %26, 1073741823, !dbg !11095
  %28 = uitofp i32 %27 to float, !dbg !11096
  %29 = fdiv float %24, %28, !dbg !11097
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !11098
  %31 = load volatile i32, i32* %30, align 4, !dbg !11098
  %32 = and i32 %31, 1073741823, !dbg !11099
  %33 = uitofp i32 %32 to float, !dbg !11100
  %34 = fmul float %29, %33, !dbg !11101
  call void @llvm.dbg.value(metadata float %34, metadata !11072, metadata !DIExpression()), !dbg !11073
  %35 = lshr i32 24000000, %16, !dbg !11102
  %36 = lshr i32 %35, %14, !dbg !11103
  %37 = uitofp i32 %36 to float, !dbg !11104
  %38 = uitofp i8 %6 to float, !dbg !11105
  %39 = fadd float %34, %38, !dbg !11106
  %40 = fmul float %39, %37, !dbg !11107
  %41 = fptoui float %40 to i32, !dbg !11108
  br label %47, !dbg !11109

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !11110
  %44 = lshr i32 %43, %14, !dbg !11112
  %45 = zext i8 %6 to i32, !dbg !11113
  %46 = mul nuw i32 %44, %45, !dbg !11114
  br label %47, !dbg !11115

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !11073
  ret i32 %48, !dbg !11116
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11117 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11119, metadata !DIExpression()), !dbg !11124
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #25, !dbg !11125
  br i1 %2, label %47, label %3, !dbg !11127

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11128
  %5 = trunc i32 %4 to i8, !dbg !11128
  %6 = and i8 %5, 127, !dbg !11128
  call void @llvm.dbg.value(metadata i8 %6, metadata !11120, metadata !DIExpression()), !dbg !11124
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11129
  %8 = lshr i32 %7, 22, !dbg !11130
  %9 = and i32 %8, 3, !dbg !11131
  call void @llvm.dbg.value(metadata i32 %8, metadata !11121, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11124
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11132
  %11 = lshr i32 %10, 19, !dbg !11133
  %12 = and i32 %11, 3, !dbg !11134
  call void @llvm.dbg.value(metadata i32 %11, metadata !11122, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11124
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !11135
  %14 = load i32, i32* %13, align 4, !dbg !11135
  call void @llvm.dbg.value(metadata i8 undef, metadata !11121, metadata !DIExpression()), !dbg !11124
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !11136
  %16 = load i32, i32* %15, align 4, !dbg !11136
  call void @llvm.dbg.value(metadata i8 undef, metadata !11122, metadata !DIExpression()), !dbg !11124
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !11137
  %18 = load volatile i32, i32* %17, align 4, !dbg !11137
  %19 = and i32 %18, 32768, !dbg !11139
  %20 = icmp eq i32 %19, 0, !dbg !11139
  br i1 %20, label %42, label %21, !dbg !11140

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !11141
  %23 = and i32 %22, 32767, !dbg !11143
  %24 = uitofp i32 %23 to float, !dbg !11144
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !11145
  %26 = load volatile i32, i32* %25, align 4, !dbg !11145
  %27 = and i32 %26, 1073741823, !dbg !11146
  %28 = uitofp i32 %27 to float, !dbg !11147
  %29 = fdiv float %24, %28, !dbg !11148
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !11149
  %31 = load volatile i32, i32* %30, align 4, !dbg !11149
  %32 = and i32 %31, 1073741823, !dbg !11150
  %33 = uitofp i32 %32 to float, !dbg !11151
  %34 = fmul float %29, %33, !dbg !11152
  call void @llvm.dbg.value(metadata float %34, metadata !11123, metadata !DIExpression()), !dbg !11124
  %35 = lshr i32 24000000, %16, !dbg !11153
  %36 = lshr i32 %35, %14, !dbg !11154
  %37 = uitofp i32 %36 to float, !dbg !11155
  %38 = uitofp i8 %6 to float, !dbg !11156
  %39 = fadd float %34, %38, !dbg !11157
  %40 = fmul float %39, %37, !dbg !11158
  %41 = fptoui float %40 to i32, !dbg !11159
  br label %47, !dbg !11160

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !11161
  %44 = lshr i32 %43, %14, !dbg !11163
  %45 = zext i8 %6 to i32, !dbg !11164
  %46 = mul nuw i32 %44, %45, !dbg !11165
  br label %47, !dbg !11166

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !11124
  ret i32 %48, !dbg !11167
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11168 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11172, metadata !DIExpression()), !dbg !11176
  call void @llvm.dbg.value(metadata i32 %1, metadata !11173, metadata !DIExpression()), !dbg !11176
  %3 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #25, !dbg !11177
  br i1 %3, label %4, label %5, !dbg !11180

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.171, i32 0, i32 0), i32 noundef 260) #24, !dbg !11181
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.171, i32 0, i32 0), i32 noundef 260) #24, !dbg !11181
  unreachable, !dbg !11181

5:                                                ; preds = %2
  %6 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #25, !dbg !11183
  call void @llvm.dbg.value(metadata i32 %6, metadata !11174, metadata !DIExpression()), !dbg !11176
  %7 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #25, !dbg !11184
  call void @llvm.dbg.value(metadata i32 %7, metadata !11175, metadata !DIExpression()), !dbg !11176
  %8 = udiv i32 %6, %7, !dbg !11185
  %9 = mul i32 %8, 18, !dbg !11186
  ret i32 %9, !dbg !11187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11188 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11190, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.value(metadata i32 %1, metadata !11191, metadata !DIExpression()), !dbg !11192
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !11193
  %4 = and i32 %1, 65535, !dbg !11193
  %5 = add i32 %4, %3, !dbg !11193
  %6 = inttoptr i32 %5 to i32*, !dbg !11193
  %7 = load volatile i32, i32* %6, align 4, !dbg !11193
  %8 = lshr i32 %1, 16, !dbg !11194
  %9 = and i32 %8, 31, !dbg !11194
  %10 = lshr i32 %7, %9, !dbg !11195
  %11 = and i32 %10, 63, !dbg !11196
  ret i32 %11, !dbg !11197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct._gpio_init_config* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !11198 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11225, metadata !DIExpression()), !dbg !11229
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !11226, metadata !DIExpression()), !dbg !11229
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11230
  store volatile i32 0, i32* %3, align 4, !dbg !11231
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11232
  store volatile i32 0, i32* %4, align 4, !dbg !11233
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !11234
  %6 = load i32, i32* %5, align 4, !dbg !11234
  call void @llvm.dbg.value(metadata i32 %6, metadata !11227, metadata !DIExpression()), !dbg !11229
  %7 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !11235
  %8 = load i32, i32* %7, align 4, !dbg !11235
  %9 = icmp eq i32 %8, 1, !dbg !11237
  %10 = shl nuw i32 1, %6, !dbg !11238
  br i1 %9, label %11, label %15, !dbg !11239

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !11240
  %13 = load volatile i32, i32* %12, align 4, !dbg !11241
  %14 = or i32 %13, %10, !dbg !11241
  store volatile i32 %14, i32* %12, align 4, !dbg !11241
  br label %20, !dbg !11240

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !11242
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !11243
  %18 = load volatile i32, i32* %17, align 4, !dbg !11244
  %19 = and i32 %18, %16, !dbg !11244
  store volatile i32 %19, i32* %17, align 4, !dbg !11244
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !11245
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !11247
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !11247
  %24 = add i32 %6, -16, !dbg !11247
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !11247
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !11247
  call void @llvm.dbg.value(metadata i32* %26, metadata !11228, metadata !DIExpression()), !dbg !11229
  call void @llvm.dbg.value(metadata i32 %25, metadata !11227, metadata !DIExpression()), !dbg !11229
  %27 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !11248
  %28 = load i32, i32* %27, align 4, !dbg !11248
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !11249

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !11250
  %31 = shl i32 3, %30, !dbg !11253
  %32 = xor i32 %31, -1, !dbg !11254
  %33 = load volatile i32, i32* %26, align 4, !dbg !11255
  %34 = and i32 %33, %32, !dbg !11255
  br label %56, !dbg !11256

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !11257
  %37 = shl i32 %25, 1, !dbg !11259
  %38 = shl i32 3, %37, !dbg !11260
  %39 = xor i32 %38, -1, !dbg !11261
  %40 = and i32 %36, %39, !dbg !11262
  %41 = shl nuw i32 1, %37, !dbg !11263
  %42 = or i32 %40, %41, !dbg !11264
  br label %56, !dbg !11265

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !11266
  %45 = shl i32 %25, 1, !dbg !11268
  %46 = shl i32 3, %45, !dbg !11269
  %47 = xor i32 %46, -1, !dbg !11270
  %48 = and i32 %44, %47, !dbg !11271
  %49 = shl i32 2, %45, !dbg !11272
  %50 = or i32 %48, %49, !dbg !11273
  br label %56, !dbg !11274

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !11275
  %53 = shl i32 3, %52, !dbg !11277
  %54 = load volatile i32, i32* %26, align 4, !dbg !11278
  %55 = or i32 %54, %53, !dbg !11278
  br label %56, !dbg !11279

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !11280
  br label %58, !dbg !11281

58:                                               ; preds = %56, %20
  ret void, !dbg !11281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11282 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11287, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.value(metadata i32 %1, metadata !11288, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.value(metadata i32 %2, metadata !11289, metadata !DIExpression()), !dbg !11290
  %4 = icmp ult i32 %1, 32, !dbg !11291
  br i1 %4, label %6, label %5, !dbg !11294

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.176, i32 0, i32 0), i32 noundef 113) #24, !dbg !11295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.176, i32 0, i32 0), i32 noundef 113) #24, !dbg !11295
  unreachable, !dbg !11295

6:                                                ; preds = %3
  %7 = icmp eq i32 %2, 1, !dbg !11297
  %8 = shl nuw i32 1, %1, !dbg !11299
  br i1 %7, label %9, label %13, !dbg !11300

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !11301
  %11 = load volatile i32, i32* %10, align 4, !dbg !11303
  %12 = or i32 %11, %8, !dbg !11303
  store volatile i32 %12, i32* %10, align 4, !dbg !11303
  br label %18, !dbg !11304

13:                                               ; preds = %6
  %14 = xor i32 %8, -1, !dbg !11305
  %15 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !11307
  %16 = load volatile i32, i32* %15, align 4, !dbg !11308
  %17 = and i32 %16, %14, !dbg !11308
  store volatile i32 %17, i32* %15, align 4, !dbg !11308
  br label %18

18:                                               ; preds = %13, %9
  ret void, !dbg !11309
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !11310 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11314, metadata !DIExpression()), !dbg !11317
  call void @llvm.dbg.value(metadata i32 %1, metadata !11315, metadata !DIExpression()), !dbg !11317
  call void @llvm.dbg.value(metadata i1 %2, metadata !11316, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11317
  %4 = icmp ult i32 %1, 32, !dbg !11318
  br i1 %4, label %6, label %5, !dbg !11321

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.176, i32 0, i32 0), i32 noundef 135) #24, !dbg !11322
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.176, i32 0, i32 0), i32 noundef 135) #24, !dbg !11322
  unreachable, !dbg !11322

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !11324
  br i1 %2, label %8, label %12, !dbg !11326

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11327
  %10 = load volatile i32, i32* %9, align 4, !dbg !11328
  %11 = or i32 %10, %7, !dbg !11328
  store volatile i32 %11, i32* %9, align 4, !dbg !11328
  br label %17, !dbg !11327

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !11329
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11330
  %15 = load volatile i32, i32* %14, align 4, !dbg !11331
  %16 = and i32 %15, %13, !dbg !11331
  store volatile i32 %16, i32* %14, align 4, !dbg !11331
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !11332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !11333 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11335, metadata !DIExpression()), !dbg !11338
  call void @llvm.dbg.value(metadata i32 %1, metadata !11336, metadata !DIExpression()), !dbg !11338
  call void @llvm.dbg.value(metadata i1 %2, metadata !11337, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11338
  %4 = icmp ult i32 %1, 32, !dbg !11339
  br i1 %4, label %6, label %5, !dbg !11342

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.176, i32 0, i32 0), i32 noundef 152) #24, !dbg !11343
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.176, i32 0, i32 0), i32 noundef 152) #24, !dbg !11343
  unreachable, !dbg !11343

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !11345
  br i1 %2, label %8, label %12, !dbg !11347

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11348
  %10 = load volatile i32, i32* %9, align 4, !dbg !11349
  %11 = or i32 %10, %7, !dbg !11349
  store volatile i32 %11, i32* %9, align 4, !dbg !11349
  br label %17, !dbg !11348

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !11350
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11351
  %15 = load volatile i32, i32* %14, align 4, !dbg !11352
  %16 = and i32 %15, %13, !dbg !11352
  store volatile i32 %16, i32* %14, align 4, !dbg !11352
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !11353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* noundef readonly %1) local_unnamed_addr #1 !dbg !11354 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11393, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !11394, metadata !DIExpression()), !dbg !11395
  %3 = icmp eq %struct._uart_init_config* %1, null, !dbg !11396
  br i1 %3, label %4, label %5, !dbg !11399

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 49) #24, !dbg !11400
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 49) #24, !dbg !11400
  unreachable, !dbg !11400

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11402
  %7 = load volatile i32, i32* %6, align 4, !dbg !11403
  %8 = and i32 %7, -2, !dbg !11403
  store volatile i32 %8, i32* %6, align 4, !dbg !11403
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #25, !dbg !11404
  %9 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !11405
  %10 = load i32, i32* %9, align 4, !dbg !11405
  %11 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !11406
  %12 = load i32, i32* %11, align 4, !dbg !11406
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !11407
  %14 = load i32, i32* %13, align 4, !dbg !11407
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !11408
  %16 = load i32, i32* %15, align 4, !dbg !11408
  %17 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11409
  %18 = load volatile i32, i32* %17, align 4, !dbg !11410
  %19 = or i32 %10, %12, !dbg !11411
  %20 = or i32 %19, %14, !dbg !11412
  %21 = or i32 %20, %16, !dbg !11413
  %22 = or i32 %21, %18, !dbg !11410
  %23 = or i32 %22, 16384, !dbg !11410
  store volatile i32 %23, i32* %17, align 4, !dbg !11410
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11414
  %25 = load volatile i32, i32* %24, align 4, !dbg !11415
  %26 = or i32 %25, 4, !dbg !11415
  store volatile i32 %26, i32* %24, align 4, !dbg !11415
  %27 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !11416
  %28 = load i32, i32* %27, align 4, !dbg !11416
  %29 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !11417
  %30 = load i32, i32* %29, align 4, !dbg !11417
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %28, i32 noundef %30) #25, !dbg !11418
  ret void, !dbg !11419
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #16 !dbg !11420 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11424, metadata !DIExpression()), !dbg !11425
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11426
  %3 = load volatile i32, i32* %2, align 4, !dbg !11427
  %4 = and i32 %3, -2, !dbg !11427
  store volatile i32 %4, i32* %2, align 4, !dbg !11427
  store volatile i32 0, i32* %2, align 4, !dbg !11428
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11429
  store volatile i32 1, i32* %5, align 4, !dbg !11430
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11431
  store volatile i32 1792, i32* %6, align 4, !dbg !11432
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11433
  store volatile i32 32768, i32* %7, align 4, !dbg !11434
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11435
  store volatile i32 2049, i32* %8, align 4, !dbg !11436
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !11437
  store volatile i32 43, i32* %9, align 4, !dbg !11438
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !11439
  store volatile i32 0, i32* %10, align 4, !dbg !11440
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !11441
  store volatile i32 0, i32* %11, align 4, !dbg !11442
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !11443
  store volatile i32 96, i32* %12, align 4, !dbg !11444
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11445
  store volatile i32 0, i32* %13, align 4, !dbg !11446
  %14 = load volatile i32, i32* %5, align 4, !dbg !11447
  %15 = and i32 %14, -2, !dbg !11447
  store volatile i32 %15, i32* %5, align 4, !dbg !11447
  br label %16, !dbg !11448

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !11449
  %18 = and i32 %17, 1, !dbg !11450
  %19 = icmp eq i32 %18, 0, !dbg !11451
  br i1 %19, label %16, label %20, !dbg !11448, !llvm.loop !11452

20:                                               ; preds = %16
  ret void, !dbg !11454
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !11455 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11459, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.value(metadata i32 %1, metadata !11460, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.value(metadata i32 %2, metadata !11461, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.value(metadata i32 1, metadata !11466, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.value(metadata i32 %1, metadata !11462, metadata !DIExpression()), !dbg !11472
  %4 = shl i32 %2, 4, !dbg !11473
  call void @llvm.dbg.value(metadata i32 %4, metadata !11463, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.value(metadata i32 1, metadata !11464, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.value(metadata i32 %1, metadata !11462, metadata !DIExpression()), !dbg !11472
  %5 = icmp eq i32 %4, 0, !dbg !11474
  br i1 %5, label %11, label %6, !dbg !11475

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11462, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.value(metadata i32 %8, metadata !11463, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.value(metadata i32 %8, metadata !11464, metadata !DIExpression()), !dbg !11472
  %9 = urem i32 %7, %8, !dbg !11476
  call void @llvm.dbg.value(metadata i32 %8, metadata !11462, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.value(metadata i32 %9, metadata !11463, metadata !DIExpression()), !dbg !11472
  %10 = icmp eq i32 %9, 0, !dbg !11474
  br i1 %10, label %11, label %6, !dbg !11475, !llvm.loop !11478

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !11472
  %13 = udiv i32 %1, %12, !dbg !11480
  call void @llvm.dbg.value(metadata i32 %13, metadata !11462, metadata !DIExpression()), !dbg !11472
  %14 = udiv i32 %4, %12, !dbg !11481
  call void @llvm.dbg.value(metadata i32 %14, metadata !11463, metadata !DIExpression()), !dbg !11472
  %15 = icmp ugt i32 %13, 458745, !dbg !11482
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !11483
  br i1 %17, label %18, label %33, !dbg !11483

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !11484
  %20 = udiv i32 %19, 458745, !dbg !11485
  %21 = add nuw nsw i32 %20, 1, !dbg !11486
  call void @llvm.dbg.value(metadata i32 %21, metadata !11467, metadata !DIExpression()), !dbg !11487
  %22 = add i32 %14, -1, !dbg !11488
  %23 = udiv i32 %22, 65535, !dbg !11489
  %24 = add nuw nsw i32 %23, 1, !dbg !11490
  call void @llvm.dbg.value(metadata i32 %24, metadata !11470, metadata !DIExpression()), !dbg !11487
  %25 = icmp ugt i32 %21, %24, !dbg !11491
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !11492
  call void @llvm.dbg.value(metadata i32 %26, metadata !11471, metadata !DIExpression()), !dbg !11487
  %27 = udiv i32 %13, %26, !dbg !11493
  call void @llvm.dbg.value(metadata i32 %27, metadata !11462, metadata !DIExpression()), !dbg !11472
  %28 = udiv i32 %14, %26, !dbg !11494
  call void @llvm.dbg.value(metadata i32 %28, metadata !11463, metadata !DIExpression()), !dbg !11472
  %29 = icmp ugt i32 %26, %13, !dbg !11495
  %30 = select i1 %29, i32 1, i32 %27, !dbg !11497
  call void @llvm.dbg.value(metadata i32 %30, metadata !11462, metadata !DIExpression()), !dbg !11472
  %31 = icmp ugt i32 %26, %14, !dbg !11498
  %32 = select i1 %31, i32 1, i32 %28, !dbg !11500
  call void @llvm.dbg.value(metadata i32 %32, metadata !11463, metadata !DIExpression()), !dbg !11472
  br label %33, !dbg !11501

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !11472
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !11472
  call void @llvm.dbg.value(metadata i32 %35, metadata !11462, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.value(metadata i32 %34, metadata !11463, metadata !DIExpression()), !dbg !11472
  %36 = add i32 %35, -1, !dbg !11502
  %37 = udiv i32 %36, 65535, !dbg !11503
  %38 = add nuw nsw i32 %37, 1, !dbg !11504
  call void @llvm.dbg.value(metadata i32 %38, metadata !11466, metadata !DIExpression()), !dbg !11472
  %39 = add nsw i32 %37, -1, !dbg !11505
  %40 = icmp ult i32 %39, 6, !dbg !11505
  br i1 %40, label %41, label %44, !dbg !11505

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !11505
  %43 = load i32, i32* %42, align 4, !dbg !11505
  br label %44, !dbg !11505

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !11506
  call void @llvm.dbg.value(metadata i32 %45, metadata !11465, metadata !DIExpression()), !dbg !11472
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11508
  %47 = load volatile i32, i32* %46, align 4, !dbg !11509
  %48 = and i32 %47, -897, !dbg !11509
  store volatile i32 %48, i32* %46, align 4, !dbg !11509
  %49 = load volatile i32, i32* %46, align 4, !dbg !11510
  %50 = or i32 %49, %45, !dbg !11510
  store volatile i32 %50, i32* %46, align 4, !dbg !11510
  %51 = add i32 %34, 65535, !dbg !11511
  %52 = and i32 %51, 65535, !dbg !11511
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !11512
  store volatile i32 %52, i32* %53, align 4, !dbg !11513
  %54 = udiv i32 %35, %38, !dbg !11514
  %55 = add i32 %54, 65535, !dbg !11514
  %56 = and i32 %55, 65535, !dbg !11514
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !11515
  store volatile i32 %56, i32* %57, align 4, !dbg !11516
  %58 = mul nuw nsw i32 %38, 1000, !dbg !11517
  %59 = udiv i32 %1, %58, !dbg !11517
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !11518
  store volatile i32 %59, i32* %60, align 4, !dbg !11519
  ret void, !dbg !11520
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !11521 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11525, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i32 %1, metadata !11526, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i1 %2, metadata !11527, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11528
  %4 = and i32 %1, 4, !dbg !11529
  %5 = icmp eq i32 %4, 0, !dbg !11529
  %6 = and i32 %1, 2, !dbg !11529
  %7 = icmp eq i32 %6, 0, !dbg !11529
  %8 = and i32 %1, 6, !dbg !11529
  %9 = icmp eq i32 %8, 0, !dbg !11529
  br i1 %9, label %10, label %11, !dbg !11529

10:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 196) #24, !dbg !11532
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 196) #24, !dbg !11532
  unreachable, !dbg !11532

11:                                               ; preds = %3
  br i1 %2, label %12, label %22, !dbg !11534

12:                                               ; preds = %11
  br i1 %7, label %17, label %13, !dbg !11535

13:                                               ; preds = %12
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11538
  %15 = load volatile i32, i32* %14, align 4, !dbg !11540
  %16 = or i32 %15, 512, !dbg !11540
  store volatile i32 %16, i32* %14, align 4, !dbg !11540
  br label %17, !dbg !11538

17:                                               ; preds = %13, %12
  br i1 %5, label %32, label %18, !dbg !11541

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11542
  %20 = load volatile i32, i32* %19, align 4, !dbg !11544
  %21 = or i32 %20, 2, !dbg !11544
  store volatile i32 %21, i32* %19, align 4, !dbg !11544
  br label %32, !dbg !11542

22:                                               ; preds = %11
  br i1 %7, label %27, label %23, !dbg !11545

23:                                               ; preds = %22
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11547
  %25 = load volatile i32, i32* %24, align 4, !dbg !11549
  %26 = and i32 %25, -513, !dbg !11549
  store volatile i32 %26, i32* %24, align 4, !dbg !11549
  br label %27, !dbg !11547

27:                                               ; preds = %23, %22
  br i1 %5, label %32, label %28, !dbg !11550

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11551
  %30 = load volatile i32, i32* %29, align 4, !dbg !11553
  %31 = and i32 %30, -3, !dbg !11553
  store volatile i32 %31, i32* %29, align 4, !dbg !11553
  br label %32, !dbg !11551

32:                                               ; preds = %27, %28, %17, %18
  ret void, !dbg !11554
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11555 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11559, metadata !DIExpression()), !dbg !11561
  call void @llvm.dbg.value(metadata i1 %1, metadata !11560, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11561
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11562
  %4 = load volatile i32, i32* %3, align 4, !dbg !11562
  %5 = and i32 %4, 2, !dbg !11564
  %6 = select i1 %1, i32 0, i32 -3, !dbg !11564
  %7 = or i32 %5, %6, !dbg !11564
  store volatile i32 %7, i32* %3, align 4, !dbg !11562
  ret void, !dbg !11565
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11566 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11568, metadata !DIExpression()), !dbg !11570
  call void @llvm.dbg.value(metadata i1 %1, metadata !11569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11570
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11571
  %4 = load volatile i32, i32* %3, align 4, !dbg !11571
  %5 = and i32 %4, -17, !dbg !11573
  %6 = select i1 %1, i32 0, i32 16, !dbg !11573
  %7 = or i32 %5, %6, !dbg !11573
  store volatile i32 %7, i32* %3, align 4, !dbg !11571
  ret void, !dbg !11574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !11575 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11577, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata i32 %1, metadata !11578, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata i1 %2, metadata !11579, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11582
  call void @llvm.dbg.value(metadata i32* null, metadata !11580, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata i32 0, metadata !11581, metadata !DIExpression()), !dbg !11582
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11583
  %5 = lshr i32 %1, 16, !dbg !11584
  %6 = add i32 %5, %4, !dbg !11585
  %7 = inttoptr i32 %6 to i32*, !dbg !11586
  call void @llvm.dbg.value(metadata i32* %7, metadata !11580, metadata !DIExpression()), !dbg !11582
  %8 = and i32 %1, 65535, !dbg !11587
  %9 = shl nuw i32 1, %8, !dbg !11588
  call void @llvm.dbg.value(metadata i32 %9, metadata !11581, metadata !DIExpression()), !dbg !11582
  br i1 %2, label %10, label %13, !dbg !11589

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !11590
  %12 = or i32 %11, %9, !dbg !11590
  br label %17, !dbg !11592

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !11593
  %15 = load volatile i32, i32* %7, align 4, !dbg !11594
  %16 = and i32 %15, %14, !dbg !11594
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !11595
  ret void, !dbg !11596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !11597 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11601, metadata !DIExpression()), !dbg !11605
  call void @llvm.dbg.value(metadata i32 %1, metadata !11602, metadata !DIExpression()), !dbg !11605
  call void @llvm.dbg.value(metadata i32* null, metadata !11603, metadata !DIExpression()), !dbg !11605
  call void @llvm.dbg.value(metadata i32 0, metadata !11604, metadata !DIExpression()), !dbg !11605
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11606
  %4 = lshr i32 %1, 16, !dbg !11607
  %5 = add i32 %4, %3, !dbg !11608
  %6 = inttoptr i32 %5 to i32*, !dbg !11609
  call void @llvm.dbg.value(metadata i32* %6, metadata !11603, metadata !DIExpression()), !dbg !11605
  %7 = and i32 %1, 65535, !dbg !11610
  %8 = shl nuw i32 1, %7, !dbg !11611
  call void @llvm.dbg.value(metadata i32 %8, metadata !11604, metadata !DIExpression()), !dbg !11605
  store volatile i32 %8, i32* %6, align 4, !dbg !11612
  ret void, !dbg !11613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !11614 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11616, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 %1, metadata !11617, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i1 %2, metadata !11618, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11621
  call void @llvm.dbg.value(metadata i32* null, metadata !11619, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 0, metadata !11620, metadata !DIExpression()), !dbg !11621
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11622
  %5 = lshr i32 %1, 16, !dbg !11623
  %6 = add i32 %5, %4, !dbg !11624
  %7 = inttoptr i32 %6 to i32*, !dbg !11625
  call void @llvm.dbg.value(metadata i32* %7, metadata !11619, metadata !DIExpression()), !dbg !11621
  %8 = and i32 %1, 65535, !dbg !11626
  %9 = shl nuw i32 1, %8, !dbg !11627
  call void @llvm.dbg.value(metadata i32 %9, metadata !11620, metadata !DIExpression()), !dbg !11621
  br i1 %2, label %10, label %13, !dbg !11628

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !11629
  %12 = or i32 %11, %9, !dbg !11629
  br label %17, !dbg !11631

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !11632
  %15 = load volatile i32, i32* %7, align 4, !dbg !11633
  %16 = and i32 %15, %14, !dbg !11633
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !11634
  ret void, !dbg !11635
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11636 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11638, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.value(metadata i1 %1, metadata !11639, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11640
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11641
  %4 = load volatile i32, i32* %3, align 4, !dbg !11641
  %5 = and i32 %4, -16385, !dbg !11643
  %6 = select i1 %1, i32 0, i32 16384, !dbg !11643
  %7 = or i32 %5, %6, !dbg !11643
  store volatile i32 %7, i32* %3, align 4, !dbg !11641
  ret void, !dbg !11644
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11645 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11647, metadata !DIExpression()), !dbg !11649
  call void @llvm.dbg.value(metadata i1 %1, metadata !11648, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11649
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11650
  %4 = load volatile i32, i32* %3, align 4, !dbg !11650
  %5 = and i32 %4, -8193, !dbg !11652
  %6 = select i1 %1, i32 8192, i32 0, !dbg !11652
  %7 = or i32 %5, %6, !dbg !11652
  store volatile i32 %7, i32* %3, align 4, !dbg !11650
  ret void, !dbg !11653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11654 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11656, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i1 %1, metadata !11657, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11658
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11659
  %4 = load volatile i32, i32* %3, align 4, !dbg !11659
  %5 = and i32 %4, -4097, !dbg !11661
  %6 = select i1 %1, i32 4096, i32 0, !dbg !11661
  %7 = or i32 %5, %6, !dbg !11661
  store volatile i32 %7, i32* %3, align 4, !dbg !11659
  ret void, !dbg !11662
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11663 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11665, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata i32 %1, metadata !11666, metadata !DIExpression()), !dbg !11667
  %3 = and i32 %1, -65, !dbg !11668
  %4 = icmp eq i32 %3, 0, !dbg !11668
  br i1 %4, label %6, label %5, !dbg !11668

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 396) #24, !dbg !11671
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 396) #24, !dbg !11671
  unreachable, !dbg !11671

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !11668
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11673
  %9 = load volatile i32, i32* %8, align 4, !dbg !11673
  %10 = and i32 %9, -65, !dbg !11675
  %11 = select i1 %7, i32 0, i32 64, !dbg !11675
  %12 = or i32 %10, %11, !dbg !11675
  store volatile i32 %12, i32* %8, align 4, !dbg !11673
  ret void, !dbg !11676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11677 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11679, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.value(metadata i1 %1, metadata !11680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11681
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11682
  %4 = load volatile i32, i32* %3, align 4, !dbg !11682
  %5 = and i32 %4, -1025, !dbg !11684
  %6 = select i1 %1, i32 1024, i32 0, !dbg !11684
  %7 = or i32 %5, %6, !dbg !11684
  store volatile i32 %7, i32* %3, align 4, !dbg !11682
  ret void, !dbg !11685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11686 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11688, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata i1 %1, metadata !11689, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11690
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11691
  %4 = load volatile i32, i32* %3, align 4, !dbg !11691
  %5 = and i32 %4, -513, !dbg !11693
  %6 = select i1 %1, i32 512, i32 0, !dbg !11693
  %7 = or i32 %5, %6, !dbg !11693
  store volatile i32 %7, i32* %3, align 4, !dbg !11691
  ret void, !dbg !11694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11695 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11697, metadata !DIExpression()), !dbg !11699
  call void @llvm.dbg.value(metadata i1 %1, metadata !11698, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11699
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11700
  %4 = load volatile i32, i32* %3, align 4, !dbg !11700
  %5 = and i32 %4, -257, !dbg !11702
  %6 = select i1 %1, i32 256, i32 0, !dbg !11702
  %7 = or i32 %5, %6, !dbg !11702
  store volatile i32 %7, i32* %3, align 4, !dbg !11700
  ret void, !dbg !11703
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #1 !dbg !11704 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11708, metadata !DIExpression()), !dbg !11710
  call void @llvm.dbg.value(metadata i16 %1, metadata !11709, metadata !DIExpression()), !dbg !11710
  %3 = zext i16 %1 to i32, !dbg !11711
  %4 = icmp ult i16 %1, 512, !dbg !11711
  br i1 %4, label %6, label %5, !dbg !11714

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 462) #24, !dbg !11715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 462) #24, !dbg !11715
  unreachable, !dbg !11715

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11717
  %8 = load volatile i32, i32* %7, align 4, !dbg !11717
  %9 = and i32 %8, -5, !dbg !11719
  %10 = lshr i32 %3, 6, !dbg !11719
  %11 = and i32 %10, 4, !dbg !11719
  %12 = or i32 %9, %11, !dbg !11719
  store volatile i32 %12, i32* %7, align 4, !dbg !11717
  %13 = and i32 %3, 255, !dbg !11720
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !11721
  store volatile i32 %13, i32* %14, align 4, !dbg !11722
  ret void, !dbg !11723
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #17 !dbg !11724 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11728, metadata !DIExpression()), !dbg !11730
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !11731
  %3 = load volatile i32, i32* %2, align 4, !dbg !11731
  call void @llvm.dbg.value(metadata i32 %3, metadata !11729, metadata !DIExpression()), !dbg !11730
  %4 = trunc i32 %3 to i16, !dbg !11732
  %5 = and i16 %4, 255, !dbg !11732
  %6 = lshr i16 %4, 2, !dbg !11732
  %7 = and i16 %6, 256, !dbg !11732
  %8 = or i16 %7, %5, !dbg !11732
  call void @llvm.dbg.value(metadata i16 %8, metadata !11729, metadata !DIExpression()), !dbg !11730
  ret i16 %8, !dbg !11733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11734 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11736, metadata !DIExpression()), !dbg !11738
  call void @llvm.dbg.value(metadata i1 %1, metadata !11737, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11738
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11739
  %4 = load volatile i32, i32* %3, align 4, !dbg !11739
  %5 = and i32 %4, -2, !dbg !11741
  %6 = zext i1 %1 to i32, !dbg !11741
  %7 = or i32 %5, %6, !dbg !11741
  store volatile i32 %7, i32* %3, align 4, !dbg !11739
  ret void, !dbg !11742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11743 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11745, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata i1 %1, metadata !11746, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11747
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11748
  %4 = load volatile i32, i32* %3, align 4, !dbg !11748
  %5 = and i32 %4, -3, !dbg !11750
  %6 = select i1 %1, i32 2, i32 0, !dbg !11750
  %7 = or i32 %5, %6, !dbg !11750
  store volatile i32 %7, i32* %3, align 4, !dbg !11748
  ret void, !dbg !11751
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11752 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11754, metadata !DIExpression()), !dbg !11756
  call void @llvm.dbg.value(metadata i1 %1, metadata !11755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11756
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11757
  %4 = load volatile i32, i32* %3, align 4, !dbg !11757
  %5 = and i32 %4, -129, !dbg !11759
  %6 = select i1 %1, i32 128, i32 0, !dbg !11759
  %7 = or i32 %5, %6, !dbg !11759
  store volatile i32 %7, i32* %3, align 4, !dbg !11757
  ret void, !dbg !11760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11761 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11763, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i32 %1, metadata !11764, metadata !DIExpression()), !dbg !11765
  %3 = and i32 %1, -33, !dbg !11766
  %4 = icmp eq i32 %3, 0, !dbg !11766
  br i1 %4, label %6, label %5, !dbg !11766

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.6.195, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 553) #24, !dbg !11769
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 553) #24, !dbg !11769
  unreachable, !dbg !11769

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !11766
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11771
  %9 = load volatile i32, i32* %8, align 4, !dbg !11771
  %10 = and i32 %9, -33, !dbg !11773
  %11 = select i1 %7, i32 32, i32 0, !dbg !11773
  %12 = or i32 %10, %11, !dbg !11773
  store volatile i32 %12, i32* %8, align 4, !dbg !11771
  ret void, !dbg !11774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11775 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11777, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i1 %1, metadata !11778, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11779
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11780
  %4 = load volatile i32, i32* %3, align 4, !dbg !11780
  %5 = and i32 %4, -16385, !dbg !11782
  %6 = select i1 %1, i32 16384, i32 0, !dbg !11782
  %7 = or i32 %5, %6, !dbg !11782
  store volatile i32 %7, i32* %3, align 4, !dbg !11780
  ret void, !dbg !11783
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11784 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11786, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i1 %1, metadata !11787, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11788
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11789
  %4 = load volatile i32, i32* %3, align 4, !dbg !11789
  %5 = and i32 %4, -17, !dbg !11791
  %6 = select i1 %1, i32 16, i32 0, !dbg !11791
  %7 = or i32 %5, %6, !dbg !11791
  store volatile i32 %7, i32* %3, align 4, !dbg !11789
  ret void, !dbg !11792
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !11793 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11795, metadata !DIExpression()), !dbg !11797
  call void @llvm.dbg.value(metadata i1 %1, metadata !11796, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11797
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11798
  %4 = load volatile i32, i32* %3, align 4, !dbg !11798
  %5 = and i32 %4, -2049, !dbg !11800
  %6 = select i1 %1, i32 2048, i32 0, !dbg !11800
  %7 = or i32 %5, %6, !dbg !11800
  store volatile i32 %7, i32* %3, align 4, !dbg !11798
  ret void, !dbg !11801
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !11802 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !11821, metadata !DIExpression()), !dbg !11826
  %4 = bitcast i32* %2 to i8*, !dbg !11827
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11827
  %5 = bitcast i32* %3 to i8*, !dbg !11827
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11827
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !11828
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !11829

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11822, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32* %2, metadata !11824, metadata !DIExpression(DW_OP_deref)), !dbg !11826
  call void @llvm.dbg.value(metadata i32* %3, metadata !11825, metadata !DIExpression(DW_OP_deref)), !dbg !11826
  br label %8, !dbg !11830

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !11832
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !11832
  call void @llvm.dbg.value(metadata i32 %10, metadata !11822, metadata !DIExpression()), !dbg !11826
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !11833

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #24, !dbg !11834
  call void @llvm.dbg.value(metadata i32 %12, metadata !11823, metadata !DIExpression()), !dbg !11826
  br label %13, !dbg !11836

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !11837
  call void @llvm.dbg.value(metadata i32 %14, metadata !11823, metadata !DIExpression()), !dbg !11826
  %15 = load i32, i32* %2, align 4, !dbg !11838
  call void @llvm.dbg.value(metadata i32 %15, metadata !11824, metadata !DIExpression()), !dbg !11826
  %16 = add i32 %15, 1, !dbg !11839
  %17 = udiv i32 %14, %16, !dbg !11840
  %18 = load i32, i32* %3, align 4, !dbg !11841
  call void @llvm.dbg.value(metadata i32 %18, metadata !11825, metadata !DIExpression()), !dbg !11826
  %19 = add i32 %18, 1, !dbg !11842
  %20 = udiv i32 %17, %19, !dbg !11843
  br label %21, !dbg !11844

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !11826
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11845
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11845
  ret i32 %22, !dbg !11845
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #17 !dbg !11846 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !11850, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32 %0, metadata !11851, metadata !DIExpression()), !dbg !11852
  %2 = inttoptr i32 %0 to i32*, !dbg !11853
  %3 = load volatile i32, i32* %2, align 4, !dbg !11853
  %4 = lshr i32 %3, 24, !dbg !11854
  %5 = and i32 %4, 7, !dbg !11854
  ret i32 %5, !dbg !11855
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !11856 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !11878, metadata !DIExpression()), !dbg !11883
  %4 = bitcast i32* %2 to i8*, !dbg !11884
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11884
  %5 = bitcast i32* %3 to i8*, !dbg !11884
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11884
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !11885
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !11886

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11879, metadata !DIExpression()), !dbg !11883
  call void @llvm.dbg.value(metadata i32* %2, metadata !11881, metadata !DIExpression(DW_OP_deref)), !dbg !11883
  call void @llvm.dbg.value(metadata i32* %3, metadata !11882, metadata !DIExpression(DW_OP_deref)), !dbg !11883
  br label %8, !dbg !11887

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !11889
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %10, metadata !11879, metadata !DIExpression()), !dbg !11883
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !11890

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #24, !dbg !11891
  call void @llvm.dbg.value(metadata i32 %12, metadata !11880, metadata !DIExpression()), !dbg !11883
  br label %13, !dbg !11893

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !11894
  call void @llvm.dbg.value(metadata i32 %14, metadata !11880, metadata !DIExpression()), !dbg !11883
  %15 = load i32, i32* %2, align 4, !dbg !11895
  call void @llvm.dbg.value(metadata i32 %15, metadata !11881, metadata !DIExpression()), !dbg !11883
  %16 = add i32 %15, 1, !dbg !11896
  %17 = udiv i32 %14, %16, !dbg !11897
  %18 = load i32, i32* %3, align 4, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %18, metadata !11882, metadata !DIExpression()), !dbg !11883
  %19 = add i32 %18, 1, !dbg !11899
  %20 = udiv i32 %17, %19, !dbg !11900
  br label %21, !dbg !11901

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !11883
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11902
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11902
  ret i32 %22, !dbg !11902
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !11903 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !11949, metadata !DIExpression()), !dbg !11954
  %4 = bitcast i32* %2 to i8*, !dbg !11955
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11955
  %5 = bitcast i32* %3 to i8*, !dbg !11955
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11955
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !11956
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !11957

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11950, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i32* %2, metadata !11952, metadata !DIExpression(DW_OP_deref)), !dbg !11954
  call void @llvm.dbg.value(metadata i32* %3, metadata !11953, metadata !DIExpression(DW_OP_deref)), !dbg !11954
  br label %8, !dbg !11958

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !11960
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !11960
  call void @llvm.dbg.value(metadata i32 %10, metadata !11950, metadata !DIExpression()), !dbg !11954
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !11961

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !11962
  %13 = lshr i32 %12, 2, !dbg !11964
  call void @llvm.dbg.value(metadata i32 %13, metadata !11951, metadata !DIExpression()), !dbg !11954
  br label %16, !dbg !11965

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !11966
  call void @llvm.dbg.value(metadata i32 %15, metadata !11951, metadata !DIExpression()), !dbg !11954
  br label %16, !dbg !11967

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !11968
  call void @llvm.dbg.value(metadata i32 %17, metadata !11951, metadata !DIExpression()), !dbg !11954
  %18 = load i32, i32* %2, align 4, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %18, metadata !11952, metadata !DIExpression()), !dbg !11954
  %19 = add i32 %18, 1, !dbg !11970
  %20 = udiv i32 %17, %19, !dbg !11971
  %21 = load i32, i32* %3, align 4, !dbg !11972
  call void @llvm.dbg.value(metadata i32 %21, metadata !11953, metadata !DIExpression()), !dbg !11954
  %22 = add i32 %21, 1, !dbg !11973
  %23 = udiv i32 %20, %22, !dbg !11974
  br label %24, !dbg !11975

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !11954
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11976
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !11976
  ret i32 %25, !dbg !11976
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !11977 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !11995, metadata !DIExpression()), !dbg !12000
  %4 = bitcast i32* %2 to i8*, !dbg !12001
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12001
  %5 = bitcast i32* %3 to i8*, !dbg !12001
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12001
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !12002
  %7 = add i32 %6, -815923200, !dbg !12003
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !12003
  %9 = icmp ult i32 %8, 4, !dbg !12003
  br i1 %9, label %10, label %25, !dbg !12003

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !12003
  %12 = add i32 %11, 809020800, !dbg !12003
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #25, !dbg !12004
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %13, metadata !11996, metadata !DIExpression()), !dbg !12000
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !12006

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12007
  %16 = lshr i32 %15, 2, !dbg !12009
  call void @llvm.dbg.value(metadata i32 %16, metadata !11997, metadata !DIExpression()), !dbg !12000
  br label %17, !dbg !12010

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !12011
  call void @llvm.dbg.value(metadata i32 %18, metadata !11997, metadata !DIExpression()), !dbg !12000
  %19 = load i32, i32* %2, align 4, !dbg !12012
  call void @llvm.dbg.value(metadata i32 %19, metadata !11998, metadata !DIExpression()), !dbg !12000
  %20 = add i32 %19, 1, !dbg !12013
  %21 = udiv i32 %18, %20, !dbg !12014
  %22 = load i32, i32* %3, align 4, !dbg !12015
  call void @llvm.dbg.value(metadata i32 %22, metadata !11999, metadata !DIExpression()), !dbg !12000
  %23 = add i32 %22, 1, !dbg !12016
  %24 = udiv i32 %21, %23, !dbg !12017
  br label %25, !dbg !12018

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !12000
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12019
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12019
  ret i32 %26, !dbg !12019
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !12020 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12047, metadata !DIExpression()), !dbg !12052
  %4 = bitcast i32* %2 to i8*, !dbg !12053
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12053
  %5 = bitcast i32* %3 to i8*, !dbg !12053
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12053
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !12054
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !12055

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12048, metadata !DIExpression()), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %2, metadata !12050, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %3, metadata !12051, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  br label %13, !dbg !12056

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12048, metadata !DIExpression()), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %2, metadata !12050, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %3, metadata !12051, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  br label %13, !dbg !12058

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12048, metadata !DIExpression()), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %2, metadata !12050, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %3, metadata !12051, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  br label %13, !dbg !12059

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12048, metadata !DIExpression()), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %2, metadata !12050, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %3, metadata !12051, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  br label %13, !dbg !12060

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12048, metadata !DIExpression()), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %2, metadata !12050, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %3, metadata !12051, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  br label %13, !dbg !12061

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !12048, metadata !DIExpression()), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %2, metadata !12050, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  call void @llvm.dbg.value(metadata i32* %3, metadata !12051, metadata !DIExpression(DW_OP_deref)), !dbg !12052
  br label %13, !dbg !12062

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #25, !dbg !12063
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12063
  call void @llvm.dbg.value(metadata i32 %15, metadata !12048, metadata !DIExpression()), !dbg !12052
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !12064

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12065
  %18 = lshr i32 %17, 1, !dbg !12067
  call void @llvm.dbg.value(metadata i32 %18, metadata !12049, metadata !DIExpression()), !dbg !12052
  br label %21, !dbg !12068

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12069
  call void @llvm.dbg.value(metadata i32 %20, metadata !12049, metadata !DIExpression()), !dbg !12052
  br label %21, !dbg !12070

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !12071
  call void @llvm.dbg.value(metadata i32 %22, metadata !12049, metadata !DIExpression()), !dbg !12052
  %23 = load i32, i32* %2, align 4, !dbg !12072
  call void @llvm.dbg.value(metadata i32 %23, metadata !12050, metadata !DIExpression()), !dbg !12052
  %24 = add i32 %23, 1, !dbg !12073
  %25 = udiv i32 %22, %24, !dbg !12074
  %26 = load i32, i32* %3, align 4, !dbg !12075
  call void @llvm.dbg.value(metadata i32 %26, metadata !12051, metadata !DIExpression()), !dbg !12052
  %27 = add i32 %26, 1, !dbg !12076
  %28 = udiv i32 %25, %27, !dbg !12077
  br label %29, !dbg !12078

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !12052
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12079
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12079
  ret i32 %30, !dbg !12079
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #19 !dbg !12080 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12083, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12099
  ret void, !dbg !12100
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12101 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12105, metadata !DIExpression()), !dbg !12107
  %2 = icmp eq i8* %0, null, !dbg !12108
  br i1 %2, label %29, label %3, !dbg !12110

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12111
  %5 = icmp eq i8 %4, 0, !dbg !12112
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12113
  br i1 %6, label %29, label %8, !dbg !12113

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12106, metadata !DIExpression()), !dbg !12107
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12114

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12106, metadata !DIExpression()), !dbg !12107
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !12116
  br i1 %10, label %11, label %15, !dbg !12121

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12122
  %13 = load i8*, i8** %12, align 4, !dbg !12122
  %14 = icmp eq i8* %13, %0, !dbg !12123
  br i1 %14, label %29, label %15, !dbg !12124

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12125
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12106, metadata !DIExpression()), !dbg !12107
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12126
  br i1 %17, label %7, label %8, !dbg !12127, !llvm.loop !12128

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12106, metadata !DIExpression()), !dbg !12107
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !12130
  br i1 %20, label %21, label %26, !dbg !12134

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12135
  %23 = load i8*, i8** %22, align 4, !dbg !12135
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !12136
  %25 = icmp eq i32 %24, 0, !dbg !12137
  br i1 %25, label %29, label %26, !dbg !12138

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12139
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12106, metadata !DIExpression()), !dbg !12107
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12140
  br i1 %28, label %29, label %18, !dbg !12114, !llvm.loop !12141

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12107
  ret %struct.device* %30, !dbg !12143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12148, metadata !DIExpression()), !dbg !12149
  %2 = icmp eq %struct.device* %0, null, !dbg !12150
  br i1 %2, label %14, label %3, !dbg !12152

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12153
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12153
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12154
  %7 = load i8, i8* %6, align 1, !dbg !12154
  %8 = and i8 %7, 1, !dbg !12154
  %9 = icmp eq i8 %8, 0, !dbg !12154
  br i1 %9, label %14, label %10, !dbg !12155

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12156
  %12 = load i8, i8* %11, align 1, !dbg !12156
  %13 = icmp eq i8 %12, 0, !dbg !12157
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12149
  ret i1 %15, !dbg !12158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12159 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12164, metadata !DIExpression()), !dbg !12165
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12166
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12167
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12168 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12176, metadata !DIExpression()), !dbg !12181
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12177, metadata !DIExpression()), !dbg !12181
  call void @llvm.dbg.value(metadata i8* %2, metadata !12178, metadata !DIExpression()), !dbg !12181
  %5 = bitcast i32* %4 to i8*, !dbg !12182
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12182
  call void @llvm.dbg.value(metadata i32 0, metadata !12179, metadata !DIExpression()), !dbg !12181
  store i32 0, i32* %4, align 4, !dbg !12183
  call void @llvm.dbg.value(metadata i32* %4, metadata !12179, metadata !DIExpression(DW_OP_deref)), !dbg !12181
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12184
  call void @llvm.dbg.value(metadata i16* %6, metadata !12180, metadata !DIExpression()), !dbg !12181
  %7 = load i32, i32* %4, align 4, !dbg !12185
  call void @llvm.dbg.value(metadata i32 %7, metadata !12179, metadata !DIExpression()), !dbg !12181
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12186
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12187
  ret i32 %8, !dbg !12188
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !12189 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12193, metadata !DIExpression()), !dbg !12199
  call void @llvm.dbg.value(metadata i32* %1, metadata !12194, metadata !DIExpression()), !dbg !12199
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12200
  %4 = load i16*, i16** %3, align 4, !dbg !12200
  call void @llvm.dbg.value(metadata i16* %4, metadata !12195, metadata !DIExpression()), !dbg !12199
  %5 = icmp eq i16* %4, null, !dbg !12201
  br i1 %5, label %14, label %6, !dbg !12202

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12203
  call void @llvm.dbg.value(metadata i32 %7, metadata !12196, metadata !DIExpression()), !dbg !12203
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12204
  %9 = load i16, i16* %8, align 2, !dbg !12204
  %10 = add i16 %9, -32767, !dbg !12205
  %11 = icmp ult i16 %10, 2, !dbg !12205
  %12 = add i32 %7, 1, !dbg !12206
  call void @llvm.dbg.value(metadata i32 %12, metadata !12196, metadata !DIExpression()), !dbg !12203
  br i1 %11, label %13, label %6, !dbg !12205, !llvm.loop !12208

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12211
  br label %14, !dbg !12212

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12214 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12218, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i32 %1, metadata !12219, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12220, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i8* %3, metadata !12221, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i32 0, metadata !12222, metadata !DIExpression()), !dbg !12230
  %5 = icmp eq i32 %1, 0, !dbg !12231
  br i1 %5, label %16, label %8, !dbg !12232

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12222, metadata !DIExpression()), !dbg !12230
  %7 = icmp eq i32 %15, %1, !dbg !12231
  br i1 %7, label %16, label %8, !dbg !12232, !llvm.loop !12233

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12222, metadata !DIExpression()), !dbg !12230
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12235
  %11 = load i16, i16* %10, align 2, !dbg !12235
  call void @llvm.dbg.value(metadata i16 %11, metadata !12224, metadata !DIExpression()), !dbg !12236
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !12237
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12227, metadata !DIExpression()), !dbg !12236
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !12238
  call void @llvm.dbg.value(metadata i32 %13, metadata !12228, metadata !DIExpression()), !dbg !12236
  %14 = icmp slt i32 %13, 0, !dbg !12239
  %15 = add nuw i32 %9, 1, !dbg !12241
  call void @llvm.dbg.value(metadata i32 %15, metadata !12222, metadata !DIExpression()), !dbg !12230
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !12243 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12247, metadata !DIExpression()), !dbg !12250
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12248, metadata !DIExpression()), !dbg !12250
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12249, metadata !DIExpression()), !dbg !12250
  %2 = sext i16 %0 to i32, !dbg !12251
  %3 = icmp slt i16 %0, 1, !dbg !12253
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12254
  %6 = add nsw i32 %2, -1, !dbg !12254
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12254
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12254
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12248, metadata !DIExpression()), !dbg !12250
  ret %struct.device* %8, !dbg !12255
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12256 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12258, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12259, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i8* %2, metadata !12260, metadata !DIExpression()), !dbg !12263
  %5 = bitcast i32* %4 to i8*, !dbg !12264
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12264
  call void @llvm.dbg.value(metadata i32 0, metadata !12261, metadata !DIExpression()), !dbg !12263
  store i32 0, i32* %4, align 4, !dbg !12265
  call void @llvm.dbg.value(metadata i32* %4, metadata !12261, metadata !DIExpression(DW_OP_deref)), !dbg !12263
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12266
  call void @llvm.dbg.value(metadata i16* %6, metadata !12262, metadata !DIExpression()), !dbg !12263
  %7 = load i32, i32* %4, align 4, !dbg !12267
  call void @llvm.dbg.value(metadata i32 %7, metadata !12261, metadata !DIExpression()), !dbg !12263
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12268
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12269
  ret i32 %8, !dbg !12270
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !12271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12273, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32* %1, metadata !12274, metadata !DIExpression()), !dbg !12278
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12279
  %4 = load i16*, i16** %3, align 4, !dbg !12279
  call void @llvm.dbg.value(metadata i16* %4, metadata !12275, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 0, metadata !12276, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 0, metadata !12277, metadata !DIExpression()), !dbg !12278
  %5 = icmp eq i16* %4, null, !dbg !12280
  br i1 %5, label %22, label %6, !dbg !12282

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12276, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i16* %8, metadata !12275, metadata !DIExpression()), !dbg !12278
  %9 = load i16, i16* %8, align 2, !dbg !12283
  %10 = icmp eq i16 %9, -32768, !dbg !12287
  call void @llvm.dbg.value(metadata i32 undef, metadata !12276, metadata !DIExpression()), !dbg !12278
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12288
  call void @llvm.dbg.value(metadata i16* %11, metadata !12275, metadata !DIExpression()), !dbg !12278
  %12 = zext i1 %10 to i32, !dbg !12289
  %13 = add i32 %7, %12, !dbg !12289
  call void @llvm.dbg.value(metadata i32 %13, metadata !12276, metadata !DIExpression()), !dbg !12278
  %14 = icmp eq i32 %13, 2, !dbg !12290
  br i1 %14, label %15, label %6, !dbg !12291

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12278
  call void @llvm.dbg.value(metadata i32 %16, metadata !12277, metadata !DIExpression()), !dbg !12278
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12292
  %18 = load i16, i16* %17, align 2, !dbg !12292
  %19 = icmp eq i16 %18, 32767, !dbg !12293
  %20 = add i32 %16, 1, !dbg !12294
  call void @llvm.dbg.value(metadata i32 %20, metadata !12277, metadata !DIExpression()), !dbg !12278
  br i1 %19, label %21, label %15, !dbg !12296, !llvm.loop !12297

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12299
  br label %22, !dbg !12300

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12301
  call void @llvm.dbg.value(metadata i16* %23, metadata !12275, metadata !DIExpression()), !dbg !12278
  ret i16* %23, !dbg !12302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !12303 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12306
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12307
  ret i32* %2, !dbg !12308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !12309 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12453, metadata !DIExpression()), !dbg !12456
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12454, metadata !DIExpression()), !dbg !12456
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12455, metadata !DIExpression()), !dbg !12456
  ret void, !dbg !12457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12462, metadata !DIExpression()), !dbg !12464
  call void @llvm.dbg.value(metadata i32 %1, metadata !12463, metadata !DIExpression()), !dbg !12464
  ret void, !dbg !12465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12466 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12470, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.value(metadata i32 %1, metadata !12471, metadata !DIExpression()), !dbg !12472
  ret void, !dbg !12473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12478, metadata !DIExpression()), !dbg !12480
  call void @llvm.dbg.value(metadata i8* %1, metadata !12479, metadata !DIExpression()), !dbg !12480
  ret i32 -134, !dbg !12481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12486, metadata !DIExpression()), !dbg !12488
  call void @llvm.dbg.value(metadata i8* %1, metadata !12487, metadata !DIExpression()), !dbg !12488
  ret i32 -134, !dbg !12489
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12493, metadata !DIExpression()), !dbg !12494
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12495, !srcloc !12501
  call void @llvm.dbg.value(metadata i32 undef, metadata !12498, metadata !DIExpression()) #23, !dbg !12502
  call void @llvm.dbg.value(metadata i32 undef, metadata !12499, metadata !DIExpression()) #23, !dbg !12502
  br label %3, !dbg !12503

3:                                                ; preds = %3, %1
  br label %3, !dbg !12504, !llvm.loop !12507
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12514, metadata !DIExpression()), !dbg !12516
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12515, metadata !DIExpression()), !dbg !12516
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.202, i32 0, i32 0), i32 noundef 69) #24, !dbg !12517
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !12522
  unreachable, !dbg !12522
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12525, metadata !DIExpression()), !dbg !12526
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !12527
  unreachable, !dbg !12527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12530, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12531, metadata !DIExpression()), !dbg !12534
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12535, !srcloc !12501
  call void @llvm.dbg.value(metadata i32 undef, metadata !12498, metadata !DIExpression()) #23, !dbg !12537
  call void @llvm.dbg.value(metadata i32 undef, metadata !12499, metadata !DIExpression()) #23, !dbg !12537
  call void @llvm.dbg.value(metadata i32 undef, metadata !12532, metadata !DIExpression()), !dbg !12534
  %4 = tail call fastcc %struct.k_thread* @k_current_get.205() #26, !dbg !12538
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12533, metadata !DIExpression()), !dbg !12534
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #25, !dbg !12539
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.206, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #24, !dbg !12539
  %6 = icmp eq %struct.__esf* %1, null, !dbg !12544
  br i1 %6, label %13, label %7, !dbg !12546

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12547, metadata !DIExpression()), !dbg !12552
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12554
  %9 = load i32, i32* %8, align 4, !dbg !12554
  %10 = and i32 %9, 511, !dbg !12555
  %11 = icmp eq i32 %10, 0, !dbg !12556
  br i1 %11, label %13, label %12, !dbg !12557

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.207, i32 0, i32 0), i32 noundef 69) #24, !dbg !12558
  br label %13, !dbg !12564

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #25, !dbg !12565
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.208, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #24, !dbg !12565
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !12570
  %15 = icmp eq i32 %0, 4, !dbg !12571
  br i1 %15, label %16, label %17, !dbg !12576

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.209, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.211, i32 0, i32 0), i32 noundef 148) #24, !dbg !12577
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.212, i32 0, i32 0)) #24, !dbg !12577
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.211, i32 0, i32 0), i32 noundef 148) #24, !dbg !12577
  unreachable, !dbg !12577

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !12535
  call void @llvm.dbg.value(metadata i32 %18, metadata !12498, metadata !DIExpression()) #23, !dbg !12537
  call void @llvm.dbg.value(metadata i32 %18, metadata !12532, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 undef, metadata !12579, metadata !DIExpression()) #23, !dbg !12582
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12584, !srcloc !12585
  tail call fastcc void @k_thread_abort.213(%struct.k_thread* noundef %4) #25, !dbg !12586
  ret void, !dbg !12589
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.205() unnamed_addr #11 !dbg !12590 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.221() #26, !dbg !12594
  ret %struct.k_thread* %1, !dbg !12595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !12596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12600, metadata !DIExpression()), !dbg !12601
  %2 = icmp ult i32 %0, 5, !dbg !12602
  br i1 %2, label %3, label %6, !dbg !12602

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12602
  %5 = load i8*, i8** %4, align 4, !dbg !12602
  br label %6, !dbg !12602

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.215, i32 0, i32 0), %1 ], !dbg !12603
  ret i8* %7, !dbg !12605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12606 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12610, metadata !DIExpression()), !dbg !12612
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12613
  br i1 %2, label %9, label %3, !dbg !12614

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #24, !dbg !12615
  call void @llvm.dbg.value(metadata i8* %4, metadata !12611, metadata !DIExpression()), !dbg !12612
  %5 = icmp eq i8* %4, null, !dbg !12616
  br i1 %5, label %9, label %6, !dbg !12618

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12619
  %8 = icmp eq i8 %7, 0, !dbg !12620
  br i1 %8, label %9, label %10, !dbg !12621

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.214, i32 0, i32 0), metadata !12611, metadata !DIExpression()), !dbg !12612
  br label %10, !dbg !12622

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.214, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12612
  call void @llvm.dbg.value(metadata i8* %11, metadata !12611, metadata !DIExpression()), !dbg !12612
  ret i8* %11, !dbg !12624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.213(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12625 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12629, metadata !DIExpression()), !dbg !12630
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12631, !srcloc !12633
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !12634
  ret void, !dbg !12635
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.221() unnamed_addr #11 !dbg !12636 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12637, !srcloc !12639
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !12640
  ret %struct.k_thread* %1, !dbg !12641
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12642 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12646, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.value(metadata i32 %1, metadata !12647, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.value(metadata i32 %2, metadata !12648, metadata !DIExpression()), !dbg !12649
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !12650
  ret void, !dbg !12651
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12652 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12656, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.value(metadata i8* %1, metadata !12657, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.value(metadata i32 %2, metadata !12658, metadata !DIExpression()), !dbg !12659
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !12660
  ret void, !dbg !12661
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12662 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !12663
  ret void, !dbg !12664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12669, metadata !DIExpression()), !dbg !12670
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !12671
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12672
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12673
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12674
  %4 = trunc i32 %0 to i8, !dbg !12675
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12676
  store i8 %4, i8* %5, align 4, !dbg !12677
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12678
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !12679
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12680
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12681
  store i8* %8, i8** %9, align 4, !dbg !12682
  ret void, !dbg !12683
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12686, metadata !DIExpression()), !dbg !12692
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12693
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12687, metadata !DIExpression()), !dbg !12692
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12694
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12688, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i8* null, metadata !12691, metadata !DIExpression()), !dbg !12692
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12695
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12696
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !12697
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !12698
  ret void, !dbg !12699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12700 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12704, metadata !DIExpression()), !dbg !12705
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !12706
  ret i8* %2, !dbg !12707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12708 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12713, metadata !DIExpression()), !dbg !12714
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12715
  %3 = load i8, i8* %2, align 1, !dbg !12716
  %4 = and i8 %3, -5, !dbg !12716
  store i8 %4, i8* %2, align 1, !dbg !12716
  ret void, !dbg !12717
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !12718 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !12721
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !12722
  %3 = ptrtoint i8* %2 to i32, !dbg !12731
  %4 = add i32 %3, 2048, !dbg !12732
  call void @llvm.dbg.value(metadata i32 %4, metadata !12726, metadata !DIExpression()) #23, !dbg !12733
  call void @llvm.dbg.value(metadata i32 %4, metadata !12734, metadata !DIExpression()) #23, !dbg !12737
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12739, !srcloc !12740
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12741
  %6 = or i32 %5, 512, !dbg !12741
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12741
  tail call fastcc void @__NVIC_SetPriority.230(i32 noundef -2, i32 noundef 255) #24, !dbg !12742
  tail call fastcc void @__NVIC_SetPriority.230(i32 noundef -5, i32 noundef 0) #24, !dbg !12745
  tail call fastcc void @__NVIC_SetPriority.230(i32 noundef -12, i32 noundef 0) #24, !dbg !12746
  tail call fastcc void @__NVIC_SetPriority.230(i32 noundef -11, i32 noundef 0) #24, !dbg !12747
  tail call fastcc void @__NVIC_SetPriority.230(i32 noundef -10, i32 noundef 0) #24, !dbg !12748
  tail call fastcc void @__NVIC_SetPriority.230(i32 noundef -4, i32 noundef 0) #24, !dbg !12749
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12750
  %8 = or i32 %7, 458752, !dbg !12750
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12750
  tail call void @z_arm_fault_init() #24, !dbg !12751
  tail call void @z_arm_cpu_idle_init() #24, !dbg !12752
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12753
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12756
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !12757
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #23, !dbg !12757
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12720, metadata !DIExpression()), !dbg !12758
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !12759
  call void @z_device_state_init() #24, !dbg !12760
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !12761
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !12762
  %10 = call fastcc i8* @prepare_multithreading() #25, !dbg !12763
  call fastcc void @switch_to_main_thread(i8* noundef %10) #28, !dbg !12764
  unreachable, !dbg !12764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2310, metadata !DIExpression()), !dbg !12765
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12766
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12766
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2311, metadata !DIExpression()), !dbg !12765
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2311, metadata !DIExpression()), !dbg !12765
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12767
  br i1 %7, label %8, label %35, !dbg !12768

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2311, metadata !DIExpression()), !dbg !12765
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12769
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12769
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2321, metadata !DIExpression()), !dbg !12770
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12771
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12771
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !12772
  call void @llvm.dbg.value(metadata i32 %14, metadata !2325, metadata !DIExpression()), !dbg !12770
  %15 = icmp eq %struct.device* %11, null, !dbg !12773
  br i1 %15, label %32, label %16, !dbg !12775

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12776
  br i1 %17, label %26, label %18, !dbg !12779

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12780
  call void @llvm.dbg.value(metadata i32 %19, metadata !2325, metadata !DIExpression()), !dbg !12770
  %20 = icmp ult i32 %19, 255, !dbg !12782
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12782
  call void @llvm.dbg.value(metadata i32 %21, metadata !2325, metadata !DIExpression()), !dbg !12770
  %22 = trunc i32 %21 to i8, !dbg !12783
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12784
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12784
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12785
  store i8 %22, i8* %25, align 1, !dbg !12786
  br label %26, !dbg !12787

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12788
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12788
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12789
  %30 = load i8, i8* %29, align 1, !dbg !12790
  %31 = or i8 %30, 1, !dbg !12790
  store i8 %31, i8* %29, align 1, !dbg !12790
  br label %32, !dbg !12791

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12792
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2311, metadata !DIExpression()), !dbg !12765
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12767
  br i1 %34, label %8, label %35, !dbg !12768, !llvm.loop !12793

35:                                               ; preds = %32, %1
  ret void, !dbg !12795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.230(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12798, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i32 %1, metadata !12799, metadata !DIExpression()), !dbg !12800
  %3 = trunc i32 %1 to i8, !dbg !12801
  %4 = shl i8 %3, 4, !dbg !12801
  %5 = and i32 %0, 15, !dbg !12804
  %6 = add nsw i32 %5, -4, !dbg !12805
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12806
  store volatile i8 %4, i8* %7, align 1, !dbg !12807
  ret void, !dbg !12808
}

; Function Attrs: optsize
declare !dbg !12809 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12810 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12813, metadata !DIExpression()), !dbg !12814
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12815
  store i8 1, i8* %2, align 1, !dbg !12816
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12817
  store i8 1, i8* %3, align 4, !dbg !12818
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #24, !dbg !12819
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12820
  ret void, !dbg !12821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12822 {
  tail call void @z_sched_init() #24, !dbg !12827
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12828
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.231, i32 0, i32 0)) #24, !dbg !12829
  call void @llvm.dbg.value(metadata i8* %1, metadata !12826, metadata !DIExpression()), !dbg !12830
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12831
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12832
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !12833
  ret i8* %1, !dbg !12834
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !12835 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12839, metadata !DIExpression()), !dbg !12840
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !12841
  unreachable, !dbg !12842
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12843 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12845, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata i8* %1, metadata !12846, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata i8* %2, metadata !12847, metadata !DIExpression()), !dbg !12848
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12849
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !12850
  tail call void @boot_banner() #24, !dbg !12851
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !12852
  tail call void @z_init_static_threads() #24, !dbg !12853
  tail call void @main() #24, !dbg !12854
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12855
  %5 = and i8 %4, -2, !dbg !12855
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12855
  ret void, !dbg !12856
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12857 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12867, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i8* %1, metadata !12868, metadata !DIExpression()), !dbg !12869
  ret void, !dbg !12870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12871 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12873, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i8* %1, metadata !12874, metadata !DIExpression()), !dbg !12875
  ret void, !dbg !12876
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12877 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12878, !srcloc !12885
  call void @llvm.dbg.value(metadata i32 %1, metadata !12881, metadata !DIExpression()) #23, !dbg !12886
  %2 = icmp ne i32 %1, 0, !dbg !12887
  ret i1 %2, !dbg !12888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !12889 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12890
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12891
  %3 = load i8, i8* %2, align 4, !dbg !12892
  %4 = or i8 %3, 1, !dbg !12892
  store i8 %4, i8* %2, align 4, !dbg !12892
  ret void, !dbg !12893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !12894 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12895
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12896
  %3 = load i8, i8* %2, align 4, !dbg !12897
  %4 = and i8 %3, -2, !dbg !12897
  store i8 %4, i8* %2, align 4, !dbg !12897
  ret void, !dbg !12898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !12899 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12900
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12901
  %3 = load i8, i8* %2, align 4, !dbg !12901
  %4 = and i8 %3, 1, !dbg !12902
  %5 = icmp ne i8 %4, 0, !dbg !12903
  ret i1 %5, !dbg !12904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12905 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12909, metadata !DIExpression()), !dbg !12911
  call void @llvm.dbg.value(metadata i8* %1, metadata !12910, metadata !DIExpression()), !dbg !12911
  ret i32 -88, !dbg !12912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !12913 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12917, metadata !DIExpression()), !dbg !12918
  ret i8* null, !dbg !12919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !12920 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12924, metadata !DIExpression()), !dbg !12927
  call void @llvm.dbg.value(metadata i8* %1, metadata !12925, metadata !DIExpression()), !dbg !12927
  call void @llvm.dbg.value(metadata i32 %2, metadata !12926, metadata !DIExpression()), !dbg !12927
  ret i32 -88, !dbg !12928
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2334 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2445, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.value(metadata i8* %1, metadata !2446, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.value(metadata i32 %2, metadata !2447, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.value(metadata i32 0, metadata !2448, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.value(metadata i8 undef, metadata !2450, metadata !DIExpression()), !dbg !12929
  %4 = icmp eq i8* %1, null, !dbg !12930
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12932
  br i1 %6, label %46, label %7, !dbg !12932

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12933
  %9 = load i8, i8* %8, align 1, !dbg !12933
  call void @llvm.dbg.value(metadata i8 %9, metadata !2450, metadata !DIExpression()), !dbg !12929
  %10 = add i32 %2, -1, !dbg !12934
  call void @llvm.dbg.value(metadata i32 %10, metadata !2447, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.value(metadata i8 0, metadata !2451, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i8 %9, metadata !2450, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.value(metadata i32 0, metadata !2448, metadata !DIExpression()), !dbg !12929
  %11 = icmp eq i8 %9, 0, !dbg !12936
  br i1 %11, label %12, label %15, !dbg !12938

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12939
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12940
  store i8 0, i8* %14, align 1, !dbg !12941
  br label %46, !dbg !12942

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2451, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i8 %17, metadata !2450, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.value(metadata i32 %18, metadata !2448, metadata !DIExpression()), !dbg !12929
  %19 = zext i8 %17 to i32, !dbg !12943
  %20 = zext i8 %16 to i32, !dbg !12944
  %21 = shl nuw i32 1, %20, !dbg !12944
  call void @llvm.dbg.value(metadata i32 %21, metadata !2449, metadata !DIExpression()), !dbg !12929
  %22 = and i32 %21, %19, !dbg !12946
  %23 = icmp eq i32 %22, 0, !dbg !12948
  br i1 %23, label %42, label %24, !dbg !12949

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12950
  %26 = sub i32 %10, %18, !dbg !12951
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12952
  %28 = load i8*, i8** %27, align 4, !dbg !12952
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12953
  %30 = load i32, i32* %29, align 4, !dbg !12953
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !12954
  %32 = add i32 %31, %18, !dbg !12955
  call void @llvm.dbg.value(metadata i32 %32, metadata !2448, metadata !DIExpression()), !dbg !12929
  %33 = trunc i32 %21 to i8, !dbg !12956
  %34 = xor i8 %33, -1, !dbg !12956
  %35 = and i8 %17, %34, !dbg !12956
  call void @llvm.dbg.value(metadata i8 %35, metadata !2450, metadata !DIExpression()), !dbg !12929
  %36 = icmp eq i8 %35, 0, !dbg !12957
  br i1 %36, label %12, label %37, !dbg !12959

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12960
  %39 = sub i32 %10, %32, !dbg !12962
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.236, i32 0, i32 0), i32 noundef 1) #25, !dbg !12963
  %41 = add i32 %40, %32, !dbg !12964
  call void @llvm.dbg.value(metadata i32 %41, metadata !2448, metadata !DIExpression()), !dbg !12929
  br label %42, !dbg !12965

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12929
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12929
  call void @llvm.dbg.value(metadata i8 %44, metadata !2450, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.value(metadata i32 %43, metadata !2448, metadata !DIExpression()), !dbg !12929
  %45 = add i8 %16, 1, !dbg !12966
  call void @llvm.dbg.value(metadata i8 %45, metadata !2451, metadata !DIExpression()), !dbg !12935
  br label %15, !dbg !12938

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.237, i32 0, i32 0), %3 ], !dbg !12929
  ret i8* %47, !dbg !12967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12968 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12972, metadata !DIExpression()), !dbg !12977
  call void @llvm.dbg.value(metadata i32 %1, metadata !12973, metadata !DIExpression()), !dbg !12977
  call void @llvm.dbg.value(metadata i8* %2, metadata !12974, metadata !DIExpression()), !dbg !12977
  call void @llvm.dbg.value(metadata i32 %3, metadata !12975, metadata !DIExpression()), !dbg !12977
  %5 = icmp ult i32 %1, %3, !dbg !12978
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12978
  call void @llvm.dbg.value(metadata i32 %6, metadata !12976, metadata !DIExpression()), !dbg !12977
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !12979
  ret i32 %6, !dbg !12980
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12981 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12985, metadata !DIExpression()), !dbg !12986
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !12987
  ret void, !dbg !12988
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12989 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12998, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12999, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i32 %2, metadata !13000, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13001, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i8* %4, metadata !13002, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i8* %5, metadata !13003, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i8* %6, metadata !13004, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i32 %7, metadata !13005, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i32 %8, metadata !13006, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i8* undef, metadata !13007, metadata !DIExpression()), !dbg !13009
  %11 = icmp eq i32 %7, 15, !dbg !13010
  br i1 %11, label %12, label %15, !dbg !13010

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13010
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #25, !dbg !13010
  br i1 %14, label %19, label %18, !dbg !13010

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13010
  %17 = icmp ult i32 %16, 31, !dbg !13010
  br i1 %17, label %19, label %18, !dbg !13010

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.249, i32 0, i32 0), i32 noundef 536) #24, !dbg !13014
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.250, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #24, !dbg !13014
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.249, i32 0, i32 0), i32 noundef 536) #24, !dbg !13014
  unreachable, !dbg !13014

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13016
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #25, !dbg !13017
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13018
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !13019
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !13020
  call void @llvm.dbg.value(metadata i8* %22, metadata !13008, metadata !DIExpression()), !dbg !13009
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !13021
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13022
  store i8* null, i8** %23, align 4, !dbg !13023
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13024
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !13024
  br i1 %25, label %29, label %26, !dbg !13026

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 5, !dbg !13027
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 4, !dbg !13027
  br label %29, !dbg !13028

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !13009
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !13029
  store %struct.k_heap* %30, %struct.k_heap** %31, align 4, !dbg !13031
  ret i8* %22, !dbg !13032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13033 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13037, metadata !DIExpression()), !dbg !13038
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13039
  ret i1 %2, !dbg !13040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13041 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13046, metadata !DIExpression()), !dbg !13047
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13048
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !13049
  ret void, !dbg !13050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13056, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.value(metadata i32 %1, metadata !13057, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.value(metadata i32 %2, metadata !13058, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.value(metadata i32 %3, metadata !13059, metadata !DIExpression()), !dbg !13060
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13061
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13062
  %6 = trunc i32 %3 to i8, !dbg !13063
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13064
  store i8 %6, i8* %7, align 4, !dbg !13065
  %8 = trunc i32 %2 to i8, !dbg !13066
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13067
  store i8 %8, i8* %9, align 1, !dbg !13068
  %10 = trunc i32 %1 to i8, !dbg !13069
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13070
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13070
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13070
  store i8 %10, i8* %13, align 2, !dbg !13071
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13072
  store i8 0, i8* %14, align 1, !dbg !13073
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !13074
  ret void, !dbg !13075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !13076 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13080, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13081, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i32 %1, metadata !13082, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i32 0, metadata !13087, metadata !DIExpression()), !dbg !13088
  %3 = add i32 %1, 7, !dbg !13089
  %4 = and i32 %3, -8, !dbg !13089
  call void @llvm.dbg.value(metadata i32 %4, metadata !13083, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i8* undef, metadata !13086, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i32 %4, metadata !13084, metadata !DIExpression()), !dbg !13088
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !13091
  call void @llvm.dbg.value(metadata i8* %5, metadata !13085, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i32 0, metadata !13087, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i8* %5, metadata !13085, metadata !DIExpression()), !dbg !13088
  ret i8* %5, !dbg !13092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13093 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13098, metadata !DIExpression()), !dbg !13099
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13100
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13101
  ret void, !dbg !13102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13103 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13105, metadata !DIExpression()), !dbg !13106
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13107
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !13108
  ret void, !dbg !13109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13110 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13114, metadata !DIExpression()), !dbg !13115
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13116
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13117
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13118
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13119
  ret void, !dbg !13120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13121 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13126, metadata !DIExpression()), !dbg !13127
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13128
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13129
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13130
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13131
  ret void, !dbg !13132
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13133 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13150, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13141, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13142, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i32 %2, metadata !13143, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13144, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i8* %4, metadata !13145, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i8* %5, metadata !13146, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i8* %6, metadata !13147, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i32 %7, metadata !13148, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i32 %8, metadata !13149, metadata !DIExpression()), !dbg !13151
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13152, !srcloc !12885
  call void @llvm.dbg.value(metadata i32 %11, metadata !12881, metadata !DIExpression()) #23, !dbg !13157
  %12 = icmp eq i32 %11, 0, !dbg !13158
  br i1 %12, label %14, label %13, !dbg !13159

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.249, i32 0, i32 0), i32 noundef 647) #24, !dbg !13160
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.252, i32 0, i32 0)) #24, !dbg !13160
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.249, i32 0, i32 0), i32 noundef 647) #24, !dbg !13160
  unreachable, !dbg !13160

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13150, metadata !DIExpression()), !dbg !13151
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !13162
  %17 = icmp eq i64 %15, -1, !dbg !13163
  br i1 %17, label %19, label %18, !dbg !13165

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !13166
  br label %19, !dbg !13168

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13169
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13170 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13175, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13174, metadata !DIExpression()), !dbg !13176
  %4 = icmp eq i64 %3, 0, !dbg !13177
  br i1 %4, label %5, label %6, !dbg !13179

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13180
  br label %7, !dbg !13182

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !13183
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13186 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13190, metadata !DIExpression()), !dbg !13191
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13192, !srcloc !13194
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13195
  ret void, !dbg !13196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13197 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13200, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13199, metadata !DIExpression()), !dbg !13201
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13202
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13203
  ret void, !dbg !13204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13205 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13207, metadata !DIExpression()), !dbg !13226
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13227

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.249, i32 0, i32 0), i32 noundef 750) #24, !dbg !13231
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.256, i32 0, i32 0)) #24, !dbg !13231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.249, i32 0, i32 0), i32 noundef 750) #24, !dbg !13231
  unreachable, !dbg !13231

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13207, metadata !DIExpression()), !dbg !13226
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13234
  br i1 %4, label %6, label %5, !dbg !13235

5:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !13236
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13224, metadata !DIExpression()), !dbg !13237
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !13238

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13242
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13242
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13244
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13244
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13245
  %12 = load i32, i32* %11, align 4, !dbg !13245
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13246
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13246
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13247
  %16 = load i8*, i8** %15, align 4, !dbg !13247
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13248
  %18 = load i8*, i8** %17, align 4, !dbg !13248
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13249
  %20 = load i8*, i8** %19, align 4, !dbg !13249
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13250
  %22 = load i32, i32* %21, align 4, !dbg !13250
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13251
  %24 = load i32, i32* %23, align 4, !dbg !13251
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #25, !dbg !13252
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13253
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !13254
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !13255
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !13255
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13256
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !13207, metadata !DIExpression()), !dbg !13226
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13257
  br i1 %30, label %1, label %2, !dbg !13227, !llvm.loop !13258

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.249, i32 0, i32 0), i32 noundef 781) #24, !dbg !13260
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.256, i32 0, i32 0)) #24, !dbg !13260
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.249, i32 0, i32 0), i32 noundef 781) #24, !dbg !13260
  unreachable, !dbg !13260

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !13224, metadata !DIExpression()), !dbg !13237
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13263
  br i1 %34, label %36, label %35, !dbg !13264

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #24, !dbg !13265
  ret void, !dbg !13266

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !13267
  %38 = load i32, i32* %37, align 4, !dbg !13267
  %39 = icmp eq i32 %38, -1, !dbg !13270
  br i1 %39, label %48, label %40, !dbg !13271

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !13272
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !13272
  %43 = icmp sgt i32 %38, 0, !dbg !13274
  %44 = select i1 %43, i32 %38, i32 0, !dbg !13274
  %45 = zext i32 %44 to i64, !dbg !13274
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.257(i64 noundef %45) #25, !dbg !13274
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !13275
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #25, !dbg !13275
  br label %48, !dbg !13276

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !13277
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !13224, metadata !DIExpression()), !dbg !13237
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13278
  br i1 %50, label %31, label %32, !dbg !13238, !llvm.loop !13279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.257(i64 noundef %0) unnamed_addr #4 !dbg !13281 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13283, metadata !DIExpression()), !dbg !13284
  call void @llvm.dbg.value(metadata i64 %0, metadata !13285, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i32 1000, metadata !13288, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i32 10000, metadata !13289, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i8 1, metadata !13290, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i8 0, metadata !13291, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i8 1, metadata !13292, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i8 0, metadata !13293, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i8 1, metadata !13294, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i8 0, metadata !13295, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i64 0, metadata !13296, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i64 0, metadata !13296, metadata !DIExpression()), !dbg !13300
  %2 = mul i64 %0, 10, !dbg !13302
  ret i64 %2, !dbg !13308
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !13309 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13311, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i8* %1, metadata !13312, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i8* %2, metadata !13313, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i8* %3, metadata !13314, metadata !DIExpression()), !dbg !13315
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13316
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13317
  %7 = load i8, i8* %6, align 4, !dbg !13318
  %8 = or i8 %7, 4, !dbg !13318
  store i8 %8, i8* %6, align 4, !dbg !13318
  tail call void @z_thread_essential_clear() #25, !dbg !13319
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13320
  unreachable, !dbg !13320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13321 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13326, metadata !DIExpression()), !dbg !13328
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13329
  %3 = load i32, i32* %2, align 4, !dbg !13329
  call void @llvm.dbg.value(metadata i32 %3, metadata !13327, metadata !DIExpression()), !dbg !13328
  %4 = icmp eq i32 %3, 0, !dbg !13330
  br i1 %4, label %10, label %5, !dbg !13332

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13333
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13336
  %8 = zext i8 %7 to i32, !dbg !13337
  %9 = icmp eq i32 %6, %8, !dbg !13338
  br i1 %9, label %11, label %10, !dbg !13339

10:                                               ; preds = %5, %1
  br label %11, !dbg !13340

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13328
  ret i1 %12, !dbg !13341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !13342 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13344, metadata !DIExpression()), !dbg !13345
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13346
  %3 = load i32, i32* %2, align 4, !dbg !13346
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13348
  %5 = zext i8 %4 to i32, !dbg !13349
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13350
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13351
  %8 = or i32 %7, %5, !dbg !13352
  %9 = icmp eq i32 %3, %8, !dbg !13353
  br i1 %9, label %10, label %11, !dbg !13354

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13355
  br label %11, !dbg !13356

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13358 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13362, metadata !DIExpression()), !dbg !13363
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13364
  %3 = zext i8 %2 to i32, !dbg !13365
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13366
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13367
  %6 = or i32 %5, %3, !dbg !13368
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13369
  store i32 %6, i32* %7, align 4, !dbg !13370
  ret void, !dbg !13371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13372 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13376, metadata !DIExpression()), !dbg !13377
  ret i32 -134, !dbg !13378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13383, metadata !DIExpression()), !dbg !13385
  call void @llvm.dbg.value(metadata i32 %1, metadata !13384, metadata !DIExpression()), !dbg !13385
  ret i32 -134, !dbg !13386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13387 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13394, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13395, metadata !DIExpression()), !dbg !13396
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13397
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13399
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13396
  ret i32 %6, !dbg !13400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13401 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13405, metadata !DIExpression()), !dbg !13406
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13407
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13406
  ret i32 %3, !dbg !13409
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13410 {
  tail call void @sys_clock_idle_exit() #24, !dbg !13412
  ret void, !dbg !13413
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !13414 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13416, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i8* %1, metadata !13417, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i8* %2, metadata !13418, metadata !DIExpression()), !dbg !13419
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13420
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13420
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13420
  %7 = load i8, i8* %6, align 2, !dbg !13420
  %8 = icmp sgt i8 %7, -1, !dbg !13420
  br i1 %8, label %10, label %9, !dbg !13423

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.268, i32 0, i32 0), i32 noundef 39) #24, !dbg !13424
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.268, i32 0, i32 0), i32 noundef 39) #24, !dbg !13424
  unreachable, !dbg !13424

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13426, !srcloc !13433
  call void @llvm.dbg.value(metadata i32 undef, metadata !13429, metadata !DIExpression()) #23, !dbg !13434
  call void @llvm.dbg.value(metadata i32 undef, metadata !13430, metadata !DIExpression()) #23, !dbg !13434
  tail call fastcc void @k_cpu_idle() #25, !dbg !13435
  br label %10, !dbg !13436, !llvm.loop !13437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13439 {
  tail call void @arch_cpu_idle() #24, !dbg !13440
  ret void, !dbg !13441
}

; Function Attrs: optsize
declare !dbg !13442 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13443 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13461, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i8* %1, metadata !13462, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i32 %2, metadata !13463, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i32 %3, metadata !13464, metadata !DIExpression()), !dbg !13465
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13466
  store i32 %2, i32* %5, align 4, !dbg !13467
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13468
  store i32 %3, i32* %6, align 4, !dbg !13469
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13470
  store i8* %1, i8** %7, align 4, !dbg !13471
  %8 = mul i32 %3, %2, !dbg !13472
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !13473
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13474
  store i8* %9, i8** %10, align 4, !dbg !13475
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13476
  store i8* %1, i8** %11, align 4, !dbg !13477
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13478
  store i8* %1, i8** %12, align 4, !dbg !13479
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13480
  store i32 0, i32* %13, align 4, !dbg !13481
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13482
  store i8 0, i8* %14, align 4, !dbg !13483
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13484
  tail call fastcc void @z_waitq_init.269(%struct._wait_q_t* noundef %15) #25, !dbg !13485
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !13486
  store i32 0, i32* %16, align 4, !dbg !13486
  ret void, !dbg !13487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.269(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13488 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13492, metadata !DIExpression()), !dbg !13493
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13494
  tail call fastcc void @sys_dlist_init.270(%struct._dnode* noundef %2) #25, !dbg !13495
  ret void, !dbg !13496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.270(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13497 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13502, metadata !DIExpression()), !dbg !13503
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13504
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13505
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13506
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13507
  ret void, !dbg !13508
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13509 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13513, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.value(metadata i32 %1, metadata !13514, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.value(metadata i32 %2, metadata !13515, metadata !DIExpression()), !dbg !13519
  %5 = bitcast i32* %4 to i8*, !dbg !13520
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13520
  call void @llvm.dbg.value(metadata i32* %4, metadata !13518, metadata !DIExpression(DW_OP_deref)), !dbg !13519
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !13521
  br i1 %6, label %13, label %7, !dbg !13523

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !13524
  call void @llvm.dbg.value(metadata i32 %8, metadata !13518, metadata !DIExpression()), !dbg !13519
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #25, !dbg !13526
  call void @llvm.dbg.value(metadata i8* %9, metadata !13516, metadata !DIExpression()), !dbg !13519
  %10 = icmp eq i8* %9, null, !dbg !13527
  br i1 %10, label %13, label %11, !dbg !13529

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #25, !dbg !13530
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13532
  store i8 1, i8* %12, align 4, !dbg !13533
  call void @llvm.dbg.value(metadata i32 0, metadata !13517, metadata !DIExpression()), !dbg !13519
  br label %13, !dbg !13534

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !13535
  call void @llvm.dbg.value(metadata i32 %14, metadata !13517, metadata !DIExpression()), !dbg !13519
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13536
  ret i32 %14, !dbg !13537
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #20 !dbg !13538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13543, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.value(metadata i32 %1, metadata !13544, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.value(metadata i32* %2, metadata !13545, metadata !DIExpression()), !dbg !13546
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !13547
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !13547
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !13547
  store i32 %6, i32* %2, align 4, !dbg !13547
  ret i1 %5, !dbg !13548
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !13549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13553, metadata !DIExpression()), !dbg !13554
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #24, !dbg !13555
  ret i8* %2, !dbg !13556
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13557 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13561, metadata !DIExpression()), !dbg !13562
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13563
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #25, !dbg !13563
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13563
  br i1 %4, label %5, label %15, !dbg !13565

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13566
  %7 = load i8, i8* %6, align 4, !dbg !13566
  %8 = and i8 %7, 1, !dbg !13568
  %9 = icmp eq i8 %8, 0, !dbg !13569
  br i1 %9, label %15, label %10, !dbg !13570

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13571
  %12 = load i8*, i8** %11, align 4, !dbg !13571
  tail call void @k_free(i8* noundef %12) #24, !dbg !13573
  %13 = load i8, i8* %6, align 4, !dbg !13574
  %14 = and i8 %13, -2, !dbg !13574
  store i8 %14, i8* %6, align 4, !dbg !13574
  br label %15, !dbg !13575

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !13562
  ret i32 %16, !dbg !13576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13577 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13581, metadata !DIExpression()), !dbg !13582
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13583
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !13584
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13585
  ret %struct.k_thread* %4, !dbg !13586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13587 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13591, metadata !DIExpression()), !dbg !13592
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !13593
  br i1 %2, label %6, label %3, !dbg !13593

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13594
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13594
  br label %6, !dbg !13593

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13593
  ret %struct._dnode* %7, !dbg !13595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !13596 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13600, metadata !DIExpression()), !dbg !13601
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13602
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13602
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13603
  ret i1 %4, !dbg !13604
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13605 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13615, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13613, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i8* %1, metadata !13614, metadata !DIExpression()), !dbg !13623
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13624, !srcloc !13633
  call void @llvm.dbg.value(metadata i32 %5, metadata !13627, metadata !DIExpression()) #23, !dbg !13634
  %6 = icmp eq i32 %5, 0, !dbg !13635
  %7 = icmp eq i64 %4, 0, !dbg !13636
  %8 = select i1 %6, i1 true, i1 %7, !dbg !13636
  br i1 %8, label %10, label %9, !dbg !13636

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.275, i32 0, i32 0), i32 noundef 118) #24, !dbg !13637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.276, i32 0, i32 0)) #24, !dbg !13637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.275, i32 0, i32 0), i32 noundef 118) #24, !dbg !13637
  unreachable, !dbg !13637

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13639
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13640, metadata !DIExpression()) #23, !dbg !13647
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13649, !srcloc !13655
  call void @llvm.dbg.value(metadata i32 undef, metadata !13652, metadata !DIExpression()) #23, !dbg !13656
  call void @llvm.dbg.value(metadata i32 undef, metadata !13653, metadata !DIExpression()) #23, !dbg !13656
  call void @llvm.dbg.value(metadata i32 undef, metadata !13646, metadata !DIExpression()) #23, !dbg !13647
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !13657
  br i1 %13, label %15, label %14, !dbg !13660

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 148) #24, !dbg !13661
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.279, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !13661
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 148) #24, !dbg !13661
  unreachable, !dbg !13661

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !13649
  call void @llvm.dbg.value(metadata i32 %16, metadata !13652, metadata !DIExpression()) #23, !dbg !13656
  call void @llvm.dbg.value(metadata i32 %16, metadata !13646, metadata !DIExpression()) #23, !dbg !13647
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !13663
  call void @llvm.dbg.value(metadata i32 %16, metadata !13617, metadata !DIExpression()), !dbg !13623
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13664
  %18 = load i32, i32* %17, align 4, !dbg !13664
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13666
  %20 = load i32, i32* %19, align 4, !dbg !13666
  %21 = icmp ult i32 %18, %20, !dbg !13667
  br i1 %21, label %22, label %52, !dbg !13668

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13669
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %23) #24, !dbg !13671
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13616, metadata !DIExpression()), !dbg !13623
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !13672
  br i1 %25, label %34, label %26, !dbg !13674

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !13675
  %28 = load i8*, i8** %27, align 4, !dbg !13675
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13677
  %30 = load i32, i32* %29, align 4, !dbg !13677
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #24, !dbg !13678
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13679, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i32 0, metadata !13684, metadata !DIExpression()), !dbg !13685
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, i32 1, !dbg !13687
  store i32 0, i32* %32, align 4, !dbg !13688
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #24, !dbg !13689
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13690
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #24, !dbg !13690
  br label %64, !dbg !13691

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13692
  %36 = load i8*, i8** %35, align 4, !dbg !13692
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13694
  %38 = load i32, i32* %37, align 4, !dbg !13694
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #24, !dbg !13695
  %40 = load i32, i32* %37, align 4, !dbg !13696
  %41 = load i8*, i8** %35, align 4, !dbg !13697
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !13697
  store i8* %42, i8** %35, align 4, !dbg !13697
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13698
  %44 = load i8*, i8** %43, align 4, !dbg !13698
  %45 = icmp eq i8* %42, %44, !dbg !13700
  br i1 %45, label %46, label %49, !dbg !13701

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13702
  %48 = load i8*, i8** %47, align 4, !dbg !13702
  store i8* %48, i8** %35, align 4, !dbg !13704
  br label %49, !dbg !13705

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !13706
  %51 = add i32 %50, 1, !dbg !13706
  store i32 %51, i32* %17, align 4, !dbg !13706
  call void @llvm.dbg.value(metadata i32 0, metadata !13622, metadata !DIExpression()), !dbg !13623
  br label %59, !dbg !13707

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !13708

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13709
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !13712
  store i8* %1, i8** %55, align 4, !dbg !13713
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13714
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13715
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %struct._wait_q_t* noundef %56, [1 x i64] %2) #24, !dbg !13715
  call void @llvm.dbg.value(metadata i32 %58, metadata !13622, metadata !DIExpression()), !dbg !13623
  br label %64, !dbg !13716

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !13717
  call void @llvm.dbg.value(metadata i32 %60, metadata !13622, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !13724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13723, metadata !DIExpression()) #23, !dbg !13724
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !13726
  br i1 %61, label %63, label %62, !dbg !13729

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 194) #24, !dbg !13730
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.281, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !13730
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 194) #24, !dbg !13730
  unreachable, !dbg !13730

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !13718, metadata !DIExpression()) #23, !dbg !13724
  call void @llvm.dbg.value(metadata i32 %16, metadata !13732, metadata !DIExpression()) #23, !dbg !13735
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !13737, !srcloc !13738
  br label %64, !dbg !13739

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !13623
  ret i32 %65, !dbg !13740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._gpio_init_config* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !13741 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13751, metadata !DIExpression()), !dbg !13753
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !13752, metadata !DIExpression()), !dbg !13753
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13754
  %4 = load i32, i32* %3, align 4, !dbg !13754
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !13755
  store i32 %4, i32* %5, align 4, !dbg !13756
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13757
  %7 = load i32, i32* %6, align 4, !dbg !13757
  %8 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !13758
  store i32 %7, i32* %8, align 4, !dbg !13759
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13760
  %10 = load i32, i32* %9, align 4, !dbg !13760
  %11 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !13761
  store i32 %10, i32* %11, align 4, !dbg !13762
  ret void, !dbg !13763
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13764 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13770, metadata !DIExpression()), !dbg !13774
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13768, metadata !DIExpression()), !dbg !13774
  call void @llvm.dbg.value(metadata i8* %1, metadata !13769, metadata !DIExpression()), !dbg !13774
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13775, !srcloc !13633
  call void @llvm.dbg.value(metadata i32 %5, metadata !13627, metadata !DIExpression()) #23, !dbg !13780
  %6 = icmp eq i32 %5, 0, !dbg !13781
  %7 = icmp eq i64 %4, 0, !dbg !13782
  %8 = select i1 %6, i1 true, i1 %7, !dbg !13782
  br i1 %8, label %10, label %9, !dbg !13782

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.275, i32 0, i32 0), i32 noundef 208) #24, !dbg !13783
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.276, i32 0, i32 0)) #24, !dbg !13783
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.275, i32 0, i32 0), i32 noundef 208) #24, !dbg !13783
  unreachable, !dbg !13783

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13640, metadata !DIExpression()) #23, !dbg !13786
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13788, !srcloc !13655
  call void @llvm.dbg.value(metadata i32 undef, metadata !13652, metadata !DIExpression()) #23, !dbg !13790
  call void @llvm.dbg.value(metadata i32 undef, metadata !13653, metadata !DIExpression()) #23, !dbg !13790
  call void @llvm.dbg.value(metadata i32 undef, metadata !13646, metadata !DIExpression()) #23, !dbg !13786
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !13791
  br i1 %13, label %15, label %14, !dbg !13792

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 148) #24, !dbg !13793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.279, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !13793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 148) #24, !dbg !13793
  unreachable, !dbg !13793

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !13788
  call void @llvm.dbg.value(metadata i32 %16, metadata !13652, metadata !DIExpression()) #23, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %16, metadata !13646, metadata !DIExpression()) #23, !dbg !13786
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !13794
  call void @llvm.dbg.value(metadata i32 %16, metadata !13771, metadata !DIExpression()), !dbg !13774
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13795
  %18 = load i32, i32* %17, align 4, !dbg !13795
  %19 = icmp eq i32 %18, 0, !dbg !13797
  br i1 %19, label %61, label %20, !dbg !13798

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13799
  %22 = load i8*, i8** %21, align 4, !dbg !13799
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13801
  %24 = load i32, i32* %23, align 4, !dbg !13801
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #24, !dbg !13802
  %26 = load i32, i32* %23, align 4, !dbg !13803
  %27 = load i8*, i8** %21, align 4, !dbg !13804
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !13804
  store i8* %28, i8** %21, align 4, !dbg !13804
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13805
  %30 = load i8*, i8** %29, align 4, !dbg !13805
  %31 = icmp eq i8* %28, %30, !dbg !13807
  br i1 %31, label %32, label %35, !dbg !13808

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13809
  %34 = load i8*, i8** %33, align 4, !dbg !13809
  store i8* %34, i8** %21, align 4, !dbg !13811
  br label %35, !dbg !13812

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !13813
  %37 = add i32 %36, -1, !dbg !13813
  store i32 %37, i32* %17, align 4, !dbg !13813
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13814
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %38) #24, !dbg !13815
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !13772, metadata !DIExpression()), !dbg !13774
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !13816
  br i1 %40, label %68, label %41, !dbg !13818

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13819
  %43 = load i8*, i8** %42, align 4, !dbg !13819
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !13821
  %45 = load i8*, i8** %44, align 4, !dbg !13821
  %46 = load i32, i32* %23, align 4, !dbg !13822
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #24, !dbg !13823
  %48 = load i32, i32* %23, align 4, !dbg !13824
  %49 = load i8*, i8** %42, align 4, !dbg !13825
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !13825
  store i8* %50, i8** %42, align 4, !dbg !13825
  %51 = load i8*, i8** %29, align 4, !dbg !13826
  %52 = icmp eq i8* %50, %51, !dbg !13828
  br i1 %52, label %53, label %56, !dbg !13829

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13830
  %55 = load i8*, i8** %54, align 4, !dbg !13830
  store i8* %55, i8** %42, align 4, !dbg !13832
  br label %56, !dbg !13833

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !13834
  %58 = add i32 %57, 1, !dbg !13834
  store i32 %58, i32* %17, align 4, !dbg !13834
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !13679, metadata !DIExpression()), !dbg !13835
  call void @llvm.dbg.value(metadata i32 0, metadata !13684, metadata !DIExpression()), !dbg !13835
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 6, i32 1, !dbg !13837
  store i32 0, i32* %59, align 4, !dbg !13838
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #24, !dbg !13839
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13840
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #24, !dbg !13840
  br label %73, !dbg !13841

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !13842

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13843
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !13846
  store i8* %1, i8** %64, align 4, !dbg !13847
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13848
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13849
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %struct._wait_q_t* noundef %65, [1 x i64] %2) #24, !dbg !13849
  call void @llvm.dbg.value(metadata i32 %67, metadata !13773, metadata !DIExpression()), !dbg !13774
  br label %73, !dbg !13850

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !13851
  call void @llvm.dbg.value(metadata i32 %69, metadata !13773, metadata !DIExpression()), !dbg !13774
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !13852
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13723, metadata !DIExpression()) #23, !dbg !13852
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !13854
  br i1 %70, label %72, label %71, !dbg !13855

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 194) #24, !dbg !13856
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.281, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !13856
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 194) #24, !dbg !13856
  unreachable, !dbg !13856

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !13718, metadata !DIExpression()) #23, !dbg !13852
  call void @llvm.dbg.value(metadata i32 %16, metadata !13732, metadata !DIExpression()) #23, !dbg !13857
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !13859, !srcloc !13738
  br label %73, !dbg !13860

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !13774
  ret i32 %74, !dbg !13861
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13862 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13866, metadata !DIExpression()), !dbg !13870
  call void @llvm.dbg.value(metadata i8* %1, metadata !13867, metadata !DIExpression()), !dbg !13870
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13871
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !13640, metadata !DIExpression()) #23, !dbg !13872
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13874, !srcloc !13655
  call void @llvm.dbg.value(metadata i32 undef, metadata !13652, metadata !DIExpression()) #23, !dbg !13876
  call void @llvm.dbg.value(metadata i32 undef, metadata !13653, metadata !DIExpression()) #23, !dbg !13876
  call void @llvm.dbg.value(metadata i32 undef, metadata !13646, metadata !DIExpression()) #23, !dbg !13872
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !13877
  br i1 %5, label %7, label %6, !dbg !13878

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 148) #24, !dbg !13879
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.279, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !13879
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 148) #24, !dbg !13879
  unreachable, !dbg !13879

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13652, metadata !DIExpression()) #23, !dbg !13876
  call void @llvm.dbg.value(metadata i32 undef, metadata !13646, metadata !DIExpression()) #23, !dbg !13872
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !13880
  call void @llvm.dbg.value(metadata i32 undef, metadata !13868, metadata !DIExpression()), !dbg !13870
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13881
  %9 = load i32, i32* %8, align 4, !dbg !13881
  %10 = icmp eq i32 %9, 0, !dbg !13883
  br i1 %10, label %17, label %11, !dbg !13884

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13885
  %13 = load i8*, i8** %12, align 4, !dbg !13885
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13887
  %15 = load i32, i32* %14, align 4, !dbg !13887
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #24, !dbg !13888
  call void @llvm.dbg.value(metadata i32 0, metadata !13869, metadata !DIExpression()), !dbg !13870
  br label %17, !dbg !13889

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !13890
  call void @llvm.dbg.value(metadata i32 %18, metadata !13869, metadata !DIExpression()), !dbg !13870
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !13891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !13723, metadata !DIExpression()) #23, !dbg !13891
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !13893
  br i1 %19, label %21, label %20, !dbg !13894

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 194) #24, !dbg !13895
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.281, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !13895
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 194) #24, !dbg !13895
  unreachable, !dbg !13895

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !13874
  call void @llvm.dbg.value(metadata i32 %22, metadata !13652, metadata !DIExpression()) #23, !dbg !13876
  call void @llvm.dbg.value(metadata i32 %22, metadata !13646, metadata !DIExpression()) #23, !dbg !13872
  call void @llvm.dbg.value(metadata i32 %22, metadata !13868, metadata !DIExpression()), !dbg !13870
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !13891
  call void @llvm.dbg.value(metadata i32 undef, metadata !13732, metadata !DIExpression()) #23, !dbg !13896
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #23, !dbg !13898, !srcloc !13738
  ret i32 %18, !dbg !13899
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13900 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13904, metadata !DIExpression()), !dbg !13907
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13908
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !13640, metadata !DIExpression()) #23, !dbg !13909
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13911, !srcloc !13655
  call void @llvm.dbg.value(metadata i32 undef, metadata !13652, metadata !DIExpression()) #23, !dbg !13913
  call void @llvm.dbg.value(metadata i32 undef, metadata !13653, metadata !DIExpression()) #23, !dbg !13913
  call void @llvm.dbg.value(metadata i32 undef, metadata !13646, metadata !DIExpression()) #23, !dbg !13909
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #24, !dbg !13914
  br i1 %4, label %6, label %5, !dbg !13915

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 148) #24, !dbg !13916
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.279, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #24, !dbg !13916
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.278, i32 0, i32 0), i32 noundef 148) #24, !dbg !13916
  unreachable, !dbg !13916

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13652, metadata !DIExpression()) #23, !dbg !13913
  call void @llvm.dbg.value(metadata i32 undef, metadata !13646, metadata !DIExpression()) #23, !dbg !13909
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #24, !dbg !13917
  call void @llvm.dbg.value(metadata i32 undef, metadata !13905, metadata !DIExpression()), !dbg !13907
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #24, !dbg !13918
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13906, metadata !DIExpression()), !dbg !13907
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13919
  br i1 %9, label %15, label %10, !dbg !13920

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13679, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.value(metadata i32 -35, metadata !13684, metadata !DIExpression()), !dbg !13921
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 6, i32 1, !dbg !13924
  store i32 -35, i32* %12, align 4, !dbg !13925
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #24, !dbg !13926
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #24, !dbg !13918
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13906, metadata !DIExpression()), !dbg !13907
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !13919
  br i1 %14, label %15, label %10, !dbg !13920, !llvm.loop !13927

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !13911
  call void @llvm.dbg.value(metadata i32 %16, metadata !13652, metadata !DIExpression()) #23, !dbg !13913
  call void @llvm.dbg.value(metadata i32 %16, metadata !13646, metadata !DIExpression()) #23, !dbg !13909
  call void @llvm.dbg.value(metadata i32 %16, metadata !13905, metadata !DIExpression()), !dbg !13907
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13929
  store i32 0, i32* %17, align 4, !dbg !13930
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13931
  %19 = load i8*, i8** %18, align 4, !dbg !13931
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13932
  store i8* %19, i8** %20, align 4, !dbg !13933
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13934
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #24, !dbg !13934
  ret void, !dbg !13935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13936 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13947, metadata !DIExpression()), !dbg !13948
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13949
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13950
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13951
  store i32 0, i32* %3, align 4, !dbg !13952
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13953
  tail call fastcc void @z_waitq_init.284(%struct._wait_q_t* noundef %4) #25, !dbg !13954
  ret i32 0, !dbg !13955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.284(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13956 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13960, metadata !DIExpression()), !dbg !13961
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13962
  tail call fastcc void @sys_dlist_init.285(%struct._dnode* noundef %2) #25, !dbg !13963
  ret void, !dbg !13964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.285(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13965 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13970, metadata !DIExpression()), !dbg !13971
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13972
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13973
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13974
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13975
  ret void, !dbg !13976
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13977 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13986, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13985, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata i8 0, metadata !13993, metadata !DIExpression()), !dbg !13998
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13999, !srcloc !14008
  call void @llvm.dbg.value(metadata i32 %4, metadata !14002, metadata !DIExpression()) #23, !dbg !14009
  %5 = icmp eq i32 %4, 0, !dbg !14010
  br i1 %5, label %7, label %6, !dbg !14011

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 101) #24, !dbg !14012
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.291, i32 0, i32 0)) #24, !dbg !14012
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 101) #24, !dbg !14012
  unreachable, !dbg !14012

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.292, metadata !14014, metadata !DIExpression()) #23, !dbg !14021
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14023, !srcloc !14029
  call void @llvm.dbg.value(metadata i32 undef, metadata !14026, metadata !DIExpression()) #23, !dbg !14030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14027, metadata !DIExpression()) #23, !dbg !14030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14020, metadata !DIExpression()) #23, !dbg !14021
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14031
  br i1 %9, label %11, label %10, !dbg !14034

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 148) #24, !dbg !14035
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.295, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14035
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 148) #24, !dbg !14035
  unreachable, !dbg !14035

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !14023
  call void @llvm.dbg.value(metadata i32 %12, metadata !14026, metadata !DIExpression()) #23, !dbg !14030
  call void @llvm.dbg.value(metadata i32 %12, metadata !14020, metadata !DIExpression()) #23, !dbg !14021
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14037
  call void @llvm.dbg.value(metadata i32 %12, metadata !13988, metadata !DIExpression()), !dbg !13998
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14038
  %14 = load i32, i32* %13, align 4, !dbg !14038
  %15 = icmp eq i32 %14, 0, !dbg !14038
  br i1 %15, label %21, label %16, !dbg !14038

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14038
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !14038
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14038
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !14038
  br i1 %20, label %27, label %39, !dbg !14040, !prof !14041

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14042
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !14044
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !14044
  %25 = load i8, i8* %24, align 2, !dbg !14044
  %26 = sext i8 %25 to i32, !dbg !14042
  br label %30, !dbg !14045

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14046
  %29 = load i32, i32* %28, align 4, !dbg !14046
  br label %30, !dbg !14045

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !14047
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !14045
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14048
  store i32 %32, i32* %33, align 4, !dbg !14049
  %34 = add i32 %14, 1, !dbg !14050
  store i32 %34, i32* %13, align 4, !dbg !14050
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14051
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.292, metadata !14058, metadata !DIExpression()) #23, !dbg !14059
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14061
  br i1 %36, label %38, label %37, !dbg !14064

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 194) #24, !dbg !14065
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.297, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14065
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 194) #24, !dbg !14065
  unreachable, !dbg !14065

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !14053, metadata !DIExpression()) #23, !dbg !14059
  call void @llvm.dbg.value(metadata i32 %12, metadata !14067, metadata !DIExpression()) #23, !dbg !14070
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14072, !srcloc !14073
  br label %97, !dbg !14074

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !14075
  br i1 %40, label %41, label %45, !dbg !14077, !prof !14078

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.292, metadata !14058, metadata !DIExpression()) #23, !dbg !14079
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14082
  br i1 %42, label %44, label %43, !dbg !14083

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 194) #24, !dbg !14084
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.297, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14084
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 194) #24, !dbg !14084
  unreachable, !dbg !14084

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !14053, metadata !DIExpression()) #23, !dbg !14079
  call void @llvm.dbg.value(metadata i32 %12, metadata !14067, metadata !DIExpression()) #23, !dbg !14085
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14087, !srcloc !14073
  br label %97, !dbg !14088

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !14089
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !14089
  %48 = load i8, i8* %47, align 2, !dbg !14089
  %49 = sext i8 %48 to i32, !dbg !14090
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !14091
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !14091
  %52 = load i8, i8* %51, align 2, !dbg !14091
  %53 = sext i8 %52 to i32, !dbg !14092
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #25, !dbg !14093
  call void @llvm.dbg.value(metadata i32 %54, metadata !13987, metadata !DIExpression()), !dbg !13998
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #25, !dbg !14094
  br i1 %55, label %56, label %58, !dbg !14096

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #25, !dbg !14097
  call void @llvm.dbg.value(metadata i1 %57, metadata !13993, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13998
  br label %58, !dbg !14099

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13993, metadata !DIExpression()), !dbg !13998
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14100
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14101
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.292, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #24, !dbg !14101
  call void @llvm.dbg.value(metadata i32 %62, metadata !13994, metadata !DIExpression()), !dbg !13998
  %63 = icmp eq i32 %62, 0, !dbg !14102
  br i1 %63, label %97, label %64, !dbg !14104

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.292, metadata !14014, metadata !DIExpression()) #23, !dbg !14105
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14107, !srcloc !14029
  call void @llvm.dbg.value(metadata i32 undef, metadata !14026, metadata !DIExpression()) #23, !dbg !14109
  call void @llvm.dbg.value(metadata i32 undef, metadata !14027, metadata !DIExpression()) #23, !dbg !14109
  call void @llvm.dbg.value(metadata i32 undef, metadata !14020, metadata !DIExpression()) #23, !dbg !14105
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14110
  br i1 %66, label %68, label %67, !dbg !14111

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 148) #24, !dbg !14112
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.295, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14112
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 148) #24, !dbg !14112
  unreachable, !dbg !14112

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !14107
  call void @llvm.dbg.value(metadata i32 %69, metadata !14026, metadata !DIExpression()) #23, !dbg !14109
  call void @llvm.dbg.value(metadata i32 %69, metadata !14020, metadata !DIExpression()) #23, !dbg !14105
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14113
  call void @llvm.dbg.value(metadata i32 %69, metadata !13988, metadata !DIExpression()), !dbg !13998
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !14114
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !14114
  br i1 %71, label %90, label %72, !dbg !14115, !prof !14078

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head.298(%struct._wait_q_t* noundef nonnull %60) #25, !dbg !14116
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13995, metadata !DIExpression()), !dbg !14117
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !14118
  br i1 %74, label %83, label %75, !dbg !14119

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !14120
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !14120
  %78 = load i8, i8* %77, align 2, !dbg !14120
  %79 = sext i8 %78 to i32, !dbg !14121
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14122
  %81 = load i32, i32* %80, align 4, !dbg !14122
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #25, !dbg !14123
  br label %86, !dbg !14119

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14124
  %85 = load i32, i32* %84, align 4, !dbg !14124
  br label %86, !dbg !14119

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !14119
  call void @llvm.dbg.value(metadata i32 %87, metadata !13987, metadata !DIExpression()), !dbg !13998
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #25, !dbg !14125
  %89 = select i1 %88, i1 true, i1 %59, !dbg !14126
  call void @llvm.dbg.value(metadata i1 %89, metadata !13993, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13998
  call void @llvm.dbg.value(metadata i8 poison, metadata !13993, metadata !DIExpression()), !dbg !13998
  br i1 %89, label %91, label %93, !dbg !14127

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13993, metadata !DIExpression()), !dbg !13998
  br i1 %59, label %91, label %93, !dbg !14127

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !14128
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.292, [1 x i32] %92) #24, !dbg !14128
  br label %97, !dbg !14131

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.292, metadata !14058, metadata !DIExpression()) #23, !dbg !14132
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14135
  br i1 %94, label %96, label %95, !dbg !14136

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 194) #24, !dbg !14137
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.297, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14137
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 194) #24, !dbg !14137
  unreachable, !dbg !14137

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !14053, metadata !DIExpression()) #23, !dbg !14132
  call void @llvm.dbg.value(metadata i32 %69, metadata !14067, metadata !DIExpression()) #23, !dbg !14138
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !14140, !srcloc !14073
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13998
  ret i32 %98, !dbg !14141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14146, metadata !DIExpression()), !dbg !14149
  call void @llvm.dbg.value(metadata i32 %1, metadata !14147, metadata !DIExpression()), !dbg !14149
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #25, !dbg !14150
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !14150
  call void @llvm.dbg.value(metadata i32 %4, metadata !14148, metadata !DIExpression()), !dbg !14149
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #25, !dbg !14151
  call void @llvm.dbg.value(metadata i32 %5, metadata !14148, metadata !DIExpression()), !dbg !14149
  ret i32 %5, !dbg !14152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14157, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.value(metadata i32 %1, metadata !14158, metadata !DIExpression()), !dbg !14159
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !14160
  ret i1 %3, !dbg !14161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !14162 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14166, metadata !DIExpression()), !dbg !14168
  call void @llvm.dbg.value(metadata i32 %1, metadata !14167, metadata !DIExpression()), !dbg !14168
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14169
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !14169
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14171
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14171
  %7 = load i8, i8* %6, align 2, !dbg !14171
  %8 = sext i8 %7 to i32, !dbg !14172
  %9 = icmp eq i32 %8, %1, !dbg !14173
  br i1 %9, label %12, label %10, !dbg !14174

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #24, !dbg !14175
  br label %12, !dbg !14177

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !14168
  ret i1 %13, !dbg !14178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.298(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !14179 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14183, metadata !DIExpression()), !dbg !14184
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14185
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.299(%struct._dnode* noundef %2) #25, !dbg !14186
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14187
  ret %struct.k_thread* %4, !dbg !14188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.299(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14189 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14193, metadata !DIExpression()), !dbg !14194
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.300(%struct._dnode* noundef %0) #25, !dbg !14195
  br i1 %2, label %6, label %3, !dbg !14195

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14196
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14196
  br label %6, !dbg !14195

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14195
  ret %struct._dnode* %7, !dbg !14197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.300(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14198 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14202, metadata !DIExpression()), !dbg !14203
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14204
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14204
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14205
  ret i1 %4, !dbg !14206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14209, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata i32 %1, metadata !14210, metadata !DIExpression()), !dbg !14211
  %3 = icmp slt i32 %0, %1, !dbg !14212
  ret i1 %3, !dbg !14213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !14214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14216, metadata !DIExpression()), !dbg !14217
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #25, !dbg !14218
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !14218
  ret i32 %3, !dbg !14219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !14220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14224, metadata !DIExpression()), !dbg !14225
  %2 = icmp sgt i32 %0, -128, !dbg !14226
  ret i1 %2, !dbg !14227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !14228 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14230, metadata !DIExpression()), !dbg !14234
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14235, !srcloc !14008
  call void @llvm.dbg.value(metadata i32 %2, metadata !14002, metadata !DIExpression()) #23, !dbg !14240
  %3 = icmp eq i32 %2, 0, !dbg !14241
  br i1 %3, label %5, label %4, !dbg !14242

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 205) #24, !dbg !14243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.291, i32 0, i32 0)) #24, !dbg !14243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 205) #24, !dbg !14243
  unreachable, !dbg !14243

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14245
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !14245
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14245
  br i1 %8, label %41, label %9, !dbg !14247

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14248
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !14248
  br i1 %11, label %12, label %41, !dbg !14250

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14251
  %14 = load i32, i32* %13, align 4, !dbg !14251
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !14254

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 229) #24, !dbg !14255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 229) #24, !dbg !14255
  unreachable, !dbg !14255

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !14257
  store i32 %17, i32* %13, align 4, !dbg !14257
  br label %41, !dbg !14260

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.292, metadata !14014, metadata !DIExpression()) #23, !dbg !14261
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14263, !srcloc !14029
  call void @llvm.dbg.value(metadata i32 undef, metadata !14026, metadata !DIExpression()) #23, !dbg !14265
  call void @llvm.dbg.value(metadata i32 undef, metadata !14027, metadata !DIExpression()) #23, !dbg !14265
  call void @llvm.dbg.value(metadata i32 undef, metadata !14020, metadata !DIExpression()) #23, !dbg !14261
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14266
  br i1 %20, label %22, label %21, !dbg !14267

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 148) #24, !dbg !14268
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.295, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14268
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 148) #24, !dbg !14268
  unreachable, !dbg !14268

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !14263
  call void @llvm.dbg.value(metadata i32 %23, metadata !14026, metadata !DIExpression()) #23, !dbg !14265
  call void @llvm.dbg.value(metadata i32 %23, metadata !14020, metadata !DIExpression()) #23, !dbg !14261
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14269
  call void @llvm.dbg.value(metadata i32 %23, metadata !14232, metadata !DIExpression()), !dbg !14234
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14270
  %25 = load i32, i32* %24, align 4, !dbg !14270
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #25, !dbg !14271
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14272
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #24, !dbg !14273
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14231, metadata !DIExpression()), !dbg !14234
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !14274
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !14275
  br i1 %29, label %37, label %30, !dbg !14277

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !14278
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !14278
  %33 = load i8, i8* %32, align 2, !dbg !14278
  %34 = sext i8 %33 to i32, !dbg !14280
  store i32 %34, i32* %24, align 4, !dbg !14281
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14282, metadata !DIExpression()), !dbg !14288
  call void @llvm.dbg.value(metadata i32 0, metadata !14287, metadata !DIExpression()), !dbg !14288
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 6, i32 1, !dbg !14290
  store i32 0, i32* %35, align 4, !dbg !14291
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #24, !dbg !14292
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !14293
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.292, [1 x i32] %36) #24, !dbg !14293
  br label %41, !dbg !14294

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !14295
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14297
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.292, metadata !14058, metadata !DIExpression()) #23, !dbg !14297
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14299
  br i1 %38, label %40, label %39, !dbg !14300

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 194) #24, !dbg !14301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.297, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.292) #24, !dbg !14301
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.294, i32 0, i32 0), i32 noundef 194) #24, !dbg !14301
  unreachable, !dbg !14301

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !14053, metadata !DIExpression()) #23, !dbg !14297
  call void @llvm.dbg.value(metadata i32 %23, metadata !14067, metadata !DIExpression()) #23, !dbg !14302
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14304, !srcloc !14073
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !14234
  ret i32 %42, !dbg !14305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14310, metadata !DIExpression()), !dbg !14314
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14311, metadata !DIExpression()), !dbg !14314
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14315
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14315
  %5 = load i8, i8* %4, align 2, !dbg !14315
  call void @llvm.dbg.value(metadata i8 %5, metadata !14312, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14314
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14316
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14316
  %8 = load i8, i8* %7, align 2, !dbg !14316
  call void @llvm.dbg.value(metadata i8 %8, metadata !14313, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14314
  %9 = icmp eq i8 %8, %5, !dbg !14317
  %10 = sext i8 %5 to i32, !dbg !14319
  %11 = sext i8 %8 to i32, !dbg !14319
  %12 = sub nsw i32 %11, %10, !dbg !14319
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14319
  ret i32 %13, !dbg !14320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14321 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14325, metadata !DIExpression()), !dbg !14326
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !14327
  %3 = icmp eq i32 %2, 0, !dbg !14329
  br i1 %3, label %8, label %4, !dbg !14330

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !14331
  %6 = add i32 %5, %2, !dbg !14333
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14334
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !14335
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !14336
  br label %8, !dbg !14337

8:                                                ; preds = %4, %1
  ret void, !dbg !14338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14339 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14343, metadata !DIExpression()), !dbg !14345
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14346
  call void @llvm.dbg.value(metadata i32 %1, metadata !14344, metadata !DIExpression()), !dbg !14345
  ret i32 %1, !dbg !14347
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14352, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 %1, metadata !14353, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 0, metadata !14354, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !14370
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14372, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !14379
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !14379
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !14370
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14380
  br i1 %4, label %6, label %5, !dbg !14383

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !14384
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14384
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !14384
  unreachable, !dbg !14384

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !14379
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !14370
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14386
  call void @llvm.dbg.value(metadata i32 undef, metadata !14360, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i32 undef, metadata !14354, metadata !DIExpression()), !dbg !14362
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14387
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !14390
  %8 = icmp sgt i32 %0, 0, !dbg !14391
  %9 = icmp sgt i32 %7, 2, !dbg !14393
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14393
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14393
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14394
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14395
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14396
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !14403
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !14403
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14405
  br i1 %12, label %14, label %13, !dbg !14408

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !14409
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14409
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !14409
  unreachable, !dbg !14409

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14372
  call void @llvm.dbg.value(metadata i32 %15, metadata !14375, metadata !DIExpression()) #23, !dbg !14379
  call void @llvm.dbg.value(metadata i32 %15, metadata !14369, metadata !DIExpression()) #23, !dbg !14370
  call void @llvm.dbg.value(metadata i32 %15, metadata !14360, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !14403
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !14414
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14416, !srcloc !14417
  call void @llvm.dbg.value(metadata i32 1, metadata !14354, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i32 undef, metadata !14354, metadata !DIExpression()), !dbg !14362
  ret void, !dbg !14418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14423, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i32 %0, metadata !14425, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14440
  call void @llvm.dbg.value(metadata i32 1000, metadata !14428, metadata !DIExpression()), !dbg !14440
  call void @llvm.dbg.value(metadata i32 10000, metadata !14429, metadata !DIExpression()), !dbg !14440
  call void @llvm.dbg.value(metadata i8 1, metadata !14430, metadata !DIExpression()), !dbg !14440
  call void @llvm.dbg.value(metadata i1 true, metadata !14431, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14440
  call void @llvm.dbg.value(metadata i1 true, metadata !14432, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14440
  call void @llvm.dbg.value(metadata i8 0, metadata !14433, metadata !DIExpression()), !dbg !14440
  call void @llvm.dbg.value(metadata i1 true, metadata !14434, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14440
  call void @llvm.dbg.value(metadata i1 false, metadata !14435, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14440
  call void @llvm.dbg.value(metadata i64 0, metadata !14436, metadata !DIExpression()), !dbg !14440
  call void @llvm.dbg.value(metadata i64 0, metadata !14436, metadata !DIExpression()), !dbg !14440
  %2 = mul i32 %0, 10, !dbg !14442
  ret i32 %2, !dbg !14448
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14451, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !14454
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14456, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !14454
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14459
  br i1 %3, label %5, label %4, !dbg !14460

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !14461
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14461
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !14461
  unreachable, !dbg !14461

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14456
  call void @llvm.dbg.value(metadata i32 %6, metadata !14375, metadata !DIExpression()) #23, !dbg !14458
  call void @llvm.dbg.value(metadata i32 %6, metadata !14369, metadata !DIExpression()) #23, !dbg !14454
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14462
  call void @llvm.dbg.value(metadata i32 %6, metadata !14452, metadata !DIExpression()), !dbg !14453
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14463
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14465
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14466
  br i1 %9, label %10, label %14, !dbg !14467

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14468
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !14470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !14470
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14472
  br i1 %11, label %13, label %12, !dbg !14473

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !14474
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14474
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !14474
  unreachable, !dbg !14474

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14397, metadata !DIExpression()) #23, !dbg !14470
  call void @llvm.dbg.value(metadata i32 %6, metadata !14411, metadata !DIExpression()) #23, !dbg !14475
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14477, !srcloc !14417
  br label %33, !dbg !14478

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14479
  %15 = tail call fastcc i32 @slice_time() #25, !dbg !14480
  %16 = icmp eq i32 %15, 0, !dbg !14480
  br i1 %16, label %27, label %17, !dbg !14482

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #25, !dbg !14483
  br i1 %18, label %19, label %27, !dbg !14484

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14485
  %21 = icmp sgt i32 %20, %0, !dbg !14488
  br i1 %21, label %25, label %22, !dbg !14489

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14490
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #25, !dbg !14490
  call void @llvm.dbg.value(metadata i32 %24, metadata !14452, metadata !DIExpression()), !dbg !14453
  br label %28, !dbg !14492

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14493
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14493
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14495
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14453
  call void @llvm.dbg.value(metadata i32 %29, metadata !14452, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !14497
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !14497
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14499
  br i1 %30, label %32, label %31, !dbg !14500

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !14501
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14501
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !14501
  unreachable, !dbg !14501

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14397, metadata !DIExpression()) #23, !dbg !14497
  call void @llvm.dbg.value(metadata i32 %29, metadata !14411, metadata !DIExpression()) #23, !dbg !14502
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14504, !srcloc !14417
  br label %33, !dbg !14505

33:                                               ; preds = %32, %13
  ret void, !dbg !14505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14510, metadata !DIExpression()), !dbg !14512
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !14513
  %3 = icmp eq i32 %2, 0, !dbg !14513
  br i1 %3, label %16, label %4, !dbg !14514

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14515
  br i1 %5, label %16, label %6, !dbg !14516

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14517
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14517
  %9 = load i8, i8* %8, align 2, !dbg !14517
  %10 = sext i8 %9 to i32, !dbg !14518
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14519
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.317(i32 noundef %10, i32 noundef %11) #25, !dbg !14520
  br i1 %12, label %16, label %13, !dbg !14521

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !14522
  %15 = xor i1 %14, true, !dbg !14523
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14512
  call void @llvm.dbg.value(metadata i1 %17, metadata !14511, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14512
  ret i1 %17, !dbg !14524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14525 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14529, metadata !DIExpression()), !dbg !14531
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14532
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14530, metadata !DIExpression()), !dbg !14531
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !14533
  br i1 %3, label %5, label %4, !dbg !14535

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !14536
  br label %5, !dbg !14538

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14529, metadata !DIExpression()), !dbg !14531
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14539
  ret i32 %6, !dbg !14540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14541 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14543, metadata !DIExpression()), !dbg !14545
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14546
  %3 = load i8, i8* %2, align 1, !dbg !14546
  call void @llvm.dbg.value(metadata i8 %3, metadata !14544, metadata !DIExpression()), !dbg !14545
  %4 = and i8 %3, 31, !dbg !14547
  %5 = icmp ne i8 %4, 0, !dbg !14548
  ret i1 %5, !dbg !14549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14552, metadata !DIExpression()), !dbg !14553
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14554
  br i1 %2, label %3, label %7, !dbg !14556

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14557, metadata !DIExpression()) #23, !dbg !14560
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14563
  %5 = load i8, i8* %4, align 1, !dbg !14564
  %6 = and i8 %5, 127, !dbg !14564
  store i8 %6, i8* %4, align 1, !dbg !14564
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14565, metadata !DIExpression()) #23, !dbg !14568
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14572
  br label %7, !dbg !14573

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14574, metadata !DIExpression()) #23, !dbg !14577
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14579
  %9 = load i8, i8* %8, align 1, !dbg !14580
  %10 = or i8 %9, -128, !dbg !14580
  store i8 %10, i8* %8, align 1, !dbg !14580
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14581, metadata !DIExpression()) #23, !dbg !14584
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14588, metadata !DIExpression()) #23, !dbg !14596
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14594, metadata !DIExpression()) #23, !dbg !14596
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14598
  br i1 %11, label %12, label %13, !dbg !14601

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 186) #24, !dbg !14602
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 186) #24, !dbg !14602
  unreachable, !dbg !14602

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.312(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14604
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14595, metadata !DIExpression()) #23, !dbg !14596
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14606
  br i1 %15, label %26, label %16, !dbg !14604

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14595, metadata !DIExpression()) #23, !dbg !14596
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14608
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14595, metadata !DIExpression()) #23, !dbg !14596
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #24, !dbg !14609
  %20 = icmp sgt i32 %19, 0, !dbg !14612
  br i1 %20, label %21, label %23, !dbg !14613

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14614
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #24, !dbg !14616
  br label %28, !dbg !14617

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #24, !dbg !14606
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14595, metadata !DIExpression()) #23, !dbg !14596
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14606
  br i1 %25, label %26, label %16, !dbg !14604, !llvm.loop !14618

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14620
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #24, !dbg !14621
  br label %28, !dbg !14622

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14623
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14624
  %31 = zext i1 %30 to i32, !dbg !14624
  tail call fastcc void @update_cache(i32 noundef %31) #25, !dbg !14625
  ret void, !dbg !14626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14627 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14629, metadata !DIExpression()), !dbg !14630
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #25, !dbg !14631
  ret i1 %2, !dbg !14632
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14633 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14635, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14636, metadata !DIExpression()), !dbg !14637
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !14638
  br i1 %3, label %4, label %5, !dbg !14641

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1139) #24, !dbg !14642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1139) #24, !dbg !14642
  unreachable, !dbg !14642

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14644
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #25, !dbg !14645
  ret void, !dbg !14646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14647 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14649, metadata !DIExpression()), !dbg !14650
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14651
  ret i1 %2, !dbg !14652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.312(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14653 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14657, metadata !DIExpression()), !dbg !14658
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.315(%struct._dnode* noundef %0) #25, !dbg !14659
  br i1 %2, label %6, label %3, !dbg !14659

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14660
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14660
  br label %6, !dbg !14659

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14659
  ret %struct._dnode* %7, !dbg !14661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14662 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14666, metadata !DIExpression()), !dbg !14670
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14667, metadata !DIExpression()), !dbg !14670
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14671
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14671
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14668, metadata !DIExpression()), !dbg !14670
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14672
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14673
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14674
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14675
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14676
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14677
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14678
  ret void, !dbg !14679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14680 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14684, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14685, metadata !DIExpression()), !dbg !14686
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14687
  br i1 %3, label %6, label %4, !dbg !14688

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !14689
  br label %6, !dbg !14688

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14688
  ret %struct._dnode* %7, !dbg !14690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14691 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14695, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14696, metadata !DIExpression()), !dbg !14698
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14699
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14699
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14697, metadata !DIExpression()), !dbg !14698
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14700
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14701
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14702
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14703
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14704
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14705
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14706
  ret void, !dbg !14707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14710, metadata !DIExpression()), !dbg !14712
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14713
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14720, metadata !DIExpression()) #23, !dbg !14722
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14723
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14724
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14724
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14711, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14725, metadata !DIExpression()) #23, !dbg !14731
  call void @llvm.dbg.value(metadata i32 %0, metadata !14730, metadata !DIExpression()) #23, !dbg !14731
  %6 = icmp eq i32 %0, 0, !dbg !14734
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14736
  br i1 %6, label %8, label %18, !dbg !14737

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14738
  br i1 %9, label %10, label %11, !dbg !14741

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 137) #24, !dbg !14742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.314, i32 0, i32 0)) #24, !dbg !14742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 137) #24, !dbg !14742
  unreachable, !dbg !14742

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #24, !dbg !14744
  br i1 %12, label %18, label %13, !dbg !14746

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !14747
  br i1 %14, label %18, label %15, !dbg !14749

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #24, !dbg !14750
  %17 = icmp eq i32 %16, 0, !dbg !14750
  br i1 %17, label %21, label %18, !dbg !14752

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14753
  br i1 %19, label %21, label %20, !dbg !14756

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14757
  br label %21, !dbg !14759

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14736
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14736
  ret void, !dbg !14760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14761 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14765, metadata !DIExpression()), !dbg !14768
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14766, metadata !DIExpression()), !dbg !14768
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.312(%struct._dnode* noundef %0) #25, !dbg !14769
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14767, metadata !DIExpression()), !dbg !14768
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14766, metadata !DIExpression()), !dbg !14768
  ret %struct.k_thread* %3, !dbg !14770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14771 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14773, metadata !DIExpression()), !dbg !14774
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14775
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14776
  %4 = xor i1 %3, true, !dbg !14777
  ret i1 %4, !dbg !14778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14779 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14781, metadata !DIExpression()), !dbg !14782
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14783
  %3 = load i16, i16* %2, align 2, !dbg !14783
  %4 = icmp ult i16 %3, 128, !dbg !14784
  %5 = zext i1 %4 to i32, !dbg !14784
  ret i32 %5, !dbg !14785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14786 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14792, metadata !DIExpression()), !dbg !14793
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14794
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !14795
  %4 = xor i1 %3, true, !dbg !14796
  ret i1 %4, !dbg !14797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14798 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14804, metadata !DIExpression()), !dbg !14805
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14806
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14806
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14807
  ret i1 %4, !dbg !14808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14809 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14811, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14812, metadata !DIExpression()), !dbg !14813
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14814
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14814
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14815
  br i1 %5, label %9, label %6, !dbg !14816

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14817
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14817
  br label %9, !dbg !14816

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14816
  ret %struct._dnode* %10, !dbg !14818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.315(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14819 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14823, metadata !DIExpression()), !dbg !14824
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14825
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14825
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14826
  ret i1 %4, !dbg !14827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14828 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14832, metadata !DIExpression()), !dbg !14835
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14836
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14836
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14833, metadata !DIExpression()), !dbg !14835
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14837
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14837
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14834, metadata !DIExpression()), !dbg !14835
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14838
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14839
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14840
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14841
  tail call fastcc void @sys_dnode_init.316(%struct._dnode* noundef %0) #25, !dbg !14842
  ret void, !dbg !14843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.316(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14844 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14846, metadata !DIExpression()), !dbg !14847
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14848
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14849
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14850
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14851
  ret void, !dbg !14852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14857, metadata !DIExpression()), !dbg !14859
  call void @llvm.dbg.value(metadata i32 %1, metadata !14858, metadata !DIExpression()), !dbg !14859
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14860
  %4 = load i8, i8* %3, align 1, !dbg !14860
  %5 = zext i8 %4 to i32, !dbg !14861
  %6 = and i32 %5, %1, !dbg !14862
  %7 = icmp ne i32 %6, 0, !dbg !14863
  ret i1 %7, !dbg !14864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.317(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14867, metadata !DIExpression()), !dbg !14869
  call void @llvm.dbg.value(metadata i32 %1, metadata !14868, metadata !DIExpression()), !dbg !14869
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.318(i32 noundef %0, i32 noundef %1) #25, !dbg !14870
  ret i1 %3, !dbg !14871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.318(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14874, metadata !DIExpression()), !dbg !14876
  call void @llvm.dbg.value(metadata i32 %1, metadata !14875, metadata !DIExpression()), !dbg !14876
  %3 = icmp slt i32 %0, %1, !dbg !14877
  ret i1 %3, !dbg !14878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14881, metadata !DIExpression()), !dbg !14885
  call void @llvm.dbg.value(metadata i32 0, metadata !14882, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !14887
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14889, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !14887
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14892
  br i1 %3, label %5, label %4, !dbg !14893

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !14894
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14894
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !14894
  unreachable, !dbg !14894

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !14887
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14895
  call void @llvm.dbg.value(metadata i32 undef, metadata !14884, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata i32 undef, metadata !14882, metadata !DIExpression()), !dbg !14886
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14896
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !14901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !14901
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14903
  br i1 %6, label %8, label %7, !dbg !14904

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !14905
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14905
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !14905
  unreachable, !dbg !14905

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14889
  call void @llvm.dbg.value(metadata i32 %9, metadata !14375, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 %9, metadata !14369, metadata !DIExpression()) #23, !dbg !14887
  call void @llvm.dbg.value(metadata i32 %9, metadata !14884, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !14901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !14906
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14908, !srcloc !14417
  call void @llvm.dbg.value(metadata i32 1, metadata !14882, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata i32 undef, metadata !14882, metadata !DIExpression()), !dbg !14886
  ret void, !dbg !14909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14910 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14912, metadata !DIExpression()), !dbg !14913
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14914
  br i1 %2, label %27, label %3, !dbg !14916

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !14917
  br i1 %4, label %5, label %27, !dbg !14918

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14574, metadata !DIExpression()) #23, !dbg !14919
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14922
  %7 = load i8, i8* %6, align 1, !dbg !14923
  %8 = or i8 %7, -128, !dbg !14923
  store i8 %8, i8* %6, align 1, !dbg !14923
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14581, metadata !DIExpression()) #23, !dbg !14924
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14588, metadata !DIExpression()) #23, !dbg !14926
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14594, metadata !DIExpression()) #23, !dbg !14926
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14928
  br i1 %9, label %10, label %11, !dbg !14929

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 186) #24, !dbg !14930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 186) #24, !dbg !14930
  unreachable, !dbg !14930

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.312(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14931
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14595, metadata !DIExpression()) #23, !dbg !14926
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14932
  br i1 %13, label %24, label %14, !dbg !14931

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14595, metadata !DIExpression()) #23, !dbg !14926
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14933
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14595, metadata !DIExpression()) #23, !dbg !14926
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #24, !dbg !14934
  %18 = icmp sgt i32 %17, 0, !dbg !14935
  br i1 %18, label %19, label %21, !dbg !14936

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14937
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #24, !dbg !14938
  br label %26, !dbg !14939

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #24, !dbg !14932
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14595, metadata !DIExpression()) #23, !dbg !14926
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14932
  br i1 %23, label %24, label %14, !dbg !14931, !llvm.loop !14940

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14942
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #24, !dbg !14943
  br label %26, !dbg !14944

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !14945
  br label %27, !dbg !14946

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14948 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14950, metadata !DIExpression()), !dbg !14951
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14952
  br i1 %2, label %6, label %3, !dbg !14953

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !14954
  %5 = xor i1 %4, true, !dbg !14953
  br label %6, !dbg !14953

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14956 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14958, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata i32 0, metadata !14959, metadata !DIExpression()), !dbg !14963
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !14964
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14966, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !14968
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !14968
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !14964
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14969
  br i1 %3, label %5, label %4, !dbg !14970

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !14971
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14971
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !14971
  unreachable, !dbg !14971

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !14968
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !14964
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14961, metadata !DIExpression()), !dbg !14963
  call void @llvm.dbg.value(metadata i32 undef, metadata !14959, metadata !DIExpression()), !dbg !14963
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !14973
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !14976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !14976
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14978
  br i1 %6, label %8, label %7, !dbg !14979

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !14980
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14980
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !14980
  unreachable, !dbg !14980

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14966
  call void @llvm.dbg.value(metadata i32 %9, metadata !14375, metadata !DIExpression()) #23, !dbg !14968
  call void @llvm.dbg.value(metadata i32 %9, metadata !14369, metadata !DIExpression()) #23, !dbg !14964
  call void @llvm.dbg.value(metadata i32 %9, metadata !14961, metadata !DIExpression()), !dbg !14963
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !14976
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !14981
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14983, !srcloc !14417
  call void @llvm.dbg.value(metadata i32 1, metadata !14959, metadata !DIExpression()), !dbg !14963
  call void @llvm.dbg.value(metadata i32 undef, metadata !14959, metadata !DIExpression()), !dbg !14963
  ret void, !dbg !14984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14985 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14987, metadata !DIExpression()), !dbg !14989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !14990
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14992, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !14994
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !14994
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !14990
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14995
  br i1 %3, label %5, label %4, !dbg !14996

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !14997
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14997
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !14997
  unreachable, !dbg !14997

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14992
  call void @llvm.dbg.value(metadata i32 %6, metadata !14375, metadata !DIExpression()) #23, !dbg !14994
  call void @llvm.dbg.value(metadata i32 %6, metadata !14369, metadata !DIExpression()) #23, !dbg !14990
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14998
  call void @llvm.dbg.value(metadata i32 %6, metadata !14988, metadata !DIExpression()), !dbg !14989
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !14999
  br i1 %7, label %8, label %12, !dbg !15001

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15002
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15005
  br i1 %9, label %11, label %10, !dbg !15006

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15007
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15007
  unreachable, !dbg !15007

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14397, metadata !DIExpression()) #23, !dbg !15002
  call void @llvm.dbg.value(metadata i32 %6, metadata !14411, metadata !DIExpression()) #23, !dbg !15008
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15010, !srcloc !14417
  br label %14, !dbg !15011

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.323(%struct.k_thread* noundef %0) #25, !dbg !15012
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15013
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15014
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !15014
  br label %14, !dbg !15015

14:                                               ; preds = %12, %11
  ret void, !dbg !15015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15016 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15018, metadata !DIExpression()), !dbg !15019
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15020
  %3 = load i8, i8* %2, align 1, !dbg !15020
  %4 = and i8 %3, 4, !dbg !15021
  %5 = icmp eq i8 %4, 0, !dbg !15022
  ret i1 %5, !dbg !15023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.323(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15024 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15026, metadata !DIExpression()), !dbg !15027
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15028
  %3 = load i8, i8* %2, align 1, !dbg !15029
  %4 = and i8 %3, -5, !dbg !15029
  store i8 %4, i8* %2, align 1, !dbg !15029
  ret void, !dbg !15030
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15031 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15034, metadata !DIExpression()), !dbg !15035
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15033, metadata !DIExpression()), !dbg !15035
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !15036
  br i1 %4, label %5, label %12, !dbg !15038

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !15039
  br i1 %6, label %7, label %12, !dbg !15040

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15041, metadata !DIExpression()) #23, !dbg !15047
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15046, metadata !DIExpression()) #23, !dbg !15047
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15050, metadata !DIExpression()) #23, !dbg !15055
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !15057
  br i1 %8, label %10, label %9, !dbg !15060

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !15061
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !15061
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !15061
  unreachable, !dbg !15061

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15041, metadata !DIExpression()) #23, !dbg !15047
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !15063
  br label %16, !dbg !15064

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15065
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14402, metadata !DIExpression()) #23, !dbg !15065
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !15068
  br i1 %13, label %15, label %14, !dbg !15069

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !15070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15070
  unreachable, !dbg !15070

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #23, !dbg !15065
  call void @llvm.dbg.value(metadata i32 %3, metadata !14411, metadata !DIExpression()) #23, !dbg !15071
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15073, !srcloc !14417
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15079, metadata !DIExpression()), !dbg !15080
  call void @llvm.dbg.value(metadata i32 %0, metadata !15081, metadata !DIExpression()), !dbg !15086
  %2 = icmp eq i32 %0, 0, !dbg !15088
  br i1 %2, label %3, label %6, !dbg !15089

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15090, !srcloc !15097
  call void @llvm.dbg.value(metadata i32 %4, metadata !15093, metadata !DIExpression()) #23, !dbg !15098
  %5 = icmp eq i32 %4, 0, !dbg !15099
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15080
  ret i1 %7, !dbg !15100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15101 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15104
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15103, metadata !DIExpression()), !dbg !15105
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15106
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15107
  ret i1 %3, !dbg !15108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15111, metadata !DIExpression()), !dbg !15113
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !15114
  call void @llvm.dbg.value(metadata i32 %2, metadata !15112, metadata !DIExpression()), !dbg !15113
  ret i32 %2, !dbg !15115
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15116 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15118, metadata !DIExpression()), !dbg !15122
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15123
  call void @llvm.dbg.value(metadata i32 0, metadata !15119, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15125
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15127, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15129
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15129
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15125
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15130
  br i1 %4, label %6, label %5, !dbg !15131

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15132
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15132
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15132
  unreachable, !dbg !15132

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15127
  call void @llvm.dbg.value(metadata i32 %7, metadata !14375, metadata !DIExpression()) #23, !dbg !15129
  call void @llvm.dbg.value(metadata i32 %7, metadata !14369, metadata !DIExpression()) #23, !dbg !15125
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15133
  call void @llvm.dbg.value(metadata i32 %7, metadata !15121, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata i32 undef, metadata !15119, metadata !DIExpression()), !dbg !15124
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !15134
  br i1 %8, label %9, label %13, !dbg !15138

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14557, metadata !DIExpression()) #23, !dbg !15139
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15142
  %11 = load i8, i8* %10, align 1, !dbg !15143
  %12 = and i8 %11, 127, !dbg !15143
  store i8 %12, i8* %10, align 1, !dbg !15143
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14565, metadata !DIExpression()) #23, !dbg !15144
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15146
  br label %13, !dbg !15147

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !15148
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15149
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15150
  %16 = zext i1 %15 to i32, !dbg !15150
  tail call fastcc void @update_cache(i32 noundef %16) #25, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15152
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15154
  br i1 %17, label %19, label %18, !dbg !15155

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15156
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15156
  unreachable, !dbg !15156

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14397, metadata !DIExpression()) #23, !dbg !15152
  call void @llvm.dbg.value(metadata i32 %7, metadata !14411, metadata !DIExpression()) #23, !dbg !15157
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15159, !srcloc !14417
  call void @llvm.dbg.value(metadata i32 1, metadata !15119, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata i32 undef, metadata !15119, metadata !DIExpression()), !dbg !15124
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15160
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15162
  br i1 %21, label %22, label %23, !dbg !15163

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15164
  br label %23, !dbg !15166

23:                                               ; preds = %22, %19
  ret void, !dbg !15167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15168 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15170, metadata !DIExpression()), !dbg !15171
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15172
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15173
  ret i32 %3, !dbg !15174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15175 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15177, metadata !DIExpression()), !dbg !15178
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15179
  %3 = load i8, i8* %2, align 1, !dbg !15180
  %4 = or i8 %3, 16, !dbg !15180
  store i8 %4, i8* %2, align 1, !dbg !15180
  ret void, !dbg !15181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15182 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15183, !srcloc !14378
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15183
  call void @llvm.dbg.value(metadata i32 %2, metadata !14375, metadata !DIExpression()) #23, !dbg !15185
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15185
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !15186
  ret void, !dbg !15187
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15190, metadata !DIExpression()), !dbg !15191
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !15192
  br i1 %2, label %3, label %5, !dbg !15194

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !15195
  br label %6, !dbg !15197

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14411, metadata !DIExpression()) #23, !dbg !15198
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15201, !srcloc !14417
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15202
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15203 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15205, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15208
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15210, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15212
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15212
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15208
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15213
  br i1 %3, label %5, label %4, !dbg !15214

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15215
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15215
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15215
  unreachable, !dbg !15215

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15210
  call void @llvm.dbg.value(metadata i32 %6, metadata !14375, metadata !DIExpression()) #23, !dbg !15212
  call void @llvm.dbg.value(metadata i32 %6, metadata !14369, metadata !DIExpression()) #23, !dbg !15208
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15216
  call void @llvm.dbg.value(metadata i32 %6, metadata !15206, metadata !DIExpression()), !dbg !15207
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !15217
  br i1 %7, label %12, label %8, !dbg !15219

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15220
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15223
  br i1 %9, label %11, label %10, !dbg !15224

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15225
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15225
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15225
  unreachable, !dbg !15225

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14397, metadata !DIExpression()) #23, !dbg !15220
  call void @llvm.dbg.value(metadata i32 %6, metadata !14411, metadata !DIExpression()) #23, !dbg !15226
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15228, !srcloc !14417
  br label %14, !dbg !15229

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !15230
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15231
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15232
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !15232
  br label %14, !dbg !15233

14:                                               ; preds = %12, %11
  ret void, !dbg !15233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15236, metadata !DIExpression()), !dbg !15237
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15238
  %3 = load i8, i8* %2, align 1, !dbg !15238
  %4 = and i8 %3, 16, !dbg !15239
  %5 = icmp ne i8 %4, 0, !dbg !15240
  ret i1 %5, !dbg !15241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15244, metadata !DIExpression()), !dbg !15245
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15246
  %3 = load i8, i8* %2, align 1, !dbg !15247
  %4 = and i8 %3, -17, !dbg !15247
  store i8 %4, i8* %2, align 1, !dbg !15247
  ret void, !dbg !15248
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15249 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15259, metadata !DIExpression()), !dbg !15263
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15257, metadata !DIExpression()), !dbg !15263
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15258, metadata !DIExpression()), !dbg !15263
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15264
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15264
  br i1 %5, label %9, label %6, !dbg !15264

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #25, !dbg !15264
  br i1 %7, label %9, label %8, !dbg !15267

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 773) #24, !dbg !15268
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 773) #24, !dbg !15268
  unreachable, !dbg !15268

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15260, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15271
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15273, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15271
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15276
  br i1 %11, label %13, label %12, !dbg !15277

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15278
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15278
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15278
  unreachable, !dbg !15278

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15271
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15279
  call void @llvm.dbg.value(metadata i32 undef, metadata !15262, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata i32 undef, metadata !15260, metadata !DIExpression()), !dbg !15270
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #25, !dbg !15280
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15283
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15285
  br i1 %14, label %16, label %15, !dbg !15286

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15287
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15287
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15287
  unreachable, !dbg !15287

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15273
  call void @llvm.dbg.value(metadata i32 %17, metadata !14375, metadata !DIExpression()) #23, !dbg !15275
  call void @llvm.dbg.value(metadata i32 %17, metadata !14369, metadata !DIExpression()) #23, !dbg !15271
  call void @llvm.dbg.value(metadata i32 %17, metadata !15262, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15283
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !15288
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15290, !srcloc !14417
  call void @llvm.dbg.value(metadata i32 1, metadata !15260, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata i32 undef, metadata !15260, metadata !DIExpression()), !dbg !15270
  ret void, !dbg !15291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15292 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15294, metadata !DIExpression()), !dbg !15295
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15296
  %3 = load i8, i8* %2, align 1, !dbg !15296
  %4 = and i8 %3, 1, !dbg !15297
  %5 = icmp ne i8 %4, 0, !dbg !15298
  ret i1 %5, !dbg !15299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15300 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15304, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15302, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15303, metadata !DIExpression()), !dbg !15305
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #25, !dbg !15306
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !15307
  ret void, !dbg !15308
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15309 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15313, metadata !DIExpression()), !dbg !15315
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15314, metadata !DIExpression()), !dbg !15315
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !15316
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !15317
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15318
  br i1 %3, label %24, label %4, !dbg !15320

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15321
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15323
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15324
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14588, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14594, metadata !DIExpression()) #23, !dbg !15325
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !15327
  br i1 %7, label %8, label %9, !dbg !15328

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 186) #24, !dbg !15329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 186) #24, !dbg !15329
  unreachable, !dbg !15329

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.312(%struct._dnode* noundef nonnull %6) #24, !dbg !15330
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14595, metadata !DIExpression()) #23, !dbg !15325
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15331
  br i1 %11, label %22, label %12, !dbg !15330

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14595, metadata !DIExpression()) #23, !dbg !15325
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15332
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14595, metadata !DIExpression()) #23, !dbg !15325
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #24, !dbg !15333
  %16 = icmp sgt i32 %15, 0, !dbg !15334
  br i1 %16, label %17, label %19, !dbg !15335

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15336
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !15337
  br label %24, !dbg !15338

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #24, !dbg !15331
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14595, metadata !DIExpression()) #23, !dbg !15325
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15331
  br i1 %21, label %22, label %12, !dbg !15330, !llvm.loop !15339

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15341
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #24, !dbg !15342
  br label %24, !dbg !15343

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15345 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15350, metadata !DIExpression()), !dbg !15351
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15349, metadata !DIExpression()), !dbg !15351
  %4 = icmp eq i64 %3, -1, !dbg !15352
  br i1 %4, label %6, label %5, !dbg !15354

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.327(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !15355
  br label %6, !dbg !15357

6:                                                ; preds = %5, %2
  ret void, !dbg !15358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.327(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15359 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15362, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15361, metadata !DIExpression()), !dbg !15363
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15364
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !15365
  ret void, !dbg !15366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15367 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15369, metadata !DIExpression()), !dbg !15377
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15378
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15378
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15370, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata i32 0, metadata !15371, metadata !DIExpression()), !dbg !15379
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15380
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15382, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15380
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15385
  br i1 %5, label %7, label %6, !dbg !15386

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15387
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15387
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15387
  unreachable, !dbg !15387

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15380
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15388
  call void @llvm.dbg.value(metadata i32 undef, metadata !15373, metadata !DIExpression()), !dbg !15379
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()), !dbg !15379
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15389
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15390
  %10 = load i8, i8* %9, align 1, !dbg !15390
  %11 = and i8 %10, 40, !dbg !15391
  %12 = icmp eq i8 %11, 0, !dbg !15391
  call void @llvm.dbg.value(metadata i1 %12, metadata !15374, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15392
  br i1 %12, label %13, label %20, !dbg !15393

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15394
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15394
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15394
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15398
  br i1 %17, label %19, label %18, !dbg !15399

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !15400
  br label %19, !dbg !15402

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.323(%struct.k_thread* noundef nonnull %3) #25, !dbg !15403
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !15404
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !15405
  br label %20, !dbg !15406

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15407
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15407
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15409
  br i1 %21, label %23, label %22, !dbg !15410

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15411
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15411
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15411
  unreachable, !dbg !15411

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15382
  call void @llvm.dbg.value(metadata i32 %24, metadata !14375, metadata !DIExpression()) #23, !dbg !15384
  call void @llvm.dbg.value(metadata i32 %24, metadata !14369, metadata !DIExpression()) #23, !dbg !15380
  call void @llvm.dbg.value(metadata i32 %24, metadata !15373, metadata !DIExpression()), !dbg !15379
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15407
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !15412
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15414, !srcloc !14417
  call void @llvm.dbg.value(metadata i32 1, metadata !15371, metadata !DIExpression()), !dbg !15379
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()), !dbg !15379
  ret void, !dbg !15415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15418, metadata !DIExpression()), !dbg !15419
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #25, !dbg !15420
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15421
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !15422
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15423
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15424
  ret void, !dbg !15425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15426 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15430, metadata !DIExpression()), !dbg !15431
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15432
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15432
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15432
  br i1 %4, label %5, label %6, !dbg !15435

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 726) #24, !dbg !15436
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 726) #24, !dbg !15436
  unreachable, !dbg !15436

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15439 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15441, metadata !DIExpression()), !dbg !15442
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15443
  %3 = load i8, i8* %2, align 1, !dbg !15444
  %4 = and i8 %3, -3, !dbg !15444
  store i8 %4, i8* %2, align 1, !dbg !15444
  ret void, !dbg !15445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15446 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15448, metadata !DIExpression()), !dbg !15449
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !15450
  br i1 %2, label %3, label %7, !dbg !15452

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14557, metadata !DIExpression()) #23, !dbg !15453
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15456
  %5 = load i8, i8* %4, align 1, !dbg !15457
  %6 = and i8 %5, 127, !dbg !15457
  store i8 %6, i8* %4, align 1, !dbg !15457
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14565, metadata !DIExpression()) #23, !dbg !15458
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15460
  br label %7, !dbg !15461

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15462
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15463
  %10 = zext i1 %9 to i32, !dbg !15463
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !15464
  ret void, !dbg !15465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15466 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15468, metadata !DIExpression()), !dbg !15469
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15470
  %3 = load i8, i8* %2, align 1, !dbg !15471
  %4 = or i8 %3, 2, !dbg !15471
  store i8 %4, i8* %2, align 1, !dbg !15471
  ret void, !dbg !15472
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #21 !dbg !15473 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15475, metadata !DIExpression()), !dbg !15479
  call void @llvm.dbg.value(metadata i32 0, metadata !15476, metadata !DIExpression()), !dbg !15480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15481
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15483, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15485
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15485
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15481
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15486
  br i1 %3, label %5, label %4, !dbg !15487

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15488
  unreachable, !dbg !15488

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15485
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15481
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15489
  call void @llvm.dbg.value(metadata i32 undef, metadata !15478, metadata !DIExpression()), !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !15476, metadata !DIExpression()), !dbg !15480
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15493
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15493
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15495
  br i1 %6, label %8, label %7, !dbg !15496

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15497
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15497
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15497
  unreachable, !dbg !15497

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15483
  call void @llvm.dbg.value(metadata i32 %9, metadata !14375, metadata !DIExpression()) #23, !dbg !15485
  call void @llvm.dbg.value(metadata i32 %9, metadata !14369, metadata !DIExpression()) #23, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %9, metadata !15478, metadata !DIExpression()), !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !15498
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15500, !srcloc !14417
  call void @llvm.dbg.value(metadata i32 1, metadata !15476, metadata !DIExpression()), !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !15476, metadata !DIExpression()), !dbg !15480
  ret void, !dbg !15501
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15502 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15508, metadata !DIExpression()), !dbg !15513
  call void @llvm.dbg.value(metadata i32 %0, metadata !15506, metadata !DIExpression()), !dbg !15513
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15507, metadata !DIExpression()), !dbg !15513
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15514
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #25, !dbg !15515
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15516
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15517
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !15518
  call void @llvm.dbg.value(metadata i32 %6, metadata !15509, metadata !DIExpression()), !dbg !15513
  call void @llvm.dbg.value(metadata i32 0, metadata !15510, metadata !DIExpression()), !dbg !15519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15520
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15522, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15520
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15525
  br i1 %8, label %10, label %9, !dbg !15526

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15527
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15527
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15527
  unreachable, !dbg !15527

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15520
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15528
  call void @llvm.dbg.value(metadata i32 undef, metadata !15512, metadata !DIExpression()), !dbg !15519
  call void @llvm.dbg.value(metadata i32 undef, metadata !15510, metadata !DIExpression()), !dbg !15519
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15529
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15533
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15534
  br i1 %13, label %14, label %15, !dbg !15535

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15536
  br label %15, !dbg !15538

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15539
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15541
  br i1 %16, label %18, label %17, !dbg !15542

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15543
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15543
  unreachable, !dbg !15543

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15522
  call void @llvm.dbg.value(metadata i32 %19, metadata !14375, metadata !DIExpression()) #23, !dbg !15524
  call void @llvm.dbg.value(metadata i32 %19, metadata !14369, metadata !DIExpression()) #23, !dbg !15520
  call void @llvm.dbg.value(metadata i32 %19, metadata !15512, metadata !DIExpression()), !dbg !15519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15539
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !15544
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15546, !srcloc !14417
  call void @llvm.dbg.value(metadata i32 1, metadata !15510, metadata !DIExpression()), !dbg !15519
  call void @llvm.dbg.value(metadata i32 undef, metadata !15510, metadata !DIExpression()), !dbg !15519
  ret i32 %6, !dbg !15547
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15548 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15553, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata i64 undef, metadata !15555, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15552, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15554, metadata !DIExpression()), !dbg !15556
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15557
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15558
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15559
  br i1 %6, label %7, label %8, !dbg !15562

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 846) #24, !dbg !15563
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 846) #24, !dbg !15563
  unreachable, !dbg !15563

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15565
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15567, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15569
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15569
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15565
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15570
  br i1 %10, label %12, label %11, !dbg !15571

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15572
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15572
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15572
  unreachable, !dbg !15572

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15569
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15565
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15573
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15574
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #25, !dbg !15575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15050, metadata !DIExpression()) #23, !dbg !15576
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !15578
  br i1 %14, label %16, label %15, !dbg !15579

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !15580
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !15580
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !15580
  unreachable, !dbg !15580

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15041, metadata !DIExpression()) #23, !dbg !15581
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15046, metadata !DIExpression()) #23, !dbg !15581
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15050, metadata !DIExpression()) #23, !dbg !15583
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15585
  br i1 %17, label %19, label %18, !dbg !15586

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !15587
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15587
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !15587
  unreachable, !dbg !15587

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15041, metadata !DIExpression()) #23, !dbg !15581
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #24, !dbg !15588
  ret i32 %21, !dbg !15589
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15590 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15594, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15595, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i32 0, metadata !15596, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15601
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15603, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15601
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15606
  br i1 %3, label %5, label %4, !dbg !15607

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15608
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15608
  unreachable, !dbg !15608

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15601
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15609
  call void @llvm.dbg.value(metadata i32 undef, metadata !15598, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15595, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !15596, metadata !DIExpression()), !dbg !15600
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !15610
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15595, metadata !DIExpression()), !dbg !15599
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15613
  br i1 %8, label %10, label %9, !dbg !15615

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !15616
  br label %10, !dbg !15618

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15619
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15619
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15621
  br i1 %11, label %13, label %12, !dbg !15622

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15623
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15623
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15623
  unreachable, !dbg !15623

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15603
  call void @llvm.dbg.value(metadata i32 %14, metadata !14375, metadata !DIExpression()) #23, !dbg !15605
  call void @llvm.dbg.value(metadata i32 %14, metadata !14369, metadata !DIExpression()) #23, !dbg !15601
  call void @llvm.dbg.value(metadata i32 %14, metadata !15598, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15619
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !15624
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15626, !srcloc !14417
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15595, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !15596, metadata !DIExpression()), !dbg !15600
  ret %struct.k_thread* %7, !dbg !15627
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15628 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15630, metadata !DIExpression()), !dbg !15635
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15631, metadata !DIExpression()), !dbg !15635
  call void @llvm.dbg.value(metadata i32 0, metadata !15632, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15637
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15639, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15641
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15641
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15637
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15642
  br i1 %3, label %5, label %4, !dbg !15643

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15644
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15644
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15644
  unreachable, !dbg !15644

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15641
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15637
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15645
  call void @llvm.dbg.value(metadata i32 undef, metadata !15634, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15631, metadata !DIExpression()), !dbg !15635
  call void @llvm.dbg.value(metadata i32 undef, metadata !15632, metadata !DIExpression()), !dbg !15636
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !15646
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15631, metadata !DIExpression()), !dbg !15635
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15649
  br i1 %8, label %11, label %9, !dbg !15651

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !15652
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !15654
  br label %11, !dbg !15655

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15656
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15658
  br i1 %12, label %14, label %13, !dbg !15659

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15660
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15660
  unreachable, !dbg !15660

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15639
  call void @llvm.dbg.value(metadata i32 %15, metadata !14375, metadata !DIExpression()) #23, !dbg !15641
  call void @llvm.dbg.value(metadata i32 %15, metadata !14369, metadata !DIExpression()) #23, !dbg !15637
  call void @llvm.dbg.value(metadata i32 %15, metadata !15634, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15656
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !15661
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15663, !srcloc !14417
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15631, metadata !DIExpression()), !dbg !15635
  call void @llvm.dbg.value(metadata i32 undef, metadata !15632, metadata !DIExpression()), !dbg !15636
  ret %struct.k_thread* %7, !dbg !15664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15665 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15667, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15475, metadata !DIExpression()) #23, !dbg !15669
  call void @llvm.dbg.value(metadata i32 0, metadata !15476, metadata !DIExpression()) #23, !dbg !15671
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15672
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15674, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15676
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15676
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15672
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15677
  br i1 %3, label %5, label %4, !dbg !15678

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15679
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15679
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15679
  unreachable, !dbg !15679

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15676
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15672
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15680
  call void @llvm.dbg.value(metadata i32 undef, metadata !15478, metadata !DIExpression()) #23, !dbg !15671
  call void @llvm.dbg.value(metadata i32 undef, metadata !15476, metadata !DIExpression()) #23, !dbg !15671
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15681
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15682
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15684
  br i1 %6, label %8, label %7, !dbg !15685

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15686
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15686
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15686
  unreachable, !dbg !15686

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15674
  call void @llvm.dbg.value(metadata i32 %9, metadata !14375, metadata !DIExpression()) #23, !dbg !15676
  call void @llvm.dbg.value(metadata i32 %9, metadata !14369, metadata !DIExpression()) #23, !dbg !15672
  call void @llvm.dbg.value(metadata i32 %9, metadata !15478, metadata !DIExpression()) #23, !dbg !15671
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15682
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !15687
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15689, !srcloc !14417
  call void @llvm.dbg.value(metadata i32 1, metadata !15476, metadata !DIExpression()) #23, !dbg !15671
  call void @llvm.dbg.value(metadata i32 undef, metadata !15476, metadata !DIExpression()) #23, !dbg !15671
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15690
  ret void, !dbg !15691
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15692 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15694, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata i32 %1, metadata !15695, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata i8 0, metadata !15696, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata i32 0, metadata !15697, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15702
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15704, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15706
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15706
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15702
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15707
  br i1 %4, label %6, label %5, !dbg !15708

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15709
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15709
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15709
  unreachable, !dbg !15709

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15706
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15702
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15710
  call void @llvm.dbg.value(metadata i32 undef, metadata !15699, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata i8 poison, metadata !15696, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata i32 undef, metadata !15697, metadata !DIExpression()), !dbg !15701
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !15711
  call void @llvm.dbg.value(metadata i1 %9, metadata !15696, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15700
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15714

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14557, metadata !DIExpression()) #23, !dbg !15715
  %14 = load i8, i8* %7, align 1, !dbg !15721
  %15 = and i8 %14, 127, !dbg !15721
  store i8 %15, i8* %7, align 1, !dbg !15721
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14565, metadata !DIExpression()) #23, !dbg !15722
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15724
  store i8 %12, i8* %11, align 2, !dbg !15725
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14574, metadata !DIExpression()) #23, !dbg !15726
  %16 = load i8, i8* %7, align 1, !dbg !15728
  %17 = or i8 %16, -128, !dbg !15728
  store i8 %17, i8* %7, align 1, !dbg !15728
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14581, metadata !DIExpression()) #23, !dbg !15729
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14588, metadata !DIExpression()) #23, !dbg !15731
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14594, metadata !DIExpression()) #23, !dbg !15731
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !15733
  br i1 %18, label %19, label %20, !dbg !15734

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 186) #24, !dbg !15735
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 186) #24, !dbg !15735
  unreachable, !dbg !15735

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.312(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15736
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14595, metadata !DIExpression()) #23, !dbg !15731
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15737
  br i1 %22, label %32, label %23, !dbg !15736

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14595, metadata !DIExpression()) #23, !dbg !15731
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15738
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14595, metadata !DIExpression()) #23, !dbg !15731
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #24, !dbg !15739
  %27 = icmp sgt i32 %26, 0, !dbg !15740
  br i1 %27, label %28, label %29, !dbg !15741

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #24, !dbg !15742
  br label %33, !dbg !15743

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #24, !dbg !15737
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14595, metadata !DIExpression()) #23, !dbg !15731
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15737
  br i1 %31, label %32, label %23, !dbg !15736, !llvm.loop !15744

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #24, !dbg !15746
  br label %33, !dbg !15747

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15748
  br label %35, !dbg !15749

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15750
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15752
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15754
  br i1 %36, label %38, label %37, !dbg !15755

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15756
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15756
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15756
  unreachable, !dbg !15756

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15704
  call void @llvm.dbg.value(metadata i32 %39, metadata !14375, metadata !DIExpression()) #23, !dbg !15706
  call void @llvm.dbg.value(metadata i32 %39, metadata !14369, metadata !DIExpression()) #23, !dbg !15702
  call void @llvm.dbg.value(metadata i32 %39, metadata !15699, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !15757
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15759, !srcloc !14417
  call void @llvm.dbg.value(metadata i8 poison, metadata !15696, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata i32 undef, metadata !15697, metadata !DIExpression()), !dbg !15701
  ret i1 %9, !dbg !15760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15761 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15765, metadata !DIExpression()), !dbg !15768
  call void @llvm.dbg.value(metadata i32 %1, metadata !15766, metadata !DIExpression()), !dbg !15768
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15769
  call void @llvm.dbg.value(metadata i1 %3, metadata !15767, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15768
  br i1 %3, label %4, label %12, !dbg !15770

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15772
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15773
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15773
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15773
  %9 = load i8, i8* %8, align 1, !dbg !15773
  %10 = icmp eq i8 %9, 0, !dbg !15774
  br i1 %10, label %11, label %12, !dbg !15775

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15776
  br label %12, !dbg !15778

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15779
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15780 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15782, metadata !DIExpression()), !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15786
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15788, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15786
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15791
  br i1 %2, label %4, label %3, !dbg !15792

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15793
  unreachable, !dbg !15793

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15786
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15784, metadata !DIExpression()), !dbg !15785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15782, metadata !DIExpression()), !dbg !15785
  tail call fastcc void @z_sched_lock() #25, !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15798
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15798
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15800
  br i1 %5, label %7, label %6, !dbg !15801

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15802
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15802
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15802
  unreachable, !dbg !15802

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15788
  call void @llvm.dbg.value(metadata i32 %8, metadata !14375, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 %8, metadata !14369, metadata !DIExpression()) #23, !dbg !15786
  call void @llvm.dbg.value(metadata i32 %8, metadata !15784, metadata !DIExpression()), !dbg !15785
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !15803
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15805, !srcloc !14417
  call void @llvm.dbg.value(metadata i32 1, metadata !15782, metadata !DIExpression()), !dbg !15785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15782, metadata !DIExpression()), !dbg !15785
  ret void, !dbg !15806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15807 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15808, !srcloc !15097
  call void @llvm.dbg.value(metadata i32 %1, metadata !15093, metadata !DIExpression()) #23, !dbg !15813
  %2 = icmp eq i32 %1, 0, !dbg !15814
  br i1 %2, label %4, label %3, !dbg !15815

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.341, i32 0, i32 0), i32 noundef 253) #24, !dbg !15816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.314, i32 0, i32 0)) #24, !dbg !15816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.341, i32 0, i32 0), i32 noundef 253) #24, !dbg !15816
  unreachable, !dbg !15816

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15818
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15818
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15818
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15818
  %9 = load i8, i8* %8, align 1, !dbg !15818
  %10 = icmp eq i8 %9, 1, !dbg !15818
  br i1 %10, label %11, label %12, !dbg !15821

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.341, i32 0, i32 0), i32 noundef 254) #24, !dbg !15822
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.314, i32 0, i32 0)) #24, !dbg !15822
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.341, i32 0, i32 0), i32 noundef 254) #24, !dbg !15822
  unreachable, !dbg !15822

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15824
  store i8 %13, i8* %8, align 1, !dbg !15824
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15825, !srcloc !15827
  ret void, !dbg !15828
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15829 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15831, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !15835
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15837, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15835
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15840
  br i1 %2, label %4, label %3, !dbg !15841

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15842
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15842
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !15842
  unreachable, !dbg !15842

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !15835
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15843
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()), !dbg !15834
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15844
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15844
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15844
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15844
  %9 = load i8, i8* %8, align 1, !dbg !15844
  %10 = icmp eq i8 %9, 0, !dbg !15844
  br i1 %10, label %11, label %12, !dbg !15849

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 999) #24, !dbg !15850
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.314, i32 0, i32 0)) #24, !dbg !15850
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 999) #24, !dbg !15850
  unreachable, !dbg !15850

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15852, !srcloc !15097
  call void @llvm.dbg.value(metadata i32 %13, metadata !15093, metadata !DIExpression()) #23, !dbg !15857
  %14 = icmp eq i32 %13, 0, !dbg !15858
  br i1 %14, label %16, label %15, !dbg !15859

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15860
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.314, i32 0, i32 0)) #24, !dbg !15860
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15860
  unreachable, !dbg !15860

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15862
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15863
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15863
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15863
  %21 = load i8, i8* %20, align 1, !dbg !15864
  %22 = add i8 %21, 1, !dbg !15864
  store i8 %22, i8* %20, align 1, !dbg !15864
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !15865
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !15866
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15868
  br i1 %23, label %25, label %24, !dbg !15869

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15870
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !15870
  unreachable, !dbg !15870

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15837
  call void @llvm.dbg.value(metadata i32 %26, metadata !14375, metadata !DIExpression()) #23, !dbg !15839
  call void @llvm.dbg.value(metadata i32 %26, metadata !14369, metadata !DIExpression()) #23, !dbg !15835
  call void @llvm.dbg.value(metadata i32 %26, metadata !15833, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !15866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !15871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15873, !srcloc !14417
  call void @llvm.dbg.value(metadata i32 1, metadata !15831, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()), !dbg !15834
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15874
  ret void, !dbg !15875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15876 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15877
  ret %struct.k_thread* %1, !dbg !15878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15879 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15883, metadata !DIExpression()), !dbg !15888
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15884, metadata !DIExpression()), !dbg !15888
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15889
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15885, metadata !DIExpression()), !dbg !15888
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15890
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15886, metadata !DIExpression()), !dbg !15888
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !15891
  call void @llvm.dbg.value(metadata i32 %5, metadata !15887, metadata !DIExpression()), !dbg !15888
  %6 = icmp sgt i32 %5, 0, !dbg !15892
  br i1 %6, label %17, label %7, !dbg !15894

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15895
  br i1 %8, label %17, label %9, !dbg !15897

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15898
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15898
  %12 = load i32, i32* %11, align 8, !dbg !15898
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15900
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15900
  %15 = load i32, i32* %14, align 8, !dbg !15900
  %16 = icmp ult i32 %12, %15, !dbg !15901
  br label %17, !dbg !15902

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15903
  ret i1 %18, !dbg !15904
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15905 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15922, metadata !DIExpression()), !dbg !15937
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15923, metadata !DIExpression()), !dbg !15937
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15938
  br i1 %4, label %5, label %6, !dbg !15941

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15942
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15942
  unreachable, !dbg !15942

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15944
  %8 = load i32, i32* %7, align 4, !dbg !15945
  %9 = add nsw i32 %8, 1, !dbg !15945
  store i32 %9, i32* %7, align 4, !dbg !15945
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15946
  store i32 %8, i32* %10, align 8, !dbg !15947
  %11 = load i32, i32* %7, align 4, !dbg !15948
  %12 = icmp eq i32 %11, 0, !dbg !15949
  br i1 %12, label %13, label %35, !dbg !15950

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15951
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15951
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15925, metadata !DIExpression()), !dbg !15951
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15951
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15951
  %17 = load i32, i32* %16, align 4, !dbg !15951
  %18 = shl i32 %17, 2, !dbg !15951
  %19 = alloca i8, i32 %18, align 8, !dbg !15951
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15951
  store i8* %19, i8** %20, align 4, !dbg !15951
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15951
  %22 = alloca i8, i32 %17, align 8, !dbg !15951
  store i8* %22, i8** %21, align 4, !dbg !15951
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15951
  store i32 -1, i32* %23, align 4, !dbg !15951
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15952
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15934, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15924, metadata !DIExpression()), !dbg !15937
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15954
  br i1 %25, label %26, label %27, !dbg !15951

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15954
  br label %35, !dbg !15955

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15924, metadata !DIExpression()), !dbg !15937
  %29 = load i32, i32* %7, align 4, !dbg !15956
  %30 = add nsw i32 %29, 1, !dbg !15956
  store i32 %30, i32* %7, align 4, !dbg !15956
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15958
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15958
  store i32 %29, i32* %32, align 8, !dbg !15959
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15952
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15934, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15924, metadata !DIExpression()), !dbg !15937
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15954
  br i1 %34, label %26, label %27, !dbg !15951, !llvm.loop !15960

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15962
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15963
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #24, !dbg !15964
  ret void, !dbg !15965
}

; Function Attrs: optsize
declare !dbg !15966 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15971 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15974 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15976, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15977, metadata !DIExpression()), !dbg !15978
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15979
  br i1 %3, label %4, label %5, !dbg !15982

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15983
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15983
  unreachable, !dbg !15983

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15985
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15986
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #24, !dbg !15987
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15988
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15988
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15990
  br i1 %10, label %11, label %13, !dbg !15991

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15992
  store i32 0, i32* %12, align 4, !dbg !15994
  br label %13, !dbg !15995

13:                                               ; preds = %11, %5
  ret void, !dbg !15996
}

; Function Attrs: optsize
declare !dbg !15997 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15998 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16002, metadata !DIExpression()), !dbg !16005
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16003, metadata !DIExpression()), !dbg !16005
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16006
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !16007
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16004, metadata !DIExpression()), !dbg !16005
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16003, metadata !DIExpression()), !dbg !16005
  ret %struct.k_thread* %4, !dbg !16008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16009 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16013, metadata !DIExpression()), !dbg !16014
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !16015
  ret %struct.rbnode* %2, !dbg !16016
}

; Function Attrs: optsize
declare !dbg !16017 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #22 !dbg !16020 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16030, metadata !DIExpression()), !dbg !16034
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16035
  %3 = load i32, i32* %2, align 4, !dbg !16035
  %4 = icmp eq i32 %3, 0, !dbg !16037
  br i1 %4, label %10, label %5, !dbg !16038

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16031, metadata !DIExpression()), !dbg !16034
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16039, !range !5257
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16040
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16032, metadata !DIExpression()), !dbg !16034
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.312(%struct._dnode* noundef %7) #25, !dbg !16041
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16033, metadata !DIExpression()), !dbg !16034
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16031, metadata !DIExpression()), !dbg !16034
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16034
  ret %struct.k_thread* %11, !dbg !16042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16043 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16047, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata i32 0, metadata !16048, metadata !DIExpression()), !dbg !16050
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.346(%struct._wait_q_t* noundef %0) #25, !dbg !16051
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16049, metadata !DIExpression()), !dbg !16050
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16052
  br i1 %3, label %8, label %4, !dbg !16053

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !16054
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !16056
  call void @llvm.dbg.value(metadata i32 1, metadata !16048, metadata !DIExpression()), !dbg !16050
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.346(%struct._wait_q_t* noundef %0) #25, !dbg !16051
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16049, metadata !DIExpression()), !dbg !16050
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16052
  br i1 %7, label %8, label %4, !dbg !16053, !llvm.loop !16057

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16050
  ret i32 %9, !dbg !16059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.346(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !16060 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16062, metadata !DIExpression()), !dbg !16063
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16064
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.312(%struct._dnode* noundef %2) #25, !dbg !16065
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16066
  ret %struct.k_thread* %4, !dbg !16067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16068 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16077, metadata !DIExpression()), !dbg !16078
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16079
  tail call fastcc void @sys_dlist_init.347(%struct._dnode* noundef nonnull %2) #25, !dbg !16080
  ret void, !dbg !16081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.347(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16082 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16086, metadata !DIExpression()), !dbg !16087
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16088
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16089
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16090
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16091
  ret void, !dbg !16092
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16093 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !16094
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !16095
  ret void, !dbg !16096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16097 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16102, metadata !DIExpression()), !dbg !16103
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16104
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16104
  %4 = load i8, i8* %3, align 2, !dbg !16104
  %5 = sext i8 %4 to i32, !dbg !16105
  ret i32 %5, !dbg !16106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16107 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16111, metadata !DIExpression()), !dbg !16114
  call void @llvm.dbg.value(metadata i32 %1, metadata !16112, metadata !DIExpression()), !dbg !16114
  %3 = add i32 %1, 16, !dbg !16115
  %4 = icmp ult i32 %3, 31, !dbg !16115
  br i1 %4, label %6, label %5, !dbg !16115

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1331) #24, !dbg !16119
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.351, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #24, !dbg !16119
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1331) #24, !dbg !16119
  unreachable, !dbg !16119

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16121, !srcloc !15097
  call void @llvm.dbg.value(metadata i32 %7, metadata !15093, metadata !DIExpression()) #23, !dbg !16126
  %8 = icmp eq i32 %7, 0, !dbg !16127
  br i1 %8, label %10, label %9, !dbg !16128

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1332) #24, !dbg !16129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.314, i32 0, i32 0)) #24, !dbg !16129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1332) #24, !dbg !16129
  unreachable, !dbg !16129

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16113, metadata !DIExpression()), !dbg !16114
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !16131
  ret void, !dbg !16132
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16133 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !16134
  br i1 %1, label %8, label %2, !dbg !16135

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !16136
  br i1 %3, label %8, label %4, !dbg !16137

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16138
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !16139
  %7 = xor i1 %6, true, !dbg !16137
  br label %8, !dbg !16137

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16141 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16142, !range !7916
  %2 = icmp eq i8 %1, 0, !dbg !16142
  ret i1 %2, !dbg !16143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16144 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16147, !srcloc !15097
  call void @llvm.dbg.value(metadata i32 %1, metadata !15093, metadata !DIExpression()) #23, !dbg !16152
  %2 = icmp eq i32 %1, 0, !dbg !16153
  br i1 %2, label %4, label %3, !dbg !16154

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1392) #24, !dbg !16155
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.314, i32 0, i32 0)) #24, !dbg !16155
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1392) #24, !dbg !16155
  unreachable, !dbg !16155

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !16157
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16159, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !16161
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !16161
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !16157
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16162
  br i1 %6, label %8, label %7, !dbg !16163

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16164
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16164
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16164
  unreachable, !dbg !16164

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !16161
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !16157
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16165
  call void @llvm.dbg.value(metadata i32 undef, metadata !16146, metadata !DIExpression()), !dbg !16166
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16167
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14557, metadata !DIExpression()) #23, !dbg !16170
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16172
  %11 = load i8, i8* %10, align 1, !dbg !16173
  %12 = and i8 %11, 127, !dbg !16173
  store i8 %12, i8* %10, align 1, !dbg !16173
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14565, metadata !DIExpression()) #23, !dbg !16174
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #24, !dbg !16176
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16177
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14574, metadata !DIExpression()) #23, !dbg !16178
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16180
  %15 = load i8, i8* %14, align 1, !dbg !16181
  %16 = or i8 %15, -128, !dbg !16181
  store i8 %16, i8* %14, align 1, !dbg !16181
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14581, metadata !DIExpression()) #23, !dbg !16182
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14588, metadata !DIExpression()) #23, !dbg !16184
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14594, metadata !DIExpression()) #23, !dbg !16184
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #24, !dbg !16186
  br i1 %17, label %18, label %19, !dbg !16187

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 186) #24, !dbg !16188
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 186) #24, !dbg !16188
  unreachable, !dbg !16188

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.312(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !16189
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14595, metadata !DIExpression()) #23, !dbg !16184
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16190
  br i1 %21, label %32, label %22, !dbg !16189

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14595, metadata !DIExpression()) #23, !dbg !16184
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16191
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14595, metadata !DIExpression()) #23, !dbg !16184
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #24, !dbg !16192
  %26 = icmp sgt i32 %25, 0, !dbg !16193
  br i1 %26, label %27, label %29, !dbg !16194

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16195
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #24, !dbg !16196
  br label %34, !dbg !16197

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #24, !dbg !16190
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14595, metadata !DIExpression()) #23, !dbg !16184
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16190
  br i1 %31, label %32, label %22, !dbg !16189, !llvm.loop !16198

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16200
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #24, !dbg !16201
  br label %34, !dbg !16202

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !16203
  call void @llvm.dbg.value(metadata i32 undef, metadata !15041, metadata !DIExpression()) #23, !dbg !16204
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15046, metadata !DIExpression()) #23, !dbg !16204
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15050, metadata !DIExpression()) #23, !dbg !16206
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16208
  br i1 %35, label %37, label %36, !dbg !16209

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !16210
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16210
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !16210
  unreachable, !dbg !16210

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16159
  call void @llvm.dbg.value(metadata i32 %38, metadata !14375, metadata !DIExpression()) #23, !dbg !16161
  call void @llvm.dbg.value(metadata i32 %38, metadata !14369, metadata !DIExpression()) #23, !dbg !16157
  call void @llvm.dbg.value(metadata i32 %38, metadata !16146, metadata !DIExpression()), !dbg !16166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15041, metadata !DIExpression()) #23, !dbg !16204
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #24, !dbg !16211
  ret void, !dbg !16212
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16213 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16217, metadata !DIExpression()), !dbg !16220
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16221, !srcloc !15097
  call void @llvm.dbg.value(metadata i32 %3, metadata !15093, metadata !DIExpression()) #23, !dbg !16226
  %4 = icmp eq i32 %3, 0, !dbg !16227
  br i1 %4, label %6, label %5, !dbg !16228

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1463) #24, !dbg !16229
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.314, i32 0, i32 0)) #24, !dbg !16229
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1463) #24, !dbg !16229
  unreachable, !dbg !16229

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16231
  br i1 %7, label %8, label %10, !dbg !16233

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16234
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #25, !dbg !16236
  br label %15, !dbg !16237

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16218, metadata !DIExpression()), !dbg !16220
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !16238
  %12 = sext i32 %11 to i64, !dbg !16238
  call void @llvm.dbg.value(metadata i64 %12, metadata !16218, metadata !DIExpression()), !dbg !16220
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #25, !dbg !16239
  %14 = trunc i64 %13 to i32, !dbg !16239
  call void @llvm.dbg.value(metadata i32 %14, metadata !16219, metadata !DIExpression()), !dbg !16220
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16220
  ret i32 %16, !dbg !16240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16241 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16245, metadata !DIExpression()), !dbg !16246
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16247, !srcloc !16249
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !16250
  ret void, !dbg !16251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16252 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16256, metadata !DIExpression()), !dbg !16260
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16261, !srcloc !15097
  call void @llvm.dbg.value(metadata i32 %2, metadata !15093, metadata !DIExpression()) #23, !dbg !16266
  %3 = icmp eq i32 %2, 0, !dbg !16267
  br i1 %3, label %5, label %4, !dbg !16268

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1420) #24, !dbg !16269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.314, i32 0, i32 0)) #24, !dbg !16269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1420) #24, !dbg !16269
  unreachable, !dbg !16269

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16271
  br i1 %6, label %7, label %8, !dbg !16273

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #25, !dbg !16274
  br label %43, !dbg !16276

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16258, metadata !DIExpression()), !dbg !16260
  %9 = icmp sgt i64 %0, -3, !dbg !16277
  br i1 %9, label %10, label %14, !dbg !16279

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !16280
  %12 = trunc i64 %0 to i32, !dbg !16282
  %13 = add i32 %11, %12, !dbg !16282
  call void @llvm.dbg.value(metadata i32 %13, metadata !16257, metadata !DIExpression()), !dbg !16260
  br label %17, !dbg !16283

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16284
  %16 = sub i32 -2, %15, !dbg !16284
  call void @llvm.dbg.value(metadata i32 %16, metadata !16257, metadata !DIExpression()), !dbg !16260
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16286
  call void @llvm.dbg.value(metadata i32 %18, metadata !16257, metadata !DIExpression()), !dbg !16260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !16287
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16289, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !16291
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !16291
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !16287
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16292
  br i1 %20, label %22, label %21, !dbg !16293

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16294
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16294
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16294
  unreachable, !dbg !16294

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !16291
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !16287
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16295
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()), !dbg !16260
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16296
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16297
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #25, !dbg !16298
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16299
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16300
  tail call fastcc void @z_add_thread_timeout.327(%struct.k_thread* noundef %24, [1 x i64] %25) #25, !dbg !16300
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16301
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #25, !dbg !16302
  call void @llvm.dbg.value(metadata i32 undef, metadata !15041, metadata !DIExpression()) #23, !dbg !16303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15046, metadata !DIExpression()) #23, !dbg !16303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15050, metadata !DIExpression()) #23, !dbg !16305
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16307
  br i1 %27, label %29, label %28, !dbg !16308

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !16309
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !16309
  unreachable, !dbg !16309

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16289
  call void @llvm.dbg.value(metadata i32 %30, metadata !14375, metadata !DIExpression()) #23, !dbg !16291
  call void @llvm.dbg.value(metadata i32 %30, metadata !14369, metadata !DIExpression()) #23, !dbg !16287
  call void @llvm.dbg.value(metadata i32 %30, metadata !16259, metadata !DIExpression()), !dbg !16260
  call void @llvm.dbg.value(metadata i32 undef, metadata !15041, metadata !DIExpression()) #23, !dbg !16303
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #24, !dbg !16310
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16311
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #25, !dbg !16311
  br i1 %33, label %34, label %35, !dbg !16314

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1448) #24, !dbg !16315
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.314, i32 0, i32 0)) #24, !dbg !16315
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1448) #24, !dbg !16315
  unreachable, !dbg !16315

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16317
  %37 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !16318
  %38 = zext i32 %37 to i64, !dbg !16318
  %39 = sub nsw i64 %36, %38, !dbg !16319
  call void @llvm.dbg.value(metadata i64 %39, metadata !16256, metadata !DIExpression()), !dbg !16260
  %40 = icmp sgt i64 %39, 0, !dbg !16320
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16320
  %42 = trunc i64 %41 to i32, !dbg !16320
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16260
  ret i32 %44, !dbg !16321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16322 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16324, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata i64 %0, metadata !14425, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i32 10000, metadata !14428, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i32 1000, metadata !14429, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i8 1, metadata !14430, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i1 false, metadata !14431, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16326
  call void @llvm.dbg.value(metadata i1 false, metadata !14432, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16326
  call void @llvm.dbg.value(metadata i8 0, metadata !14433, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i1 false, metadata !14434, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16326
  call void @llvm.dbg.value(metadata i1 true, metadata !14435, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16326
  call void @llvm.dbg.value(metadata i64 0, metadata !14436, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i64 0, metadata !14436, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i64 %0, metadata !14425, metadata !DIExpression()), !dbg !16326
  %2 = udiv i64 %0, 10, !dbg !16328
  ret i64 %2, !dbg !16332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16333 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16334, !srcloc !16336
  tail call void @z_impl_k_yield() #25, !dbg !16337
  ret void, !dbg !16338
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16343, metadata !DIExpression()), !dbg !16345
  %2 = sext i32 %0 to i64, !dbg !16346
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !16347
  call void @llvm.dbg.value(metadata i64 %3, metadata !16344, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16345
  %4 = shl i64 %3, 32, !dbg !16348
  %5 = ashr exact i64 %4, 32, !dbg !16348
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !16349
  call void @llvm.dbg.value(metadata i32 %6, metadata !16344, metadata !DIExpression()), !dbg !16345
  %7 = sext i32 %6 to i64, !dbg !16350
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !16351
  %9 = trunc i64 %8 to i32, !dbg !16351
  ret i32 %9, !dbg !16352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16353 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16355, metadata !DIExpression()), !dbg !16356
  call void @llvm.dbg.value(metadata i64 %0, metadata !14425, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14428, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.value(metadata i32 10000, metadata !14429, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.value(metadata i8 1, metadata !14430, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.value(metadata i1 false, metadata !14431, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16357
  call void @llvm.dbg.value(metadata i1 true, metadata !14432, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16357
  call void @llvm.dbg.value(metadata i8 0, metadata !14433, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.value(metadata i1 false, metadata !14434, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16357
  call void @llvm.dbg.value(metadata i1 true, metadata !14435, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16357
  call void @llvm.dbg.value(metadata i64 0, metadata !14436, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.value(metadata i64 0, metadata !14436, metadata !DIExpression()), !dbg !16357
  %2 = add i64 %0, 99, !dbg !16359
  call void @llvm.dbg.value(metadata i64 %2, metadata !14425, metadata !DIExpression()), !dbg !16357
  %3 = udiv i64 %2, 100, !dbg !16360
  ret i64 %3, !dbg !16361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16362 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16364, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i64 %0, metadata !14425, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i32 10000, metadata !14428, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14429, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i8 1, metadata !14430, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i1 false, metadata !14431, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16366
  call void @llvm.dbg.value(metadata i1 false, metadata !14432, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16366
  call void @llvm.dbg.value(metadata i8 0, metadata !14433, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i1 true, metadata !14434, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16366
  call void @llvm.dbg.value(metadata i1 false, metadata !14435, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16366
  call void @llvm.dbg.value(metadata i64 0, metadata !14436, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i64 0, metadata !14436, metadata !DIExpression()), !dbg !16366
  %2 = mul i64 %0, 100, !dbg !16368
  ret i64 %2, !dbg !16370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16371 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16373, metadata !DIExpression()), !dbg !16374
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !16375
  br i1 %2, label %14, label %3, !dbg !16377

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !16378
  %5 = icmp slt i32 %4, 0, !dbg !16380
  br i1 %5, label %6, label %10, !dbg !16381

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16382
  %8 = load i8, i8* %7, align 1, !dbg !16382
  %9 = icmp eq i8 %8, 16, !dbg !16385
  br i1 %9, label %10, label %14, !dbg !16386

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !16387
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !16388
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16389, !srcloc !15097
  call void @llvm.dbg.value(metadata i32 %11, metadata !15093, metadata !DIExpression()) #23, !dbg !16393
  %12 = icmp eq i32 %11, 0, !dbg !16394
  br i1 %12, label %13, label %14, !dbg !16395

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !16396
  br label %14, !dbg !16398

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16400 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16402, metadata !DIExpression()), !dbg !16403
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16404
  %3 = load i8, i8* %2, align 1, !dbg !16404
  %4 = and i8 %3, 2, !dbg !16405
  %5 = icmp ne i8 %4, 0, !dbg !16406
  ret i1 %5, !dbg !16407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16408 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16413
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16412, metadata !DIExpression()), !dbg !16414
  ret %struct.k_thread* %1, !dbg !16415
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16416 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16419, !srcloc !15097
  call void @llvm.dbg.value(metadata i32 %1, metadata !15093, metadata !DIExpression()) #23, !dbg !16422
  %2 = icmp eq i32 %1, 0, !dbg !16423
  br i1 %2, label %3, label %8, !dbg !16424

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16425
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !16426
  %6 = icmp ne i32 %5, 0, !dbg !16424
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16428 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16430, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !16433
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16435, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !16437
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !16437
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !16433
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16438
  br i1 %3, label %5, label %4, !dbg !16439

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16440
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16440
  unreachable, !dbg !16440

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16435
  call void @llvm.dbg.value(metadata i32 %6, metadata !14375, metadata !DIExpression()) #23, !dbg !16437
  call void @llvm.dbg.value(metadata i32 %6, metadata !14369, metadata !DIExpression()) #23, !dbg !16433
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16441
  call void @llvm.dbg.value(metadata i32 %6, metadata !16431, metadata !DIExpression()), !dbg !16432
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16442
  %8 = load i8, i8* %7, align 4, !dbg !16442
  %9 = and i8 %8, 1, !dbg !16444
  %10 = icmp eq i8 %9, 0, !dbg !16445
  br i1 %10, label %15, label %11, !dbg !16446

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !16447
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !16447
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16450
  br i1 %12, label %14, label %13, !dbg !16451

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16452
  unreachable, !dbg !16452

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14397, metadata !DIExpression()) #23, !dbg !16447
  call void @llvm.dbg.value(metadata i32 %6, metadata !14411, metadata !DIExpression()) #23, !dbg !16453
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16455, !srcloc !14417
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1731) #24, !dbg !16456
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.358, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #24, !dbg !16456
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1731) #24, !dbg !16456
  unreachable, !dbg !16456

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16460
  %17 = load i8, i8* %16, align 1, !dbg !16460
  %18 = and i8 %17, 8, !dbg !16462
  %19 = icmp eq i8 %18, 0, !dbg !16463
  br i1 %19, label %24, label %20, !dbg !16464

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !16465
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !16465
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16468
  br i1 %21, label %23, label %22, !dbg !16469

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16470
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16470
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16470
  unreachable, !dbg !16470

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14397, metadata !DIExpression()) #23, !dbg !16465
  call void @llvm.dbg.value(metadata i32 %6, metadata !14411, metadata !DIExpression()) #23, !dbg !16471
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16473, !srcloc !14417
  br label %39, !dbg !16474

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !16475
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16476
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16478
  br i1 %26, label %27, label %35, !dbg !16479

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16480, !srcloc !15097
  call void @llvm.dbg.value(metadata i32 %28, metadata !15093, metadata !DIExpression()) #23, !dbg !16483
  %29 = icmp eq i32 %28, 0, !dbg !16484
  br i1 %29, label %30, label %35, !dbg !16485

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15041, metadata !DIExpression()) #23, !dbg !16486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15046, metadata !DIExpression()) #23, !dbg !16486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15050, metadata !DIExpression()) #23, !dbg !16489
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16491
  br i1 %31, label %33, label %32, !dbg !16492

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !16493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16493
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !16493
  unreachable, !dbg !16493

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15041, metadata !DIExpression()) #23, !dbg !16486
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #24, !dbg !16494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1778) #24, !dbg !16495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.359, i32 0, i32 0)) #24, !dbg !16495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1778) #24, !dbg !16495
  unreachable, !dbg !16495

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !16499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !16499
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16501
  br i1 %36, label %38, label %37, !dbg !16502

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16503
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16503
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16503
  unreachable, !dbg !16503

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14397, metadata !DIExpression()) #23, !dbg !16499
  call void @llvm.dbg.value(metadata i32 %6, metadata !14411, metadata !DIExpression()) #23, !dbg !16504
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16506, !srcloc !14417
  br label %39, !dbg !16507

39:                                               ; preds = %38, %23
  ret void, !dbg !16507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16508 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16510, metadata !DIExpression()), !dbg !16511
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16512
  %3 = load i8, i8* %2, align 1, !dbg !16512
  %4 = and i8 %3, 8, !dbg !16514
  %5 = icmp eq i8 %4, 0, !dbg !16515
  br i1 %5, label %6, label %20, !dbg !16516

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16517
  %8 = or i8 %7, 8, !dbg !16517
  store i8 %8, i8* %2, align 1, !dbg !16517
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !16519
  br i1 %9, label %10, label %12, !dbg !16521

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14557, metadata !DIExpression()) #23, !dbg !16522
  %11 = and i8 %8, 95, !dbg !16525
  store i8 %11, i8* %2, align 1, !dbg !16525
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14565, metadata !DIExpression()) #23, !dbg !16526
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !16528
  br label %12, !dbg !16529

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16530
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16530
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16532
  br i1 %15, label %17, label %16, !dbg !16533

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !16534
  br label %17, !dbg !16536

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !16537
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16538
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #25, !dbg !16539
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !16540
  br label %20, !dbg !16541

20:                                               ; preds = %17, %1
  ret void, !dbg !16542
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16543 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16547, metadata !DIExpression()), !dbg !16549
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.346(%struct._wait_q_t* noundef %0) #25, !dbg !16550
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16548, metadata !DIExpression()), !dbg !16549
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16551
  br i1 %3, label %10, label %4, !dbg !16552

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !16553
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !16555
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16556, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata i32 0, metadata !16561, metadata !DIExpression()), !dbg !16562
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 1, !dbg !16564
  store i32 0, i32* %7, align 4, !dbg !16565
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !16566
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.346(%struct._wait_q_t* noundef %0) #25, !dbg !16550
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16548, metadata !DIExpression()), !dbg !16549
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16551
  br i1 %9, label %10, label %4, !dbg !16552, !llvm.loop !16567

10:                                               ; preds = %4, %1
  ret void, !dbg !16569
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16570 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16575, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16574, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !16579
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16581, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !16583
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !16583
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !16579
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16584
  br i1 %4, label %6, label %5, !dbg !16585

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16586
  unreachable, !dbg !16586

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16581
  call void @llvm.dbg.value(metadata i32 %7, metadata !14375, metadata !DIExpression()) #23, !dbg !16583
  call void @llvm.dbg.value(metadata i32 %7, metadata !14369, metadata !DIExpression()) #23, !dbg !16579
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16587
  call void @llvm.dbg.value(metadata i32 %7, metadata !16576, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.value(metadata i32 0, metadata !16577, metadata !DIExpression()), !dbg !16578
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16588
  %9 = load i8, i8* %8, align 1, !dbg !16588
  %10 = and i8 %9, 8, !dbg !16590
  %11 = icmp eq i8 %10, 0, !dbg !16591
  br i1 %11, label %12, label %35, !dbg !16592

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16575, metadata !DIExpression()), !dbg !16578
  %14 = icmp eq i64 %13, 0, !dbg !16593
  br i1 %14, label %35, label %15, !dbg !16595

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16596
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16598
  br i1 %17, label %35, label %18, !dbg !16599

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16600
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16600
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16601
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16602
  br i1 %22, label %35, label %23, !dbg !16603

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16604, !srcloc !15097
  call void @llvm.dbg.value(metadata i32 %24, metadata !15093, metadata !DIExpression()) #23, !dbg !16610
  %25 = icmp eq i32 %24, 0, !dbg !16611
  br i1 %25, label %27, label %26, !dbg !16612

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1809) #24, !dbg !16613
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.360, i32 0, i32 0)) #24, !dbg !16613
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.311, i32 0, i32 0), i32 noundef 1809) #24, !dbg !16613
  unreachable, !dbg !16613

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16615
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16616
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #25, !dbg !16617
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16618
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #25, !dbg !16619
  call void @llvm.dbg.value(metadata i32 undef, metadata !15041, metadata !DIExpression()) #23, !dbg !16620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15046, metadata !DIExpression()) #23, !dbg !16620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15050, metadata !DIExpression()) #23, !dbg !16622
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16624
  br i1 %31, label %33, label %32, !dbg !16625

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !16626
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16626
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 225) #24, !dbg !16626
  unreachable, !dbg !16626

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15041, metadata !DIExpression()) #23, !dbg !16620
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #24, !dbg !16627
  call void @llvm.dbg.value(metadata i32 %34, metadata !16577, metadata !DIExpression()), !dbg !16578
  br label %40, !dbg !16628

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16629
  call void @llvm.dbg.value(metadata i32 %36, metadata !16577, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !16630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !16630
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16632
  br i1 %37, label %39, label %38, !dbg !16633

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16634
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16634
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16634
  unreachable, !dbg !16634

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14397, metadata !DIExpression()) #23, !dbg !16630
  call void @llvm.dbg.value(metadata i32 %7, metadata !14411, metadata !DIExpression()) #23, !dbg !16635
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16637, !srcloc !14417
  br label %40, !dbg !16638

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16578
  ret i32 %41, !dbg !16639
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16640 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16644, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i32 %1, metadata !16645, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i8* %2, metadata !16646, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i8 0, metadata !16648, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i32 0, metadata !16649, metadata !DIExpression()), !dbg !16653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14363, metadata !DIExpression()) #23, !dbg !16654
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16656, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !16658
  call void @llvm.dbg.value(metadata i32 undef, metadata !14376, metadata !DIExpression()) #23, !dbg !16658
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !16654
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16659
  br i1 %5, label %7, label %6, !dbg !16660

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16661
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16661
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16661
  unreachable, !dbg !16661

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #23, !dbg !16658
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !16654
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16662
  call void @llvm.dbg.value(metadata i32 undef, metadata !16651, metadata !DIExpression()), !dbg !16653
  call void @llvm.dbg.value(metadata i8 poison, metadata !16648, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i32 undef, metadata !16649, metadata !DIExpression()), !dbg !16653
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #25, !dbg !16663
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16647, metadata !DIExpression()), !dbg !16652
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16666
  br i1 %10, label %15, label %11, !dbg !16668

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16669, metadata !DIExpression()), !dbg !16676
  call void @llvm.dbg.value(metadata i32 %1, metadata !16674, metadata !DIExpression()), !dbg !16676
  call void @llvm.dbg.value(metadata i8* %2, metadata !16675, metadata !DIExpression()), !dbg !16676
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16556, metadata !DIExpression()), !dbg !16679
  call void @llvm.dbg.value(metadata i32 %1, metadata !16561, metadata !DIExpression()), !dbg !16679
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 6, i32 1, !dbg !16681
  store i32 %1, i32* %12, align 4, !dbg !16682
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16683
  store i8* %2, i8** %13, align 4, !dbg !16684
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16685
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16686
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #25, !dbg !16687
  call void @llvm.dbg.value(metadata i8 1, metadata !16648, metadata !DIExpression()), !dbg !16652
  br label %15, !dbg !16688

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16648, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !16689
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14402, metadata !DIExpression()) #23, !dbg !16689
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16691
  br i1 %16, label %18, label %17, !dbg !16692

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16693
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.309, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16693
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16693
  unreachable, !dbg !16693

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16652
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16656
  call void @llvm.dbg.value(metadata i32 %20, metadata !14375, metadata !DIExpression()) #23, !dbg !16658
  call void @llvm.dbg.value(metadata i32 %20, metadata !14369, metadata !DIExpression()) #23, !dbg !16654
  call void @llvm.dbg.value(metadata i32 %20, metadata !16651, metadata !DIExpression()), !dbg !16653
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #23, !dbg !16689
  call void @llvm.dbg.value(metadata i32 undef, metadata !14411, metadata !DIExpression()) #23, !dbg !16694
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16696, !srcloc !14417
  call void @llvm.dbg.value(metadata i8 poison, metadata !16648, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i32 undef, metadata !16649, metadata !DIExpression()), !dbg !16653
  ret i1 %19, !dbg !16697
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16698 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16704, metadata !DIExpression()), !dbg !16709
  call void @llvm.dbg.value(metadata i64 undef, metadata !16706, metadata !DIExpression()), !dbg !16709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16703, metadata !DIExpression()), !dbg !16709
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16705, metadata !DIExpression()), !dbg !16709
  call void @llvm.dbg.value(metadata i8** %4, metadata !16707, metadata !DIExpression()), !dbg !16709
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #25, !dbg !16710
  call void @llvm.dbg.value(metadata i32 %6, metadata !16708, metadata !DIExpression()), !dbg !16709
  %7 = icmp eq i8** %4, null, !dbg !16711
  br i1 %7, label %12, label %8, !dbg !16713

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16714
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16716
  %11 = load i8*, i8** %10, align 4, !dbg !16716
  store i8* %11, i8** %4, align 4, !dbg !16717
  br label %12, !dbg !16718

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16719
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16720 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !16722
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !16723
  ret void, !dbg !16724
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16725 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16735, metadata !DIExpression()), !dbg !16752
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16733, metadata !DIExpression()), !dbg !16752
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16734, metadata !DIExpression()), !dbg !16752
  %5 = icmp eq i64 %4, -1, !dbg !16753
  br i1 %5, label %63, label %6, !dbg !16755

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16756
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.365(%struct._dnode* noundef %7) #25, !dbg !16756
  br i1 %8, label %9, label %10, !dbg !16759

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.367, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.368, i32 0, i32 0), i32 noundef 99) #24, !dbg !16760
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.369, i32 0, i32 0)) #24, !dbg !16760
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.368, i32 0, i32 0), i32 noundef 99) #24, !dbg !16760
  unreachable, !dbg !16760

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16762
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16763
  call void @llvm.dbg.value(metadata i32 0, metadata !16736, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16765, metadata !DIExpression()) #23, !dbg !16772
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16774, !srcloc !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #23, !dbg !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !16772
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16782
  br i1 %13, label %15, label %14, !dbg !16785

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !16786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.372, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !16786
  unreachable, !dbg !16786

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16774
  call void @llvm.dbg.value(metadata i32 %16, metadata !16777, metadata !DIExpression()) #23, !dbg !16781
  call void @llvm.dbg.value(metadata i32 %16, metadata !16771, metadata !DIExpression()) #23, !dbg !16772
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16788
  call void @llvm.dbg.value(metadata i32 %16, metadata !16742, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16764
  %17 = icmp slt i64 %4, -1, !dbg !16789
  br i1 %17, label %18, label %24, !dbg !16790

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16791
  %20 = add i64 %4, %19, !dbg !16792
  %21 = sub i64 -2, %20, !dbg !16792
  call void @llvm.dbg.value(metadata i64 %21, metadata !16746, metadata !DIExpression()), !dbg !16793
  %22 = icmp sgt i64 %21, 1, !dbg !16794
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16794
  br label %29, !dbg !16795

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16796
  %26 = tail call fastcc i32 @elapsed.373() #25, !dbg !16798
  %27 = sext i32 %26 to i64, !dbg !16798
  %28 = add nsw i64 %25, %27, !dbg !16799
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16800
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16801
  store i64 %30, i64* %31, align 8, !dbg !16802
  %32 = tail call fastcc %struct._timeout* @first() #25, !dbg !16803
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16743, metadata !DIExpression()), !dbg !16805
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16806
  br i1 %33, label %48, label %34, !dbg !16806

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16807
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16743, metadata !DIExpression()), !dbg !16805
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16811
  %38 = load i64, i64* %37, align 8, !dbg !16811
  %39 = icmp slt i64 %35, %38, !dbg !16812
  br i1 %39, label %40, label %44, !dbg !16813

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16811
  %42 = sub nsw i64 %38, %35, !dbg !16814
  store i64 %42, i64* %41, align 8, !dbg !16814
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16816
  tail call fastcc void @sys_dlist_insert.374(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #25, !dbg !16817
  br label %49, !dbg !16818

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16819
  store i64 %45, i64* %31, align 8, !dbg !16819
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #25, !dbg !16820
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16743, metadata !DIExpression()), !dbg !16805
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16806
  br i1 %47, label %48, label %34, !dbg !16806, !llvm.loop !16821

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.375(%struct._dnode* noundef nonnull %7) #25, !dbg !16823
  br label %49, !dbg !16826

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #25, !dbg !16827
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16828
  br i1 %51, label %52, label %59, !dbg !16829

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #25, !dbg !16830
  call void @llvm.dbg.value(metadata i32 %53, metadata !16749, metadata !DIExpression()), !dbg !16831
  %54 = icmp ne i32 %53, 0, !dbg !16832
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16834
  br i1 %57, label %59, label %58, !dbg !16834

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #24, !dbg !16835
  br label %59, !dbg !16837

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !16844
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16843, metadata !DIExpression()) #23, !dbg !16844
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16846
  br i1 %60, label %62, label %61, !dbg !16849

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !16850
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.377, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16850
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !16850
  unreachable, !dbg !16850

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16838, metadata !DIExpression()) #23, !dbg !16844
  call void @llvm.dbg.value(metadata i32 %16, metadata !16852, metadata !DIExpression()) #23, !dbg !16855
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16857, !srcloc !16858
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16764
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.365(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16860 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16866, metadata !DIExpression()), !dbg !16867
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16868
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16868
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16869
  ret i1 %4, !dbg !16870
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.373() unnamed_addr #1 !dbg !16871 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16874
  %2 = icmp eq i32 %1, 0, !dbg !16875
  br i1 %2, label %3, label %5, !dbg !16874

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !16876
  br label %5, !dbg !16874

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16874
  ret i32 %6, !dbg !16877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16878 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.380() #25, !dbg !16884
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16882, metadata !DIExpression()), !dbg !16885
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16886
  ret %struct._timeout* %2, !dbg !16887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.374(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16888 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16892, metadata !DIExpression()), !dbg !16896
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16893, metadata !DIExpression()), !dbg !16896
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16897
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16897
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16894, metadata !DIExpression()), !dbg !16896
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16898
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16899
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16900
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16901
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16902
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16903
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16904
  ret void, !dbg !16905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16906 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16910, metadata !DIExpression()), !dbg !16912
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16913
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.378(%struct._dnode* noundef %2) #25, !dbg !16914
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16911, metadata !DIExpression()), !dbg !16912
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16915
  ret %struct._timeout* %4, !dbg !16916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.375(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16917 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16922, metadata !DIExpression()), !dbg !16925
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16923, metadata !DIExpression()), !dbg !16925
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16926
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16924, metadata !DIExpression()), !dbg !16925
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16927
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16928
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16929
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16930
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16931
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16932
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16933
  ret void, !dbg !16934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16935 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !16940
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16937, metadata !DIExpression()), !dbg !16941
  %2 = tail call fastcc i32 @elapsed.373() #25, !dbg !16942
  call void @llvm.dbg.value(metadata i32 %2, metadata !16938, metadata !DIExpression()), !dbg !16941
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16943
  br i1 %3, label %14, label %4, !dbg !16945

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16946
  %6 = load i64, i64* %5, align 8, !dbg !16946
  %7 = sext i32 %2 to i64, !dbg !16947
  %8 = sub nsw i64 %6, %7, !dbg !16948
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16949
  br i1 %9, label %14, label %10, !dbg !16950

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16951
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16951
  %13 = trunc i64 %12 to i32, !dbg !16951
  call void @llvm.dbg.value(metadata i32 %13, metadata !16939, metadata !DIExpression()), !dbg !16941
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16953
  call void @llvm.dbg.value(metadata i32 %15, metadata !16939, metadata !DIExpression()), !dbg !16941
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16954
  %17 = icmp ne i32 %16, 0, !dbg !16956
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16957
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16957
  call void @llvm.dbg.value(metadata i32 %20, metadata !16939, metadata !DIExpression()), !dbg !16941
  ret i32 %20, !dbg !16958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.378(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16959 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16963, metadata !DIExpression()), !dbg !16965
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16964, metadata !DIExpression()), !dbg !16965
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16966
  br i1 %2, label %5, label %3, !dbg !16967

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.379(%struct._dnode* noundef nonnull %0) #25, !dbg !16968
  br label %5, !dbg !16967

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16967
  ret %struct._dnode* %6, !dbg !16969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.379(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16970 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16972, metadata !DIExpression()), !dbg !16974
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16973, metadata !DIExpression()), !dbg !16974
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16975
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16976
  br i1 %3, label %7, label %4, !dbg !16977

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16978
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16978
  br label %7, !dbg !16977

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16977
  ret %struct._dnode* %8, !dbg !16979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.380() unnamed_addr #8 !dbg !16980 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16984, metadata !DIExpression()), !dbg !16985
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.381() #25, !dbg !16986
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16986
  ret %struct._dnode* %3, !dbg !16987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.381() unnamed_addr #8 !dbg !16988 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16992, metadata !DIExpression()), !dbg !16993
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16994
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16995
  ret i1 %2, !dbg !16996
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16997 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17001, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.value(metadata i32 -22, metadata !17002, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.value(metadata i32 0, metadata !17003, metadata !DIExpression()), !dbg !17007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16765, metadata !DIExpression()) #23, !dbg !17008
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17010, !srcloc !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17012
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #23, !dbg !17012
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17008
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17013
  br i1 %3, label %5, label %4, !dbg !17014

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17015
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.372, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17015
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17015
  unreachable, !dbg !17015

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17012
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17008
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17016
  call void @llvm.dbg.value(metadata i32 undef, metadata !17005, metadata !DIExpression()), !dbg !17007
  call void @llvm.dbg.value(metadata i32 -22, metadata !17002, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.value(metadata i32 undef, metadata !17003, metadata !DIExpression()), !dbg !17007
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17002, metadata !DIExpression()), !dbg !17006
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.365(%struct._dnode* noundef %6) #25, !dbg !17017
  br i1 %7, label %8, label %9, !dbg !17021

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !17022
  call void @llvm.dbg.value(metadata i32 0, metadata !17002, metadata !DIExpression()), !dbg !17006
  br label %9, !dbg !17024

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17006
  call void @llvm.dbg.value(metadata i32 %10, metadata !17002, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17025
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16843, metadata !DIExpression()) #23, !dbg !17025
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17027
  br i1 %11, label %13, label %12, !dbg !17028

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17029
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.377, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17029
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17029
  unreachable, !dbg !17029

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17010
  call void @llvm.dbg.value(metadata i32 %14, metadata !16777, metadata !DIExpression()) #23, !dbg !17012
  call void @llvm.dbg.value(metadata i32 %14, metadata !16771, metadata !DIExpression()) #23, !dbg !17008
  call void @llvm.dbg.value(metadata i32 %14, metadata !17005, metadata !DIExpression()), !dbg !17007
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17025
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17030
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17032, !srcloc !16858
  call void @llvm.dbg.value(metadata i32 %10, metadata !17002, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.value(metadata i32 undef, metadata !17003, metadata !DIExpression()), !dbg !17007
  ret i32 %10, !dbg !17033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17034 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17036, metadata !DIExpression()), !dbg !17037
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !17038
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17040
  br i1 %3, label %10, label %4, !dbg !17041

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17042
  %6 = load i64, i64* %5, align 8, !dbg !17042
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17044
  %8 = load i64, i64* %7, align 8, !dbg !17045
  %9 = add nsw i64 %8, %6, !dbg !17045
  store i64 %9, i64* %7, align 8, !dbg !17045
  br label %10, !dbg !17046

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17047
  tail call fastcc void @sys_dlist_remove.384(%struct._dnode* noundef %11) #25, !dbg !17048
  ret void, !dbg !17049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.384(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17050 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17054, metadata !DIExpression()), !dbg !17057
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17058
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17058
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17055, metadata !DIExpression()), !dbg !17057
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17059
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17059
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17056, metadata !DIExpression()), !dbg !17057
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17060
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17061
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17062
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17063
  tail call fastcc void @sys_dnode_init.385(%struct._dnode* noundef %0) #25, !dbg !17064
  ret void, !dbg !17065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.385(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17066 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17068, metadata !DIExpression()), !dbg !17069
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17070
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17071
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17072
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17073
  ret void, !dbg !17074
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17075 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17081, metadata !DIExpression()), !dbg !17086
  call void @llvm.dbg.value(metadata i64 0, metadata !17082, metadata !DIExpression()), !dbg !17086
  call void @llvm.dbg.value(metadata i32 0, metadata !17083, metadata !DIExpression()), !dbg !17087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16765, metadata !DIExpression()) #23, !dbg !17088
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17090, !srcloc !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17092
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #23, !dbg !17092
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17088
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17093
  br i1 %3, label %5, label %4, !dbg !17094

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17095
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.372, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17095
  unreachable, !dbg !17095

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17092
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17088
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17096
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()), !dbg !17087
  call void @llvm.dbg.value(metadata i64 0, metadata !17082, metadata !DIExpression()), !dbg !17086
  call void @llvm.dbg.value(metadata i32 undef, metadata !17083, metadata !DIExpression()), !dbg !17087
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !17097
  call void @llvm.dbg.value(metadata i64 %6, metadata !17082, metadata !DIExpression()), !dbg !17086
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16843, metadata !DIExpression()) #23, !dbg !17100
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17102
  br i1 %7, label %9, label %8, !dbg !17103

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17104
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.377, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17104
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17104
  unreachable, !dbg !17104

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17090
  call void @llvm.dbg.value(metadata i32 %10, metadata !16777, metadata !DIExpression()) #23, !dbg !17092
  call void @llvm.dbg.value(metadata i32 %10, metadata !16771, metadata !DIExpression()) #23, !dbg !17088
  call void @llvm.dbg.value(metadata i32 %10, metadata !17085, metadata !DIExpression()), !dbg !17087
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17100
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17105
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17107, !srcloc !16858
  call void @llvm.dbg.value(metadata i64 %6, metadata !17082, metadata !DIExpression()), !dbg !17086
  call void @llvm.dbg.value(metadata i32 undef, metadata !17083, metadata !DIExpression()), !dbg !17087
  ret i64 %6, !dbg !17108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17109 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17111, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i64 0, metadata !17112, metadata !DIExpression()), !dbg !17115
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.386(%struct._timeout* noundef %0) #25, !dbg !17116
  br i1 %2, label %21, label %3, !dbg !17118

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !17119
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17113, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata i64 0, metadata !17112, metadata !DIExpression()), !dbg !17115
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17121
  br i1 %5, label %16, label %6, !dbg !17123

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17113, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata i64 %8, metadata !17112, metadata !DIExpression()), !dbg !17115
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17124
  %10 = load i64, i64* %9, align 8, !dbg !17124
  %11 = add nsw i64 %10, %8, !dbg !17126
  call void @llvm.dbg.value(metadata i64 %11, metadata !17112, metadata !DIExpression()), !dbg !17115
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17127
  br i1 %12, label %16, label %13, !dbg !17129

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !17130
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17113, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata i64 %11, metadata !17112, metadata !DIExpression()), !dbg !17115
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17121
  br i1 %15, label %16, label %6, !dbg !17123, !llvm.loop !17131

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17115
  call void @llvm.dbg.value(metadata i64 %17, metadata !17112, metadata !DIExpression()), !dbg !17115
  %18 = tail call fastcc i32 @elapsed.373() #25, !dbg !17133
  %19 = sext i32 %18 to i64, !dbg !17133
  %20 = sub nsw i64 %17, %19, !dbg !17134
  br label %21, !dbg !17135

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17115
  ret i64 %22, !dbg !17136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.386(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17137 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17141, metadata !DIExpression()), !dbg !17142
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17143
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.365(%struct._dnode* noundef %2) #25, !dbg !17144
  %4 = xor i1 %3, true, !dbg !17145
  ret i1 %4, !dbg !17146
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17147 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17149, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i64 0, metadata !17150, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i32 0, metadata !17151, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16765, metadata !DIExpression()) #23, !dbg !17156
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17158, !srcloc !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #23, !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17156
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17161
  br i1 %3, label %5, label %4, !dbg !17162

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.372, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17163
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17163
  unreachable, !dbg !17163

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17156
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !17153, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i64 0, metadata !17150, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()), !dbg !17155
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17165
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !17168
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17150, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17154
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17169
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16843, metadata !DIExpression()) #23, !dbg !17169
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17171
  br i1 %8, label %10, label %9, !dbg !17172

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17173
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.377, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17173
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17173
  unreachable, !dbg !17173

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17158
  call void @llvm.dbg.value(metadata i32 %11, metadata !16777, metadata !DIExpression()) #23, !dbg !17160
  call void @llvm.dbg.value(metadata i32 %11, metadata !16771, metadata !DIExpression()) #23, !dbg !17156
  call void @llvm.dbg.value(metadata i32 %11, metadata !17153, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17150, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17154
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17174
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17176, !srcloc !16858
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()), !dbg !17155
  %12 = add i64 %7, %6, !dbg !17177
  ret i64 %12, !dbg !17178
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17179 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17181, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata i32 0, metadata !17182, metadata !DIExpression()), !dbg !17186
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16765, metadata !DIExpression()) #23, !dbg !17187
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17189, !srcloc !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17191
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #23, !dbg !17191
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17187
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17192
  br i1 %2, label %4, label %3, !dbg !17193

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17194
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.372, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17194
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17194
  unreachable, !dbg !17194

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17191
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17187
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17195
  call void @llvm.dbg.value(metadata i32 undef, metadata !17184, metadata !DIExpression()), !dbg !17186
  call void @llvm.dbg.value(metadata i32 -1, metadata !17181, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !17182, metadata !DIExpression()), !dbg !17186
  %5 = tail call fastcc i32 @next_timeout() #25, !dbg !17196
  call void @llvm.dbg.value(metadata i32 %5, metadata !17181, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17199
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16843, metadata !DIExpression()) #23, !dbg !17199
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17201
  br i1 %6, label %8, label %7, !dbg !17202

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17203
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.377, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17203
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17203
  unreachable, !dbg !17203

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17189
  call void @llvm.dbg.value(metadata i32 %9, metadata !16777, metadata !DIExpression()) #23, !dbg !17191
  call void @llvm.dbg.value(metadata i32 %9, metadata !16771, metadata !DIExpression()) #23, !dbg !17187
  call void @llvm.dbg.value(metadata i32 %9, metadata !17184, metadata !DIExpression()), !dbg !17186
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17199
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17204
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17206, !srcloc !16858
  call void @llvm.dbg.value(metadata i32 %5, metadata !17181, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !17182, metadata !DIExpression()), !dbg !17186
  ret i32 %5, !dbg !17207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17210, metadata !DIExpression()), !dbg !17220
  call void @llvm.dbg.value(metadata i1 %1, metadata !17211, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17220
  call void @llvm.dbg.value(metadata i32 0, metadata !17212, metadata !DIExpression()), !dbg !17221
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16765, metadata !DIExpression()) #23, !dbg !17222
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17224, !srcloc !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17226
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #23, !dbg !17226
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17222
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17227
  br i1 %4, label %6, label %5, !dbg !17228

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17229
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.372, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17229
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17229
  unreachable, !dbg !17229

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17226
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17222
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17230
  call void @llvm.dbg.value(metadata i32 undef, metadata !17214, metadata !DIExpression()), !dbg !17221
  call void @llvm.dbg.value(metadata i32 undef, metadata !17212, metadata !DIExpression()), !dbg !17221
  %7 = tail call fastcc i32 @next_timeout() #25, !dbg !17231
  call void @llvm.dbg.value(metadata i32 %7, metadata !17215, metadata !DIExpression()), !dbg !17232
  call void @llvm.dbg.value(metadata i1 undef, metadata !17218, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17232
  %8 = icmp slt i32 %7, 2, !dbg !17233
  call void @llvm.dbg.value(metadata i1 %8, metadata !17219, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17232
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17234
  call void @llvm.dbg.value(metadata i1 %9, metadata !17218, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17232
  br i1 %10, label %14, label %11, !dbg !17234

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17236
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17236
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #24, !dbg !17238
  br label %14, !dbg !17239

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16843, metadata !DIExpression()) #23, !dbg !17240
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17242
  br i1 %15, label %17, label %16, !dbg !17243

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17244
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.377, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17244
  unreachable, !dbg !17244

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17224
  call void @llvm.dbg.value(metadata i32 %18, metadata !16777, metadata !DIExpression()) #23, !dbg !17226
  call void @llvm.dbg.value(metadata i32 %18, metadata !16771, metadata !DIExpression()) #23, !dbg !17222
  call void @llvm.dbg.value(metadata i32 %18, metadata !17214, metadata !DIExpression()), !dbg !17221
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17240
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17245
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17247, !srcloc !16858
  call void @llvm.dbg.value(metadata i32 1, metadata !17212, metadata !DIExpression()), !dbg !17221
  call void @llvm.dbg.value(metadata i32 undef, metadata !17212, metadata !DIExpression()), !dbg !17221
  ret void, !dbg !17248
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17253, metadata !DIExpression()), !dbg !17258
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !17259
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16765, metadata !DIExpression()) #23, !dbg !17260
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17262, !srcloc !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17264
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #23, !dbg !17264
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17260
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17265
  br i1 %3, label %5, label %4, !dbg !17266

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17267
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.372, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17267
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17267
  unreachable, !dbg !17267

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17264
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17260
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17268
  call void @llvm.dbg.value(metadata i32 undef, metadata !17254, metadata !DIExpression()), !dbg !17258
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17258
  call void @llvm.dbg.value(metadata i32 undef, metadata !17254, metadata !DIExpression()), !dbg !17258
  %6 = tail call fastcc %struct._timeout* @first() #25, !dbg !17269
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17270
  br i1 %7, label %37, label %8, !dbg !17271

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17258
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17272
  %14 = load i64, i64* %13, align 8, !dbg !17272
  %15 = sext i32 %11 to i64, !dbg !17273
  %16 = icmp sgt i64 %14, %15, !dbg !17274
  br i1 %16, label %35, label %17, !dbg !17275

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17255, metadata !DIExpression()), !dbg !17276
  %18 = trunc i64 %14 to i32, !dbg !17277
  call void @llvm.dbg.value(metadata i32 %18, metadata !17257, metadata !DIExpression()), !dbg !17276
  %19 = sext i32 %18 to i64, !dbg !17278
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17279
  %21 = add i64 %20, %19, !dbg !17279
  store i64 %21, i64* @curr_tick, align 8, !dbg !17279
  store i64 0, i64* %13, align 8, !dbg !17280
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #25, !dbg !17281
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17282
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16843, metadata !DIExpression()) #23, !dbg !17282
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17284
  br i1 %22, label %24, label %23, !dbg !17285

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.377, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17286
  unreachable, !dbg !17286

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16838, metadata !DIExpression()) #23, !dbg !17282
  call void @llvm.dbg.value(metadata i32 %12, metadata !16852, metadata !DIExpression()) #23, !dbg !17287
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17289, !srcloc !16858
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17290
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17290
  tail call void %26(%struct._timeout* noundef nonnull %9) #24, !dbg !17291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16765, metadata !DIExpression()) #23, !dbg !17292
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17294, !srcloc !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #23, !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17292
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17297
  br i1 %28, label %30, label %29, !dbg !17298

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.372, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17299
  unreachable, !dbg !17299

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17292
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17300
  call void @llvm.dbg.value(metadata i32 undef, metadata !17254, metadata !DIExpression()), !dbg !17258
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17301
  %32 = sub nsw i32 %31, %18, !dbg !17301
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17258
  call void @llvm.dbg.value(metadata i32 undef, metadata !17254, metadata !DIExpression()), !dbg !17258
  %33 = tail call fastcc %struct._timeout* @first() #25, !dbg !17269
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17270
  br i1 %34, label %37, label %8, !dbg !17271, !llvm.loop !17302

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17304
  store i64 %36, i64* %13, align 8, !dbg !17304
  br label %41, !dbg !17307

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17258
  %40 = sext i32 %39 to i64, !dbg !17308
  br label %41, !dbg !17308

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17308
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17309
  %45 = add i64 %44, %42, !dbg !17309
  store i64 %45, i64* @curr_tick, align 8, !dbg !17309
  store i32 0, i32* @announce_remaining, align 4, !dbg !17310
  %46 = tail call fastcc i32 @next_timeout() #25, !dbg !17311
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #24, !dbg !17312
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16843, metadata !DIExpression()) #23, !dbg !17313
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17315
  br i1 %47, label %49, label %48, !dbg !17316

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17317
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.377, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17317
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17317
  unreachable, !dbg !17317

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17258
  call void @llvm.dbg.value(metadata i32 %50, metadata !16838, metadata !DIExpression()) #23, !dbg !17313
  call void @llvm.dbg.value(metadata i32 %50, metadata !16852, metadata !DIExpression()) #23, !dbg !17318
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17320, !srcloc !16858
  ret void, !dbg !17321
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17322 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17326, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 0, metadata !17327, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16765, metadata !DIExpression()) #23, !dbg !17332
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17334, !srcloc !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #23, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17332
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17337
  br i1 %2, label %4, label %3, !dbg !17338

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.372, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 148) #24, !dbg !17339
  unreachable, !dbg !17339

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()) #23, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()) #23, !dbg !17332
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17340
  call void @llvm.dbg.value(metadata i32 undef, metadata !17329, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata i64 0, metadata !17326, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !17327, metadata !DIExpression()), !dbg !17331
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17341
  %6 = tail call fastcc i32 @elapsed.373() #25, !dbg !17344
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17326, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16843, metadata !DIExpression()) #23, !dbg !17345
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17347
  br i1 %7, label %9, label %8, !dbg !17348

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17349
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.377, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17349
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.371, i32 0, i32 0), i32 noundef 194) #24, !dbg !17349
  unreachable, !dbg !17349

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17334
  call void @llvm.dbg.value(metadata i32 %10, metadata !16777, metadata !DIExpression()) #23, !dbg !17336
  call void @llvm.dbg.value(metadata i32 %10, metadata !16771, metadata !DIExpression()) #23, !dbg !17332
  call void @llvm.dbg.value(metadata i32 %10, metadata !17329, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17326, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17330
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17326, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !16838, metadata !DIExpression()) #23, !dbg !17345
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17350
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17352, !srcloc !16858
  call void @llvm.dbg.value(metadata i32 undef, metadata !17327, metadata !DIExpression()), !dbg !17331
  %11 = sext i32 %6 to i64, !dbg !17344
  %12 = add i64 %5, %11, !dbg !17353
  ret i64 %12, !dbg !17354
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17355 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !17356
  %2 = trunc i64 %1 to i32, !dbg !17357
  ret i32 %2, !dbg !17358
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17359 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !17360
  ret i64 %1, !dbg !17361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17364, metadata !DIExpression()), !dbg !17371
  %2 = icmp eq i32 %0, 0, !dbg !17372
  br i1 %2, label %10, label %3, !dbg !17374

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !17375
  call void @llvm.dbg.value(metadata i32 %4, metadata !17365, metadata !DIExpression()), !dbg !17371
  %5 = mul i32 %0, 200, !dbg !17376
  call void @llvm.dbg.value(metadata i32 %5, metadata !17366, metadata !DIExpression()), !dbg !17371
  br label %6, !dbg !17377

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !17378
  call void @llvm.dbg.value(metadata i32 %7, metadata !17367, metadata !DIExpression()), !dbg !17379
  %8 = sub i32 %7, %4, !dbg !17380
  %9 = icmp ult i32 %8, %5, !dbg !17382
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17384 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !17385
  ret i32 %1, !dbg !17386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17387 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !17389
  ret i32 %1, !dbg !17390
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17391 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17395, metadata !DIExpression()), !dbg !17397
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17398

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !17399
  br label %14, !dbg !17403

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17396, metadata !DIExpression()), !dbg !17397
  %6 = icmp slt i64 %2, -1, !dbg !17404
  br i1 %6, label %7, label %9, !dbg !17407

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17408
  br label %14, !dbg !17409

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !17411
  %11 = icmp ugt i64 %2, 1, !dbg !17412
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17412
  %13 = add nsw i64 %10, %12, !dbg !17413
  br label %14, !dbg !17414

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17415
  ret i64 %15, !dbg !17416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !17417 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17419, metadata !DIExpression()), !dbg !17423
  %2 = icmp eq i8* %0, null, !dbg !17424
  br i1 %2, label %7, label %3, !dbg !17426

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !17420, metadata !DIExpression()), !dbg !17423
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !17427
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !17427
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !17420, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata i8* %4, metadata !17419, metadata !DIExpression()), !dbg !17423
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !17429
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #24, !dbg !17430
  br label %7, !dbg !17431

7:                                                ; preds = %3, %1
  ret void, !dbg !17432
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17437, metadata !DIExpression()), !dbg !17440
  call void @llvm.dbg.value(metadata i32 %1, metadata !17438, metadata !DIExpression()), !dbg !17440
  %3 = icmp ugt i32 %0, 3, !dbg !17441
  %4 = and i32 %0, 3, !dbg !17441
  %5 = icmp eq i32 %4, 0, !dbg !17441
  %6 = and i1 %3, %5, !dbg !17441
  br i1 %6, label %8, label %7, !dbg !17441

7:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.401, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.402, i32 0, i32 0), i32 noundef 68) #24, !dbg !17444
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.403, i32 0, i32 0)) #24, !dbg !17444
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.402, i32 0, i32 0), i32 noundef 68) #24, !dbg !17444
  unreachable, !dbg !17444

8:                                                ; preds = %2
  %9 = tail call i32 @llvm.ctpop.i32(i32 %0), !dbg !17446, !range !5257
  %10 = icmp ult i32 %9, 2, !dbg !17446
  br i1 %10, label %12, label %11, !dbg !17449

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.402, i32 0, i32 0), i32 noundef 71) #24, !dbg !17450
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.405, i32 0, i32 0)) #24, !dbg !17450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.402, i32 0, i32 0), i32 noundef 71) #24, !dbg !17450
  unreachable, !dbg !17450

12:                                               ; preds = %8
  %13 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #25, !dbg !17452
  call void @llvm.dbg.value(metadata i8* %13, metadata !17439, metadata !DIExpression()), !dbg !17440
  ret i8* %13, !dbg !17453
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !17454 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17458, metadata !DIExpression()), !dbg !17464
  call void @llvm.dbg.value(metadata i32 %1, metadata !17459, metadata !DIExpression()), !dbg !17464
  call void @llvm.dbg.value(metadata i32 %2, metadata !17460, metadata !DIExpression()), !dbg !17464
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !17460, metadata !DIExpression(DW_OP_deref)), !dbg !17464
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !17465
  br i1 %5, label %21, label %6, !dbg !17467

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !17468
  call void @llvm.dbg.value(metadata i32 %7, metadata !17463, metadata !DIExpression()), !dbg !17464
  %8 = load i32, i32* %4, align 4, !dbg !17469
  call void @llvm.dbg.value(metadata i32 %8, metadata !17460, metadata !DIExpression()), !dbg !17464
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #24, !dbg !17470
  call void @llvm.dbg.value(metadata i8* %9, metadata !17461, metadata !DIExpression()), !dbg !17464
  %10 = icmp eq i8* %9, null, !dbg !17471
  br i1 %10, label %21, label %11, !dbg !17473

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !17474
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !17462, metadata !DIExpression()), !dbg !17464
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !17475
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !17476
  call void @llvm.dbg.value(metadata i8* %13, metadata !17462, metadata !DIExpression()), !dbg !17464
  call void @llvm.dbg.value(metadata i8* %13, metadata !17461, metadata !DIExpression()), !dbg !17464
  %14 = icmp eq i32 %1, 0, !dbg !17477
  br i1 %14, label %21, label %15, !dbg !17477

15:                                               ; preds = %11
  %16 = ptrtoint i8* %13 to i32, !dbg !17477
  %17 = add i32 %1, -1, !dbg !17477
  %18 = and i32 %17, %16, !dbg !17477
  %19 = icmp eq i32 %18, 0, !dbg !17477
  br i1 %19, label %21, label %20, !dbg !17480

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6.406, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.402, i32 0, i32 0), i32 noundef 38) #24, !dbg !17481
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.407, i32 0, i32 0), i8* noundef nonnull %13, i32 noundef %1) #24, !dbg !17481
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.402, i32 0, i32 0), i32 noundef 38) #24, !dbg !17481
  unreachable, !dbg !17481

21:                                               ; preds = %11, %15, %6, %3
  %22 = phi i8* [ null, %3 ], [ null, %6 ], [ %13, %15 ], [ %13, %11 ], !dbg !17464
  ret i8* %22, !dbg !17483
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #20 !dbg !17484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17486, metadata !DIExpression()), !dbg !17489
  call void @llvm.dbg.value(metadata i32 4, metadata !17487, metadata !DIExpression()), !dbg !17489
  call void @llvm.dbg.value(metadata i32* %1, metadata !17488, metadata !DIExpression()), !dbg !17489
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !17490
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !17490
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !17490
  store i32 %5, i32* %1, align 4, !dbg !17490
  ret i1 %4, !dbg !17491
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !17492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17494, metadata !DIExpression()), !dbg !17496
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #25, !dbg !17497
  call void @llvm.dbg.value(metadata i8* %2, metadata !17495, metadata !DIExpression()), !dbg !17496
  ret i8* %2, !dbg !17498
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17499 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !17501, metadata !DIExpression()), !dbg !17505
  call void @llvm.dbg.value(metadata i32 %1, metadata !17502, metadata !DIExpression()), !dbg !17505
  %4 = bitcast i32* %3 to i8*, !dbg !17506
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !17506
  call void @llvm.dbg.value(metadata i32* %3, metadata !17504, metadata !DIExpression(DW_OP_deref)), !dbg !17505
  %5 = call fastcc zeroext i1 @size_mul_overflow.410(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #25, !dbg !17507
  br i1 %5, label %12, label %6, !dbg !17509

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !17510
  call void @llvm.dbg.value(metadata i32 %7, metadata !17504, metadata !DIExpression()), !dbg !17505
  %8 = tail call i8* @k_malloc(i32 noundef %7) #25, !dbg !17511
  call void @llvm.dbg.value(metadata i8* %8, metadata !17503, metadata !DIExpression()), !dbg !17505
  %9 = icmp eq i8* %8, null, !dbg !17512
  br i1 %9, label %12, label %10, !dbg !17514

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !17504, metadata !DIExpression()), !dbg !17505
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #24, !dbg !17515
  br label %12, !dbg !17517

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !17505
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !17518
  ret i8* %13, !dbg !17518
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow.410(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #20 !dbg !17519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17521, metadata !DIExpression()), !dbg !17524
  call void @llvm.dbg.value(metadata i32 %1, metadata !17522, metadata !DIExpression()), !dbg !17524
  call void @llvm.dbg.value(metadata i32* %2, metadata !17523, metadata !DIExpression()), !dbg !17524
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !17525
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !17525
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !17525
  store i32 %6, i32* %2, align 4, !dbg !17525
  ret i1 %5, !dbg !17526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !17527 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17595, metadata !DIExpression()), !dbg !17596
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !17597
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 4, !dbg !17598
  ret void, !dbg !17599
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17602, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.value(metadata i32 %1, metadata !17603, metadata !DIExpression()), !dbg !17606
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !17607
  br i1 %3, label %9, label %4, !dbg !17609

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17610
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 5, !dbg !17612
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 4, !dbg !17612
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !17605, metadata !DIExpression()), !dbg !17606
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !17613
  br i1 %8, label %12, label %9, !dbg !17615

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #25, !dbg !17616
  call void @llvm.dbg.value(metadata i8* %11, metadata !17604, metadata !DIExpression()), !dbg !17606
  br label %12, !dbg !17618

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !17619
  call void @llvm.dbg.value(metadata i8* %13, metadata !17604, metadata !DIExpression()), !dbg !17606
  ret i8* %13, !dbg !17620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @boot_banner() local_unnamed_addr #4 !dbg !17621 {
  ret void, !dbg !17623
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17624 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17626, metadata !DIExpression()), !dbg !17648
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17627, metadata !DIExpression()), !dbg !17649
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !17650

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.419, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.420, i32 0, i32 0), i32 noundef 24) #24, !dbg !17654
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.421, i32 0, i32 0)) #24, !dbg !17654
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.420, i32 0, i32 0), i32 noundef 24) #24, !dbg !17654
  unreachable, !dbg !17654

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17627, metadata !DIExpression()), !dbg !17649
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17657
  br i1 %5, label %7, label %6, !dbg !17658

6:                                                ; preds = %3
  ret i32 0, !dbg !17659

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17660
  %9 = load i8*, i8** %8, align 4, !dbg !17660
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17663
  %11 = load i32, i32* %10, align 4, !dbg !17663
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #25, !dbg !17664
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17665
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !17627, metadata !DIExpression()), !dbg !17649
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17666
  br i1 %13, label %2, label %3, !dbg !17650, !llvm.loop !17667
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17669 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17673, metadata !DIExpression()), !dbg !17676
  call void @llvm.dbg.value(metadata i8* %1, metadata !17674, metadata !DIExpression()), !dbg !17676
  call void @llvm.dbg.value(metadata i32 %2, metadata !17675, metadata !DIExpression()), !dbg !17676
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17677
  tail call fastcc void @z_waitq_init.422(%struct._wait_q_t* noundef nonnull %4) #25, !dbg !17678
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17679
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #24, !dbg !17680
  ret void, !dbg !17681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.422(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !17682 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17687, metadata !DIExpression()), !dbg !17688
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17689
  tail call fastcc void @sys_dlist_init.423(%struct._dnode* noundef %2) #25, !dbg !17690
  ret void, !dbg !17691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.423(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !17692 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17697, metadata !DIExpression()), !dbg !17698
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17699
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17700
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17701
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17702
  ret void, !dbg !17703
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17704 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17715, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17712, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i32 %1, metadata !17713, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i32 %2, metadata !17714, metadata !DIExpression()), !dbg !17725
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #24, !dbg !17726
  call void @llvm.dbg.value(metadata i64 %6, metadata !17717, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i8* null, metadata !17718, metadata !DIExpression()), !dbg !17725
  %7 = icmp eq i64 %5, -1, !dbg !17727
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17727
  call void @llvm.dbg.value(metadata i64 %8, metadata !17717, metadata !DIExpression()), !dbg !17725
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !17729, metadata !DIExpression()) #23, !dbg !17736
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17738, !srcloc !17744
  call void @llvm.dbg.value(metadata i32 undef, metadata !17741, metadata !DIExpression()) #23, !dbg !17745
  call void @llvm.dbg.value(metadata i32 undef, metadata !17742, metadata !DIExpression()) #23, !dbg !17745
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #23, !dbg !17736
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !17746
  br i1 %11, label %13, label %12, !dbg !17749

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.426, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #24, !dbg !17750
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.428, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #24, !dbg !17750
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #24, !dbg !17750
  unreachable, !dbg !17750

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17741, metadata !DIExpression()) #23, !dbg !17745
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #23, !dbg !17736
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !17752
  call void @llvm.dbg.value(metadata i32 undef, metadata !17719, metadata !DIExpression()), !dbg !17725
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17753, !srcloc !17762
  call void @llvm.dbg.value(metadata i32 %14, metadata !17756, metadata !DIExpression()) #23, !dbg !17763
  %15 = icmp eq i32 %14, 0, !dbg !17764
  %16 = icmp eq i64 %5, 0, !dbg !17765
  %17 = select i1 %15, i1 true, i1 %16, !dbg !17765
  br i1 %17, label %18, label %25, !dbg !17765

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17718, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i8 0, metadata !17724, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i32 undef, metadata !17719, metadata !DIExpression()), !dbg !17725
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #24, !dbg !17766
  call void @llvm.dbg.value(metadata i8* %20, metadata !17718, metadata !DIExpression()), !dbg !17725
  %21 = tail call i64 @sys_clock_tick_get() #24, !dbg !17768
  call void @llvm.dbg.value(metadata i64 %21, metadata !17716, metadata !DIExpression()), !dbg !17725
  %22 = icmp eq i8* %20, null, !dbg !17769
  br i1 %22, label %23, label %43, !dbg !17771

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !17719, metadata !DIExpression()), !dbg !17725
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !17771

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.429, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.420, i32 0, i32 0), i32 noundef 76) #24, !dbg !17772
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.430, i32 0, i32 0)) #24, !dbg !17772
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.420, i32 0, i32 0), i32 noundef 76) #24, !dbg !17772
  unreachable, !dbg !17772

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17724, metadata !DIExpression()), !dbg !17725
  %29 = sub nsw i64 %8, %27, !dbg !17774
  %30 = icmp slt i64 %29, 1, !dbg !17775
  br i1 %30, label %43, label %31, !dbg !17776

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !17725
  call void @llvm.dbg.value(metadata i8 undef, metadata !17724, metadata !DIExpression()), !dbg !17725
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !17777
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !17777
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #24, !dbg !17777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !17729, metadata !DIExpression()) #23, !dbg !17778
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17780, !srcloc !17744
  call void @llvm.dbg.value(metadata i32 undef, metadata !17741, metadata !DIExpression()) #23, !dbg !17782
  call void @llvm.dbg.value(metadata i32 undef, metadata !17742, metadata !DIExpression()) #23, !dbg !17782
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #23, !dbg !17778
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !17783
  br i1 %37, label %39, label %38, !dbg !17784

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.426, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #24, !dbg !17785
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.428, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #24, !dbg !17785
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #24, !dbg !17785
  unreachable, !dbg !17785

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !17724, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i32 undef, metadata !17741, metadata !DIExpression()) #23, !dbg !17782
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #23, !dbg !17778
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !17786
  call void @llvm.dbg.value(metadata i32 undef, metadata !17719, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i8* null, metadata !17718, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i32 undef, metadata !17719, metadata !DIExpression()), !dbg !17725
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #24, !dbg !17766
  call void @llvm.dbg.value(metadata i8* %40, metadata !17718, metadata !DIExpression()), !dbg !17725
  %41 = tail call i64 @sys_clock_tick_get() #24, !dbg !17768
  call void @llvm.dbg.value(metadata i64 %41, metadata !17716, metadata !DIExpression()), !dbg !17725
  %42 = icmp eq i8* %40, null, !dbg !17769
  br i1 %42, label %26, label %43, !dbg !17771, !llvm.loop !17787

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !17766
  call void @llvm.dbg.value(metadata i8* %45, metadata !17718, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !17796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !17795, metadata !DIExpression()) #23, !dbg !17796
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !17798
  br i1 %46, label %48, label %47, !dbg !17801

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.431, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 194) #24, !dbg !17802
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.432, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #24, !dbg !17802
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 194) #24, !dbg !17802
  unreachable, !dbg !17802

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !17725
  call void @llvm.dbg.value(metadata i32 %49, metadata !17790, metadata !DIExpression()) #23, !dbg !17796
  call void @llvm.dbg.value(metadata i32 %49, metadata !17804, metadata !DIExpression()) #23, !dbg !17807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #23, !dbg !17809, !srcloc !17810
  ret i8* %45, !dbg !17811
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17812 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17818, metadata !DIExpression()), !dbg !17820
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17816, metadata !DIExpression()), !dbg !17820
  call void @llvm.dbg.value(metadata i32 %1, metadata !17817, metadata !DIExpression()), !dbg !17820
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #25, !dbg !17821
  call void @llvm.dbg.value(metadata i8* %4, metadata !17819, metadata !DIExpression()), !dbg !17820
  ret i8* %4, !dbg !17822
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17823 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17827, metadata !DIExpression()), !dbg !17830
  call void @llvm.dbg.value(metadata i8* %1, metadata !17828, metadata !DIExpression()), !dbg !17830
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !17729, metadata !DIExpression()) #23, !dbg !17832
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17834, !srcloc !17744
  call void @llvm.dbg.value(metadata i32 undef, metadata !17741, metadata !DIExpression()) #23, !dbg !17836
  call void @llvm.dbg.value(metadata i32 undef, metadata !17742, metadata !DIExpression()) #23, !dbg !17836
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #23, !dbg !17832
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !17837
  br i1 %5, label %7, label %6, !dbg !17838

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.426, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #24, !dbg !17839
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.428, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !17839
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #24, !dbg !17839
  unreachable, !dbg !17839

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !17834
  call void @llvm.dbg.value(metadata i32 %8, metadata !17741, metadata !DIExpression()) #23, !dbg !17836
  call void @llvm.dbg.value(metadata i32 %8, metadata !17735, metadata !DIExpression()) #23, !dbg !17832
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !17840
  call void @llvm.dbg.value(metadata i32 %8, metadata !17829, metadata !DIExpression()), !dbg !17830
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17841
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #24, !dbg !17842
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17843
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #24, !dbg !17845
  %12 = icmp eq i32 %11, 0, !dbg !17846
  br i1 %12, label %15, label %13, !dbg !17847

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !17848
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #24, !dbg !17848
  br label %19, !dbg !17850

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !17851
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !17795, metadata !DIExpression()) #23, !dbg !17851
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !17854
  br i1 %16, label %18, label %17, !dbg !17855

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.431, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 194) #24, !dbg !17856
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.432, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !17856
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 194) #24, !dbg !17856
  unreachable, !dbg !17856

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !17790, metadata !DIExpression()) #23, !dbg !17851
  call void @llvm.dbg.value(metadata i32 %8, metadata !17804, metadata !DIExpression()) #23, !dbg !17857
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !17859, !srcloc !17810
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !17860
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1489, !2, !2778, !27, !338, !535, !718, !741, !2780, !2782, !2815, !2849, !2851, !750, !2853, !2856, !2867, !2914, !2916, !2944, !2972, !3015, !3086, !3131, !3159, !1179, !1189, !1201, !1306, !1500, !1779, !3164, !2041, !3166, !3169, !3246, !3260, !3272, !3397, !2071, !3400, !2077, !2435, !3418, !3420, !2456, !2560, !3520, !2671, !2712, !3523, !2753}
!llvm.ident = !{!3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525, !3525}
!llvm.module.flags = !{!3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_consumer_sub", scope: !27, file: !117, line: 13, type: !126, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !114, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !111, !112}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!110 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !113)
!113 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!114 = !{!25, !115, !289, !320, !324, !329, !334}
!115 = !DIGlobalVariableExpression(var: !116, expr: !DIExpression())
!116 = distinct !DIGlobalVariable(name: "consumer_sub", scope: !27, file: !117, line: 13, type: !118, isLocal: false, isDefinition: true, align: 32)
!117 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !120)
!119 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = !{!121, !123, !168}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !118, file: !119, line: 91, baseType: !122, size: 8)
!122 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !118, file: !119, line: 93, baseType: !124, size: 32, offset: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !150, !155, !158, !159, !161, !162, !163, !164, !165}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !126, file: !127, line: 4206, baseType: !130, size: 64)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !132)
!131 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !133)
!133 = !{!134}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !132, file: !131, line: 232, baseType: !135, size: 64)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !137)
!136 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !138)
!138 = !{!139, !145}
!139 = !DIDerivedType(tag: DW_TAG_member, scope: !137, file: !136, line: 38, baseType: !140, size: 32)
!140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !137, file: !136, line: 38, size: 32, elements: !141)
!141 = !{!142, !144}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !140, file: !136, line: 39, baseType: !143, size: 32)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !140, file: !136, line: 40, baseType: !143, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, scope: !137, file: !136, line: 42, baseType: !146, size: 32, offset: 32)
!146 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !137, file: !136, line: 42, size: 32, elements: !147)
!147 = !{!148, !149}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !146, file: !136, line: 43, baseType: !143, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !146, file: !136, line: 44, baseType: !143, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !126, file: !127, line: 4208, baseType: !151, size: 32, offset: 64)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !153)
!152 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!153 = !{!154}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !151, file: !152, line: 52, baseType: !22, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !126, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !157, line: 214, baseType: !32)
!157 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!158 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !126, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !126, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !126, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !126, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !126, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !126, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !126, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !167)
!167 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !118, file: !119, line: 96, baseType: !169, size: 32, offset: 64)
!169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DISubroutineType(types: !172)
!172 = !{null, !173}
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !176)
!176 = !{!177, !179, !183, !185, !186, !191, !284}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !175, file: !119, line: 32, baseType: !178, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !175, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !182)
!182 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !175, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !175, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !175, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !188)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DISubroutineType(types: !190)
!190 = !{!122, !13, !156}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !175, file: !119, line: 56, baseType: !192, size: 32, offset: 160)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !194)
!194 = !{!195, !196, !282, !283}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !193, file: !127, line: 2722, baseType: !130, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !193, file: !127, line: 2724, baseType: !197, size: 32, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 32)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !200)
!199 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!200 = !{!201, !246, !259, !260, !261, !262, !277}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !198, file: !199, line: 247, baseType: !202, size: 384)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !203)
!203 = !{!204, !218, !220, !221, !222, !233, !234, !235}
!204 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !199, line: 60, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !202, file: !199, line: 60, size: 64, elements: !206)
!206 = !{!207, !209}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !205, file: !199, line: 61, baseType: !208, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !137)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !205, file: !199, line: 62, baseType: !210, size: 64)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !210, file: !211, line: 50, baseType: !214, size: 64)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !216)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!216 = !{!217}
!217 = !DISubrange(count: 2)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !202, file: !199, line: 68, baseType: !219, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !202, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !202, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!222 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !199, line: 90, baseType: !223, size: 16, offset: 112)
!223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !202, file: !199, line: 90, size: 16, elements: !224)
!224 = !{!225, !232}
!225 = !DIDerivedType(tag: DW_TAG_member, scope: !223, file: !199, line: 91, baseType: !226, size: 16)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !223, file: !199, line: 91, size: 16, elements: !227)
!227 = !{!228, !231}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !226, file: !199, line: 96, baseType: !229, size: 8)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !230)
!230 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !226, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !223, file: !199, line: 100, baseType: !181, size: 16)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !202, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !202, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !202, file: !199, line: 131, baseType: !236, size: 192, offset: 192)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !237)
!237 = !{!238, !239, !245}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !236, file: !131, line: 245, baseType: !208, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !236, file: !131, line: 246, baseType: !240, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !236, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !198, file: !199, line: 250, baseType: !247, size: 288, offset: 384)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !249)
!248 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!249 = !{!250, !251, !252, !253, !254, !255, !256, !257, !258}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !247, file: !248, line: 26, baseType: !111, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !247, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !247, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !247, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !247, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !247, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !247, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !247, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !247, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !198, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !198, file: !199, line: 256, baseType: !130, size: 64, offset: 704)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !198, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !198, file: !199, line: 325, baseType: !263, size: 32, offset: 800)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !265)
!265 = !{!266, !275, !276}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !264, file: !127, line: 5074, baseType: !267, size: 96)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !269)
!268 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!269 = !{!270, !273, !274}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !267, file: !268, line: 57, baseType: !271, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!272 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !268, line: 57, flags: DIFlagFwdDecl)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !267, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !267, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !264, file: !127, line: 5075, baseType: !130, size: 64, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !264, file: !127, line: 5076, baseType: !151, size: 32, offset: 160)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !198, file: !199, line: 343, baseType: !278, size: 64, offset: 832)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !279)
!279 = !{!280, !281}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !278, file: !248, line: 63, baseType: !111, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !278, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !193, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !193, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !175, file: !119, line: 67, baseType: !285, size: 32, offset: 192)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!289 = !DIGlobalVariableExpression(var: !290, expr: !DIExpression())
!290 = distinct !DIGlobalVariable(name: "_k_thread_data_consumer_thread_id", scope: !27, file: !117, line: 44, type: !291, isLocal: false, isDefinition: true, align: 32)
!291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !292)
!292 = !{!293, !294, !302, !303, !308, !309, !310, !311, !312, !313, !315, !319}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !291, file: !127, line: 621, baseType: !197, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !291, file: !127, line: 622, baseType: !295, size: 32, offset: 32)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !297, line: 44, baseType: !298)
!297 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !299, line: 47, size: 8, elements: !300)
!299 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = !{!301}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !298, file: !299, line: 48, baseType: !110, size: 8)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !291, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !291, file: !127, line: 624, baseType: !304, size: 32, offset: 96)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !297, line: 46, baseType: !305)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = !DISubroutineType(types: !307)
!307 = !{null, !102, !102, !102}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !291, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !291, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !291, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !291, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !291, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !291, file: !127, line: 630, baseType: !314, size: 32, offset: 288)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !291, file: !127, line: 631, baseType: !316, size: 32, offset: 320)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 32)
!317 = !DISubroutineType(types: !318)
!318 = !{null}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !291, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "consumer_thread_id", scope: !27, file: !117, line: 44, type: !322, isLocal: false, isDefinition: true)
!322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !197)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_consumer_sub", scope: !27, file: !117, line: 13, type: !326, isLocal: true, isDefinition: true, align: 32)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 128, elements: !327)
!327 = !{!328}
!328 = !DISubrange(count: 16)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "_k_thread_stack_consumer_thread_id", scope: !27, file: !117, line: 44, type: !331, isLocal: false, isDefinition: true, align: 64)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 8192, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 1024)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "_k_thread_obj_consumer_thread_id", scope: !27, file: !117, line: 44, type: !198, isLocal: false, isDefinition: true)
!336 = !DIGlobalVariableExpression(var: !337, expr: !DIExpression())
!337 = distinct !DIGlobalVariable(name: "_zbus_mutex_pkt_chan", scope: !338, file: !344, line: 15, type: !355, isLocal: true, isDefinition: true, align: 32)
!338 = distinct !DICompileUnit(language: DW_LANG_C99, file: !339, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !340, globals: !341, splitDebugInlining: false, nameTableKind: None)
!339 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!340 = !{!102, !103}
!341 = !{!336, !342, !486, !488, !490, !492, !494, !496, !498, !500, !507, !510, !517, !522, !527, !529, !531}
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "pkt_chan", scope: !338, file: !344, line: 15, type: !345, isLocal: false, isDefinition: true, align: 32)
!344 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !347)
!347 = !{!348, !349, !350, !351, !352, !353, !457}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !346, file: !119, line: 32, baseType: !178, size: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !346, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !346, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !346, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !346, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !346, file: !119, line: 56, baseType: !354, size: 32, offset: 160)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 32)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !356)
!356 = !{!357, !376, !455, !456}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !355, file: !127, line: 2722, baseType: !358, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !359)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !360)
!360 = !{!361}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !359, file: !131, line: 232, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !364)
!364 = !{!365, !371}
!365 = !DIDerivedType(tag: DW_TAG_member, scope: !363, file: !136, line: 38, baseType: !366, size: 32)
!366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !363, file: !136, line: 38, size: 32, elements: !367)
!367 = !{!368, !370}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !366, file: !136, line: 39, baseType: !369, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !366, file: !136, line: 40, baseType: !369, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_member, scope: !363, file: !136, line: 42, baseType: !372, size: 32, offset: 32)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !363, file: !136, line: 42, size: 32, elements: !373)
!373 = !{!374, !375}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !372, file: !136, line: 43, baseType: !369, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !372, file: !136, line: 44, baseType: !369, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !355, file: !127, line: 2724, baseType: !377, size: 32, offset: 64)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !379)
!379 = !{!380, !420, !432, !433, !434, !435, !450}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !378, file: !199, line: 247, baseType: !381, size: 384)
!381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !382)
!382 = !{!383, !394, !396, !397, !398, !407, !408, !409}
!383 = !DIDerivedType(tag: DW_TAG_member, scope: !381, file: !199, line: 60, baseType: !384, size: 64)
!384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !381, file: !199, line: 60, size: 64, elements: !385)
!385 = !{!386, !388}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !384, file: !199, line: 61, baseType: !387, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !363)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !384, file: !199, line: 62, baseType: !389, size: 64)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !390)
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !389, file: !211, line: 50, baseType: !392, size: 64)
!392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !393, size: 64, elements: !216)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !381, file: !199, line: 68, baseType: !395, size: 32, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !381, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !381, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!398 = !DIDerivedType(tag: DW_TAG_member, scope: !381, file: !199, line: 90, baseType: !399, size: 16, offset: 112)
!399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !381, file: !199, line: 90, size: 16, elements: !400)
!400 = !{!401, !406}
!401 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !199, line: 91, baseType: !402, size: 16)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !399, file: !199, line: 91, size: 16, elements: !403)
!403 = !{!404, !405}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !402, file: !199, line: 96, baseType: !229, size: 8)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !402, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !399, file: !199, line: 100, baseType: !181, size: 16)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !381, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !381, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !381, file: !199, line: 131, baseType: !410, size: 192, offset: 192)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !411)
!411 = !{!412, !413, !419}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !410, file: !131, line: 245, baseType: !387, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !410, file: !131, line: 246, baseType: !414, size: 32, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !415)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!416 = !DISubroutineType(types: !417)
!417 = !{null, !418}
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !410, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !378, file: !199, line: 250, baseType: !421, size: 288, offset: 384)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !422)
!422 = !{!423, !424, !425, !426, !427, !428, !429, !430, !431}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !421, file: !248, line: 26, baseType: !111, size: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !421, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !421, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !421, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !421, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !421, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !421, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !421, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !421, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !378, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !378, file: !199, line: 256, baseType: !358, size: 64, offset: 704)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !378, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !378, file: !199, line: 325, baseType: !436, size: 32, offset: 800)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 32)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !438)
!438 = !{!439, !445, !446}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !437, file: !127, line: 5074, baseType: !440, size: 96)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !441)
!441 = !{!442, !443, !444}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !440, file: !268, line: 57, baseType: !271, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !440, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !440, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !437, file: !127, line: 5075, baseType: !358, size: 64, offset: 96)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !437, file: !127, line: 5076, baseType: !447, size: 32, offset: 160)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !448)
!448 = !{!449}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !447, file: !152, line: 52, baseType: !22, size: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !378, file: !199, line: 343, baseType: !451, size: 64, offset: 832)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !452)
!452 = !{!453, !454}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !451, file: !248, line: 63, baseType: !111, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !451, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !355, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !355, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !346, file: !119, line: 67, baseType: !458, size: 32, offset: 192)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !463)
!463 = !{!464, !465, !480}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !462, file: !119, line: 91, baseType: !122, size: 8)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !462, file: !119, line: 93, baseType: !466, size: 32, offset: 32)
!466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !467)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !469)
!469 = !{!470, !471, !472, !473, !474, !475, !476, !477, !478, !479}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !468, file: !127, line: 4206, baseType: !358, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !468, file: !127, line: 4208, baseType: !447, size: 32, offset: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !468, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !468, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !468, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !468, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !468, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !468, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !468, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !468, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !462, file: !119, line: 96, baseType: !481, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 32)
!483 = !DISubroutineType(types: !484)
!484 = !{null, !485}
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 32)
!486 = !DIGlobalVariableExpression(var: !487, expr: !DIExpression())
!487 = distinct !DIGlobalVariable(name: "_zbus_mutex_version_chan", scope: !338, file: !344, line: 24, type: !355, isLocal: true, isDefinition: true, align: 32)
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "version_chan", scope: !338, file: !344, line: 24, type: !345, isLocal: false, isDefinition: true, align: 32)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "_zbus_mutex_data_ready_chan", scope: !338, file: !344, line: 33, type: !355, isLocal: true, isDefinition: true, align: 32)
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "data_ready_chan", scope: !338, file: !344, line: 33, type: !345, isLocal: false, isDefinition: true, align: 32)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "_zbus_mutex_ack", scope: !338, file: !344, line: 42, type: !355, isLocal: true, isDefinition: true, align: 32)
!496 = !DIGlobalVariableExpression(var: !497, expr: !DIExpression())
!497 = distinct !DIGlobalVariable(name: "ack", scope: !338, file: !344, line: 42, type: !345, isLocal: false, isDefinition: true, align: 32)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "filter_lis", scope: !338, file: !344, line: 73, type: !462, isLocal: false, isDefinition: true, align: 32)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "_zbus_message_pkt_chan", scope: !338, file: !344, line: 15, type: !502, isLocal: true, isDefinition: true)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !503, line: 16, size: 64, elements: !504)
!503 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!504 = !{!505, !506}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !502, file: !503, line: 17, baseType: !102, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !502, file: !503, line: 18, baseType: !156, size: 32, offset: 32)
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "_zbus_observers_pkt_chan", scope: !338, file: !344, line: 15, type: !509, isLocal: true, isDefinition: true)
!509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 64, elements: !216)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "_zbus_message_version_chan", scope: !338, file: !344, line: 24, type: !512, isLocal: true, isDefinition: true)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "version_msg", file: !503, line: 10, size: 32, elements: !513)
!513 = !{!514, !515, !516}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !512, file: !503, line: 11, baseType: !166, size: 8)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !512, file: !503, line: 12, baseType: !166, size: 8, offset: 8)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "build", scope: !512, file: !503, line: 13, baseType: !181, size: 16, offset: 16)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "_zbus_observers_version_chan", scope: !338, file: !344, line: 24, type: !519, isLocal: true, isDefinition: true)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 32, elements: !520)
!520 = !{!521}
!521 = !DISubrange(count: 1)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "_zbus_message_data_ready_chan", scope: !338, file: !344, line: 33, type: !524, isLocal: true, isDefinition: true)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ack_msg", file: !503, line: 21, size: 8, elements: !525)
!525 = !{!526}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !524, file: !503, line: 22, baseType: !166, size: 8)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "_zbus_observers_data_ready_chan", scope: !338, file: !344, line: 33, type: !509, isLocal: true, isDefinition: true)
!529 = !DIGlobalVariableExpression(var: !530, expr: !DIExpression())
!530 = distinct !DIGlobalVariable(name: "_zbus_message_ack", scope: !338, file: !344, line: 42, type: !524, isLocal: true, isDefinition: true)
!531 = !DIGlobalVariableExpression(var: !532, expr: !DIExpression())
!532 = distinct !DIGlobalVariable(name: "_zbus_observers_ack", scope: !338, file: !344, line: 42, type: !509, isLocal: true, isDefinition: true)
!533 = !DIGlobalVariableExpression(var: !534, expr: !DIExpression())
!534 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_producer_sub", scope: !535, file: !542, line: 13, type: !549, isLocal: false, isDefinition: true, align: 32)
!535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !536, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !537, globals: !539, splitDebugInlining: false, nameTableKind: None)
!536 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!537 = !{!102, !103, !538, !104, !111, !112}
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!539 = !{!533, !540, !684, !705, !709, !711, !714}
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "producer_sub", scope: !535, file: !542, line: 13, type: !543, isLocal: false, isDefinition: true, align: 32)
!542 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !544)
!544 = !{!545, !546, !582}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !543, file: !119, line: 91, baseType: !122, size: 8)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !543, file: !119, line: 93, baseType: !547, size: 32, offset: 32)
!547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !548)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !550)
!550 = !{!551, !570, !574, !575, !576, !577, !578, !579, !580, !581}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !549, file: !127, line: 4206, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !554)
!554 = !{!555}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !553, file: !131, line: 232, baseType: !556, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !558)
!558 = !{!559, !565}
!559 = !DIDerivedType(tag: DW_TAG_member, scope: !557, file: !136, line: 38, baseType: !560, size: 32)
!560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !557, file: !136, line: 38, size: 32, elements: !561)
!561 = !{!562, !564}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !560, file: !136, line: 39, baseType: !563, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !560, file: !136, line: 40, baseType: !563, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, scope: !557, file: !136, line: 42, baseType: !566, size: 32, offset: 32)
!566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !557, file: !136, line: 42, size: 32, elements: !567)
!567 = !{!568, !569}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !566, file: !136, line: 43, baseType: !563, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !566, file: !136, line: 44, baseType: !563, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !549, file: !127, line: 4208, baseType: !571, size: 32, offset: 64)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !572)
!572 = !{!573}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !571, file: !152, line: 52, baseType: !22, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !549, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !549, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !549, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !549, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !549, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !549, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !549, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !549, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !543, file: !119, line: 96, baseType: !583, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !584)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 32)
!585 = !DISubroutineType(types: !586)
!586 = !{null, !587}
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !590)
!590 = !{!591, !592, !593, !594, !595, !596, !679}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !589, file: !119, line: 32, baseType: !178, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !589, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !589, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !589, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !589, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !589, file: !119, line: 56, baseType: !597, size: 32, offset: 160)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 32)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !599)
!599 = !{!600, !601, !677, !678}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !598, file: !127, line: 2722, baseType: !552, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !598, file: !127, line: 2724, baseType: !602, size: 32, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 32)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !604)
!604 = !{!605, !645, !657, !658, !659, !660, !672}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !603, file: !199, line: 247, baseType: !606, size: 384)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !607)
!607 = !{!608, !619, !621, !622, !623, !632, !633, !634}
!608 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !199, line: 60, baseType: !609, size: 64)
!609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !606, file: !199, line: 60, size: 64, elements: !610)
!610 = !{!611, !613}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !609, file: !199, line: 61, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !557)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !609, file: !199, line: 62, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !615)
!615 = !{!616}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !614, file: !211, line: 50, baseType: !617, size: 64)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !618, size: 64, elements: !216)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !606, file: !199, line: 68, baseType: !620, size: 32, offset: 64)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !606, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !606, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!623 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !199, line: 90, baseType: !624, size: 16, offset: 112)
!624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !606, file: !199, line: 90, size: 16, elements: !625)
!625 = !{!626, !631}
!626 = !DIDerivedType(tag: DW_TAG_member, scope: !624, file: !199, line: 91, baseType: !627, size: 16)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !624, file: !199, line: 91, size: 16, elements: !628)
!628 = !{!629, !630}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !627, file: !199, line: 96, baseType: !229, size: 8)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !627, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !624, file: !199, line: 100, baseType: !181, size: 16)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !606, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !606, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !606, file: !199, line: 131, baseType: !635, size: 192, offset: 192)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !636)
!636 = !{!637, !638, !644}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !635, file: !131, line: 245, baseType: !612, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !635, file: !131, line: 246, baseType: !639, size: 32, offset: 64)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !640)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 32)
!641 = !DISubroutineType(types: !642)
!642 = !{null, !643}
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !635, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !603, file: !199, line: 250, baseType: !646, size: 288, offset: 384)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !647)
!647 = !{!648, !649, !650, !651, !652, !653, !654, !655, !656}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !646, file: !248, line: 26, baseType: !111, size: 32)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !646, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !646, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !646, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !646, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !646, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !646, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !646, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !646, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !603, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !603, file: !199, line: 256, baseType: !552, size: 64, offset: 704)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !603, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !603, file: !199, line: 325, baseType: !661, size: 32, offset: 800)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 32)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !663)
!663 = !{!664, !670, !671}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !662, file: !127, line: 5074, baseType: !665, size: 96)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !666)
!666 = !{!667, !668, !669}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !665, file: !268, line: 57, baseType: !271, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !665, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !665, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !662, file: !127, line: 5075, baseType: !552, size: 64, offset: 96)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !662, file: !127, line: 5076, baseType: !571, size: 32, offset: 160)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !603, file: !199, line: 343, baseType: !673, size: 64, offset: 832)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !674)
!674 = !{!675, !676}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !673, file: !248, line: 63, baseType: !111, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !673, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !598, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !598, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !589, file: !119, line: 67, baseType: !680, size: 32, offset: 192)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !682)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!684 = !DIGlobalVariableExpression(var: !685, expr: !DIExpression())
!685 = distinct !DIGlobalVariable(name: "_k_thread_data_producer_thread_id", scope: !535, file: !542, line: 40, type: !686, isLocal: false, isDefinition: true, align: 32)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !687)
!687 = !{!688, !689, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !686, file: !127, line: 621, baseType: !602, size: 32)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !686, file: !127, line: 622, baseType: !690, size: 32, offset: 32)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !297, line: 44, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !299, line: 47, size: 8, elements: !693)
!693 = !{!694}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !692, file: !299, line: 48, baseType: !110, size: 8)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !686, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !686, file: !127, line: 624, baseType: !304, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !686, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !686, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !686, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !686, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !686, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !686, file: !127, line: 630, baseType: !314, size: 32, offset: 288)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !686, file: !127, line: 631, baseType: !316, size: 32, offset: 320)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !686, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "producer_thread_id", scope: !535, file: !542, line: 40, type: !707, isLocal: false, isDefinition: true)
!707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !708)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !602)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_producer_sub", scope: !535, file: !542, line: 13, type: !326, isLocal: true, isDefinition: true, align: 32)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "_k_thread_stack_producer_thread_id", scope: !535, file: !542, line: 40, type: !713, isLocal: false, isDefinition: true, align: 64)
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !692, size: 8192, elements: !332)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "_k_thread_obj_producer_thread_id", scope: !535, file: !542, line: 40, type: !603, isLocal: false, isDefinition: true)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !718, file: !732, line: 18, type: !733, isLocal: false, isDefinition: true)
!718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !720, globals: !731, splitDebugInlining: false, nameTableKind: None)
!719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!720 = !{!22, !102, !24, !721, !723, !725, !156, !103, !726, !727, !729, !730, !160, !538, !181, !108}
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 32)
!722 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 32)
!724 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 32)
!728 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!731 = !{!716}
!732 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !735, line: 16, size: 64, elements: !736)
!735 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!736 = !{!737, !738}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !735, line: 17, baseType: !108, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !734, file: !735, line: 18, baseType: !166, size: 8, offset: 32)
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "_char_out", scope: !741, file: !744, line: 54, type: !745, isLocal: false, isDefinition: true)
!741 = distinct !DICompileUnit(language: DW_LANG_C99, file: !742, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !340, globals: !743, splitDebugInlining: false, nameTableKind: None)
!742 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!743 = !{!739}
!744 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DISubroutineType(types: !747)
!747 = !{!103, !103}
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !750, file: !1164, line: 258, type: !1165, isLocal: true, isDefinition: true, align: 32)
!750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !752, retainedTypes: !1035, globals: !1163, splitDebugInlining: false, nameTableKind: None)
!751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!752 = !{!753, !785, !795, !844, !850, !971, !1006}
!753 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !754, line: 54, baseType: !32, size: 32, elements: !755)
!754 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!755 = !{!756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784}
!756 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!757 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!758 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!759 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!760 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!761 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!762 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!763 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!764 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!765 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!766 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!767 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!768 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!769 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!770 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!771 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!772 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!773 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!774 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!775 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!776 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!777 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!778 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!779 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!780 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!781 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!782 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!783 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!784 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!785 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !754, line: 224, baseType: !32, size: 32, elements: !786)
!786 = !{!787, !788, !789, !790, !791, !792, !793, !794}
!787 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!788 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!789 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!790 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!791 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!792 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!793 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!794 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!795 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !754, line: 275, baseType: !32, size: 32, elements: !796)
!796 = !{!797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843}
!797 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!798 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!799 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!800 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!801 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!802 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!803 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!804 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!805 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!806 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!807 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!808 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!809 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!810 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!811 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!812 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!813 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!814 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!815 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!816 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!817 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!818 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!819 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!820 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!821 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!822 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!823 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!824 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!825 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!826 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!827 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!828 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!829 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!830 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!831 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!832 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!833 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!834 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!835 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!836 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!837 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!838 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!839 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!840 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!841 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!842 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!843 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !754, line: 327, baseType: !32, size: 32, elements: !845)
!845 = !{!846, !847, !848, !849}
!846 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!847 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!848 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!849 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!850 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !851, line: 76, baseType: !32, size: 32, elements: !852)
!851 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!852 = !{!853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970}
!853 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!854 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!855 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!856 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!857 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!858 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!859 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!860 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!861 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!862 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!863 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!864 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!865 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!866 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!867 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!868 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!869 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!870 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!871 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!872 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!873 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!874 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!875 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!876 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!877 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!878 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!879 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!880 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!881 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!882 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!883 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!884 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!885 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!886 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!887 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!888 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!889 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!890 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!891 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!892 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!893 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!894 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!895 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!896 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!897 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!898 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!899 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!900 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!901 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!902 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!903 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!904 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!905 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!906 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!907 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!908 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!909 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!910 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!911 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!912 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!913 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!914 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!915 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!916 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!917 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!918 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!919 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!920 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!921 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!922 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!923 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!924 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!925 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!926 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!927 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!928 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!929 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!930 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!931 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!932 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!933 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!934 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!935 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!936 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!937 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!938 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!939 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!940 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!941 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!942 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!943 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!944 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!945 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!946 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!947 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!948 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!949 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!950 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!951 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!952 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!953 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!954 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!955 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!956 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!957 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!958 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!959 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!960 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!961 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!962 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!963 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!964 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!965 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!966 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!967 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!968 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!969 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!970 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!971 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !754, line: 237, baseType: !32, size: 32, elements: !972)
!972 = !{!973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005}
!973 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!974 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!975 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!976 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!977 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!978 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!979 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!980 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!981 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!982 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!983 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!984 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!985 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!986 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!987 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!988 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!989 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!990 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!991 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!992 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!993 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!994 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!995 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!996 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!997 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!998 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!999 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!1000 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!1001 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!1002 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!1003 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!1004 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!1005 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!1006 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !851, line: 44, baseType: !32, size: 32, elements: !1007)
!1007 = !{!1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034}
!1008 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!1009 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!1010 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!1011 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!1012 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!1013 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!1014 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!1015 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!1016 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!1017 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!1018 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!1019 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!1020 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!1021 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!1022 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!1023 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!1024 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!1025 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!1026 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!1027 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!1028 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!1029 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!1030 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!1031 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!1032 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!1033 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!1034 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!1035 = !{!1036, !1108, !1151, !1162, !111}
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !1038, line: 4575, baseType: !1039)
!1038 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 4532, size: 390144, elements: !1040)
!1040 = !{!1041, !1043, !1044, !1045, !1046, !1050, !1060, !1064, !1074, !1078}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !1039, file: !1038, line: 4533, baseType: !1042, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !111)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !1039, file: !1038, line: 4534, baseType: !1042, size: 32, offset: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !1039, file: !1038, line: 4535, baseType: !1042, size: 32, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !1039, file: !1038, line: 4536, baseType: !1042, size: 32, offset: 96)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1039, file: !1038, line: 4537, baseType: !1047, size: 16256, offset: 128)
!1047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 16256, elements: !1048)
!1048 = !{!1049}
!1049 = !DISubrange(count: 2032)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !1039, file: !1038, line: 4543, baseType: !1051, size: 4224, offset: 16384)
!1051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1052, size: 4224, elements: !1058)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1039, file: !1038, line: 4538, size: 128, elements: !1053)
!1053 = !{!1054, !1055, !1056, !1057}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !1052, file: !1038, line: 4539, baseType: !1042, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !1052, file: !1038, line: 4540, baseType: !1042, size: 32, offset: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !1052, file: !1038, line: 4541, baseType: !1042, size: 32, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !1052, file: !1038, line: 4542, baseType: !1042, size: 32, offset: 96)
!1058 = !{!1059}
!1059 = !DISubrange(count: 33)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1039, file: !1038, line: 4544, baseType: !1061, size: 110464, offset: 20608)
!1061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 110464, elements: !1062)
!1062 = !{!1063}
!1063 = !DISubrange(count: 13808)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !1039, file: !1038, line: 4550, baseType: !1065, size: 24448, offset: 131072)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1066, size: 24448, elements: !1072)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1039, file: !1038, line: 4545, size: 128, elements: !1067)
!1067 = !{!1068, !1069, !1070, !1071}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !1066, file: !1038, line: 4546, baseType: !1042, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !1066, file: !1038, line: 4547, baseType: !1042, size: 32, offset: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !1066, file: !1038, line: 4548, baseType: !1042, size: 32, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !1066, file: !1038, line: 4549, baseType: !1042, size: 32, offset: 96)
!1072 = !{!1073}
!1073 = !DISubrange(count: 191)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !1039, file: !1038, line: 4551, baseType: !1075, size: 106624, offset: 155520)
!1075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 106624, elements: !1076)
!1076 = !{!1077}
!1077 = !DISubrange(count: 13328)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !1039, file: !1038, line: 4574, baseType: !1079, size: 128000, offset: 262144)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1080, size: 128000, elements: !1106)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1039, file: !1038, line: 4552, size: 1024, elements: !1081)
!1081 = !{!1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1102, !1103, !1104, !1105}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !1080, file: !1038, line: 4553, baseType: !1042, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !1080, file: !1038, line: 4554, baseType: !1042, size: 32, offset: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !1080, file: !1038, line: 4555, baseType: !1042, size: 32, offset: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !1080, file: !1038, line: 4556, baseType: !1042, size: 32, offset: 96)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !1080, file: !1038, line: 4557, baseType: !1042, size: 32, offset: 128)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !1080, file: !1038, line: 4558, baseType: !1042, size: 32, offset: 160)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !1080, file: !1038, line: 4559, baseType: !1042, size: 32, offset: 192)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !1080, file: !1038, line: 4560, baseType: !1042, size: 32, offset: 224)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !1080, file: !1038, line: 4561, baseType: !1042, size: 32, offset: 256)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !1080, file: !1038, line: 4562, baseType: !1042, size: 32, offset: 288)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !1080, file: !1038, line: 4563, baseType: !1042, size: 32, offset: 320)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !1080, file: !1038, line: 4564, baseType: !1042, size: 32, offset: 352)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !1080, file: !1038, line: 4565, baseType: !1042, size: 32, offset: 384)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !1080, file: !1038, line: 4566, baseType: !1042, size: 32, offset: 416)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !1080, file: !1038, line: 4567, baseType: !1042, size: 32, offset: 448)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !1080, file: !1038, line: 4568, baseType: !1042, size: 32, offset: 480)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1080, file: !1038, line: 4569, baseType: !1099, size: 384, offset: 512)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 384, elements: !1100)
!1100 = !{!1101}
!1101 = !DISubrange(count: 48)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !1080, file: !1038, line: 4570, baseType: !1042, size: 32, offset: 896)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !1080, file: !1038, line: 4571, baseType: !1042, size: 32, offset: 928)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !1080, file: !1038, line: 4572, baseType: !1042, size: 32, offset: 960)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !1080, file: !1038, line: 4573, baseType: !1042, size: 32, offset: 992)
!1106 = !{!1107}
!1107 = !DISubrange(count: 125)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !1038, line: 38320, baseType: !1110)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 38303, size: 23040, elements: !1111)
!1111 = !{!1112, !1114, !1118, !1119, !1120, !1121, !1125, !1129, !1133, !1137, !1141}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !1110, file: !1038, line: 38304, baseType: !1113, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1110, file: !1038, line: 38305, baseType: !1115, size: 256, offset: 32)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 256, elements: !1116)
!1116 = !{!1117}
!1117 = !DISubrange(count: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !1110, file: !1038, line: 38306, baseType: !1042, size: 32, offset: 288)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !1110, file: !1038, line: 38307, baseType: !1042, size: 32, offset: 320)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !1110, file: !1038, line: 38308, baseType: !1042, size: 32, offset: 352)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1110, file: !1038, line: 38309, baseType: !1122, size: 3712, offset: 384)
!1122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 3712, elements: !1123)
!1123 = !{!1124}
!1124 = !DISubrange(count: 464)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !1110, file: !1038, line: 38310, baseType: !1126, size: 864, offset: 4096)
!1126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 864, elements: !1127)
!1127 = !{!1128}
!1128 = !DISubrange(count: 27)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !1110, file: !1038, line: 38311, baseType: !1130, size: 3232, offset: 4960)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 3232, elements: !1131)
!1131 = !{!1132}
!1132 = !DISubrange(count: 404)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !1110, file: !1038, line: 38312, baseType: !1134, size: 3776, offset: 8192)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 3776, elements: !1135)
!1135 = !{!1136}
!1136 = !DISubrange(count: 118)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !1110, file: !1038, line: 38313, baseType: !1138, size: 4416, offset: 11968)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 4416, elements: !1139)
!1139 = !{!1140}
!1140 = !DISubrange(count: 552)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !1110, file: !1038, line: 38319, baseType: !1142, size: 6656, offset: 16384)
!1142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1143, size: 6656, elements: !1149)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1110, file: !1038, line: 38314, size: 128, elements: !1144)
!1144 = !{!1145, !1146, !1147, !1148}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !1143, file: !1038, line: 38315, baseType: !1042, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !1143, file: !1038, line: 38316, baseType: !1042, size: 32, offset: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !1143, file: !1038, line: 38317, baseType: !1042, size: 32, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !1143, file: !1038, line: 38318, baseType: !1042, size: 32, offset: 96)
!1149 = !{!1150}
!1150 = !DISubrange(count: 52)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !1038, line: 43319, baseType: !1153)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 43313, size: 80, elements: !1154)
!1154 = !{!1155, !1157, !1158, !1160, !1161}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !1153, file: !1038, line: 43314, baseType: !1156, size: 16)
!1156 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !181)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !1153, file: !1038, line: 43315, baseType: !1156, size: 16, offset: 16)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !1153, file: !1038, line: 43316, baseType: !1159, size: 16, offset: 32)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !1153, file: !1038, line: 43317, baseType: !1156, size: 16, offset: 48)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !1153, file: !1038, line: 43318, baseType: !1156, size: 16, offset: 64)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1163 = !{!748}
!1164 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1167, line: 51, size: 64, elements: !1168)
!1167 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1168 = !{!1169, !1176}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1166, file: !1167, line: 60, baseType: !1170, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!103, !1173}
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1175)
!1175 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1167, line: 48, flags: DIFlagFwdDecl)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1166, file: !1167, line: 65, baseType: !1173, size: 32, offset: 32)
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1179, file: !1186, line: 21, type: !745, isLocal: true, isDefinition: true)
!1179 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1180, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1181, globals: !1185, splitDebugInlining: false, nameTableKind: None)
!1180 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!1181 = !{!1182, !103, !102}
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 32)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1184, line: 22, baseType: !103)
!1184 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1185 = !{!1177}
!1186 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !1189, file: !1193, line: 10, type: !1194, isLocal: false, isDefinition: true)
!1189 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1190, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1191, globals: !1192, splitDebugInlining: false, nameTableKind: None)
!1190 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!1191 = !{!104, !102, !103}
!1192 = !{!1187}
!1193 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !735, line: 16, size: 64, elements: !1196)
!1196 = !{!1197, !1198}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1195, file: !735, line: 17, baseType: !108, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1195, file: !735, line: 18, baseType: !166, size: 8, offset: 32)
!1199 = !DIGlobalVariableExpression(var: !1200, expr: !DIExpression())
!1200 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1201, file: !1297, line: 603, type: !1299, isLocal: true, isDefinition: true, align: 32)
!1201 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1202, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1203, globals: !1294, splitDebugInlining: false, nameTableKind: None)
!1202 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!1203 = !{!102, !103, !1204}
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1207, line: 336, size: 608, elements: !1208)
!1207 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1208 = !{!1209, !1235, !1239, !1243, !1256, !1261, !1267, !1272, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1206, file: !1207, line: 365, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!103, !1213, !1234}
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1216, line: 378, size: 192, elements: !1217)
!1216 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1217 = !{!1218, !1219, !1220, !1221, !1227, !1228}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1215, file: !1216, line: 380, baseType: !108, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1215, file: !1216, line: 382, baseType: !13, size: 32, offset: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1215, file: !1216, line: 384, baseType: !13, size: 32, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1215, file: !1216, line: 386, baseType: !1222, size: 32, offset: 96)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1216, line: 351, size: 16, elements: !1224)
!1224 = !{!1225, !1226}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1223, file: !1216, line: 359, baseType: !166, size: 8)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1223, file: !1216, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1215, file: !1216, line: 388, baseType: !102, size: 32, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1215, file: !1216, line: 396, baseType: !1229, size: 32, offset: 160)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1231)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !1216, line: 43, baseType: !1232)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !1233)
!1233 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1206, file: !1207, line: 366, baseType: !1236, size: 32, offset: 32)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{null, !1213, !167}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1206, file: !1207, line: 374, baseType: !1240, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!103, !1213}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1206, file: !1207, line: 377, baseType: !1244, size: 32, offset: 96)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!103, !1213, !1247}
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1207, line: 122, size: 64, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1249, file: !1207, line: 123, baseType: !111, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1249, file: !1207, line: 124, baseType: !166, size: 8, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1249, file: !1207, line: 125, baseType: !166, size: 8, offset: 40)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1249, file: !1207, line: 126, baseType: !166, size: 8, offset: 48)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1249, file: !1207, line: 127, baseType: !166, size: 8, offset: 56)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1206, file: !1207, line: 379, baseType: !1257, size: 32, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!103, !1213, !1260}
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1206, file: !1207, line: 384, baseType: !1262, size: 32, offset: 160)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!103, !1213, !1265, !103}
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1206, file: !1207, line: 393, baseType: !1268, size: 32, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!103, !1213, !538, !1271}
!1271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1206, file: !1207, line: 402, baseType: !1273, size: 32, offset: 224)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{null, !1213}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1206, file: !1207, line: 405, baseType: !1273, size: 32, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1206, file: !1207, line: 408, baseType: !1240, size: 32, offset: 288)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1206, file: !1207, line: 411, baseType: !1273, size: 32, offset: 320)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1206, file: !1207, line: 414, baseType: !1273, size: 32, offset: 352)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1206, file: !1207, line: 417, baseType: !1240, size: 32, offset: 384)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1206, file: !1207, line: 420, baseType: !1240, size: 32, offset: 416)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1206, file: !1207, line: 423, baseType: !1273, size: 32, offset: 448)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1206, file: !1207, line: 426, baseType: !1273, size: 32, offset: 480)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1206, file: !1207, line: 429, baseType: !1240, size: 32, offset: 512)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1206, file: !1207, line: 432, baseType: !1240, size: 32, offset: 544)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1206, file: !1207, line: 435, baseType: !1287, size: 32, offset: 576)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{null, !1213, !1290, !102}
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1207, line: 142, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{null, !1213, !102}
!1294 = !{!1199, !1295}
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1201, file: !1297, line: 38, type: !1298, isLocal: true, isDefinition: true)
!1297 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1213)
!1299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1167, line: 51, size: 64, elements: !1301)
!1301 = !{!1302, !1303}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1300, file: !1167, line: 60, baseType: !1240, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1300, file: !1167, line: 65, baseType: !1213, size: 32, offset: 32)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !1306, file: !1410, line: 318, type: !1486, isLocal: false, isDefinition: true)
!1306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1307, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1308, retainedTypes: !1325, globals: !1407, splitDebugInlining: false, nameTableKind: None)
!1307 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!1308 = !{!1309, !1315, !1320}
!1309 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1310, line: 506, baseType: !32, size: 32, elements: !1311)
!1310 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1311 = !{!1312, !1313, !1314}
!1312 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1313 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1314 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1315 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1310, line: 512, baseType: !32, size: 32, elements: !1316)
!1316 = !{!1317, !1318, !1319}
!1317 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1318 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1319 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1320 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !1321, line: 66, baseType: !32, size: 32, elements: !1322)
!1321 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1322 = !{!1323, !1324}
!1323 = !DIEnumerator(name: "gpioPinClear", value: 0)
!1324 = !DIEnumerator(name: "gpioPinSet", value: 1)
!1325 = !{!1326, !1396, !1401, !1361, !1315, !1309, !1406, !102, !1162, !1376, !160}
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32)
!1327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1310, line: 523, size: 288, elements: !1329)
!1329 = !{!1330, !1351, !1357, !1362, !1366, !1367, !1368, !1372, !1392}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1328, file: !1310, line: 524, baseType: !1331, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!103, !1334, !1349, !1350}
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1336)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1216, line: 378, size: 192, elements: !1337)
!1337 = !{!1338, !1339, !1340, !1341, !1347, !1348}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1336, file: !1216, line: 380, baseType: !108, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1336, file: !1216, line: 382, baseType: !13, size: 32, offset: 32)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1336, file: !1216, line: 384, baseType: !13, size: 32, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1336, file: !1216, line: 386, baseType: !1342, size: 32, offset: 96)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1216, line: 351, size: 16, elements: !1344)
!1344 = !{!1345, !1346}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1343, file: !1216, line: 359, baseType: !166, size: 8)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1343, file: !1216, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1336, file: !1216, line: 388, baseType: !102, size: 32, offset: 128)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1336, file: !1216, line: 396, baseType: !1229, size: 32, offset: 160)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1310, line: 237, baseType: !166)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1310, line: 257, baseType: !111)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1328, file: !1310, line: 530, baseType: !1352, size: 32, offset: 32)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!103, !1334, !1355}
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1310, line: 229, baseType: !111)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1328, file: !1310, line: 532, baseType: !1358, size: 32, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 32)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!103, !1334, !1361, !1356}
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1310, line: 216, baseType: !111)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1328, file: !1310, line: 535, baseType: !1363, size: 32, offset: 96)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 32)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{!103, !1334, !1361}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1328, file: !1310, line: 537, baseType: !1363, size: 32, offset: 128)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1328, file: !1310, line: 539, baseType: !1363, size: 32, offset: 160)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1328, file: !1310, line: 541, baseType: !1369, size: 32, offset: 192)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 32)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!103, !1334, !1349, !1309, !1315}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1328, file: !1310, line: 544, baseType: !1373, size: 32, offset: 224)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!103, !1334, !1376, !122}
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 32)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1310, line: 478, size: 96, elements: !1378)
!1378 = !{!1379, !1386, !1391}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1377, file: !1310, line: 482, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1381, line: 33, baseType: !1382)
!1381 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1381, line: 29, size: 32, elements: !1383)
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1382, file: !1381, line: 30, baseType: !1385, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1377, file: !1310, line: 485, baseType: !1387, size: 32, offset: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1310, line: 464, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 32)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{null, !1334, !1376, !1361}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1377, file: !1310, line: 493, baseType: !1361, size: 32, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1328, file: !1310, line: 547, baseType: !1393, size: 32, offset: 256)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{!111, !1334}
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1310, line: 428, size: 32, elements: !1399)
!1399 = !{!1400}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1398, file: !1310, line: 434, baseType: !1361, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1310, line: 441, size: 32, elements: !1404)
!1404 = !{!1405}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1403, file: !1310, line: 447, baseType: !1361, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!1407 = !{!1304, !1408, !1414, !1416, !1426, !1438, !1440, !1471, !1473, !1484}
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1306, file: !1410, line: 318, type: !1411, isLocal: false, isDefinition: true, align: 16)
!1410 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1230, size: 400, elements: !1412)
!1412 = !{!1413}
!1413 = !DISubrange(count: 25)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1306, file: !1410, line: 318, type: !1335, isLocal: false, isDefinition: true, align: 32)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1306, file: !1410, line: 318, type: !1418, isLocal: true, isDefinition: true, align: 32)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1167, line: 51, size: 64, elements: !1420)
!1420 = !{!1421, !1425}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1419, file: !1167, line: 60, baseType: !1422, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!103, !1334}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1419, file: !1167, line: 65, baseType: !1334, size: 32, offset: 32)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !1306, file: !1410, line: 318, type: !1428, isLocal: true, isDefinition: true)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1410, line: 33, size: 96, elements: !1429)
!1429 = !{!1430, !1431}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1428, file: !1410, line: 35, baseType: !1403, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1428, file: !1410, line: 37, baseType: !1432, size: 64, offset: 32)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1381, line: 40, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1381, line: 35, size: 64, elements: !1434)
!1434 = !{!1435, !1437}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1433, file: !1381, line: 36, baseType: !1436, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1433, file: !1381, line: 37, baseType: !1436, size: 32, offset: 32)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1306, file: !1410, line: 318, type: !1343, isLocal: true, isDefinition: true, align: 8)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !1306, file: !1410, line: 318, type: !1442, isLocal: true, isDefinition: true)
!1442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1410, line: 23, size: 128, elements: !1444)
!1444 = !{!1445, !1446, !1459, !1470}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1443, file: !1410, line: 25, baseType: !1398, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1443, file: !1410, line: 26, baseType: !1447, size: 32, offset: 32)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !1038, line: 19729, baseType: !1449)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 19720, size: 256, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1449, file: !1038, line: 19721, baseType: !1042, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1449, file: !1038, line: 19722, baseType: !1042, size: 32, offset: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1449, file: !1038, line: 19723, baseType: !1113, size: 32, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1449, file: !1038, line: 19724, baseType: !1042, size: 32, offset: 96)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1449, file: !1038, line: 19725, baseType: !1042, size: 32, offset: 128)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1449, file: !1038, line: 19726, baseType: !1042, size: 32, offset: 160)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1449, file: !1038, line: 19727, baseType: !1042, size: 32, offset: 192)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1449, file: !1038, line: 19728, baseType: !1042, size: 32, offset: 224)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1443, file: !1410, line: 28, baseType: !1460, size: 32, offset: 64)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1463, line: 51, size: 128, elements: !1464)
!1463 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1464 = !{!1465, !1466, !1467, !1468, !1469}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1462, file: !1463, line: 52, baseType: !111, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1462, file: !1463, line: 53, baseType: !111, size: 32, offset: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1462, file: !1463, line: 54, baseType: !111, size: 32, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1462, file: !1463, line: 55, baseType: !166, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1462, file: !1463, line: 56, baseType: !111, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1443, file: !1410, line: 29, baseType: !166, size: 8, offset: 96)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !1306, file: !1410, line: 249, type: !1327, isLocal: true, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1475, file: !1410, line: 318, type: !1478, isLocal: true, isDefinition: true, align: 32)
!1475 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1410, file: !1410, line: 318, type: !1423, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !1476)
!1476 = !{!1477}
!1477 = !DILocalVariable(name: "port", arg: 1, scope: !1475, file: !1410, line: 318, type: !1334)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1479)
!1479 = !{!1480, !1481, !1482, !1483}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1478, file: !10, line: 55, baseType: !314, size: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1478, file: !10, line: 57, baseType: !314, size: 32, offset: 32)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1478, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1478, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1475, file: !1410, line: 318, type: !1478, isLocal: true, isDefinition: true, align: 32)
!1486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1461, size: 2048, elements: !327)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1489, file: !1494, line: 7, type: !1495, isLocal: false, isDefinition: true, align: 16)
!1489 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1490, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1491, splitDebugInlining: false, nameTableKind: None)
!1490 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!1491 = !{!1487, !1492}
!1492 = !DIGlobalVariableExpression(var: !1493, expr: !DIExpression())
!1493 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1489, file: !1494, line: 12, type: !1495, isLocal: false, isDefinition: true, align: 16)
!1494 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!1495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1230, size: 48, elements: !1496)
!1496 = !{!1497}
!1497 = !DISubrange(count: 3)
!1498 = !DIGlobalVariableExpression(var: !1499, expr: !DIExpression())
!1499 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1500, file: !1697, line: 339, type: !1695, isLocal: true, isDefinition: true)
!1500 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1501, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1502, retainedTypes: !1588, globals: !1733, splitDebugInlining: false, nameTableKind: None)
!1501 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!1502 = !{!30, !1503, !1541, !1569, !1573, !1577, !1582}
!1503 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1504, line: 122, baseType: !32, size: 32, elements: !1505)
!1504 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1505 = !{!1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1506 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1507 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1508 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1509 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1510 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1511 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1512 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1513 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1514 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1515 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1516 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1517 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1518 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1519 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1520 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1521 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1522 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1523 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1524 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1525 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1526 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1527 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1528 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1529 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1530 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1531 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1532 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1533 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1534 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1535 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1536 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1537 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1538 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1539 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1540 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1504, line: 91, baseType: !32, size: 32, elements: !1542)
!1542 = !{!1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568}
!1543 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1544 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1545 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1546 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1547 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1548 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1549 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1550 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1551 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1552 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1553 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1554 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1555 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1556 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1557 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1558 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1559 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1560 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1561 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1562 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1563 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1564 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1565 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1566 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1567 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1568 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1569 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1504, line: 60, baseType: !32, size: 32, elements: !1570)
!1570 = !{!1571, !1572}
!1571 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1572 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1573 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1504, line: 67, baseType: !32, size: 32, elements: !1574)
!1574 = !{!1575, !1576}
!1575 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1576 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1577 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1504, line: 74, baseType: !32, size: 32, elements: !1578)
!1578 = !{!1579, !1580, !1581}
!1579 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1580 = !DIEnumerator(name: "uartParityEven", value: 256)
!1581 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1582 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1504, line: 82, baseType: !32, size: 32, elements: !1583)
!1583 = !{!1584, !1585, !1586, !1587}
!1584 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1585 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1586 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1587 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1588 = !{!102, !103, !1589, !1668, !1694, !1732, !111, !122, !166}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1207, line: 336, size: 608, elements: !1592)
!1592 = !{!1593, !1612, !1616, !1620, !1633, !1638, !1642, !1646, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1591, file: !1207, line: 365, baseType: !1594, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!103, !1597, !1234}
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1599)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1216, line: 378, size: 192, elements: !1600)
!1600 = !{!1601, !1602, !1603, !1604, !1610, !1611}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1599, file: !1216, line: 380, baseType: !108, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1599, file: !1216, line: 382, baseType: !13, size: 32, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1599, file: !1216, line: 384, baseType: !13, size: 32, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1599, file: !1216, line: 386, baseType: !1605, size: 32, offset: 96)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1216, line: 351, size: 16, elements: !1607)
!1607 = !{!1608, !1609}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1606, file: !1216, line: 359, baseType: !166, size: 8)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1606, file: !1216, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1599, file: !1216, line: 388, baseType: !102, size: 32, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1599, file: !1216, line: 396, baseType: !1229, size: 32, offset: 160)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1591, file: !1207, line: 366, baseType: !1613, size: 32, offset: 32)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{null, !1597, !167}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1591, file: !1207, line: 374, baseType: !1617, size: 32, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 32)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!103, !1597}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1591, file: !1207, line: 377, baseType: !1621, size: 32, offset: 96)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 32)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{!103, !1597, !1624}
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1207, line: 122, size: 64, elements: !1627)
!1627 = !{!1628, !1629, !1630, !1631, !1632}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1626, file: !1207, line: 123, baseType: !111, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1626, file: !1207, line: 124, baseType: !166, size: 8, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1626, file: !1207, line: 125, baseType: !166, size: 8, offset: 40)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1626, file: !1207, line: 126, baseType: !166, size: 8, offset: 48)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1626, file: !1207, line: 127, baseType: !166, size: 8, offset: 56)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1591, file: !1207, line: 379, baseType: !1634, size: 32, offset: 128)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 32)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!103, !1597, !1637}
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1591, file: !1207, line: 384, baseType: !1639, size: 32, offset: 160)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!103, !1597, !1265, !103}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1591, file: !1207, line: 393, baseType: !1643, size: 32, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 32)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!103, !1597, !538, !1271}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1591, file: !1207, line: 402, baseType: !1647, size: 32, offset: 224)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{null, !1597}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1591, file: !1207, line: 405, baseType: !1647, size: 32, offset: 256)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1591, file: !1207, line: 408, baseType: !1617, size: 32, offset: 288)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1591, file: !1207, line: 411, baseType: !1647, size: 32, offset: 320)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1591, file: !1207, line: 414, baseType: !1647, size: 32, offset: 352)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1591, file: !1207, line: 417, baseType: !1617, size: 32, offset: 384)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1591, file: !1207, line: 420, baseType: !1617, size: 32, offset: 416)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1591, file: !1207, line: 423, baseType: !1647, size: 32, offset: 448)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1591, file: !1207, line: 426, baseType: !1647, size: 32, offset: 480)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1591, file: !1207, line: 429, baseType: !1617, size: 32, offset: 512)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1591, file: !1207, line: 432, baseType: !1617, size: 32, offset: 544)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1591, file: !1207, line: 435, baseType: !1661, size: 32, offset: 576)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{null, !1597, !1664, !102}
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1207, line: 142, baseType: !1665)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 32)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{null, !1597, !102}
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !1038, line: 41342, baseType: !1670)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 41322, size: 1504, elements: !1671)
!1671 = !{!1672, !1673, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1670, file: !1038, line: 41323, baseType: !1113, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1670, file: !1038, line: 41324, baseType: !1674, size: 480, offset: 32)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 480, elements: !1675)
!1675 = !{!1676}
!1676 = !DISubrange(count: 60)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1670, file: !1038, line: 41325, baseType: !1042, size: 32, offset: 512)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1670, file: !1038, line: 41326, baseType: !1674, size: 480, offset: 544)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1670, file: !1038, line: 41327, baseType: !1042, size: 32, offset: 1024)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1670, file: !1038, line: 41328, baseType: !1042, size: 32, offset: 1056)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1670, file: !1038, line: 41329, baseType: !1042, size: 32, offset: 1088)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1670, file: !1038, line: 41330, baseType: !1042, size: 32, offset: 1120)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1670, file: !1038, line: 41331, baseType: !1042, size: 32, offset: 1152)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1670, file: !1038, line: 41332, baseType: !1042, size: 32, offset: 1184)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1670, file: !1038, line: 41333, baseType: !1042, size: 32, offset: 1216)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1670, file: !1038, line: 41334, baseType: !1042, size: 32, offset: 1248)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1670, file: !1038, line: 41335, baseType: !1042, size: 32, offset: 1280)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1670, file: !1038, line: 41336, baseType: !1042, size: 32, offset: 1312)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1670, file: !1038, line: 41337, baseType: !1042, size: 32, offset: 1344)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1670, file: !1038, line: 41338, baseType: !1113, size: 32, offset: 1376)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1670, file: !1038, line: 41339, baseType: !1042, size: 32, offset: 1408)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1670, file: !1038, line: 41340, baseType: !1042, size: 32, offset: 1440)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1670, file: !1038, line: 41341, baseType: !1042, size: 32, offset: 1472)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1697, line: 29, size: 160, elements: !1698)
!1697 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1698 = !{!1699, !1700, !1701, !1702, !1731}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1696, file: !1697, line: 30, baseType: !1668, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1696, file: !1697, line: 31, baseType: !111, size: 32, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1696, file: !1697, line: 32, baseType: !166, size: 8, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1696, file: !1697, line: 33, baseType: !1703, size: 32, offset: 96)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1706, line: 60, size: 64, elements: !1707)
!1706 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1707 = !{!1708, !1730}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1705, file: !1706, line: 69, baseType: !1709, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1711)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1706, line: 50, size: 64, elements: !1712)
!1712 = !{!1713, !1728, !1729}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1711, file: !1706, line: 52, baseType: !1714, size: 32)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1716)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1463, line: 64, baseType: !1717)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1463, line: 59, size: 160, elements: !1718)
!1718 = !{!1719, !1727}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1717, file: !1463, line: 60, baseType: !1720, size: 128)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1463, line: 51, size: 128, elements: !1721)
!1721 = !{!1722, !1723, !1724, !1725, !1726}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1720, file: !1463, line: 52, baseType: !111, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1720, file: !1463, line: 53, baseType: !111, size: 32, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1720, file: !1463, line: 54, baseType: !111, size: 32, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1720, file: !1463, line: 55, baseType: !166, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1720, file: !1463, line: 56, baseType: !111, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1717, file: !1463, line: 61, baseType: !111, size: 32, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1711, file: !1706, line: 54, baseType: !166, size: 8, offset: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1711, file: !1706, line: 56, baseType: !166, size: 8, offset: 40)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1705, file: !1706, line: 71, baseType: !166, size: 8, offset: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1696, file: !1697, line: 35, baseType: !1647, size: 32, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!1733 = !{!1734, !1739, !1741, !1748, !1754, !1756, !1498, !1758, !1760, !1763, !1766}
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1500, file: !1697, line: 339, type: !1736, isLocal: false, isDefinition: true, align: 16)
!1736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1230, size: 96, elements: !1737)
!1737 = !{!1738}
!1738 = !DISubrange(count: 6)
!1739 = !DIGlobalVariableExpression(var: !1740, expr: !DIExpression())
!1740 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1500, file: !1697, line: 339, type: !1598, isLocal: false, isDefinition: true, align: 32)
!1741 = !DIGlobalVariableExpression(var: !1742, expr: !DIExpression())
!1742 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1500, file: !1697, line: 339, type: !1743, isLocal: true, isDefinition: true, align: 32)
!1743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1744)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1167, line: 51, size: 64, elements: !1745)
!1745 = !{!1746, !1747}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1744, file: !1167, line: 60, baseType: !1617, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1744, file: !1167, line: 65, baseType: !1597, size: 32, offset: 32)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1500, file: !1697, line: 339, type: !1750, isLocal: true, isDefinition: true)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1697, line: 39, size: 64, elements: !1751)
!1751 = !{!1752, !1753}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1750, file: !1697, line: 41, baseType: !1664, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1750, file: !1697, line: 42, baseType: !102, size: 32, offset: 32)
!1754 = !DIGlobalVariableExpression(var: !1755, expr: !DIExpression())
!1755 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1500, file: !1697, line: 339, type: !1606, isLocal: true, isDefinition: true, align: 8)
!1756 = !DIGlobalVariableExpression(var: !1757, expr: !DIExpression())
!1757 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1500, file: !1697, line: 270, type: !1590, isLocal: true, isDefinition: true)
!1758 = !DIGlobalVariableExpression(var: !1759, expr: !DIExpression())
!1759 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1500, file: !1697, line: 339, type: !1704, isLocal: true, isDefinition: true)
!1760 = !DIGlobalVariableExpression(var: !1761, expr: !DIExpression())
!1761 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1500, file: !1697, line: 339, type: !1762, isLocal: true, isDefinition: true)
!1762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1710, size: 64, elements: !520)
!1763 = !DIGlobalVariableExpression(var: !1764, expr: !DIExpression())
!1764 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1500, file: !1697, line: 339, type: !1765, isLocal: true, isDefinition: true)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1715, size: 320, elements: !216)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1768, file: !1697, line: 339, type: !1771, isLocal: true, isDefinition: true, align: 32)
!1768 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1697, file: !1697, line: 339, type: !1648, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !1769)
!1769 = !{!1770}
!1770 = !DILocalVariable(name: "dev", arg: 1, scope: !1768, file: !1697, line: 339, type: !1597)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1771, file: !10, line: 55, baseType: !314, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1771, file: !10, line: 57, baseType: !314, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1771, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1771, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1777 = !DIGlobalVariableExpression(var: !1778, expr: !DIExpression())
!1778 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1779, file: !2004, line: 65, type: !1042, isLocal: true, isDefinition: true)
!1779 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1780, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1781, retainedTypes: !1922, globals: !2001, splitDebugInlining: false, nameTableKind: None)
!1780 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!1781 = !{!1782}
!1782 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !1038, line: 103, baseType: !103, size: 32, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921}
!1784 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1785 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1786 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1787 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1788 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1789 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1790 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1791 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1792 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1793 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1794 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1795 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1796 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1797 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1798 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1799 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1800 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1801 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1802 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1803 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1804 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1805 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1806 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1807 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1808 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1809 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1810 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1811 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1812 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1813 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1814 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1815 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1816 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1817 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1818 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1819 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1820 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1821 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1822 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1823 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1824 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1825 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1826 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1827 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1828 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1829 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1830 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1831 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1832 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1833 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1834 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1835 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1836 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1837 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1838 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1839 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1840 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1841 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1842 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1843 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1844 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1845 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1846 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1847 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1848 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1849 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1850 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1851 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1852 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1853 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1854 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1855 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1856 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1857 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1858 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1859 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1860 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1861 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1862 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1863 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1864 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1865 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1866 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1867 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1868 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1869 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1870 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1871 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1872 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1873 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1874 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1875 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1876 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1877 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1878 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1879 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1880 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1881 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1882 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1883 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1884 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1885 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1886 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1887 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1888 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1889 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1890 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1891 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1892 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1893 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1894 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1895 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1896 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1897 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1898 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1899 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1900 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1901 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1902 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1903 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1904 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1905 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1906 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1907 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1908 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1909 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1910 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1911 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1912 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1913 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1914 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1915 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1916 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1917 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1918 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1919 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1920 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1921 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1922 = !{!104, !1923, !314, !166, !111, !1932, !1965}
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1925, line: 770, baseType: !1926)
!1925 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 764, size: 128, elements: !1927)
!1927 = !{!1928, !1929, !1930, !1931}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1926, file: !1925, line: 766, baseType: !1042, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1926, file: !1925, line: 767, baseType: !1042, size: 32, offset: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1926, file: !1925, line: 768, baseType: !1042, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1926, file: !1925, line: 769, baseType: !1113, size: 32, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1925, line: 426, baseType: !1934)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 411, size: 28704, elements: !1935)
!1935 = !{!1936, !1940, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1955, !1960, !1964}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1934, file: !1925, line: 413, baseType: !1937, size: 256)
!1937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 256, elements: !1938)
!1938 = !{!1939}
!1939 = !DISubrange(count: 8)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1934, file: !1925, line: 414, baseType: !1941, size: 768, offset: 256)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 768, elements: !1942)
!1942 = !{!1943}
!1943 = !DISubrange(count: 24)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1934, file: !1925, line: 415, baseType: !1937, size: 256, offset: 1024)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1934, file: !1925, line: 416, baseType: !1941, size: 768, offset: 1280)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1934, file: !1925, line: 417, baseType: !1937, size: 256, offset: 2048)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1934, file: !1925, line: 418, baseType: !1941, size: 768, offset: 2304)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1934, file: !1925, line: 419, baseType: !1937, size: 256, offset: 3072)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1934, file: !1925, line: 420, baseType: !1941, size: 768, offset: 3328)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1934, file: !1925, line: 421, baseType: !1937, size: 256, offset: 4096)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1934, file: !1925, line: 422, baseType: !1952, size: 1792, offset: 4352)
!1952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 1792, elements: !1953)
!1953 = !{!1954}
!1954 = !DISubrange(count: 56)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1934, file: !1925, line: 423, baseType: !1956, size: 1920, offset: 6144)
!1956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1957, size: 1920, elements: !1958)
!1957 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !166)
!1958 = !{!1959}
!1959 = !DISubrange(count: 240)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1934, file: !1925, line: 424, baseType: !1961, size: 20608, offset: 8064)
!1961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 20608, elements: !1962)
!1962 = !{!1963}
!1963 = !DISubrange(count: 644)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1934, file: !1925, line: 425, baseType: !1042, size: 32, offset: 28672)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1925, line: 468, baseType: !1967)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 445, size: 1120, elements: !1968)
!1968 = !{!1969, !1970, !1971, !1972, !1973, !1974, !1975, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1988, !1989, !1990, !1994, !1998, !2000}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1967, file: !1925, line: 447, baseType: !1113, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1967, file: !1925, line: 448, baseType: !1042, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1967, file: !1925, line: 449, baseType: !1042, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1967, file: !1925, line: 450, baseType: !1042, size: 32, offset: 96)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1967, file: !1925, line: 451, baseType: !1042, size: 32, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1967, file: !1925, line: 452, baseType: !1042, size: 32, offset: 160)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1967, file: !1925, line: 453, baseType: !1976, size: 96, offset: 192)
!1976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1957, size: 96, elements: !1977)
!1977 = !{!1978}
!1978 = !DISubrange(count: 12)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1967, file: !1925, line: 454, baseType: !1042, size: 32, offset: 288)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1967, file: !1925, line: 455, baseType: !1042, size: 32, offset: 320)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1967, file: !1925, line: 456, baseType: !1042, size: 32, offset: 352)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1967, file: !1925, line: 457, baseType: !1042, size: 32, offset: 384)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1967, file: !1925, line: 458, baseType: !1042, size: 32, offset: 416)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1967, file: !1925, line: 459, baseType: !1042, size: 32, offset: 448)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1967, file: !1925, line: 460, baseType: !1042, size: 32, offset: 480)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1967, file: !1925, line: 461, baseType: !1987, size: 64, offset: 512)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1113, size: 64, elements: !216)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1967, file: !1925, line: 462, baseType: !1113, size: 32, offset: 576)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1967, file: !1925, line: 463, baseType: !1113, size: 32, offset: 608)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1967, file: !1925, line: 464, baseType: !1991, size: 128, offset: 640)
!1991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1113, size: 128, elements: !1992)
!1992 = !{!1993}
!1993 = !DISubrange(count: 4)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1967, file: !1925, line: 465, baseType: !1995, size: 160, offset: 768)
!1995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1113, size: 160, elements: !1996)
!1996 = !{!1997}
!1997 = !DISubrange(count: 5)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1967, file: !1925, line: 466, baseType: !1999, size: 160, offset: 928)
!1999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 160, elements: !1996)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1967, file: !1925, line: 467, baseType: !1042, size: 32, offset: 1088)
!2001 = !{!2002, !2028, !2033, !2035, !2037, !1777}
!2002 = !DIGlobalVariableExpression(var: !2003, expr: !DIExpression())
!2003 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1779, file: !2004, line: 285, type: !2005, isLocal: true, isDefinition: true, align: 32)
!2004 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1167, line: 51, size: 64, elements: !2007)
!2007 = !{!2008, !2027}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2006, file: !1167, line: 60, baseType: !2009, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!103, !2012}
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1216, line: 378, size: 192, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2025, !2026}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2014, file: !1216, line: 380, baseType: !108, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2014, file: !1216, line: 382, baseType: !13, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2014, file: !1216, line: 384, baseType: !13, size: 32, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2014, file: !1216, line: 386, baseType: !2020, size: 32, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 32)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1216, line: 351, size: 16, elements: !2022)
!2022 = !{!2023, !2024}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2021, file: !1216, line: 359, baseType: !166, size: 8)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2021, file: !1216, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2014, file: !1216, line: 388, baseType: !102, size: 32, offset: 128)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2014, file: !1216, line: 396, baseType: !1229, size: 32, offset: 160)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2006, file: !1167, line: 65, baseType: !2012, size: 32, offset: 32)
!2028 = !DIGlobalVariableExpression(var: !2029, expr: !DIExpression())
!2029 = distinct !DIGlobalVariable(name: "lock", scope: !1779, file: !2004, line: 34, type: !2030, isLocal: true, isDefinition: true)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2031)
!2031 = !{!2032}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2030, file: !152, line: 52, baseType: !22, size: 32)
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "last_load", scope: !1779, file: !2004, line: 36, type: !111, isLocal: true, isDefinition: true)
!2035 = !DIGlobalVariableExpression(var: !2036, expr: !DIExpression())
!2036 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1779, file: !2004, line: 48, type: !111, isLocal: true, isDefinition: true)
!2037 = !DIGlobalVariableExpression(var: !2038, expr: !DIExpression())
!2038 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1779, file: !2004, line: 54, type: !111, isLocal: true, isDefinition: true)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !2041, file: !2045, line: 69, type: !2046, isLocal: true, isDefinition: true, align: 32)
!2041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2043, globals: !2044, splitDebugInlining: false, nameTableKind: None)
!2042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2043 = !{!1162, !22}
!2044 = !{!2039}
!2045 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2047)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1167, line: 51, size: 64, elements: !2048)
!2048 = !{!2049, !2068}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2047, file: !1167, line: 60, baseType: !2050, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 32)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{!103, !2053}
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1216, line: 378, size: 192, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060, !2066, !2067}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2055, file: !1216, line: 380, baseType: !108, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2055, file: !1216, line: 382, baseType: !13, size: 32, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2055, file: !1216, line: 384, baseType: !13, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2055, file: !1216, line: 386, baseType: !2061, size: 32, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1216, line: 351, size: 16, elements: !2063)
!2063 = !{!2064, !2065}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2062, file: !1216, line: 359, baseType: !166, size: 8)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2062, file: !1216, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2055, file: !1216, line: 388, baseType: !102, size: 32, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2055, file: !1216, line: 396, baseType: !1229, size: 32, offset: 160)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2047, file: !1167, line: 65, baseType: !2053, size: 32, offset: 32)
!2069 = !DIGlobalVariableExpression(var: !2070, expr: !DIExpression())
!2070 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2071, file: !2074, line: 23, type: !1271, isLocal: false, isDefinition: true)
!2071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2072, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !340, globals: !2073, splitDebugInlining: false, nameTableKind: None)
!2072 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2073 = !{!2069}
!2074 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2077, file: !2081, line: 37, type: !2327, isLocal: false, isDefinition: true)
!2077 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2078, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2079, retainedTypes: !2088, globals: !2161, splitDebugInlining: false, nameTableKind: None)
!2078 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2079 = !{!2080, !30, !1782}
!2080 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2081, line: 63, baseType: !32, size: 32, elements: !2082)
!2081 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2082 = !{!2083, !2084, !2085, !2086, !2087}
!2083 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2084 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2085 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2086 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2087 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2088 = !{!156, !102, !103, !2089, !160, !111, !2119, !314, !166, !2144}
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2091)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2092, line: 51, size: 64, elements: !2093)
!2092 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2093 = !{!2094, !2114}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2091, file: !2092, line: 52, baseType: !2095, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2092, line: 38, baseType: !2096)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2097 = !DISubroutineType(types: !2098)
!2098 = !{!103, !2099, !538, !181}
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2101)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1216, line: 378, size: 192, elements: !2102)
!2102 = !{!2103, !2104, !2105, !2106, !2112, !2113}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2101, file: !1216, line: 380, baseType: !108, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2101, file: !1216, line: 382, baseType: !13, size: 32, offset: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2101, file: !1216, line: 384, baseType: !13, size: 32, offset: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2101, file: !1216, line: 386, baseType: !2107, size: 32, offset: 96)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1216, line: 351, size: 16, elements: !2109)
!2109 = !{!2110, !2111}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2108, file: !1216, line: 359, baseType: !166, size: 8)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2108, file: !1216, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2101, file: !1216, line: 388, baseType: !102, size: 32, offset: 128)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2101, file: !1216, line: 396, baseType: !1229, size: 32, offset: 160)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2091, file: !2092, line: 53, baseType: !2115, size: 32, offset: 32)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2092, line: 47, baseType: !2116)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 32)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!103, !2099, !538, !181, !111}
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1925, line: 468, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 445, size: 1120, elements: !2122)
!2122 = !{!2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2121, file: !1925, line: 447, baseType: !1113, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2121, file: !1925, line: 448, baseType: !1042, size: 32, offset: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2121, file: !1925, line: 449, baseType: !1042, size: 32, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2121, file: !1925, line: 450, baseType: !1042, size: 32, offset: 96)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2121, file: !1925, line: 451, baseType: !1042, size: 32, offset: 128)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2121, file: !1925, line: 452, baseType: !1042, size: 32, offset: 160)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2121, file: !1925, line: 453, baseType: !1976, size: 96, offset: 192)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2121, file: !1925, line: 454, baseType: !1042, size: 32, offset: 288)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2121, file: !1925, line: 455, baseType: !1042, size: 32, offset: 320)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2121, file: !1925, line: 456, baseType: !1042, size: 32, offset: 352)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2121, file: !1925, line: 457, baseType: !1042, size: 32, offset: 384)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2121, file: !1925, line: 458, baseType: !1042, size: 32, offset: 416)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2121, file: !1925, line: 459, baseType: !1042, size: 32, offset: 448)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2121, file: !1925, line: 460, baseType: !1042, size: 32, offset: 480)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2121, file: !1925, line: 461, baseType: !1987, size: 64, offset: 512)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2121, file: !1925, line: 462, baseType: !1113, size: 32, offset: 576)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2121, file: !1925, line: 463, baseType: !1113, size: 32, offset: 608)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2121, file: !1925, line: 464, baseType: !1991, size: 128, offset: 640)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2121, file: !1925, line: 465, baseType: !1995, size: 160, offset: 768)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2121, file: !1925, line: 466, baseType: !1999, size: 160, offset: 928)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2121, file: !1925, line: 467, baseType: !1042, size: 32, offset: 1088)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1925, line: 426, baseType: !2146)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 411, size: 28704, elements: !2147)
!2147 = !{!2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2146, file: !1925, line: 413, baseType: !1937, size: 256)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2146, file: !1925, line: 414, baseType: !1941, size: 768, offset: 256)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2146, file: !1925, line: 415, baseType: !1937, size: 256, offset: 1024)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2146, file: !1925, line: 416, baseType: !1941, size: 768, offset: 1280)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2146, file: !1925, line: 417, baseType: !1937, size: 256, offset: 2048)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2146, file: !1925, line: 418, baseType: !1941, size: 768, offset: 2304)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2146, file: !1925, line: 419, baseType: !1937, size: 256, offset: 3072)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2146, file: !1925, line: 420, baseType: !1941, size: 768, offset: 3328)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2146, file: !1925, line: 421, baseType: !1937, size: 256, offset: 4096)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2146, file: !1925, line: 422, baseType: !1952, size: 1792, offset: 4352)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2146, file: !1925, line: 423, baseType: !1956, size: 1920, offset: 6144)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2146, file: !1925, line: 424, baseType: !1961, size: 20608, offset: 8064)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2146, file: !1925, line: 425, baseType: !1042, size: 32, offset: 28672)
!2161 = !{!2075, !2162, !2281, !2287, !2289, !2292, !2297, !2299, !2304}
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "_kernel", scope: !2077, file: !2081, line: 40, type: !2164, isLocal: false, isDefinition: true)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !131, line: 158, size: 288, elements: !2165)
!2165 = !{!2166, !2276}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2164, file: !131, line: 159, baseType: !2167, size: 192)
!2167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2168, size: 192, elements: !520)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !131, line: 100, size: 192, elements: !2169)
!2169 = !{!2170, !2171, !2172, !2269, !2270, !2271, !2272}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2168, file: !131, line: 102, baseType: !111, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2168, file: !131, line: 105, baseType: !160, size: 32, offset: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2168, file: !131, line: 108, baseType: !2173, size: 32, offset: 64)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !2175)
!2175 = !{!2176, !2234, !2246, !2247, !2248, !2249, !2264}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2174, file: !199, line: 247, baseType: !2177, size: 384)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2178)
!2178 = !{!2179, !2203, !2210, !2211, !2212, !2221, !2222, !2223}
!2179 = !DIDerivedType(tag: DW_TAG_member, scope: !2177, file: !199, line: 60, baseType: !2180, size: 64)
!2180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2177, file: !199, line: 60, size: 64, elements: !2181)
!2181 = !{!2182, !2197}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2180, file: !199, line: 61, baseType: !2183, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2184)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2185)
!2185 = !{!2186, !2192}
!2186 = !DIDerivedType(tag: DW_TAG_member, scope: !2184, file: !136, line: 38, baseType: !2187, size: 32)
!2187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2184, file: !136, line: 38, size: 32, elements: !2188)
!2188 = !{!2189, !2191}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2187, file: !136, line: 39, baseType: !2190, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2187, file: !136, line: 40, baseType: !2190, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, scope: !2184, file: !136, line: 42, baseType: !2193, size: 32, offset: 32)
!2193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2184, file: !136, line: 42, size: 32, elements: !2194)
!2194 = !{!2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2193, file: !136, line: 43, baseType: !2190, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2193, file: !136, line: 44, baseType: !2190, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2180, file: !199, line: 62, baseType: !2198, size: 64)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2199)
!2199 = !{!2200}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2198, file: !211, line: 50, baseType: !2201, size: 64)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2202, size: 64, elements: !216)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2177, file: !199, line: 68, baseType: !2204, size: 32, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2206)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2207)
!2207 = !{!2208}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2206, file: !131, line: 232, baseType: !2209, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2184)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2177, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2177, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2212 = !DIDerivedType(tag: DW_TAG_member, scope: !2177, file: !199, line: 90, baseType: !2213, size: 16, offset: 112)
!2213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2177, file: !199, line: 90, size: 16, elements: !2214)
!2214 = !{!2215, !2220}
!2215 = !DIDerivedType(tag: DW_TAG_member, scope: !2213, file: !199, line: 91, baseType: !2216, size: 16)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2213, file: !199, line: 91, size: 16, elements: !2217)
!2217 = !{!2218, !2219}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2216, file: !199, line: 96, baseType: !229, size: 8)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2216, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2213, file: !199, line: 100, baseType: !181, size: 16)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2177, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2177, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2177, file: !199, line: 131, baseType: !2224, size: 192, offset: 192)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2225)
!2225 = !{!2226, !2227, !2233}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2224, file: !131, line: 245, baseType: !2183, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2224, file: !131, line: 246, baseType: !2228, size: 32, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2229)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!2230 = !DISubroutineType(types: !2231)
!2231 = !{null, !2232}
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2224, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2174, file: !199, line: 250, baseType: !2235, size: 288, offset: 384)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2236)
!2236 = !{!2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2235, file: !248, line: 26, baseType: !111, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2235, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2235, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2235, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2235, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2235, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2235, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2235, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2235, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2174, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2174, file: !199, line: 256, baseType: !2205, size: 64, offset: 704)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2174, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2174, file: !199, line: 325, baseType: !2250, size: 32, offset: 800)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2252)
!2252 = !{!2253, !2259, !2260}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2251, file: !127, line: 5074, baseType: !2254, size: 96)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !2255)
!2255 = !{!2256, !2257, !2258}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2254, file: !268, line: 57, baseType: !271, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2254, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2254, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2251, file: !127, line: 5075, baseType: !2205, size: 64, offset: 96)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2251, file: !127, line: 5076, baseType: !2261, size: 32, offset: 160)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2262)
!2262 = !{!2263}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2261, file: !152, line: 52, baseType: !22, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2174, file: !199, line: 343, baseType: !2265, size: 64, offset: 832)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2266)
!2266 = !{!2267, !2268}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2265, file: !248, line: 63, baseType: !111, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2265, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2168, file: !131, line: 111, baseType: !2173, size: 32, offset: 96)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2168, file: !131, line: 124, baseType: !103, size: 32, offset: 128)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2168, file: !131, line: 127, baseType: !166, size: 8, offset: 160)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2168, file: !131, line: 153, baseType: !2273, offset: 168)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2274, line: 33, elements: !2275)
!2274 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2275 = !{}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2164, file: !131, line: 170, baseType: !2277, size: 96, offset: 192)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !131, line: 83, size: 96, elements: !2278)
!2278 = !{!2279, !2280}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2277, file: !131, line: 86, baseType: !2173, size: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2277, file: !131, line: 90, baseType: !2209, size: 64, offset: 32)
!2281 = !DIGlobalVariableExpression(var: !2282, expr: !DIExpression())
!2282 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2077, file: !2081, line: 43, type: !2283, isLocal: false, isDefinition: true, align: 64)
!2283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2284, size: 8192, elements: !332)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !299, line: 47, size: 8, elements: !2285)
!2285 = !{!2286}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2284, file: !299, line: 48, baseType: !110, size: 8)
!2287 = !DIGlobalVariableExpression(var: !2288, expr: !DIExpression())
!2288 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2077, file: !2081, line: 44, type: !2174, isLocal: false, isDefinition: true)
!2289 = !DIGlobalVariableExpression(var: !2290, expr: !DIExpression())
!2290 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2077, file: !2081, line: 48, type: !2291, isLocal: false, isDefinition: true)
!2291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2174, size: 896, elements: !520)
!2292 = !DIGlobalVariableExpression(var: !2293, expr: !DIExpression())
!2293 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2077, file: !2081, line: 86, type: !2294, isLocal: false, isDefinition: true, align: 64)
!2294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2284, size: 16384, elements: !2295)
!2295 = !{!521, !2296}
!2296 = !DISubrange(count: 2048)
!2297 = !DIGlobalVariableExpression(var: !2298, expr: !DIExpression())
!2298 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2077, file: !2081, line: 217, type: !122, isLocal: false, isDefinition: true)
!2299 = !DIGlobalVariableExpression(var: !2300, expr: !DIExpression())
!2300 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2077, file: !2081, line: 50, type: !2301, isLocal: true, isDefinition: true, align: 64)
!2301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2284, size: 2560, elements: !2302)
!2302 = !{!521, !2303}
!2303 = !DISubrange(count: 320)
!2304 = !DIGlobalVariableExpression(var: !2305, expr: !DIExpression())
!2305 = distinct !DIGlobalVariable(name: "levels", scope: !2306, file: !2081, line: 232, type: !2326, isLocal: true, isDefinition: true)
!2306 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2081, file: !2081, line: 230, type: !2307, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !2309)
!2307 = !DISubroutineType(types: !2308)
!2308 = !{null, !2080}
!2309 = !{!2310, !2311, !2321, !2325}
!2310 = !DILocalVariable(name: "level", arg: 1, scope: !2306, file: !2081, line: 230, type: !2080)
!2311 = !DILocalVariable(name: "entry", scope: !2306, file: !2081, line: 244, type: !2312)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2314)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1167, line: 51, size: 64, elements: !2315)
!2315 = !{!2316, !2320}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2314, file: !1167, line: 60, baseType: !2317, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 32)
!2318 = !DISubroutineType(types: !2319)
!2319 = !{!103, !2099}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2314, file: !1167, line: 65, baseType: !2099, size: 32, offset: 32)
!2321 = !DILocalVariable(name: "dev", scope: !2322, file: !2081, line: 247, type: !2099)
!2322 = distinct !DILexicalBlock(scope: !2323, file: !2081, line: 246, column: 64)
!2323 = distinct !DILexicalBlock(scope: !2324, file: !2081, line: 246, column: 2)
!2324 = distinct !DILexicalBlock(scope: !2306, file: !2081, line: 246, column: 2)
!2325 = !DILocalVariable(name: "rc", scope: !2322, file: !2081, line: 248, type: !103)
!2326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2312, size: 192, elements: !1737)
!2327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2328)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !735, line: 16, size: 64, elements: !2329)
!2329 = !{!2330, !2331}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2328, file: !735, line: 17, baseType: !108, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2328, file: !735, line: 18, baseType: !166, size: 8, offset: 32)
!2332 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression())
!2333 = distinct !DIGlobalVariable(name: "states_str", scope: !2334, file: !2335, line: 276, type: !2453, isLocal: true, isDefinition: true)
!2334 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2335, file: !2335, line: 271, type: !2336, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2444)
!2335 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2336 = !DISubroutineType(types: !2337)
!2337 = !{!108, !2338, !160, !156}
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !2339)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 32)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !2341)
!2341 = !{!2342, !2400, !2412, !2413, !2414, !2415, !2430}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2340, file: !199, line: 247, baseType: !2343, size: 384)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2344)
!2344 = !{!2345, !2369, !2376, !2377, !2378, !2387, !2388, !2389}
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !2343, file: !199, line: 60, baseType: !2346, size: 64)
!2346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2343, file: !199, line: 60, size: 64, elements: !2347)
!2347 = !{!2348, !2363}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2346, file: !199, line: 61, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2350)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2351)
!2351 = !{!2352, !2358}
!2352 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !136, line: 38, baseType: !2353, size: 32)
!2353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2350, file: !136, line: 38, size: 32, elements: !2354)
!2354 = !{!2355, !2357}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2353, file: !136, line: 39, baseType: !2356, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2353, file: !136, line: 40, baseType: !2356, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !136, line: 42, baseType: !2359, size: 32, offset: 32)
!2359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2350, file: !136, line: 42, size: 32, elements: !2360)
!2360 = !{!2361, !2362}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2359, file: !136, line: 43, baseType: !2356, size: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2359, file: !136, line: 44, baseType: !2356, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2346, file: !199, line: 62, baseType: !2364, size: 64)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2365)
!2365 = !{!2366}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2364, file: !211, line: 50, baseType: !2367, size: 64)
!2367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2368, size: 64, elements: !216)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2343, file: !199, line: 68, baseType: !2370, size: 32, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2372)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2373)
!2373 = !{!2374}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2372, file: !131, line: 232, baseType: !2375, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2350)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2343, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2343, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2343, file: !199, line: 90, baseType: !2379, size: 16, offset: 112)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2343, file: !199, line: 90, size: 16, elements: !2380)
!2380 = !{!2381, !2386}
!2381 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !199, line: 91, baseType: !2382, size: 16)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2379, file: !199, line: 91, size: 16, elements: !2383)
!2383 = !{!2384, !2385}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2382, file: !199, line: 96, baseType: !229, size: 8)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2382, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2379, file: !199, line: 100, baseType: !181, size: 16)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2343, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2343, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2343, file: !199, line: 131, baseType: !2390, size: 192, offset: 192)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2391)
!2391 = !{!2392, !2393, !2399}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2390, file: !131, line: 245, baseType: !2349, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2390, file: !131, line: 246, baseType: !2394, size: 32, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2395)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{null, !2398}
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2390, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2340, file: !199, line: 250, baseType: !2401, size: 288, offset: 384)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2402)
!2402 = !{!2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2401, file: !248, line: 26, baseType: !111, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2401, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2401, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2401, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2401, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2401, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2401, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2401, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2401, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2340, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2340, file: !199, line: 256, baseType: !2371, size: 64, offset: 704)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2340, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2340, file: !199, line: 325, baseType: !2416, size: 32, offset: 800)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 32)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2418)
!2418 = !{!2419, !2425, !2426}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2417, file: !127, line: 5074, baseType: !2420, size: 96)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !2421)
!2421 = !{!2422, !2423, !2424}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2420, file: !268, line: 57, baseType: !271, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2420, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2420, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2417, file: !127, line: 5075, baseType: !2371, size: 64, offset: 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2417, file: !127, line: 5076, baseType: !2427, size: 32, offset: 160)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2428)
!2428 = !{!2429}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2427, file: !152, line: 52, baseType: !22, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2340, file: !199, line: 343, baseType: !2431, size: 64, offset: 832)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2432)
!2432 = !{!2433, !2434}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2431, file: !248, line: 63, baseType: !111, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2431, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2435 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2436, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2437, globals: !2439, splitDebugInlining: false, nameTableKind: None)
!2436 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2437 = !{!102, !108, !104, !166, !22, !103, !2438, !24, !156, !160, !111, !112}
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 32)
!2439 = !{!2332, !2440}
!2440 = !DIGlobalVariableExpression(var: !2441, expr: !DIExpression())
!2441 = distinct !DIGlobalVariable(name: "states_sz", scope: !2334, file: !2335, line: 279, type: !2442, isLocal: true, isDefinition: true)
!2442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2443, size: 256, elements: !1938)
!2443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!2444 = !{!2445, !2446, !2447, !2448, !2449, !2450, !2451}
!2445 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2334, file: !2335, line: 271, type: !2338)
!2446 = !DILocalVariable(name: "buf", arg: 2, scope: !2334, file: !2335, line: 271, type: !160)
!2447 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2334, file: !2335, line: 271, type: !156)
!2448 = !DILocalVariable(name: "off", scope: !2334, file: !2335, line: 273, type: !156)
!2449 = !DILocalVariable(name: "bit", scope: !2334, file: !2335, line: 274, type: !166)
!2450 = !DILocalVariable(name: "thread_state", scope: !2334, file: !2335, line: 275, type: !166)
!2451 = !DILocalVariable(name: "index", scope: !2452, file: !2335, line: 293, type: !166)
!2452 = distinct !DILexicalBlock(scope: !2334, file: !2335, line: 293, column: 2)
!2453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 256, elements: !1938)
!2454 = !DIGlobalVariableExpression(var: !2455, expr: !DIExpression())
!2455 = distinct !DIGlobalVariable(name: "lock", scope: !2456, file: !2557, line: 47, type: !2548, isLocal: true, isDefinition: true)
!2456 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2457, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2458, globals: !2556, splitDebugInlining: false, nameTableKind: None)
!2457 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2458 = !{!122, !102, !103, !2459, !2474}
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2461)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2462)
!2462 = !{!2463, !2469}
!2463 = !DIDerivedType(tag: DW_TAG_member, scope: !2461, file: !136, line: 38, baseType: !2464, size: 32)
!2464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2461, file: !136, line: 38, size: 32, elements: !2465)
!2465 = !{!2466, !2468}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2464, file: !136, line: 39, baseType: !2467, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2464, file: !136, line: 40, baseType: !2467, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, scope: !2461, file: !136, line: 42, baseType: !2470, size: 32, offset: 32)
!2470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2461, file: !136, line: 42, size: 32, elements: !2471)
!2471 = !{!2472, !2473}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2470, file: !136, line: 43, baseType: !2467, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2470, file: !136, line: 44, baseType: !2467, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !2476)
!2476 = !{!2477, !2521, !2533, !2534, !2535, !2536, !2551}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2475, file: !199, line: 247, baseType: !2478, size: 384)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2479)
!2479 = !{!2480, !2490, !2497, !2498, !2499, !2508, !2509, !2510}
!2480 = !DIDerivedType(tag: DW_TAG_member, scope: !2478, file: !199, line: 60, baseType: !2481, size: 64)
!2481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2478, file: !199, line: 60, size: 64, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2481, file: !199, line: 61, baseType: !2460, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2481, file: !199, line: 62, baseType: !2485, size: 64)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2486)
!2486 = !{!2487}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2485, file: !211, line: 50, baseType: !2488, size: 64)
!2488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2489, size: 64, elements: !216)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2478, file: !199, line: 68, baseType: !2491, size: 32, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2493)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2494)
!2494 = !{!2495}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2493, file: !131, line: 232, baseType: !2496, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2461)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2478, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2478, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2499 = !DIDerivedType(tag: DW_TAG_member, scope: !2478, file: !199, line: 90, baseType: !2500, size: 16, offset: 112)
!2500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2478, file: !199, line: 90, size: 16, elements: !2501)
!2501 = !{!2502, !2507}
!2502 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !199, line: 91, baseType: !2503, size: 16)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2500, file: !199, line: 91, size: 16, elements: !2504)
!2504 = !{!2505, !2506}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2503, file: !199, line: 96, baseType: !229, size: 8)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2503, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2500, file: !199, line: 100, baseType: !181, size: 16)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2478, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2478, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2478, file: !199, line: 131, baseType: !2511, size: 192, offset: 192)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2512)
!2512 = !{!2513, !2514, !2520}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2511, file: !131, line: 245, baseType: !2460, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2511, file: !131, line: 246, baseType: !2515, size: 32, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2516)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 32)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{null, !2519}
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2511, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2475, file: !199, line: 250, baseType: !2522, size: 288, offset: 384)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2523)
!2523 = !{!2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2522, file: !248, line: 26, baseType: !111, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2522, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2522, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2522, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2522, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2522, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2522, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2522, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2522, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2475, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2475, file: !199, line: 256, baseType: !2492, size: 64, offset: 704)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2475, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2475, file: !199, line: 325, baseType: !2537, size: 32, offset: 800)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2539)
!2539 = !{!2540, !2546, !2547}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2538, file: !127, line: 5074, baseType: !2541, size: 96)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !2542)
!2542 = !{!2543, !2544, !2545}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2541, file: !268, line: 57, baseType: !271, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2541, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2541, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2538, file: !127, line: 5075, baseType: !2492, size: 64, offset: 96)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2538, file: !127, line: 5076, baseType: !2548, size: 32, offset: 160)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2549)
!2549 = !{!2550}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2548, file: !152, line: 52, baseType: !22, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2475, file: !199, line: 343, baseType: !2552, size: 64, offset: 832)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2553)
!2553 = !{!2554, !2555}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2552, file: !248, line: 63, baseType: !111, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2552, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2556 = !{!2454}
!2557 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2558 = !DIGlobalVariableExpression(var: !2559, expr: !DIExpression())
!2559 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2560, file: !2664, line: 56, type: !2651, isLocal: false, isDefinition: true)
!2560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2561, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2562, globals: !2661, splitDebugInlining: false, nameTableKind: None)
!2561 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2562 = !{!2563, !160, !102, !2659, !538, !104, !314, !103, !111, !112, !2660}
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 32)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !2565)
!2565 = !{!2566, !2624, !2636, !2637, !2638, !2639, !2654}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2564, file: !199, line: 247, baseType: !2567, size: 384)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2568)
!2568 = !{!2569, !2593, !2600, !2601, !2602, !2611, !2612, !2613}
!2569 = !DIDerivedType(tag: DW_TAG_member, scope: !2567, file: !199, line: 60, baseType: !2570, size: 64)
!2570 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2567, file: !199, line: 60, size: 64, elements: !2571)
!2571 = !{!2572, !2587}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2570, file: !199, line: 61, baseType: !2573, size: 64)
!2573 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2574)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2575)
!2575 = !{!2576, !2582}
!2576 = !DIDerivedType(tag: DW_TAG_member, scope: !2574, file: !136, line: 38, baseType: !2577, size: 32)
!2577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2574, file: !136, line: 38, size: 32, elements: !2578)
!2578 = !{!2579, !2581}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2577, file: !136, line: 39, baseType: !2580, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2577, file: !136, line: 40, baseType: !2580, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, scope: !2574, file: !136, line: 42, baseType: !2583, size: 32, offset: 32)
!2583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2574, file: !136, line: 42, size: 32, elements: !2584)
!2584 = !{!2585, !2586}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2583, file: !136, line: 43, baseType: !2580, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2583, file: !136, line: 44, baseType: !2580, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2570, file: !199, line: 62, baseType: !2588, size: 64)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2589)
!2589 = !{!2590}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2588, file: !211, line: 50, baseType: !2591, size: 64)
!2591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2592, size: 64, elements: !216)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2567, file: !199, line: 68, baseType: !2594, size: 32, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2596)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2597)
!2597 = !{!2598}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2596, file: !131, line: 232, baseType: !2599, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2574)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2567, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2567, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2602 = !DIDerivedType(tag: DW_TAG_member, scope: !2567, file: !199, line: 90, baseType: !2603, size: 16, offset: 112)
!2603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2567, file: !199, line: 90, size: 16, elements: !2604)
!2604 = !{!2605, !2610}
!2605 = !DIDerivedType(tag: DW_TAG_member, scope: !2603, file: !199, line: 91, baseType: !2606, size: 16)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2603, file: !199, line: 91, size: 16, elements: !2607)
!2607 = !{!2608, !2609}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2606, file: !199, line: 96, baseType: !229, size: 8)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2606, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2603, file: !199, line: 100, baseType: !181, size: 16)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2567, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2567, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2567, file: !199, line: 131, baseType: !2614, size: 192, offset: 192)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2615)
!2615 = !{!2616, !2617, !2623}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2614, file: !131, line: 245, baseType: !2573, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2614, file: !131, line: 246, baseType: !2618, size: 32, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2619)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 32)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{null, !2622}
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2614, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2564, file: !199, line: 250, baseType: !2625, size: 288, offset: 384)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2626)
!2626 = !{!2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2625, file: !248, line: 26, baseType: !111, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2625, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2625, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2625, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2625, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2625, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2625, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2625, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2625, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2564, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2564, file: !199, line: 256, baseType: !2595, size: 64, offset: 704)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2564, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2564, file: !199, line: 325, baseType: !2640, size: 32, offset: 800)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 32)
!2641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2642)
!2642 = !{!2643, !2649, !2650}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2641, file: !127, line: 5074, baseType: !2644, size: 96)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !2645)
!2645 = !{!2646, !2647, !2648}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2644, file: !268, line: 57, baseType: !271, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2644, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2644, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2641, file: !127, line: 5075, baseType: !2595, size: 64, offset: 96)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2641, file: !127, line: 5076, baseType: !2651, size: 32, offset: 160)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2652)
!2652 = !{!2653}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2651, file: !152, line: 52, baseType: !22, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2564, file: !199, line: 343, baseType: !2655, size: 64, offset: 832)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2656)
!2656 = !{!2657, !2658}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2655, file: !248, line: 63, baseType: !111, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2655, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 32)
!2661 = !{!2558, !2662, !2665, !2667}
!2662 = !DIGlobalVariableExpression(var: !2663, expr: !DIExpression())
!2663 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2560, file: !2664, line: 404, type: !103, isLocal: true, isDefinition: true)
!2664 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2665 = !DIGlobalVariableExpression(var: !2666, expr: !DIExpression())
!2666 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2560, file: !2664, line: 405, type: !103, isLocal: true, isDefinition: true)
!2667 = !DIGlobalVariableExpression(var: !2668, expr: !DIExpression())
!2668 = distinct !DIGlobalVariable(name: "pending_current", scope: !2560, file: !2664, line: 425, type: !2563, isLocal: true, isDefinition: true)
!2669 = !DIGlobalVariableExpression(var: !2670, expr: !DIExpression())
!2670 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2671, file: !2701, line: 19, type: !2707, isLocal: true, isDefinition: true)
!2671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2673, globals: !2698, splitDebugInlining: false, nameTableKind: None)
!2672 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2673 = !{!104, !102, !314, !111, !112, !103, !2674, !160, !106}
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 32)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2676)
!2676 = !{!2677, !2692, !2697}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2675, file: !131, line: 245, baseType: !2678, size: 64)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2679)
!2679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2680)
!2680 = !{!2681, !2687}
!2681 = !DIDerivedType(tag: DW_TAG_member, scope: !2679, file: !136, line: 38, baseType: !2682, size: 32)
!2682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2679, file: !136, line: 38, size: 32, elements: !2683)
!2683 = !{!2684, !2686}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2682, file: !136, line: 39, baseType: !2685, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2682, file: !136, line: 40, baseType: !2685, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2679, file: !136, line: 42, baseType: !2688, size: 32, offset: 32)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2679, file: !136, line: 42, size: 32, elements: !2689)
!2689 = !{!2690, !2691}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2688, file: !136, line: 43, baseType: !2685, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2688, file: !136, line: 44, baseType: !2685, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2675, file: !131, line: 246, baseType: !2693, size: 32, offset: 64)
!2693 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2694)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 32)
!2695 = !DISubroutineType(types: !2696)
!2696 = !{null, !2674}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2675, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2698 = !{!2699, !2669, !2702, !2704}
!2699 = !DIGlobalVariableExpression(var: !2700, expr: !DIExpression())
!2700 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2671, file: !2701, line: 15, type: !112, isLocal: true, isDefinition: true)
!2701 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2702 = !DIGlobalVariableExpression(var: !2703, expr: !DIExpression())
!2703 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2671, file: !2701, line: 25, type: !103, isLocal: true, isDefinition: true)
!2704 = !DIGlobalVariableExpression(var: !2705, expr: !DIExpression())
!2705 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2671, file: !2701, line: 17, type: !2706, isLocal: true, isDefinition: true)
!2706 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2679)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2708)
!2708 = !{!2709}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2707, file: !152, line: 52, baseType: !22, size: 32)
!2710 = !DIGlobalVariableExpression(var: !2711, expr: !DIExpression())
!2711 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2712, file: !2718, line: 61, type: !2750, isLocal: false, isDefinition: true, align: 64)
!2712 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2713, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2714, globals: !2715, splitDebugInlining: false, nameTableKind: None)
!2713 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2714 = !{!102, !103, !22}
!2715 = !{!2716, !2710}
!2716 = !DIGlobalVariableExpression(var: !2717, expr: !DIExpression())
!2717 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2712, file: !2718, line: 61, type: !2719, isLocal: false, isDefinition: true, align: 32)
!2718 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2720)
!2720 = !{!2721, !2727, !2746}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2719, file: !127, line: 5074, baseType: !2722, size: 96)
!2722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !2723)
!2723 = !{!2724, !2725, !2726}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2722, file: !268, line: 57, baseType: !271, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2722, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2722, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2719, file: !127, line: 5075, baseType: !2728, size: 64, offset: 96)
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2729)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2730)
!2730 = !{!2731}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2729, file: !131, line: 232, baseType: !2732, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2733)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2734)
!2734 = !{!2735, !2741}
!2735 = !DIDerivedType(tag: DW_TAG_member, scope: !2733, file: !136, line: 38, baseType: !2736, size: 32)
!2736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2733, file: !136, line: 38, size: 32, elements: !2737)
!2737 = !{!2738, !2740}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2736, file: !136, line: 39, baseType: !2739, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2736, file: !136, line: 40, baseType: !2739, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, scope: !2733, file: !136, line: 42, baseType: !2742, size: 32, offset: 32)
!2742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2733, file: !136, line: 42, size: 32, elements: !2743)
!2743 = !{!2744, !2745}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2742, file: !136, line: 43, baseType: !2739, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2742, file: !136, line: 44, baseType: !2739, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2719, file: !127, line: 5076, baseType: !2747, size: 32, offset: 160)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2748)
!2748 = !{!2749}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2747, file: !152, line: 52, baseType: !22, size: 32)
!2750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 8192, elements: !332)
!2751 = !DIGlobalVariableExpression(var: !2752, expr: !DIExpression())
!2752 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2753, file: !2772, line: 55, type: !2773, isLocal: true, isDefinition: true, align: 32)
!2753 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2754, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2755, globals: !2771, splitDebugInlining: false, nameTableKind: None)
!2754 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2755 = !{!102, !104, !103, !2756}
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2758)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2759)
!2759 = !{!2760, !2766}
!2760 = !DIDerivedType(tag: DW_TAG_member, scope: !2758, file: !136, line: 38, baseType: !2761, size: 32)
!2761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2758, file: !136, line: 38, size: 32, elements: !2762)
!2762 = !{!2763, !2765}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2761, file: !136, line: 39, baseType: !2764, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2761, file: !136, line: 40, baseType: !2764, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, scope: !2758, file: !136, line: 42, baseType: !2767, size: 32, offset: 32)
!2767 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2758, file: !136, line: 42, size: 32, elements: !2768)
!2768 = !{!2769, !2770}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2767, file: !136, line: 43, baseType: !2764, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2767, file: !136, line: 44, baseType: !2764, size: 32)
!2771 = !{!2751}
!2772 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2774)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1167, line: 51, size: 64, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2774, file: !1167, line: 60, baseType: !1170, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2774, file: !1167, line: 65, baseType: !1173, size: 32, offset: 32)
!2778 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2779, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !340, splitDebugInlining: false, nameTableKind: None)
!2779 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2780 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2781, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !340, splitDebugInlining: false, nameTableKind: None)
!2781 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2783, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2784, retainedTypes: !2792, splitDebugInlining: false, nameTableKind: None)
!2783 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2784 = !{!30, !2785}
!2785 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2786, line: 54, baseType: !32, size: 32, elements: !2787)
!2786 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2787 = !{!2788, !2789, !2790, !2791}
!2788 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2789 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2790 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2791 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2792 = !{!102, !156, !538, !24, !2793, !22, !2799, !103, !1732, !2814}
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2786, line: 58, baseType: !2795)
!2795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2786, line: 58, size: 64, elements: !2796)
!2796 = !{!2797}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2795, file: !2786, line: 58, baseType: !2798, size: 64)
!2798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !1938)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 32)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2786, line: 68, size: 128, elements: !2801)
!2801 = !{!2802, !2805, !2806, !2807}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2800, file: !2786, line: 69, baseType: !2803, size: 64)
!2803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2804, size: 64, elements: !216)
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2786, line: 61, baseType: !111)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2800, file: !2786, line: 70, baseType: !2804, size: 32, offset: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2800, file: !2786, line: 71, baseType: !111, size: 32, offset: 96)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2800, file: !2786, line: 77, baseType: !2808, offset: 128)
!2808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2809, elements: !2812)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2786, line: 64, size: 32, elements: !2810)
!2810 = !{!2811}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2809, file: !2786, line: 65, baseType: !2804, size: 32)
!2812 = !{!2813}
!2813 = !DISubrange(count: 0)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!2815 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2816, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2817, retainedTypes: !2837, splitDebugInlining: false, nameTableKind: None)
!2816 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2817 = !{!2818, !2826}
!2818 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2819, line: 69, baseType: !32, size: 32, elements: !2820)
!2819 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2820 = !{!2821, !2822, !2823, !2824, !2825}
!2821 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2822 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2823 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2824 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2825 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2826 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2819, line: 56, baseType: !32, size: 32, elements: !2827)
!2827 = !{!2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836}
!2828 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2829 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2830 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2831 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2832 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2833 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2834 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2835 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2836 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2837 = !{!103, !2818, !2826, !2838, !230, !1233, !2840, !2841, !167, !182, !108, !156, !102, !22, !32, !726, !2843, !2844, !728, !727, !107, !729, !2839, !2845, !2846, !2847, !2848}
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2819, line: 31, baseType: !2839)
!2839 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2840 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !157, line: 329, baseType: !32)
!2841 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2819, line: 32, baseType: !2842)
!2842 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !113)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !157, line: 145, baseType: !103)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 32)
!2849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !340, splitDebugInlining: false, nameTableKind: None)
!2850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2852, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2852 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2854, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2855, splitDebugInlining: false, nameTableKind: None)
!2854 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2855 = !{!108, !167, !103, !32}
!2856 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2857, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2858, retainedTypes: !340, splitDebugInlining: false, nameTableKind: None)
!2857 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2858 = !{!2859, !30}
!2859 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2860, line: 27, baseType: !32, size: 32, elements: !2861)
!2860 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2861 = !{!2862, !2863, !2864, !2865, !2866}
!2862 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2863 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2864 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2865 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2866 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2869, retainedTypes: !2870, splitDebugInlining: false, nameTableKind: None)
!2868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2869 = !{!1782, !2859, !30}
!2870 = !{!2871, !2872, !102, !103, !314, !111, !166, !2889}
!2871 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !1038, line: 249, baseType: !1782)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1925, line: 426, baseType: !2874)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 411, size: 28704, elements: !2875)
!2875 = !{!2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2874, file: !1925, line: 413, baseType: !1937, size: 256)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2874, file: !1925, line: 414, baseType: !1941, size: 768, offset: 256)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2874, file: !1925, line: 415, baseType: !1937, size: 256, offset: 1024)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2874, file: !1925, line: 416, baseType: !1941, size: 768, offset: 1280)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2874, file: !1925, line: 417, baseType: !1937, size: 256, offset: 2048)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2874, file: !1925, line: 418, baseType: !1941, size: 768, offset: 2304)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2874, file: !1925, line: 419, baseType: !1937, size: 256, offset: 3072)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2874, file: !1925, line: 420, baseType: !1941, size: 768, offset: 3328)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2874, file: !1925, line: 421, baseType: !1937, size: 256, offset: 4096)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2874, file: !1925, line: 422, baseType: !1952, size: 1792, offset: 4352)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2874, file: !1925, line: 423, baseType: !1956, size: 1920, offset: 6144)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2874, file: !1925, line: 424, baseType: !1961, size: 20608, offset: 8064)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2874, file: !1925, line: 425, baseType: !1042, size: 32, offset: 28672)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1925, line: 468, baseType: !2891)
!2891 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 445, size: 1120, elements: !2892)
!2892 = !{!2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2891, file: !1925, line: 447, baseType: !1113, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2891, file: !1925, line: 448, baseType: !1042, size: 32, offset: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2891, file: !1925, line: 449, baseType: !1042, size: 32, offset: 64)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2891, file: !1925, line: 450, baseType: !1042, size: 32, offset: 96)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2891, file: !1925, line: 451, baseType: !1042, size: 32, offset: 128)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2891, file: !1925, line: 452, baseType: !1042, size: 32, offset: 160)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2891, file: !1925, line: 453, baseType: !1976, size: 96, offset: 192)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2891, file: !1925, line: 454, baseType: !1042, size: 32, offset: 288)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2891, file: !1925, line: 455, baseType: !1042, size: 32, offset: 320)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2891, file: !1925, line: 456, baseType: !1042, size: 32, offset: 352)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2891, file: !1925, line: 457, baseType: !1042, size: 32, offset: 384)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2891, file: !1925, line: 458, baseType: !1042, size: 32, offset: 416)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2891, file: !1925, line: 459, baseType: !1042, size: 32, offset: 448)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2891, file: !1925, line: 460, baseType: !1042, size: 32, offset: 480)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2891, file: !1925, line: 461, baseType: !1987, size: 64, offset: 512)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2891, file: !1925, line: 462, baseType: !1113, size: 32, offset: 576)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2891, file: !1925, line: 463, baseType: !1113, size: 32, offset: 608)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2891, file: !1925, line: 464, baseType: !1991, size: 128, offset: 640)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2891, file: !1925, line: 465, baseType: !1995, size: 160, offset: 768)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2891, file: !1925, line: 466, baseType: !1999, size: 160, offset: 928)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2891, file: !1925, line: 467, baseType: !1042, size: 32, offset: 1088)
!2914 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2915, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !340, splitDebugInlining: false, nameTableKind: None)
!2915 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2916 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2917, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2918, splitDebugInlining: false, nameTableKind: None)
!2917 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2918 = !{!102, !103, !22, !2919}
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1925, line: 468, baseType: !2921)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 445, size: 1120, elements: !2922)
!2922 = !{!2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2921, file: !1925, line: 447, baseType: !1113, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2921, file: !1925, line: 448, baseType: !1042, size: 32, offset: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2921, file: !1925, line: 449, baseType: !1042, size: 32, offset: 64)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2921, file: !1925, line: 450, baseType: !1042, size: 32, offset: 96)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2921, file: !1925, line: 451, baseType: !1042, size: 32, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2921, file: !1925, line: 452, baseType: !1042, size: 32, offset: 160)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2921, file: !1925, line: 453, baseType: !1976, size: 96, offset: 192)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2921, file: !1925, line: 454, baseType: !1042, size: 32, offset: 288)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2921, file: !1925, line: 455, baseType: !1042, size: 32, offset: 320)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2921, file: !1925, line: 456, baseType: !1042, size: 32, offset: 352)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2921, file: !1925, line: 457, baseType: !1042, size: 32, offset: 384)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2921, file: !1925, line: 458, baseType: !1042, size: 32, offset: 416)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2921, file: !1925, line: 459, baseType: !1042, size: 32, offset: 448)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2921, file: !1925, line: 460, baseType: !1042, size: 32, offset: 480)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2921, file: !1925, line: 461, baseType: !1987, size: 64, offset: 512)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2921, file: !1925, line: 462, baseType: !1113, size: 32, offset: 576)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2921, file: !1925, line: 463, baseType: !1113, size: 32, offset: 608)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2921, file: !1925, line: 464, baseType: !1991, size: 128, offset: 640)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2921, file: !1925, line: 465, baseType: !1995, size: 160, offset: 768)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2921, file: !1925, line: 466, baseType: !1999, size: 160, offset: 928)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2921, file: !1925, line: 467, baseType: !1042, size: 32, offset: 1088)
!2944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2946, splitDebugInlining: false, nameTableKind: None)
!2945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2946 = !{!2947, !102, !103}
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1925, line: 468, baseType: !2949)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 445, size: 1120, elements: !2950)
!2950 = !{!2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2949, file: !1925, line: 447, baseType: !1113, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2949, file: !1925, line: 448, baseType: !1042, size: 32, offset: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2949, file: !1925, line: 449, baseType: !1042, size: 32, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2949, file: !1925, line: 450, baseType: !1042, size: 32, offset: 96)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2949, file: !1925, line: 451, baseType: !1042, size: 32, offset: 128)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2949, file: !1925, line: 452, baseType: !1042, size: 32, offset: 160)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2949, file: !1925, line: 453, baseType: !1976, size: 96, offset: 192)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2949, file: !1925, line: 454, baseType: !1042, size: 32, offset: 288)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2949, file: !1925, line: 455, baseType: !1042, size: 32, offset: 320)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2949, file: !1925, line: 456, baseType: !1042, size: 32, offset: 352)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2949, file: !1925, line: 457, baseType: !1042, size: 32, offset: 384)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2949, file: !1925, line: 458, baseType: !1042, size: 32, offset: 416)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2949, file: !1925, line: 459, baseType: !1042, size: 32, offset: 448)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2949, file: !1925, line: 460, baseType: !1042, size: 32, offset: 480)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2949, file: !1925, line: 461, baseType: !1987, size: 64, offset: 512)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2949, file: !1925, line: 462, baseType: !1113, size: 32, offset: 576)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2949, file: !1925, line: 463, baseType: !1113, size: 32, offset: 608)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2949, file: !1925, line: 464, baseType: !1991, size: 128, offset: 640)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2949, file: !1925, line: 465, baseType: !1995, size: 160, offset: 768)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2949, file: !1925, line: 466, baseType: !1999, size: 160, offset: 928)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2949, file: !1925, line: 467, baseType: !1042, size: 32, offset: 1088)
!2972 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2973, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2974, splitDebugInlining: false, nameTableKind: None)
!2973 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!2974 = !{!2975, !111, !102, !103}
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 32)
!2976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2977, line: 98, size: 256, elements: !2978)
!2977 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2978 = !{!2979, !2984, !2989, !2994, !2999, !3004, !3009, !3014}
!2979 = !DIDerivedType(tag: DW_TAG_member, scope: !2976, file: !2977, line: 99, baseType: !2980, size: 32)
!2980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2976, file: !2977, line: 99, size: 32, elements: !2981)
!2981 = !{!2982, !2983}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2980, file: !2977, line: 99, baseType: !111, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2980, file: !2977, line: 99, baseType: !111, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, scope: !2976, file: !2977, line: 100, baseType: !2985, size: 32, offset: 32)
!2985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2976, file: !2977, line: 100, size: 32, elements: !2986)
!2986 = !{!2987, !2988}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2985, file: !2977, line: 100, baseType: !111, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2985, file: !2977, line: 100, baseType: !111, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, scope: !2976, file: !2977, line: 101, baseType: !2990, size: 32, offset: 64)
!2990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2976, file: !2977, line: 101, size: 32, elements: !2991)
!2991 = !{!2992, !2993}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2990, file: !2977, line: 101, baseType: !111, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2990, file: !2977, line: 101, baseType: !111, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, scope: !2976, file: !2977, line: 102, baseType: !2995, size: 32, offset: 96)
!2995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2976, file: !2977, line: 102, size: 32, elements: !2996)
!2996 = !{!2997, !2998}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2995, file: !2977, line: 102, baseType: !111, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2995, file: !2977, line: 102, baseType: !111, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_member, scope: !2976, file: !2977, line: 103, baseType: !3000, size: 32, offset: 128)
!3000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2976, file: !2977, line: 103, size: 32, elements: !3001)
!3001 = !{!3002, !3003}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3000, file: !2977, line: 103, baseType: !111, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3000, file: !2977, line: 103, baseType: !111, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_member, scope: !2976, file: !2977, line: 104, baseType: !3005, size: 32, offset: 160)
!3005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2976, file: !2977, line: 104, size: 32, elements: !3006)
!3006 = !{!3007, !3008}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3005, file: !2977, line: 104, baseType: !111, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3005, file: !2977, line: 104, baseType: !111, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, scope: !2976, file: !2977, line: 105, baseType: !3010, size: 32, offset: 192)
!3010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2976, file: !2977, line: 105, size: 32, elements: !3011)
!3011 = !{!3012, !3013}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3010, file: !2977, line: 105, baseType: !111, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3010, file: !2977, line: 105, baseType: !111, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2976, file: !2977, line: 106, baseType: !111, size: 32, offset: 224)
!3015 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3016, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2858, retainedTypes: !3017, splitDebugInlining: false, nameTableKind: None)
!3016 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3017 = !{!3018, !102, !103, !3043, !2814, !111}
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1925, line: 468, baseType: !3020)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 445, size: 1120, elements: !3021)
!3021 = !{!3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3020, file: !1925, line: 447, baseType: !1113, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3020, file: !1925, line: 448, baseType: !1042, size: 32, offset: 32)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3020, file: !1925, line: 449, baseType: !1042, size: 32, offset: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3020, file: !1925, line: 450, baseType: !1042, size: 32, offset: 96)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3020, file: !1925, line: 451, baseType: !1042, size: 32, offset: 128)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3020, file: !1925, line: 452, baseType: !1042, size: 32, offset: 160)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3020, file: !1925, line: 453, baseType: !1976, size: 96, offset: 192)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3020, file: !1925, line: 454, baseType: !1042, size: 32, offset: 288)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3020, file: !1925, line: 455, baseType: !1042, size: 32, offset: 320)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3020, file: !1925, line: 456, baseType: !1042, size: 32, offset: 352)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3020, file: !1925, line: 457, baseType: !1042, size: 32, offset: 384)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3020, file: !1925, line: 458, baseType: !1042, size: 32, offset: 416)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3020, file: !1925, line: 459, baseType: !1042, size: 32, offset: 448)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3020, file: !1925, line: 460, baseType: !1042, size: 32, offset: 480)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3020, file: !1925, line: 461, baseType: !1987, size: 64, offset: 512)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3020, file: !1925, line: 462, baseType: !1113, size: 32, offset: 576)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3020, file: !1925, line: 463, baseType: !1113, size: 32, offset: 608)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3020, file: !1925, line: 464, baseType: !1991, size: 128, offset: 640)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3020, file: !1925, line: 465, baseType: !1995, size: 160, offset: 768)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3020, file: !1925, line: 466, baseType: !1999, size: 160, offset: 928)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3020, file: !1925, line: 467, baseType: !1042, size: 32, offset: 1088)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 32)
!3044 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2977, line: 141, baseType: !3045)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2977, line: 97, size: 256, elements: !3046)
!3046 = !{!3047}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3045, file: !2977, line: 107, baseType: !3048, size: 256)
!3048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2977, line: 98, size: 256, elements: !3049)
!3049 = !{!3050, !3055, !3060, !3065, !3070, !3075, !3080, !3085}
!3050 = !DIDerivedType(tag: DW_TAG_member, scope: !3048, file: !2977, line: 99, baseType: !3051, size: 32)
!3051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3048, file: !2977, line: 99, size: 32, elements: !3052)
!3052 = !{!3053, !3054}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3051, file: !2977, line: 99, baseType: !111, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3051, file: !2977, line: 99, baseType: !111, size: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, scope: !3048, file: !2977, line: 100, baseType: !3056, size: 32, offset: 32)
!3056 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3048, file: !2977, line: 100, size: 32, elements: !3057)
!3057 = !{!3058, !3059}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3056, file: !2977, line: 100, baseType: !111, size: 32)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3056, file: !2977, line: 100, baseType: !111, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_member, scope: !3048, file: !2977, line: 101, baseType: !3061, size: 32, offset: 64)
!3061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3048, file: !2977, line: 101, size: 32, elements: !3062)
!3062 = !{!3063, !3064}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3061, file: !2977, line: 101, baseType: !111, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3061, file: !2977, line: 101, baseType: !111, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, scope: !3048, file: !2977, line: 102, baseType: !3066, size: 32, offset: 96)
!3066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3048, file: !2977, line: 102, size: 32, elements: !3067)
!3067 = !{!3068, !3069}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3066, file: !2977, line: 102, baseType: !111, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3066, file: !2977, line: 102, baseType: !111, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, scope: !3048, file: !2977, line: 103, baseType: !3071, size: 32, offset: 128)
!3071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3048, file: !2977, line: 103, size: 32, elements: !3072)
!3072 = !{!3073, !3074}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3071, file: !2977, line: 103, baseType: !111, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3071, file: !2977, line: 103, baseType: !111, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, scope: !3048, file: !2977, line: 104, baseType: !3076, size: 32, offset: 160)
!3076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3048, file: !2977, line: 104, size: 32, elements: !3077)
!3077 = !{!3078, !3079}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3076, file: !2977, line: 104, baseType: !111, size: 32)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3076, file: !2977, line: 104, baseType: !111, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, scope: !3048, file: !2977, line: 105, baseType: !3081, size: 32, offset: 192)
!3081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3048, file: !2977, line: 105, size: 32, elements: !3082)
!3082 = !{!3083, !3084}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3081, file: !2977, line: 105, baseType: !111, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3081, file: !2977, line: 105, baseType: !111, size: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3048, file: !2977, line: 106, baseType: !111, size: 32, offset: 224)
!3086 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3087, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1781, retainedTypes: !3088, splitDebugInlining: false, nameTableKind: None)
!3087 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3088 = !{!2871, !314, !166, !111, !3089, !3106}
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1925, line: 426, baseType: !3091)
!3091 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 411, size: 28704, elements: !3092)
!3092 = !{!3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3091, file: !1925, line: 413, baseType: !1937, size: 256)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3091, file: !1925, line: 414, baseType: !1941, size: 768, offset: 256)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3091, file: !1925, line: 415, baseType: !1937, size: 256, offset: 1024)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3091, file: !1925, line: 416, baseType: !1941, size: 768, offset: 1280)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3091, file: !1925, line: 417, baseType: !1937, size: 256, offset: 2048)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3091, file: !1925, line: 418, baseType: !1941, size: 768, offset: 2304)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3091, file: !1925, line: 419, baseType: !1937, size: 256, offset: 3072)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3091, file: !1925, line: 420, baseType: !1941, size: 768, offset: 3328)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3091, file: !1925, line: 421, baseType: !1937, size: 256, offset: 4096)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3091, file: !1925, line: 422, baseType: !1952, size: 1792, offset: 4352)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3091, file: !1925, line: 423, baseType: !1956, size: 1920, offset: 6144)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3091, file: !1925, line: 424, baseType: !1961, size: 20608, offset: 8064)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3091, file: !1925, line: 425, baseType: !1042, size: 32, offset: 28672)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1925, line: 468, baseType: !3108)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 445, size: 1120, elements: !3109)
!3109 = !{!3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3108, file: !1925, line: 447, baseType: !1113, size: 32)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3108, file: !1925, line: 448, baseType: !1042, size: 32, offset: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3108, file: !1925, line: 449, baseType: !1042, size: 32, offset: 64)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3108, file: !1925, line: 450, baseType: !1042, size: 32, offset: 96)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3108, file: !1925, line: 451, baseType: !1042, size: 32, offset: 128)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3108, file: !1925, line: 452, baseType: !1042, size: 32, offset: 160)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3108, file: !1925, line: 453, baseType: !1976, size: 96, offset: 192)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3108, file: !1925, line: 454, baseType: !1042, size: 32, offset: 288)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3108, file: !1925, line: 455, baseType: !1042, size: 32, offset: 320)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3108, file: !1925, line: 456, baseType: !1042, size: 32, offset: 352)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3108, file: !1925, line: 457, baseType: !1042, size: 32, offset: 384)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3108, file: !1925, line: 458, baseType: !1042, size: 32, offset: 416)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3108, file: !1925, line: 459, baseType: !1042, size: 32, offset: 448)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3108, file: !1925, line: 460, baseType: !1042, size: 32, offset: 480)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3108, file: !1925, line: 461, baseType: !1987, size: 64, offset: 512)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3108, file: !1925, line: 462, baseType: !1113, size: 32, offset: 576)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3108, file: !1925, line: 463, baseType: !1113, size: 32, offset: 608)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3108, file: !1925, line: 464, baseType: !1991, size: 128, offset: 640)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3108, file: !1925, line: 465, baseType: !1995, size: 160, offset: 768)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3108, file: !1925, line: 466, baseType: !1999, size: 160, offset: 928)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3108, file: !1925, line: 467, baseType: !1042, size: 32, offset: 1088)
!3131 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3132, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3133, splitDebugInlining: false, nameTableKind: None)
!3132 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3133 = !{!3134, !102, !103}
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 32)
!3135 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1925, line: 468, baseType: !3136)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1925, line: 445, size: 1120, elements: !3137)
!3137 = !{!3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3136, file: !1925, line: 447, baseType: !1113, size: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3136, file: !1925, line: 448, baseType: !1042, size: 32, offset: 32)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3136, file: !1925, line: 449, baseType: !1042, size: 32, offset: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3136, file: !1925, line: 450, baseType: !1042, size: 32, offset: 96)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3136, file: !1925, line: 451, baseType: !1042, size: 32, offset: 128)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3136, file: !1925, line: 452, baseType: !1042, size: 32, offset: 160)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3136, file: !1925, line: 453, baseType: !1976, size: 96, offset: 192)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3136, file: !1925, line: 454, baseType: !1042, size: 32, offset: 288)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3136, file: !1925, line: 455, baseType: !1042, size: 32, offset: 320)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3136, file: !1925, line: 456, baseType: !1042, size: 32, offset: 352)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3136, file: !1925, line: 457, baseType: !1042, size: 32, offset: 384)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3136, file: !1925, line: 458, baseType: !1042, size: 32, offset: 416)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3136, file: !1925, line: 459, baseType: !1042, size: 32, offset: 448)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3136, file: !1925, line: 460, baseType: !1042, size: 32, offset: 480)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3136, file: !1925, line: 461, baseType: !1987, size: 64, offset: 512)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3136, file: !1925, line: 462, baseType: !1113, size: 32, offset: 576)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3136, file: !1925, line: 463, baseType: !1113, size: 32, offset: 608)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3136, file: !1925, line: 464, baseType: !1991, size: 128, offset: 640)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3136, file: !1925, line: 465, baseType: !1995, size: 160, offset: 768)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3136, file: !1925, line: 466, baseType: !1999, size: 160, offset: 928)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3136, file: !1925, line: 467, baseType: !1042, size: 32, offset: 1088)
!3159 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3160, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3161, splitDebugInlining: false, nameTableKind: None)
!3160 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3161 = !{!110, !160, !156, !1234, !3162, !167, !102}
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!3164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3165 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3166 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3167, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3168, splitDebugInlining: false, nameTableKind: None)
!3167 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3168 = !{!1162, !111}
!3169 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3170, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3171, retainedTypes: !3181, splitDebugInlining: false, nameTableKind: None)
!3170 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3171 = !{!3172}
!3172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !3173, line: 62, baseType: !32, size: 32, elements: !3174)
!3173 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3174 = !{!3175, !3176, !3177, !3178, !3179, !3180}
!3175 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!3176 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!3177 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!3178 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!3179 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!3180 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!3181 = !{!3182, !3245, !111, !122, !1162}
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 32)
!3183 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !1038, line: 8619, baseType: !3184)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 8563, size: 3072, elements: !3185)
!3185 = !{!3186, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3184, file: !1038, line: 8564, baseType: !3187, size: 768)
!3187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 768, elements: !3188)
!3188 = !{!3189}
!3189 = !DISubrange(count: 96)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !3184, file: !1038, line: 8565, baseType: !1042, size: 32, offset: 768)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !3184, file: !1038, line: 8566, baseType: !1042, size: 32, offset: 800)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !3184, file: !1038, line: 8567, baseType: !1042, size: 32, offset: 832)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !3184, file: !1038, line: 8568, baseType: !1042, size: 32, offset: 864)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !3184, file: !1038, line: 8569, baseType: !1042, size: 32, offset: 896)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !3184, file: !1038, line: 8570, baseType: !1042, size: 32, offset: 928)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !3184, file: !1038, line: 8571, baseType: !1042, size: 32, offset: 960)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !3184, file: !1038, line: 8572, baseType: !1042, size: 32, offset: 992)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !3184, file: !1038, line: 8573, baseType: !1042, size: 32, offset: 1024)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3184, file: !1038, line: 8574, baseType: !3200, size: 96, offset: 1056)
!3200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 96, elements: !1977)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !3184, file: !1038, line: 8575, baseType: !1042, size: 32, offset: 1152)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3184, file: !1038, line: 8576, baseType: !3200, size: 96, offset: 1184)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !3184, file: !1038, line: 8577, baseType: !1042, size: 32, offset: 1280)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !3184, file: !1038, line: 8578, baseType: !3200, size: 96, offset: 1312)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !3184, file: !1038, line: 8579, baseType: !1042, size: 32, offset: 1408)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !3184, file: !1038, line: 8580, baseType: !1042, size: 32, offset: 1440)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !3184, file: !1038, line: 8581, baseType: !1042, size: 32, offset: 1472)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !3184, file: !1038, line: 8582, baseType: !1042, size: 32, offset: 1504)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !3184, file: !1038, line: 8583, baseType: !1042, size: 32, offset: 1536)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !3184, file: !1038, line: 8584, baseType: !1042, size: 32, offset: 1568)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !3184, file: !1038, line: 8585, baseType: !1042, size: 32, offset: 1600)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !3184, file: !1038, line: 8586, baseType: !1042, size: 32, offset: 1632)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !3184, file: !1038, line: 8587, baseType: !1042, size: 32, offset: 1664)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !3184, file: !1038, line: 8588, baseType: !1042, size: 32, offset: 1696)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !3184, file: !1038, line: 8589, baseType: !1042, size: 32, offset: 1728)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !3184, file: !1038, line: 8590, baseType: !1042, size: 32, offset: 1760)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !3184, file: !1038, line: 8591, baseType: !1042, size: 32, offset: 1792)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !3184, file: !1038, line: 8592, baseType: !1042, size: 32, offset: 1824)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !3184, file: !1038, line: 8593, baseType: !1042, size: 32, offset: 1856)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !3184, file: !1038, line: 8594, baseType: !1042, size: 32, offset: 1888)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !3184, file: !1038, line: 8595, baseType: !1042, size: 32, offset: 1920)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !3184, file: !1038, line: 8596, baseType: !1042, size: 32, offset: 1952)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !3184, file: !1038, line: 8597, baseType: !1042, size: 32, offset: 1984)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !3184, file: !1038, line: 8598, baseType: !1042, size: 32, offset: 2016)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !3184, file: !1038, line: 8599, baseType: !1042, size: 32, offset: 2048)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !3184, file: !1038, line: 8600, baseType: !3200, size: 96, offset: 2080)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !3184, file: !1038, line: 8601, baseType: !1042, size: 32, offset: 2176)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !3184, file: !1038, line: 8602, baseType: !3200, size: 96, offset: 2208)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !3184, file: !1038, line: 8603, baseType: !1042, size: 32, offset: 2304)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !3184, file: !1038, line: 8604, baseType: !3200, size: 96, offset: 2336)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !3184, file: !1038, line: 8605, baseType: !1042, size: 32, offset: 2432)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !3184, file: !1038, line: 8606, baseType: !1042, size: 32, offset: 2464)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !3184, file: !1038, line: 8607, baseType: !1042, size: 32, offset: 2496)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !3184, file: !1038, line: 8608, baseType: !1042, size: 32, offset: 2528)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !3184, file: !1038, line: 8609, baseType: !1042, size: 32, offset: 2560)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !3184, file: !1038, line: 8610, baseType: !3200, size: 96, offset: 2592)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !3184, file: !1038, line: 8611, baseType: !1042, size: 32, offset: 2688)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !3184, file: !1038, line: 8612, baseType: !3200, size: 96, offset: 2720)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !3184, file: !1038, line: 8613, baseType: !1042, size: 32, offset: 2816)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !3184, file: !1038, line: 8614, baseType: !3200, size: 96, offset: 2848)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !3184, file: !1038, line: 8615, baseType: !1042, size: 32, offset: 2944)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !3184, file: !1038, line: 8616, baseType: !1042, size: 32, offset: 2976)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !3184, file: !1038, line: 8617, baseType: !1042, size: 32, offset: 3008)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !3184, file: !1038, line: 8618, baseType: !1042, size: 32, offset: 3040)
!3245 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!3246 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3247, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3248, splitDebugInlining: false, nameTableKind: None)
!3247 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3248 = !{!3249, !3253, !1320}
!3249 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !1321, line: 49, baseType: !32, size: 32, elements: !3250)
!3250 = !{!3251, !3252}
!3251 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!3252 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!3253 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !1321, line: 56, baseType: !32, size: 32, elements: !3254)
!3254 = !{!3255, !3256, !3257, !3258, !3259}
!3255 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!3256 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!3257 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!3258 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!3259 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!3260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3262, retainedTypes: !3271, splitDebugInlining: false, nameTableKind: None)
!3261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3262 = !{!1582, !3263, !3267}
!3263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1504, line: 179, baseType: !32, size: 32, elements: !3264)
!3264 = !{!3265, !3266}
!3265 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!3266 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!3267 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1504, line: 194, baseType: !32, size: 32, elements: !3268)
!3268 = !{!3269, !3270}
!3269 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!3270 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!3271 = !{!111, !1732}
!3272 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3273, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3274, retainedTypes: !3285, splitDebugInlining: false, nameTableKind: None)
!3273 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3274 = !{!753, !3275}
!3275 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !3173, line: 128, baseType: !32, size: 32, elements: !3276)
!3276 = !{!3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284}
!3277 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!3278 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!3279 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!3280 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!3281 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!3282 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!3283 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!3284 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!3285 = !{!111, !3286, !3338, !1162}
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 32)
!3287 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !1038, line: 4575, baseType: !3288)
!3288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 4532, size: 390144, elements: !3289)
!3289 = !{!3290, !3291, !3292, !3293, !3294, !3295, !3303, !3304, !3312, !3313}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !3288, file: !1038, line: 4533, baseType: !1042, size: 32)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !3288, file: !1038, line: 4534, baseType: !1042, size: 32, offset: 32)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !3288, file: !1038, line: 4535, baseType: !1042, size: 32, offset: 64)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !3288, file: !1038, line: 4536, baseType: !1042, size: 32, offset: 96)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3288, file: !1038, line: 4537, baseType: !1047, size: 16256, offset: 128)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !3288, file: !1038, line: 4543, baseType: !3296, size: 4224, offset: 16384)
!3296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3297, size: 4224, elements: !1058)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3288, file: !1038, line: 4538, size: 128, elements: !3298)
!3298 = !{!3299, !3300, !3301, !3302}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !3297, file: !1038, line: 4539, baseType: !1042, size: 32)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !3297, file: !1038, line: 4540, baseType: !1042, size: 32, offset: 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !3297, file: !1038, line: 4541, baseType: !1042, size: 32, offset: 64)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !3297, file: !1038, line: 4542, baseType: !1042, size: 32, offset: 96)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3288, file: !1038, line: 4544, baseType: !1061, size: 110464, offset: 20608)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !3288, file: !1038, line: 4550, baseType: !3305, size: 24448, offset: 131072)
!3305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3306, size: 24448, elements: !1072)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3288, file: !1038, line: 4545, size: 128, elements: !3307)
!3307 = !{!3308, !3309, !3310, !3311}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !3306, file: !1038, line: 4546, baseType: !1042, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !3306, file: !1038, line: 4547, baseType: !1042, size: 32, offset: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !3306, file: !1038, line: 4548, baseType: !1042, size: 32, offset: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !3306, file: !1038, line: 4549, baseType: !1042, size: 32, offset: 96)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3288, file: !1038, line: 4551, baseType: !1075, size: 106624, offset: 155520)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !3288, file: !1038, line: 4574, baseType: !3314, size: 128000, offset: 262144)
!3314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3315, size: 128000, elements: !1106)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3288, file: !1038, line: 4552, size: 1024, elements: !3316)
!3316 = !{!3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !3315, file: !1038, line: 4553, baseType: !1042, size: 32)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !3315, file: !1038, line: 4554, baseType: !1042, size: 32, offset: 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !3315, file: !1038, line: 4555, baseType: !1042, size: 32, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !3315, file: !1038, line: 4556, baseType: !1042, size: 32, offset: 96)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !3315, file: !1038, line: 4557, baseType: !1042, size: 32, offset: 128)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !3315, file: !1038, line: 4558, baseType: !1042, size: 32, offset: 160)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !3315, file: !1038, line: 4559, baseType: !1042, size: 32, offset: 192)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !3315, file: !1038, line: 4560, baseType: !1042, size: 32, offset: 224)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !3315, file: !1038, line: 4561, baseType: !1042, size: 32, offset: 256)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !3315, file: !1038, line: 4562, baseType: !1042, size: 32, offset: 288)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !3315, file: !1038, line: 4563, baseType: !1042, size: 32, offset: 320)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !3315, file: !1038, line: 4564, baseType: !1042, size: 32, offset: 352)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !3315, file: !1038, line: 4565, baseType: !1042, size: 32, offset: 384)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !3315, file: !1038, line: 4566, baseType: !1042, size: 32, offset: 416)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !3315, file: !1038, line: 4567, baseType: !1042, size: 32, offset: 448)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !3315, file: !1038, line: 4568, baseType: !1042, size: 32, offset: 480)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3315, file: !1038, line: 4569, baseType: !1099, size: 384, offset: 512)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !3315, file: !1038, line: 4570, baseType: !1042, size: 32, offset: 896)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !3315, file: !1038, line: 4571, baseType: !1042, size: 32, offset: 928)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !3315, file: !1038, line: 4572, baseType: !1042, size: 32, offset: 960)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !3315, file: !1038, line: 4573, baseType: !1042, size: 32, offset: 992)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 32)
!3339 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !1038, line: 8619, baseType: !3340)
!3340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 8563, size: 3072, elements: !3341)
!3341 = !{!3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3340, file: !1038, line: 8564, baseType: !3187, size: 768)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !3340, file: !1038, line: 8565, baseType: !1042, size: 32, offset: 768)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !3340, file: !1038, line: 8566, baseType: !1042, size: 32, offset: 800)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !3340, file: !1038, line: 8567, baseType: !1042, size: 32, offset: 832)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !3340, file: !1038, line: 8568, baseType: !1042, size: 32, offset: 864)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !3340, file: !1038, line: 8569, baseType: !1042, size: 32, offset: 896)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !3340, file: !1038, line: 8570, baseType: !1042, size: 32, offset: 928)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !3340, file: !1038, line: 8571, baseType: !1042, size: 32, offset: 960)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !3340, file: !1038, line: 8572, baseType: !1042, size: 32, offset: 992)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !3340, file: !1038, line: 8573, baseType: !1042, size: 32, offset: 1024)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3340, file: !1038, line: 8574, baseType: !3200, size: 96, offset: 1056)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !3340, file: !1038, line: 8575, baseType: !1042, size: 32, offset: 1152)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3340, file: !1038, line: 8576, baseType: !3200, size: 96, offset: 1184)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !3340, file: !1038, line: 8577, baseType: !1042, size: 32, offset: 1280)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !3340, file: !1038, line: 8578, baseType: !3200, size: 96, offset: 1312)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !3340, file: !1038, line: 8579, baseType: !1042, size: 32, offset: 1408)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !3340, file: !1038, line: 8580, baseType: !1042, size: 32, offset: 1440)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !3340, file: !1038, line: 8581, baseType: !1042, size: 32, offset: 1472)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !3340, file: !1038, line: 8582, baseType: !1042, size: 32, offset: 1504)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !3340, file: !1038, line: 8583, baseType: !1042, size: 32, offset: 1536)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !3340, file: !1038, line: 8584, baseType: !1042, size: 32, offset: 1568)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !3340, file: !1038, line: 8585, baseType: !1042, size: 32, offset: 1600)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !3340, file: !1038, line: 8586, baseType: !1042, size: 32, offset: 1632)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !3340, file: !1038, line: 8587, baseType: !1042, size: 32, offset: 1664)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !3340, file: !1038, line: 8588, baseType: !1042, size: 32, offset: 1696)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !3340, file: !1038, line: 8589, baseType: !1042, size: 32, offset: 1728)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !3340, file: !1038, line: 8590, baseType: !1042, size: 32, offset: 1760)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !3340, file: !1038, line: 8591, baseType: !1042, size: 32, offset: 1792)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !3340, file: !1038, line: 8592, baseType: !1042, size: 32, offset: 1824)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !3340, file: !1038, line: 8593, baseType: !1042, size: 32, offset: 1856)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !3340, file: !1038, line: 8594, baseType: !1042, size: 32, offset: 1888)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !3340, file: !1038, line: 8595, baseType: !1042, size: 32, offset: 1920)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !3340, file: !1038, line: 8596, baseType: !1042, size: 32, offset: 1952)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !3340, file: !1038, line: 8597, baseType: !1042, size: 32, offset: 1984)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !3340, file: !1038, line: 8598, baseType: !1042, size: 32, offset: 2016)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !3340, file: !1038, line: 8599, baseType: !1042, size: 32, offset: 2048)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !3340, file: !1038, line: 8600, baseType: !3200, size: 96, offset: 2080)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !3340, file: !1038, line: 8601, baseType: !1042, size: 32, offset: 2176)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !3340, file: !1038, line: 8602, baseType: !3200, size: 96, offset: 2208)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !3340, file: !1038, line: 8603, baseType: !1042, size: 32, offset: 2304)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !3340, file: !1038, line: 8604, baseType: !3200, size: 96, offset: 2336)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !3340, file: !1038, line: 8605, baseType: !1042, size: 32, offset: 2432)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !3340, file: !1038, line: 8606, baseType: !1042, size: 32, offset: 2464)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !3340, file: !1038, line: 8607, baseType: !1042, size: 32, offset: 2496)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !3340, file: !1038, line: 8608, baseType: !1042, size: 32, offset: 2528)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !3340, file: !1038, line: 8609, baseType: !1042, size: 32, offset: 2560)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !3340, file: !1038, line: 8610, baseType: !3200, size: 96, offset: 2592)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !3340, file: !1038, line: 8611, baseType: !1042, size: 32, offset: 2688)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !3340, file: !1038, line: 8612, baseType: !3200, size: 96, offset: 2720)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !3340, file: !1038, line: 8613, baseType: !1042, size: 32, offset: 2816)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !3340, file: !1038, line: 8614, baseType: !3200, size: 96, offset: 2848)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !3340, file: !1038, line: 8615, baseType: !1042, size: 32, offset: 2944)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !3340, file: !1038, line: 8616, baseType: !1042, size: 32, offset: 2976)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !3340, file: !1038, line: 8617, baseType: !1042, size: 32, offset: 3008)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !3340, file: !1038, line: 8618, baseType: !1042, size: 32, offset: 3040)
!3397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3399, splitDebugInlining: false, nameTableKind: None)
!3398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3399 = !{!102, !156}
!3400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3402, retainedTypes: !340, splitDebugInlining: false, nameTableKind: None)
!3401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3402 = !{!3403, !3410, !2859, !30}
!3403 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3404, line: 14, baseType: !32, size: 32, elements: !3405)
!3404 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3405 = !{!3406, !3407, !3408, !3409}
!3406 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3407 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3408 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3409 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3410 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3404, line: 42, baseType: !32, size: 32, elements: !3411)
!3411 = !{!3412, !3413, !3414, !3415, !3416, !3417}
!3412 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3413 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3414 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3415 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3416 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3417 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3418 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3419, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !340, splitDebugInlining: false, nameTableKind: None)
!3419 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3422, splitDebugInlining: false, nameTableKind: None)
!3421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3422 = !{!102, !103, !3423, !3438}
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 32)
!3424 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !3425)
!3425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !3426)
!3426 = !{!3427, !3433}
!3427 = !DIDerivedType(tag: DW_TAG_member, scope: !3425, file: !136, line: 38, baseType: !3428, size: 32)
!3428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3425, file: !136, line: 38, size: 32, elements: !3429)
!3429 = !{!3430, !3432}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3428, file: !136, line: 39, baseType: !3431, size: 32)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 32)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3428, file: !136, line: 40, baseType: !3431, size: 32)
!3433 = !DIDerivedType(tag: DW_TAG_member, scope: !3425, file: !136, line: 42, baseType: !3434, size: 32, offset: 32)
!3434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3425, file: !136, line: 42, size: 32, elements: !3435)
!3435 = !{!3436, !3437}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3434, file: !136, line: 43, baseType: !3431, size: 32)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3434, file: !136, line: 44, baseType: !3431, size: 32)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 32)
!3439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !3440)
!3440 = !{!3441, !3485, !3497, !3498, !3499, !3500, !3515}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3439, file: !199, line: 247, baseType: !3442, size: 384)
!3442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !3443)
!3443 = !{!3444, !3454, !3461, !3462, !3463, !3472, !3473, !3474}
!3444 = !DIDerivedType(tag: DW_TAG_member, scope: !3442, file: !199, line: 60, baseType: !3445, size: 64)
!3445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3442, file: !199, line: 60, size: 64, elements: !3446)
!3446 = !{!3447, !3448}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3445, file: !199, line: 61, baseType: !3424, size: 64)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3445, file: !199, line: 62, baseType: !3449, size: 64)
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !3450)
!3450 = !{!3451}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3449, file: !211, line: 50, baseType: !3452, size: 64)
!3452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3453, size: 64, elements: !216)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 32)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3442, file: !199, line: 68, baseType: !3455, size: 32, offset: 64)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 32)
!3456 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !3457)
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !3458)
!3458 = !{!3459}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3457, file: !131, line: 232, baseType: !3460, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !3425)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3442, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3442, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!3463 = !DIDerivedType(tag: DW_TAG_member, scope: !3442, file: !199, line: 90, baseType: !3464, size: 16, offset: 112)
!3464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3442, file: !199, line: 90, size: 16, elements: !3465)
!3465 = !{!3466, !3471}
!3466 = !DIDerivedType(tag: DW_TAG_member, scope: !3464, file: !199, line: 91, baseType: !3467, size: 16)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3464, file: !199, line: 91, size: 16, elements: !3468)
!3468 = !{!3469, !3470}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3467, file: !199, line: 96, baseType: !229, size: 8)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3467, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3464, file: !199, line: 100, baseType: !181, size: 16)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3442, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3442, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3442, file: !199, line: 131, baseType: !3475, size: 192, offset: 192)
!3475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !3476)
!3476 = !{!3477, !3478, !3484}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3475, file: !131, line: 245, baseType: !3424, size: 64)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3475, file: !131, line: 246, baseType: !3479, size: 32, offset: 64)
!3479 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !3480)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 32)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{null, !3483}
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 32)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3475, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3439, file: !199, line: 250, baseType: !3486, size: 288, offset: 384)
!3486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !3487)
!3487 = !{!3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496}
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3486, file: !248, line: 26, baseType: !111, size: 32)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3486, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3486, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3486, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3486, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3486, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3486, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3486, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3486, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3439, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3439, file: !199, line: 256, baseType: !3456, size: 64, offset: 704)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3439, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3439, file: !199, line: 325, baseType: !3501, size: 32, offset: 800)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 32)
!3502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !3503)
!3503 = !{!3504, !3510, !3511}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3502, file: !127, line: 5074, baseType: !3505, size: 96)
!3505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !3506)
!3506 = !{!3507, !3508, !3509}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3505, file: !268, line: 57, baseType: !271, size: 32)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3505, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3505, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3502, file: !127, line: 5075, baseType: !3456, size: 64, offset: 96)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3502, file: !127, line: 5076, baseType: !3512, size: 32, offset: 160)
!3512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !3513)
!3513 = !{!3514}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3512, file: !152, line: 52, baseType: !22, size: 32)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3439, file: !199, line: 343, baseType: !3516, size: 64, offset: 832)
!3516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !3517)
!3517 = !{!3518, !3519}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3516, file: !248, line: 63, baseType: !111, size: 32)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3516, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!3520 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3521, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3522, splitDebugInlining: false, nameTableKind: None)
!3521 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3522 = !{!22, !102, !103}
!3523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !340, splitDebugInlining: false, nameTableKind: None)
!3524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!3525 = !{!"Ubuntu clang version 14.0.6"}
!3526 = !{i32 7, !"Dwarf Version", i32 4}
!3527 = !{i32 2, !"Debug Info Version", i32 3}
!3528 = !{i32 1, !"wchar_size", i32 4}
!3529 = !{i32 1, !"min_enum_size", i32 4}
!3530 = !{i32 1, !"branch-target-enforcement", i32 0}
!3531 = !{i32 1, !"sign-return-address", i32 0}
!3532 = !{i32 1, !"sign-return-address-all", i32 0}
!3533 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3534 = !{i32 7, !"frame-pointer", i32 2}
!3535 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3536, file: !3536, line: 26, type: !317, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !2275)
!3536 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3537 = !DILocation(line: 28, column: 1, scope: !3535)
!3538 = !{i64 2155083566, i64 2155083586, i64 2155083649}
!3539 = !DILocation(line: 29, column: 1, scope: !3535)
!3540 = !{i64 2155083981, i64 2155084001, i64 2155084064}
!3541 = !DILocation(line: 30, column: 1, scope: !3535)
!3542 = !{i64 2155084400, i64 2155084420, i64 2155084483}
!3543 = !DILocation(line: 31, column: 1, scope: !3535)
!3544 = !{i64 2155088880, i64 2155088900, i64 2155088963}
!3545 = !DILocation(line: 33, column: 1, scope: !3535)
!3546 = !{i64 2155089172, i64 2155089192, i64 2155089255}
!3547 = !DILocation(line: 35, column: 1, scope: !3535)
!3548 = !{i64 2155089497, i64 2155089517, i64 2155089580}
!3549 = !DILocation(line: 50, column: 1, scope: !3535)
!3550 = !{i64 2155089924, i64 2155089944, i64 2155090007}
!3551 = !DILocation(line: 54, column: 1, scope: !3535)
!3552 = !{i64 2155090363, i64 2155090383, i64 2155090446}
!3553 = !DILocation(line: 61, column: 1, scope: !3535)
!3554 = !{i64 2155090680, i64 2155090700, i64 2155090763}
!3555 = !DILocation(line: 63, column: 1, scope: !3535)
!3556 = !{i64 2155091060, i64 2155091080, i64 2155091143}
!3557 = !DILocation(line: 64, column: 1, scope: !3535)
!3558 = !{i64 2155091582, i64 2155091602, i64 2155091665}
!3559 = !DILocation(line: 65, column: 1, scope: !3535)
!3560 = !{i64 2155092080, i64 2155092100, i64 2155092163}
!3561 = !DILocation(line: 66, column: 1, scope: !3535)
!3562 = !{i64 2155092562, i64 2155092582, i64 2155092645}
!3563 = !DILocation(line: 67, column: 1, scope: !3535)
!3564 = !{i64 2155093069, i64 2155093089, i64 2155093152}
!3565 = !DILocation(line: 68, column: 1, scope: !3535)
!3566 = !{i64 2155093557, i64 2155093577, i64 2155093640}
!3567 = !DILocation(line: 70, column: 1, scope: !3535)
!3568 = !{i64 2155094025, i64 2155094045, i64 2155094108}
!3569 = !DILocation(line: 71, column: 1, scope: !3535)
!3570 = !{i64 2155094467, i64 2155094487, i64 2155094550}
!3571 = !DILocation(line: 72, column: 1, scope: !3535)
!3572 = !{i64 2155094925, i64 2155094945, i64 2155095008}
!3573 = !DILocation(line: 97, column: 1, scope: !3535)
!3574 = !{i64 2155095232, i64 2155095252, i64 2155095315}
!3575 = !DILocation(line: 99, column: 1, scope: !3535)
!3576 = !{i64 2155095450, i64 2155095470, i64 2155095533}
!3577 = !DILocation(line: 102, column: 1, scope: !3535)
!3578 = !{i64 2155095707, i64 2155095727, i64 2155095790}
!3579 = !DILocation(line: 105, column: 1, scope: !3535)
!3580 = !{i64 2155095947, i64 2155095967, i64 2155096030}
!3581 = !DILocation(line: 115, column: 1, scope: !3535)
!3582 = !{i64 2155096286, i64 2155096306, i64 2155096369}
!3583 = !DILocation(line: 118, column: 1, scope: !3535)
!3584 = !{i64 2155096630, i64 2155096650, i64 2155096713}
!3585 = !DILocation(line: 32, column: 1, scope: !3586)
!3586 = !DILexicalBlockFile(scope: !3535, file: !3587, discriminator: 0)
!3587 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3588 = !{i64 2155096986, i64 2155097006, i64 2155097069}
!3589 = !DILocation(line: 33, column: 1, scope: !3586)
!3590 = !{i64 2155097498, i64 2155097518, i64 2155097581}
!3591 = !DILocation(line: 53, column: 1, scope: !3586)
!3592 = !{i64 2155098006, i64 2155098026, i64 2155098089}
!3593 = !DILocation(line: 54, column: 1, scope: !3586)
!3594 = !{i64 2155102485, i64 2155102505, i64 2155102568}
!3595 = !DILocation(line: 55, column: 1, scope: !3586)
!3596 = !{i64 2155102903, i64 2155102923, i64 2155102986}
!3597 = !DILocation(line: 56, column: 1, scope: !3586)
!3598 = !{i64 2155103321, i64 2155103341, i64 2155103404}
!3599 = !DILocation(line: 57, column: 1, scope: !3586)
!3600 = !{i64 2155103739, i64 2155103759, i64 2155103822}
!3601 = !DILocation(line: 58, column: 1, scope: !3586)
!3602 = !{i64 2155104157, i64 2155104177, i64 2155104240}
!3603 = !DILocation(line: 59, column: 1, scope: !3586)
!3604 = !{i64 2155104575, i64 2155104595, i64 2155104658}
!3605 = !DILocation(line: 60, column: 1, scope: !3586)
!3606 = !{i64 2155104999, i64 2155105019, i64 2155105082}
!3607 = !DILocation(line: 61, column: 1, scope: !3586)
!3608 = !{i64 2155105316, i64 2155105336, i64 2155105399}
!3609 = !DILocation(line: 70, column: 1, scope: !3586)
!3610 = !{i64 2155105545, i64 2155105565, i64 2155105628}
!3611 = !DILocation(line: 72, column: 1, scope: !3586)
!3612 = !{i64 2155105877, i64 2155105897, i64 2155105960}
!3613 = !DILocation(line: 73, column: 1, scope: !3586)
!3614 = !{i64 2155106327, i64 2155106347, i64 2155106410}
!3615 = !DILocation(line: 74, column: 1, scope: !3586)
!3616 = !{i64 2155106777, i64 2155106797, i64 2155106860}
!3617 = !DILocation(line: 75, column: 1, scope: !3586)
!3618 = !{i64 2155107227, i64 2155107247, i64 2155107310}
!3619 = !DILocation(line: 76, column: 1, scope: !3586)
!3620 = !{i64 2155107677, i64 2155107697, i64 2155107760}
!3621 = !DILocation(line: 77, column: 1, scope: !3586)
!3622 = !{i64 2155108127, i64 2155108147, i64 2155108210}
!3623 = !DILocation(line: 78, column: 1, scope: !3586)
!3624 = !{i64 2155108577, i64 2155108597, i64 2155108660}
!3625 = !DILocation(line: 79, column: 1, scope: !3586)
!3626 = !{i64 2155109027, i64 2155109047, i64 2155109110}
!3627 = !DILocation(line: 80, column: 1, scope: !3586)
!3628 = !{i64 2155109480, i64 2155109500, i64 2155109563}
!3629 = !DILocation(line: 84, column: 1, scope: !3586)
!3630 = !{i64 2155109812, i64 2155109832, i64 2155109895}
!3631 = !DILocation(line: 106, column: 1, scope: !3586)
!3632 = !{i64 2155110062, i64 2155110082, i64 2155110145}
!3633 = !DILocation(line: 11, column: 1, scope: !3634)
!3634 = !DILexicalBlockFile(scope: !3535, file: !3635, discriminator: 0)
!3635 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3636 = distinct !DISubprogram(name: "consumer_thread", scope: !117, file: !117, line: 15, type: !317, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3637)
!3637 = !{!3638, !3644, !3645, !3650, !3651, !3652}
!3638 = !DILocalVariable(name: "dyn_alloc_msg", scope: !3636, file: !117, line: 17, type: !3639)
!3639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3640, size: 32)
!3640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !503, line: 16, size: 64, elements: !3641)
!3641 = !{!3642, !3643}
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !3640, file: !503, line: 17, baseType: !102, size: 32)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3640, file: !503, line: 18, baseType: !156, size: 32, offset: 32)
!3644 = !DILocalVariable(name: "chan", scope: !3636, file: !117, line: 18, type: !173)
!3645 = !DILocalVariable(name: "_str", scope: !3646, file: !117, line: 29, type: !108)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !117, line: 29, column: 4)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !117, line: 25, column: 49)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !117, line: 25, column: 7)
!3649 = distinct !DILexicalBlock(scope: !3636, file: !117, line: 20, column: 58)
!3650 = !DILocalVariable(name: "is_user_context", scope: !3646, file: !117, line: 29, type: !122)
!3651 = !DILocalVariable(name: "filters", scope: !3646, file: !117, line: 29, type: !111)
!3652 = !DILocalVariable(name: "a", scope: !3649, file: !117, line: 38, type: !3653)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ack_msg", file: !503, line: 21, size: 8, elements: !3654)
!3654 = !{!3655}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3653, file: !503, line: 22, baseType: !166, size: 8)
!3656 = !DILocation(line: 18, column: 2, scope: !3636)
!3657 = !DILocation(line: 0, scope: !3636)
!3658 = !DILocation(line: 20, column: 10, scope: !3636)
!3659 = !DILocation(line: 20, column: 9, scope: !3636)
!3660 = !DILocation(line: 20, column: 2, scope: !3636)
!3661 = !DILocation(line: 23, column: 3, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !117, line: 23, column: 3)
!3663 = distinct !DILexicalBlock(scope: !3649, file: !117, line: 23, column: 3)
!3664 = !DILocation(line: 23, column: 3, scope: !3663)
!3665 = !DILocation(line: 23, column: 3, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3662, file: !117, line: 23, column: 3)
!3667 = !DILocation(line: 25, column: 35, scope: !3648)
!3668 = !DILocation(line: 25, column: 8, scope: !3648)
!3669 = !DILocation(line: 25, column: 7, scope: !3649)
!3670 = !DILocation(line: 26, column: 20, scope: !3647)
!3671 = !DILocation(line: 28, column: 4, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3673, file: !117, line: 28, column: 4)
!3673 = distinct !DILexicalBlock(scope: !3674, file: !117, line: 28, column: 4)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !117, line: 28, column: 4)
!3675 = distinct !DILexicalBlock(scope: !3647, file: !117, line: 28, column: 4)
!3676 = !DILocation(line: 0, scope: !3646)
!3677 = !DILocation(line: 29, column: 4, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !117, line: 29, column: 4)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !117, line: 29, column: 4)
!3680 = distinct !DILexicalBlock(scope: !3646, file: !117, line: 29, column: 4)
!3681 = !DILocation(line: 29, column: 4, scope: !3679)
!3682 = !DILocation(line: 32, column: 26, scope: !3647)
!3683 = !DILocation(line: 32, column: 4, scope: !3647)
!3684 = !DILocation(line: 33, column: 29, scope: !3647)
!3685 = !DILocation(line: 34, column: 24, scope: !3647)
!3686 = !DILocation(line: 36, column: 4, scope: !3647)
!3687 = !DILocation(line: 37, column: 3, scope: !3647)
!3688 = !DILocation(line: 38, column: 3, scope: !3649)
!3689 = !DILocation(line: 38, column: 18, scope: !3649)
!3690 = !DILocation(line: 40, column: 27, scope: !3649)
!3691 = !DILocation(line: 40, column: 3, scope: !3649)
!3692 = !DILocation(line: 41, column: 2, scope: !3636)
!3693 = distinct !{!3693, !3660, !3692}
!3694 = !DILocation(line: 42, column: 1, scope: !3636)
!3695 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3696, file: !3696, line: 403, type: !3697, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3699)
!3696 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3697 = !DISubroutineType(types: !3698)
!3698 = !{!112, !112}
!3699 = !{!3700}
!3700 = !DILocalVariable(name: "t", arg: 1, scope: !3695, file: !3696, line: 403, type: !112)
!3701 = !DILocation(line: 0, scope: !3695)
!3702 = !DILocalVariable(name: "t", arg: 1, scope: !3703, file: !3696, line: 102, type: !112)
!3703 = distinct !DISubprogram(name: "z_tmcvt", scope: !3696, file: !3696, line: 102, type: !3704, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3706)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!112, !112, !111, !111, !122, !122, !122, !122}
!3706 = !{!3702, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716}
!3707 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3703, file: !3696, line: 102, type: !111)
!3708 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3703, file: !3696, line: 103, type: !111)
!3709 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3703, file: !3696, line: 103, type: !122)
!3710 = !DILocalVariable(name: "result32", arg: 5, scope: !3703, file: !3696, line: 104, type: !122)
!3711 = !DILocalVariable(name: "round_up", arg: 6, scope: !3703, file: !3696, line: 104, type: !122)
!3712 = !DILocalVariable(name: "round_off", arg: 7, scope: !3703, file: !3696, line: 105, type: !122)
!3713 = !DILocalVariable(name: "mul_ratio", scope: !3703, file: !3696, line: 107, type: !122)
!3714 = !DILocalVariable(name: "div_ratio", scope: !3703, file: !3696, line: 109, type: !122)
!3715 = !DILocalVariable(name: "off", scope: !3703, file: !3696, line: 116, type: !112)
!3716 = !DILocalVariable(name: "rdivisor", scope: !3717, file: !3696, line: 119, type: !111)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !3696, line: 118, column: 18)
!3718 = distinct !DILexicalBlock(scope: !3703, file: !3696, line: 118, column: 6)
!3719 = !DILocation(line: 0, scope: !3703, inlinedAt: !3720)
!3720 = distinct !DILocation(line: 406, column: 9, scope: !3695)
!3721 = !DILocation(line: 145, column: 13, scope: !3722, inlinedAt: !3720)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !3696, line: 144, column: 10)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !3696, line: 142, column: 7)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !3696, line: 141, column: 24)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !3696, line: 141, column: 13)
!3726 = distinct !DILexicalBlock(scope: !3703, file: !3696, line: 134, column: 6)
!3727 = !DILocation(line: 406, column: 2, scope: !3695)
!3728 = distinct !DISubprogram(name: "zbus_chan_msg", scope: !119, file: !119, line: 395, type: !3729, scopeLine: 396, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3731)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{!102, !173}
!3731 = !{!3732}
!3732 = !DILocalVariable(name: "chan", arg: 1, scope: !3728, file: !119, line: 395, type: !173)
!3733 = !DILocation(line: 0, scope: !3728)
!3734 = !DILocation(line: 399, column: 15, scope: !3728)
!3735 = !DILocation(line: 399, column: 2, scope: !3728)
!3736 = distinct !DISubprogram(name: "filter_cb", scope: !344, file: !344, line: 51, type: !483, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !338, retainedNodes: !3737)
!3737 = !{!3738, !3739, !3742}
!3738 = !DILocalVariable(name: "chan", arg: 1, scope: !3736, file: !344, line: 51, type: !485)
!3739 = !DILocalVariable(name: "chan_message", scope: !3736, file: !344, line: 58, type: !3740)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 32)
!3741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !502)
!3742 = !DILocalVariable(name: "dr", scope: !3736, file: !344, line: 68, type: !524)
!3743 = !DILocation(line: 0, scope: !3736)
!3744 = !DILocation(line: 60, column: 2, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !344, line: 60, column: 2)
!3746 = distinct !DILexicalBlock(scope: !3736, file: !344, line: 60, column: 2)
!3747 = !DILocation(line: 60, column: 2, scope: !3746)
!3748 = !DILocation(line: 60, column: 2, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3745, file: !344, line: 60, column: 2)
!3750 = !DILocation(line: 62, column: 17, scope: !3736)
!3751 = !DILocation(line: 64, column: 20, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3736, file: !344, line: 64, column: 6)
!3753 = !DILocation(line: 64, column: 25, scope: !3752)
!3754 = !DILocation(line: 64, column: 6, scope: !3736)
!3755 = !DILocation(line: 65, column: 24, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3752, file: !344, line: 64, column: 30)
!3757 = !DILocation(line: 65, column: 3, scope: !3756)
!3758 = !DILocation(line: 66, column: 2, scope: !3756)
!3759 = !DILocation(line: 68, column: 2, scope: !3736)
!3760 = !DILocation(line: 68, column: 17, scope: !3736)
!3761 = !DILocation(line: 70, column: 2, scope: !3736)
!3762 = !DILocation(line: 71, column: 1, scope: !3736)
!3763 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !119, file: !119, line: 416, type: !3764, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !338, retainedNodes: !3766)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{!13, !485}
!3766 = !{!3767}
!3767 = !DILocalVariable(name: "chan", arg: 1, scope: !3763, file: !119, line: 416, type: !485)
!3768 = !DILocation(line: 0, scope: !3763)
!3769 = !DILocation(line: 418, column: 2, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !119, line: 418, column: 2)
!3771 = distinct !DILexicalBlock(scope: !3763, file: !119, line: 418, column: 2)
!3772 = !DILocation(line: 418, column: 2, scope: !3771)
!3773 = !DILocation(line: 418, column: 2, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3770, file: !119, line: 418, column: 2)
!3775 = !DILocation(line: 420, column: 15, scope: !3763)
!3776 = !DILocation(line: 420, column: 2, scope: !3763)
!3777 = distinct !DISubprogram(name: "main", scope: !344, file: !344, line: 75, type: !317, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !338, retainedNodes: !3778)
!3778 = !{!3779}
!3779 = !DILocalVariable(name: "v", scope: !3777, file: !344, line: 77, type: !3780)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 32)
!3781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!3782 = !DILocation(line: 77, column: 32, scope: !3777)
!3783 = !DILocation(line: 0, scope: !3777)
!3784 = !DILocation(line: 80, column: 1, scope: !3777)
!3785 = distinct !DISubprogram(name: "producer_thread", scope: !542, file: !542, line: 15, type: !317, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !535, retainedNodes: !3786)
!3786 = !{!3787, !3788, !3789, !3791, !3798}
!3787 = !DILocalVariable(name: "chan", scope: !3785, file: !542, line: 17, type: !587)
!3788 = !DILocalVariable(name: "msg", scope: !3785, file: !542, line: 18, type: !102)
!3789 = !DILocalVariable(name: "i", scope: !3790, file: !542, line: 20, type: !166)
!3790 = distinct !DILexicalBlock(scope: !3785, file: !542, line: 20, column: 2)
!3791 = !DILocalVariable(name: "dyn_alloc_msg", scope: !3792, file: !542, line: 25, type: !3794)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !542, line: 20, column: 37)
!3793 = distinct !DILexicalBlock(scope: !3790, file: !542, line: 20, column: 2)
!3794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !503, line: 16, size: 64, elements: !3795)
!3795 = !{!3796, !3797}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !3794, file: !503, line: 17, baseType: !102, size: 32)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3794, file: !503, line: 18, baseType: !156, size: 32, offset: 32)
!3798 = !DILocalVariable(name: "j", scope: !3799, file: !542, line: 27, type: !103)
!3799 = distinct !DILexicalBlock(scope: !3792, file: !542, line: 27, column: 3)
!3800 = !DILocation(line: 17, column: 2, scope: !3785)
!3801 = !DILocation(line: 0, scope: !3790)
!3802 = !DILocation(line: 20, column: 2, scope: !3790)
!3803 = !DILocation(line: 38, column: 1, scope: !3785)
!3804 = !DILocation(line: 21, column: 20, scope: !3792)
!3805 = !DILocation(line: 21, column: 9, scope: !3792)
!3806 = !DILocation(line: 0, scope: !3785)
!3807 = !DILocation(line: 23, column: 3, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !542, line: 23, column: 3)
!3809 = distinct !DILexicalBlock(scope: !3792, file: !542, line: 23, column: 3)
!3810 = !DILocation(line: 23, column: 3, scope: !3809)
!3811 = !DILocation(line: 23, column: 3, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3808, file: !542, line: 23, column: 3)
!3813 = !DILocation(line: 25, column: 3, scope: !3792)
!3814 = !DILocation(line: 25, column: 28, scope: !3792)
!3815 = !DILocation(line: 25, column: 44, scope: !3792)
!3816 = !DILocation(line: 0, scope: !3799)
!3817 = !DILocation(line: 28, column: 44, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !542, line: 27, column: 48)
!3819 = distinct !DILexicalBlock(scope: !3799, file: !542, line: 27, column: 3)
!3820 = !DILocation(line: 27, column: 37, scope: !3819)
!3821 = !DILocation(line: 27, column: 21, scope: !3819)
!3822 = !DILocation(line: 27, column: 3, scope: !3799)
!3823 = distinct !{!3823, !3822, !3824}
!3824 = !DILocation(line: 29, column: 3, scope: !3799)
!3825 = !DILocation(line: 31, column: 3, scope: !3792)
!3826 = !DILocation(line: 34, column: 7, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3792, file: !542, line: 34, column: 7)
!3828 = !DILocation(line: 34, column: 7, scope: !3792)
!3829 = !DILocation(line: 28, column: 30, scope: !3818)
!3830 = !DILocation(line: 28, column: 4, scope: !3818)
!3831 = !DILocation(line: 27, column: 43, scope: !3819)
!3832 = !DILocation(line: 35, column: 4, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !542, line: 35, column: 4)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !542, line: 35, column: 4)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !542, line: 35, column: 4)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !542, line: 35, column: 4)
!3837 = distinct !DILexicalBlock(scope: !3827, file: !542, line: 34, column: 55)
!3838 = !DILocation(line: 36, column: 3, scope: !3837)
!3839 = !DILocation(line: 37, column: 2, scope: !3793)
!3840 = !DILocation(line: 20, column: 25, scope: !3793)
!3841 = distinct !{!3841, !3802, !3842}
!3842 = !DILocation(line: 37, column: 2, scope: !3790)
!3843 = distinct !DISubprogram(name: "cbvprintf_package", scope: !732, file: !732, line: 233, type: !3844, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !3853)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{!103, !102, !156, !111, !108, !3846}
!3846 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3847, line: 99, baseType: !3848)
!3847 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3848 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3847, line: 40, baseType: !3849)
!3849 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !732, baseType: !3850)
!3850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3851)
!3851 = !{!3852}
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3850, file: !732, line: 18, baseType: !102, size: 32)
!3853 = !{!3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3889, !3898, !3901, !3902, !3905, !3908, !3911, !3914, !3920}
!3854 = !DILocalVariable(name: "packaged", arg: 1, scope: !3843, file: !732, line: 233, type: !102)
!3855 = !DILocalVariable(name: "len", arg: 2, scope: !3843, file: !732, line: 233, type: !156)
!3856 = !DILocalVariable(name: "flags", arg: 3, scope: !3843, file: !732, line: 233, type: !111)
!3857 = !DILocalVariable(name: "fmt", arg: 4, scope: !3843, file: !732, line: 234, type: !108)
!3858 = !DILocalVariable(name: "ap", arg: 5, scope: !3843, file: !732, line: 234, type: !3846)
!3859 = !DILocalVariable(name: "buf0", scope: !3843, file: !732, line: 247, type: !538)
!3860 = !DILocalVariable(name: "buf", scope: !3843, file: !732, line: 248, type: !538)
!3861 = !DILocalVariable(name: "size", scope: !3843, file: !732, line: 249, type: !32)
!3862 = !DILocalVariable(name: "align", scope: !3843, file: !732, line: 250, type: !32)
!3863 = !DILocalVariable(name: "str_ptr_pos", scope: !3843, file: !732, line: 251, type: !3864)
!3864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 128, elements: !327)
!3865 = !DILocalVariable(name: "str_ptr_arg", scope: !3843, file: !732, line: 252, type: !3864)
!3866 = !DILocalVariable(name: "s_idx", scope: !3843, file: !732, line: 253, type: !32)
!3867 = !DILocalVariable(name: "s_rw_cnt", scope: !3843, file: !732, line: 254, type: !32)
!3868 = !DILocalVariable(name: "s_ro_cnt", scope: !3843, file: !732, line: 255, type: !32)
!3869 = !DILocalVariable(name: "arg_idx", scope: !3843, file: !732, line: 256, type: !103)
!3870 = !DILocalVariable(name: "i", scope: !3843, file: !732, line: 257, type: !32)
!3871 = !DILocalVariable(name: "s", scope: !3843, file: !732, line: 258, type: !108)
!3872 = !DILocalVariable(name: "parsing", scope: !3843, file: !732, line: 259, type: !122)
!3873 = !DILocalVariable(name: "rws_pos_en", scope: !3843, file: !732, line: 263, type: !122)
!3874 = !DILocalVariable(name: "fros_cnt", scope: !3843, file: !732, line: 268, type: !103)
!3875 = !DILocalVariable(name: "is_str_arg", scope: !3843, file: !732, line: 269, type: !122)
!3876 = !DILocalVariable(name: "pkg_hdr", scope: !3843, file: !732, line: 270, type: !3877)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 32)
!3878 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3879, line: 78, size: 32, elements: !3880)
!3879 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3880 = !{!3881, !3888}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3878, file: !3879, line: 80, baseType: !3882, size: 32)
!3882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3879, line: 45, size: 32, elements: !3883)
!3883 = !{!3884, !3885, !3886, !3887}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3882, file: !3879, line: 47, baseType: !166, size: 8)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3882, file: !3879, line: 50, baseType: !166, size: 8, offset: 8)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3882, file: !3879, line: 53, baseType: !166, size: 8, offset: 16)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3882, file: !3879, line: 56, baseType: !166, size: 8, offset: 24)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3878, file: !3879, line: 82, baseType: !102, size: 32)
!3889 = !DILocalVariable(name: "v", scope: !3890, file: !732, line: 567, type: !3894)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !732, line: 562, column: 14)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !732, line: 481, column: 18)
!3892 = distinct !DILexicalBlock(scope: !3893, file: !732, line: 466, column: 3)
!3893 = distinct !DILexicalBlock(scope: !3843, file: !732, line: 343, column: 15)
!3894 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3843, file: !732, line: 567, size: 64, elements: !3895)
!3895 = !{!3896, !3897}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3894, file: !732, line: 567, baseType: !724, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3894, file: !732, line: 567, baseType: !722, size: 64)
!3898 = !DILocalVariable(name: "is_ro", scope: !3899, file: !732, line: 620, type: !122)
!3899 = distinct !DILexicalBlock(scope: !3900, file: !732, line: 613, column: 19)
!3900 = distinct !DILexicalBlock(scope: !3893, file: !732, line: 613, column: 7)
!3901 = !DILocalVariable(name: "do_ro", scope: !3899, file: !732, line: 621, type: !122)
!3902 = !DILocalVariable(name: "s_ptr_idx", scope: !3903, file: !732, line: 626, type: !111)
!3903 = distinct !DILexicalBlock(scope: !3904, file: !732, line: 625, column: 11)
!3904 = distinct !DILexicalBlock(scope: !3899, file: !732, line: 623, column: 8)
!3905 = !DILocalVariable(name: "v", scope: !3906, file: !732, line: 684, type: !103)
!3906 = distinct !DILexicalBlock(scope: !3907, file: !732, line: 683, column: 35)
!3907 = distinct !DILexicalBlock(scope: !3900, file: !732, line: 683, column: 14)
!3908 = !DILocalVariable(name: "v", scope: !3909, file: !732, line: 691, type: !728)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !732, line: 690, column: 36)
!3910 = distinct !DILexicalBlock(scope: !3907, file: !732, line: 690, column: 14)
!3911 = !DILocalVariable(name: "v", scope: !3912, file: !732, line: 698, type: !107)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !732, line: 697, column: 41)
!3913 = distinct !DILexicalBlock(scope: !3910, file: !732, line: 697, column: 14)
!3914 = !DILocalVariable(name: "pos", scope: !3915, file: !732, line: 762, type: !166)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !732, line: 757, column: 31)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !732, line: 757, column: 3)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !732, line: 757, column: 3)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !732, line: 756, column: 16)
!3919 = distinct !DILexicalBlock(scope: !3843, file: !732, line: 756, column: 6)
!3920 = !DILabel(scope: !3899, name: "process_string", file: !732, line: 615)
!3921 = !DILocation(line: 0, scope: !3843)
!3922 = !DILocation(line: 251, column: 2, scope: !3843)
!3923 = !DILocation(line: 251, column: 10, scope: !3843)
!3924 = !DILocation(line: 252, column: 2, scope: !3843)
!3925 = !DILocation(line: 252, column: 10, scope: !3843)
!3926 = !DILocation(line: 263, column: 29, scope: !3843)
!3927 = !DILocation(line: 263, column: 21, scope: !3843)
!3928 = !DILocation(line: 268, column: 21, scope: !3843)
!3929 = !DILocation(line: 268, column: 19, scope: !3843)
!3930 = !DILocation(line: 273, column: 6, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3843, file: !732, line: 273, column: 6)
!3932 = !DILocation(line: 273, column: 26, scope: !3931)
!3933 = !DILocation(line: 273, column: 6, scope: !3843)
!3934 = !DILocation(line: 297, column: 6, scope: !3843)
!3935 = !DILocation(line: 305, column: 11, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3843, file: !732, line: 305, column: 6)
!3937 = !DILocation(line: 305, column: 6, scope: !3843)
!3938 = !DILocation(line: 327, column: 19, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3843, file: !732, line: 327, column: 6)
!3940 = !DILocation(line: 327, column: 22, scope: !3939)
!3941 = !DILocation(line: 327, column: 33, scope: !3939)
!3942 = !DILocation(line: 327, column: 50, scope: !3939)
!3943 = !DILocation(line: 327, column: 6, scope: !3843)
!3944 = !DILocation(line: 338, column: 9, scope: !3843)
!3945 = !DILocation(line: 341, column: 2, scope: !3843)
!3946 = !DILocation(line: 472, column: 8, scope: !3892)
!3947 = !DILocation(line: 473, column: 14, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !732, line: 473, column: 9)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !732, line: 472, column: 18)
!3950 = distinct !DILexicalBlock(scope: !3892, file: !732, line: 472, column: 8)
!3951 = !DILocation(line: 473, column: 9, scope: !3949)
!3952 = !DILocation(line: 479, column: 5, scope: !3949)
!3953 = !DILocation(line: 468, column: 9, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3892, file: !732, line: 468, column: 8)
!3955 = !DILocation(line: 468, column: 8, scope: !3954)
!3956 = !DILocation(line: 468, column: 15, scope: !3954)
!3957 = !DILocation(line: 468, column: 8, scope: !3892)
!3958 = distinct !{!3958, !3959, !3960}
!3959 = !DILocation(line: 343, column: 2, scope: !3843)
!3960 = !DILocation(line: 712, column: 2, scope: !3843)
!3961 = !DILocation(line: 481, column: 4, scope: !3892)
!3962 = !DILocation(line: 484, column: 12, scope: !3891)
!3963 = !DILocation(line: 485, column: 5, scope: !3891)
!3964 = !DILocation(line: 505, column: 5, scope: !3891)
!3965 = !DILocation(line: 518, column: 5, scope: !3891)
!3966 = !DILocation(line: 523, column: 5, scope: !3891)
!3967 = !DILocation(line: 532, column: 9, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3891, file: !732, line: 532, column: 9)
!3969 = !DILocation(line: 532, column: 17, scope: !3968)
!3970 = !DILocation(line: 532, column: 9, scope: !3891)
!3971 = !DILocation(line: 533, column: 10, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !732, line: 533, column: 10)
!3973 = distinct !DILexicalBlock(scope: !3968, file: !732, line: 532, column: 25)
!3974 = !DILocation(line: 533, column: 18, scope: !3972)
!3975 = !DILocation(line: 0, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3890, file: !732, line: 569, column: 9)
!3977 = !DILocation(line: 0, scope: !3890)
!3978 = !DILocation(line: 579, column: 20, scope: !3890)
!3979 = !DILocation(line: 579, column: 11, scope: !3890)
!3980 = !DILocation(line: 580, column: 9, scope: !3890)
!3981 = !DILocation(line: 582, column: 21, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !732, line: 582, column: 10)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !732, line: 580, column: 23)
!3984 = distinct !DILexicalBlock(scope: !3890, file: !732, line: 580, column: 9)
!3985 = !DILocation(line: 582, column: 28, scope: !3982)
!3986 = !DILocation(line: 582, column: 10, scope: !3983)
!3987 = !DILocation(line: 0, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !732, line: 587, column: 17)
!3989 = distinct !DILexicalBlock(scope: !3983, file: !732, line: 585, column: 10)
!3990 = !DILocation(line: 593, column: 9, scope: !3890)
!3991 = !DILocation(line: 600, column: 5, scope: !3891)
!3992 = !DILocation(line: 605, column: 18, scope: !3893)
!3993 = !DILocation(line: 605, column: 9, scope: !3893)
!3994 = !DILocation(line: 608, column: 20, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3893, file: !732, line: 608, column: 7)
!3996 = !DILocation(line: 608, column: 23, scope: !3995)
!3997 = !DILocation(line: 608, column: 34, scope: !3995)
!3998 = !DILocation(line: 608, column: 41, scope: !3995)
!3999 = !DILocation(line: 608, column: 7, scope: !3893)
!4000 = !DILocation(line: 613, column: 7, scope: !3893)
!4001 = !DILocation(line: 614, column: 8, scope: !3899)
!4002 = !DILocation(line: 614, column: 4, scope: !3899)
!4003 = !DILocation(line: 256, column: 6, scope: !3843)
!4004 = !DILocation(line: 254, column: 15, scope: !3843)
!4005 = !DILocation(line: 320, column: 7, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3936, file: !732, line: 305, column: 20)
!4007 = !DILocation(line: 615, column: 1, scope: !3899)
!4008 = !DILocation(line: 616, column: 8, scope: !3899)
!4009 = !DILocation(line: 617, column: 5, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4011, file: !732, line: 616, column: 22)
!4011 = distinct !DILexicalBlock(scope: !3899, file: !732, line: 616, column: 8)
!4012 = !DILocation(line: 617, column: 25, scope: !4010)
!4013 = !DILocation(line: 618, column: 4, scope: !4010)
!4014 = !DILocation(line: 620, column: 26, scope: !3899)
!4015 = !DILocation(line: 620, column: 29, scope: !3899)
!4016 = !DILocation(line: 620, column: 17, scope: !3899)
!4017 = !DILocation(line: 620, column: 43, scope: !3899)
!4018 = !DILocation(line: 0, scope: !3899)
!4019 = !DILocation(line: 623, column: 14, scope: !3904)
!4020 = !DILocation(line: 626, column: 26, scope: !3903)
!4021 = !DILocation(line: 626, column: 37, scope: !3903)
!4022 = !DILocation(line: 0, scope: !3903)
!4023 = !DILocation(line: 634, column: 15, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3903, file: !732, line: 634, column: 9)
!4025 = !DILocation(line: 635, column: 6, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !732, line: 635, column: 6)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !732, line: 635, column: 6)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !732, line: 635, column: 6)
!4029 = distinct !DILexicalBlock(scope: !4024, file: !732, line: 634, column: 44)
!4030 = !DILocation(line: 639, column: 15, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !3903, file: !732, line: 639, column: 9)
!4032 = !DILocation(line: 639, column: 9, scope: !3903)
!4033 = !DILocation(line: 640, column: 6, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !732, line: 640, column: 6)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !732, line: 640, column: 6)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !732, line: 640, column: 6)
!4037 = distinct !DILexicalBlock(scope: !4031, file: !732, line: 639, column: 43)
!4038 = !DILocation(line: 644, column: 9, scope: !3903)
!4039 = !DILocation(line: 649, column: 27, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !732, line: 644, column: 23)
!4041 = distinct !DILexicalBlock(scope: !3903, file: !732, line: 644, column: 9)
!4042 = !DILocation(line: 649, column: 6, scope: !4040)
!4043 = !DILocation(line: 649, column: 25, scope: !4040)
!4044 = !DILocation(line: 650, column: 27, scope: !4040)
!4045 = !DILocation(line: 650, column: 6, scope: !4040)
!4046 = !DILocation(line: 650, column: 25, scope: !4040)
!4047 = !DILocation(line: 651, column: 10, scope: !4040)
!4048 = !DILocation(line: 653, column: 26, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !732, line: 651, column: 17)
!4050 = distinct !DILexicalBlock(scope: !4040, file: !732, line: 651, column: 10)
!4051 = !DILocation(line: 654, column: 15, scope: !4049)
!4052 = !DILocation(line: 655, column: 6, scope: !4049)
!4053 = !DILocation(line: 656, column: 15, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4050, file: !732, line: 655, column: 13)
!4055 = !DILocation(line: 658, column: 16, scope: !4041)
!4056 = !DILocation(line: 663, column: 10, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !732, line: 658, column: 23)
!4058 = distinct !DILexicalBlock(scope: !4041, file: !732, line: 658, column: 16)
!4059 = !DILocation(line: 664, column: 5, scope: !4057)
!4060 = !DILocation(line: 664, column: 16, scope: !4058)
!4061 = !DILocation(line: 669, column: 10, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !732, line: 664, column: 28)
!4063 = distinct !DILexicalBlock(scope: !4058, file: !732, line: 664, column: 16)
!4064 = !DILocation(line: 670, column: 5, scope: !4062)
!4065 = !DILocation(line: 675, column: 13, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4063, file: !732, line: 670, column: 12)
!4067 = !DILocation(line: 675, column: 27, scope: !4066)
!4068 = !DILocation(line: 675, column: 10, scope: !4066)
!4069 = !DILocation(line: 678, column: 10, scope: !3903)
!4070 = !DILocation(line: 680, column: 8, scope: !3899)
!4071 = !DILocation(line: 683, column: 14, scope: !3900)
!4072 = !DILocation(line: 684, column: 12, scope: !3906)
!4073 = !DILocation(line: 0, scope: !3906)
!4074 = !DILocation(line: 686, column: 8, scope: !3906)
!4075 = !DILocation(line: 687, column: 5, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4077, file: !732, line: 686, column: 22)
!4077 = distinct !DILexicalBlock(scope: !3906, file: !732, line: 686, column: 8)
!4078 = !DILocation(line: 687, column: 17, scope: !4076)
!4079 = !DILocation(line: 688, column: 4, scope: !4076)
!4080 = !DILocation(line: 698, column: 18, scope: !3912)
!4081 = !DILocation(line: 0, scope: !3912)
!4082 = !DILocation(line: 700, column: 8, scope: !3912)
!4083 = !DILocation(line: 704, column: 6, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !732, line: 703, column: 12)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !732, line: 701, column: 9)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !732, line: 700, column: 22)
!4087 = distinct !DILexicalBlock(scope: !3912, file: !732, line: 700, column: 8)
!4088 = !DILocation(line: 704, column: 24, scope: !4084)
!4089 = !DILocation(line: 706, column: 4, scope: !4086)
!4090 = !DILocation(line: 709, column: 4, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4092, file: !732, line: 709, column: 4)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !732, line: 709, column: 4)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !732, line: 709, column: 4)
!4094 = distinct !DILexicalBlock(scope: !3913, file: !732, line: 708, column: 10)
!4095 = !DILocation(line: 0, scope: !3907)
!4096 = !DILocation(line: 0, scope: !3893)
!4097 = !DILocation(line: 720, column: 6, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !3843, file: !732, line: 720, column: 6)
!4099 = !DILocation(line: 720, column: 17, scope: !4098)
!4100 = !DILocation(line: 720, column: 31, scope: !4098)
!4101 = !DILocation(line: 720, column: 6, scope: !3843)
!4102 = !DILocation(line: 721, column: 3, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !732, line: 721, column: 3)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !732, line: 721, column: 3)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !732, line: 721, column: 3)
!4106 = distinct !DILexicalBlock(scope: !4098, file: !732, line: 720, column: 38)
!4107 = !DILocation(line: 729, column: 6, scope: !3843)
!4108 = !DILocation(line: 730, column: 21, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !732, line: 729, column: 20)
!4110 = distinct !DILexicalBlock(scope: !3843, file: !732, line: 729, column: 6)
!4111 = !DILocation(line: 730, column: 27, scope: !4109)
!4112 = !DILocation(line: 730, column: 3, scope: !4109)
!4113 = !DILocation(line: 737, column: 22, scope: !3843)
!4114 = !DILocation(line: 737, column: 20, scope: !3843)
!4115 = !DILocation(line: 0, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !3843, file: !732, line: 739, column: 6)
!4117 = !DILocation(line: 745, column: 17, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4116, file: !732, line: 743, column: 9)
!4119 = !DILocation(line: 745, column: 25, scope: !4118)
!4120 = !DILocation(line: 746, column: 17, scope: !4118)
!4121 = !DILocation(line: 746, column: 28, scope: !4118)
!4122 = !DILocation(line: 749, column: 29, scope: !3843)
!4123 = !DILocation(line: 749, column: 16, scope: !3843)
!4124 = !DILocation(line: 749, column: 27, scope: !3843)
!4125 = !DILocation(line: 756, column: 6, scope: !3919)
!4126 = !DILocation(line: 756, column: 6, scope: !3843)
!4127 = !DILocation(line: 757, column: 3, scope: !3917)
!4128 = !DILocation(line: 758, column: 10, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !3915, file: !732, line: 758, column: 8)
!4130 = !DILocation(line: 758, column: 25, scope: !4129)
!4131 = !DILocation(line: 758, column: 8, scope: !3915)
!4132 = !DILocation(line: 0, scope: !3915)
!4133 = !DILocation(line: 765, column: 8, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !3915, file: !732, line: 765, column: 8)
!4135 = !DILocation(line: 765, column: 19, scope: !4134)
!4136 = !DILocation(line: 765, column: 23, scope: !4134)
!4137 = !DILocation(line: 765, column: 8, scope: !3915)
!4138 = !DILocation(line: 762, column: 33, scope: !3915)
!4139 = !DILocation(line: 769, column: 8, scope: !3915)
!4140 = !DILocation(line: 769, column: 11, scope: !3915)
!4141 = !DILocation(line: 757, column: 27, scope: !3916)
!4142 = !DILocation(line: 757, column: 17, scope: !3916)
!4143 = distinct !{!4143, !4127, !4144}
!4144 = !DILocation(line: 770, column: 3, scope: !3917)
!4145 = !DILocation(line: 774, column: 16, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !732, line: 774, column: 2)
!4147 = distinct !DILexicalBlock(scope: !3843, file: !732, line: 774, column: 2)
!4148 = !DILocation(line: 774, column: 2, scope: !4147)
!4149 = !DILocation(line: 776, column: 16, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4151, file: !732, line: 776, column: 7)
!4151 = distinct !DILexicalBlock(scope: !4146, file: !732, line: 774, column: 30)
!4152 = !DILocation(line: 776, column: 19, scope: !4150)
!4153 = !DILocation(line: 776, column: 34, scope: !4150)
!4154 = !DILocation(line: 776, column: 7, scope: !4151)
!4155 = !DILocation(line: 780, column: 7, scope: !4151)
!4156 = !DILocation(line: 782, column: 13, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !732, line: 780, column: 19)
!4158 = distinct !DILexicalBlock(scope: !4151, file: !732, line: 780, column: 7)
!4159 = !DILocation(line: 782, column: 8, scope: !4157)
!4160 = !DILocation(line: 782, column: 11, scope: !4157)
!4161 = !DILocation(line: 783, column: 3, scope: !4157)
!4162 = !DILocation(line: 785, column: 26, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4158, file: !732, line: 783, column: 10)
!4164 = !DILocation(line: 785, column: 41, scope: !4163)
!4165 = !DILocation(line: 785, column: 24, scope: !4163)
!4166 = !DILocation(line: 785, column: 8, scope: !4163)
!4167 = !DILocation(line: 787, column: 52, scope: !4163)
!4168 = !DILocation(line: 789, column: 11, scope: !4163)
!4169 = !DILocation(line: 789, column: 21, scope: !4163)
!4170 = !DILocation(line: 0, scope: !4158)
!4171 = !DILocation(line: 793, column: 7, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4151, file: !732, line: 793, column: 7)
!4173 = !DILocation(line: 793, column: 18, scope: !4172)
!4174 = !DILocation(line: 793, column: 22, scope: !4172)
!4175 = !DILocation(line: 793, column: 29, scope: !4172)
!4176 = !DILocation(line: 793, column: 7, scope: !4151)
!4177 = !DILocation(line: 797, column: 12, scope: !4151)
!4178 = !DILocation(line: 797, column: 7, scope: !4151)
!4179 = !DILocation(line: 797, column: 10, scope: !4151)
!4180 = !DILocation(line: 799, column: 3, scope: !4151)
!4181 = !DILocation(line: 800, column: 7, scope: !4151)
!4182 = !DILocation(line: 801, column: 2, scope: !4151)
!4183 = !DILocation(line: 338, column: 4, scope: !3843)
!4184 = !DILocation(line: 774, column: 26, scope: !4146)
!4185 = distinct !{!4185, !4148, !4186}
!4186 = !DILocation(line: 801, column: 2, scope: !4147)
!4187 = !DILocation(line: 808, column: 9, scope: !3843)
!4188 = !DILocation(line: 808, column: 2, scope: !3843)
!4189 = !DILocation(line: 813, column: 1, scope: !3843)
!4190 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !732, file: !732, line: 33, type: !4191, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !4193)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!122, !108}
!4193 = !{!4194}
!4194 = !DILocalVariable(name: "addr", arg: 1, scope: !4190, file: !732, line: 33, type: !108)
!4195 = !DILocation(line: 0, scope: !4190)
!4196 = !DILocation(line: 41, column: 9, scope: !4190)
!4197 = !DILocation(line: 41, column: 2, scope: !4190)
!4198 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4199, file: !4199, line: 24, type: !4200, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !4202)
!4199 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4200 = !DISubroutineType(types: !4201)
!4201 = !{!122, !13}
!4202 = !{!4203}
!4203 = !DILocalVariable(name: "addr", arg: 1, scope: !4198, file: !4199, line: 24, type: !13)
!4204 = !DILocation(line: 0, scope: !4198)
!4205 = !DILocation(line: 49, column: 30, scope: !4198)
!4206 = !DILocation(line: 49, column: 57, scope: !4198)
!4207 = !DILocation(line: 49, column: 2, scope: !4198)
!4208 = distinct !DISubprogram(name: "cbprintf_package", scope: !732, file: !732, line: 815, type: !4209, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !4211)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!103, !102, !156, !111, !108, null}
!4211 = !{!4212, !4213, !4214, !4215, !4216, !4217}
!4212 = !DILocalVariable(name: "packaged", arg: 1, scope: !4208, file: !732, line: 815, type: !102)
!4213 = !DILocalVariable(name: "len", arg: 2, scope: !4208, file: !732, line: 815, type: !156)
!4214 = !DILocalVariable(name: "flags", arg: 3, scope: !4208, file: !732, line: 815, type: !111)
!4215 = !DILocalVariable(name: "format", arg: 4, scope: !4208, file: !732, line: 816, type: !108)
!4216 = !DILocalVariable(name: "ap", scope: !4208, file: !732, line: 818, type: !3846)
!4217 = !DILocalVariable(name: "ret", scope: !4208, file: !732, line: 819, type: !103)
!4218 = !DILocation(line: 0, scope: !4208)
!4219 = !DILocation(line: 818, column: 2, scope: !4208)
!4220 = !DILocation(line: 818, column: 10, scope: !4208)
!4221 = !DILocation(line: 821, column: 2, scope: !4208)
!4222 = !DILocation(line: 822, column: 8, scope: !4208)
!4223 = !DILocation(line: 823, column: 2, scope: !4208)
!4224 = !DILocation(line: 825, column: 1, scope: !4208)
!4225 = !DILocation(line: 824, column: 2, scope: !4208)
!4226 = distinct !DISubprogram(name: "cbpprintf_external", scope: !732, file: !732, line: 827, type: !4227, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !4237)
!4227 = !DISubroutineType(types: !4228)
!4228 = !{!103, !4229, !4233, !102, !102}
!4229 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3879, line: 297, baseType: !4230)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4231, size: 32)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{!103, null}
!4233 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3879, line: 328, baseType: !4234)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 32)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{!103, !4229, !102, !108, !3846}
!4237 = !{!4238, !4239, !4240, !4241, !4242, !4243, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256}
!4238 = !DILocalVariable(name: "out", arg: 1, scope: !4226, file: !732, line: 827, type: !4229)
!4239 = !DILocalVariable(name: "formatter", arg: 2, scope: !4226, file: !732, line: 828, type: !4233)
!4240 = !DILocalVariable(name: "ctx", arg: 3, scope: !4226, file: !732, line: 829, type: !102)
!4241 = !DILocalVariable(name: "packaged", arg: 4, scope: !4226, file: !732, line: 829, type: !102)
!4242 = !DILocalVariable(name: "buf", scope: !4226, file: !732, line: 831, type: !538)
!4243 = !DILocalVariable(name: "hdr", scope: !4226, file: !732, line: 832, type: !4244)
!4244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 32)
!4245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3879, line: 96, size: 64, elements: !4246)
!4246 = !{!4247, !4248}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4245, file: !3879, line: 98, baseType: !3878, size: 32)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4245, file: !3879, line: 101, baseType: !160, size: 32, offset: 32)
!4249 = !DILocalVariable(name: "s", scope: !4226, file: !732, line: 833, type: !160)
!4250 = !DILocalVariable(name: "ps", scope: !4226, file: !732, line: 833, type: !730)
!4251 = !DILocalVariable(name: "i", scope: !4226, file: !732, line: 834, type: !32)
!4252 = !DILocalVariable(name: "args_size", scope: !4226, file: !732, line: 834, type: !32)
!4253 = !DILocalVariable(name: "s_nbr", scope: !4226, file: !732, line: 834, type: !32)
!4254 = !DILocalVariable(name: "ros_nbr", scope: !4226, file: !732, line: 834, type: !32)
!4255 = !DILocalVariable(name: "rws_nbr", scope: !4226, file: !732, line: 834, type: !32)
!4256 = !DILocalVariable(name: "s_idx", scope: !4226, file: !732, line: 834, type: !32)
!4257 = !DILocation(line: 0, scope: !4226)
!4258 = !DILocation(line: 836, column: 10, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4226, file: !732, line: 836, column: 6)
!4260 = !DILocation(line: 836, column: 6, scope: !4226)
!4261 = !DILocation(line: 842, column: 28, scope: !4226)
!4262 = !DILocation(line: 842, column: 14, scope: !4226)
!4263 = !DILocation(line: 852, column: 16, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !732, line: 852, column: 2)
!4265 = distinct !DILexicalBlock(scope: !4226, file: !732, line: 852, column: 2)
!4266 = !DILocation(line: 852, column: 2, scope: !4265)
!4267 = !DILocation(line: 841, column: 28, scope: !4226)
!4268 = !DILocation(line: 841, column: 14, scope: !4226)
!4269 = !DILocation(line: 841, column: 32, scope: !4226)
!4270 = !DILocation(line: 847, column: 19, scope: !4226)
!4271 = !DILocation(line: 843, column: 28, scope: !4226)
!4272 = !DILocation(line: 843, column: 14, scope: !4226)
!4273 = !DILocation(line: 847, column: 31, scope: !4226)
!4274 = !DILocation(line: 844, column: 28, scope: !4226)
!4275 = !DILocation(line: 844, column: 14, scope: !4226)
!4276 = !DILocation(line: 847, column: 45, scope: !4226)
!4277 = !DILocation(line: 847, column: 41, scope: !4226)
!4278 = !DILocation(line: 854, column: 24, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4264, file: !732, line: 852, column: 30)
!4280 = !DILocation(line: 854, column: 11, scope: !4279)
!4281 = !DILocation(line: 855, column: 30, scope: !4279)
!4282 = !DILocation(line: 855, column: 22, scope: !4279)
!4283 = !DILocation(line: 855, column: 8, scope: !4279)
!4284 = !DILocation(line: 857, column: 7, scope: !4279)
!4285 = !DILocation(line: 859, column: 8, scope: !4279)
!4286 = !DILocation(line: 859, column: 18, scope: !4279)
!4287 = !DILocation(line: 859, column: 5, scope: !4279)
!4288 = !DILocation(line: 852, column: 26, scope: !4264)
!4289 = distinct !{!4289, !4266, !4290}
!4290 = !DILocation(line: 860, column: 2, scope: !4265)
!4291 = !DILocation(line: 863, column: 6, scope: !4226)
!4292 = !DILocation(line: 866, column: 56, scope: !4226)
!4293 = !DILocation(line: 866, column: 9, scope: !4226)
!4294 = !DILocation(line: 866, column: 2, scope: !4226)
!4295 = !DILocation(line: 867, column: 1, scope: !4226)
!4296 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !732, file: !732, line: 179, type: !4297, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !4299)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{!103, !4229, !4233, !102, !108, !102}
!4299 = !{!4300, !4301, !4302, !4303, !4304, !4305}
!4300 = !DILocalVariable(name: "out", arg: 1, scope: !4296, file: !732, line: 179, type: !4229)
!4301 = !DILocalVariable(name: "formatter", arg: 2, scope: !4296, file: !732, line: 180, type: !4233)
!4302 = !DILocalVariable(name: "ctx", arg: 3, scope: !4296, file: !732, line: 181, type: !102)
!4303 = !DILocalVariable(name: "fmt", arg: 4, scope: !4296, file: !732, line: 182, type: !108)
!4304 = !DILocalVariable(name: "buf", arg: 5, scope: !4296, file: !732, line: 182, type: !102)
!4305 = !DILocalVariable(name: "u", scope: !4296, file: !732, line: 187, type: !4306)
!4306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4296, file: !732, line: 184, size: 32, elements: !4307)
!4307 = !{!4308, !4309}
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4306, file: !732, line: 185, baseType: !3846, size: 32)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4306, file: !732, line: 186, baseType: !102, size: 32)
!4310 = !DILocation(line: 0, scope: !4296)
!4311 = !DILocation(line: 191, column: 9, scope: !4296)
!4312 = !DILocation(line: 191, column: 2, scope: !4296)
!4313 = distinct !DISubprogram(name: "is_ptr", scope: !732, file: !732, line: 881, type: !4314, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !4316)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{!122, !108, !103}
!4316 = !{!4317, !4318, !4319, !4320, !4321}
!4317 = !DILocalVariable(name: "fmt", arg: 1, scope: !4313, file: !732, line: 881, type: !108)
!4318 = !DILocalVariable(name: "n", arg: 2, scope: !4313, file: !732, line: 881, type: !103)
!4319 = !DILocalVariable(name: "c", scope: !4313, file: !732, line: 883, type: !110)
!4320 = !DILocalVariable(name: "mod", scope: !4313, file: !732, line: 884, type: !122)
!4321 = !DILocalVariable(name: "cnt", scope: !4313, file: !732, line: 885, type: !103)
!4322 = !DILocation(line: 0, scope: !4313)
!4323 = !DILocation(line: 887, column: 14, scope: !4313)
!4324 = !DILocation(line: 887, column: 22, scope: !4313)
!4325 = !DILocation(line: 887, column: 2, scope: !4313)
!4326 = !DILocation(line: 887, column: 18, scope: !4313)
!4327 = !DILocation(line: 888, column: 7, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4313, file: !732, line: 887, column: 31)
!4329 = !DILocation(line: 889, column: 12, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !732, line: 889, column: 8)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !732, line: 888, column: 12)
!4332 = distinct !DILexicalBlock(scope: !4328, file: !732, line: 888, column: 7)
!4333 = !DILocation(line: 889, column: 8, scope: !4331)
!4334 = !DILocation(line: 890, column: 11, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4336, file: !732, line: 890, column: 9)
!4336 = distinct !DILexicalBlock(scope: !4330, file: !732, line: 889, column: 18)
!4337 = !DILocation(line: 890, column: 9, scope: !4336)
!4338 = !DILocation(line: 892, column: 16, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4335, file: !732, line: 892, column: 16)
!4340 = !DILocation(line: 892, column: 16, scope: !4335)
!4341 = !DILocation(line: 895, column: 15, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4330, file: !732, line: 895, column: 15)
!4343 = !DILocation(line: 895, column: 15, scope: !4330)
!4344 = !DILocation(line: 900, column: 9, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4328, file: !732, line: 900, column: 7)
!4346 = !DILocation(line: 900, column: 7, scope: !4328)
!4347 = distinct !{!4347, !4325, !4348}
!4348 = !DILocation(line: 903, column: 2, scope: !4313)
!4349 = !DILocation(line: 906, column: 1, scope: !4313)
!4350 = distinct !DISubprogram(name: "is_fmt_spec", scope: !732, file: !732, line: 873, type: !4351, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !4353)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{!122, !110}
!4353 = !{!4354}
!4354 = !DILocalVariable(name: "c", arg: 1, scope: !4350, file: !732, line: 873, type: !110)
!4355 = !DILocation(line: 0, scope: !4350)
!4356 = !DILocation(line: 875, column: 19, scope: !4350)
!4357 = !DILocation(line: 875, column: 2, scope: !4350)
!4358 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !732, file: !732, line: 908, type: !4359, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !4365)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!103, !102, !156, !4361, !102, !111, !2814, !156}
!4361 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3879, line: 308, baseType: !4362)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 32)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{!103, !13, !156, !102}
!4365 = !{!4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4383, !4384, !4385, !4386, !4387, !4393, !4396, !4397, !4398, !4400, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4416, !4419, !4420, !4421, !4422, !4423, !4424, !4426, !4429, !4430, !4431}
!4366 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4358, file: !732, line: 908, type: !102)
!4367 = !DILocalVariable(name: "in_len", arg: 2, scope: !4358, file: !732, line: 909, type: !156)
!4368 = !DILocalVariable(name: "cb", arg: 3, scope: !4358, file: !732, line: 910, type: !4361)
!4369 = !DILocalVariable(name: "ctx", arg: 4, scope: !4358, file: !732, line: 911, type: !102)
!4370 = !DILocalVariable(name: "flags", arg: 5, scope: !4358, file: !732, line: 912, type: !111)
!4371 = !DILocalVariable(name: "strl", arg: 6, scope: !4358, file: !732, line: 913, type: !2814)
!4372 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4358, file: !732, line: 914, type: !156)
!4373 = !DILocalVariable(name: "buf", scope: !4358, file: !732, line: 918, type: !538)
!4374 = !DILocalVariable(name: "buf32", scope: !4358, file: !732, line: 919, type: !1732)
!4375 = !DILocalVariable(name: "args_size", scope: !4358, file: !732, line: 920, type: !32)
!4376 = !DILocalVariable(name: "ros_nbr", scope: !4358, file: !732, line: 920, type: !32)
!4377 = !DILocalVariable(name: "rws_nbr", scope: !4358, file: !732, line: 920, type: !32)
!4378 = !DILocalVariable(name: "fmt_present", scope: !4358, file: !732, line: 921, type: !122)
!4379 = !DILocalVariable(name: "rw_cpy", scope: !4358, file: !732, line: 922, type: !122)
!4380 = !DILocalVariable(name: "ro_cpy", scope: !4358, file: !732, line: 923, type: !122)
!4381 = !DILocalVariable(name: "in_desc", scope: !4358, file: !732, line: 924, type: !4382)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 32)
!4383 = !DILocalVariable(name: "out_len", scope: !4358, file: !732, line: 960, type: !103)
!4384 = !DILocalVariable(name: "fmt", scope: !4358, file: !732, line: 965, type: !108)
!4385 = !DILocalVariable(name: "str_pos", scope: !4358, file: !732, line: 966, type: !538)
!4386 = !DILocalVariable(name: "strl_cnt", scope: !4358, file: !732, line: 967, type: !156)
!4387 = !DILocalVariable(name: "i", scope: !4388, file: !732, line: 973, type: !103)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !732, line: 973, column: 4)
!4389 = distinct !DILexicalBlock(scope: !4390, file: !732, line: 972, column: 15)
!4390 = distinct !DILexicalBlock(scope: !4391, file: !732, line: 972, column: 7)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !732, line: 970, column: 18)
!4392 = distinct !DILexicalBlock(scope: !4358, file: !732, line: 970, column: 6)
!4393 = !DILocalVariable(name: "str", scope: !4394, file: !732, line: 974, type: !108)
!4394 = distinct !DILexicalBlock(scope: !4395, file: !732, line: 973, column: 38)
!4395 = distinct !DILexicalBlock(scope: !4388, file: !732, line: 973, column: 4)
!4396 = !DILocalVariable(name: "len", scope: !4394, file: !732, line: 975, type: !103)
!4397 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4391, file: !732, line: 990, type: !122)
!4398 = !DILocalVariable(name: "i", scope: !4399, file: !732, line: 995, type: !103)
!4399 = distinct !DILexicalBlock(scope: !4391, file: !732, line: 995, column: 3)
!4400 = !DILocalVariable(name: "arg_idx", scope: !4401, file: !732, line: 996, type: !166)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !732, line: 995, column: 37)
!4402 = distinct !DILexicalBlock(scope: !4399, file: !732, line: 995, column: 3)
!4403 = !DILocalVariable(name: "arg_pos", scope: !4401, file: !732, line: 997, type: !166)
!4404 = !DILocalVariable(name: "str", scope: !4401, file: !732, line: 998, type: !108)
!4405 = !DILocalVariable(name: "is_ro", scope: !4401, file: !732, line: 999, type: !122)
!4406 = !DILocalVariable(name: "len", scope: !4401, file: !732, line: 1000, type: !103)
!4407 = !DILocalVariable(name: "out_desc", scope: !4358, file: !732, line: 1038, type: !3882)
!4408 = !DILocalVariable(name: "cpy_str_pos", scope: !4358, file: !732, line: 1040, type: !3864)
!4409 = !DILocalVariable(name: "keep_str_pos", scope: !4358, file: !732, line: 1042, type: !3864)
!4410 = !DILocalVariable(name: "scpy_cnt", scope: !4358, file: !732, line: 1043, type: !166)
!4411 = !DILocalVariable(name: "keep_cnt", scope: !4358, file: !732, line: 1044, type: !166)
!4412 = !DILocalVariable(name: "dst", scope: !4358, file: !732, line: 1045, type: !538)
!4413 = !DILocalVariable(name: "rv", scope: !4358, file: !732, line: 1046, type: !103)
!4414 = !DILocalVariable(name: "i", scope: !4415, file: !732, line: 1074, type: !103)
!4415 = distinct !DILexicalBlock(scope: !4358, file: !732, line: 1074, column: 2)
!4416 = !DILocalVariable(name: "arg_idx", scope: !4417, file: !732, line: 1075, type: !166)
!4417 = distinct !DILexicalBlock(scope: !4418, file: !732, line: 1074, column: 36)
!4418 = distinct !DILexicalBlock(scope: !4415, file: !732, line: 1074, column: 2)
!4419 = !DILocalVariable(name: "arg_pos", scope: !4417, file: !732, line: 1076, type: !166)
!4420 = !DILocalVariable(name: "str", scope: !4417, file: !732, line: 1077, type: !108)
!4421 = !DILocalVariable(name: "is_ro", scope: !4417, file: !732, line: 1078, type: !122)
!4422 = !DILocalVariable(name: "in_desc_backup", scope: !4358, file: !732, line: 1114, type: !3882)
!4423 = !DILocalVariable(name: "strs_len", scope: !4358, file: !732, line: 1134, type: !156)
!4424 = !DILocalVariable(name: "i", scope: !4425, file: !732, line: 1143, type: !103)
!4425 = distinct !DILexicalBlock(scope: !4358, file: !732, line: 1143, column: 2)
!4426 = !DILocalVariable(name: "loc", scope: !4427, file: !732, line: 1144, type: !166)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !732, line: 1143, column: 37)
!4428 = distinct !DILexicalBlock(scope: !4425, file: !732, line: 1143, column: 2)
!4429 = !DILocalVariable(name: "str", scope: !4427, file: !732, line: 1145, type: !108)
!4430 = !DILocalVariable(name: "str_len", scope: !4427, file: !732, line: 1146, type: !181)
!4431 = !DILabel(scope: !4432, name: "calculate_string_length", file: !732, line: 1021)
!4432 = distinct !DILexicalBlock(scope: !4433, file: !732, line: 1020, column: 56)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !732, line: 1020, column: 15)
!4434 = distinct !DILexicalBlock(scope: !4401, file: !732, line: 1014, column: 8)
!4435 = !DILocation(line: 0, scope: !4358)
!4436 = !DILocation(line: 916, column: 2, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4438, file: !732, line: 916, column: 2)
!4438 = distinct !DILexicalBlock(scope: !4358, file: !732, line: 916, column: 2)
!4439 = !DILocation(line: 916, column: 2, scope: !4438)
!4440 = !DILocation(line: 916, column: 2, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4437, file: !732, line: 916, column: 2)
!4442 = !DILocation(line: 919, column: 20, scope: !4358)
!4443 = !DILocation(line: 921, column: 27, scope: !4358)
!4444 = !DILocation(line: 921, column: 21, scope: !4358)
!4445 = !DILocation(line: 926, column: 18, scope: !4358)
!4446 = !DILocation(line: 926, column: 11, scope: !4358)
!4447 = !DILocation(line: 926, column: 34, scope: !4358)
!4448 = !DILocation(line: 931, column: 21, scope: !4358)
!4449 = !DILocation(line: 931, column: 12, scope: !4358)
!4450 = !DILocation(line: 932, column: 11, scope: !4358)
!4451 = !DILocation(line: 932, column: 19, scope: !4358)
!4452 = !DILocation(line: 938, column: 21, scope: !4358)
!4453 = !DILocation(line: 938, column: 12, scope: !4358)
!4454 = !DILocation(line: 939, column: 19, scope: !4358)
!4455 = !DILocation(line: 939, column: 23, scope: !4358)
!4456 = !DILocation(line: 946, column: 14, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4358, file: !732, line: 946, column: 6)
!4458 = !DILocation(line: 947, column: 7, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4460, file: !732, line: 947, column: 7)
!4460 = distinct !DILexicalBlock(scope: !4457, file: !732, line: 946, column: 26)
!4461 = !DILocation(line: 947, column: 7, scope: !4460)
!4462 = !DILocation(line: 948, column: 4, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4459, file: !732, line: 947, column: 11)
!4464 = !DILocation(line: 949, column: 3, scope: !4463)
!4465 = !DILocation(line: 958, column: 23, scope: !4358)
!4466 = !DILocation(line: 958, column: 14, scope: !4358)
!4467 = !DILocation(line: 958, column: 27, scope: !4358)
!4468 = !DILocation(line: 965, column: 41, scope: !4358)
!4469 = !DILocation(line: 965, column: 20, scope: !4358)
!4470 = !DILocation(line: 966, column: 22, scope: !4358)
!4471 = !DILocation(line: 970, column: 9, scope: !4392)
!4472 = !DILocation(line: 970, column: 6, scope: !4358)
!4473 = !DILocation(line: 972, column: 7, scope: !4391)
!4474 = !DILocation(line: 0, scope: !4388)
!4475 = !DILocation(line: 973, column: 4, scope: !4388)
!4476 = !DILocation(line: 974, column: 46, scope: !4394)
!4477 = !DILocation(line: 974, column: 40, scope: !4394)
!4478 = !DILocation(line: 974, column: 23, scope: !4394)
!4479 = !DILocation(line: 0, scope: !4394)
!4480 = !DILocation(line: 975, column: 15, scope: !4394)
!4481 = !DILocation(line: 978, column: 14, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4394, file: !732, line: 978, column: 9)
!4483 = !DILocation(line: 979, column: 25, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4482, file: !732, line: 978, column: 38)
!4485 = !DILocation(line: 979, column: 19, scope: !4484)
!4486 = !DILocation(line: 979, column: 6, scope: !4484)
!4487 = !DILocation(line: 979, column: 23, scope: !4484)
!4488 = !DILocation(line: 980, column: 5, scope: !4484)
!4489 = !DILocation(line: 981, column: 13, scope: !4394)
!4490 = !DILocation(line: 982, column: 12, scope: !4394)
!4491 = !DILocation(line: 973, column: 34, scope: !4395)
!4492 = !DILocation(line: 973, column: 22, scope: !4395)
!4493 = distinct !{!4493, !4475, !4494}
!4494 = !DILocation(line: 983, column: 4, scope: !4388)
!4495 = !DILocation(line: 985, column: 16, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !732, line: 985, column: 8)
!4497 = distinct !DILexicalBlock(scope: !4390, file: !732, line: 984, column: 10)
!4498 = !DILocation(line: 967, column: 9, scope: !4358)
!4499 = !DILocation(line: 971, column: 11, scope: !4391)
!4500 = !DILocation(line: 0, scope: !4391)
!4501 = !DILocation(line: 0, scope: !4399)
!4502 = !DILocation(line: 995, column: 21, scope: !4402)
!4503 = !DILocation(line: 995, column: 3, scope: !4399)
!4504 = !DILocation(line: 990, column: 34, scope: !4391)
!4505 = !DILocation(line: 990, column: 26, scope: !4391)
!4506 = !DILocation(line: 996, column: 30, scope: !4401)
!4507 = !DILocation(line: 0, scope: !4401)
!4508 = !DILocation(line: 997, column: 30, scope: !4401)
!4509 = !DILocation(line: 997, column: 22, scope: !4401)
!4510 = !DILocation(line: 998, column: 39, scope: !4401)
!4511 = !DILocation(line: 998, column: 22, scope: !4401)
!4512 = !DILocation(line: 999, column: 17, scope: !4401)
!4513 = !DILocation(line: 1002, column: 20, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4401, file: !732, line: 1002, column: 8)
!4515 = !DILocation(line: 996, column: 22, scope: !4401)
!4516 = !DILocation(line: 1002, column: 35, scope: !4514)
!4517 = !DILocation(line: 1002, column: 23, scope: !4514)
!4518 = !DILocation(line: 1002, column: 8, scope: !4401)
!4519 = !DILocation(line: 1003, column: 5, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !732, line: 1003, column: 5)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !732, line: 1003, column: 5)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !732, line: 1003, column: 5)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !732, line: 1003, column: 5)
!4524 = distinct !DILexicalBlock(scope: !4514, file: !732, line: 1002, column: 45)
!4525 = !DILocation(line: 1010, column: 13, scope: !4524)
!4526 = !DILocation(line: 1011, column: 5, scope: !4524)
!4527 = !DILocation(line: 1014, column: 8, scope: !4401)
!4528 = !DILocation(line: 1015, column: 9, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4434, file: !732, line: 1014, column: 15)
!4530 = !DILocation(line: 1018, column: 14, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !732, line: 1017, column: 12)
!4532 = distinct !DILexicalBlock(scope: !4529, file: !732, line: 1015, column: 9)
!4533 = !DILocation(line: 1020, column: 4, scope: !4529)
!4534 = !DILocation(line: 1020, column: 15, scope: !4434)
!4535 = !DILocation(line: 1021, column: 1, scope: !4432)
!4536 = !DILocation(line: 1022, column: 11, scope: !4432)
!4537 = !DILocation(line: 1025, column: 14, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4432, file: !732, line: 1025, column: 9)
!4539 = !DILocation(line: 1026, column: 25, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4538, file: !732, line: 1025, column: 38)
!4541 = !DILocation(line: 1026, column: 19, scope: !4540)
!4542 = !DILocation(line: 1026, column: 6, scope: !4540)
!4543 = !DILocation(line: 1026, column: 23, scope: !4540)
!4544 = !DILocation(line: 1027, column: 5, scope: !4540)
!4545 = !DILocation(line: 1031, column: 21, scope: !4432)
!4546 = !DILocation(line: 1031, column: 13, scope: !4432)
!4547 = !DILocation(line: 1032, column: 4, scope: !4432)
!4548 = !DILocation(line: 995, column: 33, scope: !4402)
!4549 = distinct !{!4549, !4503, !4550}
!4550 = !DILocation(line: 1033, column: 3, scope: !4399)
!4551 = !DILocation(line: 1040, column: 10, scope: !4358)
!4552 = !DILocation(line: 1042, column: 10, scope: !4358)
!4553 = !DILocation(line: 1052, column: 6, scope: !4358)
!4554 = !DILocation(line: 1055, column: 9, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !732, line: 1052, column: 14)
!4556 = distinct !DILexicalBlock(scope: !4358, file: !732, line: 1052, column: 6)
!4557 = !DILocation(line: 1056, column: 2, scope: !4555)
!4558 = !DILocation(line: 1056, column: 21, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4556, file: !732, line: 1056, column: 13)
!4560 = !DILocation(line: 1066, column: 3, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !732, line: 1065, column: 11)
!4562 = distinct !DILexicalBlock(scope: !4358, file: !732, line: 1065, column: 6)
!4563 = !DILocation(line: 1067, column: 2, scope: !4561)
!4564 = !DILocation(line: 1068, column: 10, scope: !4358)
!4565 = !DILocation(line: 0, scope: !4415)
!4566 = !DILocation(line: 1074, column: 20, scope: !4418)
!4567 = !DILocation(line: 1074, column: 2, scope: !4415)
!4568 = !DILocation(line: 1110, column: 24, scope: !4358)
!4569 = !DILocation(line: 1053, column: 12, scope: !4555)
!4570 = !DILocation(line: 1054, column: 12, scope: !4555)
!4571 = !DILocation(line: 1108, column: 30, scope: !4358)
!4572 = !DILocation(line: 1108, column: 40, scope: !4358)
!4573 = !DILocation(line: 1108, column: 38, scope: !4358)
!4574 = !DILocation(line: 1109, column: 31, scope: !4358)
!4575 = !DILocation(line: 1109, column: 24, scope: !4358)
!4576 = !DILocation(line: 1110, column: 31, scope: !4358)
!4577 = !DILocation(line: 1114, column: 31, scope: !4358)
!4578 = !DILocation(line: 1114, column: 48, scope: !4358)
!4579 = !DILocation(line: 1115, column: 13, scope: !4358)
!4580 = !DILocation(line: 1118, column: 7, scope: !4358)
!4581 = !DILocation(line: 1119, column: 9, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4358, file: !732, line: 1119, column: 6)
!4583 = !DILocation(line: 1119, column: 6, scope: !4358)
!4584 = !DILocation(line: 1075, column: 29, scope: !4417)
!4585 = !DILocation(line: 1075, column: 21, scope: !4417)
!4586 = !DILocation(line: 0, scope: !4417)
!4587 = !DILocation(line: 1076, column: 29, scope: !4417)
!4588 = !DILocation(line: 1076, column: 21, scope: !4417)
!4589 = !DILocation(line: 1077, column: 38, scope: !4417)
!4590 = !DILocation(line: 1077, column: 21, scope: !4417)
!4591 = !DILocation(line: 1078, column: 16, scope: !4417)
!4592 = !DILocation(line: 1080, column: 19, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4417, file: !732, line: 1080, column: 7)
!4594 = !DILocation(line: 1080, column: 34, scope: !4593)
!4595 = !DILocation(line: 1080, column: 22, scope: !4593)
!4596 = !DILocation(line: 1080, column: 7, scope: !4417)
!4597 = !DILocation(line: 1084, column: 7, scope: !4417)
!4598 = !DILocation(line: 1085, column: 8, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !732, line: 1084, column: 14)
!4600 = distinct !DILexicalBlock(scope: !4417, file: !732, line: 1084, column: 7)
!4601 = !DILocation(line: 1086, column: 5, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4603, file: !732, line: 1086, column: 5)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !732, line: 1086, column: 5)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !732, line: 1085, column: 49)
!4605 = distinct !DILexicalBlock(scope: !4599, file: !732, line: 1085, column: 8)
!4606 = !DILocation(line: 1086, column: 5, scope: !4603)
!4607 = !DILocation(line: 1086, column: 5, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4602, file: !732, line: 1086, column: 5)
!4609 = !DILocation(line: 1087, column: 25, scope: !4604)
!4610 = !DILocation(line: 1087, column: 5, scope: !4604)
!4611 = !DILocation(line: 1088, column: 4, scope: !4604)
!4612 = !DILocation(line: 1088, column: 15, scope: !4605)
!4613 = !DILocation(line: 1089, column: 5, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !732, line: 1089, column: 5)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !732, line: 1089, column: 5)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !732, line: 1088, column: 61)
!4617 = distinct !DILexicalBlock(scope: !4605, file: !732, line: 1088, column: 15)
!4618 = !DILocation(line: 1089, column: 5, scope: !4615)
!4619 = !DILocation(line: 1089, column: 5, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4614, file: !732, line: 1089, column: 5)
!4621 = !DILocation(line: 1090, column: 26, scope: !4616)
!4622 = !DILocation(line: 1090, column: 5, scope: !4616)
!4623 = !DILocation(line: 1091, column: 4, scope: !4616)
!4624 = !DILocation(line: 1095, column: 8, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4600, file: !732, line: 1094, column: 10)
!4626 = !DILocation(line: 1096, column: 5, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !732, line: 1096, column: 5)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !732, line: 1096, column: 5)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !732, line: 1095, column: 49)
!4630 = distinct !DILexicalBlock(scope: !4625, file: !732, line: 1095, column: 8)
!4631 = !DILocation(line: 1096, column: 5, scope: !4628)
!4632 = !DILocation(line: 1096, column: 5, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4627, file: !732, line: 1096, column: 5)
!4634 = !DILocation(line: 1097, column: 25, scope: !4629)
!4635 = !DILocation(line: 1097, column: 5, scope: !4629)
!4636 = !DILocation(line: 1098, column: 4, scope: !4629)
!4637 = !DILocation(line: 1099, column: 5, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !732, line: 1099, column: 5)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !732, line: 1099, column: 5)
!4640 = distinct !DILexicalBlock(scope: !4630, file: !732, line: 1098, column: 11)
!4641 = !DILocation(line: 1099, column: 5, scope: !4639)
!4642 = !DILocation(line: 1099, column: 5, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4638, file: !732, line: 1099, column: 5)
!4644 = !DILocation(line: 1100, column: 26, scope: !4640)
!4645 = !DILocation(line: 1100, column: 5, scope: !4640)
!4646 = !DILocation(line: 1100, column: 30, scope: !4640)
!4647 = !DILocation(line: 1101, column: 26, scope: !4640)
!4648 = !DILocation(line: 1101, column: 5, scope: !4640)
!4649 = !DILocation(line: 0, scope: !4600)
!4650 = !DILocation(line: 1074, column: 32, scope: !4418)
!4651 = distinct !{!4651, !4567, !4652}
!4652 = !DILocation(line: 1104, column: 2, scope: !4415)
!4653 = !DILocation(line: 1124, column: 13, scope: !4358)
!4654 = !DILocation(line: 1127, column: 10, scope: !4358)
!4655 = !DILocation(line: 1127, column: 7, scope: !4358)
!4656 = !DILocation(line: 1128, column: 9, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4358, file: !732, line: 1128, column: 6)
!4658 = !DILocation(line: 1128, column: 6, scope: !4358)
!4659 = !DILocation(line: 1134, column: 27, scope: !4358)
!4660 = !DILocation(line: 1136, column: 7, scope: !4358)
!4661 = !DILocation(line: 1137, column: 9, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4358, file: !732, line: 1137, column: 6)
!4663 = !DILocation(line: 1137, column: 6, scope: !4358)
!4664 = !DILocation(line: 1131, column: 10, scope: !4358)
!4665 = !DILocation(line: 1140, column: 10, scope: !4358)
!4666 = !DILocation(line: 0, scope: !4425)
!4667 = !DILocation(line: 1143, column: 20, scope: !4428)
!4668 = !DILocation(line: 1143, column: 2, scope: !4425)
!4669 = !DILocation(line: 1144, column: 3, scope: !4427)
!4670 = !DILocation(line: 1144, column: 17, scope: !4427)
!4671 = !DILocation(line: 0, scope: !4427)
!4672 = !DILocation(line: 1144, column: 11, scope: !4427)
!4673 = !DILocation(line: 1145, column: 38, scope: !4427)
!4674 = !DILocation(line: 1145, column: 21, scope: !4427)
!4675 = !DILocation(line: 1146, column: 22, scope: !4427)
!4676 = !DILocation(line: 1146, column: 29, scope: !4427)
!4677 = !DILocation(line: 1148, column: 8, scope: !4427)
!4678 = !DILocation(line: 1149, column: 10, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4427, file: !732, line: 1149, column: 7)
!4680 = !DILocation(line: 1149, column: 7, scope: !4427)
!4681 = !DILocation(line: 1154, column: 8, scope: !4427)
!4682 = !DILocation(line: 1155, column: 10, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4427, file: !732, line: 1155, column: 7)
!4684 = !DILocation(line: 1155, column: 7, scope: !4427)
!4685 = !DILocation(line: 1159, column: 2, scope: !4428)
!4686 = !DILocation(line: 1152, column: 11, scope: !4427)
!4687 = !DILocation(line: 1158, column: 11, scope: !4427)
!4688 = !DILocation(line: 1143, column: 33, scope: !4428)
!4689 = distinct !{!4689, !4668, !4690}
!4690 = !DILocation(line: 1159, column: 2, scope: !4425)
!4691 = !DILocation(line: 1162, column: 8, scope: !4358)
!4692 = !DILocation(line: 1164, column: 2, scope: !4358)
!4693 = !DILocation(line: 1165, column: 1, scope: !4358)
!4694 = distinct !DISubprogram(name: "get_package_len", scope: !732, file: !732, line: 196, type: !4695, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !4697)
!4695 = !DISubroutineType(types: !4696)
!4696 = !{!156, !102}
!4697 = !{!4698, !4699, !4700, !4701, !4702, !4703, !4704}
!4698 = !DILocalVariable(name: "packaged", arg: 1, scope: !4694, file: !732, line: 196, type: !102)
!4699 = !DILocalVariable(name: "buf", scope: !4694, file: !732, line: 200, type: !538)
!4700 = !DILocalVariable(name: "start", scope: !4694, file: !732, line: 201, type: !538)
!4701 = !DILocalVariable(name: "args_size", scope: !4694, file: !732, line: 202, type: !32)
!4702 = !DILocalVariable(name: "s_nbr", scope: !4694, file: !732, line: 202, type: !32)
!4703 = !DILocalVariable(name: "ros_nbr", scope: !4694, file: !732, line: 202, type: !32)
!4704 = !DILocalVariable(name: "i", scope: !4705, file: !732, line: 215, type: !103)
!4705 = distinct !DILexicalBlock(scope: !4694, file: !732, line: 215, column: 2)
!4706 = !DILocation(line: 0, scope: !4694)
!4707 = !DILocation(line: 198, column: 2, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !732, line: 198, column: 2)
!4709 = distinct !DILexicalBlock(scope: !4694, file: !732, line: 198, column: 2)
!4710 = !DILocation(line: 198, column: 2, scope: !4709)
!4711 = !DILocation(line: 198, column: 2, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4708, file: !732, line: 198, column: 2)
!4713 = !DILocation(line: 204, column: 14, scope: !4694)
!4714 = !DILocation(line: 204, column: 21, scope: !4694)
!4715 = !DILocation(line: 205, column: 14, scope: !4694)
!4716 = !DILocation(line: 206, column: 14, scope: !4694)
!4717 = !DILocation(line: 209, column: 6, scope: !4694)
!4718 = !DILocation(line: 212, column: 6, scope: !4694)
!4719 = !DILocation(line: 0, scope: !4705)
!4720 = !DILocation(line: 215, column: 20, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4705, file: !732, line: 215, column: 2)
!4722 = !DILocation(line: 215, column: 2, scope: !4705)
!4723 = !DILocation(line: 220, column: 33, scope: !4694)
!4724 = !DILocation(line: 220, column: 2, scope: !4694)
!4725 = !DILocation(line: 216, column: 6, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4721, file: !732, line: 215, column: 34)
!4727 = !DILocation(line: 217, column: 10, scope: !4726)
!4728 = !DILocation(line: 217, column: 36, scope: !4726)
!4729 = !DILocation(line: 217, column: 7, scope: !4726)
!4730 = !DILocation(line: 215, column: 30, scope: !4721)
!4731 = distinct !{!4731, !4722, !4732}
!4732 = !DILocation(line: 218, column: 2, scope: !4705)
!4733 = distinct !DISubprogram(name: "append_string", scope: !732, file: !732, line: 223, type: !4734, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !4736)
!4734 = !DISubroutineType(types: !4735)
!4735 = !{!103, !4361, !102, !108, !181}
!4736 = !{!4737, !4738, !4739, !4740}
!4737 = !DILocalVariable(name: "cb", arg: 1, scope: !4733, file: !732, line: 223, type: !4361)
!4738 = !DILocalVariable(name: "ctx", arg: 2, scope: !4733, file: !732, line: 223, type: !102)
!4739 = !DILocalVariable(name: "str", arg: 3, scope: !4733, file: !732, line: 223, type: !108)
!4740 = !DILocalVariable(name: "strl", arg: 4, scope: !4733, file: !732, line: 223, type: !181)
!4741 = !DILocation(line: 0, scope: !4733)
!4742 = !DILocation(line: 225, column: 9, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4733, file: !732, line: 225, column: 6)
!4744 = !DILocation(line: 225, column: 6, scope: !4733)
!4745 = !DILocation(line: 226, column: 14, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4743, file: !732, line: 225, column: 18)
!4747 = !DILocation(line: 226, column: 12, scope: !4746)
!4748 = !DILocation(line: 226, column: 3, scope: !4746)
!4749 = !DILocation(line: 229, column: 14, scope: !4733)
!4750 = !DILocation(line: 229, column: 9, scope: !4733)
!4751 = !DILocation(line: 229, column: 27, scope: !4733)
!4752 = !DILocation(line: 229, column: 39, scope: !4733)
!4753 = !DILocation(line: 230, column: 17, scope: !4733)
!4754 = !DILocation(line: 230, column: 9, scope: !4733)
!4755 = !DILocation(line: 230, column: 2, scope: !4733)
!4756 = !DILocation(line: 231, column: 1, scope: !4733)
!4757 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !744, file: !744, line: 45, type: !746, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !741, retainedNodes: !4758)
!4758 = !{!4759}
!4759 = !DILocalVariable(name: "c", arg: 1, scope: !4757, file: !744, line: 45, type: !103)
!4760 = !DILocation(line: 0, scope: !4757)
!4761 = !DILocation(line: 50, column: 2, scope: !4757)
!4762 = distinct !DISubprogram(name: "__printk_hook_install", scope: !744, file: !744, line: 63, type: !4763, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !741, retainedNodes: !4765)
!4763 = !DISubroutineType(types: !4764)
!4764 = !{null, !745}
!4765 = !{!4766}
!4766 = !DILocalVariable(name: "fn", arg: 1, scope: !4762, file: !744, line: 63, type: !745)
!4767 = !DILocation(line: 0, scope: !4762)
!4768 = !DILocation(line: 65, column: 12, scope: !4762)
!4769 = !DILocation(line: 66, column: 1, scope: !4762)
!4770 = distinct !DISubprogram(name: "__printk_get_hook", scope: !744, file: !744, line: 76, type: !4771, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !741, retainedNodes: !2275)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{!102}
!4773 = !DILocation(line: 78, column: 9, scope: !4770)
!4774 = !DILocation(line: 78, column: 2, scope: !4770)
!4775 = distinct !DISubprogram(name: "vprintk", scope: !744, file: !744, line: 113, type: !4776, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !741, retainedNodes: !4784)
!4776 = !DISubroutineType(types: !4777)
!4777 = !{null, !108, !4778}
!4778 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3847, line: 99, baseType: !4779)
!4779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3847, line: 40, baseType: !4780)
!4780 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !744, baseType: !4781)
!4781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4782)
!4782 = !{!4783}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4781, file: !744, line: 79, baseType: !102, size: 32)
!4784 = !{!4785, !4786, !4787}
!4785 = !DILocalVariable(name: "fmt", arg: 1, scope: !4775, file: !744, line: 113, type: !108)
!4786 = !DILocalVariable(name: "ap", arg: 2, scope: !4775, file: !744, line: 113, type: !4778)
!4787 = !DILocalVariable(name: "ctx", scope: !4788, file: !744, line: 121, type: !4790)
!4788 = distinct !DILexicalBlock(scope: !4789, file: !744, line: 120, column: 27)
!4789 = distinct !DILexicalBlock(scope: !4775, file: !744, line: 120, column: 6)
!4790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !744, line: 81, size: 32, elements: !4791)
!4791 = !{!4792, !4793}
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4790, file: !744, line: 85, baseType: !32, size: 32)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4790, file: !744, line: 86, baseType: !4794, offset: 32)
!4794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, elements: !2812)
!4795 = !DILocation(line: 0, scope: !4775)
!4796 = !DILocation(line: 148, column: 3, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4789, file: !744, line: 138, column: 9)
!4798 = !DILocation(line: 155, column: 1, scope: !4775)
!4799 = distinct !DISubprogram(name: "char_out", scope: !744, file: !744, line: 107, type: !4800, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !741, retainedNodes: !4802)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!103, !103, !102}
!4802 = !{!4803, !4804}
!4803 = !DILocalVariable(name: "c", arg: 1, scope: !4799, file: !744, line: 107, type: !103)
!4804 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4799, file: !744, line: 107, type: !102)
!4805 = !DILocation(line: 0, scope: !4799)
!4806 = !DILocation(line: 110, column: 9, scope: !4799)
!4807 = !DILocation(line: 110, column: 2, scope: !4799)
!4808 = distinct !DISubprogram(name: "cbvprintf", scope: !3879, file: !3879, line: 739, type: !4809, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !741, retainedNodes: !4811)
!4809 = !DISubroutineType(types: !4810)
!4810 = !{!103, !4229, !102, !108, !4778}
!4811 = !{!4812, !4813, !4814, !4815}
!4812 = !DILocalVariable(name: "out", arg: 1, scope: !4808, file: !3879, line: 739, type: !4229)
!4813 = !DILocalVariable(name: "ctx", arg: 2, scope: !4808, file: !3879, line: 739, type: !102)
!4814 = !DILocalVariable(name: "format", arg: 3, scope: !4808, file: !3879, line: 739, type: !108)
!4815 = !DILocalVariable(name: "ap", arg: 4, scope: !4808, file: !3879, line: 739, type: !4778)
!4816 = !DILocation(line: 0, scope: !4808)
!4817 = !DILocation(line: 741, column: 9, scope: !4808)
!4818 = !DILocation(line: 741, column: 2, scope: !4808)
!4819 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !744, file: !744, line: 157, type: !4820, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !741, retainedNodes: !4822)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{null, !160, !156}
!4822 = !{!4823, !4824, !4825}
!4823 = !DILocalVariable(name: "c", arg: 1, scope: !4819, file: !744, line: 157, type: !160)
!4824 = !DILocalVariable(name: "n", arg: 2, scope: !4819, file: !744, line: 157, type: !156)
!4825 = !DILocalVariable(name: "i", scope: !4819, file: !744, line: 159, type: !156)
!4826 = !DILocation(line: 0, scope: !4819)
!4827 = !DILocation(line: 164, column: 16, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4829, file: !744, line: 164, column: 2)
!4829 = distinct !DILexicalBlock(scope: !4819, file: !744, line: 164, column: 2)
!4830 = !DILocation(line: 164, column: 2, scope: !4829)
!4831 = !DILocation(line: 165, column: 3, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4828, file: !744, line: 164, column: 26)
!4833 = !DILocation(line: 165, column: 13, scope: !4832)
!4834 = !DILocation(line: 164, column: 22, scope: !4828)
!4835 = distinct !{!4835, !4830, !4836}
!4836 = !DILocation(line: 166, column: 2, scope: !4829)
!4837 = !DILocation(line: 171, column: 1, scope: !4819)
!4838 = distinct !DISubprogram(name: "printk", scope: !744, file: !744, line: 203, type: !4839, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !741, retainedNodes: !4841)
!4839 = !DISubroutineType(types: !4840)
!4840 = !{null, !108, null}
!4841 = !{!4842, !4843}
!4842 = !DILocalVariable(name: "fmt", arg: 1, scope: !4838, file: !744, line: 203, type: !108)
!4843 = !DILocalVariable(name: "ap", scope: !4838, file: !744, line: 205, type: !4778)
!4844 = !DILocation(line: 0, scope: !4838)
!4845 = !DILocation(line: 205, column: 2, scope: !4838)
!4846 = !DILocation(line: 205, column: 10, scope: !4838)
!4847 = !DILocation(line: 207, column: 2, scope: !4838)
!4848 = !DILocation(line: 209, column: 2, scope: !4838)
!4849 = !DILocation(line: 211, column: 2, scope: !4838)
!4850 = !DILocation(line: 212, column: 1, scope: !4838)
!4851 = distinct !DISubprogram(name: "snprintk", scope: !744, file: !744, line: 239, type: !4852, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !741, retainedNodes: !4854)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{!103, !160, !156, !108, null}
!4854 = !{!4855, !4856, !4857, !4858, !4859}
!4855 = !DILocalVariable(name: "str", arg: 1, scope: !4851, file: !744, line: 239, type: !160)
!4856 = !DILocalVariable(name: "size", arg: 2, scope: !4851, file: !744, line: 239, type: !156)
!4857 = !DILocalVariable(name: "fmt", arg: 3, scope: !4851, file: !744, line: 239, type: !108)
!4858 = !DILocalVariable(name: "ap", scope: !4851, file: !744, line: 241, type: !4778)
!4859 = !DILocalVariable(name: "ret", scope: !4851, file: !744, line: 242, type: !103)
!4860 = !DILocation(line: 0, scope: !4851)
!4861 = !DILocation(line: 241, column: 2, scope: !4851)
!4862 = !DILocation(line: 241, column: 10, scope: !4851)
!4863 = !DILocation(line: 244, column: 2, scope: !4851)
!4864 = !DILocation(line: 245, column: 8, scope: !4851)
!4865 = !DILocation(line: 246, column: 2, scope: !4851)
!4866 = !DILocation(line: 249, column: 1, scope: !4851)
!4867 = !DILocation(line: 248, column: 2, scope: !4851)
!4868 = distinct !DISubprogram(name: "vsnprintk", scope: !744, file: !744, line: 251, type: !4869, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !741, retainedNodes: !4871)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{!103, !160, !156, !108, !4778}
!4871 = !{!4872, !4873, !4874, !4875, !4876}
!4872 = !DILocalVariable(name: "str", arg: 1, scope: !4868, file: !744, line: 251, type: !160)
!4873 = !DILocalVariable(name: "size", arg: 2, scope: !4868, file: !744, line: 251, type: !156)
!4874 = !DILocalVariable(name: "fmt", arg: 3, scope: !4868, file: !744, line: 251, type: !108)
!4875 = !DILocalVariable(name: "ap", arg: 4, scope: !4868, file: !744, line: 251, type: !4778)
!4876 = !DILocalVariable(name: "ctx", scope: !4868, file: !744, line: 253, type: !4877)
!4877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !744, line: 217, size: 96, elements: !4878)
!4878 = !{!4879, !4880, !4881}
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4877, file: !744, line: 218, baseType: !160, size: 32)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4877, file: !744, line: 219, baseType: !103, size: 32, offset: 32)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4877, file: !744, line: 220, baseType: !103, size: 32, offset: 64)
!4882 = !DILocation(line: 0, scope: !4868)
!4883 = !DILocation(line: 253, column: 2, scope: !4868)
!4884 = !DILocation(line: 253, column: 21, scope: !4868)
!4885 = !DILocation(line: 253, column: 27, scope: !4868)
!4886 = !DILocation(line: 255, column: 2, scope: !4868)
!4887 = !DILocation(line: 257, column: 10, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4868, file: !744, line: 257, column: 6)
!4889 = !DILocation(line: 257, column: 22, scope: !4888)
!4890 = !DILocation(line: 257, column: 16, scope: !4888)
!4891 = !DILocation(line: 257, column: 6, scope: !4868)
!4892 = !DILocation(line: 258, column: 3, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4888, file: !744, line: 257, column: 27)
!4894 = !DILocation(line: 258, column: 18, scope: !4893)
!4895 = !DILocation(line: 259, column: 2, scope: !4893)
!4896 = !DILocation(line: 262, column: 1, scope: !4868)
!4897 = !DILocation(line: 261, column: 2, scope: !4868)
!4898 = distinct !DISubprogram(name: "str_out", scope: !744, file: !744, line: 223, type: !4899, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !741, retainedNodes: !4902)
!4899 = !DISubroutineType(types: !4900)
!4900 = !{!103, !103, !4901}
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4877, size: 32)
!4902 = !{!4903, !4904}
!4903 = !DILocalVariable(name: "c", arg: 1, scope: !4898, file: !744, line: 223, type: !103)
!4904 = !DILocalVariable(name: "ctx", arg: 2, scope: !4898, file: !744, line: 223, type: !4901)
!4905 = !DILocation(line: 0, scope: !4898)
!4906 = !DILocation(line: 225, column: 11, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4898, file: !744, line: 225, column: 6)
!4908 = !DILocation(line: 225, column: 15, scope: !4907)
!4909 = !DILocation(line: 0, scope: !4907)
!4910 = !DILocation(line: 225, column: 23, scope: !4907)
!4911 = !DILocation(line: 225, column: 45, scope: !4907)
!4912 = !DILocation(line: 225, column: 37, scope: !4907)
!4913 = !DILocation(line: 225, column: 6, scope: !4898)
!4914 = !DILocation(line: 226, column: 8, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4907, file: !744, line: 225, column: 50)
!4916 = !DILocation(line: 226, column: 13, scope: !4915)
!4917 = !DILocation(line: 227, column: 3, scope: !4915)
!4918 = !DILocation(line: 230, column: 29, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4898, file: !744, line: 230, column: 6)
!4920 = !DILocation(line: 230, column: 17, scope: !4919)
!4921 = !DILocation(line: 230, column: 6, scope: !4898)
!4922 = !DILocation(line: 231, column: 22, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4919, file: !744, line: 230, column: 34)
!4924 = !DILocation(line: 231, column: 3, scope: !4923)
!4925 = !DILocation(line: 231, column: 26, scope: !4923)
!4926 = !DILocation(line: 232, column: 2, scope: !4923)
!4927 = !DILocation(line: 233, column: 28, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4919, file: !744, line: 232, column: 9)
!4929 = !DILocation(line: 233, column: 22, scope: !4928)
!4930 = !DILocation(line: 233, column: 3, scope: !4928)
!4931 = !DILocation(line: 233, column: 26, scope: !4928)
!4932 = !DILocation(line: 237, column: 1, scope: !4898)
!4933 = distinct !DISubprogram(name: "z_thread_entry", scope: !4934, file: !4934, line: 30, type: !4935, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !4937)
!4934 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4935 = !DISubroutineType(types: !4936)
!4936 = !{null, !304, !102, !102, !102}
!4937 = !{!4938, !4939, !4940, !4941}
!4938 = !DILocalVariable(name: "entry", arg: 1, scope: !4933, file: !4934, line: 30, type: !304)
!4939 = !DILocalVariable(name: "p1", arg: 2, scope: !4933, file: !4934, line: 31, type: !102)
!4940 = !DILocalVariable(name: "p2", arg: 3, scope: !4933, file: !4934, line: 31, type: !102)
!4941 = !DILocalVariable(name: "p3", arg: 4, scope: !4933, file: !4934, line: 31, type: !102)
!4942 = !DILocation(line: 0, scope: !4933)
!4943 = !DILocation(line: 36, column: 2, scope: !4933)
!4944 = !DILocation(line: 38, column: 17, scope: !4933)
!4945 = !DILocation(line: 38, column: 2, scope: !4933)
!4946 = !DILocation(line: 45, column: 2, scope: !4933)
!4947 = distinct !DISubprogram(name: "k_current_get", scope: !127, file: !127, line: 530, type: !4948, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !2275)
!4948 = !DISubroutineType(types: !4949)
!4949 = !{!4950}
!4950 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !4951)
!4951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4952, size: 32)
!4952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !4953)
!4953 = !{!4954, !5012, !5024, !5025, !5026, !5027, !5042}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4952, file: !199, line: 247, baseType: !4955, size: 384)
!4955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !4956)
!4956 = !{!4957, !4981, !4988, !4989, !4990, !4999, !5000, !5001}
!4957 = !DIDerivedType(tag: DW_TAG_member, scope: !4955, file: !199, line: 60, baseType: !4958, size: 64)
!4958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4955, file: !199, line: 60, size: 64, elements: !4959)
!4959 = !{!4960, !4975}
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4958, file: !199, line: 61, baseType: !4961, size: 64)
!4961 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !4962)
!4962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !4963)
!4963 = !{!4964, !4970}
!4964 = !DIDerivedType(tag: DW_TAG_member, scope: !4962, file: !136, line: 38, baseType: !4965, size: 32)
!4965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4962, file: !136, line: 38, size: 32, elements: !4966)
!4966 = !{!4967, !4969}
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4965, file: !136, line: 39, baseType: !4968, size: 32)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4962, size: 32)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4965, file: !136, line: 40, baseType: !4968, size: 32)
!4970 = !DIDerivedType(tag: DW_TAG_member, scope: !4962, file: !136, line: 42, baseType: !4971, size: 32, offset: 32)
!4971 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4962, file: !136, line: 42, size: 32, elements: !4972)
!4972 = !{!4973, !4974}
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4971, file: !136, line: 43, baseType: !4968, size: 32)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4971, file: !136, line: 44, baseType: !4968, size: 32)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4958, file: !199, line: 62, baseType: !4976, size: 64)
!4976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !4977)
!4977 = !{!4978}
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4976, file: !211, line: 50, baseType: !4979, size: 64)
!4979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4980, size: 64, elements: !216)
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4976, size: 32)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4955, file: !199, line: 68, baseType: !4982, size: 32, offset: 64)
!4982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4983, size: 32)
!4983 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !4984)
!4984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !4985)
!4985 = !{!4986}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4984, file: !131, line: 232, baseType: !4987, size: 64)
!4987 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !4962)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4955, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4955, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!4990 = !DIDerivedType(tag: DW_TAG_member, scope: !4955, file: !199, line: 90, baseType: !4991, size: 16, offset: 112)
!4991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4955, file: !199, line: 90, size: 16, elements: !4992)
!4992 = !{!4993, !4998}
!4993 = !DIDerivedType(tag: DW_TAG_member, scope: !4991, file: !199, line: 91, baseType: !4994, size: 16)
!4994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4991, file: !199, line: 91, size: 16, elements: !4995)
!4995 = !{!4996, !4997}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4994, file: !199, line: 96, baseType: !229, size: 8)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4994, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4991, file: !199, line: 100, baseType: !181, size: 16)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4955, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4955, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4955, file: !199, line: 131, baseType: !5002, size: 192, offset: 192)
!5002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !5003)
!5003 = !{!5004, !5005, !5011}
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5002, file: !131, line: 245, baseType: !4961, size: 64)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5002, file: !131, line: 246, baseType: !5006, size: 32, offset: 64)
!5006 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !5007)
!5007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5008, size: 32)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{null, !5010}
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5002, size: 32)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5002, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4952, file: !199, line: 250, baseType: !5013, size: 288, offset: 384)
!5013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !5014)
!5014 = !{!5015, !5016, !5017, !5018, !5019, !5020, !5021, !5022, !5023}
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5013, file: !248, line: 26, baseType: !111, size: 32)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5013, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5013, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5013, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5013, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5013, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5013, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5013, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5013, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4952, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4952, file: !199, line: 256, baseType: !4983, size: 64, offset: 704)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4952, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4952, file: !199, line: 325, baseType: !5028, size: 32, offset: 800)
!5028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5029, size: 32)
!5029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !5030)
!5030 = !{!5031, !5037, !5038}
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5029, file: !127, line: 5074, baseType: !5032, size: 96)
!5032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !5033)
!5033 = !{!5034, !5035, !5036}
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5032, file: !268, line: 57, baseType: !271, size: 32)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5032, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5032, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5029, file: !127, line: 5075, baseType: !4983, size: 64, offset: 96)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5029, file: !127, line: 5076, baseType: !5039, size: 32, offset: 160)
!5039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !5040)
!5040 = !{!5041}
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5039, file: !152, line: 52, baseType: !22, size: 32)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4952, file: !199, line: 343, baseType: !5043, size: 64, offset: 832)
!5043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !5044)
!5044 = !{!5045, !5046}
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5043, file: !248, line: 63, baseType: !111, size: 32)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5043, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!5047 = !DILocation(line: 535, column: 9, scope: !4947)
!5048 = !DILocation(line: 535, column: 2, scope: !4947)
!5049 = distinct !DISubprogram(name: "k_thread_abort", scope: !5050, file: !5050, line: 188, type: !5051, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !5053)
!5050 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!5051 = !DISubroutineType(types: !5052)
!5052 = !{null, !4950}
!5053 = !{!5054}
!5054 = !DILocalVariable(name: "thread", arg: 1, scope: !5049, file: !5050, line: 188, type: !4950)
!5055 = !DILocation(line: 0, scope: !5049)
!5056 = !DILocation(line: 197, column: 2, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5049, file: !5050, line: 197, column: 2)
!5058 = !{i64 2151041788}
!5059 = !DILocation(line: 198, column: 2, scope: !5049)
!5060 = !DILocation(line: 199, column: 1, scope: !5049)
!5061 = distinct !DISubprogram(name: "z_current_get", scope: !5050, file: !5050, line: 173, type: !4948, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !2275)
!5062 = !DILocation(line: 180, column: 2, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5061, file: !5050, line: 180, column: 2)
!5064 = !{i64 2151041720}
!5065 = !DILocation(line: 181, column: 9, scope: !5061)
!5066 = !DILocation(line: 181, column: 2, scope: !5061)
!5067 = distinct !DISubprogram(name: "sys_heap_free", scope: !5068, file: !5068, line: 163, type: !5069, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5077)
!5068 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5069 = !DISubroutineType(types: !5070)
!5070 = !{null, !5071, !102}
!5071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5072, size: 32)
!5072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !5073)
!5073 = !{!5074, !5075, !5076}
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5072, file: !268, line: 57, baseType: !2799, size: 32)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5072, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5072, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!5077 = !{!5078, !5079, !5080, !5081}
!5078 = !DILocalVariable(name: "heap", arg: 1, scope: !5067, file: !5068, line: 163, type: !5071)
!5079 = !DILocalVariable(name: "mem", arg: 2, scope: !5067, file: !5068, line: 163, type: !102)
!5080 = !DILocalVariable(name: "h", scope: !5067, file: !5068, line: 168, type: !2799)
!5081 = !DILocalVariable(name: "c", scope: !5067, file: !5068, line: 169, type: !2804)
!5082 = !DILocation(line: 0, scope: !5067)
!5083 = !DILocation(line: 165, column: 10, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5067, file: !5068, line: 165, column: 6)
!5085 = !DILocation(line: 165, column: 6, scope: !5067)
!5086 = !DILocation(line: 168, column: 27, scope: !5067)
!5087 = !DILocation(line: 169, column: 16, scope: !5067)
!5088 = !{i32 0, i32 536870912}
!5089 = !DILocation(line: 175, column: 2, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5091, file: !5068, line: 175, column: 2)
!5091 = distinct !DILexicalBlock(scope: !5067, file: !5068, line: 175, column: 2)
!5092 = !DILocation(line: 175, column: 2, scope: !5091)
!5093 = !DILocation(line: 175, column: 2, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5090, file: !5068, line: 175, column: 2)
!5095 = !DILocation(line: 183, column: 2, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !5068, line: 183, column: 2)
!5097 = distinct !DILexicalBlock(scope: !5067, file: !5068, line: 183, column: 2)
!5098 = !DILocation(line: 183, column: 2, scope: !5097)
!5099 = !DILocation(line: 183, column: 2, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5096, file: !5068, line: 183, column: 2)
!5101 = !DILocation(line: 187, column: 2, scope: !5067)
!5102 = !DILocation(line: 197, column: 2, scope: !5067)
!5103 = !DILocation(line: 198, column: 1, scope: !5067)
!5104 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5068, file: !5068, line: 157, type: !5105, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5107)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{!2804, !2799, !102}
!5107 = !{!5108, !5109, !5110, !5111}
!5108 = !DILocalVariable(name: "h", arg: 1, scope: !5104, file: !5068, line: 157, type: !2799)
!5109 = !DILocalVariable(name: "p", arg: 2, scope: !5104, file: !5068, line: 157, type: !102)
!5110 = !DILocalVariable(name: "mem", scope: !5104, file: !5068, line: 159, type: !538)
!5111 = !DILocalVariable(name: "base", scope: !5104, file: !5068, line: 159, type: !538)
!5112 = !DILocation(line: 0, scope: !5104)
!5113 = !DILocation(line: 159, column: 39, scope: !5104)
!5114 = !DILocation(line: 160, column: 14, scope: !5104)
!5115 = !DILocation(line: 160, column: 38, scope: !5104)
!5116 = !DILocation(line: 160, column: 46, scope: !5104)
!5117 = !DILocation(line: 160, column: 2, scope: !5104)
!5118 = distinct !DISubprogram(name: "chunk_used", scope: !2786, file: !2786, line: 137, type: !5119, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5121)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{!122, !2799, !2804}
!5121 = !{!5122, !5123}
!5122 = !DILocalVariable(name: "h", arg: 1, scope: !5118, file: !2786, line: 137, type: !2799)
!5123 = !DILocalVariable(name: "c", arg: 2, scope: !5118, file: !2786, line: 137, type: !2804)
!5124 = !DILocation(line: 0, scope: !5118)
!5125 = !DILocation(line: 139, column: 9, scope: !5118)
!5126 = !DILocation(line: 139, column: 42, scope: !5118)
!5127 = !DILocation(line: 139, column: 2, scope: !5118)
!5128 = distinct !DISubprogram(name: "right_chunk", scope: !2786, file: !2786, line: 204, type: !5129, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5131)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!2804, !2799, !2804}
!5131 = !{!5132, !5133}
!5132 = !DILocalVariable(name: "h", arg: 1, scope: !5128, file: !2786, line: 204, type: !2799)
!5133 = !DILocalVariable(name: "c", arg: 2, scope: !5128, file: !2786, line: 204, type: !2804)
!5134 = !DILocation(line: 0, scope: !5128)
!5135 = !DILocation(line: 206, column: 13, scope: !5128)
!5136 = !DILocation(line: 206, column: 11, scope: !5128)
!5137 = !DILocation(line: 206, column: 2, scope: !5128)
!5138 = distinct !DISubprogram(name: "left_chunk", scope: !2786, file: !2786, line: 199, type: !5129, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5139)
!5139 = !{!5140, !5141}
!5140 = !DILocalVariable(name: "h", arg: 1, scope: !5138, file: !2786, line: 199, type: !2799)
!5141 = !DILocalVariable(name: "c", arg: 2, scope: !5138, file: !2786, line: 199, type: !2804)
!5142 = !DILocation(line: 0, scope: !5138)
!5143 = !DILocation(line: 201, column: 13, scope: !5138)
!5144 = !DILocation(line: 201, column: 11, scope: !5138)
!5145 = !DILocation(line: 201, column: 2, scope: !5138)
!5146 = distinct !DISubprogram(name: "set_chunk_used", scope: !2786, file: !2786, line: 147, type: !5147, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5149)
!5147 = !DISubroutineType(types: !5148)
!5148 = !{null, !2799, !2804, !122}
!5149 = !{!5150, !5151, !5152, !5153, !5154}
!5150 = !DILocalVariable(name: "h", arg: 1, scope: !5146, file: !2786, line: 147, type: !2799)
!5151 = !DILocalVariable(name: "c", arg: 2, scope: !5146, file: !2786, line: 147, type: !2804)
!5152 = !DILocalVariable(name: "used", arg: 3, scope: !5146, file: !2786, line: 147, type: !122)
!5153 = !DILocalVariable(name: "buf", scope: !5146, file: !2786, line: 149, type: !2793)
!5154 = !DILocalVariable(name: "cmem", scope: !5146, file: !2786, line: 150, type: !102)
!5155 = !DILocation(line: 0, scope: !5146)
!5156 = !DILocation(line: 149, column: 22, scope: !5146)
!5157 = !DILocation(line: 0, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5159, file: !2786, line: 159, column: 7)
!5159 = distinct !DILexicalBlock(scope: !5160, file: !2786, line: 158, column: 9)
!5160 = distinct !DILexicalBlock(scope: !5146, file: !2786, line: 152, column: 6)
!5161 = !DILocation(line: 159, column: 7, scope: !5159)
!5162 = !DILocation(line: 165, column: 1, scope: !5146)
!5163 = distinct !DISubprogram(name: "free_chunk", scope: !5068, file: !5068, line: 133, type: !5164, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5166)
!5164 = !DISubroutineType(types: !5165)
!5165 = !{null, !2799, !2804}
!5166 = !{!5167, !5168}
!5167 = !DILocalVariable(name: "h", arg: 1, scope: !5163, file: !5068, line: 133, type: !2799)
!5168 = !DILocalVariable(name: "c", arg: 2, scope: !5163, file: !5068, line: 133, type: !2804)
!5169 = !DILocation(line: 0, scope: !5163)
!5170 = !DILocation(line: 136, column: 21, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5163, file: !5068, line: 136, column: 6)
!5172 = !DILocation(line: 136, column: 7, scope: !5171)
!5173 = !DILocation(line: 136, column: 6, scope: !5163)
!5174 = !DILocation(line: 137, column: 3, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5171, file: !5068, line: 136, column: 41)
!5176 = !DILocation(line: 138, column: 22, scope: !5175)
!5177 = !DILocation(line: 138, column: 3, scope: !5175)
!5178 = !DILocation(line: 139, column: 2, scope: !5175)
!5179 = !DILocation(line: 142, column: 21, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5163, file: !5068, line: 142, column: 6)
!5181 = !DILocation(line: 142, column: 7, scope: !5180)
!5182 = !DILocation(line: 142, column: 6, scope: !5163)
!5183 = !DILocation(line: 143, column: 3, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5180, file: !5068, line: 142, column: 40)
!5185 = !DILocation(line: 144, column: 19, scope: !5184)
!5186 = !DILocation(line: 144, column: 3, scope: !5184)
!5187 = !DILocation(line: 145, column: 7, scope: !5184)
!5188 = !DILocation(line: 146, column: 2, scope: !5184)
!5189 = !DILocation(line: 148, column: 2, scope: !5163)
!5190 = !DILocation(line: 149, column: 1, scope: !5163)
!5191 = distinct !DISubprogram(name: "free_list_remove", scope: !5068, file: !5068, line: 60, type: !5164, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5192)
!5192 = !{!5193, !5194, !5195}
!5193 = !DILocalVariable(name: "h", arg: 1, scope: !5191, file: !5068, line: 60, type: !2799)
!5194 = !DILocalVariable(name: "c", arg: 2, scope: !5191, file: !5068, line: 60, type: !2804)
!5195 = !DILocalVariable(name: "bidx", scope: !5196, file: !5068, line: 63, type: !103)
!5196 = distinct !DILexicalBlock(scope: !5197, file: !5068, line: 62, column: 31)
!5197 = distinct !DILexicalBlock(scope: !5191, file: !5068, line: 62, column: 6)
!5198 = !DILocation(line: 0, scope: !5191)
!5199 = !DILocation(line: 63, column: 28, scope: !5196)
!5200 = !{i32 0, i32 32768}
!5201 = !DILocation(line: 63, column: 14, scope: !5196)
!5202 = !DILocation(line: 0, scope: !5196)
!5203 = !DILocation(line: 64, column: 3, scope: !5196)
!5204 = !DILocation(line: 66, column: 1, scope: !5191)
!5205 = distinct !DISubprogram(name: "merge_chunks", scope: !5068, file: !5068, line: 125, type: !5206, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5208)
!5206 = !DISubroutineType(types: !5207)
!5207 = !{null, !2799, !2804, !2804}
!5208 = !{!5209, !5210, !5211, !5212}
!5209 = !DILocalVariable(name: "h", arg: 1, scope: !5205, file: !5068, line: 125, type: !2799)
!5210 = !DILocalVariable(name: "lc", arg: 2, scope: !5205, file: !5068, line: 125, type: !2804)
!5211 = !DILocalVariable(name: "rc", arg: 3, scope: !5205, file: !5068, line: 125, type: !2804)
!5212 = !DILocalVariable(name: "newsz", scope: !5205, file: !5068, line: 127, type: !5213)
!5213 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2786, line: 62, baseType: !111)
!5214 = !DILocation(line: 0, scope: !5205)
!5215 = !DILocation(line: 127, column: 20, scope: !5205)
!5216 = !DILocation(line: 127, column: 40, scope: !5205)
!5217 = !DILocation(line: 127, column: 38, scope: !5205)
!5218 = !DILocation(line: 129, column: 2, scope: !5205)
!5219 = !DILocation(line: 130, column: 25, scope: !5205)
!5220 = !DILocation(line: 130, column: 2, scope: !5205)
!5221 = !DILocation(line: 131, column: 1, scope: !5205)
!5222 = distinct !DISubprogram(name: "free_list_add", scope: !5068, file: !5068, line: 98, type: !5164, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5223)
!5223 = !{!5224, !5225, !5226}
!5224 = !DILocalVariable(name: "h", arg: 1, scope: !5222, file: !5068, line: 98, type: !2799)
!5225 = !DILocalVariable(name: "c", arg: 2, scope: !5222, file: !5068, line: 98, type: !2804)
!5226 = !DILocalVariable(name: "bidx", scope: !5227, file: !5068, line: 101, type: !103)
!5227 = distinct !DILexicalBlock(scope: !5228, file: !5068, line: 100, column: 31)
!5228 = distinct !DILexicalBlock(scope: !5222, file: !5068, line: 100, column: 6)
!5229 = !DILocation(line: 0, scope: !5222)
!5230 = !DILocation(line: 101, column: 28, scope: !5227)
!5231 = !DILocation(line: 101, column: 14, scope: !5227)
!5232 = !DILocation(line: 0, scope: !5227)
!5233 = !DILocation(line: 102, column: 3, scope: !5227)
!5234 = !DILocation(line: 104, column: 1, scope: !5222)
!5235 = distinct !DISubprogram(name: "chunk_size", scope: !2786, file: !2786, line: 142, type: !5236, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5238)
!5236 = !DISubroutineType(types: !5237)
!5237 = !{!5213, !2799, !2804}
!5238 = !{!5239, !5240}
!5239 = !DILocalVariable(name: "h", arg: 1, scope: !5235, file: !2786, line: 142, type: !2799)
!5240 = !DILocalVariable(name: "c", arg: 2, scope: !5235, file: !2786, line: 142, type: !2804)
!5241 = !DILocation(line: 0, scope: !5235)
!5242 = !DILocation(line: 144, column: 9, scope: !5235)
!5243 = !DILocation(line: 144, column: 42, scope: !5235)
!5244 = !DILocation(line: 144, column: 2, scope: !5235)
!5245 = distinct !DISubprogram(name: "bucket_idx", scope: !2786, file: !2786, line: 250, type: !5246, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5248)
!5246 = !DISubroutineType(types: !5247)
!5247 = !{!103, !2799, !5213}
!5248 = !{!5249, !5250, !5251}
!5249 = !DILocalVariable(name: "h", arg: 1, scope: !5245, file: !2786, line: 250, type: !2799)
!5250 = !DILocalVariable(name: "sz", arg: 2, scope: !5245, file: !2786, line: 250, type: !5213)
!5251 = !DILocalVariable(name: "usable_sz", scope: !5245, file: !2786, line: 252, type: !32)
!5252 = !DILocation(line: 0, scope: !5245)
!5253 = !DILocation(line: 252, column: 32, scope: !5245)
!5254 = !DILocation(line: 252, column: 30, scope: !5245)
!5255 = !DILocation(line: 252, column: 50, scope: !5245)
!5256 = !DILocation(line: 253, column: 14, scope: !5245)
!5257 = !{i32 0, i32 33}
!5258 = !DILocation(line: 253, column: 12, scope: !5245)
!5259 = !DILocation(line: 253, column: 2, scope: !5245)
!5260 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5068, file: !5068, line: 68, type: !5261, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5263)
!5261 = !DISubroutineType(types: !5262)
!5262 = !{null, !2799, !2804, !103}
!5263 = !{!5264, !5265, !5266, !5267, !5269, !5272}
!5264 = !DILocalVariable(name: "h", arg: 1, scope: !5260, file: !5068, line: 68, type: !2799)
!5265 = !DILocalVariable(name: "c", arg: 2, scope: !5260, file: !5068, line: 68, type: !2804)
!5266 = !DILocalVariable(name: "bidx", arg: 3, scope: !5260, file: !5068, line: 68, type: !103)
!5267 = !DILocalVariable(name: "b", scope: !5260, file: !5068, line: 70, type: !5268)
!5268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 32)
!5269 = !DILocalVariable(name: "second", scope: !5270, file: !5068, line: 84, type: !2804)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !5068, line: 80, column: 9)
!5271 = distinct !DILexicalBlock(scope: !5260, file: !5068, line: 72, column: 6)
!5272 = !DILocalVariable(name: "first", scope: !5270, file: !5068, line: 85, type: !2804)
!5273 = !DILocation(line: 0, scope: !5260)
!5274 = !DILocation(line: 72, column: 9, scope: !5271)
!5275 = !DILocation(line: 72, column: 14, scope: !5271)
!5276 = !DILocation(line: 72, column: 6, scope: !5260)
!5277 = !DILocation(line: 76, column: 23, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5271, file: !5068, line: 72, column: 21)
!5279 = !DILocation(line: 76, column: 6, scope: !5278)
!5280 = !DILocation(line: 76, column: 20, scope: !5278)
!5281 = !DILocation(line: 77, column: 11, scope: !5278)
!5282 = !DILocation(line: 78, column: 3, scope: !5278)
!5283 = !DILocation(line: 79, column: 3, scope: !5278)
!5284 = !DILocation(line: 80, column: 2, scope: !5278)
!5285 = !DILocation(line: 0, scope: !5270)
!5286 = !DILocation(line: 85, column: 21, scope: !5270)
!5287 = !{i32 0, i32 65536}
!5288 = !DILocation(line: 87, column: 3, scope: !5270)
!5289 = !DILocation(line: 88, column: 3, scope: !5270)
!5290 = !DILocation(line: 89, column: 3, scope: !5270)
!5291 = !DILocation(line: 90, column: 3, scope: !5270)
!5292 = !DILocation(line: 96, column: 1, scope: !5260)
!5293 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2786, file: !2786, line: 187, type: !5206, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5294)
!5294 = !{!5295, !5296, !5297}
!5295 = !DILocalVariable(name: "h", arg: 1, scope: !5293, file: !2786, line: 187, type: !2799)
!5296 = !DILocalVariable(name: "c", arg: 2, scope: !5293, file: !2786, line: 187, type: !2804)
!5297 = !DILocalVariable(name: "prev", arg: 3, scope: !5293, file: !2786, line: 188, type: !2804)
!5298 = !DILocation(line: 0, scope: !5293)
!5299 = !DILocation(line: 190, column: 2, scope: !5293)
!5300 = !DILocation(line: 191, column: 1, scope: !5293)
!5301 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2786, file: !2786, line: 193, type: !5206, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5302)
!5302 = !{!5303, !5304, !5305}
!5303 = !DILocalVariable(name: "h", arg: 1, scope: !5301, file: !2786, line: 193, type: !2799)
!5304 = !DILocalVariable(name: "c", arg: 2, scope: !5301, file: !2786, line: 193, type: !2804)
!5305 = !DILocalVariable(name: "next", arg: 3, scope: !5301, file: !2786, line: 194, type: !2804)
!5306 = !DILocation(line: 0, scope: !5301)
!5307 = !DILocation(line: 196, column: 2, scope: !5301)
!5308 = !DILocation(line: 197, column: 1, scope: !5301)
!5309 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2786, file: !2786, line: 177, type: !5129, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5310)
!5310 = !{!5311, !5312}
!5311 = !DILocalVariable(name: "h", arg: 1, scope: !5309, file: !2786, line: 177, type: !2799)
!5312 = !DILocalVariable(name: "c", arg: 2, scope: !5309, file: !2786, line: 177, type: !2804)
!5313 = !DILocation(line: 0, scope: !5309)
!5314 = !DILocation(line: 179, column: 9, scope: !5309)
!5315 = !DILocation(line: 179, column: 2, scope: !5309)
!5316 = distinct !DISubprogram(name: "chunk_field", scope: !2786, file: !2786, line: 107, type: !5317, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5319)
!5317 = !DISubroutineType(types: !5318)
!5318 = !{!2804, !2799, !2804, !2785}
!5319 = !{!5320, !5321, !5322, !5323, !5324}
!5320 = !DILocalVariable(name: "h", arg: 1, scope: !5316, file: !2786, line: 107, type: !2799)
!5321 = !DILocalVariable(name: "c", arg: 2, scope: !5316, file: !2786, line: 107, type: !2804)
!5322 = !DILocalVariable(name: "f", arg: 3, scope: !5316, file: !2786, line: 108, type: !2785)
!5323 = !DILocalVariable(name: "buf", scope: !5316, file: !2786, line: 110, type: !2793)
!5324 = !DILocalVariable(name: "cmem", scope: !5316, file: !2786, line: 111, type: !102)
!5325 = !DILocation(line: 0, scope: !5316)
!5326 = !DILocation(line: 110, column: 22, scope: !5316)
!5327 = !DILocation(line: 111, column: 15, scope: !5316)
!5328 = !DILocation(line: 116, column: 11, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5330, file: !2786, line: 115, column: 9)
!5330 = distinct !DILexicalBlock(scope: !5316, file: !2786, line: 113, column: 6)
!5331 = !DILocation(line: 116, column: 10, scope: !5329)
!5332 = !DILocation(line: 118, column: 1, scope: !5316)
!5333 = distinct !DISubprogram(name: "chunk_buf", scope: !2786, file: !2786, line: 101, type: !5334, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5336)
!5334 = !DISubroutineType(types: !5335)
!5335 = !{!2793, !2799}
!5336 = !{!5337}
!5337 = !DILocalVariable(name: "h", arg: 1, scope: !5333, file: !2786, line: 101, type: !2799)
!5338 = !DILocation(line: 0, scope: !5333)
!5339 = !DILocation(line: 104, column: 9, scope: !5333)
!5340 = !DILocation(line: 104, column: 2, scope: !5333)
!5341 = distinct !DISubprogram(name: "chunk_set", scope: !2786, file: !2786, line: 120, type: !5342, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5344)
!5342 = !DISubroutineType(types: !5343)
!5343 = !{null, !2799, !2804, !2785, !2804}
!5344 = !{!5345, !5346, !5347, !5348, !5349, !5350}
!5345 = !DILocalVariable(name: "h", arg: 1, scope: !5341, file: !2786, line: 120, type: !2799)
!5346 = !DILocalVariable(name: "c", arg: 2, scope: !5341, file: !2786, line: 120, type: !2804)
!5347 = !DILocalVariable(name: "f", arg: 3, scope: !5341, file: !2786, line: 121, type: !2785)
!5348 = !DILocalVariable(name: "val", arg: 4, scope: !5341, file: !2786, line: 121, type: !2804)
!5349 = !DILocalVariable(name: "buf", scope: !5341, file: !2786, line: 125, type: !2793)
!5350 = !DILocalVariable(name: "cmem", scope: !5341, file: !2786, line: 126, type: !102)
!5351 = !DILocation(line: 0, scope: !5341)
!5352 = !DILocation(line: 125, column: 22, scope: !5341)
!5353 = !DILocation(line: 126, column: 15, scope: !5341)
!5354 = !DILocation(line: 133, column: 27, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5356, file: !2786, line: 131, column: 9)
!5356 = distinct !DILexicalBlock(scope: !5341, file: !2786, line: 128, column: 6)
!5357 = !DILocation(line: 133, column: 4, scope: !5355)
!5358 = !DILocation(line: 133, column: 3, scope: !5355)
!5359 = !DILocation(line: 133, column: 25, scope: !5355)
!5360 = !DILocation(line: 135, column: 1, scope: !5341)
!5361 = distinct !DISubprogram(name: "min_chunk_size", scope: !2786, file: !2786, line: 240, type: !5362, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5364)
!5362 = !DISubroutineType(types: !5363)
!5363 = !{!5213, !2799}
!5364 = !{!5365}
!5365 = !DILocalVariable(name: "h", arg: 1, scope: !5361, file: !2786, line: 240, type: !2799)
!5366 = !DILocation(line: 0, scope: !5361)
!5367 = !DILocation(line: 242, column: 9, scope: !5361)
!5368 = !DILocation(line: 242, column: 2, scope: !5361)
!5369 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2786, file: !2786, line: 235, type: !5370, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5372)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{!5213, !2799, !156}
!5372 = !{!5373, !5374}
!5373 = !DILocalVariable(name: "h", arg: 1, scope: !5369, file: !2786, line: 235, type: !2799)
!5374 = !DILocalVariable(name: "bytes", arg: 2, scope: !5369, file: !2786, line: 235, type: !156)
!5375 = !DILocation(line: 0, scope: !5369)
!5376 = !DILocation(line: 237, column: 39, scope: !5369)
!5377 = !DILocation(line: 237, column: 9, scope: !5369)
!5378 = !DILocation(line: 237, column: 2, scope: !5369)
!5379 = distinct !DISubprogram(name: "chunksz", scope: !2786, file: !2786, line: 230, type: !5380, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5382)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{!5213, !156}
!5382 = !{!5383}
!5383 = !DILocalVariable(name: "bytes", arg: 1, scope: !5379, file: !2786, line: 230, type: !156)
!5384 = !DILocation(line: 0, scope: !5379)
!5385 = !DILocation(line: 232, column: 29, scope: !5379)
!5386 = !DILocation(line: 232, column: 35, scope: !5379)
!5387 = !DILocation(line: 232, column: 2, scope: !5379)
!5388 = distinct !DISubprogram(name: "set_chunk_size", scope: !2786, file: !2786, line: 172, type: !5389, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5391)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{null, !2799, !2804, !5213}
!5391 = !{!5392, !5393, !5394}
!5392 = !DILocalVariable(name: "h", arg: 1, scope: !5388, file: !2786, line: 172, type: !2799)
!5393 = !DILocalVariable(name: "c", arg: 2, scope: !5388, file: !2786, line: 172, type: !2804)
!5394 = !DILocalVariable(name: "size", arg: 3, scope: !5388, file: !2786, line: 172, type: !5213)
!5395 = !DILocation(line: 0, scope: !5388)
!5396 = !DILocation(line: 174, column: 38, scope: !5388)
!5397 = !DILocation(line: 174, column: 2, scope: !5388)
!5398 = !DILocation(line: 175, column: 1, scope: !5388)
!5399 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2786, file: !2786, line: 209, type: !5389, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5400)
!5400 = !{!5401, !5402, !5403}
!5401 = !DILocalVariable(name: "h", arg: 1, scope: !5399, file: !2786, line: 209, type: !2799)
!5402 = !DILocalVariable(name: "c", arg: 2, scope: !5399, file: !2786, line: 209, type: !2804)
!5403 = !DILocalVariable(name: "size", arg: 3, scope: !5399, file: !2786, line: 210, type: !5213)
!5404 = !DILocation(line: 0, scope: !5399)
!5405 = !DILocation(line: 212, column: 2, scope: !5399)
!5406 = !DILocation(line: 213, column: 1, scope: !5399)
!5407 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5068, file: !5068, line: 34, type: !5261, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5408)
!5408 = !{!5409, !5410, !5411, !5412, !5413, !5416}
!5409 = !DILocalVariable(name: "h", arg: 1, scope: !5407, file: !5068, line: 34, type: !2799)
!5410 = !DILocalVariable(name: "c", arg: 2, scope: !5407, file: !5068, line: 34, type: !2804)
!5411 = !DILocalVariable(name: "bidx", arg: 3, scope: !5407, file: !5068, line: 34, type: !103)
!5412 = !DILocalVariable(name: "b", scope: !5407, file: !5068, line: 36, type: !5268)
!5413 = !DILocalVariable(name: "first", scope: !5414, file: !5068, line: 47, type: !2804)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !5068, line: 46, column: 9)
!5415 = distinct !DILexicalBlock(scope: !5407, file: !5068, line: 42, column: 6)
!5416 = !DILocalVariable(name: "second", scope: !5414, file: !5068, line: 48, type: !2804)
!5417 = !DILocation(line: 0, scope: !5407)
!5418 = !DILocation(line: 36, column: 29, scope: !5407)
!5419 = !DILocation(line: 42, column: 6, scope: !5415)
!5420 = !DILocation(line: 42, column: 28, scope: !5415)
!5421 = !DILocation(line: 42, column: 6, scope: !5407)
!5422 = !DILocation(line: 44, column: 24, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5415, file: !5068, line: 42, column: 34)
!5424 = !DILocation(line: 44, column: 23, scope: !5423)
!5425 = !DILocation(line: 44, column: 6, scope: !5423)
!5426 = !DILocation(line: 44, column: 20, scope: !5423)
!5427 = !DILocation(line: 45, column: 6, scope: !5423)
!5428 = !DILocation(line: 45, column: 11, scope: !5423)
!5429 = !DILocation(line: 46, column: 2, scope: !5423)
!5430 = !DILocation(line: 47, column: 21, scope: !5414)
!5431 = !DILocation(line: 0, scope: !5414)
!5432 = !DILocation(line: 50, column: 6, scope: !5414)
!5433 = !DILocation(line: 50, column: 11, scope: !5414)
!5434 = !DILocation(line: 51, column: 3, scope: !5414)
!5435 = !DILocation(line: 52, column: 3, scope: !5414)
!5436 = !DILocation(line: 58, column: 1, scope: !5407)
!5437 = distinct !DISubprogram(name: "next_free_chunk", scope: !2786, file: !2786, line: 182, type: !5129, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5438)
!5438 = !{!5439, !5440}
!5439 = !DILocalVariable(name: "h", arg: 1, scope: !5437, file: !2786, line: 182, type: !2799)
!5440 = !DILocalVariable(name: "c", arg: 2, scope: !5437, file: !2786, line: 182, type: !2804)
!5441 = !DILocation(line: 0, scope: !5437)
!5442 = !DILocation(line: 184, column: 9, scope: !5437)
!5443 = !DILocation(line: 184, column: 2, scope: !5437)
!5444 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5068, file: !5068, line: 200, type: !5445, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5447)
!5445 = !DISubroutineType(types: !5446)
!5446 = !{!156, !5071, !102}
!5447 = !{!5448, !5449, !5450, !5451, !5452, !5453, !5454}
!5448 = !DILocalVariable(name: "heap", arg: 1, scope: !5444, file: !5068, line: 200, type: !5071)
!5449 = !DILocalVariable(name: "mem", arg: 2, scope: !5444, file: !5068, line: 200, type: !102)
!5450 = !DILocalVariable(name: "h", scope: !5444, file: !5068, line: 202, type: !2799)
!5451 = !DILocalVariable(name: "c", scope: !5444, file: !5068, line: 203, type: !2804)
!5452 = !DILocalVariable(name: "addr", scope: !5444, file: !5068, line: 204, type: !156)
!5453 = !DILocalVariable(name: "chunk_base", scope: !5444, file: !5068, line: 205, type: !156)
!5454 = !DILocalVariable(name: "chunk_sz", scope: !5444, file: !5068, line: 206, type: !156)
!5455 = !DILocation(line: 0, scope: !5444)
!5456 = !DILocation(line: 202, column: 27, scope: !5444)
!5457 = !DILocation(line: 203, column: 16, scope: !5444)
!5458 = !DILocation(line: 204, column: 16, scope: !5444)
!5459 = !DILocation(line: 205, column: 31, scope: !5444)
!5460 = !DILocation(line: 205, column: 22, scope: !5444)
!5461 = !DILocation(line: 206, column: 20, scope: !5444)
!5462 = !DILocation(line: 206, column: 37, scope: !5444)
!5463 = !DILocation(line: 208, column: 26, scope: !5444)
!5464 = !DILocation(line: 208, column: 18, scope: !5444)
!5465 = !DILocation(line: 208, column: 2, scope: !5444)
!5466 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5068, file: !5068, line: 263, type: !5467, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5469)
!5467 = !DISubroutineType(types: !5468)
!5468 = !{!102, !5071, !156}
!5469 = !{!5470, !5471, !5472, !5473, !5474, !5475}
!5470 = !DILocalVariable(name: "heap", arg: 1, scope: !5466, file: !5068, line: 263, type: !5071)
!5471 = !DILocalVariable(name: "bytes", arg: 2, scope: !5466, file: !5068, line: 263, type: !156)
!5472 = !DILocalVariable(name: "h", scope: !5466, file: !5068, line: 265, type: !2799)
!5473 = !DILocalVariable(name: "mem", scope: !5466, file: !5068, line: 266, type: !102)
!5474 = !DILocalVariable(name: "chunk_sz", scope: !5466, file: !5068, line: 272, type: !5213)
!5475 = !DILocalVariable(name: "c", scope: !5466, file: !5068, line: 273, type: !2804)
!5476 = !DILocation(line: 0, scope: !5466)
!5477 = !DILocation(line: 265, column: 27, scope: !5466)
!5478 = !DILocation(line: 268, column: 12, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5466, file: !5068, line: 268, column: 6)
!5480 = !DILocation(line: 268, column: 18, scope: !5479)
!5481 = !DILocation(line: 268, column: 21, scope: !5479)
!5482 = !DILocation(line: 268, column: 6, scope: !5466)
!5483 = !DILocation(line: 272, column: 23, scope: !5466)
!5484 = !DILocation(line: 273, column: 16, scope: !5466)
!5485 = !DILocation(line: 274, column: 8, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5466, file: !5068, line: 274, column: 6)
!5487 = !DILocation(line: 274, column: 6, scope: !5466)
!5488 = !DILocation(line: 279, column: 6, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5466, file: !5068, line: 279, column: 6)
!5490 = !DILocation(line: 279, column: 23, scope: !5489)
!5491 = !DILocation(line: 279, column: 6, scope: !5466)
!5492 = !DILocation(line: 280, column: 24, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5489, file: !5068, line: 279, column: 35)
!5494 = !DILocation(line: 280, column: 3, scope: !5493)
!5495 = !DILocation(line: 281, column: 3, scope: !5493)
!5496 = !DILocation(line: 282, column: 2, scope: !5493)
!5497 = !DILocation(line: 284, column: 2, scope: !5466)
!5498 = !DILocation(line: 286, column: 8, scope: !5466)
!5499 = !DILocation(line: 298, column: 2, scope: !5466)
!5500 = !DILocation(line: 299, column: 1, scope: !5466)
!5501 = distinct !DISubprogram(name: "size_too_big", scope: !2786, file: !2786, line: 256, type: !5502, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5504)
!5502 = !DISubroutineType(types: !5503)
!5503 = !{!122, !2799, !156}
!5504 = !{!5505, !5506}
!5505 = !DILocalVariable(name: "h", arg: 1, scope: !5501, file: !2786, line: 256, type: !2799)
!5506 = !DILocalVariable(name: "bytes", arg: 2, scope: !5501, file: !2786, line: 256, type: !156)
!5507 = !DILocation(line: 0, scope: !5501)
!5508 = !DILocation(line: 262, column: 16, scope: !5501)
!5509 = !DILocation(line: 262, column: 36, scope: !5501)
!5510 = !DILocation(line: 262, column: 30, scope: !5501)
!5511 = !DILocation(line: 262, column: 2, scope: !5501)
!5512 = distinct !DISubprogram(name: "alloc_chunk", scope: !5068, file: !5068, line: 211, type: !5513, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5515)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{!2804, !2799, !5213}
!5515 = !{!5516, !5517, !5518, !5519, !5520, !5523, !5524, !5526, !5527, !5530}
!5516 = !DILocalVariable(name: "h", arg: 1, scope: !5512, file: !5068, line: 211, type: !2799)
!5517 = !DILocalVariable(name: "sz", arg: 2, scope: !5512, file: !5068, line: 211, type: !5213)
!5518 = !DILocalVariable(name: "bi", scope: !5512, file: !5068, line: 213, type: !103)
!5519 = !DILocalVariable(name: "b", scope: !5512, file: !5068, line: 214, type: !5268)
!5520 = !DILocalVariable(name: "first", scope: !5521, file: !5068, line: 233, type: !2804)
!5521 = distinct !DILexicalBlock(scope: !5522, file: !5068, line: 232, column: 15)
!5522 = distinct !DILexicalBlock(scope: !5512, file: !5068, line: 232, column: 6)
!5523 = !DILocalVariable(name: "i", scope: !5521, file: !5068, line: 234, type: !103)
!5524 = !DILocalVariable(name: "c", scope: !5525, file: !5068, line: 236, type: !2804)
!5525 = distinct !DILexicalBlock(scope: !5521, file: !5068, line: 235, column: 6)
!5526 = !DILocalVariable(name: "bmask", scope: !5512, file: !5068, line: 249, type: !111)
!5527 = !DILocalVariable(name: "minbucket", scope: !5528, file: !5068, line: 252, type: !103)
!5528 = distinct !DILexicalBlock(scope: !5529, file: !5068, line: 251, column: 19)
!5529 = distinct !DILexicalBlock(scope: !5512, file: !5068, line: 251, column: 6)
!5530 = !DILocalVariable(name: "c", scope: !5528, file: !5068, line: 253, type: !2804)
!5531 = !DILocation(line: 0, scope: !5512)
!5532 = !DILocation(line: 213, column: 11, scope: !5512)
!5533 = !DILocation(line: 232, column: 9, scope: !5522)
!5534 = !DILocation(line: 232, column: 6, scope: !5522)
!5535 = !DILocation(line: 232, column: 6, scope: !5512)
!5536 = !DILocation(line: 236, column: 21, scope: !5525)
!5537 = !DILocation(line: 0, scope: !5521)
!5538 = !DILocation(line: 0, scope: !5525)
!5539 = !DILocation(line: 237, column: 8, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5525, file: !5068, line: 237, column: 8)
!5541 = !DILocation(line: 237, column: 25, scope: !5540)
!5542 = !DILocation(line: 237, column: 8, scope: !5525)
!5543 = !DILocation(line: 238, column: 5, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5540, file: !5068, line: 237, column: 32)
!5545 = !DILocation(line: 241, column: 14, scope: !5525)
!5546 = !DILocation(line: 241, column: 12, scope: !5525)
!5547 = !DILocation(line: 243, column: 12, scope: !5521)
!5548 = !DILocation(line: 243, column: 16, scope: !5521)
!5549 = distinct !{!5549, !5550, !5551}
!5550 = !DILocation(line: 235, column: 3, scope: !5521)
!5551 = !DILocation(line: 243, column: 35, scope: !5521)
!5552 = !DILocation(line: 249, column: 22, scope: !5512)
!5553 = !DILocation(line: 249, column: 39, scope: !5512)
!5554 = !DILocation(line: 249, column: 36, scope: !5512)
!5555 = !DILocation(line: 251, column: 12, scope: !5529)
!5556 = !DILocation(line: 251, column: 6, scope: !5512)
!5557 = !DILocation(line: 252, column: 19, scope: !5528)
!5558 = !DILocation(line: 0, scope: !5528)
!5559 = !DILocation(line: 253, column: 39, scope: !5528)
!5560 = !DILocation(line: 255, column: 3, scope: !5528)
!5561 = !DILocation(line: 261, column: 1, scope: !5512)
!5562 = distinct !DISubprogram(name: "split_chunks", scope: !5068, file: !5068, line: 109, type: !5206, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5563)
!5563 = !{!5564, !5565, !5566, !5567, !5568, !5569}
!5564 = !DILocalVariable(name: "h", arg: 1, scope: !5562, file: !5068, line: 109, type: !2799)
!5565 = !DILocalVariable(name: "lc", arg: 2, scope: !5562, file: !5068, line: 109, type: !2804)
!5566 = !DILocalVariable(name: "rc", arg: 3, scope: !5562, file: !5068, line: 109, type: !2804)
!5567 = !DILocalVariable(name: "sz0", scope: !5562, file: !5068, line: 114, type: !5213)
!5568 = !DILocalVariable(name: "lsz", scope: !5562, file: !5068, line: 115, type: !5213)
!5569 = !DILocalVariable(name: "rsz", scope: !5562, file: !5068, line: 116, type: !5213)
!5570 = !DILocation(line: 0, scope: !5562)
!5571 = !DILocation(line: 114, column: 18, scope: !5562)
!5572 = !DILocation(line: 115, column: 21, scope: !5562)
!5573 = !DILocation(line: 116, column: 22, scope: !5562)
!5574 = !DILocation(line: 118, column: 2, scope: !5562)
!5575 = !DILocation(line: 119, column: 2, scope: !5562)
!5576 = !DILocation(line: 120, column: 2, scope: !5562)
!5577 = !DILocation(line: 121, column: 25, scope: !5562)
!5578 = !DILocation(line: 121, column: 2, scope: !5562)
!5579 = !DILocation(line: 122, column: 1, scope: !5562)
!5580 = distinct !DISubprogram(name: "chunk_mem", scope: !5068, file: !5068, line: 24, type: !5581, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5583)
!5581 = !DISubroutineType(types: !5582)
!5582 = !{!102, !2799, !2804}
!5583 = !{!5584, !5585, !5586, !5587}
!5584 = !DILocalVariable(name: "h", arg: 1, scope: !5580, file: !5068, line: 24, type: !2799)
!5585 = !DILocalVariable(name: "c", arg: 2, scope: !5580, file: !5068, line: 24, type: !2804)
!5586 = !DILocalVariable(name: "buf", scope: !5580, file: !5068, line: 26, type: !2793)
!5587 = !DILocalVariable(name: "ret", scope: !5580, file: !5068, line: 27, type: !538)
!5588 = !DILocation(line: 0, scope: !5580)
!5589 = !DILocation(line: 26, column: 22, scope: !5580)
!5590 = !DILocation(line: 27, column: 38, scope: !5580)
!5591 = !DILocation(line: 31, column: 2, scope: !5580)
!5592 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5068, file: !5068, line: 301, type: !5593, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5595)
!5593 = !DISubroutineType(types: !5594)
!5594 = !{!102, !5071, !156, !156}
!5595 = !{!5596, !5597, !5598, !5599, !5600, !5601, !5602, !5603, !5604, !5605, !5606, !5607}
!5596 = !DILocalVariable(name: "heap", arg: 1, scope: !5592, file: !5068, line: 301, type: !5071)
!5597 = !DILocalVariable(name: "align", arg: 2, scope: !5592, file: !5068, line: 301, type: !156)
!5598 = !DILocalVariable(name: "bytes", arg: 3, scope: !5592, file: !5068, line: 301, type: !156)
!5599 = !DILocalVariable(name: "h", scope: !5592, file: !5068, line: 303, type: !2799)
!5600 = !DILocalVariable(name: "gap", scope: !5592, file: !5068, line: 304, type: !156)
!5601 = !DILocalVariable(name: "rew", scope: !5592, file: !5068, line: 304, type: !156)
!5602 = !DILocalVariable(name: "padded_sz", scope: !5592, file: !5068, line: 335, type: !5213)
!5603 = !DILocalVariable(name: "c0", scope: !5592, file: !5068, line: 336, type: !2804)
!5604 = !DILocalVariable(name: "mem", scope: !5592, file: !5068, line: 341, type: !538)
!5605 = !DILocalVariable(name: "end", scope: !5592, file: !5068, line: 345, type: !2793)
!5606 = !DILocalVariable(name: "c", scope: !5592, file: !5068, line: 348, type: !2804)
!5607 = !DILocalVariable(name: "c_end", scope: !5592, file: !5068, line: 349, type: !2804)
!5608 = !DILocation(line: 0, scope: !5592)
!5609 = !DILocation(line: 303, column: 27, scope: !5592)
!5610 = !DILocation(line: 313, column: 16, scope: !5592)
!5611 = !DILocation(line: 313, column: 14, scope: !5592)
!5612 = !DILocation(line: 314, column: 12, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5592, file: !5068, line: 314, column: 6)
!5614 = !DILocation(line: 314, column: 6, scope: !5592)
!5615 = !DILocation(line: 315, column: 9, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5613, file: !5068, line: 314, column: 20)
!5617 = !DILocation(line: 316, column: 9, scope: !5616)
!5618 = !DILocation(line: 318, column: 13, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5620, file: !5068, line: 318, column: 7)
!5620 = distinct !DILexicalBlock(scope: !5613, file: !5068, line: 317, column: 9)
!5621 = !DILocation(line: 318, column: 7, scope: !5620)
!5622 = !DILocation(line: 319, column: 11, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5619, file: !5068, line: 318, column: 39)
!5624 = !DILocation(line: 319, column: 4, scope: !5623)
!5625 = !DILocation(line: 0, scope: !5613)
!5626 = !DILocation(line: 324, column: 2, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5628, file: !5068, line: 324, column: 2)
!5628 = distinct !DILexicalBlock(scope: !5592, file: !5068, line: 324, column: 2)
!5629 = !DILocation(line: 324, column: 2, scope: !5628)
!5630 = !DILocation(line: 324, column: 2, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5627, file: !5068, line: 324, column: 2)
!5632 = !DILocation(line: 326, column: 12, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5592, file: !5068, line: 326, column: 6)
!5634 = !DILocation(line: 326, column: 17, scope: !5633)
!5635 = !DILocation(line: 326, column: 20, scope: !5633)
!5636 = !DILocation(line: 326, column: 6, scope: !5592)
!5637 = !DILocation(line: 335, column: 50, scope: !5592)
!5638 = !DILocation(line: 335, column: 58, scope: !5592)
!5639 = !DILocation(line: 335, column: 24, scope: !5592)
!5640 = !DILocation(line: 336, column: 17, scope: !5592)
!5641 = !DILocation(line: 338, column: 9, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5592, file: !5068, line: 338, column: 6)
!5643 = !DILocation(line: 338, column: 6, scope: !5592)
!5644 = !DILocation(line: 341, column: 17, scope: !5592)
!5645 = !DILocation(line: 344, column: 20, scope: !5592)
!5646 = !DILocation(line: 344, column: 8, scope: !5592)
!5647 = !DILocation(line: 344, column: 47, scope: !5592)
!5648 = !DILocation(line: 345, column: 39, scope: !5592)
!5649 = !DILocation(line: 348, column: 16, scope: !5592)
!5650 = !DILocation(line: 349, column: 26, scope: !5592)
!5651 = !DILocation(line: 349, column: 24, scope: !5592)
!5652 = !DILocation(line: 353, column: 8, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5592, file: !5068, line: 353, column: 6)
!5654 = !DILocation(line: 353, column: 6, scope: !5592)
!5655 = !DILocation(line: 354, column: 3, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5653, file: !5068, line: 353, column: 14)
!5657 = !DILocation(line: 355, column: 3, scope: !5656)
!5658 = !DILocation(line: 356, column: 2, scope: !5656)
!5659 = !DILocation(line: 359, column: 6, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5592, file: !5068, line: 359, column: 6)
!5661 = !DILocation(line: 359, column: 24, scope: !5660)
!5662 = !DILocation(line: 359, column: 6, scope: !5592)
!5663 = !DILocation(line: 360, column: 3, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5660, file: !5068, line: 359, column: 33)
!5665 = !DILocation(line: 361, column: 3, scope: !5664)
!5666 = !DILocation(line: 362, column: 2, scope: !5664)
!5667 = !DILocation(line: 364, column: 2, scope: !5592)
!5668 = !DILocation(line: 377, column: 1, scope: !5592)
!5669 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5068, file: !5068, line: 379, type: !5670, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5672)
!5670 = !DISubroutineType(types: !5671)
!5671 = !{!102, !5071, !102, !156, !156}
!5672 = !{!5673, !5674, !5675, !5676, !5677, !5678, !5679, !5680, !5681, !5682, !5688, !5689}
!5673 = !DILocalVariable(name: "heap", arg: 1, scope: !5669, file: !5068, line: 379, type: !5071)
!5674 = !DILocalVariable(name: "ptr", arg: 2, scope: !5669, file: !5068, line: 379, type: !102)
!5675 = !DILocalVariable(name: "align", arg: 3, scope: !5669, file: !5068, line: 380, type: !156)
!5676 = !DILocalVariable(name: "bytes", arg: 4, scope: !5669, file: !5068, line: 380, type: !156)
!5677 = !DILocalVariable(name: "h", scope: !5669, file: !5068, line: 382, type: !2799)
!5678 = !DILocalVariable(name: "c", scope: !5669, file: !5068, line: 399, type: !2804)
!5679 = !DILocalVariable(name: "rc", scope: !5669, file: !5068, line: 400, type: !2804)
!5680 = !DILocalVariable(name: "align_gap", scope: !5669, file: !5068, line: 401, type: !156)
!5681 = !DILocalVariable(name: "chunks_need", scope: !5669, file: !5068, line: 402, type: !5213)
!5682 = !DILocalVariable(name: "split_size", scope: !5683, file: !5068, line: 435, type: !5213)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !5068, line: 433, column: 61)
!5684 = distinct !DILexicalBlock(scope: !5685, file: !5068, line: 432, column: 13)
!5685 = distinct !DILexicalBlock(scope: !5686, file: !5068, line: 409, column: 13)
!5686 = distinct !DILexicalBlock(scope: !5687, file: !5068, line: 406, column: 13)
!5687 = distinct !DILexicalBlock(scope: !5669, file: !5068, line: 404, column: 6)
!5688 = !DILocalVariable(name: "ptr2", scope: !5669, file: !5068, line: 474, type: !102)
!5689 = !DILocalVariable(name: "prev_size", scope: !5690, file: !5068, line: 477, type: !156)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !5068, line: 476, column: 20)
!5691 = distinct !DILexicalBlock(scope: !5669, file: !5068, line: 476, column: 6)
!5692 = !DILocation(line: 0, scope: !5669)
!5693 = !DILocation(line: 382, column: 27, scope: !5669)
!5694 = !DILocation(line: 385, column: 10, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5669, file: !5068, line: 385, column: 6)
!5696 = !DILocation(line: 385, column: 6, scope: !5669)
!5697 = !DILocation(line: 386, column: 10, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5695, file: !5068, line: 385, column: 19)
!5699 = !DILocation(line: 386, column: 3, scope: !5698)
!5700 = !DILocation(line: 388, column: 12, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5669, file: !5068, line: 388, column: 6)
!5702 = !DILocation(line: 388, column: 6, scope: !5669)
!5703 = !DILocation(line: 389, column: 3, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5701, file: !5068, line: 388, column: 18)
!5705 = !DILocation(line: 390, column: 3, scope: !5704)
!5706 = !DILocation(line: 393, column: 2, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5708, file: !5068, line: 393, column: 2)
!5708 = distinct !DILexicalBlock(scope: !5669, file: !5068, line: 393, column: 2)
!5709 = !DILocation(line: 393, column: 2, scope: !5708)
!5710 = !DILocation(line: 393, column: 2, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5707, file: !5068, line: 393, column: 2)
!5712 = !DILocation(line: 395, column: 6, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5669, file: !5068, line: 395, column: 6)
!5714 = !DILocation(line: 395, column: 6, scope: !5669)
!5715 = !DILocation(line: 399, column: 16, scope: !5669)
!5716 = !DILocation(line: 400, column: 17, scope: !5669)
!5717 = !DILocation(line: 401, column: 49, scope: !5669)
!5718 = !DILocation(line: 401, column: 36, scope: !5669)
!5719 = !DILocation(line: 402, column: 52, scope: !5669)
!5720 = !DILocation(line: 402, column: 26, scope: !5669)
!5721 = !DILocation(line: 404, column: 6, scope: !5687)
!5722 = !DILocation(line: 404, column: 12, scope: !5687)
!5723 = !DILocation(line: 406, column: 13, scope: !5686)
!5724 = !DILocation(line: 406, column: 30, scope: !5686)
!5725 = !DILocation(line: 406, column: 13, scope: !5687)
!5726 = !DILocation(line: 409, column: 30, scope: !5685)
!5727 = !DILocation(line: 409, column: 13, scope: !5686)
!5728 = !DILocation(line: 420, column: 24, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5685, file: !5068, line: 409, column: 45)
!5730 = !DILocation(line: 420, column: 3, scope: !5729)
!5731 = !DILocation(line: 421, column: 3, scope: !5729)
!5732 = !DILocation(line: 422, column: 3, scope: !5729)
!5733 = !DILocation(line: 431, column: 3, scope: !5729)
!5734 = !DILocation(line: 432, column: 14, scope: !5684)
!5735 = !DILocation(line: 432, column: 32, scope: !5684)
!5736 = !DILocation(line: 433, column: 26, scope: !5684)
!5737 = !DILocation(line: 433, column: 24, scope: !5684)
!5738 = !DILocation(line: 433, column: 44, scope: !5684)
!5739 = !DILocation(line: 432, column: 13, scope: !5685)
!5740 = !DILocation(line: 435, column: 38, scope: !5683)
!5741 = !DILocation(line: 0, scope: !5683)
!5742 = !DILocation(line: 445, column: 3, scope: !5683)
!5743 = !DILocation(line: 447, column: 20, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5683, file: !5068, line: 447, column: 7)
!5745 = !DILocation(line: 447, column: 18, scope: !5744)
!5746 = !DILocation(line: 447, column: 7, scope: !5683)
!5747 = !DILocation(line: 448, column: 27, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5744, file: !5068, line: 447, column: 39)
!5749 = !DILocation(line: 448, column: 4, scope: !5748)
!5750 = !DILocation(line: 449, column: 4, scope: !5748)
!5751 = !DILocation(line: 450, column: 3, scope: !5748)
!5752 = !DILocation(line: 452, column: 3, scope: !5683)
!5753 = !DILocation(line: 453, column: 3, scope: !5683)
!5754 = !DILocation(line: 474, column: 15, scope: !5669)
!5755 = !DILocation(line: 476, column: 11, scope: !5691)
!5756 = !DILocation(line: 476, column: 6, scope: !5669)
!5757 = !DILocation(line: 477, column: 42, scope: !5690)
!5758 = !DILocation(line: 477, column: 22, scope: !5690)
!5759 = !DILocation(line: 477, column: 60, scope: !5690)
!5760 = !DILocation(line: 0, scope: !5690)
!5761 = !DILocation(line: 479, column: 21, scope: !5690)
!5762 = !DILocation(line: 479, column: 3, scope: !5690)
!5763 = !DILocation(line: 480, column: 3, scope: !5690)
!5764 = !DILocation(line: 481, column: 2, scope: !5690)
!5765 = !DILocation(line: 483, column: 1, scope: !5669)
!5766 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2786, file: !2786, line: 245, type: !5767, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5769)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!156, !2799, !5213}
!5769 = !{!5770, !5771}
!5770 = !DILocalVariable(name: "h", arg: 1, scope: !5766, file: !2786, line: 245, type: !2799)
!5771 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5766, file: !2786, line: 245, type: !5213)
!5772 = !DILocation(line: 0, scope: !5766)
!5773 = !DILocation(line: 247, column: 20, scope: !5766)
!5774 = !DILocation(line: 247, column: 33, scope: !5766)
!5775 = !DILocation(line: 247, column: 2, scope: !5766)
!5776 = distinct !DISubprogram(name: "sys_heap_init", scope: !5068, file: !5068, line: 485, type: !5777, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !5779)
!5777 = !DISubroutineType(types: !5778)
!5778 = !{null, !5071, !102, !156}
!5779 = !{!5780, !5781, !5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789}
!5780 = !DILocalVariable(name: "heap", arg: 1, scope: !5776, file: !5068, line: 485, type: !5071)
!5781 = !DILocalVariable(name: "mem", arg: 2, scope: !5776, file: !5068, line: 485, type: !102)
!5782 = !DILocalVariable(name: "bytes", arg: 3, scope: !5776, file: !5068, line: 485, type: !156)
!5783 = !DILocalVariable(name: "addr", scope: !5776, file: !5068, line: 502, type: !22)
!5784 = !DILocalVariable(name: "end", scope: !5776, file: !5068, line: 503, type: !22)
!5785 = !DILocalVariable(name: "heap_sz", scope: !5776, file: !5068, line: 504, type: !5213)
!5786 = !DILocalVariable(name: "h", scope: !5776, file: !5068, line: 509, type: !2799)
!5787 = !DILocalVariable(name: "nb_buckets", scope: !5776, file: !5068, line: 520, type: !103)
!5788 = !DILocalVariable(name: "chunk0_size", scope: !5776, file: !5068, line: 521, type: !5213)
!5789 = !DILocalVariable(name: "i", scope: !5790, file: !5068, line: 526, type: !103)
!5790 = distinct !DILexicalBlock(scope: !5776, file: !5068, line: 526, column: 2)
!5791 = !DILocation(line: 0, scope: !5776)
!5792 = !DILocation(line: 491, column: 3, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5794, file: !5068, line: 491, column: 3)
!5794 = distinct !DILexicalBlock(scope: !5795, file: !5068, line: 491, column: 3)
!5795 = distinct !DILexicalBlock(scope: !5796, file: !5068, line: 489, column: 46)
!5796 = distinct !DILexicalBlock(scope: !5776, file: !5068, line: 489, column: 6)
!5797 = !DILocation(line: 491, column: 3, scope: !5794)
!5798 = !DILocation(line: 491, column: 3, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5793, file: !5068, line: 491, column: 3)
!5800 = !DILocation(line: 498, column: 2, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !5068, line: 498, column: 2)
!5802 = distinct !DILexicalBlock(scope: !5776, file: !5068, line: 498, column: 2)
!5803 = !DILocation(line: 498, column: 2, scope: !5802)
!5804 = !DILocation(line: 498, column: 2, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5801, file: !5068, line: 498, column: 2)
!5806 = !DILocation(line: 499, column: 8, scope: !5776)
!5807 = !DILocation(line: 502, column: 19, scope: !5776)
!5808 = !DILocation(line: 503, column: 18, scope: !5776)
!5809 = !DILocation(line: 504, column: 27, scope: !5776)
!5810 = !DILocation(line: 504, column: 35, scope: !5776)
!5811 = !DILocation(line: 507, column: 2, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5813, file: !5068, line: 507, column: 2)
!5813 = distinct !DILexicalBlock(scope: !5776, file: !5068, line: 507, column: 2)
!5814 = !DILocation(line: 507, column: 2, scope: !5813)
!5815 = !DILocation(line: 507, column: 2, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5812, file: !5068, line: 507, column: 2)
!5817 = !DILocation(line: 509, column: 21, scope: !5776)
!5818 = !DILocation(line: 510, column: 8, scope: !5776)
!5819 = !DILocation(line: 510, column: 13, scope: !5776)
!5820 = !DILocation(line: 511, column: 5, scope: !5776)
!5821 = !DILocation(line: 511, column: 15, scope: !5776)
!5822 = !DILocation(line: 512, column: 5, scope: !5776)
!5823 = !DILocation(line: 512, column: 19, scope: !5776)
!5824 = !DILocation(line: 520, column: 19, scope: !5776)
!5825 = !DILocation(line: 522, column: 21, scope: !5776)
!5826 = !DILocation(line: 521, column: 56, scope: !5776)
!5827 = !DILocation(line: 521, column: 26, scope: !5776)
!5828 = !DILocation(line: 524, column: 2, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5830, file: !5068, line: 524, column: 2)
!5830 = distinct !DILexicalBlock(scope: !5776, file: !5068, line: 524, column: 2)
!5831 = !DILocation(line: 524, column: 2, scope: !5830)
!5832 = !DILocation(line: 0, scope: !5790)
!5833 = !DILocation(line: 526, column: 20, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5790, file: !5068, line: 526, column: 2)
!5835 = !DILocation(line: 526, column: 2, scope: !5790)
!5836 = !DILocation(line: 524, column: 2, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5829, file: !5068, line: 524, column: 2)
!5838 = !DILocation(line: 531, column: 2, scope: !5776)
!5839 = !DILocation(line: 532, column: 2, scope: !5776)
!5840 = !DILocation(line: 533, column: 2, scope: !5776)
!5841 = !DILocation(line: 536, column: 41, scope: !5776)
!5842 = !DILocation(line: 536, column: 2, scope: !5776)
!5843 = !DILocation(line: 537, column: 2, scope: !5776)
!5844 = !DILocation(line: 540, column: 2, scope: !5776)
!5845 = !DILocation(line: 541, column: 2, scope: !5776)
!5846 = !DILocation(line: 542, column: 2, scope: !5776)
!5847 = !DILocation(line: 544, column: 2, scope: !5776)
!5848 = !DILocation(line: 545, column: 1, scope: !5776)
!5849 = !DILocation(line: 527, column: 17, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5834, file: !5068, line: 526, column: 39)
!5851 = !DILocation(line: 527, column: 22, scope: !5850)
!5852 = !DILocation(line: 526, column: 35, scope: !5834)
!5853 = distinct !{!5853, !5835, !5854}
!5854 = !DILocation(line: 528, column: 2, scope: !5790)
!5855 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2819, file: !2819, line: 1338, type: !5856, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !5864)
!5856 = !DISubroutineType(types: !5857)
!5857 = !{!103, !4229, !102, !108, !5858, !111}
!5858 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3847, line: 99, baseType: !5859)
!5859 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3847, line: 40, baseType: !5860)
!5860 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2819, baseType: !5861)
!5861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5862)
!5862 = !{!5863}
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5861, file: !2819, baseType: !102, size: 32)
!5864 = !{!5865, !5866, !5867, !5868, !5869, !5870, !5874, !5875, !5876, !5878, !5883, !5926, !5929, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5941, !5942, !5943, !5947, !5950, !5952, !5955, !5956, !5957, !5962, !5968, !5971, !5975, !5981, !5985, !5988, !5990, !5993}
!5865 = !DILocalVariable(name: "out", arg: 1, scope: !5855, file: !2819, line: 1338, type: !4229)
!5866 = !DILocalVariable(name: "ctx", arg: 2, scope: !5855, file: !2819, line: 1338, type: !102)
!5867 = !DILocalVariable(name: "fp", arg: 3, scope: !5855, file: !2819, line: 1338, type: !108)
!5868 = !DILocalVariable(name: "ap", arg: 4, scope: !5855, file: !2819, line: 1339, type: !5858)
!5869 = !DILocalVariable(name: "flags", arg: 5, scope: !5855, file: !2819, line: 1339, type: !111)
!5870 = !DILocalVariable(name: "buf", scope: !5855, file: !2819, line: 1341, type: !5871)
!5871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 176, elements: !5872)
!5872 = !{!5873}
!5873 = !DISubrange(count: 22)
!5874 = !DILocalVariable(name: "count", scope: !5855, file: !2819, line: 1342, type: !156)
!5875 = !DILocalVariable(name: "sint", scope: !5855, file: !2819, line: 1343, type: !2838)
!5876 = !DILocalVariable(name: "tagged_ap", scope: !5855, file: !2819, line: 1345, type: !5877)
!5877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !122)
!5878 = !DILocalVariable(name: "rc", scope: !5879, file: !2819, line: 1377, type: !103)
!5879 = distinct !DILexicalBlock(scope: !5880, file: !2819, line: 1377, column: 4)
!5880 = distinct !DILexicalBlock(scope: !5881, file: !2819, line: 1376, column: 19)
!5881 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1376, column: 7)
!5882 = distinct !DILexicalBlock(scope: !5855, file: !2819, line: 1375, column: 19)
!5883 = !DILocalVariable(name: "state", scope: !5882, file: !2819, line: 1395, type: !5884)
!5884 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5855, file: !2819, line: 1392, size: 192, elements: !5885)
!5885 = !{!5886, !5894}
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5884, file: !2819, line: 1393, baseType: !5887, size: 64)
!5887 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2819, line: 166, size: 64, elements: !5888)
!5888 = !{!5889, !5890, !5891, !5892, !5893}
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5887, file: !2819, line: 168, baseType: !2838, size: 64)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5887, file: !2819, line: 171, baseType: !2841, size: 64)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5887, file: !2819, line: 174, baseType: !724, size: 64)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5887, file: !2819, line: 177, baseType: !722, size: 64)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5887, file: !2819, line: 180, baseType: !102, size: 32)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5884, file: !2819, line: 1394, baseType: !5895, size: 96, offset: 64)
!5895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2819, line: 189, size: 96, elements: !5896)
!5896 = !{!5897, !5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912, !5913, !5914, !5915, !5916, !5921}
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5895, file: !2819, line: 191, baseType: !122, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5895, file: !2819, line: 194, baseType: !122, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5895, file: !2819, line: 197, baseType: !122, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5895, file: !2819, line: 200, baseType: !122, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5895, file: !2819, line: 203, baseType: !122, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5895, file: !2819, line: 206, baseType: !122, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5895, file: !2819, line: 209, baseType: !122, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5895, file: !2819, line: 212, baseType: !122, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5895, file: !2819, line: 219, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5895, file: !2819, line: 222, baseType: !122, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5895, file: !2819, line: 229, baseType: !122, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5895, file: !2819, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5895, file: !2819, line: 238, baseType: !122, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5895, file: !2819, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5895, file: !2819, line: 244, baseType: !122, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5895, file: !2819, line: 247, baseType: !122, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5895, file: !2819, line: 252, baseType: !122, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5895, file: !2819, line: 257, baseType: !122, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5895, file: !2819, line: 260, baseType: !167, size: 8, offset: 24)
!5916 = !DIDerivedType(tag: DW_TAG_member, scope: !5895, file: !2819, line: 262, baseType: !5917, size: 32, offset: 32)
!5917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5895, file: !2819, line: 262, size: 32, elements: !5918)
!5918 = !{!5919, !5920}
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5917, file: !2819, line: 267, baseType: !103, size: 32)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5917, file: !2819, line: 289, baseType: !103, size: 32)
!5921 = !DIDerivedType(tag: DW_TAG_member, scope: !5895, file: !2819, line: 292, baseType: !5922, size: 32, offset: 64)
!5922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5895, file: !2819, line: 292, size: 32, elements: !5923)
!5923 = !{!5924, !5925}
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5922, file: !2819, line: 297, baseType: !103, size: 32)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5922, file: !2819, line: 306, baseType: !103, size: 32)
!5926 = !DILocalVariable(name: "conv", scope: !5882, file: !2819, line: 1400, type: !5927)
!5927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5928)
!5928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5895, size: 32)
!5929 = !DILocalVariable(name: "value", scope: !5882, file: !2819, line: 1401, type: !5930)
!5930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5931)
!5931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5887, size: 32)
!5932 = !DILocalVariable(name: "sp", scope: !5882, file: !2819, line: 1402, type: !108)
!5933 = !DILocalVariable(name: "width", scope: !5882, file: !2819, line: 1403, type: !103)
!5934 = !DILocalVariable(name: "precision", scope: !5882, file: !2819, line: 1404, type: !103)
!5935 = !DILocalVariable(name: "bps", scope: !5882, file: !2819, line: 1405, type: !108)
!5936 = !DILocalVariable(name: "bpe", scope: !5882, file: !2819, line: 1406, type: !108)
!5937 = !DILocalVariable(name: "sign", scope: !5882, file: !2819, line: 1407, type: !110)
!5938 = !DILocalVariable(name: "arg", scope: !5939, file: !2819, line: 1432, type: !103)
!5939 = distinct !DILexicalBlock(scope: !5940, file: !2819, line: 1431, column: 24)
!5940 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1431, column: 7)
!5941 = !DILocalVariable(name: "specifier_cat", scope: !5882, file: !2819, line: 1468, type: !2818)
!5942 = !DILocalVariable(name: "length_mod", scope: !5882, file: !2819, line: 1470, type: !2826)
!5943 = !DILocalVariable(name: "rc", scope: !5944, file: !2819, line: 1575, type: !103)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !2819, line: 1575, column: 4)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !2819, line: 1574, column: 43)
!5946 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1574, column: 7)
!5947 = !DILocalVariable(name: "rc", scope: !5948, file: !2819, line: 1584, type: !103)
!5948 = distinct !DILexicalBlock(scope: !5949, file: !2819, line: 1584, column: 4)
!5949 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1582, column: 28)
!5950 = !DILocalVariable(name: "len", scope: !5951, file: !2819, line: 1589, type: !156)
!5951 = distinct !DILexicalBlock(scope: !5949, file: !2819, line: 1586, column: 13)
!5952 = !DILocalVariable(name: "len", scope: !5953, file: !2819, line: 1641, type: !156)
!5953 = distinct !DILexicalBlock(scope: !5954, file: !2819, line: 1640, column: 24)
!5954 = distinct !DILexicalBlock(scope: !5949, file: !2819, line: 1640, column: 8)
!5955 = !DILocalVariable(name: "nj_len", scope: !5882, file: !2819, line: 1722, type: !156)
!5956 = !DILocalVariable(name: "pad_len", scope: !5882, file: !2819, line: 1723, type: !103)
!5957 = !DILocalVariable(name: "pad", scope: !5958, file: !2819, line: 1751, type: !110)
!5958 = distinct !DILexicalBlock(scope: !5959, file: !2819, line: 1750, column: 26)
!5959 = distinct !DILexicalBlock(scope: !5960, file: !2819, line: 1750, column: 8)
!5960 = distinct !DILexicalBlock(scope: !5961, file: !2819, line: 1747, column: 18)
!5961 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1747, column: 7)
!5962 = !DILocalVariable(name: "rc", scope: !5963, file: !2819, line: 1758, type: !103)
!5963 = distinct !DILexicalBlock(scope: !5964, file: !2819, line: 1758, column: 7)
!5964 = distinct !DILexicalBlock(scope: !5965, file: !2819, line: 1757, column: 21)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !2819, line: 1757, column: 10)
!5966 = distinct !DILexicalBlock(scope: !5967, file: !2819, line: 1756, column: 26)
!5967 = distinct !DILexicalBlock(scope: !5958, file: !2819, line: 1756, column: 9)
!5968 = !DILocalVariable(name: "rc", scope: !5969, file: !2819, line: 1765, type: !103)
!5969 = distinct !DILexicalBlock(scope: !5970, file: !2819, line: 1765, column: 6)
!5970 = distinct !DILexicalBlock(scope: !5958, file: !2819, line: 1764, column: 25)
!5971 = !DILocalVariable(name: "rc", scope: !5972, file: !2819, line: 1774, type: !103)
!5972 = distinct !DILexicalBlock(scope: !5973, file: !2819, line: 1774, column: 4)
!5973 = distinct !DILexicalBlock(scope: !5974, file: !2819, line: 1773, column: 18)
!5974 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1773, column: 7)
!5975 = !DILocalVariable(name: "rc", scope: !5976, file: !2819, line: 1819, type: !103)
!5976 = distinct !DILexicalBlock(scope: !5977, file: !2819, line: 1819, column: 5)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !2819, line: 1818, column: 44)
!5978 = distinct !DILexicalBlock(scope: !5979, file: !2819, line: 1818, column: 8)
!5979 = distinct !DILexicalBlock(scope: !5980, file: !2819, line: 1817, column: 10)
!5980 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1777, column: 7)
!5981 = !DILocalVariable(name: "rc", scope: !5982, file: !2819, line: 1823, type: !103)
!5982 = distinct !DILexicalBlock(scope: !5983, file: !2819, line: 1823, column: 5)
!5983 = distinct !DILexicalBlock(scope: !5984, file: !2819, line: 1822, column: 26)
!5984 = distinct !DILexicalBlock(scope: !5979, file: !2819, line: 1822, column: 8)
!5985 = !DILocalVariable(name: "rc", scope: !5986, file: !2819, line: 1828, type: !103)
!5986 = distinct !DILexicalBlock(scope: !5987, file: !2819, line: 1828, column: 5)
!5987 = distinct !DILexicalBlock(scope: !5979, file: !2819, line: 1827, column: 26)
!5988 = !DILocalVariable(name: "rc", scope: !5989, file: !2819, line: 1831, type: !103)
!5989 = distinct !DILexicalBlock(scope: !5979, file: !2819, line: 1831, column: 4)
!5990 = !DILocalVariable(name: "rc", scope: !5991, file: !2819, line: 1836, type: !103)
!5991 = distinct !DILexicalBlock(scope: !5992, file: !2819, line: 1836, column: 4)
!5992 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1835, column: 21)
!5993 = !DILabel(scope: !5949, name: "prec_int_pad0", file: !2819, line: 1634)
!5994 = !DILocation(line: 0, scope: !5855)
!5995 = !DILocation(line: 1341, column: 2, scope: !5855)
!5996 = !DILocation(line: 1341, column: 7, scope: !5855)
!5997 = !DILocation(line: 1375, column: 2, scope: !5855)
!5998 = !DILocation(line: 1342, column: 9, scope: !5855)
!5999 = !DILocation(line: 1375, column: 9, scope: !5855)
!6000 = !DILocation(line: 1377, column: 4, scope: !5879)
!6001 = !DILocation(line: 0, scope: !5879)
!6002 = !DILocation(line: 1377, column: 4, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5879, file: !2819, line: 1377, column: 4)
!6004 = distinct !{!6004, !5997, !6005}
!6005 = !DILocation(line: 1839, column: 2, scope: !5855)
!6006 = !DILocation(line: 1392, column: 3, scope: !5882)
!6007 = !DILocation(line: 1395, column: 5, scope: !5882)
!6008 = !DILocation(line: 0, scope: !5882)
!6009 = !DILocation(line: 1409, column: 8, scope: !5882)
!6010 = !DILocation(line: 1414, column: 13, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1414, column: 7)
!6012 = !DILocation(line: 1414, column: 7, scope: !5882)
!6013 = !DILocation(line: 1415, column: 12, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6011, file: !2819, line: 1414, column: 25)
!6015 = !DILocation(line: 1417, column: 14, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6014, file: !2819, line: 1417, column: 8)
!6017 = !DILocation(line: 1417, column: 8, scope: !6014)
!6018 = !DILocation(line: 1418, column: 21, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6016, file: !2819, line: 1417, column: 19)
!6020 = !DILocation(line: 1419, column: 13, scope: !6019)
!6021 = !DILocation(line: 1420, column: 4, scope: !6019)
!6022 = !DILocation(line: 1421, column: 20, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6011, file: !2819, line: 1421, column: 14)
!6024 = !DILocation(line: 1421, column: 14, scope: !6011)
!6025 = !DILocation(line: 1431, column: 13, scope: !5940)
!6026 = !DILocation(line: 1431, column: 7, scope: !5882)
!6027 = !DILocation(line: 1432, column: 14, scope: !5939)
!6028 = !DILocation(line: 0, scope: !5939)
!6029 = !DILocation(line: 1434, column: 12, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !5939, file: !2819, line: 1434, column: 8)
!6031 = !DILocation(line: 1434, column: 8, scope: !5939)
!6032 = !DILocation(line: 1435, column: 24, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6030, file: !2819, line: 1434, column: 17)
!6034 = !DILocation(line: 1436, column: 4, scope: !6033)
!6035 = !DILocation(line: 1439, column: 20, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !5940, file: !2819, line: 1439, column: 14)
!6037 = !DILocation(line: 1439, column: 14, scope: !5940)
!6038 = !DILocation(line: 1469, column: 37, scope: !5882)
!6039 = !DILocation(line: 1448, column: 20, scope: !5882)
!6040 = !DILocation(line: 1449, column: 22, scope: !5882)
!6041 = !DILocation(line: 1471, column: 34, scope: !5882)
!6042 = !DILocation(line: 1478, column: 7, scope: !5882)
!6043 = !DILocation(line: 1479, column: 4, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !2819, line: 1478, column: 40)
!6045 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1478, column: 7)
!6046 = !DILocation(line: 1484, column: 19, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6044, file: !2819, line: 1479, column: 24)
!6048 = !DILocation(line: 1484, column: 17, scope: !6047)
!6049 = !DILocation(line: 1485, column: 5, scope: !6047)
!6050 = !DILocation(line: 1492, column: 20, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6052, file: !2819, line: 1491, column: 12)
!6052 = distinct !DILexicalBlock(scope: !6047, file: !2819, line: 1487, column: 9)
!6053 = !DILocation(line: 1492, column: 18, scope: !6051)
!6054 = !DILocation(line: 1494, column: 5, scope: !6047)
!6055 = !DILocation(line: 1497, column: 23, scope: !6047)
!6056 = !DILocation(line: 1496, column: 17, scope: !6047)
!6057 = !DILocation(line: 1498, column: 5, scope: !6047)
!6058 = !DILocation(line: 1501, column: 23, scope: !6047)
!6059 = !DILocation(line: 1500, column: 17, scope: !6047)
!6060 = !DILocation(line: 1502, column: 5, scope: !6047)
!6061 = !DILocation(line: 1513, column: 23, scope: !6047)
!6062 = !DILocation(line: 1513, column: 6, scope: !6047)
!6063 = !DILocation(line: 1512, column: 17, scope: !6047)
!6064 = !DILocation(line: 1514, column: 5, scope: !6047)
!6065 = !DILocation(line: 0, scope: !6047)
!6066 = !DILocation(line: 1516, column: 8, scope: !6044)
!6067 = !DILocation(line: 1517, column: 19, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !2819, line: 1516, column: 33)
!6069 = distinct !DILexicalBlock(scope: !6044, file: !2819, line: 1516, column: 8)
!6070 = !DILocation(line: 1517, column: 17, scope: !6068)
!6071 = !DILocation(line: 1518, column: 4, scope: !6068)
!6072 = !DILocation(line: 1519, column: 19, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6074, file: !2819, line: 1518, column: 39)
!6074 = distinct !DILexicalBlock(scope: !6069, file: !2819, line: 1518, column: 15)
!6075 = !DILocation(line: 1519, column: 17, scope: !6073)
!6076 = !DILocation(line: 1520, column: 4, scope: !6073)
!6077 = !DILocation(line: 1522, column: 4, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !2819, line: 1521, column: 47)
!6079 = distinct !DILexicalBlock(scope: !6045, file: !2819, line: 1521, column: 14)
!6080 = !DILocation(line: 1527, column: 19, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6078, file: !2819, line: 1522, column: 24)
!6082 = !DILocation(line: 1527, column: 17, scope: !6081)
!6083 = !DILocation(line: 1528, column: 5, scope: !6081)
!6084 = !DILocation(line: 0, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6081, file: !2819, line: 1530, column: 9)
!6086 = !DILocation(line: 1540, column: 23, scope: !6081)
!6087 = !DILocation(line: 1539, column: 17, scope: !6081)
!6088 = !DILocation(line: 1542, column: 5, scope: !6081)
!6089 = !DILocation(line: 1545, column: 23, scope: !6081)
!6090 = !DILocation(line: 1544, column: 17, scope: !6081)
!6091 = !DILocation(line: 1547, column: 5, scope: !6081)
!6092 = !DILocation(line: 1551, column: 23, scope: !6081)
!6093 = !DILocation(line: 1551, column: 6, scope: !6081)
!6094 = !DILocation(line: 1550, column: 17, scope: !6081)
!6095 = !DILocation(line: 1552, column: 5, scope: !6081)
!6096 = !DILocation(line: 0, scope: !6081)
!6097 = !DILocation(line: 1554, column: 8, scope: !6078)
!6098 = !DILocation(line: 1555, column: 19, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !2819, line: 1554, column: 33)
!6100 = distinct !DILexicalBlock(scope: !6078, file: !2819, line: 1554, column: 8)
!6101 = !DILocation(line: 1555, column: 17, scope: !6099)
!6102 = !DILocation(line: 1556, column: 4, scope: !6099)
!6103 = !DILocation(line: 1557, column: 19, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !2819, line: 1556, column: 39)
!6105 = distinct !DILexicalBlock(scope: !6100, file: !2819, line: 1556, column: 15)
!6106 = !DILocation(line: 1557, column: 17, scope: !6104)
!6107 = !DILocation(line: 1558, column: 4, scope: !6104)
!6108 = !DILocation(line: 0, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6110, file: !2819, line: 1560, column: 8)
!6110 = distinct !DILexicalBlock(scope: !6111, file: !2819, line: 1559, column: 45)
!6111 = distinct !DILexicalBlock(scope: !6079, file: !2819, line: 1559, column: 14)
!6112 = !DILocation(line: 1566, column: 17, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !2819, line: 1565, column: 46)
!6114 = distinct !DILexicalBlock(scope: !6111, file: !2819, line: 1565, column: 14)
!6115 = !DILocation(line: 1566, column: 15, scope: !6113)
!6116 = !DILocation(line: 1567, column: 3, scope: !6113)
!6117 = !DILocation(line: 1574, column: 21, scope: !5946)
!6118 = !DILocation(line: 1575, column: 4, scope: !5944)
!6119 = !DILocation(line: 0, scope: !5944)
!6120 = !DILocation(line: 1575, column: 4, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !5944, file: !2819, line: 1575, column: 4)
!6122 = !DILocation(line: 1582, column: 17, scope: !5882)
!6123 = !DILocation(line: 1582, column: 3, scope: !5882)
!6124 = !DILocation(line: 1584, column: 4, scope: !5948)
!6125 = !DILocation(line: 0, scope: !5948)
!6126 = !DILocation(line: 1584, column: 4, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !5948, file: !2819, line: 1584, column: 4)
!6128 = !DILocation(line: 1587, column: 31, scope: !5951)
!6129 = !DILocation(line: 1591, column: 18, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !5951, file: !2819, line: 1591, column: 8)
!6131 = !DILocation(line: 1591, column: 8, scope: !5951)
!6132 = !DILocation(line: 1592, column: 11, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6130, file: !2819, line: 1591, column: 24)
!6134 = !DILocation(line: 0, scope: !5951)
!6135 = !DILocation(line: 1593, column: 4, scope: !6133)
!6136 = !DILocation(line: 1594, column: 11, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6130, file: !2819, line: 1593, column: 11)
!6138 = !DILocation(line: 1604, column: 51, scope: !5949)
!6139 = !DILocation(line: 1604, column: 13, scope: !5949)
!6140 = !DILocation(line: 1604, column: 11, scope: !5949)
!6141 = !DILocation(line: 1606, column: 4, scope: !5949)
!6142 = !DILocation(line: 1609, column: 14, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !5949, file: !2819, line: 1609, column: 8)
!6144 = !DILocation(line: 1609, column: 8, scope: !5949)
!6145 = !DILocation(line: 1619, column: 18, scope: !5949)
!6146 = !DILocation(line: 1620, column: 13, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !5949, file: !2819, line: 1620, column: 8)
!6148 = !DILocation(line: 1620, column: 8, scope: !5949)
!6149 = !DILocation(line: 1622, column: 36, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6147, file: !2819, line: 1620, column: 18)
!6151 = !DILocation(line: 1622, column: 17, scope: !6150)
!6152 = !DILocation(line: 1623, column: 4, scope: !6150)
!6153 = !DILocation(line: 1632, column: 29, scope: !5949)
!6154 = !DILocation(line: 1632, column: 10, scope: !5949)
!6155 = !DILocation(line: 1632, column: 4, scope: !5949)
!6156 = !DILocation(line: 1407, column: 8, scope: !5882)
!6157 = !DILocation(line: 0, scope: !5949)
!6158 = !DILocation(line: 1634, column: 3, scope: !5949)
!6159 = !DILocation(line: 1640, column: 18, scope: !5954)
!6160 = !DILocation(line: 1640, column: 8, scope: !5949)
!6161 = !DILocation(line: 1729, column: 13, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1729, column: 7)
!6163 = !DILocation(line: 1641, column: 22, scope: !5953)
!6164 = !DILocation(line: 0, scope: !5953)
!6165 = !DILocation(line: 1646, column: 21, scope: !5953)
!6166 = !DILocation(line: 1649, column: 13, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !5953, file: !2819, line: 1649, column: 9)
!6168 = !DILocation(line: 1649, column: 9, scope: !5953)
!6169 = !DILocation(line: 1650, column: 35, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6167, file: !2819, line: 1649, column: 34)
!6171 = !DILocation(line: 1650, column: 23, scope: !6170)
!6172 = !DILocation(line: 1651, column: 5, scope: !6170)
!6173 = !DILocation(line: 1660, column: 15, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !5949, file: !2819, line: 1660, column: 8)
!6175 = !DILocation(line: 1660, column: 19, scope: !6174)
!6176 = !DILocation(line: 1660, column: 8, scope: !5949)
!6177 = !DILocation(line: 1661, column: 23, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6174, file: !2819, line: 1660, column: 28)
!6179 = !DILocation(line: 1661, column: 11, scope: !6178)
!6180 = !DILocation(line: 1665, column: 22, scope: !6178)
!6181 = !DILocation(line: 1666, column: 21, scope: !6178)
!6182 = !DILocation(line: 1668, column: 5, scope: !6178)
!6183 = !DILocation(line: 1677, column: 30, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !2819, line: 1676, column: 49)
!6185 = distinct !DILexicalBlock(scope: !5949, file: !2819, line: 1676, column: 8)
!6186 = !DILocation(line: 1677, column: 5, scope: !6184)
!6187 = !DILocation(line: 1680, column: 4, scope: !5949)
!6188 = !DILocation(line: 0, scope: !6130)
!6189 = !DILocation(line: 1597, column: 14, scope: !5951)
!6190 = !DILocation(line: 1699, column: 11, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1699, column: 7)
!6192 = !DILocation(line: 1699, column: 7, scope: !5882)
!6193 = !DILocation(line: 1725, column: 7, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1725, column: 7)
!6195 = !DILocation(line: 1725, column: 12, scope: !6194)
!6196 = !DILocation(line: 1747, column: 13, scope: !5961)
!6197 = !DILocation(line: 1747, column: 7, scope: !5882)
!6198 = !DILocation(line: 1722, column: 24, scope: !5882)
!6199 = !DILocation(line: 1725, column: 7, scope: !5882)
!6200 = !DILocation(line: 1729, column: 7, scope: !5882)
!6201 = !DILocation(line: 1736, column: 13, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !5882, file: !2819, line: 1736, column: 7)
!6203 = !DILocation(line: 1735, column: 19, scope: !5882)
!6204 = !DILocation(line: 1736, column: 7, scope: !5882)
!6205 = !DILocation(line: 1748, column: 10, scope: !5960)
!6206 = !DILocation(line: 1750, column: 15, scope: !5959)
!6207 = !DILocation(line: 1750, column: 8, scope: !5960)
!6208 = !DILocation(line: 0, scope: !5958)
!6209 = !DILocation(line: 1756, column: 15, scope: !5967)
!6210 = !DILocation(line: 1756, column: 9, scope: !5958)
!6211 = !DILocation(line: 1758, column: 7, scope: !5963)
!6212 = !DILocation(line: 0, scope: !5963)
!6213 = !DILocation(line: 1758, column: 7, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !5963, file: !2819, line: 1758, column: 7)
!6215 = !DILocation(line: 1764, column: 5, scope: !5958)
!6216 = !DILocation(line: 0, scope: !5960)
!6217 = !DILocation(line: 1764, column: 20, scope: !5958)
!6218 = !DILocation(line: 1764, column: 17, scope: !5958)
!6219 = !DILocation(line: 1765, column: 6, scope: !5969)
!6220 = !DILocation(line: 0, scope: !5969)
!6221 = !DILocation(line: 1765, column: 6, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !5969, file: !2819, line: 1765, column: 6)
!6223 = distinct !{!6223, !6215, !6224}
!6224 = !DILocation(line: 1766, column: 5, scope: !5958)
!6225 = !DILocation(line: 1773, column: 12, scope: !5974)
!6226 = !DILocation(line: 1773, column: 7, scope: !5882)
!6227 = !DILocation(line: 1773, column: 7, scope: !5974)
!6228 = !DILocation(line: 1774, column: 4, scope: !5972)
!6229 = !DILocation(line: 0, scope: !5972)
!6230 = !DILocation(line: 1774, column: 4, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !5972, file: !2819, line: 1774, column: 4)
!6232 = !DILocation(line: 1818, column: 8, scope: !5978)
!6233 = !DILocation(line: 1818, column: 27, scope: !5978)
!6234 = !DILocation(line: 1818, column: 25, scope: !5978)
!6235 = !DILocation(line: 1818, column: 8, scope: !5979)
!6236 = !DILocation(line: 1819, column: 5, scope: !5976)
!6237 = !DILocation(line: 0, scope: !5976)
!6238 = !DILocation(line: 1819, column: 5, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !5976, file: !2819, line: 1819, column: 5)
!6240 = !DILocation(line: 1822, column: 14, scope: !5984)
!6241 = !DILocation(line: 1822, column: 8, scope: !5979)
!6242 = !DILocation(line: 1823, column: 5, scope: !5982)
!6243 = !DILocation(line: 0, scope: !5982)
!6244 = !DILocation(line: 1823, column: 5, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !5982, file: !2819, line: 1823, column: 5)
!6246 = !DILocation(line: 1826, column: 20, scope: !5979)
!6247 = !DILocation(line: 1827, column: 4, scope: !5979)
!6248 = !DILocation(line: 0, scope: !5979)
!6249 = !DILocation(line: 1827, column: 21, scope: !5979)
!6250 = !DILocation(line: 1827, column: 18, scope: !5979)
!6251 = !DILocation(line: 1828, column: 5, scope: !5986)
!6252 = !DILocation(line: 0, scope: !5986)
!6253 = !DILocation(line: 1828, column: 5, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !5986, file: !2819, line: 1828, column: 5)
!6255 = distinct !{!6255, !6247, !6256}
!6256 = !DILocation(line: 1829, column: 4, scope: !5979)
!6257 = !DILocation(line: 1831, column: 4, scope: !5989)
!6258 = !DILocation(line: 0, scope: !5989)
!6259 = !DILocation(line: 1831, column: 4, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !5989, file: !2819, line: 1831, column: 4)
!6261 = !DILocation(line: 1835, column: 16, scope: !5882)
!6262 = !DILocation(line: 1835, column: 3, scope: !5882)
!6263 = !DILocation(line: 1836, column: 4, scope: !5991)
!6264 = !DILocation(line: 0, scope: !5991)
!6265 = !DILocation(line: 1836, column: 4, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !5991, file: !2819, line: 1836, column: 4)
!6267 = !DILocation(line: 1837, column: 4, scope: !5992)
!6268 = distinct !{!6268, !6262, !6269}
!6269 = !DILocation(line: 1838, column: 3, scope: !5882)
!6270 = !DILocation(line: 1844, column: 1, scope: !5855)
!6271 = distinct !DISubprogram(name: "extract_conversion", scope: !2819, file: !2819, line: 642, type: !6272, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6274)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!108, !5928, !108}
!6274 = !{!6275, !6276}
!6275 = !DILocalVariable(name: "conv", arg: 1, scope: !6271, file: !2819, line: 642, type: !5928)
!6276 = !DILocalVariable(name: "sp", arg: 2, scope: !6271, file: !2819, line: 643, type: !108)
!6277 = !DILocation(line: 0, scope: !6271)
!6278 = !DILocation(line: 645, column: 10, scope: !6271)
!6279 = !DILocation(line: 653, column: 2, scope: !6271)
!6280 = !DILocation(line: 654, column: 6, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6271, file: !2819, line: 654, column: 6)
!6282 = !DILocation(line: 654, column: 10, scope: !6281)
!6283 = !DILocation(line: 654, column: 6, scope: !6271)
!6284 = !DILocation(line: 655, column: 24, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6281, file: !2819, line: 654, column: 18)
!6286 = !DILocation(line: 655, column: 19, scope: !6285)
!6287 = !DILocation(line: 656, column: 3, scope: !6285)
!6288 = !DILocation(line: 659, column: 7, scope: !6271)
!6289 = !DILocation(line: 660, column: 7, scope: !6271)
!6290 = !DILocation(line: 661, column: 7, scope: !6271)
!6291 = !DILocation(line: 662, column: 7, scope: !6271)
!6292 = !DILocation(line: 663, column: 7, scope: !6271)
!6293 = !DILocation(line: 665, column: 2, scope: !6271)
!6294 = !DILocation(line: 666, column: 1, scope: !6271)
!6295 = distinct !DISubprogram(name: "outs", scope: !2819, file: !2819, line: 1319, type: !6296, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6298)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!103, !4229, !102, !108, !108}
!6298 = !{!6299, !6300, !6301, !6302, !6303, !6304}
!6299 = !DILocalVariable(name: "out", arg: 1, scope: !6295, file: !2819, line: 1319, type: !4229)
!6300 = !DILocalVariable(name: "ctx", arg: 2, scope: !6295, file: !2819, line: 1320, type: !102)
!6301 = !DILocalVariable(name: "sp", arg: 3, scope: !6295, file: !2819, line: 1321, type: !108)
!6302 = !DILocalVariable(name: "ep", arg: 4, scope: !6295, file: !2819, line: 1322, type: !108)
!6303 = !DILocalVariable(name: "count", scope: !6295, file: !2819, line: 1324, type: !156)
!6304 = !DILocalVariable(name: "rc", scope: !6305, file: !2819, line: 1327, type: !103)
!6305 = distinct !DILexicalBlock(scope: !6295, file: !2819, line: 1326, column: 45)
!6306 = !DILocation(line: 0, scope: !6295)
!6307 = !DILocation(line: 1326, column: 2, scope: !6295)
!6308 = !DILocation(line: 1324, column: 9, scope: !6295)
!6309 = !DILocation(line: 1326, column: 13, scope: !6295)
!6310 = !DILocation(line: 1326, column: 19, scope: !6295)
!6311 = !DILocation(line: 1327, column: 21, scope: !6305)
!6312 = !DILocation(line: 1326, column: 36, scope: !6295)
!6313 = !DILocation(line: 1326, column: 39, scope: !6295)
!6314 = !DILocation(line: 1327, column: 24, scope: !6305)
!6315 = !DILocation(line: 1327, column: 16, scope: !6305)
!6316 = !DILocation(line: 1327, column: 12, scope: !6305)
!6317 = !DILocation(line: 0, scope: !6305)
!6318 = !DILocation(line: 1329, column: 10, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6305, file: !2819, line: 1329, column: 7)
!6320 = !DILocation(line: 1329, column: 7, scope: !6305)
!6321 = distinct !{!6321, !6307, !6322}
!6322 = !DILocation(line: 1333, column: 2, scope: !6295)
!6323 = !DILocation(line: 1336, column: 1, scope: !6295)
!6324 = distinct !DISubprogram(name: "encode_uint", scope: !2819, file: !2819, line: 788, type: !6325, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6327)
!6325 = !DISubroutineType(types: !6326)
!6326 = !{!160, !2841, !5928, !160, !108}
!6327 = !{!6328, !6329, !6330, !6331, !6332, !6333, !6335, !6336}
!6328 = !DILocalVariable(name: "value", arg: 1, scope: !6324, file: !2819, line: 788, type: !2841)
!6329 = !DILocalVariable(name: "conv", arg: 2, scope: !6324, file: !2819, line: 789, type: !5928)
!6330 = !DILocalVariable(name: "bps", arg: 3, scope: !6324, file: !2819, line: 790, type: !160)
!6331 = !DILocalVariable(name: "bpe", arg: 4, scope: !6324, file: !2819, line: 791, type: !108)
!6332 = !DILocalVariable(name: "upcase", scope: !6324, file: !2819, line: 793, type: !122)
!6333 = !DILocalVariable(name: "radix", scope: !6324, file: !2819, line: 794, type: !6334)
!6334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6335 = !DILocalVariable(name: "bp", scope: !6324, file: !2819, line: 795, type: !160)
!6336 = !DILocalVariable(name: "lsv", scope: !6337, file: !2819, line: 798, type: !32)
!6337 = distinct !DILexicalBlock(scope: !6324, file: !2819, line: 797, column: 5)
!6338 = !DILocation(line: 0, scope: !6324)
!6339 = !DILocation(line: 793, column: 35, scope: !6324)
!6340 = !DILocation(line: 793, column: 24, scope: !6324)
!6341 = !DILocation(line: 793, column: 16, scope: !6324)
!6342 = !DILocation(line: 794, column: 29, scope: !6324)
!6343 = !DILocation(line: 795, column: 24, scope: !6324)
!6344 = !DILocation(line: 795, column: 17, scope: !6324)
!6345 = !DILocation(line: 797, column: 2, scope: !6324)
!6346 = !DILocation(line: 802, column: 9, scope: !6337)
!6347 = !DILocation(line: 798, column: 22, scope: !6337)
!6348 = !DILocation(line: 0, scope: !6337)
!6349 = !DILocation(line: 800, column: 16, scope: !6337)
!6350 = !DILocation(line: 800, column: 11, scope: !6337)
!6351 = !DILocation(line: 800, column: 4, scope: !6337)
!6352 = !DILocation(line: 800, column: 9, scope: !6337)
!6353 = !DILocation(line: 803, column: 18, scope: !6324)
!6354 = !DILocation(line: 803, column: 24, scope: !6324)
!6355 = !DILocation(line: 803, column: 2, scope: !6337)
!6356 = distinct !{!6356, !6345, !6357}
!6357 = !DILocation(line: 803, column: 37, scope: !6324)
!6358 = !DILocation(line: 808, column: 12, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6324, file: !2819, line: 808, column: 6)
!6360 = !DILocation(line: 808, column: 6, scope: !6324)
!6361 = !DILocation(line: 809, column: 7, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6359, file: !2819, line: 808, column: 23)
!6363 = !DILocation(line: 813, column: 3, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !2819, line: 811, column: 27)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !2819, line: 811, column: 14)
!6366 = distinct !DILexicalBlock(scope: !6362, file: !2819, line: 809, column: 7)
!6367 = !DILocation(line: 0, scope: !6366)
!6368 = !DILocation(line: 818, column: 2, scope: !6324)
!6369 = distinct !DISubprogram(name: "store_count", scope: !2819, file: !2819, line: 1280, type: !6370, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6374)
!6370 = !DISubroutineType(types: !6371)
!6371 = !{null, !6372, !102, !103}
!6372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6373, size: 32)
!6373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5895)
!6374 = !{!6375, !6376, !6377}
!6375 = !DILocalVariable(name: "conv", arg: 1, scope: !6369, file: !2819, line: 1280, type: !6372)
!6376 = !DILocalVariable(name: "dp", arg: 2, scope: !6369, file: !2819, line: 1281, type: !102)
!6377 = !DILocalVariable(name: "count", arg: 3, scope: !6369, file: !2819, line: 1282, type: !103)
!6378 = !DILocation(line: 0, scope: !6369)
!6379 = !DILocation(line: 1284, column: 38, scope: !6369)
!6380 = !DILocation(line: 1284, column: 2, scope: !6369)
!6381 = !DILocation(line: 1286, column: 4, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6369, file: !2819, line: 1284, column: 50)
!6383 = !DILocation(line: 1286, column: 14, scope: !6382)
!6384 = !DILocation(line: 1287, column: 3, scope: !6382)
!6385 = !DILocation(line: 1289, column: 24, scope: !6382)
!6386 = !DILocation(line: 1289, column: 22, scope: !6382)
!6387 = !DILocation(line: 1290, column: 3, scope: !6382)
!6388 = !DILocation(line: 1292, column: 18, scope: !6382)
!6389 = !DILocation(line: 1292, column: 4, scope: !6382)
!6390 = !DILocation(line: 1292, column: 16, scope: !6382)
!6391 = !DILocation(line: 1293, column: 3, scope: !6382)
!6392 = !DILocation(line: 1295, column: 4, scope: !6382)
!6393 = !DILocation(line: 1295, column: 15, scope: !6382)
!6394 = !DILocation(line: 1296, column: 3, scope: !6382)
!6395 = !DILocation(line: 1298, column: 22, scope: !6382)
!6396 = !DILocation(line: 1298, column: 4, scope: !6382)
!6397 = !DILocation(line: 1298, column: 20, scope: !6382)
!6398 = !DILocation(line: 1299, column: 3, scope: !6382)
!6399 = !DILocation(line: 1301, column: 21, scope: !6382)
!6400 = !DILocation(line: 1301, column: 4, scope: !6382)
!6401 = !DILocation(line: 1301, column: 19, scope: !6382)
!6402 = !DILocation(line: 1302, column: 3, scope: !6382)
!6403 = !DILocation(line: 1304, column: 4, scope: !6382)
!6404 = !DILocation(line: 1304, column: 17, scope: !6382)
!6405 = !DILocation(line: 1305, column: 3, scope: !6382)
!6406 = !DILocation(line: 1307, column: 4, scope: !6382)
!6407 = !DILocation(line: 1307, column: 20, scope: !6382)
!6408 = !DILocation(line: 1308, column: 3, scope: !6382)
!6409 = !DILocation(line: 1316, column: 1, scope: !6369)
!6410 = distinct !DISubprogram(name: "isupper", scope: !6411, file: !6411, line: 16, type: !746, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6412)
!6411 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6412 = !{!6413}
!6413 = !DILocalVariable(name: "a", arg: 1, scope: !6410, file: !6411, line: 16, type: !103)
!6414 = !DILocation(line: 0, scope: !6410)
!6415 = !DILocation(line: 18, column: 29, scope: !6410)
!6416 = !DILocation(line: 18, column: 45, scope: !6410)
!6417 = !DILocation(line: 18, column: 2, scope: !6410)
!6418 = distinct !DISubprogram(name: "conversion_radix", scope: !2819, file: !2819, line: 761, type: !6419, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6421)
!6419 = !DISubroutineType(types: !6420)
!6420 = !{!156, !110}
!6421 = !{!6422}
!6422 = !DILocalVariable(name: "specifier", arg: 1, scope: !6418, file: !2819, line: 761, type: !110)
!6423 = !DILocation(line: 0, scope: !6418)
!6424 = !DILocation(line: 763, column: 2, scope: !6418)
!6425 = !DILocation(line: 770, column: 3, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6418, file: !2819, line: 763, column: 21)
!6427 = !DILocation(line: 774, column: 3, scope: !6426)
!6428 = !DILocation(line: 0, scope: !6426)
!6429 = !DILocation(line: 776, column: 1, scope: !6418)
!6430 = distinct !DISubprogram(name: "extract_flags", scope: !2819, file: !2819, line: 339, type: !6272, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6431)
!6431 = !{!6432, !6433, !6434}
!6432 = !DILocalVariable(name: "conv", arg: 1, scope: !6430, file: !2819, line: 339, type: !5928)
!6433 = !DILocalVariable(name: "sp", arg: 2, scope: !6430, file: !2819, line: 340, type: !108)
!6434 = !DILocalVariable(name: "loop", scope: !6430, file: !2819, line: 342, type: !122)
!6435 = !DILocation(line: 0, scope: !6430)
!6436 = !DILocation(line: 344, column: 2, scope: !6430)
!6437 = !DILocation(line: 345, column: 11, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6430, file: !2819, line: 344, column: 5)
!6439 = !DILocation(line: 345, column: 3, scope: !6438)
!6440 = !DILocation(line: 351, column: 4, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6438, file: !2819, line: 345, column: 16)
!6442 = !DILocation(line: 354, column: 4, scope: !6441)
!6443 = !DILocation(line: 357, column: 4, scope: !6441)
!6444 = !DILocation(line: 360, column: 4, scope: !6441)
!6445 = !DILocation(line: 0, scope: !6441)
!6446 = !DILocation(line: 370, column: 12, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6430, file: !2819, line: 370, column: 6)
!6448 = !DILocation(line: 370, column: 22, scope: !6447)
!6449 = !DILocation(line: 371, column: 19, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6447, file: !2819, line: 370, column: 42)
!6451 = !DILocation(line: 372, column: 2, scope: !6450)
!6452 = !DILocation(line: 376, column: 2, scope: !6430)
!6453 = distinct !DISubprogram(name: "extract_width", scope: !2819, file: !2819, line: 388, type: !6272, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6454)
!6454 = !{!6455, !6456, !6457, !6458}
!6455 = !DILocalVariable(name: "conv", arg: 1, scope: !6453, file: !2819, line: 388, type: !5928)
!6456 = !DILocalVariable(name: "sp", arg: 2, scope: !6453, file: !2819, line: 389, type: !108)
!6457 = !DILocalVariable(name: "wp", scope: !6453, file: !2819, line: 398, type: !108)
!6458 = !DILocalVariable(name: "width", scope: !6453, file: !2819, line: 399, type: !156)
!6459 = !DILocation(line: 0, scope: !6453)
!6460 = !DILocation(line: 391, column: 8, scope: !6453)
!6461 = !DILocation(line: 391, column: 22, scope: !6453)
!6462 = !DILocation(line: 393, column: 6, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6453, file: !2819, line: 393, column: 6)
!6464 = !DILocation(line: 393, column: 10, scope: !6463)
!6465 = !DILocation(line: 393, column: 6, scope: !6453)
!6466 = !DILocation(line: 394, column: 20, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6463, file: !2819, line: 393, column: 18)
!6468 = !DILocation(line: 395, column: 10, scope: !6467)
!6469 = !DILocation(line: 395, column: 3, scope: !6467)
!6470 = !DILocation(line: 399, column: 17, scope: !6453)
!6471 = !DILocation(line: 401, column: 6, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6453, file: !2819, line: 401, column: 6)
!6473 = !DILocation(line: 401, column: 9, scope: !6472)
!6474 = !DILocation(line: 401, column: 6, scope: !6453)
!6475 = !DILocation(line: 402, column: 23, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6472, file: !2819, line: 401, column: 16)
!6477 = !DILocation(line: 403, column: 9, scope: !6476)
!6478 = !DILocation(line: 403, column: 21, scope: !6476)
!6479 = !DILocation(line: 405, column: 11, scope: !6476)
!6480 = !DILocation(line: 404, column: 21, scope: !6476)
!6481 = !DILocation(line: 406, column: 2, scope: !6476)
!6482 = !DILocation(line: 409, column: 1, scope: !6453)
!6483 = distinct !DISubprogram(name: "extract_prec", scope: !2819, file: !2819, line: 420, type: !6272, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6484)
!6484 = !{!6485, !6486, !6487}
!6485 = !DILocalVariable(name: "conv", arg: 1, scope: !6483, file: !2819, line: 420, type: !5928)
!6486 = !DILocalVariable(name: "sp", arg: 2, scope: !6483, file: !2819, line: 421, type: !108)
!6487 = !DILocalVariable(name: "prec", scope: !6483, file: !2819, line: 435, type: !156)
!6488 = !DILocation(line: 0, scope: !6483)
!6489 = !DILocation(line: 423, column: 24, scope: !6483)
!6490 = !DILocation(line: 423, column: 28, scope: !6483)
!6491 = !DILocation(line: 423, column: 8, scope: !6483)
!6492 = !DILocation(line: 423, column: 21, scope: !6483)
!6493 = !DILocation(line: 425, column: 6, scope: !6483)
!6494 = !DILocation(line: 428, column: 2, scope: !6483)
!6495 = !DILocation(line: 430, column: 6, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6483, file: !2819, line: 430, column: 6)
!6497 = !DILocation(line: 430, column: 10, scope: !6496)
!6498 = !DILocation(line: 430, column: 6, scope: !6483)
!6499 = !DILocation(line: 431, column: 19, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6496, file: !2819, line: 430, column: 18)
!6501 = !DILocation(line: 432, column: 10, scope: !6500)
!6502 = !DILocation(line: 432, column: 3, scope: !6500)
!6503 = !DILocation(line: 435, column: 16, scope: !6483)
!6504 = !DILocation(line: 437, column: 8, scope: !6483)
!6505 = !DILocation(line: 437, column: 19, scope: !6483)
!6506 = !DILocation(line: 439, column: 10, scope: !6483)
!6507 = !DILocation(line: 438, column: 20, scope: !6483)
!6508 = !DILocation(line: 441, column: 9, scope: !6483)
!6509 = !DILocation(line: 442, column: 1, scope: !6483)
!6510 = distinct !DISubprogram(name: "extract_length", scope: !2819, file: !2819, line: 453, type: !6272, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6511)
!6511 = !{!6512, !6513}
!6512 = !DILocalVariable(name: "conv", arg: 1, scope: !6510, file: !2819, line: 453, type: !5928)
!6513 = !DILocalVariable(name: "sp", arg: 2, scope: !6510, file: !2819, line: 454, type: !108)
!6514 = !DILocation(line: 0, scope: !6510)
!6515 = !DILocation(line: 456, column: 10, scope: !6510)
!6516 = !DILocation(line: 456, column: 2, scope: !6510)
!6517 = !DILocation(line: 458, column: 8, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !2819, line: 458, column: 7)
!6519 = distinct !DILexicalBlock(scope: !6510, file: !2819, line: 456, column: 15)
!6520 = !DILocation(line: 458, column: 7, scope: !6518)
!6521 = !DILocation(line: 458, column: 13, scope: !6518)
!6522 = !DILocation(line: 0, scope: !6518)
!6523 = !DILocation(line: 458, column: 7, scope: !6519)
!6524 = !DILocation(line: 459, column: 21, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6518, file: !2819, line: 458, column: 21)
!6526 = !DILocation(line: 460, column: 4, scope: !6525)
!6527 = !DILocation(line: 461, column: 3, scope: !6525)
!6528 = !DILocation(line: 462, column: 21, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6518, file: !2819, line: 461, column: 10)
!6530 = !DILocation(line: 466, column: 8, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6519, file: !2819, line: 466, column: 7)
!6532 = !DILocation(line: 466, column: 7, scope: !6531)
!6533 = !DILocation(line: 466, column: 13, scope: !6531)
!6534 = !DILocation(line: 0, scope: !6531)
!6535 = !DILocation(line: 466, column: 7, scope: !6519)
!6536 = !DILocation(line: 467, column: 21, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6531, file: !2819, line: 466, column: 21)
!6538 = !DILocation(line: 468, column: 4, scope: !6537)
!6539 = !DILocation(line: 469, column: 3, scope: !6537)
!6540 = !DILocation(line: 470, column: 21, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6531, file: !2819, line: 469, column: 10)
!6542 = !DILocation(line: 474, column: 9, scope: !6519)
!6543 = !DILocation(line: 474, column: 20, scope: !6519)
!6544 = !DILocation(line: 475, column: 3, scope: !6519)
!6545 = !DILocation(line: 476, column: 3, scope: !6519)
!6546 = !DILocation(line: 478, column: 9, scope: !6519)
!6547 = !DILocation(line: 478, column: 20, scope: !6519)
!6548 = !DILocation(line: 479, column: 3, scope: !6519)
!6549 = !DILocation(line: 480, column: 3, scope: !6519)
!6550 = !DILocation(line: 482, column: 9, scope: !6519)
!6551 = !DILocation(line: 482, column: 20, scope: !6519)
!6552 = !DILocation(line: 483, column: 3, scope: !6519)
!6553 = !DILocation(line: 484, column: 3, scope: !6519)
!6554 = !DILocation(line: 486, column: 9, scope: !6519)
!6555 = !DILocation(line: 486, column: 20, scope: !6519)
!6556 = !DILocation(line: 487, column: 3, scope: !6519)
!6557 = !DILocation(line: 492, column: 21, scope: !6519)
!6558 = !DILocation(line: 493, column: 3, scope: !6519)
!6559 = !DILocation(line: 495, column: 9, scope: !6519)
!6560 = !DILocation(line: 495, column: 20, scope: !6519)
!6561 = !DILocation(line: 496, column: 3, scope: !6519)
!6562 = !DILocation(line: 498, column: 2, scope: !6510)
!6563 = distinct !DISubprogram(name: "extract_specifier", scope: !2819, file: !2819, line: 513, type: !6272, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6564)
!6564 = !{!6565, !6566, !6567, !6568}
!6565 = !DILocalVariable(name: "conv", arg: 1, scope: !6563, file: !2819, line: 513, type: !5928)
!6566 = !DILocalVariable(name: "sp", arg: 2, scope: !6563, file: !2819, line: 514, type: !108)
!6567 = !DILocalVariable(name: "unsupported", scope: !6563, file: !2819, line: 516, type: !122)
!6568 = !DILabel(scope: !6569, name: "int_conv", file: !2819, line: 526)
!6569 = distinct !DILexicalBlock(scope: !6563, file: !2819, line: 520, column: 27)
!6570 = !DILocation(line: 0, scope: !6563)
!6571 = !DILocation(line: 518, column: 20, scope: !6563)
!6572 = !DILocation(line: 518, column: 8, scope: !6563)
!6573 = !DILocation(line: 518, column: 18, scope: !6563)
!6574 = !DILocation(line: 520, column: 2, scope: !6563)
!6575 = !DILocation(line: 525, column: 3, scope: !6569)
!6576 = !DILocation(line: 0, scope: !6569)
!6577 = !DILocation(line: 526, column: 1, scope: !6569)
!6578 = !DILocation(line: 528, column: 24, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6569, file: !2819, line: 528, column: 7)
!6580 = !DILocation(line: 528, column: 7, scope: !6569)
!6581 = !DILocation(line: 535, column: 23, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6569, file: !2819, line: 535, column: 7)
!6583 = !DILocation(line: 535, column: 7, scope: !6569)
!6584 = !DILocation(line: 536, column: 36, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6582, file: !2819, line: 535, column: 31)
!6586 = !DILocation(line: 537, column: 3, scope: !6585)
!6587 = !DILocation(line: 570, column: 9, scope: !6569)
!6588 = !DILocation(line: 570, column: 23, scope: !6569)
!6589 = !DILocation(line: 575, column: 4, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !2819, line: 573, column: 48)
!6591 = distinct !DILexicalBlock(scope: !6569, file: !2819, line: 573, column: 7)
!6592 = !DILocation(line: 603, column: 9, scope: !6569)
!6593 = !DILocation(line: 603, column: 23, scope: !6569)
!6594 = !DILocation(line: 605, column: 24, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6569, file: !2819, line: 605, column: 7)
!6596 = !DILocation(line: 605, column: 7, scope: !6569)
!6597 = !DILocation(line: 612, column: 9, scope: !6569)
!6598 = !DILocation(line: 612, column: 23, scope: !6569)
!6599 = !DILocation(line: 619, column: 24, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6569, file: !2819, line: 619, column: 7)
!6601 = !DILocation(line: 619, column: 7, scope: !6569)
!6602 = !DILocation(line: 625, column: 9, scope: !6569)
!6603 = !DILocation(line: 625, column: 17, scope: !6569)
!6604 = !DILocation(line: 626, column: 3, scope: !6569)
!6605 = !DILocation(line: 629, column: 20, scope: !6563)
!6606 = !DILocation(line: 629, column: 8, scope: !6563)
!6607 = !DILocation(line: 518, column: 23, scope: !6563)
!6608 = !DILocation(line: 631, column: 2, scope: !6563)
!6609 = distinct !DISubprogram(name: "extract_decimal", scope: !2819, file: !2819, line: 318, type: !6610, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6612)
!6610 = !DISubroutineType(types: !6611)
!6611 = !{!156, !725}
!6612 = !{!6613, !6614, !6615}
!6613 = !DILocalVariable(name: "str", arg: 1, scope: !6609, file: !2819, line: 318, type: !725)
!6614 = !DILocalVariable(name: "sp", scope: !6609, file: !2819, line: 320, type: !108)
!6615 = !DILocalVariable(name: "val", scope: !6609, file: !2819, line: 321, type: !156)
!6616 = !DILocation(line: 0, scope: !6609)
!6617 = !DILocation(line: 320, column: 19, scope: !6609)
!6618 = !DILocation(line: 323, column: 37, scope: !6609)
!6619 = !DILocation(line: 323, column: 17, scope: !6609)
!6620 = !DILocation(line: 323, column: 9, scope: !6609)
!6621 = !DILocation(line: 323, column: 2, scope: !6609)
!6622 = !DILocation(line: 324, column: 13, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6609, file: !2819, line: 323, column: 43)
!6624 = !DILocation(line: 324, column: 24, scope: !6623)
!6625 = !DILocation(line: 324, column: 19, scope: !6623)
!6626 = !DILocation(line: 324, column: 27, scope: !6623)
!6627 = distinct !{!6627, !6621, !6628}
!6628 = !DILocation(line: 325, column: 2, scope: !6609)
!6629 = !DILocation(line: 326, column: 7, scope: !6609)
!6630 = !DILocation(line: 327, column: 2, scope: !6609)
!6631 = distinct !DISubprogram(name: "isdigit", scope: !6411, file: !6411, line: 43, type: !746, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6632)
!6632 = !{!6633}
!6633 = !DILocalVariable(name: "a", arg: 1, scope: !6631, file: !6411, line: 43, type: !103)
!6634 = !DILocation(line: 0, scope: !6631)
!6635 = !DILocation(line: 45, column: 29, scope: !6631)
!6636 = !DILocation(line: 45, column: 45, scope: !6631)
!6637 = !DILocation(line: 45, column: 2, scope: !6631)
!6638 = distinct !DISubprogram(name: "assert_post_action", scope: !6639, file: !6639, line: 26, type: !6640, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !6642)
!6639 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6640 = !DISubroutineType(types: !6641)
!6641 = !{null, !108, !32}
!6642 = !{!6643, !6644}
!6643 = !DILocalVariable(name: "file", arg: 1, scope: !6638, file: !6639, line: 26, type: !108)
!6644 = !DILocalVariable(name: "line", arg: 2, scope: !6638, file: !6639, line: 26, type: !32)
!6645 = !DILocation(line: 0, scope: !6638)
!6646 = !DILocation(line: 43, column: 2, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6638, file: !6639, line: 43, column: 2)
!6648 = !{i64 2151047132, i64 2151047148, i64 2151047174, i64 2151047202, i64 2151047222}
!6649 = !DILocation(line: 44, column: 1, scope: !6638)
!6650 = distinct !DISubprogram(name: "assert_print", scope: !6639, file: !6639, line: 46, type: !4839, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !6651)
!6651 = !{!6652, !6653}
!6652 = !DILocalVariable(name: "fmt", arg: 1, scope: !6650, file: !6639, line: 46, type: !108)
!6653 = !DILocalVariable(name: "ap", scope: !6650, file: !6639, line: 48, type: !6654)
!6654 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3847, line: 99, baseType: !6655)
!6655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3847, line: 40, baseType: !6656)
!6656 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6639, baseType: !6657)
!6657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6658)
!6658 = !{!6659}
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6657, file: !6639, line: 48, baseType: !102, size: 32)
!6660 = !DILocation(line: 0, scope: !6650)
!6661 = !DILocation(line: 48, column: 2, scope: !6650)
!6662 = !DILocation(line: 48, column: 10, scope: !6650)
!6663 = !DILocation(line: 50, column: 2, scope: !6650)
!6664 = !DILocation(line: 52, column: 2, scope: !6650)
!6665 = !DILocation(line: 54, column: 2, scope: !6650)
!6666 = !DILocation(line: 55, column: 1, scope: !6650)
!6667 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6668, file: !6668, line: 9, type: !317, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !2275)
!6668 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!6669 = !DILocation(line: 11, column: 1, scope: !6667)
!6670 = !{i64 2147559482, i64 2147559525, i64 2147559565}
!6671 = !DILocation(line: 12, column: 1, scope: !6667)
!6672 = !{i64 2147563709, i64 2147563752, i64 2147563792}
!6673 = !DILocation(line: 13, column: 1, scope: !6667)
!6674 = !{i64 2147563918, i64 2147563961, i64 2147564001}
!6675 = !DILocation(line: 14, column: 1, scope: !6667)
!6676 = !{i64 2147564135, i64 2147564178, i64 2147564218}
!6677 = !DILocation(line: 15, column: 1, scope: !6667)
!6678 = !{i64 2147564304, i64 2147564347, i64 2147564387}
!6679 = !DILocation(line: 16, column: 1, scope: !6667)
!6680 = !{i64 2147564489, i64 2147564532, i64 2147564572}
!6681 = !DILocation(line: 17, column: 1, scope: !6667)
!6682 = !{i64 2147564706, i64 2147564749, i64 2147564789}
!6683 = !DILocation(line: 18, column: 1, scope: !6667)
!6684 = !{i64 2147564869, i64 2147564912, i64 2147564952}
!6685 = !DILocation(line: 19, column: 1, scope: !6667)
!6686 = !{i64 2147565053, i64 2147565096, i64 2147565136}
!6687 = !DILocation(line: 20, column: 1, scope: !6667)
!6688 = !{i64 2147565233, i64 2147565276, i64 2147565316}
!6689 = !DILocation(line: 21, column: 1, scope: !6667)
!6690 = !{i64 2147565476, i64 2147565519, i64 2147565559}
!6691 = !DILocation(line: 22, column: 1, scope: !6667)
!6692 = !{i64 2147565712, i64 2147565755, i64 2147565795}
!6693 = !DILocation(line: 23, column: 1, scope: !6667)
!6694 = !{i64 2147565915, i64 2147565958, i64 2147565998}
!6695 = !DILocation(line: 24, column: 1, scope: !6667)
!6696 = !{i64 2147566118, i64 2147566161, i64 2147566201}
!6697 = !DILocation(line: 25, column: 1, scope: !6667)
!6698 = !{i64 2147566317, i64 2147566360, i64 2147566400}
!6699 = !DILocation(line: 26, column: 1, scope: !6667)
!6700 = !{i64 2147566492, i64 2147566535, i64 2147566575}
!6701 = !DILocation(line: 27, column: 1, scope: !6667)
!6702 = !{i64 2147566703, i64 2147566746, i64 2147566786}
!6703 = !DILocation(line: 28, column: 1, scope: !6667)
!6704 = !{i64 2147566907, i64 2147566950, i64 2147566990}
!6705 = !DILocation(line: 29, column: 1, scope: !6667)
!6706 = !{i64 2147567100, i64 2147567143, i64 2147567183}
!6707 = !DILocation(line: 30, column: 1, scope: !6667)
!6708 = !{i64 2147567302, i64 2147567345, i64 2147567385}
!6709 = !DILocation(line: 31, column: 1, scope: !6667)
!6710 = !{i64 2147567501, i64 2147567544, i64 2147567584}
!6711 = !DILocation(line: 32, column: 1, scope: !6667)
!6712 = !{i64 2147567728, i64 2147567771, i64 2147567811}
!6713 = !DILocation(line: 33, column: 1, scope: !6667)
!6714 = !{i64 2147567943, i64 2147567986, i64 2147568026}
!6715 = !DILocation(line: 34, column: 1, scope: !6667)
!6716 = !{i64 2147568130, i64 2147568173, i64 2147568213}
!6717 = !DILocation(line: 35, column: 1, scope: !6667)
!6718 = !{i64 2147568302, i64 2147568345, i64 2147568385}
!6719 = !DILocation(line: 36, column: 1, scope: !6667)
!6720 = !{i64 2147568504, i64 2147568547, i64 2147568587}
!6721 = !DILocation(line: 37, column: 1, scope: !6667)
!6722 = !{i64 2147568703, i64 2147568746, i64 2147568786}
!6723 = !DILocation(line: 38, column: 1, scope: !6667)
!6724 = !{i64 2147568878, i64 2147568921, i64 2147568961}
!6725 = !DILocation(line: 39, column: 1, scope: !6667)
!6726 = !{i64 2147569131, i64 2147569174, i64 2147569214}
!6727 = !DILocation(line: 40, column: 1, scope: !6667)
!6728 = !{i64 2147569369, i64 2147569412, i64 2147569452}
!6729 = !DILocation(line: 41, column: 1, scope: !6667)
!6730 = !{i64 2147569604, i64 2147569647, i64 2147569687}
!6731 = !DILocation(line: 42, column: 1, scope: !6667)
!6732 = !{i64 2147569830, i64 2147569873, i64 2147569913}
!6733 = !DILocation(line: 43, column: 1, scope: !6667)
!6734 = !{i64 2147570065, i64 2147570108, i64 2147570148}
!6735 = !DILocation(line: 44, column: 1, scope: !6667)
!6736 = !{i64 2147570300, i64 2147570343, i64 2147570383}
!6737 = !DILocation(line: 45, column: 1, scope: !6667)
!6738 = !{i64 2147570541, i64 2147570584, i64 2147570624}
!6739 = !DILocation(line: 46, column: 1, scope: !6667)
!6740 = !{i64 2147570776, i64 2147570819, i64 2147570859}
!6741 = !DILocation(line: 47, column: 1, scope: !6667)
!6742 = !{i64 2147571005, i64 2147571048, i64 2147571088}
!6743 = !DILocation(line: 48, column: 1, scope: !6667)
!6744 = !{i64 2147571240, i64 2147571283, i64 2147571323}
!6745 = !DILocation(line: 49, column: 1, scope: !6667)
!6746 = !{i64 2147571490, i64 2147571533, i64 2147571573}
!6747 = !DILocation(line: 50, column: 1, scope: !6667)
!6748 = !{i64 2147571719, i64 2147571762, i64 2147571802}
!6749 = !DILocation(line: 51, column: 1, scope: !6667)
!6750 = !{i64 2147571927, i64 2147571970, i64 2147572010}
!6751 = !DILocation(line: 52, column: 1, scope: !6667)
!6752 = !{i64 2147572138, i64 2147572181, i64 2147572221}
!6753 = !DILocation(line: 53, column: 1, scope: !6667)
!6754 = !{i64 2147572373, i64 2147572416, i64 2147572456}
!6755 = !DILocation(line: 54, column: 1, scope: !6667)
!6756 = !{i64 2147576663, i64 2147576706, i64 2147576746}
!6757 = !DILocation(line: 55, column: 1, scope: !6667)
!6758 = !{i64 2147576880, i64 2147576923, i64 2147576963}
!6759 = !DILocation(line: 56, column: 1, scope: !6667)
!6760 = !{i64 2147577109, i64 2147577152, i64 2147577192}
!6761 = !DILocation(line: 57, column: 1, scope: !6667)
!6762 = !{i64 2147577347, i64 2147577390, i64 2147577430}
!6763 = !DILocation(line: 58, column: 1, scope: !6667)
!6764 = !{i64 2147577579, i64 2147577622, i64 2147577662}
!6765 = !DILocation(line: 59, column: 1, scope: !6667)
!6766 = !{i64 2147577805, i64 2147577848, i64 2147577888}
!6767 = !DILocation(line: 60, column: 1, scope: !6667)
!6768 = !{i64 2147578022, i64 2147578065, i64 2147578105}
!6769 = !DILocation(line: 61, column: 1, scope: !6667)
!6770 = !{i64 2147578254, i64 2147578297, i64 2147578337}
!6771 = !DILocation(line: 62, column: 1, scope: !6667)
!6772 = !{i64 2147578480, i64 2147578523, i64 2147578563}
!6773 = !DILocation(line: 63, column: 1, scope: !6667)
!6774 = !{i64 2147578694, i64 2147578737, i64 2147578777}
!6775 = !DILocation(line: 64, column: 1, scope: !6667)
!6776 = !{i64 2147578914, i64 2147578957, i64 2147578997}
!6777 = !DILocation(line: 65, column: 1, scope: !6667)
!6778 = !{i64 2147579146, i64 2147579189, i64 2147579229}
!6779 = !DILocation(line: 66, column: 1, scope: !6667)
!6780 = !{i64 2147579354, i64 2147579397, i64 2147579437}
!6781 = !DILocation(line: 67, column: 1, scope: !6667)
!6782 = !{i64 2147579559, i64 2147579602, i64 2147579642}
!6783 = !DILocation(line: 68, column: 1, scope: !6667)
!6784 = !{i64 2147579776, i64 2147579819, i64 2147579859}
!6785 = !DILocation(line: 69, column: 1, scope: !6667)
!6786 = !{i64 2147579990, i64 2147580033, i64 2147580073}
!6787 = !DILocation(line: 70, column: 1, scope: !6667)
!6788 = !{i64 2147580216, i64 2147580259, i64 2147580299}
!6789 = !DILocation(line: 71, column: 1, scope: !6667)
!6790 = !{i64 2147580436, i64 2147580479, i64 2147580519}
!6791 = !DILocation(line: 72, column: 1, scope: !6667)
!6792 = !{i64 2147580641, i64 2147580684, i64 2147580724}
!6793 = !DILocation(line: 73, column: 1, scope: !6667)
!6794 = !{i64 2147580873, i64 2147580916, i64 2147580956}
!6795 = !DILocation(line: 74, column: 1, scope: !6667)
!6796 = !{i64 2147581108, i64 2147581151, i64 2147581191}
!6797 = !DILocation(line: 75, column: 1, scope: !6667)
!6798 = !{i64 2147581358, i64 2147581401, i64 2147581441}
!6799 = !DILocation(line: 76, column: 1, scope: !6667)
!6800 = !{i64 2147581608, i64 2147581651, i64 2147581691}
!6801 = !DILocation(line: 77, column: 1, scope: !6667)
!6802 = !{i64 2147581846, i64 2147581889, i64 2147581929}
!6803 = !DILocation(line: 78, column: 1, scope: !6667)
!6804 = !{i64 2147582057, i64 2147582100, i64 2147582140}
!6805 = !DILocation(line: 79, column: 1, scope: !6667)
!6806 = !{i64 2147582274, i64 2147582317, i64 2147582357}
!6807 = !DILocation(line: 80, column: 1, scope: !6667)
!6808 = !{i64 2147582470, i64 2147582513, i64 2147582553}
!6809 = !DILocation(line: 81, column: 1, scope: !6667)
!6810 = !{i64 2147582672, i64 2147582715, i64 2147582755}
!6811 = !DILocation(line: 82, column: 1, scope: !6667)
!6812 = !{i64 2147582859, i64 2147582902, i64 2147582942}
!6813 = !DILocation(line: 83, column: 1, scope: !6667)
!6814 = !{i64 2147583049, i64 2147583092, i64 2147583132}
!6815 = !DILocation(line: 84, column: 1, scope: !6667)
!6816 = !{i64 2147583236, i64 2147583279, i64 2147583319}
!6817 = !DILocation(line: 85, column: 1, scope: !6667)
!6818 = !{i64 2147583432, i64 2147583475, i64 2147583515}
!6819 = !DILocation(line: 86, column: 1, scope: !6667)
!6820 = !{i64 2147583628, i64 2147583671, i64 2147583711}
!6821 = !DILocation(line: 87, column: 1, scope: !6667)
!6822 = !{i64 2147583839, i64 2147583882, i64 2147583922}
!6823 = !DILocation(line: 88, column: 1, scope: !6667)
!6824 = !{i64 2147584047, i64 2147584090, i64 2147584130}
!6825 = !DILocation(line: 89, column: 1, scope: !6667)
!6826 = !{i64 2147584231, i64 2147584274, i64 2147584314}
!6827 = !DILocation(line: 90, column: 1, scope: !6667)
!6828 = !{i64 2147584427, i64 2147584470, i64 2147584510}
!6829 = !DILocation(line: 91, column: 1, scope: !6667)
!6830 = !{i64 2147584620, i64 2147584663, i64 2147584703}
!6831 = !DILocation(line: 92, column: 1, scope: !6667)
!6832 = !{i64 2147584867, i64 2147584910, i64 2147584950}
!6833 = !DILocation(line: 93, column: 1, scope: !6667)
!6834 = !{i64 2147585090, i64 2147585133, i64 2147585173}
!6835 = !DILocation(line: 94, column: 1, scope: !6667)
!6836 = !{i64 2147585295, i64 2147585338, i64 2147585378}
!6837 = !DILocation(line: 95, column: 1, scope: !6667)
!6838 = !{i64 2147589549, i64 2147589592, i64 2147589632}
!6839 = !DILocation(line: 96, column: 1, scope: !6667)
!6840 = !{i64 2147589715, i64 2147589758, i64 2147589798}
!6841 = !DILocation(line: 97, column: 1, scope: !6667)
!6842 = !{i64 2147589899, i64 2147589942, i64 2147589982}
!6843 = !DILocation(line: 98, column: 1, scope: !6667)
!6844 = !{i64 2147590089, i64 2147590132, i64 2147590172}
!6845 = !DILocation(line: 99, column: 1, scope: !6667)
!6846 = !{i64 2147590273, i64 2147590316, i64 2147590356}
!6847 = !DILocation(line: 100, column: 1, scope: !6667)
!6848 = !{i64 2147590487, i64 2147590530, i64 2147590570}
!6849 = !DILocation(line: 101, column: 1, scope: !6667)
!6850 = !{i64 2147590698, i64 2147590741, i64 2147590781}
!6851 = !DILocation(line: 102, column: 1, scope: !6667)
!6852 = !{i64 2147590921, i64 2147590964, i64 2147591004}
!6853 = !DILocation(line: 103, column: 1, scope: !6667)
!6854 = !{i64 2147591105, i64 2147591148, i64 2147591188}
!6855 = !DILocation(line: 104, column: 1, scope: !6667)
!6856 = !{i64 2147591271, i64 2147591314, i64 2147591354}
!6857 = !DILocation(line: 105, column: 1, scope: !6667)
!6858 = !{i64 2147591452, i64 2147591495, i64 2147591535}
!6859 = !DILocation(line: 106, column: 1, scope: !6667)
!6860 = !{i64 2147591645, i64 2147591688, i64 2147591728}
!6861 = !DILocation(line: 107, column: 1, scope: !6667)
!6862 = !{i64 2147591871, i64 2147591914, i64 2147591954}
!6863 = !DILocation(line: 108, column: 1, scope: !6667)
!6864 = !{i64 2147592085, i64 2147592128, i64 2147592168}
!6865 = !DILocation(line: 109, column: 1, scope: !6667)
!6866 = !{i64 2147592311, i64 2147592354, i64 2147592394}
!6867 = !DILocation(line: 110, column: 1, scope: !6667)
!6868 = !{i64 2147592528, i64 2147592571, i64 2147592611}
!6869 = !DILocation(line: 111, column: 1, scope: !6667)
!6870 = !{i64 2147592805, i64 2147592848, i64 2147592888}
!6871 = !DILocation(line: 112, column: 1, scope: !6667)
!6872 = !{i64 2147593031, i64 2147593074, i64 2147593114}
!6873 = !DILocation(line: 113, column: 1, scope: !6667)
!6874 = !{i64 2147593239, i64 2147593282, i64 2147593322}
!6875 = !DILocation(line: 114, column: 1, scope: !6667)
!6876 = !{i64 2147593435, i64 2147593478, i64 2147593518}
!6877 = !DILocation(line: 115, column: 1, scope: !6667)
!6878 = !{i64 2147593700, i64 2147593743, i64 2147593783}
!6879 = !DILocation(line: 116, column: 1, scope: !6667)
!6880 = !{i64 2147593914, i64 2147593957, i64 2147593997}
!6881 = !DILocation(line: 117, column: 1, scope: !6667)
!6882 = !{i64 2147594077, i64 2147594120, i64 2147594160}
!6883 = !DILocation(line: 118, column: 1, scope: !6667)
!6884 = !{i64 2147594264, i64 2147594307, i64 2147594347}
!6885 = !DILocation(line: 119, column: 1, scope: !6667)
!6886 = !{i64 2147594472, i64 2147594515, i64 2147594555}
!6887 = !DILocation(line: 120, column: 1, scope: !6667)
!6888 = !{i64 2147594668, i64 2147594711, i64 2147594751}
!6889 = !DILocation(line: 121, column: 1, scope: !6667)
!6890 = !{i64 2147594861, i64 2147594904, i64 2147594944}
!6891 = !DILocation(line: 122, column: 1, scope: !6667)
!6892 = !{i64 2147595043, i64 2147595086, i64 2147595126}
!6893 = !DILocation(line: 123, column: 1, scope: !6667)
!6894 = !{i64 2147595257, i64 2147595300, i64 2147595340}
!6895 = !DILocation(line: 124, column: 1, scope: !6667)
!6896 = !{i64 2147595456, i64 2147595499, i64 2147595539}
!6897 = !DILocation(line: 125, column: 1, scope: !6667)
!6898 = !{i64 2147595691, i64 2147595734, i64 2147595774}
!6899 = !DILocation(line: 126, column: 1, scope: !6667)
!6900 = !{i64 2147595941, i64 2147595984, i64 2147596024}
!6901 = !DILocation(line: 127, column: 1, scope: !6667)
!6902 = !{i64 2147596143, i64 2147596186, i64 2147596226}
!6903 = !DILocation(line: 128, column: 1, scope: !6667)
!6904 = !{i64 2147596366, i64 2147596409, i64 2147596449}
!6905 = !DILocation(line: 129, column: 1, scope: !6667)
!6906 = !{i64 2147596580, i64 2147596623, i64 2147596663}
!6907 = !DILocation(line: 130, column: 1, scope: !6667)
!6908 = !{i64 2147596824, i64 2147596867, i64 2147596907}
!6909 = !DILocation(line: 131, column: 1, scope: !6667)
!6910 = !{i64 2147597053, i64 2147597096, i64 2147597136}
!6911 = !DILocation(line: 132, column: 1, scope: !6667)
!6912 = !{i64 2147597279, i64 2147597322, i64 2147597362}
!6913 = !DILocation(line: 133, column: 1, scope: !6667)
!6914 = !{i64 2147597538, i64 2147597581, i64 2147597621}
!6915 = !DILocation(line: 134, column: 1, scope: !6667)
!6916 = !{i64 2147597758, i64 2147597801, i64 2147597841}
!6917 = !DILocation(line: 135, column: 1, scope: !6667)
!6918 = !{i64 2147597990, i64 2147598033, i64 2147598073}
!6919 = !DILocation(line: 136, column: 1, scope: !6667)
!6920 = !{i64 2147598231, i64 2147598274, i64 2147598314}
!6921 = !DILocation(line: 137, column: 1, scope: !6667)
!6922 = !{i64 2147602533, i64 2147602576, i64 2147602616}
!6923 = !DILocation(line: 138, column: 1, scope: !6667)
!6924 = !{i64 2147602756, i64 2147602799, i64 2147602839}
!6925 = !DILocation(line: 139, column: 1, scope: !6667)
!6926 = !{i64 2147602973, i64 2147603016, i64 2147603056}
!6927 = !DILocation(line: 140, column: 1, scope: !6667)
!6928 = !{i64 2147603214, i64 2147603257, i64 2147603297}
!6929 = !DILocation(line: 141, column: 1, scope: !6667)
!6930 = !{i64 2147603401, i64 2147603444, i64 2147603484}
!6931 = !DILocation(line: 142, column: 1, scope: !6667)
!6932 = !{i64 2147603630, i64 2147603673, i64 2147603713}
!6933 = !DILocation(line: 143, column: 1, scope: !6667)
!6934 = !{i64 2147603844, i64 2147603887, i64 2147603927}
!6935 = !DILocation(line: 144, column: 1, scope: !6667)
!6936 = !{i64 2147604046, i64 2147604089, i64 2147604129}
!6937 = !DILocation(line: 145, column: 1, scope: !6667)
!6938 = !{i64 2147604242, i64 2147604285, i64 2147604325}
!6939 = !DILocation(line: 146, column: 1, scope: !6667)
!6940 = !{i64 2147604454, i64 2147604497, i64 2147604537}
!6941 = !DILocation(line: 147, column: 1, scope: !6667)
!6942 = !{i64 2147604675, i64 2147604718, i64 2147604758}
!6943 = !DILocation(line: 148, column: 1, scope: !6667)
!6944 = !{i64 2147604889, i64 2147604932, i64 2147604972}
!6945 = !DILocation(line: 149, column: 1, scope: !6667)
!6946 = !{i64 2147605079, i64 2147605122, i64 2147605162}
!6947 = !DILocation(line: 150, column: 1, scope: !6667)
!6948 = !{i64 2147605278, i64 2147605321, i64 2147605361}
!6949 = !DILocation(line: 151, column: 1, scope: !6667)
!6950 = !{i64 2147605483, i64 2147605526, i64 2147605566}
!6951 = !DILocation(line: 152, column: 1, scope: !6667)
!6952 = !{i64 2147605703, i64 2147605746, i64 2147605786}
!6953 = !DILocation(line: 153, column: 1, scope: !6667)
!6954 = !{i64 2147605904, i64 2147605947, i64 2147605987}
!6955 = !DILocation(line: 154, column: 1, scope: !6667)
!6956 = !{i64 2147606103, i64 2147606146, i64 2147606186}
!6957 = !DILocation(line: 155, column: 1, scope: !6667)
!6958 = !{i64 2147606272, i64 2147606315, i64 2147606355}
!6959 = !DILocation(line: 156, column: 1, scope: !6667)
!6960 = !{i64 2147606456, i64 2147606499, i64 2147606539}
!6961 = !DILocation(line: 157, column: 1, scope: !6667)
!6962 = !{i64 2147606640, i64 2147606683, i64 2147606723}
!6963 = !DILocation(line: 158, column: 1, scope: !6667)
!6964 = !{i64 2147606824, i64 2147606867, i64 2147606907}
!6965 = !DILocation(line: 159, column: 1, scope: !6667)
!6966 = !{i64 2147607062, i64 2147607105, i64 2147607145}
!6967 = !DILocation(line: 160, column: 1, scope: !6667)
!6968 = !{i64 2147607292, i64 2147607335, i64 2147607375}
!6969 = !DILocation(line: 161, column: 1, scope: !6667)
!6970 = !{i64 2147607521, i64 2147607564, i64 2147607604}
!6971 = !DILocation(line: 162, column: 1, scope: !6667)
!6972 = !{i64 2147607708, i64 2147607751, i64 2147607791}
!6973 = !DILocation(line: 163, column: 1, scope: !6667)
!6974 = !{i64 2147607904, i64 2147607947, i64 2147607987}
!6975 = !DILocation(line: 164, column: 1, scope: !6667)
!6976 = !{i64 2147608112, i64 2147608155, i64 2147608195}
!6977 = !DILocation(line: 165, column: 1, scope: !6667)
!6978 = !{i64 2147608324, i64 2147608367, i64 2147608407}
!6979 = !DILocation(line: 166, column: 1, scope: !6667)
!6980 = !{i64 2147608523, i64 2147608566, i64 2147608606}
!6981 = !DILocation(line: 167, column: 1, scope: !6667)
!6982 = !{i64 2147608761, i64 2147608804, i64 2147608844}
!6983 = !DILocation(line: 168, column: 1, scope: !6667)
!6984 = !{i64 2147608957, i64 2147609000, i64 2147609040}
!6985 = !DILocation(line: 169, column: 1, scope: !6667)
!6986 = !{i64 2147609159, i64 2147609202, i64 2147609242}
!6987 = !DILocation(line: 170, column: 1, scope: !6667)
!6988 = !{i64 2147609352, i64 2147609395, i64 2147609435}
!6989 = !DILocation(line: 171, column: 1, scope: !6667)
!6990 = !{i64 2147609586, i64 2147609629, i64 2147609669}
!6991 = !DILocation(line: 172, column: 1, scope: !6667)
!6992 = !{i64 2147609749, i64 2147609792, i64 2147609832}
!6993 = !DILocation(line: 173, column: 1, scope: !6667)
!6994 = !{i64 2147609988, i64 2147610031, i64 2147610071}
!6995 = !DILocation(line: 174, column: 1, scope: !6667)
!6996 = !{i64 2147610227, i64 2147610270, i64 2147610310}
!6997 = !DILocation(line: 175, column: 1, scope: !6667)
!6998 = !{i64 2147610463, i64 2147610506, i64 2147610546}
!6999 = !DILocation(line: 176, column: 1, scope: !6667)
!7000 = !{i64 2147610693, i64 2147610736, i64 2147610776}
!7001 = !DILocation(line: 177, column: 1, scope: !6667)
!7002 = !{i64 2147610880, i64 2147610923, i64 2147610963}
!7003 = !DILocation(line: 178, column: 1, scope: !6667)
!7004 = !{i64 2147611079, i64 2147611122, i64 2147611162}
!7005 = !DILocation(line: 179, column: 1, scope: !6667)
!7006 = !{i64 2147611350, i64 2147611393, i64 2147611433}
!7007 = !DILocation(line: 180, column: 1, scope: !6667)
!7008 = !{i64 2147611525, i64 2147611568, i64 2147611608}
!7009 = !DILocation(line: 181, column: 1, scope: !6667)
!7010 = !{i64 2147615820, i64 2147615863, i64 2147615903}
!7011 = !DILocation(line: 182, column: 1, scope: !6667)
!7012 = !{i64 2147616028, i64 2147616071, i64 2147616111}
!7013 = !DILocation(line: 183, column: 1, scope: !6667)
!7014 = !{i64 2147616246, i64 2147616289, i64 2147616329}
!7015 = !DILocation(line: 184, column: 1, scope: !6667)
!7016 = !{i64 2147616436, i64 2147616479, i64 2147616519}
!7017 = !DILocation(line: 185, column: 1, scope: !6667)
!7018 = !{i64 2147616668, i64 2147616711, i64 2147616751}
!7019 = !DILocation(line: 186, column: 1, scope: !6667)
!7020 = !{i64 2147616888, i64 2147616931, i64 2147616971}
!7021 = !DILocation(line: 187, column: 1, scope: !6667)
!7022 = !{i64 2147617084, i64 2147617127, i64 2147617167}
!7023 = !DILocation(line: 188, column: 1, scope: !6667)
!7024 = !{i64 2147617290, i64 2147617333, i64 2147617373}
!7025 = !DILocation(line: 189, column: 1, scope: !6667)
!7026 = !{i64 2147617495, i64 2147617538, i64 2147617578}
!7027 = !DILocation(line: 190, column: 1, scope: !6667)
!7028 = !{i64 2147617721, i64 2147617764, i64 2147617804}
!7029 = !DILocation(line: 191, column: 1, scope: !6667)
!7030 = !{i64 2147617929, i64 2147617972, i64 2147618012}
!7031 = !DILocation(line: 192, column: 1, scope: !6667)
!7032 = !{i64 2147618125, i64 2147618168, i64 2147618208}
!7033 = !DILocation(line: 193, column: 1, scope: !6667)
!7034 = !{i64 2147618357, i64 2147618400, i64 2147618440}
!7035 = !DILocation(line: 194, column: 1, scope: !6667)
!7036 = !{i64 2147618535, i64 2147618578, i64 2147618618}
!7037 = !DILocation(line: 195, column: 1, scope: !6667)
!7038 = !{i64 2147618744, i64 2147618787, i64 2147618827}
!7039 = !DILocation(line: 196, column: 1, scope: !6667)
!7040 = !{i64 2147618952, i64 2147618995, i64 2147619035}
!7041 = !DILocation(line: 197, column: 1, scope: !6667)
!7042 = !{i64 2147619148, i64 2147619191, i64 2147619231}
!7043 = !DILocation(line: 198, column: 1, scope: !6667)
!7044 = !{i64 2147619380, i64 2147619423, i64 2147619463}
!7045 = !DILocation(line: 199, column: 1, scope: !6667)
!7046 = !{i64 2147619582, i64 2147619625, i64 2147619665}
!7047 = !DILocation(line: 200, column: 1, scope: !6667)
!7048 = !{i64 2147619832, i64 2147619875, i64 2147619915}
!7049 = !DILocation(line: 201, column: 1, scope: !6667)
!7050 = !{i64 2147620070, i64 2147620113, i64 2147620153}
!7051 = !DILocation(line: 202, column: 1, scope: !6667)
!7052 = !{i64 2147620278, i64 2147620321, i64 2147620361}
!7053 = !DILocation(line: 203, column: 1, scope: !6667)
!7054 = !{i64 2147620474, i64 2147620517, i64 2147620557}
!7055 = !DILocation(line: 204, column: 1, scope: !6667)
!7056 = !{i64 2147620652, i64 2147620695, i64 2147620735}
!7057 = !DILocation(line: 205, column: 1, scope: !6667)
!7058 = !{i64 2147620869, i64 2147620912, i64 2147620952}
!7059 = !DILocation(line: 206, column: 1, scope: !6667)
!7060 = !{i64 2147621074, i64 2147621117, i64 2147621157}
!7061 = !DILocation(line: 207, column: 1, scope: !6667)
!7062 = !{i64 2147621309, i64 2147621352, i64 2147621392}
!7063 = !DILocation(line: 208, column: 1, scope: !6667)
!7064 = !{i64 2147621532, i64 2147621575, i64 2147621615}
!7065 = !DILocation(line: 209, column: 1, scope: !6667)
!7066 = !{i64 2147621749, i64 2147621792, i64 2147621832}
!7067 = !DILocation(line: 210, column: 1, scope: !6667)
!7068 = !{i64 2147621954, i64 2147621997, i64 2147622037}
!7069 = !DILocation(line: 211, column: 1, scope: !6667)
!7070 = !{i64 2147622162, i64 2147622205, i64 2147622245}
!7071 = !DILocation(line: 212, column: 1, scope: !6667)
!7072 = !{i64 2147622358, i64 2147622401, i64 2147622441}
!7073 = !DILocation(line: 213, column: 1, scope: !6667)
!7074 = !{i64 2147622572, i64 2147622615, i64 2147622655}
!7075 = !DILocation(line: 214, column: 1, scope: !6667)
!7076 = !{i64 2147622780, i64 2147622823, i64 2147622863}
!7077 = !DILocation(line: 215, column: 1, scope: !6667)
!7078 = !{i64 2147622970, i64 2147623013, i64 2147623053}
!7079 = !DILocation(line: 216, column: 1, scope: !6667)
!7080 = !{i64 2147623184, i64 2147623227, i64 2147623267}
!7081 = !DILocation(line: 217, column: 1, scope: !6667)
!7082 = !{i64 2147623446, i64 2147623489, i64 2147623529}
!7083 = !DILocation(line: 218, column: 1, scope: !6667)
!7084 = !{i64 2147623657, i64 2147623700, i64 2147623740}
!7085 = !DILocation(line: 219, column: 1, scope: !6667)
!7086 = !{i64 2147623901, i64 2147623944, i64 2147623984}
!7087 = !DILocation(line: 220, column: 1, scope: !6667)
!7088 = !{i64 2147624112, i64 2147624155, i64 2147624195}
!7089 = !DILocation(line: 221, column: 1, scope: !6667)
!7090 = !{i64 2147624341, i64 2147624384, i64 2147624424}
!7091 = !DILocation(line: 222, column: 1, scope: !6667)
!7092 = !{i64 2147628667, i64 2147628710, i64 2147628750}
!7093 = !DILocation(line: 223, column: 1, scope: !6667)
!7094 = !{i64 2147628872, i64 2147628915, i64 2147628955}
!7095 = !DILocation(line: 224, column: 1, scope: !6667)
!7096 = !{i64 2147629068, i64 2147629111, i64 2147629151}
!7097 = !DILocation(line: 225, column: 1, scope: !6667)
!7098 = !{i64 2147629291, i64 2147629334, i64 2147629374}
!7099 = !DILocation(line: 226, column: 1, scope: !6667)
!7100 = !{i64 2147629454, i64 2147629497, i64 2147629537}
!7101 = !DILocation(line: 227, column: 1, scope: !6667)
!7102 = !{i64 2147629659, i64 2147629702, i64 2147629742}
!7103 = !DILocation(line: 228, column: 1, scope: !6667)
!7104 = !{i64 2147629879, i64 2147629922, i64 2147629962}
!7105 = !DILocation(line: 229, column: 1, scope: !6667)
!7106 = !{i64 2147630093, i64 2147630136, i64 2147630176}
!7107 = !DILocation(line: 230, column: 1, scope: !6667)
!7108 = !{i64 2147630337, i64 2147630380, i64 2147630420}
!7109 = !DILocation(line: 231, column: 1, scope: !6667)
!7110 = !{i64 2147630569, i64 2147630612, i64 2147630652}
!7111 = !DILocation(line: 232, column: 1, scope: !6667)
!7112 = !{i64 2147630783, i64 2147630826, i64 2147630866}
!7113 = !DILocation(line: 233, column: 1, scope: !6667)
!7114 = !{i64 2147630994, i64 2147631037, i64 2147631077}
!7115 = !DILocation(line: 234, column: 1, scope: !6667)
!7116 = !{i64 2147631187, i64 2147631230, i64 2147631270}
!7117 = !DILocation(line: 235, column: 1, scope: !6667)
!7118 = !{i64 2147631386, i64 2147631429, i64 2147631469}
!7119 = !DILocation(line: 236, column: 1, scope: !6667)
!7120 = !{i64 2147631558, i64 2147631601, i64 2147631641}
!7121 = !DILocation(line: 237, column: 1, scope: !6667)
!7122 = !{i64 2147631730, i64 2147631773, i64 2147631813}
!7123 = !DILocation(line: 238, column: 1, scope: !6667)
!7124 = !{i64 2147631920, i64 2147631963, i64 2147632003}
!7125 = !DILocation(line: 239, column: 1, scope: !6667)
!7126 = !{i64 2147632113, i64 2147632156, i64 2147632196}
!7127 = !DILocation(line: 240, column: 1, scope: !6667)
!7128 = !{i64 2147632309, i64 2147632352, i64 2147632392}
!7129 = !DILocation(line: 241, column: 1, scope: !6667)
!7130 = !{i64 2147632472, i64 2147632515, i64 2147632555}
!7131 = !DILocation(line: 242, column: 1, scope: !6667)
!7132 = !{i64 2147632674, i64 2147632717, i64 2147632757}
!7133 = !DILocation(line: 243, column: 1, scope: !6667)
!7134 = !{i64 2147632879, i64 2147632922, i64 2147632962}
!7135 = !DILocation(line: 244, column: 1, scope: !6667)
!7136 = !{i64 2147633087, i64 2147633130, i64 2147633170}
!7137 = !DILocation(line: 245, column: 1, scope: !6667)
!7138 = !{i64 2147633280, i64 2147633323, i64 2147633363}
!7139 = !DILocation(line: 246, column: 1, scope: !6667)
!7140 = !{i64 2147633467, i64 2147633510, i64 2147633550}
!7141 = !DILocation(line: 247, column: 1, scope: !6667)
!7142 = !{i64 2147633694, i64 2147633737, i64 2147633777}
!7143 = !DILocation(line: 248, column: 1, scope: !6667)
!7144 = !{i64 2147633860, i64 2147633903, i64 2147633943}
!7145 = !DILocation(line: 249, column: 1, scope: !6667)
!7146 = !{i64 2147634098, i64 2147634141, i64 2147634181}
!7147 = !DILocation(line: 250, column: 1, scope: !6667)
!7148 = !{i64 2147634303, i64 2147634346, i64 2147634386}
!7149 = !DILocation(line: 251, column: 1, scope: !6667)
!7150 = !{i64 2147634553, i64 2147634596, i64 2147634636}
!7151 = !DILocation(line: 252, column: 1, scope: !6667)
!7152 = !{i64 2147634761, i64 2147634804, i64 2147634844}
!7153 = !DILocation(line: 253, column: 1, scope: !6667)
!7154 = !{i64 2147634957, i64 2147635000, i64 2147635040}
!7155 = !DILocation(line: 254, column: 1, scope: !6667)
!7156 = !{i64 2147635174, i64 2147635217, i64 2147635257}
!7157 = !DILocation(line: 255, column: 1, scope: !6667)
!7158 = !{i64 2147635466, i64 2147635509, i64 2147635549}
!7159 = !DILocation(line: 256, column: 1, scope: !6667)
!7160 = !{i64 2147635698, i64 2147635741, i64 2147635781}
!7161 = !DILocation(line: 257, column: 1, scope: !6667)
!7162 = !{i64 2147635915, i64 2147635958, i64 2147635998}
!7163 = !DILocation(line: 258, column: 1, scope: !6667)
!7164 = !{i64 2147636122, i64 2147636165, i64 2147636205}
!7165 = !DILocation(line: 259, column: 1, scope: !6667)
!7166 = !{i64 2147636323, i64 2147636366, i64 2147636406}
!7167 = !DILocation(line: 260, column: 1, scope: !6667)
!7168 = !{i64 2147636555, i64 2147636598, i64 2147636638}
!7169 = !DILocation(line: 261, column: 1, scope: !6667)
!7170 = !{i64 2147636763, i64 2147636806, i64 2147636846}
!7171 = !DILocation(line: 262, column: 1, scope: !6667)
!7172 = !{i64 2147636953, i64 2147636996, i64 2147637036}
!7173 = !DILocation(line: 263, column: 1, scope: !6667)
!7174 = !{i64 2147637179, i64 2147637222, i64 2147637262}
!7175 = !DILocation(line: 264, column: 1, scope: !6667)
!7176 = !{i64 2147637368, i64 2147637411, i64 2147637451}
!7177 = !DILocation(line: 265, column: 1, scope: !6667)
!7178 = !{i64 2147641700, i64 2147641743, i64 2147641783}
!7179 = !DILocation(line: 266, column: 1, scope: !6667)
!7180 = !{i64 2147641920, i64 2147641963, i64 2147642003}
!7181 = !DILocation(line: 267, column: 1, scope: !6667)
!7182 = !{i64 2147642173, i64 2147642216, i64 2147642256}
!7183 = !DILocation(line: 268, column: 1, scope: !6667)
!7184 = !{i64 2147642381, i64 2147642424, i64 2147642464}
!7185 = !DILocation(line: 269, column: 1, scope: !6667)
!7186 = !{i64 2147642613, i64 2147642656, i64 2147642696}
!7187 = !DILocation(line: 270, column: 1, scope: !6667)
!7188 = !{i64 2147642824, i64 2147642867, i64 2147642907}
!7189 = !DILocation(line: 271, column: 1, scope: !6667)
!7190 = !{i64 2147643014, i64 2147643057, i64 2147643097}
!7191 = !DILocation(line: 272, column: 1, scope: !6667)
!7192 = !{i64 2147643228, i64 2147643271, i64 2147643311}
!7193 = !DILocation(line: 273, column: 1, scope: !6667)
!7194 = !{i64 2147643427, i64 2147643470, i64 2147643510}
!7195 = !DILocation(line: 274, column: 1, scope: !6667)
!7196 = !{i64 2147643614, i64 2147643657, i64 2147643697}
!7197 = !DILocation(line: 275, column: 1, scope: !6667)
!7198 = !{i64 2147643822, i64 2147643865, i64 2147643905}
!7199 = !DILocation(line: 276, column: 1, scope: !6667)
!7200 = !{i64 2147644051, i64 2147644094, i64 2147644134}
!7201 = !DILocation(line: 277, column: 1, scope: !6667)
!7202 = !{i64 2147644253, i64 2147644296, i64 2147644336}
!7203 = !DILocation(line: 278, column: 1, scope: !6667)
!7204 = !{i64 2147644452, i64 2147644495, i64 2147644535}
!7205 = !DILocation(line: 279, column: 1, scope: !6667)
!7206 = !{i64 2147644669, i64 2147644712, i64 2147644752}
!7207 = !DILocation(line: 281, column: 1, scope: !6667)
!7208 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !1164, file: !1164, line: 225, type: !1171, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !7209)
!7209 = !{!7210}
!7210 = !DILocalVariable(name: "arg", arg: 1, scope: !7208, file: !1164, line: 225, type: !1173)
!7211 = !DILocation(line: 0, scope: !7208)
!7212 = !DILocation(line: 230, column: 2, scope: !7208)
!7213 = !DILocation(line: 233, column: 2, scope: !7208)
!7214 = !DILocation(line: 236, column: 2, scope: !7208)
!7215 = !DILocation(line: 255, column: 2, scope: !7208)
!7216 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !1164, file: !1164, line: 50, type: !317, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !2275)
!7217 = !DILocation(line: 53, column: 2, scope: !7216)
!7218 = !DILocation(line: 54, column: 1, scope: !7216)
!7219 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !1164, file: !1164, line: 14, type: !317, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !2275)
!7220 = !DILocation(line: 23, column: 2, scope: !7219)
!7221 = !DILocation(line: 24, column: 2, scope: !7219)
!7222 = !DILocation(line: 25, column: 2, scope: !7219)
!7223 = !DILocation(line: 27, column: 2, scope: !7219)
!7224 = !DILocation(line: 31, column: 2, scope: !7219)
!7225 = !DILocation(line: 33, column: 2, scope: !7219)
!7226 = !DILocation(line: 36, column: 2, scope: !7219)
!7227 = !DILocation(line: 37, column: 2, scope: !7219)
!7228 = !DILocation(line: 40, column: 2, scope: !7219)
!7229 = !DILocation(line: 41, column: 2, scope: !7219)
!7230 = !DILocation(line: 42, column: 2, scope: !7219)
!7231 = !DILocation(line: 43, column: 2, scope: !7219)
!7232 = !DILocation(line: 44, column: 2, scope: !7219)
!7233 = !DILocation(line: 47, column: 2, scope: !7219)
!7234 = !DILocation(line: 48, column: 1, scope: !7219)
!7235 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !1164, file: !1164, line: 57, type: !317, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !2275)
!7236 = !DILocation(line: 61, column: 2, scope: !7235)
!7237 = !DILocation(line: 63, column: 2, scope: !7235)
!7238 = !DILocation(line: 80, column: 1, scope: !7235)
!7239 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !7240, file: !7240, line: 164, type: !7241, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !7243)
!7240 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7241 = !DISubroutineType(types: !7242)
!7242 = !{null, !1108, !111, !166, !122, !122}
!7243 = !{!7244, !7245, !7246, !7247, !7248}
!7244 = !DILocalVariable(name: "base", arg: 1, scope: !7239, file: !7240, line: 164, type: !1108)
!7245 = !DILocalVariable(name: "pdap", arg: 2, scope: !7239, file: !7240, line: 164, type: !111)
!7246 = !DILocalVariable(name: "perm", arg: 3, scope: !7239, file: !7240, line: 164, type: !166)
!7247 = !DILocalVariable(name: "sreq", arg: 4, scope: !7239, file: !7240, line: 164, type: !122)
!7248 = !DILocalVariable(name: "lock", arg: 5, scope: !7239, file: !7240, line: 164, type: !122)
!7249 = !DILocation(line: 0, scope: !7239)
!7250 = !DILocation(line: 166, column: 24, scope: !7239)
!7251 = !DILocation(line: 166, column: 5, scope: !7239)
!7252 = !DILocation(line: 166, column: 22, scope: !7239)
!7253 = !DILocation(line: 167, column: 1, scope: !7239)
!7254 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !754, file: !754, line: 454, type: !7255, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !7257)
!7255 = !DISubroutineType(types: !7256)
!7256 = !{null, !1036, !111, !111}
!7257 = !{!7258, !7259, !7260}
!7258 = !DILocalVariable(name: "base", arg: 1, scope: !7254, file: !754, line: 454, type: !1036)
!7259 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !7254, file: !754, line: 454, type: !111)
!7260 = !DILocalVariable(name: "control", arg: 3, scope: !7254, file: !754, line: 454, type: !111)
!7261 = !DILocation(line: 0, scope: !7254)
!7262 = !DILocation(line: 456, column: 5, scope: !7254)
!7263 = !DILocation(line: 456, column: 22, scope: !7254)
!7264 = !DILocation(line: 457, column: 1, scope: !7254)
!7265 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !754, file: !754, line: 379, type: !7266, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !7268)
!7266 = !DISubroutineType(types: !7267)
!7267 = !{null, !1036, !111}
!7268 = !{!7269, !7270}
!7269 = !DILocalVariable(name: "base", arg: 1, scope: !7265, file: !754, line: 379, type: !1036)
!7270 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !7265, file: !754, line: 379, type: !111)
!7271 = !DILocation(line: 0, scope: !7265)
!7272 = !DILocation(line: 381, column: 26, scope: !7265)
!7273 = !DILocation(line: 382, column: 1, scope: !7265)
!7274 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !7275, file: !7275, line: 136, type: !7276, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !7278)
!7275 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7276 = !DISubroutineType(types: !7277)
!7277 = !{null, !1151}
!7278 = !{!7279}
!7279 = !DILocalVariable(name: "base", arg: 1, scope: !7274, file: !7275, line: 136, type: !1151)
!7280 = !DILocation(line: 0, scope: !7274)
!7281 = !DILocation(line: 138, column: 16, scope: !7274)
!7282 = !DILocation(line: 139, column: 1, scope: !7274)
!7283 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !7240, file: !7240, line: 136, type: !7284, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !7286)
!7284 = !DISubroutineType(types: !7285)
!7285 = !{null, !1108, !111, !111, !122}
!7286 = !{!7287, !7288, !7289, !7290}
!7287 = !DILocalVariable(name: "base", arg: 1, scope: !7283, file: !7240, line: 136, type: !1108)
!7288 = !DILocalVariable(name: "mda", arg: 2, scope: !7283, file: !7240, line: 136, type: !111)
!7289 = !DILocalVariable(name: "domainId", arg: 3, scope: !7283, file: !7240, line: 136, type: !111)
!7290 = !DILocalVariable(name: "lock", arg: 4, scope: !7283, file: !7240, line: 136, type: !122)
!7291 = !DILocation(line: 0, scope: !7283)
!7292 = !DILocation(line: 140, column: 20, scope: !7283)
!7293 = !DILocation(line: 141, column: 1, scope: !7283)
!7294 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7295, file: !7295, line: 14, type: !4839, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7296)
!7295 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7296 = !{!7297, !7298}
!7297 = !DILocalVariable(name: "fmt", arg: 1, scope: !7294, file: !7295, line: 14, type: !108)
!7298 = !DILocalVariable(name: "ap", scope: !7294, file: !7295, line: 16, type: !7299)
!7299 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3847, line: 99, baseType: !7300)
!7300 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3847, line: 40, baseType: !7301)
!7301 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7295, baseType: !7302)
!7302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7303)
!7303 = !{!7304}
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7302, file: !7295, line: 16, baseType: !102, size: 32)
!7305 = !DILocation(line: 0, scope: !7294)
!7306 = !DILocation(line: 16, column: 2, scope: !7294)
!7307 = !DILocation(line: 16, column: 10, scope: !7294)
!7308 = !DILocation(line: 18, column: 2, scope: !7294)
!7309 = !DILocation(line: 19, column: 2, scope: !7294)
!7310 = !DILocation(line: 20, column: 2, scope: !7294)
!7311 = !DILocation(line: 21, column: 1, scope: !7294)
!7312 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7295, file: !7295, line: 23, type: !7313, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7315)
!7313 = !DISubroutineType(types: !7314)
!7314 = !{null, !108, !7299}
!7315 = !{!7316, !7317}
!7316 = !DILocalVariable(name: "fmt", arg: 1, scope: !7312, file: !7295, line: 23, type: !108)
!7317 = !DILocalVariable(name: "ap", arg: 2, scope: !7312, file: !7295, line: 23, type: !7299)
!7318 = !DILocation(line: 0, scope: !7312)
!7319 = !DILocation(line: 25, column: 2, scope: !7312)
!7320 = !DILocation(line: 26, column: 1, scope: !7312)
!7321 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7295, file: !7295, line: 52, type: !7322, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7324)
!7322 = !DISubroutineType(types: !7323)
!7323 = !{null, !103, !13, !156}
!7324 = !{!7325, !7326, !7327, !7328}
!7325 = !DILocalVariable(name: "level", arg: 1, scope: !7321, file: !7295, line: 52, type: !103)
!7326 = !DILocalVariable(name: "data", arg: 2, scope: !7321, file: !7295, line: 52, type: !13)
!7327 = !DILocalVariable(name: "size", arg: 3, scope: !7321, file: !7295, line: 52, type: !156)
!7328 = !DILocalVariable(name: "data_buffer", scope: !7321, file: !7295, line: 54, type: !108)
!7329 = !DILocation(line: 0, scope: !7321)
!7330 = !DILocation(line: 55, column: 14, scope: !7321)
!7331 = !DILocation(line: 55, column: 2, scope: !7321)
!7332 = !DILocation(line: 56, column: 3, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7321, file: !7295, line: 55, column: 20)
!7334 = !DILocation(line: 57, column: 3, scope: !7333)
!7335 = !DILocation(line: 59, column: 7, scope: !7333)
!7336 = distinct !{!7336, !7331, !7337}
!7337 = !DILocation(line: 65, column: 2, scope: !7321)
!7338 = !DILocation(line: 66, column: 1, scope: !7321)
!7339 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7340, file: !7340, line: 175, type: !7341, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7343)
!7340 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7341 = !DISubroutineType(types: !7342)
!7342 = !{!110, !103}
!7343 = !{!7344}
!7344 = !DILocalVariable(name: "level", arg: 1, scope: !7339, file: !7340, line: 175, type: !103)
!7345 = !DILocation(line: 0, scope: !7339)
!7346 = !DILocation(line: 177, column: 2, scope: !7339)
!7347 = !DILocation(line: 189, column: 1, scope: !7339)
!7348 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7295, file: !7295, line: 28, type: !7349, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7351)
!7349 = !DISubroutineType(types: !7350)
!7350 = !{null, !108, !156}
!7351 = !{!7352, !7353, !7354, !7356, !7358}
!7352 = !DILocalVariable(name: "data", arg: 1, scope: !7348, file: !7295, line: 28, type: !108)
!7353 = !DILocalVariable(name: "length", arg: 2, scope: !7348, file: !7295, line: 28, type: !156)
!7354 = !DILocalVariable(name: "i", scope: !7355, file: !7295, line: 30, type: !156)
!7355 = distinct !DILexicalBlock(scope: !7348, file: !7295, line: 30, column: 2)
!7356 = !DILocalVariable(name: "i", scope: !7357, file: !7295, line: 40, type: !156)
!7357 = distinct !DILexicalBlock(scope: !7348, file: !7295, line: 40, column: 2)
!7358 = !DILocalVariable(name: "c", scope: !7359, file: !7295, line: 42, type: !167)
!7359 = distinct !DILexicalBlock(scope: !7360, file: !7295, line: 41, column: 19)
!7360 = distinct !DILexicalBlock(scope: !7361, file: !7295, line: 41, column: 7)
!7361 = distinct !DILexicalBlock(scope: !7362, file: !7295, line: 40, column: 54)
!7362 = distinct !DILexicalBlock(scope: !7357, file: !7295, line: 40, column: 2)
!7363 = !DILocation(line: 0, scope: !7348)
!7364 = !DILocation(line: 0, scope: !7355)
!7365 = !DILocation(line: 30, column: 2, scope: !7355)
!7366 = !DILocation(line: 38, column: 2, scope: !7348)
!7367 = !DILocation(line: 0, scope: !7357)
!7368 = !DILocation(line: 40, column: 2, scope: !7357)
!7369 = !DILocation(line: 31, column: 9, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7371, file: !7295, line: 31, column: 7)
!7371 = distinct !DILexicalBlock(scope: !7372, file: !7295, line: 30, column: 54)
!7372 = distinct !DILexicalBlock(scope: !7355, file: !7295, line: 30, column: 2)
!7373 = !DILocation(line: 31, column: 7, scope: !7371)
!7374 = !DILocation(line: 32, column: 35, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7370, file: !7295, line: 31, column: 19)
!7376 = !DILocation(line: 32, column: 20, scope: !7375)
!7377 = !DILocation(line: 32, column: 4, scope: !7375)
!7378 = !DILocation(line: 33, column: 3, scope: !7375)
!7379 = !DILocation(line: 34, column: 4, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7370, file: !7295, line: 33, column: 10)
!7381 = !DILocation(line: 30, column: 50, scope: !7372)
!7382 = !DILocation(line: 30, column: 24, scope: !7372)
!7383 = distinct !{!7383, !7365, !7384}
!7384 = !DILocation(line: 36, column: 2, scope: !7355)
!7385 = !DILocation(line: 49, column: 2, scope: !7348)
!7386 = !DILocation(line: 50, column: 1, scope: !7348)
!7387 = !DILocation(line: 41, column: 9, scope: !7360)
!7388 = !DILocation(line: 41, column: 7, scope: !7361)
!7389 = !DILocation(line: 42, column: 22, scope: !7359)
!7390 = !DILocation(line: 0, scope: !7359)
!7391 = !DILocation(line: 44, column: 25, scope: !7359)
!7392 = !DILocation(line: 44, column: 17, scope: !7359)
!7393 = !DILocation(line: 44, column: 33, scope: !7359)
!7394 = !DILocation(line: 44, column: 4, scope: !7359)
!7395 = !DILocation(line: 45, column: 3, scope: !7359)
!7396 = !DILocation(line: 46, column: 4, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7360, file: !7295, line: 45, column: 10)
!7398 = !DILocation(line: 40, column: 50, scope: !7362)
!7399 = !DILocation(line: 40, column: 24, scope: !7362)
!7400 = distinct !{!7400, !7368, !7401}
!7401 = !DILocation(line: 48, column: 2, scope: !7357)
!7402 = distinct !DISubprogram(name: "isprint", scope: !6411, file: !6411, line: 37, type: !746, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7403)
!7403 = !{!7404}
!7404 = !DILocalVariable(name: "c", arg: 1, scope: !7402, file: !6411, line: 37, type: !103)
!7405 = !DILocation(line: 0, scope: !7402)
!7406 = !DILocation(line: 39, column: 38, scope: !7402)
!7407 = !DILocation(line: 39, column: 2, scope: !7402)
!7408 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7409, file: !7409, line: 57, type: !7410, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !7456)
!7409 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7410 = !DISubroutineType(types: !7411)
!7411 = !{null, !32, !7412}
!7412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7413, size: 32)
!7413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7414)
!7414 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2977, line: 141, baseType: !7415)
!7415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2977, line: 97, size: 256, elements: !7416)
!7416 = !{!7417}
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7415, file: !2977, line: 107, baseType: !7418, size: 256)
!7418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2977, line: 98, size: 256, elements: !7419)
!7419 = !{!7420, !7425, !7430, !7435, !7440, !7445, !7450, !7455}
!7420 = !DIDerivedType(tag: DW_TAG_member, scope: !7418, file: !2977, line: 99, baseType: !7421, size: 32)
!7421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7418, file: !2977, line: 99, size: 32, elements: !7422)
!7422 = !{!7423, !7424}
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7421, file: !2977, line: 99, baseType: !111, size: 32)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7421, file: !2977, line: 99, baseType: !111, size: 32)
!7425 = !DIDerivedType(tag: DW_TAG_member, scope: !7418, file: !2977, line: 100, baseType: !7426, size: 32, offset: 32)
!7426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7418, file: !2977, line: 100, size: 32, elements: !7427)
!7427 = !{!7428, !7429}
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7426, file: !2977, line: 100, baseType: !111, size: 32)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7426, file: !2977, line: 100, baseType: !111, size: 32)
!7430 = !DIDerivedType(tag: DW_TAG_member, scope: !7418, file: !2977, line: 101, baseType: !7431, size: 32, offset: 64)
!7431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7418, file: !2977, line: 101, size: 32, elements: !7432)
!7432 = !{!7433, !7434}
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7431, file: !2977, line: 101, baseType: !111, size: 32)
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7431, file: !2977, line: 101, baseType: !111, size: 32)
!7435 = !DIDerivedType(tag: DW_TAG_member, scope: !7418, file: !2977, line: 102, baseType: !7436, size: 32, offset: 96)
!7436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7418, file: !2977, line: 102, size: 32, elements: !7437)
!7437 = !{!7438, !7439}
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7436, file: !2977, line: 102, baseType: !111, size: 32)
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7436, file: !2977, line: 102, baseType: !111, size: 32)
!7440 = !DIDerivedType(tag: DW_TAG_member, scope: !7418, file: !2977, line: 103, baseType: !7441, size: 32, offset: 128)
!7441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7418, file: !2977, line: 103, size: 32, elements: !7442)
!7442 = !{!7443, !7444}
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7441, file: !2977, line: 103, baseType: !111, size: 32)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7441, file: !2977, line: 103, baseType: !111, size: 32)
!7445 = !DIDerivedType(tag: DW_TAG_member, scope: !7418, file: !2977, line: 104, baseType: !7446, size: 32, offset: 160)
!7446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7418, file: !2977, line: 104, size: 32, elements: !7447)
!7447 = !{!7448, !7449}
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7446, file: !2977, line: 104, baseType: !111, size: 32)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7446, file: !2977, line: 104, baseType: !111, size: 32)
!7450 = !DIDerivedType(tag: DW_TAG_member, scope: !7418, file: !2977, line: 105, baseType: !7451, size: 32, offset: 192)
!7451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7418, file: !2977, line: 105, size: 32, elements: !7452)
!7452 = !{!7453, !7454}
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7451, file: !2977, line: 105, baseType: !111, size: 32)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7451, file: !2977, line: 105, baseType: !111, size: 32)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7418, file: !2977, line: 106, baseType: !111, size: 32, offset: 224)
!7456 = !{!7457, !7458}
!7457 = !DILocalVariable(name: "reason", arg: 1, scope: !7408, file: !7409, line: 57, type: !32)
!7458 = !DILocalVariable(name: "esf", arg: 2, scope: !7408, file: !7409, line: 57, type: !7412)
!7459 = !DILocation(line: 0, scope: !7408)
!7460 = !DILocation(line: 60, column: 10, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7408, file: !7409, line: 60, column: 6)
!7462 = !DILocation(line: 60, column: 6, scope: !7408)
!7463 = !DILocation(line: 61, column: 3, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7461, file: !7409, line: 60, column: 19)
!7465 = !DILocation(line: 62, column: 2, scope: !7464)
!7466 = !DILocation(line: 63, column: 2, scope: !7408)
!7467 = !DILocation(line: 64, column: 1, scope: !7408)
!7468 = distinct !DISubprogram(name: "esf_dump", scope: !7409, file: !7409, line: 20, type: !7469, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !7471)
!7469 = !DISubroutineType(types: !7470)
!7470 = !{null, !7412}
!7471 = !{!7472}
!7472 = !DILocalVariable(name: "esf", arg: 1, scope: !7468, file: !7409, line: 20, type: !7412)
!7473 = !DILocation(line: 0, scope: !7468)
!7474 = !DILocation(line: 22, column: 2, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !7409, line: 22, column: 2)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !7409, line: 22, column: 2)
!7477 = distinct !DILexicalBlock(scope: !7478, file: !7409, line: 22, column: 2)
!7478 = distinct !DILexicalBlock(scope: !7468, file: !7409, line: 22, column: 2)
!7479 = !DILocation(line: 24, column: 2, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7481, file: !7409, line: 24, column: 2)
!7481 = distinct !DILexicalBlock(scope: !7482, file: !7409, line: 24, column: 2)
!7482 = distinct !DILexicalBlock(scope: !7483, file: !7409, line: 24, column: 2)
!7483 = distinct !DILexicalBlock(scope: !7468, file: !7409, line: 24, column: 2)
!7484 = !DILocation(line: 26, column: 2, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !7409, line: 26, column: 2)
!7486 = distinct !DILexicalBlock(scope: !7487, file: !7409, line: 26, column: 2)
!7487 = distinct !DILexicalBlock(scope: !7488, file: !7409, line: 26, column: 2)
!7488 = distinct !DILexicalBlock(scope: !7468, file: !7409, line: 26, column: 2)
!7489 = !DILocation(line: 53, column: 2, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7491, file: !7409, line: 53, column: 2)
!7491 = distinct !DILexicalBlock(scope: !7492, file: !7409, line: 53, column: 2)
!7492 = distinct !DILexicalBlock(scope: !7493, file: !7409, line: 53, column: 2)
!7493 = distinct !DILexicalBlock(scope: !7468, file: !7409, line: 53, column: 2)
!7494 = !DILocation(line: 55, column: 1, scope: !7468)
!7495 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7409, file: !7409, line: 82, type: !7496, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !7511)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{null, !7412, !7498}
!7498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7499, size: 32)
!7499 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !248, line: 37, baseType: !7500)
!7500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !7501)
!7501 = !{!7502, !7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510}
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7500, file: !248, line: 26, baseType: !111, size: 32)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7500, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7500, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7500, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7500, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7500, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7500, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7500, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7500, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!7511 = !{!7512, !7513, !7514}
!7512 = !DILocalVariable(name: "esf", arg: 1, scope: !7495, file: !7409, line: 82, type: !7412)
!7513 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7495, file: !7409, line: 82, type: !7498)
!7514 = !DILocalVariable(name: "reason", scope: !7495, file: !7409, line: 88, type: !32)
!7515 = !DILocation(line: 0, scope: !7495)
!7516 = !DILocation(line: 88, column: 35, scope: !7495)
!7517 = !DILocation(line: 108, column: 2, scope: !7495)
!7518 = !DILocation(line: 131, column: 1, scope: !7495)
!7519 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7409, file: !7409, line: 133, type: !7520, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !7522)
!7520 = !DISubroutineType(types: !7521)
!7521 = !{null, !102}
!7522 = !{!7523, !7524, !7525}
!7523 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7519, file: !7409, line: 133, type: !102)
!7524 = !DILocalVariable(name: "ssf_contents", scope: !7519, file: !7409, line: 135, type: !1732)
!7525 = !DILocalVariable(name: "oops_esf", scope: !7519, file: !7409, line: 136, type: !7414)
!7526 = !DILocation(line: 0, scope: !7519)
!7527 = !DILocation(line: 136, column: 2, scope: !7519)
!7528 = !DILocation(line: 136, column: 15, scope: !7519)
!7529 = !DILocation(line: 139, column: 22, scope: !7519)
!7530 = !DILocation(line: 139, column: 17, scope: !7519)
!7531 = !DILocation(line: 139, column: 20, scope: !7519)
!7532 = !DILocation(line: 141, column: 2, scope: !7519)
!7533 = !DILocation(line: 142, column: 2, scope: !7519)
!7534 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7535, file: !7535, line: 40, type: !7536, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7538)
!7535 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7536 = !DISubroutineType(types: !7537)
!7537 = !{null, !32}
!7538 = !{!7539}
!7539 = !DILocalVariable(name: "irq", arg: 1, scope: !7534, file: !7535, line: 40, type: !32)
!7540 = !DILocation(line: 0, scope: !7534)
!7541 = !DILocation(line: 42, column: 2, scope: !7534)
!7542 = !DILocation(line: 43, column: 1, scope: !7534)
!7543 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1925, file: !1925, line: 1684, type: !7544, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7546)
!7544 = !DISubroutineType(types: !7545)
!7545 = !{null, !2871}
!7546 = !{!7547}
!7547 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7543, file: !1925, line: 1684, type: !2871)
!7548 = !DILocation(line: 0, scope: !7543)
!7549 = !DILocation(line: 1686, column: 23, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7543, file: !1925, line: 1686, column: 7)
!7551 = !DILocation(line: 1686, column: 7, scope: !7543)
!7552 = !DILocation(line: 1688, column: 5, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7550, file: !1925, line: 1687, column: 3)
!7554 = !{i64 2154452123}
!7555 = !DILocation(line: 1689, column: 81, scope: !7553)
!7556 = !DILocation(line: 1689, column: 60, scope: !7553)
!7557 = !DILocation(line: 1689, column: 34, scope: !7553)
!7558 = !DILocation(line: 1689, column: 5, scope: !7553)
!7559 = !DILocation(line: 1689, column: 43, scope: !7553)
!7560 = !DILocation(line: 1690, column: 5, scope: !7553)
!7561 = !{i64 2154452237}
!7562 = !DILocation(line: 1691, column: 3, scope: !7553)
!7563 = !DILocation(line: 1692, column: 1, scope: !7543)
!7564 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7535, file: !7535, line: 45, type: !7536, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7565)
!7565 = !{!7566}
!7566 = !DILocalVariable(name: "irq", arg: 1, scope: !7564, file: !7535, line: 45, type: !32)
!7567 = !DILocation(line: 0, scope: !7564)
!7568 = !DILocation(line: 47, column: 2, scope: !7564)
!7569 = !DILocation(line: 48, column: 1, scope: !7564)
!7570 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1925, file: !1925, line: 1722, type: !7544, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7571)
!7571 = !{!7572}
!7572 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7570, file: !1925, line: 1722, type: !2871)
!7573 = !DILocation(line: 0, scope: !7570)
!7574 = !DILocation(line: 1724, column: 23, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7570, file: !1925, line: 1724, column: 7)
!7576 = !DILocation(line: 1724, column: 7, scope: !7570)
!7577 = !DILocation(line: 1726, column: 81, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7575, file: !1925, line: 1725, column: 3)
!7579 = !DILocation(line: 1726, column: 60, scope: !7578)
!7580 = !DILocation(line: 1726, column: 34, scope: !7578)
!7581 = !DILocation(line: 1726, column: 5, scope: !7578)
!7582 = !DILocation(line: 1726, column: 43, scope: !7578)
!7583 = !DILocation(line: 271, column: 3, scope: !7584, inlinedAt: !7586)
!7584 = distinct !DISubprogram(name: "__DSB", scope: !7585, file: !7585, line: 269, type: !317, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !2275)
!7585 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7586 = distinct !DILocation(line: 1727, column: 5, scope: !7578)
!7587 = !{i64 6906510}
!7588 = !DILocation(line: 260, column: 3, scope: !7589, inlinedAt: !7590)
!7589 = distinct !DISubprogram(name: "__ISB", scope: !7585, file: !7585, line: 258, type: !317, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !2275)
!7590 = distinct !DILocation(line: 1728, column: 5, scope: !7578)
!7591 = !{i64 6906227}
!7592 = !DILocation(line: 1729, column: 3, scope: !7578)
!7593 = !DILocation(line: 1730, column: 1, scope: !7570)
!7594 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7535, file: !7535, line: 50, type: !7595, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7597)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{!103, !32}
!7597 = !{!7598}
!7598 = !DILocalVariable(name: "irq", arg: 1, scope: !7594, file: !7535, line: 50, type: !32)
!7599 = !DILocation(line: 0, scope: !7594)
!7600 = !DILocation(line: 52, column: 20, scope: !7594)
!7601 = !DILocation(line: 52, column: 9, scope: !7594)
!7602 = !DILocation(line: 52, column: 41, scope: !7594)
!7603 = !DILocation(line: 52, column: 39, scope: !7594)
!7604 = !DILocation(line: 52, column: 2, scope: !7594)
!7605 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7535, file: !7535, line: 64, type: !7606, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7608)
!7606 = !DISubroutineType(types: !7607)
!7607 = !{null, !32, !32, !111}
!7608 = !{!7609, !7610, !7611}
!7609 = !DILocalVariable(name: "irq", arg: 1, scope: !7605, file: !7535, line: 64, type: !32)
!7610 = !DILocalVariable(name: "prio", arg: 2, scope: !7605, file: !7535, line: 64, type: !32)
!7611 = !DILocalVariable(name: "flags", arg: 3, scope: !7605, file: !7535, line: 64, type: !111)
!7612 = !DILocation(line: 0, scope: !7605)
!7613 = !DILocation(line: 83, column: 8, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7615, file: !7535, line: 82, column: 9)
!7615 = distinct !DILexicalBlock(scope: !7605, file: !7535, line: 76, column: 6)
!7616 = !DILocation(line: 91, column: 2, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7618, file: !7535, line: 91, column: 2)
!7618 = distinct !DILexicalBlock(scope: !7605, file: !7535, line: 91, column: 2)
!7619 = !DILocation(line: 91, column: 2, scope: !7618)
!7620 = !DILocation(line: 91, column: 2, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7617, file: !7535, line: 91, column: 2)
!7622 = !DILocation(line: 95, column: 2, scope: !7605)
!7623 = !DILocation(line: 96, column: 1, scope: !7605)
!7624 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1925, file: !1925, line: 1814, type: !7625, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7627)
!7625 = !DISubroutineType(types: !7626)
!7626 = !{null, !2871, !111}
!7627 = !{!7628, !7629}
!7628 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7624, file: !1925, line: 1814, type: !2871)
!7629 = !DILocalVariable(name: "priority", arg: 2, scope: !7624, file: !1925, line: 1814, type: !111)
!7630 = !DILocation(line: 0, scope: !7624)
!7631 = !DILocation(line: 0, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7624, file: !1925, line: 1816, column: 7)
!7633 = !DILocation(line: 1816, column: 7, scope: !7624)
!7634 = !DILocation(line: 1824, column: 1, scope: !7624)
!7635 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7535, file: !7535, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7636)
!7636 = !{!7637}
!7637 = !DILocalVariable(name: "unused", arg: 1, scope: !7635, file: !7535, line: 155, type: !13)
!7638 = !DILocation(line: 0, scope: !7635)
!7639 = !DILocation(line: 159, column: 2, scope: !7635)
!7640 = !DILocation(line: 160, column: 1, scope: !7635)
!7641 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7642, file: !7642, line: 87, type: !317, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !2275)
!7642 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7643 = !DILocation(line: 89, column: 2, scope: !7641)
!7644 = !DILocation(line: 90, column: 2, scope: !7641)
!7645 = !DILocation(line: 91, column: 1, scope: !7641)
!7646 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7642, file: !7642, line: 23, type: !317, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2275)
!7647 = !DISubprogram(name: "z_arm_int_exit", scope: !7648, file: !7648, line: 153, type: !317, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2275)
!7648 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7649 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7650, file: !7650, line: 256, type: !317, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2275)
!7650 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7651 = !DILocation(line: 258, column: 2, scope: !7649)
!7652 = !DILocation(line: 260, column: 2, scope: !7649)
!7653 = !DILocation(line: 262, column: 2, scope: !7649)
!7654 = !DILocation(line: 263, column: 2, scope: !7649)
!7655 = !DILocation(line: 267, column: 2, scope: !7649)
!7656 = !DILocation(line: 268, column: 2, scope: !7649)
!7657 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7650, file: !7650, line: 53, type: !317, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2275)
!7658 = !DILocation(line: 55, column: 12, scope: !7657)
!7659 = !DILocation(line: 271, column: 3, scope: !7660, inlinedAt: !7661)
!7660 = distinct !DISubprogram(name: "__DSB", scope: !7585, file: !7585, line: 269, type: !317, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2275)
!7661 = distinct !DILocation(line: 56, column: 2, scope: !7657)
!7662 = !{i64 6942284}
!7663 = !DILocation(line: 260, column: 3, scope: !7664, inlinedAt: !7665)
!7664 = distinct !DISubprogram(name: "__ISB", scope: !7585, file: !7585, line: 258, type: !317, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2275)
!7665 = distinct !DILocation(line: 57, column: 2, scope: !7657)
!7666 = !{i64 6942001}
!7667 = !DILocation(line: 58, column: 1, scope: !7657)
!7668 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7650, file: !7650, line: 96, type: !317, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2275)
!7669 = !DILocation(line: 103, column: 13, scope: !7668)
!7670 = !DILocation(line: 975, column: 3, scope: !7671, inlinedAt: !7676)
!7671 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7585, file: !7585, line: 971, type: !7672, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !7674)
!7672 = !DISubroutineType(types: !7673)
!7673 = !{!111}
!7674 = !{!7675}
!7675 = !DILocalVariable(name: "result", scope: !7671, file: !7585, line: 973, type: !111)
!7676 = distinct !DILocation(line: 189, column: 16, scope: !7668)
!7677 = !{i64 6963114}
!7678 = !DILocation(line: 0, scope: !7671, inlinedAt: !7676)
!7679 = !DILocation(line: 189, column: 32, scope: !7668)
!7680 = !DILocalVariable(name: "control", arg: 1, scope: !7681, file: !7585, line: 1001, type: !111)
!7681 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7585, file: !7585, line: 1001, type: !7682, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !7684)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{null, !111}
!7684 = !{!7680}
!7685 = !DILocation(line: 0, scope: !7681, inlinedAt: !7686)
!7686 = distinct !DILocation(line: 189, column: 2, scope: !7668)
!7687 = !DILocation(line: 1003, column: 3, scope: !7681, inlinedAt: !7686)
!7688 = !{i64 6963834}
!7689 = !DILocation(line: 260, column: 3, scope: !7664, inlinedAt: !7690)
!7690 = distinct !DILocation(line: 1004, column: 3, scope: !7681, inlinedAt: !7686)
!7691 = !DILocation(line: 191, column: 1, scope: !7668)
!7692 = distinct !DISubprogram(name: "arch_swap", scope: !7693, file: !7693, line: 33, type: !7595, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !7694)
!7693 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7694 = !{!7695}
!7695 = !DILocalVariable(name: "key", arg: 1, scope: !7692, file: !7693, line: 33, type: !32)
!7696 = !DILocation(line: 0, scope: !7692)
!7697 = !DILocation(line: 36, column: 2, scope: !7692)
!7698 = !DILocation(line: 36, column: 17, scope: !7692)
!7699 = !DILocation(line: 36, column: 25, scope: !7692)
!7700 = !DILocation(line: 37, column: 37, scope: !7692)
!7701 = !DILocation(line: 37, column: 17, scope: !7692)
!7702 = !DILocation(line: 37, column: 35, scope: !7692)
!7703 = !DILocation(line: 41, column: 12, scope: !7692)
!7704 = !DILocalVariable(name: "key", arg: 1, scope: !7705, file: !7706, line: 84, type: !32)
!7705 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7706, file: !7706, line: 84, type: !7536, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !7707)
!7706 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7707 = !{!7704}
!7708 = !DILocation(line: 0, scope: !7705, inlinedAt: !7709)
!7709 = distinct !DILocation(line: 44, column: 2, scope: !7692)
!7710 = !DILocation(line: 95, column: 2, scope: !7705, inlinedAt: !7709)
!7711 = !{i64 2844189}
!7712 = !DILocation(line: 53, column: 9, scope: !7692)
!7713 = !DILocation(line: 53, column: 24, scope: !7692)
!7714 = !DILocation(line: 53, column: 2, scope: !7692)
!7715 = distinct !DISubprogram(name: "arch_new_thread", scope: !7716, file: !7716, line: 56, type: !7717, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !7820)
!7716 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7717 = !DISubroutineType(types: !7718)
!7718 = !{null, !7719, !7815, !160, !304, !102, !102, !102}
!7719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7720, size: 32)
!7720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !7721)
!7721 = !{!7722, !7780, !7792, !7793, !7794, !7795, !7810}
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7720, file: !199, line: 247, baseType: !7723, size: 384)
!7723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !7724)
!7724 = !{!7725, !7749, !7756, !7757, !7758, !7767, !7768, !7769}
!7725 = !DIDerivedType(tag: DW_TAG_member, scope: !7723, file: !199, line: 60, baseType: !7726, size: 64)
!7726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7723, file: !199, line: 60, size: 64, elements: !7727)
!7727 = !{!7728, !7743}
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7726, file: !199, line: 61, baseType: !7729, size: 64)
!7729 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !7730)
!7730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !7731)
!7731 = !{!7732, !7738}
!7732 = !DIDerivedType(tag: DW_TAG_member, scope: !7730, file: !136, line: 38, baseType: !7733, size: 32)
!7733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7730, file: !136, line: 38, size: 32, elements: !7734)
!7734 = !{!7735, !7737}
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7733, file: !136, line: 39, baseType: !7736, size: 32)
!7736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7730, size: 32)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7733, file: !136, line: 40, baseType: !7736, size: 32)
!7738 = !DIDerivedType(tag: DW_TAG_member, scope: !7730, file: !136, line: 42, baseType: !7739, size: 32, offset: 32)
!7739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7730, file: !136, line: 42, size: 32, elements: !7740)
!7740 = !{!7741, !7742}
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7739, file: !136, line: 43, baseType: !7736, size: 32)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7739, file: !136, line: 44, baseType: !7736, size: 32)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7726, file: !199, line: 62, baseType: !7744, size: 64)
!7744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !7745)
!7745 = !{!7746}
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7744, file: !211, line: 50, baseType: !7747, size: 64)
!7747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7748, size: 64, elements: !216)
!7748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7744, size: 32)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7723, file: !199, line: 68, baseType: !7750, size: 32, offset: 64)
!7750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7751, size: 32)
!7751 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !7752)
!7752 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !7753)
!7753 = !{!7754}
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7752, file: !131, line: 232, baseType: !7755, size: 64)
!7755 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !7730)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7723, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7723, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!7758 = !DIDerivedType(tag: DW_TAG_member, scope: !7723, file: !199, line: 90, baseType: !7759, size: 16, offset: 112)
!7759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7723, file: !199, line: 90, size: 16, elements: !7760)
!7760 = !{!7761, !7766}
!7761 = !DIDerivedType(tag: DW_TAG_member, scope: !7759, file: !199, line: 91, baseType: !7762, size: 16)
!7762 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7759, file: !199, line: 91, size: 16, elements: !7763)
!7763 = !{!7764, !7765}
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7762, file: !199, line: 96, baseType: !229, size: 8)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7762, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7759, file: !199, line: 100, baseType: !181, size: 16)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7723, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7723, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7723, file: !199, line: 131, baseType: !7770, size: 192, offset: 192)
!7770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !7771)
!7771 = !{!7772, !7773, !7779}
!7772 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7770, file: !131, line: 245, baseType: !7729, size: 64)
!7773 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7770, file: !131, line: 246, baseType: !7774, size: 32, offset: 64)
!7774 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !7775)
!7775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7776, size: 32)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{null, !7778}
!7778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7770, size: 32)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7770, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7720, file: !199, line: 250, baseType: !7781, size: 288, offset: 384)
!7781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !7782)
!7782 = !{!7783, !7784, !7785, !7786, !7787, !7788, !7789, !7790, !7791}
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7781, file: !248, line: 26, baseType: !111, size: 32)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7781, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7781, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7781, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7781, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7781, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7781, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7781, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7781, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7720, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7720, file: !199, line: 256, baseType: !7751, size: 64, offset: 704)
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7720, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7720, file: !199, line: 325, baseType: !7796, size: 32, offset: 800)
!7796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7797, size: 32)
!7797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !7798)
!7798 = !{!7799, !7805, !7806}
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7797, file: !127, line: 5074, baseType: !7800, size: 96)
!7800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !7801)
!7801 = !{!7802, !7803, !7804}
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7800, file: !268, line: 57, baseType: !271, size: 32)
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7800, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7800, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7797, file: !127, line: 5075, baseType: !7751, size: 64, offset: 96)
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7797, file: !127, line: 5076, baseType: !7807, size: 32, offset: 160)
!7807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !7808)
!7808 = !{!7809}
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7807, file: !152, line: 52, baseType: !22, size: 32)
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7720, file: !199, line: 343, baseType: !7811, size: 64, offset: 832)
!7811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !7812)
!7812 = !{!7813, !7814}
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7811, file: !248, line: 63, baseType: !111, size: 32)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7811, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!7815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7816, size: 32)
!7816 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !297, line: 44, baseType: !7817)
!7817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !299, line: 47, size: 8, elements: !7818)
!7818 = !{!7819}
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7817, file: !299, line: 48, baseType: !110, size: 8)
!7820 = !{!7821, !7822, !7823, !7824, !7825, !7826, !7827, !7828}
!7821 = !DILocalVariable(name: "thread", arg: 1, scope: !7715, file: !7716, line: 56, type: !7719)
!7822 = !DILocalVariable(name: "stack", arg: 2, scope: !7715, file: !7716, line: 56, type: !7815)
!7823 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7715, file: !7716, line: 57, type: !160)
!7824 = !DILocalVariable(name: "entry", arg: 4, scope: !7715, file: !7716, line: 57, type: !304)
!7825 = !DILocalVariable(name: "p1", arg: 5, scope: !7715, file: !7716, line: 58, type: !102)
!7826 = !DILocalVariable(name: "p2", arg: 6, scope: !7715, file: !7716, line: 58, type: !102)
!7827 = !DILocalVariable(name: "p3", arg: 7, scope: !7715, file: !7716, line: 58, type: !102)
!7828 = !DILocalVariable(name: "iframe", scope: !7715, file: !7716, line: 60, type: !2975)
!7829 = !DILocation(line: 0, scope: !7715)
!7830 = !DILocation(line: 85, column: 11, scope: !7715)
!7831 = !DILocation(line: 93, column: 10, scope: !7715)
!7832 = !DILocation(line: 98, column: 13, scope: !7715)
!7833 = !DILocation(line: 100, column: 15, scope: !7715)
!7834 = !DILocation(line: 100, column: 10, scope: !7715)
!7835 = !DILocation(line: 100, column: 13, scope: !7715)
!7836 = !DILocation(line: 101, column: 15, scope: !7715)
!7837 = !DILocation(line: 101, column: 10, scope: !7715)
!7838 = !DILocation(line: 101, column: 13, scope: !7715)
!7839 = !DILocation(line: 102, column: 15, scope: !7715)
!7840 = !DILocation(line: 102, column: 10, scope: !7715)
!7841 = !DILocation(line: 102, column: 13, scope: !7715)
!7842 = !DILocation(line: 103, column: 15, scope: !7715)
!7843 = !DILocation(line: 103, column: 10, scope: !7715)
!7844 = !DILocation(line: 103, column: 13, scope: !7715)
!7845 = !DILocation(line: 106, column: 10, scope: !7715)
!7846 = !DILocation(line: 106, column: 15, scope: !7715)
!7847 = !DILocation(line: 122, column: 29, scope: !7715)
!7848 = !DILocation(line: 122, column: 23, scope: !7715)
!7849 = !DILocation(line: 122, column: 27, scope: !7715)
!7850 = !DILocation(line: 123, column: 15, scope: !7715)
!7851 = !DILocation(line: 123, column: 23, scope: !7715)
!7852 = !DILocation(line: 143, column: 1, scope: !7715)
!7853 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7716, file: !7716, line: 530, type: !7854, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2972, retainedNodes: !7856)
!7854 = !DISubroutineType(types: !7855)
!7855 = !{null, !7719, !160, !304}
!7856 = !{!7857, !7858, !7859}
!7857 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7853, file: !7716, line: 530, type: !7719)
!7858 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7853, file: !7716, line: 530, type: !160)
!7859 = !DILocalVariable(name: "_main", arg: 3, scope: !7853, file: !7716, line: 531, type: !304)
!7860 = !DILocation(line: 0, scope: !7853)
!7861 = !DILocation(line: 535, column: 11, scope: !7853)
!7862 = !DILocation(line: 576, column: 2, scope: !7853)
!7863 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7864 = !DILocation(line: 603, column: 2, scope: !7853)
!7865 = distinct !DISubprogram(name: "z_arm_fault", scope: !7866, file: !7866, line: 1036, type: !7867, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !7882)
!7866 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7867 = !DISubroutineType(types: !7868)
!7868 = !{null, !111, !111, !111, !7869}
!7869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7870, size: 32)
!7870 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !248, line: 37, baseType: !7871)
!7871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !7872)
!7872 = !{!7873, !7874, !7875, !7876, !7877, !7878, !7879, !7880, !7881}
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7871, file: !248, line: 26, baseType: !111, size: 32)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7871, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7871, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7871, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!7877 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7871, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7871, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7871, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7871, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7871, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!7882 = !{!7883, !7884, !7885, !7886, !7887, !7888, !7889, !7890, !7891, !7892}
!7883 = !DILocalVariable(name: "msp", arg: 1, scope: !7865, file: !7866, line: 1036, type: !111)
!7884 = !DILocalVariable(name: "psp", arg: 2, scope: !7865, file: !7866, line: 1036, type: !111)
!7885 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7865, file: !7866, line: 1036, type: !111)
!7886 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7865, file: !7866, line: 1037, type: !7869)
!7887 = !DILocalVariable(name: "reason", scope: !7865, file: !7866, line: 1039, type: !111)
!7888 = !DILocalVariable(name: "fault", scope: !7865, file: !7866, line: 1040, type: !103)
!7889 = !DILocalVariable(name: "recoverable", scope: !7865, file: !7866, line: 1041, type: !122)
!7890 = !DILocalVariable(name: "nested_exc", scope: !7865, file: !7866, line: 1041, type: !122)
!7891 = !DILocalVariable(name: "esf", scope: !7865, file: !7866, line: 1042, type: !3043)
!7892 = !DILocalVariable(name: "esf_copy", scope: !7865, file: !7866, line: 1047, type: !3044)
!7893 = !DILocation(line: 0, scope: !7865)
!7894 = !DILocation(line: 1040, column: 19, scope: !7865)
!7895 = !DILocation(line: 1041, column: 2, scope: !7865)
!7896 = !DILocation(line: 1047, column: 2, scope: !7865)
!7897 = !DILocation(line: 1047, column: 15, scope: !7865)
!7898 = !DILocalVariable(name: "key", arg: 1, scope: !7899, file: !7706, line: 84, type: !32)
!7899 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7706, file: !7706, line: 84, type: !7536, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !7900)
!7900 = !{!7898}
!7901 = !DILocation(line: 0, scope: !7899, inlinedAt: !7902)
!7902 = distinct !DILocation(line: 1050, column: 2, scope: !7865)
!7903 = !DILocation(line: 95, column: 2, scope: !7899, inlinedAt: !7902)
!7904 = !{i64 2877433}
!7905 = !DILocation(line: 1055, column: 9, scope: !7865)
!7906 = !DILocation(line: 1056, column: 2, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7908, file: !7866, line: 1056, column: 2)
!7908 = distinct !DILexicalBlock(scope: !7865, file: !7866, line: 1056, column: 2)
!7909 = !DILocation(line: 1056, column: 2, scope: !7908)
!7910 = !DILocation(line: 1056, column: 2, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7907, file: !7866, line: 1056, column: 2)
!7912 = !DILocation(line: 1040, column: 24, scope: !7865)
!7913 = !DILocation(line: 1063, column: 11, scope: !7865)
!7914 = !DILocation(line: 1064, column: 6, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7865, file: !7866, line: 1064, column: 6)
!7916 = !{i8 0, i8 2}
!7917 = !DILocation(line: 1064, column: 6, scope: !7865)
!7918 = !DILocation(line: 1070, column: 20, scope: !7865)
!7919 = !DILocation(line: 1070, column: 2, scope: !7865)
!7920 = !DILocation(line: 1089, column: 6, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7865, file: !7866, line: 1089, column: 6)
!7922 = !DILocation(line: 0, scope: !7921)
!7923 = !DILocation(line: 1089, column: 6, scope: !7865)
!7924 = !DILocation(line: 1090, column: 28, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7926, file: !7866, line: 1090, column: 7)
!7926 = distinct !DILexicalBlock(scope: !7921, file: !7866, line: 1089, column: 18)
!7927 = !DILocation(line: 1090, column: 44, scope: !7925)
!7928 = !DILocation(line: 1090, column: 7, scope: !7926)
!7929 = !DILocation(line: 1091, column: 24, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7925, file: !7866, line: 1090, column: 50)
!7931 = !DILocation(line: 1092, column: 3, scope: !7930)
!7932 = !DILocation(line: 1094, column: 23, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7921, file: !7866, line: 1093, column: 9)
!7934 = !DILocation(line: 1097, column: 2, scope: !7865)
!7935 = !DILocation(line: 1098, column: 1, scope: !7865)
!7936 = distinct !DISubprogram(name: "get_esf", scope: !7866, file: !7866, line: 894, type: !7937, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !7940)
!7937 = !DISubroutineType(types: !7938)
!7938 = !{!3043, !111, !111, !111, !7939}
!7939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!7940 = !{!7941, !7942, !7943, !7944, !7945, !7946}
!7941 = !DILocalVariable(name: "msp", arg: 1, scope: !7936, file: !7866, line: 894, type: !111)
!7942 = !DILocalVariable(name: "psp", arg: 2, scope: !7936, file: !7866, line: 894, type: !111)
!7943 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7936, file: !7866, line: 894, type: !111)
!7944 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7936, file: !7866, line: 895, type: !7939)
!7945 = !DILocalVariable(name: "alternative_state_exc", scope: !7936, file: !7866, line: 897, type: !122)
!7946 = !DILocalVariable(name: "ptr_esf", scope: !7936, file: !7866, line: 898, type: !3043)
!7947 = !DILocation(line: 0, scope: !7936)
!7948 = !DILocation(line: 900, column: 14, scope: !7936)
!7949 = !DILocation(line: 902, column: 49, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7936, file: !7866, line: 902, column: 6)
!7951 = !DILocation(line: 902, column: 6, scope: !7936)
!7952 = !DILocation(line: 983, column: 44, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7936, file: !7866, line: 983, column: 6)
!7954 = !DILocation(line: 985, column: 3, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7956, file: !7866, line: 985, column: 3)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !7866, line: 985, column: 3)
!7957 = distinct !DILexicalBlock(scope: !7958, file: !7866, line: 985, column: 3)
!7958 = distinct !DILexicalBlock(scope: !7959, file: !7866, line: 985, column: 3)
!7959 = distinct !DILexicalBlock(scope: !7953, file: !7866, line: 984, column: 47)
!7960 = !DILocation(line: 986, column: 3, scope: !7959)
!7961 = !DILocation(line: 983, column: 18, scope: !7953)
!7962 = !DILocation(line: 991, column: 7, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !7866, line: 990, column: 30)
!7964 = distinct !DILexicalBlock(scope: !7936, file: !7866, line: 990, column: 6)
!7965 = !DILocation(line: 998, column: 16, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7967, file: !7866, line: 995, column: 10)
!7967 = distinct !DILexicalBlock(scope: !7963, file: !7866, line: 991, column: 7)
!7968 = !DILocation(line: 1002, column: 2, scope: !7936)
!7969 = !DILocation(line: 1003, column: 1, scope: !7936)
!7970 = distinct !DISubprogram(name: "fault_handle", scope: !7866, file: !7866, line: 786, type: !7971, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !7973)
!7971 = !DISubroutineType(types: !7972)
!7972 = !{!111, !3043, !103, !7939}
!7973 = !{!7974, !7975, !7976, !7977}
!7974 = !DILocalVariable(name: "esf", arg: 1, scope: !7970, file: !7866, line: 786, type: !3043)
!7975 = !DILocalVariable(name: "fault", arg: 2, scope: !7970, file: !7866, line: 786, type: !103)
!7976 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7970, file: !7866, line: 786, type: !7939)
!7977 = !DILocalVariable(name: "reason", scope: !7970, file: !7866, line: 788, type: !111)
!7978 = !DILocation(line: 0, scope: !7970)
!7979 = !DILocation(line: 790, column: 15, scope: !7970)
!7980 = !DILocation(line: 792, column: 2, scope: !7970)
!7981 = !DILocation(line: 794, column: 12, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7970, file: !7866, line: 792, column: 17)
!7983 = !DILocation(line: 795, column: 3, scope: !7982)
!7984 = !DILocation(line: 800, column: 12, scope: !7982)
!7985 = !DILocation(line: 801, column: 3, scope: !7982)
!7986 = !DILocation(line: 803, column: 12, scope: !7982)
!7987 = !DILocation(line: 804, column: 3, scope: !7982)
!7988 = !DILocation(line: 806, column: 12, scope: !7982)
!7989 = !DILocation(line: 807, column: 3, scope: !7982)
!7990 = !DILocation(line: 814, column: 3, scope: !7982)
!7991 = !DILocation(line: 815, column: 3, scope: !7982)
!7992 = !DILocation(line: 820, column: 3, scope: !7982)
!7993 = !DILocation(line: 821, column: 3, scope: !7982)
!7994 = !DILocation(line: 829, column: 2, scope: !7970)
!7995 = distinct !DISubprogram(name: "hard_fault", scope: !7866, file: !7866, line: 709, type: !7996, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !7998)
!7996 = !DISubroutineType(types: !7997)
!7997 = !{!111, !3043, !7939}
!7998 = !{!7999, !8000, !8001}
!7999 = !DILocalVariable(name: "esf", arg: 1, scope: !7995, file: !7866, line: 709, type: !3043)
!8000 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7995, file: !7866, line: 709, type: !7939)
!8001 = !DILocalVariable(name: "reason", scope: !7995, file: !7866, line: 711, type: !111)
!8002 = !DILocation(line: 0, scope: !7995)
!8003 = !DILocation(line: 713, column: 2, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !8005, file: !7866, line: 713, column: 2)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !7866, line: 713, column: 2)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !7866, line: 713, column: 2)
!8007 = distinct !DILexicalBlock(scope: !7995, file: !7866, line: 713, column: 2)
!8008 = !DILocation(line: 732, column: 15, scope: !7995)
!8009 = !DILocation(line: 734, column: 12, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7995, file: !7866, line: 734, column: 6)
!8011 = !DILocation(line: 734, column: 17, scope: !8010)
!8012 = !DILocation(line: 734, column: 41, scope: !8010)
!8013 = !DILocation(line: 734, column: 6, scope: !7995)
!8014 = !DILocation(line: 735, column: 3, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8016, file: !7866, line: 735, column: 3)
!8016 = distinct !DILexicalBlock(scope: !8017, file: !7866, line: 735, column: 3)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !7866, line: 735, column: 3)
!8018 = distinct !DILexicalBlock(scope: !8019, file: !7866, line: 735, column: 3)
!8019 = distinct !DILexicalBlock(scope: !8010, file: !7866, line: 734, column: 47)
!8020 = !DILocation(line: 736, column: 2, scope: !8019)
!8021 = !DILocation(line: 736, column: 19, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8010, file: !7866, line: 736, column: 13)
!8023 = !DILocation(line: 736, column: 49, scope: !8022)
!8024 = !DILocation(line: 736, column: 13, scope: !8010)
!8025 = !DILocation(line: 737, column: 3, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !7866, line: 737, column: 3)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !7866, line: 737, column: 3)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !7866, line: 737, column: 3)
!8029 = distinct !DILexicalBlock(scope: !8030, file: !7866, line: 737, column: 3)
!8030 = distinct !DILexicalBlock(scope: !8022, file: !7866, line: 736, column: 55)
!8031 = !DILocation(line: 738, column: 2, scope: !8030)
!8032 = !DILocation(line: 738, column: 19, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8022, file: !7866, line: 738, column: 13)
!8034 = !DILocation(line: 738, column: 24, scope: !8033)
!8035 = !DILocation(line: 738, column: 47, scope: !8033)
!8036 = !DILocation(line: 738, column: 13, scope: !8022)
!8037 = !DILocation(line: 739, column: 3, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !7866, line: 739, column: 3)
!8039 = distinct !DILexicalBlock(scope: !8040, file: !7866, line: 739, column: 3)
!8040 = distinct !DILexicalBlock(scope: !8041, file: !7866, line: 739, column: 3)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !7866, line: 739, column: 3)
!8042 = distinct !DILexicalBlock(scope: !8033, file: !7866, line: 738, column: 53)
!8043 = !DILocation(line: 740, column: 7, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8042, file: !7866, line: 740, column: 7)
!8045 = !DILocation(line: 740, column: 7, scope: !8042)
!8046 = !DILocation(line: 741, column: 4, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !7866, line: 741, column: 4)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !7866, line: 741, column: 4)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !7866, line: 741, column: 4)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !7866, line: 741, column: 4)
!8051 = distinct !DILexicalBlock(scope: !8044, file: !7866, line: 740, column: 38)
!8052 = !DILocation(line: 742, column: 24, scope: !8051)
!8053 = !DILocation(line: 743, column: 3, scope: !8051)
!8054 = !DILocation(line: 743, column: 20, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8044, file: !7866, line: 743, column: 14)
!8056 = !DILocation(line: 743, column: 25, scope: !8055)
!8057 = !DILocation(line: 743, column: 52, scope: !8055)
!8058 = !DILocation(line: 743, column: 14, scope: !8044)
!8059 = !DILocation(line: 744, column: 13, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8055, file: !7866, line: 743, column: 58)
!8061 = !DILocation(line: 745, column: 3, scope: !8060)
!8062 = !DILocation(line: 745, column: 20, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8055, file: !7866, line: 745, column: 14)
!8064 = !DILocation(line: 745, column: 25, scope: !8063)
!8065 = !DILocation(line: 745, column: 52, scope: !8063)
!8066 = !DILocation(line: 745, column: 14, scope: !8055)
!8067 = !DILocation(line: 746, column: 13, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8063, file: !7866, line: 745, column: 58)
!8069 = !DILocation(line: 747, column: 3, scope: !8068)
!8070 = !DILocation(line: 747, column: 20, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8063, file: !7866, line: 747, column: 14)
!8072 = !DILocation(line: 747, column: 52, scope: !8071)
!8073 = !DILocation(line: 747, column: 14, scope: !8063)
!8074 = !DILocation(line: 748, column: 13, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8071, file: !7866, line: 747, column: 58)
!8076 = !DILocation(line: 754, column: 4, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8078, file: !7866, line: 754, column: 4)
!8078 = distinct !DILexicalBlock(scope: !8079, file: !7866, line: 754, column: 4)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !7866, line: 754, column: 4)
!8080 = distinct !DILexicalBlock(scope: !8071, file: !7866, line: 753, column: 10)
!8081 = !DILocation(line: 758, column: 3, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !7866, line: 758, column: 3)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !7866, line: 758, column: 3)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !7866, line: 758, column: 3)
!8085 = distinct !DILexicalBlock(scope: !8033, file: !7866, line: 757, column: 9)
!8086 = !DILocation(line: 766, column: 2, scope: !7995)
!8087 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7866, file: !7866, line: 229, type: !7971, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8088)
!8088 = !{!8089, !8090, !8091, !8092, !8093, !8094}
!8089 = !DILocalVariable(name: "esf", arg: 1, scope: !8087, file: !7866, line: 229, type: !3043)
!8090 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8087, file: !7866, line: 229, type: !103)
!8091 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8087, file: !7866, line: 230, type: !7939)
!8092 = !DILocalVariable(name: "reason", scope: !8087, file: !7866, line: 232, type: !111)
!8093 = !DILocalVariable(name: "mmfar", scope: !8087, file: !7866, line: 233, type: !111)
!8094 = !DILocalVariable(name: "temp", scope: !8095, file: !7866, line: 254, type: !111)
!8095 = distinct !DILexicalBlock(scope: !8096, file: !7866, line: 244, column: 48)
!8096 = distinct !DILexicalBlock(scope: !8087, file: !7866, line: 244, column: 6)
!8097 = !DILocation(line: 0, scope: !8087)
!8098 = !DILocation(line: 235, column: 2, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !7866, line: 235, column: 2)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !7866, line: 235, column: 2)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !7866, line: 235, column: 2)
!8102 = distinct !DILexicalBlock(scope: !8087, file: !7866, line: 235, column: 2)
!8103 = !DILocation(line: 237, column: 12, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8087, file: !7866, line: 237, column: 6)
!8105 = !DILocation(line: 237, column: 17, scope: !8104)
!8106 = !DILocation(line: 237, column: 41, scope: !8104)
!8107 = !DILocation(line: 237, column: 6, scope: !8087)
!8108 = !DILocation(line: 238, column: 3, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !7866, line: 238, column: 3)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !7866, line: 238, column: 3)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !7866, line: 238, column: 3)
!8112 = distinct !DILexicalBlock(scope: !8113, file: !7866, line: 238, column: 3)
!8113 = distinct !DILexicalBlock(scope: !8104, file: !7866, line: 237, column: 47)
!8114 = !DILocation(line: 240, column: 2, scope: !8113)
!8115 = !DILocation(line: 241, column: 12, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8087, file: !7866, line: 241, column: 6)
!8117 = !DILocation(line: 241, column: 17, scope: !8116)
!8118 = !DILocation(line: 241, column: 43, scope: !8116)
!8119 = !DILocation(line: 241, column: 6, scope: !8087)
!8120 = !DILocation(line: 242, column: 3, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8122, file: !7866, line: 242, column: 3)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !7866, line: 242, column: 3)
!8123 = distinct !DILexicalBlock(scope: !8124, file: !7866, line: 242, column: 3)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !7866, line: 242, column: 3)
!8125 = distinct !DILexicalBlock(scope: !8116, file: !7866, line: 241, column: 49)
!8126 = !DILocation(line: 243, column: 2, scope: !8125)
!8127 = !DILocation(line: 244, column: 12, scope: !8096)
!8128 = !DILocation(line: 244, column: 17, scope: !8096)
!8129 = !DILocation(line: 244, column: 42, scope: !8096)
!8130 = !DILocation(line: 244, column: 6, scope: !8087)
!8131 = !DILocation(line: 245, column: 3, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8133, file: !7866, line: 245, column: 3)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !7866, line: 245, column: 3)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !7866, line: 245, column: 3)
!8135 = distinct !DILexicalBlock(scope: !8095, file: !7866, line: 245, column: 3)
!8136 = !DILocation(line: 254, column: 24, scope: !8095)
!8137 = !DILocation(line: 0, scope: !8095)
!8138 = !DILocation(line: 256, column: 13, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8095, file: !7866, line: 256, column: 7)
!8140 = !DILocation(line: 256, column: 18, scope: !8139)
!8141 = !DILocation(line: 256, column: 44, scope: !8139)
!8142 = !DILocation(line: 256, column: 7, scope: !8095)
!8143 = !DILocation(line: 258, column: 4, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8145, file: !7866, line: 258, column: 4)
!8145 = distinct !DILexicalBlock(scope: !8146, file: !7866, line: 258, column: 4)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !7866, line: 258, column: 4)
!8147 = distinct !DILexicalBlock(scope: !8148, file: !7866, line: 258, column: 4)
!8148 = distinct !DILexicalBlock(scope: !8139, file: !7866, line: 256, column: 50)
!8149 = !DILocation(line: 259, column: 24, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8148, file: !7866, line: 259, column: 8)
!8151 = !DILocation(line: 259, column: 8, scope: !8148)
!8152 = !DILocation(line: 261, column: 15, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8150, file: !7866, line: 259, column: 30)
!8154 = !DILocation(line: 262, column: 4, scope: !8153)
!8155 = !DILocation(line: 265, column: 12, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8087, file: !7866, line: 265, column: 6)
!8157 = !DILocation(line: 265, column: 17, scope: !8156)
!8158 = !DILocation(line: 265, column: 42, scope: !8156)
!8159 = !DILocation(line: 265, column: 6, scope: !8087)
!8160 = !DILocation(line: 266, column: 3, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8162, file: !7866, line: 266, column: 3)
!8162 = distinct !DILexicalBlock(scope: !8163, file: !7866, line: 266, column: 3)
!8163 = distinct !DILexicalBlock(scope: !8164, file: !7866, line: 266, column: 3)
!8164 = distinct !DILexicalBlock(scope: !8165, file: !7866, line: 266, column: 3)
!8165 = distinct !DILexicalBlock(scope: !8156, file: !7866, line: 265, column: 48)
!8166 = !DILocation(line: 267, column: 2, scope: !8165)
!8167 = !DILocation(line: 269, column: 12, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8087, file: !7866, line: 269, column: 6)
!8169 = !DILocation(line: 269, column: 17, scope: !8168)
!8170 = !DILocation(line: 269, column: 41, scope: !8168)
!8171 = !DILocation(line: 269, column: 6, scope: !8087)
!8172 = !DILocation(line: 270, column: 3, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !7866, line: 270, column: 3)
!8174 = distinct !DILexicalBlock(scope: !8175, file: !7866, line: 270, column: 3)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !7866, line: 270, column: 3)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !7866, line: 270, column: 3)
!8177 = distinct !DILexicalBlock(scope: !8168, file: !7866, line: 269, column: 47)
!8178 = !DILocation(line: 272, column: 2, scope: !8177)
!8179 = !DILocation(line: 288, column: 12, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8087, file: !7866, line: 288, column: 6)
!8181 = !DILocation(line: 288, column: 17, scope: !8180)
!8182 = !DILocation(line: 288, column: 41, scope: !8180)
!8183 = !DILocation(line: 289, column: 9, scope: !8180)
!8184 = !DILocation(line: 289, column: 14, scope: !8180)
!8185 = !DILocation(line: 288, column: 6, scope: !8087)
!8186 = !DILocation(line: 348, column: 2, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !7866, line: 348, column: 2)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !7866, line: 348, column: 2)
!8189 = distinct !DILexicalBlock(scope: !8180, file: !7866, line: 289, column: 40)
!8190 = !DILocation(line: 348, column: 2, scope: !8188)
!8191 = !DILocation(line: 348, column: 2, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8187, file: !7866, line: 348, column: 2)
!8193 = !DILocation(line: 360, column: 12, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8087, file: !7866, line: 360, column: 6)
!8195 = !DILocation(line: 360, column: 17, scope: !8194)
!8196 = !DILocation(line: 360, column: 41, scope: !8194)
!8197 = !DILocation(line: 360, column: 6, scope: !8087)
!8198 = !DILocation(line: 361, column: 14, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8194, file: !7866, line: 360, column: 47)
!8200 = !DILocation(line: 362, column: 2, scope: !8199)
!8201 = !DILocation(line: 366, column: 12, scope: !8087)
!8202 = !DILocation(line: 369, column: 15, scope: !8087)
!8203 = !DILocation(line: 371, column: 2, scope: !8087)
!8204 = distinct !DISubprogram(name: "bus_fault", scope: !7866, file: !7866, line: 383, type: !8205, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8207)
!8205 = !DISubroutineType(types: !8206)
!8206 = !{!103, !3043, !103, !7939}
!8207 = !{!8208, !8209, !8210, !8211, !8212}
!8208 = !DILocalVariable(name: "esf", arg: 1, scope: !8204, file: !7866, line: 383, type: !3043)
!8209 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8204, file: !7866, line: 383, type: !103)
!8210 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8204, file: !7866, line: 383, type: !7939)
!8211 = !DILocalVariable(name: "reason", scope: !8204, file: !7866, line: 385, type: !111)
!8212 = !DILocalVariable(name: "bfar", scope: !8213, file: !7866, line: 405, type: !111)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !7866, line: 395, column: 42)
!8214 = distinct !DILexicalBlock(scope: !8204, file: !7866, line: 395, column: 6)
!8215 = !DILocation(line: 0, scope: !8204)
!8216 = !DILocation(line: 387, column: 2, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8218, file: !7866, line: 387, column: 2)
!8218 = distinct !DILexicalBlock(scope: !8219, file: !7866, line: 387, column: 2)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !7866, line: 387, column: 2)
!8220 = distinct !DILexicalBlock(scope: !8204, file: !7866, line: 387, column: 2)
!8221 = !DILocation(line: 389, column: 11, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8204, file: !7866, line: 389, column: 6)
!8223 = !DILocation(line: 389, column: 16, scope: !8222)
!8224 = !DILocation(line: 389, column: 6, scope: !8204)
!8225 = !DILocation(line: 390, column: 3, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8227, file: !7866, line: 390, column: 3)
!8227 = distinct !DILexicalBlock(scope: !8228, file: !7866, line: 390, column: 3)
!8228 = distinct !DILexicalBlock(scope: !8229, file: !7866, line: 390, column: 3)
!8229 = distinct !DILexicalBlock(scope: !8230, file: !7866, line: 390, column: 3)
!8230 = distinct !DILexicalBlock(scope: !8222, file: !7866, line: 389, column: 39)
!8231 = !DILocation(line: 391, column: 2, scope: !8230)
!8232 = !DILocation(line: 392, column: 11, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8204, file: !7866, line: 392, column: 6)
!8234 = !DILocation(line: 392, column: 16, scope: !8233)
!8235 = !DILocation(line: 392, column: 6, scope: !8204)
!8236 = !DILocation(line: 393, column: 3, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8238, file: !7866, line: 393, column: 3)
!8238 = distinct !DILexicalBlock(scope: !8239, file: !7866, line: 393, column: 3)
!8239 = distinct !DILexicalBlock(scope: !8240, file: !7866, line: 393, column: 3)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !7866, line: 393, column: 3)
!8241 = distinct !DILexicalBlock(scope: !8233, file: !7866, line: 392, column: 41)
!8242 = !DILocation(line: 394, column: 2, scope: !8241)
!8243 = !DILocation(line: 395, column: 11, scope: !8214)
!8244 = !DILocation(line: 395, column: 16, scope: !8214)
!8245 = !DILocation(line: 395, column: 6, scope: !8204)
!8246 = !DILocation(line: 396, column: 3, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8248, file: !7866, line: 396, column: 3)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !7866, line: 396, column: 3)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !7866, line: 396, column: 3)
!8250 = distinct !DILexicalBlock(scope: !8213, file: !7866, line: 396, column: 3)
!8251 = !DILocation(line: 405, column: 3, scope: !8213)
!8252 = !DILocation(line: 0, scope: !8213)
!8253 = !DILocation(line: 407, column: 13, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8213, file: !7866, line: 407, column: 7)
!8255 = !DILocation(line: 407, column: 18, scope: !8254)
!8256 = !DILocation(line: 407, column: 44, scope: !8254)
!8257 = !DILocation(line: 407, column: 7, scope: !8213)
!8258 = !DILocation(line: 408, column: 4, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !7866, line: 408, column: 4)
!8260 = distinct !DILexicalBlock(scope: !8261, file: !7866, line: 408, column: 4)
!8261 = distinct !DILexicalBlock(scope: !8262, file: !7866, line: 408, column: 4)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !7866, line: 408, column: 4)
!8263 = distinct !DILexicalBlock(scope: !8254, file: !7866, line: 407, column: 50)
!8264 = !DILocation(line: 409, column: 24, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8263, file: !7866, line: 409, column: 8)
!8266 = !DILocation(line: 409, column: 8, scope: !8263)
!8267 = !DILocation(line: 411, column: 15, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8265, file: !7866, line: 409, column: 30)
!8269 = !DILocation(line: 412, column: 4, scope: !8268)
!8270 = !DILocation(line: 415, column: 11, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8204, file: !7866, line: 415, column: 6)
!8272 = !DILocation(line: 415, column: 16, scope: !8271)
!8273 = !DILocation(line: 415, column: 6, scope: !8204)
!8274 = !DILocation(line: 416, column: 3, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !7866, line: 416, column: 3)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !7866, line: 416, column: 3)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !7866, line: 416, column: 3)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !7866, line: 416, column: 3)
!8279 = distinct !DILexicalBlock(scope: !8271, file: !7866, line: 415, column: 44)
!8280 = !DILocation(line: 417, column: 2, scope: !8279)
!8281 = !DILocation(line: 418, column: 12, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8204, file: !7866, line: 418, column: 6)
!8283 = !DILocation(line: 418, column: 17, scope: !8282)
!8284 = !DILocation(line: 418, column: 41, scope: !8282)
!8285 = !DILocation(line: 418, column: 6, scope: !8204)
!8286 = !DILocation(line: 423, column: 18, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8282, file: !7866, line: 423, column: 13)
!8288 = !DILocation(line: 423, column: 23, scope: !8287)
!8289 = !DILocation(line: 423, column: 13, scope: !8282)
!8290 = !DILocation(line: 0, scope: !8282)
!8291 = !DILocation(line: 524, column: 12, scope: !8204)
!8292 = !DILocation(line: 526, column: 15, scope: !8204)
!8293 = !DILocation(line: 528, column: 2, scope: !8204)
!8294 = distinct !DISubprogram(name: "usage_fault", scope: !7866, file: !7866, line: 539, type: !8295, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8299)
!8295 = !DISubroutineType(types: !8296)
!8296 = !{!111, !8297}
!8297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8298, size: 32)
!8298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3044)
!8299 = !{!8300, !8301}
!8300 = !DILocalVariable(name: "esf", arg: 1, scope: !8294, file: !7866, line: 539, type: !8297)
!8301 = !DILocalVariable(name: "reason", scope: !8294, file: !7866, line: 541, type: !111)
!8302 = !DILocation(line: 0, scope: !8294)
!8303 = !DILocation(line: 543, column: 2, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !7866, line: 543, column: 2)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !7866, line: 543, column: 2)
!8306 = distinct !DILexicalBlock(scope: !8307, file: !7866, line: 543, column: 2)
!8307 = distinct !DILexicalBlock(scope: !8294, file: !7866, line: 543, column: 2)
!8308 = !DILocation(line: 546, column: 12, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8294, file: !7866, line: 546, column: 6)
!8310 = !DILocation(line: 546, column: 17, scope: !8309)
!8311 = !DILocation(line: 546, column: 43, scope: !8309)
!8312 = !DILocation(line: 546, column: 6, scope: !8294)
!8313 = !DILocation(line: 547, column: 3, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8315, file: !7866, line: 547, column: 3)
!8315 = distinct !DILexicalBlock(scope: !8316, file: !7866, line: 547, column: 3)
!8316 = distinct !DILexicalBlock(scope: !8317, file: !7866, line: 547, column: 3)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !7866, line: 547, column: 3)
!8318 = distinct !DILexicalBlock(scope: !8309, file: !7866, line: 546, column: 49)
!8319 = !DILocation(line: 548, column: 2, scope: !8318)
!8320 = !DILocation(line: 549, column: 12, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8294, file: !7866, line: 549, column: 6)
!8322 = !DILocation(line: 549, column: 17, scope: !8321)
!8323 = !DILocation(line: 549, column: 43, scope: !8321)
!8324 = !DILocation(line: 549, column: 6, scope: !8294)
!8325 = !DILocation(line: 550, column: 3, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8327, file: !7866, line: 550, column: 3)
!8327 = distinct !DILexicalBlock(scope: !8328, file: !7866, line: 550, column: 3)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !7866, line: 550, column: 3)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !7866, line: 550, column: 3)
!8330 = distinct !DILexicalBlock(scope: !8321, file: !7866, line: 549, column: 49)
!8331 = !DILocation(line: 551, column: 2, scope: !8330)
!8332 = !DILocation(line: 567, column: 12, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8294, file: !7866, line: 567, column: 6)
!8334 = !DILocation(line: 567, column: 17, scope: !8333)
!8335 = !DILocation(line: 567, column: 38, scope: !8333)
!8336 = !DILocation(line: 567, column: 6, scope: !8294)
!8337 = !DILocation(line: 568, column: 3, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !7866, line: 568, column: 3)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !7866, line: 568, column: 3)
!8340 = distinct !DILexicalBlock(scope: !8341, file: !7866, line: 568, column: 3)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !7866, line: 568, column: 3)
!8342 = distinct !DILexicalBlock(scope: !8333, file: !7866, line: 567, column: 44)
!8343 = !DILocation(line: 569, column: 2, scope: !8342)
!8344 = !DILocation(line: 570, column: 12, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8294, file: !7866, line: 570, column: 6)
!8346 = !DILocation(line: 570, column: 17, scope: !8345)
!8347 = !DILocation(line: 570, column: 39, scope: !8345)
!8348 = !DILocation(line: 570, column: 6, scope: !8294)
!8349 = !DILocation(line: 571, column: 3, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8351, file: !7866, line: 571, column: 3)
!8351 = distinct !DILexicalBlock(scope: !8352, file: !7866, line: 571, column: 3)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !7866, line: 571, column: 3)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !7866, line: 571, column: 3)
!8354 = distinct !DILexicalBlock(scope: !8345, file: !7866, line: 570, column: 45)
!8355 = !DILocation(line: 572, column: 2, scope: !8354)
!8356 = !DILocation(line: 573, column: 12, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8294, file: !7866, line: 573, column: 6)
!8358 = !DILocation(line: 573, column: 17, scope: !8357)
!8359 = !DILocation(line: 573, column: 42, scope: !8357)
!8360 = !DILocation(line: 573, column: 6, scope: !8294)
!8361 = !DILocation(line: 574, column: 3, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8363, file: !7866, line: 574, column: 3)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !7866, line: 574, column: 3)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !7866, line: 574, column: 3)
!8365 = distinct !DILexicalBlock(scope: !8366, file: !7866, line: 574, column: 3)
!8366 = distinct !DILexicalBlock(scope: !8357, file: !7866, line: 573, column: 48)
!8367 = !DILocation(line: 575, column: 2, scope: !8366)
!8368 = !DILocation(line: 576, column: 12, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8294, file: !7866, line: 576, column: 6)
!8370 = !DILocation(line: 576, column: 17, scope: !8369)
!8371 = !DILocation(line: 576, column: 44, scope: !8369)
!8372 = !DILocation(line: 576, column: 6, scope: !8294)
!8373 = !DILocation(line: 577, column: 3, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !7866, line: 577, column: 3)
!8375 = distinct !DILexicalBlock(scope: !8376, file: !7866, line: 577, column: 3)
!8376 = distinct !DILexicalBlock(scope: !8377, file: !7866, line: 577, column: 3)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !7866, line: 577, column: 3)
!8378 = distinct !DILexicalBlock(scope: !8369, file: !7866, line: 576, column: 50)
!8379 = !DILocation(line: 578, column: 2, scope: !8378)
!8380 = !DILocation(line: 581, column: 12, scope: !8294)
!8381 = !DILocation(line: 583, column: 2, scope: !8294)
!8382 = distinct !DISubprogram(name: "debug_monitor", scope: !7866, file: !7866, line: 632, type: !8383, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8385)
!8383 = !DISubroutineType(types: !8384)
!8384 = !{null, !3043, !7939}
!8385 = !{!8386, !8387}
!8386 = !DILocalVariable(name: "esf", arg: 1, scope: !8382, file: !7866, line: 632, type: !3043)
!8387 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8382, file: !7866, line: 632, type: !7939)
!8388 = !DILocation(line: 0, scope: !8382)
!8389 = !DILocation(line: 634, column: 15, scope: !8382)
!8390 = !DILocation(line: 636, column: 2, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !7866, line: 636, column: 2)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !7866, line: 636, column: 2)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !7866, line: 636, column: 2)
!8394 = distinct !DILexicalBlock(scope: !8382, file: !7866, line: 636, column: 2)
!8395 = !DILocation(line: 652, column: 1, scope: !8382)
!8396 = distinct !DISubprogram(name: "reserved_exception", scope: !7866, file: !7866, line: 776, type: !8397, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8399)
!8397 = !DISubroutineType(types: !8398)
!8398 = !{null, !8297, !103}
!8399 = !{!8400, !8401}
!8400 = !DILocalVariable(name: "esf", arg: 1, scope: !8396, file: !7866, line: 776, type: !8297)
!8401 = !DILocalVariable(name: "fault", arg: 2, scope: !8396, file: !7866, line: 776, type: !103)
!8402 = !DILocation(line: 0, scope: !8396)
!8403 = !DILocation(line: 780, column: 2, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !7866, line: 780, column: 2)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !7866, line: 780, column: 2)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !7866, line: 780, column: 2)
!8407 = distinct !DILexicalBlock(scope: !8396, file: !7866, line: 780, column: 2)
!8408 = !DILocation(line: 783, column: 1, scope: !8396)
!8409 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7866, file: !7866, line: 658, type: !8410, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8412)
!8410 = !DISubroutineType(types: !8411)
!8411 = !{!122, !3043}
!8412 = !{!8413, !8414, !8415}
!8413 = !DILocalVariable(name: "esf", arg: 1, scope: !8409, file: !7866, line: 658, type: !3043)
!8414 = !DILocalVariable(name: "ret_addr", scope: !8409, file: !7866, line: 660, type: !2814)
!8415 = !DILocalVariable(name: "fault_insn", scope: !8409, file: !7866, line: 686, type: !181)
!8416 = !DILocation(line: 0, scope: !8409)
!8417 = !DILocation(line: 660, column: 46, scope: !8409)
!8418 = !DILocation(line: 660, column: 23, scope: !8409)
!8419 = !DILocation(line: 682, column: 11, scope: !8409)
!8420 = !DILocation(line: 271, column: 3, scope: !8421, inlinedAt: !8422)
!8421 = distinct !DISubprogram(name: "__DSB", scope: !7585, file: !7585, line: 269, type: !317, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !2275)
!8422 = distinct !DILocation(line: 683, column: 2, scope: !8409)
!8423 = !{i64 6969388}
!8424 = !DILocation(line: 260, column: 3, scope: !8425, inlinedAt: !8426)
!8425 = distinct !DISubprogram(name: "__ISB", scope: !7585, file: !7585, line: 258, type: !317, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !2275)
!8426 = distinct !DILocation(line: 684, column: 2, scope: !8409)
!8427 = !{i64 6969105}
!8428 = !DILocation(line: 686, column: 35, scope: !8409)
!8429 = !DILocation(line: 686, column: 24, scope: !8409)
!8430 = !DILocation(line: 688, column: 11, scope: !8409)
!8431 = !DILocation(line: 271, column: 3, scope: !8421, inlinedAt: !8432)
!8432 = distinct !DILocation(line: 689, column: 2, scope: !8409)
!8433 = !DILocation(line: 260, column: 3, scope: !8425, inlinedAt: !8434)
!8434 = distinct !DILocation(line: 690, column: 2, scope: !8409)
!8435 = !DILocation(line: 693, column: 45, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8409, file: !7866, line: 693, column: 6)
!8437 = !DILocation(line: 699, column: 1, scope: !8409)
!8438 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7866, file: !7866, line: 1107, type: !317, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !2275)
!8439 = !DILocation(line: 1111, column: 11, scope: !8438)
!8440 = !DILocation(line: 1136, column: 1, scope: !8438)
!8441 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8442, file: !8442, line: 26, type: !317, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !8443)
!8442 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8443 = !{!8444}
!8444 = !DILocalVariable(name: "irq", scope: !8441, file: !8442, line: 28, type: !103)
!8445 = !DILocation(line: 0, scope: !8441)
!8446 = !DILocation(line: 30, column: 2, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8441, file: !8442, line: 30, column: 2)
!8448 = !DILocation(line: 31, column: 3, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8450, file: !8442, line: 30, column: 39)
!8450 = distinct !DILexicalBlock(scope: !8447, file: !8442, line: 30, column: 2)
!8451 = !DILocation(line: 30, column: 35, scope: !8450)
!8452 = !DILocation(line: 30, column: 13, scope: !8450)
!8453 = distinct !{!8453, !8446, !8454}
!8454 = !DILocation(line: 32, column: 2, scope: !8447)
!8455 = !DILocation(line: 33, column: 1, scope: !8441)
!8456 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1925, file: !1925, line: 1814, type: !7625, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !8457)
!8457 = !{!8458, !8459}
!8458 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8456, file: !1925, line: 1814, type: !2871)
!8459 = !DILocalVariable(name: "priority", arg: 2, scope: !8456, file: !1925, line: 1814, type: !111)
!8460 = !DILocation(line: 0, scope: !8456)
!8461 = !DILocation(line: 1816, column: 7, scope: !8456)
!8462 = !DILocation(line: 0, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8456, file: !1925, line: 1816, column: 7)
!8464 = !DILocation(line: 1824, column: 1, scope: !8456)
!8465 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8466, file: !8466, line: 27, type: !8467, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3131, retainedNodes: !8566)
!8466 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8467 = !DISubroutineType(types: !8468)
!8468 = !{null, !8469}
!8469 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !8470)
!8470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8471, size: 32)
!8471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !8472)
!8472 = !{!8473, !8531, !8543, !8544, !8545, !8546, !8561}
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8471, file: !199, line: 247, baseType: !8474, size: 384)
!8474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !8475)
!8475 = !{!8476, !8500, !8507, !8508, !8509, !8518, !8519, !8520}
!8476 = !DIDerivedType(tag: DW_TAG_member, scope: !8474, file: !199, line: 60, baseType: !8477, size: 64)
!8477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8474, file: !199, line: 60, size: 64, elements: !8478)
!8478 = !{!8479, !8494}
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8477, file: !199, line: 61, baseType: !8480, size: 64)
!8480 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !8481)
!8481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !8482)
!8482 = !{!8483, !8489}
!8483 = !DIDerivedType(tag: DW_TAG_member, scope: !8481, file: !136, line: 38, baseType: !8484, size: 32)
!8484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8481, file: !136, line: 38, size: 32, elements: !8485)
!8485 = !{!8486, !8488}
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8484, file: !136, line: 39, baseType: !8487, size: 32)
!8487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8481, size: 32)
!8488 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8484, file: !136, line: 40, baseType: !8487, size: 32)
!8489 = !DIDerivedType(tag: DW_TAG_member, scope: !8481, file: !136, line: 42, baseType: !8490, size: 32, offset: 32)
!8490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8481, file: !136, line: 42, size: 32, elements: !8491)
!8491 = !{!8492, !8493}
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8490, file: !136, line: 43, baseType: !8487, size: 32)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8490, file: !136, line: 44, baseType: !8487, size: 32)
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8477, file: !199, line: 62, baseType: !8495, size: 64)
!8495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !8496)
!8496 = !{!8497}
!8497 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8495, file: !211, line: 50, baseType: !8498, size: 64)
!8498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8499, size: 64, elements: !216)
!8499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8495, size: 32)
!8500 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8474, file: !199, line: 68, baseType: !8501, size: 32, offset: 64)
!8501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8502, size: 32)
!8502 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !8503)
!8503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !8504)
!8504 = !{!8505}
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8503, file: !131, line: 232, baseType: !8506, size: 64)
!8506 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !8481)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8474, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8474, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!8509 = !DIDerivedType(tag: DW_TAG_member, scope: !8474, file: !199, line: 90, baseType: !8510, size: 16, offset: 112)
!8510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8474, file: !199, line: 90, size: 16, elements: !8511)
!8511 = !{!8512, !8517}
!8512 = !DIDerivedType(tag: DW_TAG_member, scope: !8510, file: !199, line: 91, baseType: !8513, size: 16)
!8513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8510, file: !199, line: 91, size: 16, elements: !8514)
!8514 = !{!8515, !8516}
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8513, file: !199, line: 96, baseType: !229, size: 8)
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8513, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8510, file: !199, line: 100, baseType: !181, size: 16)
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8474, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8474, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8474, file: !199, line: 131, baseType: !8521, size: 192, offset: 192)
!8521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !8522)
!8522 = !{!8523, !8524, !8530}
!8523 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8521, file: !131, line: 245, baseType: !8480, size: 64)
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8521, file: !131, line: 246, baseType: !8525, size: 32, offset: 64)
!8525 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !8526)
!8526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8527, size: 32)
!8527 = !DISubroutineType(types: !8528)
!8528 = !{null, !8529}
!8529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8521, size: 32)
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8521, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!8531 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8471, file: !199, line: 250, baseType: !8532, size: 288, offset: 384)
!8532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !8533)
!8533 = !{!8534, !8535, !8536, !8537, !8538, !8539, !8540, !8541, !8542}
!8534 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8532, file: !248, line: 26, baseType: !111, size: 32)
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8532, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8532, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!8537 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8532, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!8538 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8532, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!8539 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8532, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!8540 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8532, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!8541 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8532, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!8542 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8532, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!8543 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8471, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8471, file: !199, line: 256, baseType: !8502, size: 64, offset: 704)
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8471, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!8546 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8471, file: !199, line: 325, baseType: !8547, size: 32, offset: 800)
!8547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8548, size: 32)
!8548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !8549)
!8549 = !{!8550, !8556, !8557}
!8550 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8548, file: !127, line: 5074, baseType: !8551, size: 96)
!8551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !8552)
!8552 = !{!8553, !8554, !8555}
!8553 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8551, file: !268, line: 57, baseType: !271, size: 32)
!8554 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8551, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!8555 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8551, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8548, file: !127, line: 5075, baseType: !8502, size: 64, offset: 96)
!8557 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8548, file: !127, line: 5076, baseType: !8558, size: 32, offset: 160)
!8558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !8559)
!8559 = !{!8560}
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8558, file: !152, line: 52, baseType: !22, size: 32)
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8471, file: !199, line: 343, baseType: !8562, size: 64, offset: 832)
!8562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !8563)
!8563 = !{!8564, !8565}
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8562, file: !248, line: 63, baseType: !111, size: 32)
!8565 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8562, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!8566 = !{!8567}
!8567 = !DILocalVariable(name: "thread", arg: 1, scope: !8465, file: !8466, line: 27, type: !8469)
!8568 = !DILocation(line: 0, scope: !8465)
!8569 = !DILocation(line: 29, column: 6, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8465, file: !8466, line: 29, column: 6)
!8571 = !DILocation(line: 29, column: 15, scope: !8570)
!8572 = !DILocation(line: 29, column: 6, scope: !8465)
!8573 = !DILocation(line: 1031, column: 3, scope: !8574, inlinedAt: !8577)
!8574 = distinct !DISubprogram(name: "__get_IPSR", scope: !7585, file: !7585, line: 1027, type: !7672, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3131, retainedNodes: !8575)
!8575 = !{!8576}
!8576 = !DILocalVariable(name: "result", scope: !8574, file: !7585, line: 1029, type: !111)
!8577 = distinct !DILocation(line: 48, column: 10, scope: !8578, inlinedAt: !8582)
!8578 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8579, file: !8579, line: 46, type: !8580, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3131, retainedNodes: !2275)
!8579 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8580 = !DISubroutineType(types: !8581)
!8581 = !{!122}
!8582 = distinct !DILocation(line: 30, column: 7, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !8466, line: 30, column: 7)
!8584 = distinct !DILexicalBlock(scope: !8570, file: !8466, line: 29, column: 26)
!8585 = !{i64 6970612}
!8586 = !DILocation(line: 0, scope: !8574, inlinedAt: !8577)
!8587 = !DILocation(line: 48, column: 9, scope: !8578, inlinedAt: !8582)
!8588 = !DILocation(line: 30, column: 7, scope: !8584)
!8589 = !DILocation(line: 42, column: 14, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8583, file: !8466, line: 30, column: 25)
!8591 = !DILocation(line: 48, column: 15, scope: !8590)
!8592 = !DILocation(line: 49, column: 3, scope: !8590)
!8593 = !DILocation(line: 52, column: 2, scope: !8465)
!8594 = !DILocation(line: 53, column: 1, scope: !8465)
!8595 = distinct !DISubprogram(name: "strcpy", scope: !8596, file: !8596, line: 20, type: !8597, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8601)
!8596 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8597 = !DISubroutineType(types: !8598)
!8598 = !{!160, !8599, !8600}
!8599 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !160)
!8600 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !108)
!8601 = !{!8602, !8603, !8604}
!8602 = !DILocalVariable(name: "d", arg: 1, scope: !8595, file: !8596, line: 20, type: !8599)
!8603 = !DILocalVariable(name: "s", arg: 2, scope: !8595, file: !8596, line: 20, type: !8600)
!8604 = !DILocalVariable(name: "dest", scope: !8595, file: !8596, line: 22, type: !160)
!8605 = !DILocation(line: 0, scope: !8595)
!8606 = !DILocation(line: 24, column: 9, scope: !8595)
!8607 = !DILocation(line: 24, column: 12, scope: !8595)
!8608 = !DILocation(line: 24, column: 2, scope: !8595)
!8609 = !DILocation(line: 25, column: 6, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8595, file: !8596, line: 24, column: 21)
!8611 = !DILocation(line: 26, column: 4, scope: !8610)
!8612 = !DILocation(line: 27, column: 4, scope: !8610)
!8613 = distinct !{!8613, !8608, !8614}
!8614 = !DILocation(line: 28, column: 2, scope: !8595)
!8615 = !DILocation(line: 30, column: 5, scope: !8595)
!8616 = !DILocation(line: 32, column: 2, scope: !8595)
!8617 = distinct !DISubprogram(name: "strncpy", scope: !8596, file: !8596, line: 42, type: !8618, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8620)
!8618 = !DISubroutineType(types: !8619)
!8619 = !{!160, !8599, !8600, !156}
!8620 = !{!8621, !8622, !8623, !8624}
!8621 = !DILocalVariable(name: "d", arg: 1, scope: !8617, file: !8596, line: 42, type: !8599)
!8622 = !DILocalVariable(name: "s", arg: 2, scope: !8617, file: !8596, line: 42, type: !8600)
!8623 = !DILocalVariable(name: "n", arg: 3, scope: !8617, file: !8596, line: 42, type: !156)
!8624 = !DILocalVariable(name: "dest", scope: !8617, file: !8596, line: 44, type: !160)
!8625 = !DILocation(line: 0, scope: !8617)
!8626 = !DILocation(line: 46, column: 12, scope: !8617)
!8627 = !DILocation(line: 46, column: 17, scope: !8617)
!8628 = !DILocation(line: 46, column: 20, scope: !8617)
!8629 = !DILocation(line: 46, column: 23, scope: !8617)
!8630 = !DILocation(line: 46, column: 2, scope: !8617)
!8631 = !DILocation(line: 47, column: 6, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8617, file: !8596, line: 46, column: 32)
!8633 = !DILocation(line: 48, column: 4, scope: !8632)
!8634 = !DILocation(line: 49, column: 4, scope: !8632)
!8635 = !DILocation(line: 50, column: 4, scope: !8632)
!8636 = distinct !{!8636, !8630, !8637}
!8637 = !DILocation(line: 51, column: 2, scope: !8617)
!8638 = !DILocation(line: 54, column: 6, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8617, file: !8596, line: 53, column: 16)
!8640 = !DILocation(line: 55, column: 4, scope: !8639)
!8641 = !DILocation(line: 56, column: 4, scope: !8639)
!8642 = !DILocation(line: 53, column: 11, scope: !8617)
!8643 = !DILocation(line: 53, column: 2, scope: !8617)
!8644 = distinct !{!8644, !8643, !8645}
!8645 = !DILocation(line: 57, column: 2, scope: !8617)
!8646 = !DILocation(line: 59, column: 2, scope: !8617)
!8647 = distinct !DISubprogram(name: "strchr", scope: !8596, file: !8596, line: 69, type: !8648, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8650)
!8648 = !DISubroutineType(types: !8649)
!8649 = !{!160, !108, !103}
!8650 = !{!8651, !8652, !8653}
!8651 = !DILocalVariable(name: "s", arg: 1, scope: !8647, file: !8596, line: 69, type: !108)
!8652 = !DILocalVariable(name: "c", arg: 2, scope: !8647, file: !8596, line: 69, type: !103)
!8653 = !DILocalVariable(name: "tmp", scope: !8647, file: !8596, line: 71, type: !110)
!8654 = !DILocation(line: 0, scope: !8647)
!8655 = !DILocation(line: 73, column: 2, scope: !8647)
!8656 = !DILocation(line: 73, column: 10, scope: !8647)
!8657 = !DILocation(line: 73, column: 13, scope: !8647)
!8658 = !DILocation(line: 73, column: 21, scope: !8647)
!8659 = !DILocation(line: 74, column: 4, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8647, file: !8596, line: 73, column: 38)
!8661 = distinct !{!8661, !8655, !8662}
!8662 = !DILocation(line: 75, column: 2, scope: !8647)
!8663 = !DILocation(line: 77, column: 9, scope: !8647)
!8664 = !DILocation(line: 77, column: 2, scope: !8647)
!8665 = distinct !DISubprogram(name: "strrchr", scope: !8596, file: !8596, line: 87, type: !8648, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8666)
!8666 = !{!8667, !8668, !8669}
!8667 = !DILocalVariable(name: "s", arg: 1, scope: !8665, file: !8596, line: 87, type: !108)
!8668 = !DILocalVariable(name: "c", arg: 2, scope: !8665, file: !8596, line: 87, type: !103)
!8669 = !DILocalVariable(name: "match", scope: !8665, file: !8596, line: 89, type: !160)
!8670 = !DILocation(line: 0, scope: !8665)
!8671 = !DILocation(line: 91, column: 2, scope: !8665)
!8672 = !DILocation(line: 92, column: 7, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8674, file: !8596, line: 92, column: 7)
!8674 = distinct !DILexicalBlock(scope: !8665, file: !8596, line: 91, column: 5)
!8675 = !DILocation(line: 92, column: 10, scope: !8673)
!8676 = !DILocation(line: 92, column: 7, scope: !8674)
!8677 = !DILocation(line: 95, column: 13, scope: !8665)
!8678 = !DILocation(line: 95, column: 2, scope: !8674)
!8679 = distinct !{!8679, !8671, !8680}
!8680 = !DILocation(line: 95, column: 15, scope: !8665)
!8681 = !DILocation(line: 97, column: 2, scope: !8665)
!8682 = distinct !DISubprogram(name: "strlen", scope: !8596, file: !8596, line: 107, type: !8683, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8685)
!8683 = !DISubroutineType(types: !8684)
!8684 = !{!156, !108}
!8685 = !{!8686, !8687}
!8686 = !DILocalVariable(name: "s", arg: 1, scope: !8682, file: !8596, line: 107, type: !108)
!8687 = !DILocalVariable(name: "n", scope: !8682, file: !8596, line: 109, type: !156)
!8688 = !DILocation(line: 0, scope: !8682)
!8689 = !DILocation(line: 111, column: 9, scope: !8682)
!8690 = !DILocation(line: 111, column: 12, scope: !8682)
!8691 = !DILocation(line: 111, column: 2, scope: !8682)
!8692 = !DILocation(line: 112, column: 4, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8682, file: !8596, line: 111, column: 21)
!8694 = !DILocation(line: 113, column: 4, scope: !8693)
!8695 = distinct !{!8695, !8691, !8696}
!8696 = !DILocation(line: 114, column: 2, scope: !8682)
!8697 = !DILocation(line: 116, column: 2, scope: !8682)
!8698 = distinct !DISubprogram(name: "strnlen", scope: !8596, file: !8596, line: 126, type: !8699, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8701)
!8699 = !DISubroutineType(types: !8700)
!8700 = !{!156, !108, !156}
!8701 = !{!8702, !8703, !8704}
!8702 = !DILocalVariable(name: "s", arg: 1, scope: !8698, file: !8596, line: 126, type: !108)
!8703 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8698, file: !8596, line: 126, type: !156)
!8704 = !DILocalVariable(name: "n", scope: !8698, file: !8596, line: 128, type: !156)
!8705 = !DILocation(line: 0, scope: !8698)
!8706 = !DILocation(line: 130, column: 9, scope: !8698)
!8707 = !DILocation(line: 130, column: 12, scope: !8698)
!8708 = !DILocation(line: 130, column: 20, scope: !8698)
!8709 = !DILocation(line: 130, column: 2, scope: !8698)
!8710 = !DILocation(line: 131, column: 4, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8698, file: !8596, line: 130, column: 35)
!8712 = !DILocation(line: 132, column: 4, scope: !8711)
!8713 = distinct !{!8713, !8709, !8714}
!8714 = !DILocation(line: 133, column: 2, scope: !8698)
!8715 = !DILocation(line: 135, column: 2, scope: !8698)
!8716 = distinct !DISubprogram(name: "strcmp", scope: !8596, file: !8596, line: 145, type: !8717, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8719)
!8717 = !DISubroutineType(types: !8718)
!8718 = !{!103, !108, !108}
!8719 = !{!8720, !8721}
!8720 = !DILocalVariable(name: "s1", arg: 1, scope: !8716, file: !8596, line: 145, type: !108)
!8721 = !DILocalVariable(name: "s2", arg: 2, scope: !8716, file: !8596, line: 145, type: !108)
!8722 = !DILocation(line: 0, scope: !8716)
!8723 = !DILocation(line: 147, column: 10, scope: !8716)
!8724 = !DILocation(line: 147, column: 17, scope: !8716)
!8725 = !DILocation(line: 147, column: 14, scope: !8716)
!8726 = !DILocation(line: 147, column: 22, scope: !8716)
!8727 = !DILocation(line: 148, column: 5, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8716, file: !8596, line: 147, column: 40)
!8729 = !DILocation(line: 149, column: 5, scope: !8728)
!8730 = distinct !{!8730, !8731, !8732}
!8731 = !DILocation(line: 147, column: 2, scope: !8716)
!8732 = !DILocation(line: 150, column: 2, scope: !8716)
!8733 = !DILocation(line: 152, column: 9, scope: !8716)
!8734 = !DILocation(line: 152, column: 15, scope: !8716)
!8735 = !DILocation(line: 152, column: 13, scope: !8716)
!8736 = !DILocation(line: 152, column: 2, scope: !8716)
!8737 = distinct !DISubprogram(name: "strncmp", scope: !8596, file: !8596, line: 162, type: !8738, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8740)
!8738 = !DISubroutineType(types: !8739)
!8739 = !{!103, !108, !108, !156}
!8740 = !{!8741, !8742, !8743}
!8741 = !DILocalVariable(name: "s1", arg: 1, scope: !8737, file: !8596, line: 162, type: !108)
!8742 = !DILocalVariable(name: "s2", arg: 2, scope: !8737, file: !8596, line: 162, type: !108)
!8743 = !DILocalVariable(name: "n", arg: 3, scope: !8737, file: !8596, line: 162, type: !156)
!8744 = !DILocation(line: 0, scope: !8737)
!8745 = !DILocation(line: 164, column: 17, scope: !8737)
!8746 = !DILocation(line: 164, column: 21, scope: !8737)
!8747 = !DILocation(line: 164, column: 28, scope: !8737)
!8748 = !DILocation(line: 164, column: 25, scope: !8737)
!8749 = !DILocation(line: 164, column: 33, scope: !8737)
!8750 = !DILocation(line: 165, column: 5, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8737, file: !8596, line: 164, column: 51)
!8752 = !DILocation(line: 166, column: 5, scope: !8751)
!8753 = !DILocation(line: 167, column: 4, scope: !8751)
!8754 = distinct !{!8754, !8755, !8756}
!8755 = !DILocation(line: 164, column: 2, scope: !8737)
!8756 = !DILocation(line: 168, column: 2, scope: !8737)
!8757 = !DILocation(line: 170, column: 25, scope: !8737)
!8758 = !DILocation(line: 170, column: 31, scope: !8737)
!8759 = !DILocation(line: 170, column: 29, scope: !8737)
!8760 = !DILocation(line: 170, column: 9, scope: !8737)
!8761 = !DILocation(line: 170, column: 2, scope: !8737)
!8762 = distinct !DISubprogram(name: "strtok_r", scope: !8596, file: !8596, line: 180, type: !8763, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8765)
!8763 = !DISubroutineType(types: !8764)
!8764 = !{!160, !160, !108, !730}
!8765 = !{!8766, !8767, !8768, !8769, !8770}
!8766 = !DILocalVariable(name: "str", arg: 1, scope: !8762, file: !8596, line: 180, type: !160)
!8767 = !DILocalVariable(name: "sep", arg: 2, scope: !8762, file: !8596, line: 180, type: !108)
!8768 = !DILocalVariable(name: "state", arg: 3, scope: !8762, file: !8596, line: 180, type: !730)
!8769 = !DILocalVariable(name: "start", scope: !8762, file: !8596, line: 182, type: !160)
!8770 = !DILocalVariable(name: "end", scope: !8762, file: !8596, line: 182, type: !160)
!8771 = !DILocation(line: 0, scope: !8762)
!8772 = !DILocation(line: 184, column: 10, scope: !8762)
!8773 = !DILocation(line: 184, column: 22, scope: !8762)
!8774 = !DILocation(line: 187, column: 9, scope: !8762)
!8775 = !DILocation(line: 187, column: 16, scope: !8762)
!8776 = !DILocation(line: 187, column: 19, scope: !8762)
!8777 = !DILocation(line: 187, column: 2, scope: !8762)
!8778 = !DILocation(line: 188, column: 8, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8762, file: !8596, line: 187, column: 40)
!8780 = distinct !{!8780, !8777, !8781}
!8781 = !DILocation(line: 189, column: 2, scope: !8762)
!8782 = !DILocation(line: 198, column: 9, scope: !8762)
!8783 = !DILocation(line: 198, column: 18, scope: !8762)
!8784 = !DILocation(line: 198, column: 17, scope: !8762)
!8785 = !DILocation(line: 198, column: 2, scope: !8762)
!8786 = !DILocation(line: 199, column: 6, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8762, file: !8596, line: 198, column: 37)
!8788 = !DILocation(line: 198, column: 14, scope: !8762)
!8789 = distinct !{!8789, !8785, !8790}
!8790 = !DILocation(line: 200, column: 2, scope: !8762)
!8791 = !DILocation(line: 203, column: 8, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8793, file: !8596, line: 202, column: 20)
!8793 = distinct !DILexicalBlock(scope: !8762, file: !8596, line: 202, column: 6)
!8794 = !DILocation(line: 204, column: 16, scope: !8792)
!8795 = !DILocation(line: 205, column: 2, scope: !8792)
!8796 = !DILocation(line: 210, column: 1, scope: !8762)
!8797 = distinct !DISubprogram(name: "strcat", scope: !8596, file: !8596, line: 212, type: !8597, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8798)
!8798 = !{!8799, !8800}
!8799 = !DILocalVariable(name: "dest", arg: 1, scope: !8797, file: !8596, line: 212, type: !8599)
!8800 = !DILocalVariable(name: "src", arg: 2, scope: !8797, file: !8596, line: 212, type: !8600)
!8801 = !DILocation(line: 0, scope: !8797)
!8802 = !DILocation(line: 214, column: 16, scope: !8797)
!8803 = !DILocation(line: 214, column: 14, scope: !8797)
!8804 = !DILocation(line: 214, column: 2, scope: !8797)
!8805 = !DILocation(line: 215, column: 2, scope: !8797)
!8806 = distinct !DISubprogram(name: "strncat", scope: !8596, file: !8596, line: 218, type: !8618, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8807)
!8807 = !{!8808, !8809, !8810, !8811, !8812}
!8808 = !DILocalVariable(name: "dest", arg: 1, scope: !8806, file: !8596, line: 218, type: !8599)
!8809 = !DILocalVariable(name: "src", arg: 2, scope: !8806, file: !8596, line: 218, type: !8600)
!8810 = !DILocalVariable(name: "n", arg: 3, scope: !8806, file: !8596, line: 219, type: !156)
!8811 = !DILocalVariable(name: "orig_dest", scope: !8806, file: !8596, line: 221, type: !160)
!8812 = !DILocalVariable(name: "len", scope: !8806, file: !8596, line: 222, type: !156)
!8813 = !DILocation(line: 0, scope: !8806)
!8814 = !DILocation(line: 222, column: 15, scope: !8806)
!8815 = !DILocation(line: 224, column: 7, scope: !8806)
!8816 = !DILocation(line: 225, column: 14, scope: !8806)
!8817 = !DILocation(line: 225, column: 19, scope: !8806)
!8818 = !DILocation(line: 225, column: 11, scope: !8806)
!8819 = !DILocation(line: 225, column: 23, scope: !8806)
!8820 = !DILocation(line: 225, column: 28, scope: !8806)
!8821 = !DILocation(line: 225, column: 2, scope: !8806)
!8822 = !DILocation(line: 226, column: 17, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8806, file: !8596, line: 225, column: 38)
!8824 = !DILocation(line: 226, column: 8, scope: !8823)
!8825 = !DILocation(line: 226, column: 11, scope: !8823)
!8826 = distinct !{!8826, !8821, !8827}
!8827 = !DILocation(line: 227, column: 2, scope: !8806)
!8828 = !DILocation(line: 228, column: 8, scope: !8806)
!8829 = !DILocation(line: 230, column: 2, scope: !8806)
!8830 = distinct !DISubprogram(name: "memcmp", scope: !8596, file: !8596, line: 239, type: !8831, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8833)
!8831 = !DISubroutineType(types: !8832)
!8832 = !{!103, !13, !13, !156}
!8833 = !{!8834, !8835, !8836, !8837, !8838}
!8834 = !DILocalVariable(name: "m1", arg: 1, scope: !8830, file: !8596, line: 239, type: !13)
!8835 = !DILocalVariable(name: "m2", arg: 2, scope: !8830, file: !8596, line: 239, type: !13)
!8836 = !DILocalVariable(name: "n", arg: 3, scope: !8830, file: !8596, line: 239, type: !156)
!8837 = !DILocalVariable(name: "c1", scope: !8830, file: !8596, line: 241, type: !108)
!8838 = !DILocalVariable(name: "c2", scope: !8830, file: !8596, line: 242, type: !108)
!8839 = !DILocation(line: 0, scope: !8830)
!8840 = !DILocation(line: 244, column: 7, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8830, file: !8596, line: 244, column: 6)
!8842 = !DILocation(line: 244, column: 6, scope: !8830)
!8843 = !DILocation(line: 248, column: 10, scope: !8830)
!8844 = !DILocation(line: 248, column: 14, scope: !8830)
!8845 = !DILocation(line: 248, column: 19, scope: !8830)
!8846 = !DILocation(line: 248, column: 2, scope: !8830)
!8847 = !DILocation(line: 248, column: 23, scope: !8830)
!8848 = !DILocation(line: 248, column: 30, scope: !8830)
!8849 = !DILocation(line: 248, column: 27, scope: !8830)
!8850 = !DILocation(line: 249, column: 5, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8830, file: !8596, line: 248, column: 36)
!8852 = !DILocation(line: 250, column: 5, scope: !8851)
!8853 = distinct !{!8853, !8846, !8854}
!8854 = !DILocation(line: 251, column: 2, scope: !8830)
!8855 = !DILocation(line: 253, column: 9, scope: !8830)
!8856 = !DILocation(line: 253, column: 15, scope: !8830)
!8857 = !DILocation(line: 253, column: 13, scope: !8830)
!8858 = !DILocation(line: 253, column: 2, scope: !8830)
!8859 = !DILocation(line: 254, column: 1, scope: !8830)
!8860 = distinct !DISubprogram(name: "memmove", scope: !8596, file: !8596, line: 263, type: !8861, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8863)
!8861 = !DISubroutineType(types: !8862)
!8862 = !{!102, !102, !13, !156}
!8863 = !{!8864, !8865, !8866, !8867, !8868}
!8864 = !DILocalVariable(name: "d", arg: 1, scope: !8860, file: !8596, line: 263, type: !102)
!8865 = !DILocalVariable(name: "s", arg: 2, scope: !8860, file: !8596, line: 263, type: !13)
!8866 = !DILocalVariable(name: "n", arg: 3, scope: !8860, file: !8596, line: 263, type: !156)
!8867 = !DILocalVariable(name: "dest", scope: !8860, file: !8596, line: 265, type: !160)
!8868 = !DILocalVariable(name: "src", scope: !8860, file: !8596, line: 266, type: !108)
!8869 = !DILocation(line: 0, scope: !8860)
!8870 = !DILocation(line: 268, column: 21, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8860, file: !8596, line: 268, column: 6)
!8872 = !DILocation(line: 268, column: 28, scope: !8871)
!8873 = !DILocation(line: 268, column: 6, scope: !8860)
!8874 = !DILocation(line: 280, column: 12, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8871, file: !8596, line: 278, column: 9)
!8876 = !DILocation(line: 280, column: 3, scope: !8875)
!8877 = !DILocation(line: 275, column: 5, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !8596, line: 274, column: 17)
!8879 = distinct !DILexicalBlock(scope: !8871, file: !8596, line: 268, column: 33)
!8880 = !DILocation(line: 276, column: 14, scope: !8878)
!8881 = !DILocation(line: 276, column: 4, scope: !8878)
!8882 = !DILocation(line: 276, column: 12, scope: !8878)
!8883 = !DILocation(line: 274, column: 12, scope: !8879)
!8884 = !DILocation(line: 274, column: 3, scope: !8879)
!8885 = distinct !{!8885, !8884, !8886}
!8886 = !DILocation(line: 277, column: 3, scope: !8879)
!8887 = !DILocation(line: 281, column: 12, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8875, file: !8596, line: 280, column: 17)
!8889 = !DILocation(line: 281, column: 10, scope: !8888)
!8890 = !DILocation(line: 282, column: 8, scope: !8888)
!8891 = !DILocation(line: 283, column: 7, scope: !8888)
!8892 = !DILocation(line: 284, column: 5, scope: !8888)
!8893 = distinct !{!8893, !8876, !8894}
!8894 = !DILocation(line: 285, column: 3, scope: !8875)
!8895 = !DILocation(line: 288, column: 2, scope: !8860)
!8896 = distinct !DISubprogram(name: "memcpy", scope: !8596, file: !8596, line: 298, type: !8897, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8901)
!8897 = !DISubroutineType(types: !8898)
!8898 = !{!102, !8899, !8900, !156}
!8899 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8900 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8901 = !{!8902, !8903, !8904, !8905, !8906}
!8902 = !DILocalVariable(name: "d", arg: 1, scope: !8896, file: !8596, line: 298, type: !8899)
!8903 = !DILocalVariable(name: "s", arg: 2, scope: !8896, file: !8596, line: 298, type: !8900)
!8904 = !DILocalVariable(name: "n", arg: 3, scope: !8896, file: !8596, line: 298, type: !156)
!8905 = !DILocalVariable(name: "d_byte", scope: !8896, file: !8596, line: 302, type: !1234)
!8906 = !DILocalVariable(name: "s_byte", scope: !8896, file: !8596, line: 303, type: !3162)
!8907 = !DILocation(line: 0, scope: !8896)
!8908 = !DILocation(line: 337, column: 11, scope: !8896)
!8909 = !DILocation(line: 337, column: 2, scope: !8896)
!8910 = !DILocation(line: 338, column: 25, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8896, file: !8596, line: 337, column: 16)
!8912 = !DILocation(line: 338, column: 17, scope: !8911)
!8913 = !DILocation(line: 338, column: 11, scope: !8911)
!8914 = !DILocation(line: 338, column: 15, scope: !8911)
!8915 = !DILocation(line: 339, column: 4, scope: !8911)
!8916 = distinct !{!8916, !8909, !8917}
!8917 = !DILocation(line: 340, column: 2, scope: !8896)
!8918 = !DILocation(line: 342, column: 2, scope: !8896)
!8919 = distinct !DISubprogram(name: "memset", scope: !8596, file: !8596, line: 352, type: !8920, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8922)
!8920 = !DISubroutineType(types: !8921)
!8921 = !{!102, !102, !103, !156}
!8922 = !{!8923, !8924, !8925, !8926, !8927}
!8923 = !DILocalVariable(name: "buf", arg: 1, scope: !8919, file: !8596, line: 352, type: !102)
!8924 = !DILocalVariable(name: "c", arg: 2, scope: !8919, file: !8596, line: 352, type: !103)
!8925 = !DILocalVariable(name: "n", arg: 3, scope: !8919, file: !8596, line: 352, type: !156)
!8926 = !DILocalVariable(name: "d_byte", scope: !8919, file: !8596, line: 356, type: !1234)
!8927 = !DILocalVariable(name: "c_byte", scope: !8919, file: !8596, line: 357, type: !167)
!8928 = !DILocation(line: 0, scope: !8919)
!8929 = !DILocation(line: 357, column: 25, scope: !8919)
!8930 = !DILocation(line: 389, column: 11, scope: !8919)
!8931 = !DILocation(line: 389, column: 2, scope: !8919)
!8932 = !DILocation(line: 390, column: 11, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8919, file: !8596, line: 389, column: 16)
!8934 = !DILocation(line: 390, column: 15, scope: !8933)
!8935 = !DILocation(line: 391, column: 4, scope: !8933)
!8936 = distinct !{!8936, !8931, !8937}
!8937 = !DILocation(line: 392, column: 2, scope: !8919)
!8938 = !DILocation(line: 394, column: 2, scope: !8919)
!8939 = distinct !DISubprogram(name: "memchr", scope: !8596, file: !8596, line: 404, type: !8940, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !8942)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{!102, !13, !103, !156}
!8942 = !{!8943, !8944, !8945, !8946}
!8943 = !DILocalVariable(name: "s", arg: 1, scope: !8939, file: !8596, line: 404, type: !13)
!8944 = !DILocalVariable(name: "c", arg: 2, scope: !8939, file: !8596, line: 404, type: !103)
!8945 = !DILocalVariable(name: "n", arg: 3, scope: !8939, file: !8596, line: 404, type: !156)
!8946 = !DILocalVariable(name: "p", scope: !8947, file: !8596, line: 407, type: !3162)
!8947 = distinct !DILexicalBlock(scope: !8948, file: !8596, line: 406, column: 14)
!8948 = distinct !DILexicalBlock(scope: !8939, file: !8596, line: 406, column: 6)
!8949 = !DILocation(line: 0, scope: !8939)
!8950 = !DILocation(line: 406, column: 8, scope: !8948)
!8951 = !DILocation(line: 406, column: 6, scope: !8939)
!8952 = !DILocation(line: 409, column: 3, scope: !8947)
!8953 = !DILocation(line: 0, scope: !8947)
!8954 = !DILocation(line: 410, column: 8, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !8596, line: 410, column: 8)
!8956 = distinct !DILexicalBlock(scope: !8947, file: !8596, line: 409, column: 6)
!8957 = !DILocation(line: 410, column: 13, scope: !8955)
!8958 = !DILocation(line: 410, column: 8, scope: !8956)
!8959 = distinct !{!8959, !8952, !8960}
!8960 = !DILocation(line: 414, column: 20, scope: !8947)
!8961 = !DILocation(line: 417, column: 2, scope: !8939)
!8962 = !DILocation(line: 418, column: 1, scope: !8939)
!8963 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1186, file: !1186, line: 23, type: !4763, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !8964)
!8964 = !{!8965}
!8965 = !DILocalVariable(name: "hook", arg: 1, scope: !8963, file: !1186, line: 23, type: !745)
!8966 = !DILocation(line: 0, scope: !8963)
!8967 = !DILocation(line: 25, column: 15, scope: !8963)
!8968 = !DILocation(line: 26, column: 1, scope: !8963)
!8969 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1186, file: !1186, line: 14, type: !746, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !8970)
!8970 = !{!8971}
!8971 = !DILocalVariable(name: "c", arg: 1, scope: !8969, file: !1186, line: 14, type: !103)
!8972 = !DILocation(line: 0, scope: !8969)
!8973 = !DILocation(line: 18, column: 2, scope: !8969)
!8974 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1186, file: !1186, line: 28, type: !8975, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !8977)
!8975 = !DISubroutineType(types: !8976)
!8976 = !{!103, !103, !1182}
!8977 = !{!8978, !8979}
!8978 = !DILocalVariable(name: "c", arg: 1, scope: !8974, file: !1186, line: 28, type: !103)
!8979 = !DILocalVariable(name: "stream", arg: 2, scope: !8974, file: !1186, line: 28, type: !1182)
!8980 = !DILocation(line: 0, scope: !8974)
!8981 = !DILocation(line: 30, column: 27, scope: !8974)
!8982 = !DILocation(line: 30, column: 50, scope: !8974)
!8983 = !DILocation(line: 30, column: 9, scope: !8974)
!8984 = !DILocation(line: 30, column: 2, scope: !8974)
!8985 = distinct !DISubprogram(name: "fputc", scope: !1186, file: !1186, line: 41, type: !8975, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !8986)
!8986 = !{!8987, !8988}
!8987 = !DILocalVariable(name: "c", arg: 1, scope: !8985, file: !1186, line: 41, type: !103)
!8988 = !DILocalVariable(name: "stream", arg: 2, scope: !8985, file: !1186, line: 41, type: !1182)
!8989 = !DILocation(line: 0, scope: !8985)
!8990 = !DILocation(line: 43, column: 9, scope: !8985)
!8991 = !DILocation(line: 43, column: 2, scope: !8985)
!8992 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8993, file: !8993, line: 72, type: !8975, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !8994)
!8993 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!8994 = !{!8995, !8996}
!8995 = !DILocalVariable(name: "c", arg: 1, scope: !8992, file: !8993, line: 72, type: !103)
!8996 = !DILocalVariable(name: "stream", arg: 2, scope: !8992, file: !8993, line: 72, type: !1182)
!8997 = !DILocation(line: 0, scope: !8992)
!8998 = !DILocation(line: 81, column: 2, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8992, file: !8993, line: 81, column: 2)
!9000 = !{i64 2151107157}
!9001 = !DILocation(line: 82, column: 9, scope: !8992)
!9002 = !DILocation(line: 82, column: 2, scope: !8992)
!9003 = distinct !DISubprogram(name: "fputs", scope: !1186, file: !1186, line: 46, type: !9004, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !9007)
!9004 = !DISubroutineType(types: !9005)
!9005 = !{!103, !8600, !9006}
!9006 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1182)
!9007 = !{!9008, !9009, !9010, !9011}
!9008 = !DILocalVariable(name: "s", arg: 1, scope: !9003, file: !1186, line: 46, type: !8600)
!9009 = !DILocalVariable(name: "stream", arg: 2, scope: !9003, file: !1186, line: 46, type: !9006)
!9010 = !DILocalVariable(name: "len", scope: !9003, file: !1186, line: 48, type: !103)
!9011 = !DILocalVariable(name: "ret", scope: !9003, file: !1186, line: 49, type: !103)
!9012 = !DILocation(line: 0, scope: !9003)
!9013 = !DILocation(line: 48, column: 12, scope: !9003)
!9014 = !DILocation(line: 51, column: 8, scope: !9003)
!9015 = !DILocation(line: 53, column: 13, scope: !9003)
!9016 = !DILocation(line: 53, column: 9, scope: !9003)
!9017 = !DILocation(line: 53, column: 2, scope: !9003)
!9018 = distinct !DISubprogram(name: "fwrite", scope: !1186, file: !1186, line: 99, type: !9019, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !9021)
!9019 = !DISubroutineType(types: !9020)
!9020 = !{!156, !8900, !156, !156, !9006}
!9021 = !{!9022, !9023, !9024, !9025}
!9022 = !DILocalVariable(name: "ptr", arg: 1, scope: !9018, file: !1186, line: 99, type: !8900)
!9023 = !DILocalVariable(name: "size", arg: 2, scope: !9018, file: !1186, line: 99, type: !156)
!9024 = !DILocalVariable(name: "nitems", arg: 3, scope: !9018, file: !1186, line: 99, type: !156)
!9025 = !DILocalVariable(name: "stream", arg: 4, scope: !9018, file: !1186, line: 100, type: !9006)
!9026 = !DILocation(line: 0, scope: !9018)
!9027 = !DILocation(line: 102, column: 9, scope: !9018)
!9028 = !DILocation(line: 102, column: 2, scope: !9018)
!9029 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8993, file: !8993, line: 96, type: !9019, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !9030)
!9030 = !{!9031, !9032, !9033, !9034}
!9031 = !DILocalVariable(name: "ptr", arg: 1, scope: !9029, file: !8993, line: 96, type: !8900)
!9032 = !DILocalVariable(name: "size", arg: 2, scope: !9029, file: !8993, line: 96, type: !156)
!9033 = !DILocalVariable(name: "nitems", arg: 3, scope: !9029, file: !8993, line: 96, type: !156)
!9034 = !DILocalVariable(name: "stream", arg: 4, scope: !9029, file: !8993, line: 96, type: !9006)
!9035 = !DILocation(line: 0, scope: !9029)
!9036 = !DILocation(line: 107, column: 2, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9029, file: !8993, line: 107, column: 2)
!9038 = !{i64 2151107261}
!9039 = !DILocation(line: 108, column: 9, scope: !9029)
!9040 = !DILocation(line: 108, column: 2, scope: !9029)
!9041 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1186, file: !1186, line: 56, type: !9019, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !9042)
!9042 = !{!9043, !9044, !9045, !9046, !9047, !9048, !9049, !9050}
!9043 = !DILocalVariable(name: "ptr", arg: 1, scope: !9041, file: !1186, line: 56, type: !8900)
!9044 = !DILocalVariable(name: "size", arg: 2, scope: !9041, file: !1186, line: 56, type: !156)
!9045 = !DILocalVariable(name: "nitems", arg: 3, scope: !9041, file: !1186, line: 57, type: !156)
!9046 = !DILocalVariable(name: "stream", arg: 4, scope: !9041, file: !1186, line: 57, type: !9006)
!9047 = !DILocalVariable(name: "i", scope: !9041, file: !1186, line: 59, type: !156)
!9048 = !DILocalVariable(name: "j", scope: !9041, file: !1186, line: 60, type: !156)
!9049 = !DILocalVariable(name: "p", scope: !9041, file: !1186, line: 61, type: !3162)
!9050 = !DILabel(scope: !9041, name: "done", file: !1186, line: 82)
!9051 = !DILocation(line: 0, scope: !9041)
!9052 = !DILocation(line: 63, column: 14, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9041, file: !1186, line: 63, column: 6)
!9054 = !DILocation(line: 63, column: 24, scope: !9053)
!9055 = !DILocation(line: 72, column: 3, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9041, file: !1186, line: 70, column: 5)
!9057 = !DILocation(line: 0, scope: !9056)
!9058 = !DILocation(line: 73, column: 8, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9060, file: !1186, line: 73, column: 8)
!9060 = distinct !DILexicalBlock(scope: !9056, file: !1186, line: 72, column: 6)
!9061 = !DILocation(line: 73, column: 29, scope: !9059)
!9062 = !DILocation(line: 73, column: 27, scope: !9059)
!9063 = !DILocation(line: 73, column: 21, scope: !9059)
!9064 = !DILocation(line: 73, column: 33, scope: !9059)
!9065 = !DILocation(line: 73, column: 8, scope: !9060)
!9066 = !DILocation(line: 76, column: 5, scope: !9060)
!9067 = !DILocation(line: 77, column: 14, scope: !9056)
!9068 = !DILocation(line: 77, column: 3, scope: !9060)
!9069 = distinct !{!9069, !9055, !9070}
!9070 = !DILocation(line: 77, column: 17, scope: !9056)
!9071 = !DILocation(line: 79, column: 4, scope: !9056)
!9072 = !DILocation(line: 80, column: 13, scope: !9041)
!9073 = !DILocation(line: 80, column: 2, scope: !9056)
!9074 = distinct !{!9074, !9075, !9076}
!9075 = !DILocation(line: 70, column: 2, scope: !9041)
!9076 = !DILocation(line: 80, column: 16, scope: !9041)
!9077 = !DILocation(line: 82, column: 1, scope: !9041)
!9078 = !DILocation(line: 83, column: 17, scope: !9041)
!9079 = !DILocation(line: 83, column: 2, scope: !9041)
!9080 = !DILocation(line: 84, column: 1, scope: !9041)
!9081 = distinct !DISubprogram(name: "puts", scope: !1186, file: !1186, line: 106, type: !9082, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !9084)
!9082 = !DISubroutineType(types: !9083)
!9083 = !{!103, !108}
!9084 = !{!9085}
!9085 = !DILocalVariable(name: "s", arg: 1, scope: !9081, file: !1186, line: 106, type: !108)
!9086 = !DILocation(line: 0, scope: !9081)
!9087 = !DILocation(line: 108, column: 6, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9081, file: !1186, line: 108, column: 6)
!9089 = !DILocation(line: 108, column: 23, scope: !9088)
!9090 = !DILocation(line: 108, column: 6, scope: !9081)
!9091 = !DILocation(line: 112, column: 9, scope: !9081)
!9092 = !DILocation(line: 112, column: 29, scope: !9081)
!9093 = !DILocation(line: 112, column: 2, scope: !9081)
!9094 = !DILocation(line: 113, column: 1, scope: !9081)
!9095 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !1193, file: !1193, line: 12, type: !9096, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9102)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{!9098, !112}
!9098 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9099)
!9099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9100)
!9100 = !{!9101}
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9099, file: !105, line: 66, baseType: !104, size: 64)
!9102 = !{!9103, !9104}
!9103 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9095, file: !1193, line: 12, type: !112)
!9104 = !DILocalVariable(name: "now_ticks", scope: !9095, file: !1193, line: 14, type: !106)
!9105 = !DILocation(line: 0, scope: !9095)
!9106 = !DILocation(line: 14, column: 22, scope: !9095)
!9107 = !DILocation(line: 16, column: 9, scope: !9095)
!9108 = !DILocation(line: 17, column: 1, scope: !9095)
!9109 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !1193, file: !1193, line: 103, type: !9110, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9253)
!9110 = !DISubroutineType(types: !9111)
!9111 = !{!103, !9112, !13, !9098}
!9112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9113, size: 32)
!9113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9114)
!9114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !9115)
!9115 = !{!9116, !9117, !9118, !9119, !9120, !9121, !9225}
!9116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9114, file: !119, line: 32, baseType: !178, size: 32)
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9114, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9114, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!9119 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9114, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9114, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!9121 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9114, file: !119, line: 56, baseType: !9122, size: 32, offset: 160)
!9122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9123, size: 32)
!9123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !9124)
!9124 = !{!9125, !9144, !9223, !9224}
!9125 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9123, file: !127, line: 2722, baseType: !9126, size: 64)
!9126 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !9127)
!9127 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !9128)
!9128 = !{!9129}
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9127, file: !131, line: 232, baseType: !9130, size: 64)
!9130 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !9131)
!9131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !9132)
!9132 = !{!9133, !9139}
!9133 = !DIDerivedType(tag: DW_TAG_member, scope: !9131, file: !136, line: 38, baseType: !9134, size: 32)
!9134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9131, file: !136, line: 38, size: 32, elements: !9135)
!9135 = !{!9136, !9138}
!9136 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9134, file: !136, line: 39, baseType: !9137, size: 32)
!9137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9131, size: 32)
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9134, file: !136, line: 40, baseType: !9137, size: 32)
!9139 = !DIDerivedType(tag: DW_TAG_member, scope: !9131, file: !136, line: 42, baseType: !9140, size: 32, offset: 32)
!9140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9131, file: !136, line: 42, size: 32, elements: !9141)
!9141 = !{!9142, !9143}
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9140, file: !136, line: 43, baseType: !9137, size: 32)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9140, file: !136, line: 44, baseType: !9137, size: 32)
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9123, file: !127, line: 2724, baseType: !9145, size: 32, offset: 64)
!9145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9146, size: 32)
!9146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !9147)
!9147 = !{!9148, !9188, !9200, !9201, !9202, !9203, !9218}
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9146, file: !199, line: 247, baseType: !9149, size: 384)
!9149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !9150)
!9150 = !{!9151, !9162, !9164, !9165, !9166, !9175, !9176, !9177}
!9151 = !DIDerivedType(tag: DW_TAG_member, scope: !9149, file: !199, line: 60, baseType: !9152, size: 64)
!9152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9149, file: !199, line: 60, size: 64, elements: !9153)
!9153 = !{!9154, !9156}
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9152, file: !199, line: 61, baseType: !9155, size: 64)
!9155 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !9131)
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9152, file: !199, line: 62, baseType: !9157, size: 64)
!9157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !9158)
!9158 = !{!9159}
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9157, file: !211, line: 50, baseType: !9160, size: 64)
!9160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9161, size: 64, elements: !216)
!9161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9157, size: 32)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9149, file: !199, line: 68, baseType: !9163, size: 32, offset: 64)
!9163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9126, size: 32)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9149, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9149, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!9166 = !DIDerivedType(tag: DW_TAG_member, scope: !9149, file: !199, line: 90, baseType: !9167, size: 16, offset: 112)
!9167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9149, file: !199, line: 90, size: 16, elements: !9168)
!9168 = !{!9169, !9174}
!9169 = !DIDerivedType(tag: DW_TAG_member, scope: !9167, file: !199, line: 91, baseType: !9170, size: 16)
!9170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9167, file: !199, line: 91, size: 16, elements: !9171)
!9171 = !{!9172, !9173}
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9170, file: !199, line: 96, baseType: !229, size: 8)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9170, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9167, file: !199, line: 100, baseType: !181, size: 16)
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9149, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9149, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9149, file: !199, line: 131, baseType: !9178, size: 192, offset: 192)
!9178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !9179)
!9179 = !{!9180, !9181, !9187}
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9178, file: !131, line: 245, baseType: !9155, size: 64)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9178, file: !131, line: 246, baseType: !9182, size: 32, offset: 64)
!9182 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !9183)
!9183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9184, size: 32)
!9184 = !DISubroutineType(types: !9185)
!9185 = !{null, !9186}
!9186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9178, size: 32)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9178, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9146, file: !199, line: 250, baseType: !9189, size: 288, offset: 384)
!9189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !9190)
!9190 = !{!9191, !9192, !9193, !9194, !9195, !9196, !9197, !9198, !9199}
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9189, file: !248, line: 26, baseType: !111, size: 32)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9189, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9189, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9189, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9189, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9189, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9189, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9189, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9189, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9146, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9146, file: !199, line: 256, baseType: !9126, size: 64, offset: 704)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9146, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9146, file: !199, line: 325, baseType: !9204, size: 32, offset: 800)
!9204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9205, size: 32)
!9205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !9206)
!9206 = !{!9207, !9213, !9214}
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9205, file: !127, line: 5074, baseType: !9208, size: 96)
!9208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !9209)
!9209 = !{!9210, !9211, !9212}
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9208, file: !268, line: 57, baseType: !271, size: 32)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9208, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9208, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9205, file: !127, line: 5075, baseType: !9126, size: 64, offset: 96)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9205, file: !127, line: 5076, baseType: !9215, size: 32, offset: 160)
!9215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !9216)
!9216 = !{!9217}
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9215, file: !152, line: 52, baseType: !22, size: 32)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9146, file: !199, line: 343, baseType: !9219, size: 64, offset: 832)
!9219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !9220)
!9220 = !{!9221, !9222}
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9219, file: !248, line: 63, baseType: !111, size: 32)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9219, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9123, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9123, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9114, file: !119, line: 67, baseType: !9226, size: 32, offset: 192)
!9226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9227, size: 32)
!9227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9228)
!9228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9229, size: 32)
!9229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9230)
!9230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !9231)
!9231 = !{!9232, !9233, !9248}
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9230, file: !119, line: 91, baseType: !122, size: 8)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9230, file: !119, line: 93, baseType: !9234, size: 32, offset: 32)
!9234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9235)
!9235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9236, size: 32)
!9236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !9237)
!9237 = !{!9238, !9239, !9240, !9241, !9242, !9243, !9244, !9245, !9246, !9247}
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9236, file: !127, line: 4206, baseType: !9126, size: 64)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9236, file: !127, line: 4208, baseType: !9215, size: 32, offset: 64)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9236, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9236, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9236, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9236, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9236, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9236, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9236, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9236, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9230, file: !119, line: 96, baseType: !9249, size: 32, offset: 64)
!9249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9250)
!9250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9251, size: 32)
!9251 = !DISubroutineType(types: !9252)
!9252 = !{null, !9112}
!9253 = !{!9254, !9255, !9256, !9257, !9258}
!9254 = !DILocalVariable(name: "chan", arg: 1, scope: !9109, file: !1193, line: 103, type: !9112)
!9255 = !DILocalVariable(name: "msg", arg: 2, scope: !9109, file: !1193, line: 103, type: !13)
!9256 = !DILocalVariable(name: "timeout", arg: 3, scope: !9109, file: !1193, line: 103, type: !9098)
!9257 = !DILocalVariable(name: "err", scope: !9109, file: !1193, line: 105, type: !103)
!9258 = !DILocalVariable(name: "end_ticks", scope: !9109, file: !1193, line: 106, type: !112)
!9259 = !DILocation(line: 0, scope: !9109)
!9260 = !DILocation(line: 106, column: 23, scope: !9109)
!9261 = !DILocation(line: 108, column: 2, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9263, file: !1193, line: 108, column: 2)
!9263 = distinct !DILexicalBlock(scope: !9109, file: !1193, line: 108, column: 2)
!9264 = !DILocation(line: 108, column: 2, scope: !9263)
!9265 = !DILocation(line: 108, column: 2, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9262, file: !1193, line: 108, column: 2)
!9267 = !DILocation(line: 109, column: 2, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9269, file: !1193, line: 109, column: 2)
!9269 = distinct !DILexicalBlock(scope: !9109, file: !1193, line: 109, column: 2)
!9270 = !DILocation(line: 109, column: 2, scope: !9269)
!9271 = !DILocation(line: 109, column: 2, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9268, file: !1193, line: 109, column: 2)
!9273 = !DILocation(line: 110, column: 2, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9275, file: !1193, line: 110, column: 2)
!9275 = distinct !DILexicalBlock(scope: !9109, file: !1193, line: 110, column: 2)
!9276 = !DILocation(line: 110, column: 2, scope: !9275)
!9277 = !DILocation(line: 110, column: 2, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9274, file: !1193, line: 110, column: 2)
!9279 = !DILocation(line: 112, column: 12, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9109, file: !1193, line: 112, column: 6)
!9281 = !DILocation(line: 112, column: 22, scope: !9280)
!9282 = !DILocation(line: 112, column: 30, scope: !9280)
!9283 = !DILocation(line: 112, column: 61, scope: !9280)
!9284 = !DILocation(line: 112, column: 55, scope: !9280)
!9285 = !DILocation(line: 112, column: 34, scope: !9280)
!9286 = !DILocation(line: 112, column: 6, scope: !9109)
!9287 = !DILocation(line: 116, column: 27, scope: !9109)
!9288 = !DILocation(line: 116, column: 8, scope: !9109)
!9289 = !DILocation(line: 117, column: 6, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9109, file: !1193, line: 117, column: 6)
!9291 = !DILocation(line: 117, column: 6, scope: !9109)
!9292 = !DILocation(line: 121, column: 15, scope: !9109)
!9293 = !DILocation(line: 121, column: 35, scope: !9109)
!9294 = !DILocation(line: 121, column: 29, scope: !9109)
!9295 = !DILocation(line: 121, column: 2, scope: !9109)
!9296 = !DILocation(line: 123, column: 8, scope: !9109)
!9297 = !DILocation(line: 125, column: 23, scope: !9109)
!9298 = !DILocation(line: 125, column: 2, scope: !9109)
!9299 = !DILocation(line: 127, column: 2, scope: !9109)
!9300 = !DILocation(line: 128, column: 1, scope: !9109)
!9301 = distinct !DISubprogram(name: "k_mutex_lock", scope: !5050, file: !5050, line: 927, type: !9302, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9304)
!9302 = !DISubroutineType(types: !9303)
!9303 = !{!103, !9122, !9098}
!9304 = !{!9305, !9306}
!9305 = !DILocalVariable(name: "mutex", arg: 1, scope: !9301, file: !5050, line: 927, type: !9122)
!9306 = !DILocalVariable(name: "timeout", arg: 2, scope: !9301, file: !5050, line: 927, type: !9098)
!9307 = !DILocation(line: 0, scope: !9301)
!9308 = !DILocation(line: 936, column: 2, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9301, file: !5050, line: 936, column: 2)
!9310 = !{i64 2151048898}
!9311 = !DILocation(line: 937, column: 9, scope: !9301)
!9312 = !DILocation(line: 937, column: 2, scope: !9301)
!9313 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !1193, file: !1193, line: 66, type: !9314, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9316)
!9314 = !DISubroutineType(types: !9315)
!9315 = !{!103, !9112, !112}
!9316 = !{!9317, !9318, !9319, !9320, !9321, !9323}
!9317 = !DILocalVariable(name: "chan", arg: 1, scope: !9313, file: !1193, line: 66, type: !9112)
!9318 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9313, file: !1193, line: 66, type: !112)
!9319 = !DILocalVariable(name: "last_error", scope: !9313, file: !1193, line: 68, type: !103)
!9320 = !DILocalVariable(name: "err", scope: !9313, file: !1193, line: 68, type: !103)
!9321 = !DILocalVariable(name: "obs", scope: !9322, file: !1193, line: 70, type: !9226)
!9322 = distinct !DILexicalBlock(scope: !9313, file: !1193, line: 70, column: 2)
!9323 = !DILocalVariable(name: "obs", scope: !9324, file: !1193, line: 81, type: !9226)
!9324 = distinct !DILexicalBlock(scope: !9313, file: !1193, line: 81, column: 2)
!9325 = !DILocation(line: 0, scope: !9313)
!9326 = !DILocation(line: 70, column: 54, scope: !9322)
!9327 = !DILocation(line: 0, scope: !9322)
!9328 = !DILocation(line: 70, column: 65, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9322, file: !1193, line: 70, column: 2)
!9330 = !DILocation(line: 70, column: 70, scope: !9329)
!9331 = !DILocation(line: 70, column: 2, scope: !9322)
!9332 = !DILocation(line: 81, column: 54, scope: !9324)
!9333 = !DILocation(line: 81, column: 65, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9324, file: !1193, line: 81, column: 2)
!9335 = !DILocation(line: 0, scope: !9324)
!9336 = !DILocation(line: 81, column: 70, scope: !9334)
!9337 = !DILocation(line: 81, column: 2, scope: !9324)
!9338 = !DILocation(line: 71, column: 15, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9340, file: !1193, line: 71, column: 7)
!9340 = distinct !DILexicalBlock(scope: !9329, file: !1193, line: 70, column: 86)
!9341 = !DILocation(line: 71, column: 23, scope: !9339)
!9342 = !DILocation(line: 71, column: 35, scope: !9339)
!9343 = !DILocation(line: 71, column: 44, scope: !9339)
!9344 = !DILocation(line: 71, column: 7, scope: !9340)
!9345 = !DILocation(line: 72, column: 4, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9339, file: !1193, line: 71, column: 54)
!9347 = !DILocation(line: 73, column: 3, scope: !9346)
!9348 = !DILocation(line: 70, column: 79, scope: !9329)
!9349 = distinct !{!9349, !9331, !9350}
!9350 = !DILocation(line: 74, column: 2, scope: !9322)
!9351 = !DILocation(line: 100, column: 2, scope: !9313)
!9352 = !DILocation(line: 82, column: 15, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9354, file: !1193, line: 82, column: 7)
!9354 = distinct !DILexicalBlock(scope: !9334, file: !1193, line: 81, column: 86)
!9355 = !DILocation(line: 82, column: 23, scope: !9353)
!9356 = !DILocation(line: 82, column: 35, scope: !9353)
!9357 = !DILocation(line: 82, column: 41, scope: !9353)
!9358 = !DILocation(line: 82, column: 7, scope: !9354)
!9359 = !DILocation(line: 83, column: 43, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9353, file: !1193, line: 82, column: 51)
!9361 = !DILocation(line: 83, column: 10, scope: !9360)
!9362 = !DILocation(line: 84, column: 4, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !1193, line: 84, column: 4)
!9364 = distinct !DILexicalBlock(scope: !9360, file: !1193, line: 84, column: 4)
!9365 = !DILocation(line: 84, column: 4, scope: !9364)
!9366 = !DILocation(line: 84, column: 4, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9363, file: !1193, line: 84, column: 4)
!9368 = !DILocation(line: 81, column: 79, scope: !9334)
!9369 = distinct !{!9369, !9337, !9370}
!9370 = !DILocation(line: 92, column: 2, scope: !9324)
!9371 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !5050, file: !5050, line: 944, type: !9372, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9374)
!9372 = !DISubroutineType(types: !9373)
!9373 = !{!103, !9122}
!9374 = !{!9375}
!9375 = !DILocalVariable(name: "mutex", arg: 1, scope: !9371, file: !5050, line: 944, type: !9122)
!9376 = !DILocation(line: 0, scope: !9371)
!9377 = !DILocation(line: 952, column: 2, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9371, file: !5050, line: 952, column: 2)
!9379 = !{i64 2151048966}
!9380 = !DILocation(line: 953, column: 9, scope: !9371)
!9381 = !DILocation(line: 953, column: 2, scope: !9371)
!9382 = distinct !DISubprogram(name: "k_msgq_put", scope: !5050, file: !5050, line: 1129, type: !9383, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9385)
!9383 = !DISubroutineType(types: !9384)
!9384 = !{!103, !9235, !13, !9098}
!9385 = !{!9386, !9387, !9388}
!9386 = !DILocalVariable(name: "msgq", arg: 1, scope: !9382, file: !5050, line: 1129, type: !9235)
!9387 = !DILocalVariable(name: "data", arg: 2, scope: !9382, file: !5050, line: 1129, type: !13)
!9388 = !DILocalVariable(name: "timeout", arg: 3, scope: !9382, file: !5050, line: 1129, type: !9098)
!9389 = !DILocation(line: 0, scope: !9382)
!9390 = !DILocation(line: 1139, column: 2, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9382, file: !5050, line: 1139, column: 2)
!9392 = !{i64 2151049714}
!9393 = !DILocation(line: 1140, column: 9, scope: !9382)
!9394 = !DILocation(line: 1140, column: 2, scope: !9382)
!9395 = distinct !DISubprogram(name: "zbus_chan_read", scope: !1193, file: !1193, line: 130, type: !9396, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9398)
!9396 = !DISubroutineType(types: !9397)
!9397 = !{!103, !9112, !102, !9098}
!9398 = !{!9399, !9400, !9401, !9402}
!9399 = !DILocalVariable(name: "chan", arg: 1, scope: !9395, file: !1193, line: 130, type: !9112)
!9400 = !DILocalVariable(name: "msg", arg: 2, scope: !9395, file: !1193, line: 130, type: !102)
!9401 = !DILocalVariable(name: "timeout", arg: 3, scope: !9395, file: !1193, line: 130, type: !9098)
!9402 = !DILocalVariable(name: "err", scope: !9395, file: !1193, line: 132, type: !103)
!9403 = !DILocation(line: 0, scope: !9395)
!9404 = !DILocation(line: 134, column: 2, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9406, file: !1193, line: 134, column: 2)
!9406 = distinct !DILexicalBlock(scope: !9395, file: !1193, line: 134, column: 2)
!9407 = !DILocation(line: 134, column: 2, scope: !9406)
!9408 = !DILocation(line: 134, column: 2, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9405, file: !1193, line: 134, column: 2)
!9410 = !DILocation(line: 135, column: 2, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9412, file: !1193, line: 135, column: 2)
!9412 = distinct !DILexicalBlock(scope: !9395, file: !1193, line: 135, column: 2)
!9413 = !DILocation(line: 135, column: 2, scope: !9412)
!9414 = !DILocation(line: 135, column: 2, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9411, file: !1193, line: 135, column: 2)
!9416 = !DILocation(line: 136, column: 2, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9418, file: !1193, line: 136, column: 2)
!9418 = distinct !DILexicalBlock(scope: !9395, file: !1193, line: 136, column: 2)
!9419 = !DILocation(line: 136, column: 2, scope: !9418)
!9420 = !DILocation(line: 136, column: 2, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9417, file: !1193, line: 136, column: 2)
!9422 = !DILocation(line: 138, column: 27, scope: !9395)
!9423 = !DILocation(line: 138, column: 8, scope: !9395)
!9424 = !DILocation(line: 139, column: 6, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9395, file: !1193, line: 139, column: 6)
!9426 = !DILocation(line: 139, column: 6, scope: !9395)
!9427 = !DILocation(line: 143, column: 20, scope: !9395)
!9428 = !DILocation(line: 143, column: 35, scope: !9395)
!9429 = !DILocation(line: 143, column: 29, scope: !9395)
!9430 = !DILocation(line: 143, column: 2, scope: !9395)
!9431 = !DILocation(line: 145, column: 30, scope: !9395)
!9432 = !DILocation(line: 145, column: 9, scope: !9395)
!9433 = !DILocation(line: 145, column: 2, scope: !9395)
!9434 = !DILocation(line: 146, column: 1, scope: !9395)
!9435 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !1193, file: !1193, line: 148, type: !9436, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9438)
!9436 = !DISubroutineType(types: !9437)
!9437 = !{!103, !9112, !9098}
!9438 = !{!9439, !9440, !9441, !9442}
!9439 = !DILocalVariable(name: "chan", arg: 1, scope: !9435, file: !1193, line: 148, type: !9112)
!9440 = !DILocalVariable(name: "timeout", arg: 2, scope: !9435, file: !1193, line: 148, type: !9098)
!9441 = !DILocalVariable(name: "err", scope: !9435, file: !1193, line: 150, type: !103)
!9442 = !DILocalVariable(name: "end_ticks", scope: !9435, file: !1193, line: 151, type: !112)
!9443 = !DILocation(line: 0, scope: !9435)
!9444 = !DILocation(line: 151, column: 23, scope: !9435)
!9445 = !DILocation(line: 153, column: 2, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9447, file: !1193, line: 153, column: 2)
!9447 = distinct !DILexicalBlock(scope: !9435, file: !1193, line: 153, column: 2)
!9448 = !DILocation(line: 153, column: 2, scope: !9447)
!9449 = !DILocation(line: 153, column: 2, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9446, file: !1193, line: 153, column: 2)
!9451 = !DILocation(line: 154, column: 2, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !1193, line: 154, column: 2)
!9453 = distinct !DILexicalBlock(scope: !9435, file: !1193, line: 154, column: 2)
!9454 = !DILocation(line: 154, column: 2, scope: !9453)
!9455 = !DILocation(line: 154, column: 2, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9452, file: !1193, line: 154, column: 2)
!9457 = !DILocation(line: 156, column: 27, scope: !9435)
!9458 = !DILocation(line: 156, column: 8, scope: !9435)
!9459 = !DILocation(line: 157, column: 6, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9435, file: !1193, line: 157, column: 6)
!9461 = !DILocation(line: 157, column: 6, scope: !9435)
!9462 = !DILocation(line: 161, column: 8, scope: !9435)
!9463 = !DILocation(line: 163, column: 23, scope: !9435)
!9464 = !DILocation(line: 163, column: 2, scope: !9435)
!9465 = !DILocation(line: 165, column: 2, scope: !9435)
!9466 = !DILocation(line: 166, column: 1, scope: !9435)
!9467 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !1193, file: !1193, line: 168, type: !9436, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9468)
!9468 = !{!9469, !9470, !9471}
!9469 = !DILocalVariable(name: "chan", arg: 1, scope: !9467, file: !1193, line: 168, type: !9112)
!9470 = !DILocalVariable(name: "timeout", arg: 2, scope: !9467, file: !1193, line: 168, type: !9098)
!9471 = !DILocalVariable(name: "err", scope: !9467, file: !1193, line: 173, type: !103)
!9472 = !DILocation(line: 0, scope: !9467)
!9473 = !DILocation(line: 170, column: 2, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9475, file: !1193, line: 170, column: 2)
!9475 = distinct !DILexicalBlock(scope: !9467, file: !1193, line: 170, column: 2)
!9476 = !DILocation(line: 170, column: 2, scope: !9475)
!9477 = !DILocation(line: 170, column: 2, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9474, file: !1193, line: 170, column: 2)
!9479 = !DILocation(line: 171, column: 2, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9481, file: !1193, line: 171, column: 2)
!9481 = distinct !DILexicalBlock(scope: !9467, file: !1193, line: 171, column: 2)
!9482 = !DILocation(line: 171, column: 2, scope: !9481)
!9483 = !DILocation(line: 171, column: 2, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9480, file: !1193, line: 171, column: 2)
!9485 = !DILocation(line: 173, column: 31, scope: !9467)
!9486 = !DILocation(line: 173, column: 12, scope: !9467)
!9487 = !DILocation(line: 180, column: 1, scope: !9467)
!9488 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !1193, file: !1193, line: 182, type: !9489, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9491)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{!103, !9112}
!9491 = !{!9492, !9493}
!9492 = !DILocalVariable(name: "chan", arg: 1, scope: !9488, file: !1193, line: 182, type: !9112)
!9493 = !DILocalVariable(name: "err", scope: !9488, file: !1193, line: 187, type: !103)
!9494 = !DILocation(line: 0, scope: !9488)
!9495 = !DILocation(line: 184, column: 2, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !1193, line: 184, column: 2)
!9497 = distinct !DILexicalBlock(scope: !9488, file: !1193, line: 184, column: 2)
!9498 = !DILocation(line: 184, column: 2, scope: !9497)
!9499 = !DILocation(line: 184, column: 2, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9496, file: !1193, line: 184, column: 2)
!9501 = !DILocation(line: 185, column: 2, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !1193, line: 185, column: 2)
!9503 = distinct !DILexicalBlock(scope: !9488, file: !1193, line: 185, column: 2)
!9504 = !DILocation(line: 185, column: 2, scope: !9503)
!9505 = !DILocation(line: 185, column: 2, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9502, file: !1193, line: 185, column: 2)
!9507 = !DILocation(line: 187, column: 33, scope: !9488)
!9508 = !DILocation(line: 187, column: 12, scope: !9488)
!9509 = !DILocation(line: 189, column: 2, scope: !9488)
!9510 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !1193, file: !1193, line: 192, type: !9511, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9514)
!9511 = !DISubroutineType(types: !9512)
!9512 = !{!103, !9228, !9513, !9098}
!9513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9112, size: 32)
!9514 = !{!9515, !9516, !9517}
!9515 = !DILocalVariable(name: "sub", arg: 1, scope: !9510, file: !1193, line: 192, type: !9228)
!9516 = !DILocalVariable(name: "chan", arg: 2, scope: !9510, file: !1193, line: 192, type: !9513)
!9517 = !DILocalVariable(name: "timeout", arg: 3, scope: !9510, file: !1193, line: 193, type: !9098)
!9518 = !DILocation(line: 0, scope: !9510)
!9519 = !DILocation(line: 195, column: 2, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9521, file: !1193, line: 195, column: 2)
!9521 = distinct !DILexicalBlock(scope: !9510, file: !1193, line: 195, column: 2)
!9522 = !DILocation(line: 195, column: 2, scope: !9521)
!9523 = !DILocation(line: 195, column: 2, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9520, file: !1193, line: 195, column: 2)
!9525 = !DILocation(line: 196, column: 2, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9527, file: !1193, line: 196, column: 2)
!9527 = distinct !DILexicalBlock(scope: !9510, file: !1193, line: 196, column: 2)
!9528 = !DILocation(line: 196, column: 2, scope: !9527)
!9529 = !DILocation(line: 196, column: 2, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9526, file: !1193, line: 196, column: 2)
!9531 = !DILocation(line: 197, column: 2, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9533, file: !1193, line: 197, column: 2)
!9533 = distinct !DILexicalBlock(scope: !9510, file: !1193, line: 197, column: 2)
!9534 = !DILocation(line: 197, column: 2, scope: !9533)
!9535 = !DILocation(line: 197, column: 2, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9532, file: !1193, line: 197, column: 2)
!9537 = !DILocation(line: 199, column: 11, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9510, file: !1193, line: 199, column: 6)
!9539 = !DILocation(line: 199, column: 17, scope: !9538)
!9540 = !DILocation(line: 199, column: 6, scope: !9510)
!9541 = !DILocation(line: 203, column: 32, scope: !9510)
!9542 = !DILocation(line: 203, column: 9, scope: !9510)
!9543 = !DILocation(line: 203, column: 2, scope: !9510)
!9544 = !DILocation(line: 204, column: 1, scope: !9510)
!9545 = distinct !DISubprogram(name: "k_msgq_get", scope: !5050, file: !5050, line: 1147, type: !9546, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !9548)
!9546 = !DISubroutineType(types: !9547)
!9547 = !{!103, !9235, !102, !9098}
!9548 = !{!9549, !9550, !9551}
!9549 = !DILocalVariable(name: "msgq", arg: 1, scope: !9545, file: !5050, line: 1147, type: !9235)
!9550 = !DILocalVariable(name: "data", arg: 2, scope: !9545, file: !5050, line: 1147, type: !102)
!9551 = !DILocalVariable(name: "timeout", arg: 3, scope: !9545, file: !5050, line: 1147, type: !9098)
!9552 = !DILocation(line: 0, scope: !9545)
!9553 = !DILocation(line: 1157, column: 2, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9545, file: !5050, line: 1157, column: 2)
!9555 = !{i64 2151049782}
!9556 = !DILocation(line: 1158, column: 9, scope: !9545)
!9557 = !DILocation(line: 1158, column: 2, scope: !9545)
!9558 = distinct !DISubprogram(name: "uart_console_init", scope: !1297, file: !1297, line: 588, type: !1241, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1201, retainedNodes: !9559)
!9559 = !{!9560}
!9560 = !DILocalVariable(name: "arg", arg: 1, scope: !9558, file: !1297, line: 588, type: !1213)
!9561 = !DILocation(line: 0, scope: !9558)
!9562 = !DILocation(line: 593, column: 7, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9558, file: !1297, line: 593, column: 6)
!9564 = !DILocation(line: 593, column: 6, scope: !9558)
!9565 = !DILocation(line: 597, column: 2, scope: !9558)
!9566 = !DILocation(line: 599, column: 2, scope: !9558)
!9567 = !DILocation(line: 600, column: 1, scope: !9558)
!9568 = distinct !DISubprogram(name: "device_is_ready", scope: !9569, file: !9569, line: 47, type: !9570, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1201, retainedNodes: !9572)
!9569 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!9570 = !DISubroutineType(types: !9571)
!9571 = !{!122, !1213}
!9572 = !{!9573}
!9573 = !DILocalVariable(name: "dev", arg: 1, scope: !9568, file: !9569, line: 47, type: !1213)
!9574 = !DILocation(line: 0, scope: !9568)
!9575 = !DILocation(line: 55, column: 2, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9568, file: !9569, line: 55, column: 2)
!9577 = !{i64 2151379807}
!9578 = !DILocation(line: 56, column: 9, scope: !9568)
!9579 = !DILocation(line: 56, column: 2, scope: !9568)
!9580 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1297, file: !1297, line: 573, type: !317, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1201, retainedNodes: !2275)
!9581 = !DILocation(line: 576, column: 2, scope: !9580)
!9582 = !DILocation(line: 579, column: 2, scope: !9580)
!9583 = !DILocation(line: 581, column: 1, scope: !9580)
!9584 = distinct !DISubprogram(name: "console_out", scope: !1297, file: !1297, line: 77, type: !746, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1201, retainedNodes: !9585)
!9585 = !{!9586}
!9586 = !DILocalVariable(name: "c", arg: 1, scope: !9584, file: !1297, line: 77, type: !103)
!9587 = !DILocation(line: 0, scope: !9584)
!9588 = !DILocation(line: 89, column: 11, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9584, file: !1297, line: 89, column: 6)
!9590 = !DILocation(line: 89, column: 6, scope: !9584)
!9591 = !DILocation(line: 90, column: 3, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9589, file: !1297, line: 89, column: 17)
!9593 = !DILocation(line: 91, column: 2, scope: !9592)
!9594 = !DILocation(line: 92, column: 34, scope: !9584)
!9595 = !DILocation(line: 92, column: 2, scope: !9584)
!9596 = !DILocation(line: 94, column: 2, scope: !9584)
!9597 = distinct !DISubprogram(name: "uart_poll_out", scope: !9598, file: !9598, line: 95, type: !1237, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1201, retainedNodes: !9599)
!9598 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/dyn_channel")
!9599 = !{!9600, !9601}
!9600 = !DILocalVariable(name: "dev", arg: 1, scope: !9597, file: !9598, line: 95, type: !1213)
!9601 = !DILocalVariable(name: "out_char", arg: 2, scope: !9597, file: !9598, line: 95, type: !167)
!9602 = !DILocation(line: 0, scope: !9597)
!9603 = !DILocation(line: 105, column: 2, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9597, file: !9598, line: 105, column: 2)
!9605 = !{i64 2151463052}
!9606 = !DILocation(line: 106, column: 2, scope: !9597)
!9607 = !DILocation(line: 107, column: 1, scope: !9597)
!9608 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1207, file: !1207, line: 574, type: !1237, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1201, retainedNodes: !9609)
!9609 = !{!9610, !9611, !9612}
!9610 = !DILocalVariable(name: "dev", arg: 1, scope: !9608, file: !1207, line: 574, type: !1213)
!9611 = !DILocalVariable(name: "out_char", arg: 2, scope: !9608, file: !1207, line: 575, type: !167)
!9612 = !DILocalVariable(name: "api", scope: !9608, file: !1207, line: 577, type: !1204)
!9613 = !DILocation(line: 0, scope: !9608)
!9614 = !DILocation(line: 578, column: 40, scope: !9608)
!9615 = !DILocation(line: 580, column: 7, scope: !9608)
!9616 = !DILocation(line: 580, column: 2, scope: !9608)
!9617 = !DILocation(line: 581, column: 1, scope: !9608)
!9618 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !1216, file: !1216, line: 730, type: !9570, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1201, retainedNodes: !9619)
!9619 = !{!9620}
!9620 = !DILocalVariable(name: "dev", arg: 1, scope: !9618, file: !1216, line: 730, type: !1213)
!9621 = !DILocation(line: 0, scope: !9618)
!9622 = !DILocation(line: 732, column: 9, scope: !9618)
!9623 = !DILocation(line: 732, column: 2, scope: !9618)
!9624 = distinct !DISubprogram(name: "uart_register_input", scope: !1297, file: !1297, line: 560, type: !9625, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1201, retainedNodes: !9672)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{null, !9627, !9627, !9669}
!9627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9628, size: 32)
!9628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !127, line: 2208, size: 160, elements: !9629)
!9629 = !{!9630}
!9630 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9628, file: !127, line: 2209, baseType: !9631, size: 160)
!9631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !127, line: 1709, size: 160, elements: !9632)
!9632 = !{!9633, !9646, !9650}
!9633 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9631, file: !127, line: 1710, baseType: !9634, size: 64)
!9634 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9635, line: 46, baseType: !9636)
!9635 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9635, line: 41, size: 64, elements: !9637)
!9637 = !{!9638, !9645}
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9636, file: !9635, line: 42, baseType: !9639, size: 32)
!9639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9640, size: 32)
!9640 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9635, line: 39, baseType: !9641)
!9641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9635, line: 35, size: 32, elements: !9642)
!9642 = !{!9643}
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9641, file: !9635, line: 36, baseType: !9644, size: 32)
!9644 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9635, line: 32, baseType: !111)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9636, file: !9635, line: 43, baseType: !9639, size: 32, offset: 32)
!9646 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9631, file: !127, line: 1711, baseType: !9647, size: 32, offset: 64)
!9647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !9648)
!9648 = !{!9649}
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9647, file: !152, line: 52, baseType: !22, size: 32)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9631, file: !127, line: 1712, baseType: !9651, size: 64, offset: 96)
!9651 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !9652)
!9652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !9653)
!9653 = !{!9654}
!9654 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9652, file: !131, line: 232, baseType: !9655, size: 64)
!9655 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !9656)
!9656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !9657)
!9657 = !{!9658, !9664}
!9658 = !DIDerivedType(tag: DW_TAG_member, scope: !9656, file: !136, line: 38, baseType: !9659, size: 32)
!9659 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9656, file: !136, line: 38, size: 32, elements: !9660)
!9660 = !{!9661, !9663}
!9661 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9659, file: !136, line: 39, baseType: !9662, size: 32)
!9662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9656, size: 32)
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9659, file: !136, line: 40, baseType: !9662, size: 32)
!9664 = !DIDerivedType(tag: DW_TAG_member, scope: !9656, file: !136, line: 42, baseType: !9665, size: 32, offset: 32)
!9665 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9656, file: !136, line: 42, size: 32, elements: !9666)
!9666 = !{!9667, !9668}
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9665, file: !136, line: 43, baseType: !9662, size: 32)
!9668 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9665, file: !136, line: 44, baseType: !9662, size: 32)
!9669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9670, size: 32)
!9670 = !DISubroutineType(types: !9671)
!9671 = !{!166, !160, !166}
!9672 = !{!9673, !9674, !9675}
!9673 = !DILocalVariable(name: "avail", arg: 1, scope: !9624, file: !1297, line: 560, type: !9627)
!9674 = !DILocalVariable(name: "lines", arg: 2, scope: !9624, file: !1297, line: 560, type: !9627)
!9675 = !DILocalVariable(name: "completion", arg: 3, scope: !9624, file: !1297, line: 561, type: !9669)
!9676 = !DILocation(line: 0, scope: !9624)
!9677 = !DILocation(line: 566, column: 1, scope: !9624)
!9678 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1410, file: !1410, line: 40, type: !1332, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9679)
!9679 = !{!9680, !9681, !9682, !9683, !9685, !9686, !9691, !9692}
!9680 = !DILocalVariable(name: "port", arg: 1, scope: !9678, file: !1410, line: 40, type: !1334)
!9681 = !DILocalVariable(name: "pin", arg: 2, scope: !9678, file: !1410, line: 40, type: !1349)
!9682 = !DILocalVariable(name: "flags", arg: 3, scope: !9678, file: !1410, line: 41, type: !1350)
!9683 = !DILocalVariable(name: "config", scope: !9678, file: !1410, line: 43, type: !9684)
!9684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!9685 = !DILocalVariable(name: "base", scope: !9678, file: !1410, line: 44, type: !1447)
!9686 = !DILocalVariable(name: "pin_cfg", scope: !9678, file: !1410, line: 52, type: !9687)
!9687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1463, line: 59, size: 160, elements: !9688)
!9688 = !{!9689, !9690}
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9687, file: !1463, line: 60, baseType: !1462, size: 128)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9687, file: !1463, line: 61, baseType: !111, size: 32, offset: 128)
!9691 = !DILocalVariable(name: "gpio_cfg_reg", scope: !9678, file: !1410, line: 54, type: !1162)
!9692 = !DILocalVariable(name: "reg", scope: !9678, file: !1410, line: 56, type: !111)
!9693 = !DILocation(line: 0, scope: !9678)
!9694 = !DILocation(line: 43, column: 47, scope: !9678)
!9695 = !DILocation(line: 44, column: 28, scope: !9678)
!9696 = !DILocation(line: 46, column: 35, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9678, file: !1410, line: 46, column: 6)
!9698 = !DILocation(line: 50, column: 2, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !1410, line: 50, column: 2)
!9700 = distinct !DILexicalBlock(scope: !9678, file: !1410, line: 50, column: 2)
!9701 = !DILocation(line: 50, column: 2, scope: !9700)
!9702 = !DILocation(line: 50, column: 2, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9699, file: !1410, line: 50, column: 2)
!9704 = !DILocation(line: 52, column: 2, scope: !9678)
!9705 = !DILocation(line: 52, column: 25, scope: !9678)
!9706 = !DILocation(line: 55, column: 32, scope: !9678)
!9707 = !DILocation(line: 55, column: 47, scope: !9678)
!9708 = !DILocation(line: 55, column: 3, scope: !9678)
!9709 = !DILocation(line: 56, column: 17, scope: !9678)
!9710 = !DILocation(line: 66, column: 13, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9678, file: !1410, line: 66, column: 6)
!9712 = !DILocation(line: 66, column: 34, scope: !9711)
!9713 = !DILocation(line: 66, column: 6, scope: !9678)
!9714 = !DILocation(line: 70, column: 36, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9678, file: !1410, line: 70, column: 6)
!9716 = !DILocation(line: 70, column: 14, scope: !9715)
!9717 = !DILocation(line: 70, column: 30, scope: !9715)
!9718 = !DILocation(line: 72, column: 7, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9715, file: !1410, line: 70, column: 72)
!9720 = !DILocation(line: 73, column: 8, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9722, file: !1410, line: 72, column: 38)
!9722 = distinct !DILexicalBlock(scope: !9719, file: !1410, line: 72, column: 7)
!9723 = !DILocation(line: 74, column: 3, scope: !9721)
!9724 = !DILocation(line: 75, column: 8, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9722, file: !1410, line: 74, column: 10)
!9726 = !DILocation(line: 79, column: 7, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9715, file: !1410, line: 77, column: 9)
!9728 = !DILocation(line: 0, scope: !9715)
!9729 = !DILocation(line: 84, column: 27, scope: !9678)
!9730 = !DILocation(line: 84, column: 26, scope: !9678)
!9731 = !DILocation(line: 84, column: 2, scope: !9678)
!9732 = !DILocation(line: 86, column: 10, scope: !9678)
!9733 = !DILocation(line: 86, column: 25, scope: !9678)
!9734 = !DILocation(line: 87, column: 2, scope: !9678)
!9735 = !DILocation(line: 98, column: 2, scope: !9678)
!9736 = !DILocation(line: 99, column: 2, scope: !9678)
!9737 = !DILocation(line: 101, column: 6, scope: !9678)
!9738 = !DILocation(line: 103, column: 14, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !1410, line: 103, column: 7)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !1410, line: 101, column: 35)
!9741 = distinct !DILexicalBlock(scope: !9678, file: !1410, line: 101, column: 6)
!9742 = !DILocation(line: 103, column: 38, scope: !9739)
!9743 = !DILocation(line: 103, column: 7, scope: !9740)
!9744 = !DILocation(line: 105, column: 21, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9739, file: !1410, line: 105, column: 14)
!9746 = !DILocation(line: 105, column: 46, scope: !9745)
!9747 = !DILocation(line: 105, column: 14, scope: !9739)
!9748 = !DILocation(line: 0, scope: !9739)
!9749 = !DILocation(line: 110, column: 3, scope: !9740)
!9750 = !DILocation(line: 111, column: 2, scope: !9740)
!9751 = !DILocation(line: 113, column: 3, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9741, file: !1410, line: 111, column: 9)
!9753 = !DILocation(line: 117, column: 1, scope: !9678)
!9754 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1410, file: !1410, line: 119, type: !9755, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9757)
!9755 = !DISubroutineType(types: !9756)
!9756 = !{!103, !1334, !1732}
!9757 = !{!9758, !9759, !9760, !9761}
!9758 = !DILocalVariable(name: "port", arg: 1, scope: !9754, file: !1410, line: 119, type: !1334)
!9759 = !DILocalVariable(name: "value", arg: 2, scope: !9754, file: !1410, line: 119, type: !1732)
!9760 = !DILocalVariable(name: "config", scope: !9754, file: !1410, line: 121, type: !9684)
!9761 = !DILocalVariable(name: "base", scope: !9754, file: !1410, line: 122, type: !1447)
!9762 = !DILocation(line: 0, scope: !9754)
!9763 = !DILocation(line: 121, column: 47, scope: !9754)
!9764 = !DILocation(line: 122, column: 28, scope: !9754)
!9765 = !DILocation(line: 124, column: 11, scope: !9754)
!9766 = !DILocation(line: 124, column: 9, scope: !9754)
!9767 = !DILocation(line: 126, column: 2, scope: !9754)
!9768 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1410, file: !1410, line: 129, type: !1359, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9769)
!9769 = !{!9770, !9771, !9772, !9773, !9774}
!9770 = !DILocalVariable(name: "port", arg: 1, scope: !9768, file: !1410, line: 129, type: !1334)
!9771 = !DILocalVariable(name: "mask", arg: 2, scope: !9768, file: !1410, line: 130, type: !1361)
!9772 = !DILocalVariable(name: "value", arg: 3, scope: !9768, file: !1410, line: 131, type: !1356)
!9773 = !DILocalVariable(name: "config", scope: !9768, file: !1410, line: 133, type: !9684)
!9774 = !DILocalVariable(name: "base", scope: !9768, file: !1410, line: 134, type: !1447)
!9775 = !DILocation(line: 0, scope: !9768)
!9776 = !DILocation(line: 133, column: 47, scope: !9768)
!9777 = !DILocation(line: 134, column: 28, scope: !9768)
!9778 = !DILocation(line: 137, column: 5, scope: !9768)
!9779 = !DILocation(line: 137, column: 32, scope: !9768)
!9780 = !DILocation(line: 137, column: 30, scope: !9768)
!9781 = !DILocation(line: 137, column: 48, scope: !9768)
!9782 = !DILocation(line: 137, column: 39, scope: !9768)
!9783 = !DILocation(line: 136, column: 2, scope: !9768)
!9784 = !DILocation(line: 139, column: 2, scope: !9768)
!9785 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1410, file: !1410, line: 142, type: !1364, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9786)
!9786 = !{!9787, !9788, !9789, !9790}
!9787 = !DILocalVariable(name: "port", arg: 1, scope: !9785, file: !1410, line: 142, type: !1334)
!9788 = !DILocalVariable(name: "pins", arg: 2, scope: !9785, file: !1410, line: 143, type: !1361)
!9789 = !DILocalVariable(name: "config", scope: !9785, file: !1410, line: 145, type: !9684)
!9790 = !DILocalVariable(name: "base", scope: !9785, file: !1410, line: 146, type: !1447)
!9791 = !DILocation(line: 0, scope: !9785)
!9792 = !DILocation(line: 145, column: 47, scope: !9785)
!9793 = !DILocation(line: 146, column: 28, scope: !9785)
!9794 = !DILocation(line: 148, column: 29, scope: !9785)
!9795 = !DILocation(line: 148, column: 54, scope: !9785)
!9796 = !DILocation(line: 148, column: 2, scope: !9785)
!9797 = !DILocation(line: 150, column: 2, scope: !9785)
!9798 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1410, file: !1410, line: 153, type: !1364, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9799)
!9799 = !{!9800, !9801, !9802, !9803}
!9800 = !DILocalVariable(name: "port", arg: 1, scope: !9798, file: !1410, line: 153, type: !1334)
!9801 = !DILocalVariable(name: "pins", arg: 2, scope: !9798, file: !1410, line: 154, type: !1361)
!9802 = !DILocalVariable(name: "config", scope: !9798, file: !1410, line: 156, type: !9684)
!9803 = !DILocalVariable(name: "base", scope: !9798, file: !1410, line: 157, type: !1447)
!9804 = !DILocation(line: 0, scope: !9798)
!9805 = !DILocation(line: 156, column: 47, scope: !9798)
!9806 = !DILocation(line: 157, column: 28, scope: !9798)
!9807 = !DILocation(line: 159, column: 29, scope: !9798)
!9808 = !DILocation(line: 159, column: 56, scope: !9798)
!9809 = !DILocation(line: 159, column: 54, scope: !9798)
!9810 = !DILocation(line: 159, column: 2, scope: !9798)
!9811 = !DILocation(line: 161, column: 2, scope: !9798)
!9812 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1410, file: !1410, line: 164, type: !1364, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9813)
!9813 = !{!9814, !9815, !9816, !9817}
!9814 = !DILocalVariable(name: "port", arg: 1, scope: !9812, file: !1410, line: 164, type: !1334)
!9815 = !DILocalVariable(name: "pins", arg: 2, scope: !9812, file: !1410, line: 165, type: !1361)
!9816 = !DILocalVariable(name: "config", scope: !9812, file: !1410, line: 167, type: !9684)
!9817 = !DILocalVariable(name: "base", scope: !9812, file: !1410, line: 168, type: !1447)
!9818 = !DILocation(line: 0, scope: !9812)
!9819 = !DILocation(line: 167, column: 47, scope: !9812)
!9820 = !DILocation(line: 168, column: 28, scope: !9812)
!9821 = !DILocation(line: 170, column: 29, scope: !9812)
!9822 = !DILocation(line: 170, column: 54, scope: !9812)
!9823 = !DILocation(line: 170, column: 2, scope: !9812)
!9824 = !DILocation(line: 172, column: 2, scope: !9812)
!9825 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1410, file: !1410, line: 175, type: !1370, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9826)
!9826 = !{!9827, !9828, !9829, !9830, !9831, !9832, !9833, !9834, !9835, !9836}
!9827 = !DILocalVariable(name: "port", arg: 1, scope: !9825, file: !1410, line: 175, type: !1334)
!9828 = !DILocalVariable(name: "pin", arg: 2, scope: !9825, file: !1410, line: 176, type: !1349)
!9829 = !DILocalVariable(name: "mode", arg: 3, scope: !9825, file: !1410, line: 177, type: !1309)
!9830 = !DILocalVariable(name: "trig", arg: 4, scope: !9825, file: !1410, line: 178, type: !1315)
!9831 = !DILocalVariable(name: "config", scope: !9825, file: !1410, line: 180, type: !9684)
!9832 = !DILocalVariable(name: "base", scope: !9825, file: !1410, line: 181, type: !1447)
!9833 = !DILocalVariable(name: "icr_reg", scope: !9825, file: !1410, line: 182, type: !1162)
!9834 = !DILocalVariable(name: "key", scope: !9825, file: !1410, line: 183, type: !32)
!9835 = !DILocalVariable(name: "icr_val", scope: !9825, file: !1410, line: 184, type: !111)
!9836 = !DILocalVariable(name: "shift", scope: !9825, file: !1410, line: 185, type: !166)
!9837 = !DILocation(line: 0, scope: !9825)
!9838 = !DILocation(line: 180, column: 47, scope: !9825)
!9839 = !DILocation(line: 181, column: 28, scope: !9825)
!9840 = !DILocation(line: 187, column: 14, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9825, file: !1410, line: 187, column: 6)
!9842 = !DILocation(line: 187, column: 21, scope: !9841)
!9843 = !DILocation(line: 187, column: 19, scope: !9841)
!9844 = !DILocation(line: 187, column: 31, scope: !9841)
!9845 = !DILocation(line: 188, column: 6, scope: !9841)
!9846 = !DILocation(line: 193, column: 12, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9825, file: !1410, line: 193, column: 6)
!9848 = !DILocation(line: 193, column: 35, scope: !9847)
!9849 = !DILocation(line: 195, column: 42, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9847, file: !1410, line: 195, column: 13)
!9851 = !DILocation(line: 198, column: 19, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9850, file: !1410, line: 198, column: 13)
!9853 = !DILocation(line: 198, column: 43, scope: !9852)
!9854 = !DILocation(line: 0, scope: !9847)
!9855 = !DILocation(line: 205, column: 10, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9825, file: !1410, line: 205, column: 6)
!9857 = !DILocation(line: 205, column: 6, scope: !9825)
!9858 = !DILocation(line: 206, column: 14, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9856, file: !1410, line: 205, column: 17)
!9860 = !DILocation(line: 207, column: 21, scope: !9859)
!9861 = !DILocation(line: 208, column: 2, scope: !9859)
!9862 = !DILocation(line: 208, column: 17, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9856, file: !1410, line: 208, column: 13)
!9864 = !DILocation(line: 208, column: 13, scope: !9856)
!9865 = !DILocation(line: 209, column: 14, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9863, file: !1410, line: 208, column: 24)
!9867 = !DILocation(line: 210, column: 21, scope: !9866)
!9868 = !DILocation(line: 0, scope: !9856)
!9869 = !DILocation(line: 55, column: 2, scope: !9870, inlinedAt: !9876)
!9870 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7706, file: !7706, line: 42, type: !9871, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9873)
!9871 = !DISubroutineType(types: !9872)
!9872 = !{!32}
!9873 = !{!9874, !9875}
!9874 = !DILocalVariable(name: "key", scope: !9870, file: !7706, line: 44, type: !32)
!9875 = !DILocalVariable(name: "tmp", scope: !9870, file: !7706, line: 53, type: !32)
!9876 = distinct !DILocation(line: 215, column: 8, scope: !9825)
!9877 = !{i64 3055228}
!9878 = !DILocation(line: 0, scope: !9870, inlinedAt: !9876)
!9879 = !DILocation(line: 217, column: 14, scope: !9825)
!9880 = !DILocation(line: 217, column: 33, scope: !9825)
!9881 = !DILocation(line: 217, column: 30, scope: !9825)
!9882 = !DILocation(line: 217, column: 25, scope: !9825)
!9883 = !DILocation(line: 217, column: 23, scope: !9825)
!9884 = !DILocation(line: 217, column: 52, scope: !9825)
!9885 = !DILocation(line: 217, column: 41, scope: !9825)
!9886 = !DILocation(line: 217, column: 11, scope: !9825)
!9887 = !DILocation(line: 219, column: 2, scope: !9825)
!9888 = !DILocation(line: 220, column: 2, scope: !9825)
!9889 = !DILocation(line: 221, column: 2, scope: !9825)
!9890 = !DILocalVariable(name: "key", arg: 1, scope: !9891, file: !7706, line: 84, type: !32)
!9891 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7706, file: !7706, line: 84, type: !7536, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9892)
!9892 = !{!9890}
!9893 = !DILocation(line: 0, scope: !9891, inlinedAt: !9894)
!9894 = distinct !DILocation(line: 223, column: 2, scope: !9825)
!9895 = !DILocation(line: 95, column: 2, scope: !9891, inlinedAt: !9894)
!9896 = !{i64 3056045}
!9897 = !DILocation(line: 225, column: 2, scope: !9825)
!9898 = !DILocation(line: 226, column: 1, scope: !9825)
!9899 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1410, file: !1410, line: 228, type: !1374, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9900)
!9900 = !{!9901, !9902, !9903, !9904}
!9901 = !DILocalVariable(name: "port", arg: 1, scope: !9899, file: !1410, line: 228, type: !1334)
!9902 = !DILocalVariable(name: "cb", arg: 2, scope: !9899, file: !1410, line: 229, type: !1376)
!9903 = !DILocalVariable(name: "set", arg: 3, scope: !9899, file: !1410, line: 229, type: !122)
!9904 = !DILocalVariable(name: "data", scope: !9899, file: !1410, line: 231, type: !9905)
!9905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!9906 = !DILocation(line: 0, scope: !9899)
!9907 = !DILocation(line: 231, column: 37, scope: !9899)
!9908 = !DILocation(line: 233, column: 37, scope: !9899)
!9909 = !DILocation(line: 233, column: 9, scope: !9899)
!9910 = !DILocation(line: 233, column: 2, scope: !9899)
!9911 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9912, file: !9912, line: 38, type: !9913, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9916)
!9912 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9913 = !DISubroutineType(types: !9914)
!9914 = !{!103, !9915, !1376, !122}
!9915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!9916 = !{!9917, !9918, !9919}
!9917 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9911, file: !9912, line: 38, type: !9915)
!9918 = !DILocalVariable(name: "callback", arg: 2, scope: !9911, file: !9912, line: 39, type: !1376)
!9919 = !DILocalVariable(name: "set", arg: 3, scope: !9911, file: !9912, line: 40, type: !122)
!9920 = !DILocation(line: 0, scope: !9911)
!9921 = !DILocation(line: 42, column: 2, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9923, file: !9912, line: 42, column: 2)
!9923 = distinct !DILexicalBlock(scope: !9911, file: !9912, line: 42, column: 2)
!9924 = !DILocation(line: 42, column: 2, scope: !9923)
!9925 = !DILocation(line: 42, column: 2, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9922, file: !9912, line: 42, column: 2)
!9927 = !DILocation(line: 43, column: 2, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9929, file: !9912, line: 43, column: 2)
!9929 = distinct !DILexicalBlock(scope: !9911, file: !9912, line: 43, column: 2)
!9930 = !DILocation(line: 43, column: 2, scope: !9929)
!9931 = !DILocation(line: 43, column: 2, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9928, file: !9912, line: 43, column: 2)
!9933 = !DILocation(line: 45, column: 7, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9911, file: !9912, line: 45, column: 6)
!9935 = !DILocation(line: 45, column: 6, scope: !9911)
!9936 = !DILocation(line: 46, column: 56, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9938, file: !9912, line: 46, column: 7)
!9938 = distinct !DILexicalBlock(scope: !9934, file: !9912, line: 45, column: 38)
!9939 = !DILocation(line: 46, column: 8, scope: !9937)
!9940 = !DILocation(line: 46, column: 7, scope: !9938)
!9941 = !DILocation(line: 51, column: 13, scope: !9934)
!9942 = !DILocation(line: 56, column: 43, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9944, file: !9912, line: 55, column: 11)
!9944 = distinct !DILexicalBlock(scope: !9911, file: !9912, line: 55, column: 6)
!9945 = !DILocation(line: 56, column: 3, scope: !9943)
!9946 = !DILocation(line: 57, column: 2, scope: !9943)
!9947 = !DILocation(line: 60, column: 1, scope: !9911)
!9948 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1381, file: !1381, line: 261, type: !9949, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9951)
!9949 = !DISubroutineType(types: !9950)
!9950 = !{!122, !9915}
!9951 = !{!9952}
!9952 = !DILocalVariable(name: "list", arg: 1, scope: !9948, file: !1381, line: 261, type: !9915)
!9953 = !DILocation(line: 0, scope: !9948)
!9954 = !DILocation(line: 261, column: 1, scope: !9948)
!9955 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1381, file: !1381, line: 417, type: !9956, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9958)
!9956 = !DISubroutineType(types: !9957)
!9957 = !{!122, !9915, !1436}
!9958 = !{!9959, !9960, !9961, !9962}
!9959 = !DILocalVariable(name: "list", arg: 1, scope: !9955, file: !1381, line: 417, type: !9915)
!9960 = !DILocalVariable(name: "node", arg: 2, scope: !9955, file: !1381, line: 417, type: !1436)
!9961 = !DILocalVariable(name: "prev", scope: !9955, file: !1381, line: 417, type: !1436)
!9962 = !DILocalVariable(name: "test", scope: !9955, file: !1381, line: 417, type: !1436)
!9963 = !DILocation(line: 0, scope: !9955)
!9964 = !DILocation(line: 417, column: 1, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9955, file: !1381, line: 417, column: 1)
!9966 = !DILocation(line: 417, column: 1, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9965, file: !1381, line: 417, column: 1)
!9968 = !DILocation(line: 417, column: 1, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !1381, line: 417, column: 1)
!9970 = distinct !DILexicalBlock(scope: !9967, file: !1381, line: 417, column: 1)
!9971 = !DILocation(line: 417, column: 1, scope: !9970)
!9972 = distinct !{!9972, !9964, !9964}
!9973 = !DILocation(line: 417, column: 1, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9969, file: !1381, line: 417, column: 1)
!9975 = !DILocation(line: 417, column: 1, scope: !9955)
!9976 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1381, file: !1381, line: 298, type: !9977, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9979)
!9977 = !DISubroutineType(types: !9978)
!9978 = !{null, !9915, !1436}
!9979 = !{!9980, !9981}
!9980 = !DILocalVariable(name: "list", arg: 1, scope: !9976, file: !1381, line: 298, type: !9915)
!9981 = !DILocalVariable(name: "node", arg: 2, scope: !9976, file: !1381, line: 298, type: !1436)
!9982 = !DILocation(line: 0, scope: !9976)
!9983 = !DILocation(line: 298, column: 1, scope: !9976)
!9984 = !DILocation(line: 298, column: 1, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9976, file: !1381, line: 298, column: 1)
!9986 = !DILocation(line: 298, column: 1, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9985, file: !1381, line: 298, column: 1)
!9988 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1381, file: !1381, line: 231, type: !9989, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9991)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{!1436, !9915}
!9991 = !{!9992}
!9992 = !DILocalVariable(name: "list", arg: 1, scope: !9988, file: !1381, line: 231, type: !9915)
!9993 = !DILocation(line: 0, scope: !9988)
!9994 = !DILocation(line: 233, column: 15, scope: !9988)
!9995 = !DILocation(line: 233, column: 2, scope: !9988)
!9996 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1381, file: !1381, line: 209, type: !9997, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !9999)
!9997 = !DISubroutineType(types: !9998)
!9998 = !{null, !1436, !1436}
!9999 = !{!10000, !10001}
!10000 = !DILocalVariable(name: "parent", arg: 1, scope: !9996, file: !1381, line: 209, type: !1436)
!10001 = !DILocalVariable(name: "child", arg: 2, scope: !9996, file: !1381, line: 209, type: !1436)
!10002 = !DILocation(line: 0, scope: !9996)
!10003 = !DILocation(line: 211, column: 10, scope: !9996)
!10004 = !DILocation(line: 211, column: 15, scope: !9996)
!10005 = !DILocation(line: 212, column: 1, scope: !9996)
!10006 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1381, file: !1381, line: 214, type: !9977, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !10007)
!10007 = !{!10008, !10009}
!10008 = !DILocalVariable(name: "list", arg: 1, scope: !10006, file: !1381, line: 214, type: !9915)
!10009 = !DILocalVariable(name: "node", arg: 2, scope: !10006, file: !1381, line: 214, type: !1436)
!10010 = !DILocation(line: 0, scope: !10006)
!10011 = !DILocation(line: 216, column: 8, scope: !10006)
!10012 = !DILocation(line: 216, column: 13, scope: !10006)
!10013 = !DILocation(line: 217, column: 1, scope: !10006)
!10014 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1381, file: !1381, line: 243, type: !9989, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !10015)
!10015 = !{!10016}
!10016 = !DILocalVariable(name: "list", arg: 1, scope: !10014, file: !1381, line: 243, type: !9915)
!10017 = !DILocation(line: 0, scope: !10014)
!10018 = !DILocation(line: 245, column: 15, scope: !10014)
!10019 = !DILocation(line: 245, column: 2, scope: !10014)
!10020 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1381, file: !1381, line: 219, type: !9977, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !10021)
!10021 = !{!10022, !10023}
!10022 = !DILocalVariable(name: "list", arg: 1, scope: !10020, file: !1381, line: 219, type: !9915)
!10023 = !DILocalVariable(name: "node", arg: 2, scope: !10020, file: !1381, line: 219, type: !1436)
!10024 = !DILocation(line: 0, scope: !10020)
!10025 = !DILocation(line: 221, column: 8, scope: !10020)
!10026 = !DILocation(line: 221, column: 13, scope: !10020)
!10027 = !DILocation(line: 222, column: 1, scope: !10020)
!10028 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1381, file: !1381, line: 401, type: !10029, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !10031)
!10029 = !DISubroutineType(types: !10030)
!10030 = !{null, !9915, !1436, !1436}
!10031 = !{!10032, !10033, !10034}
!10032 = !DILocalVariable(name: "list", arg: 1, scope: !10028, file: !1381, line: 401, type: !9915)
!10033 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10028, file: !1381, line: 401, type: !1436)
!10034 = !DILocalVariable(name: "node", arg: 3, scope: !10028, file: !1381, line: 401, type: !1436)
!10035 = !DILocation(line: 0, scope: !10028)
!10036 = !DILocation(line: 401, column: 1, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10028, file: !1381, line: 401, column: 1)
!10038 = !DILocation(line: 0, scope: !10037)
!10039 = !DILocation(line: 401, column: 1, scope: !10028)
!10040 = !DILocation(line: 401, column: 1, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10037, file: !1381, line: 401, column: 1)
!10042 = !DILocation(line: 401, column: 1, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10041, file: !1381, line: 401, column: 1)
!10044 = !DILocation(line: 401, column: 1, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10043, file: !1381, line: 401, column: 1)
!10046 = !DILocation(line: 401, column: 1, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10037, file: !1381, line: 401, column: 1)
!10048 = !DILocation(line: 401, column: 1, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10047, file: !1381, line: 401, column: 1)
!10050 = !DILocation(line: 401, column: 1, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10049, file: !1381, line: 401, column: 1)
!10052 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1381, file: !1381, line: 285, type: !10053, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !10055)
!10053 = !DISubroutineType(types: !10054)
!10054 = !{!1436, !1436}
!10055 = !{!10056}
!10056 = !DILocalVariable(name: "node", arg: 1, scope: !10052, file: !1381, line: 285, type: !1436)
!10057 = !DILocation(line: 0, scope: !10052)
!10058 = !DILocation(line: 285, column: 1, scope: !10052)
!10059 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1381, file: !1381, line: 274, type: !10053, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !10060)
!10060 = !{!10061}
!10061 = !DILocalVariable(name: "node", arg: 1, scope: !10059, file: !1381, line: 274, type: !1436)
!10062 = !DILocation(line: 0, scope: !10059)
!10063 = !DILocation(line: 274, column: 1, scope: !10059)
!10064 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1381, file: !1381, line: 204, type: !10053, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !10065)
!10065 = !{!10066}
!10066 = !DILocalVariable(name: "node", arg: 1, scope: !10064, file: !1381, line: 204, type: !1436)
!10067 = !DILocation(line: 0, scope: !10064)
!10068 = !DILocation(line: 206, column: 15, scope: !10064)
!10069 = !DILocation(line: 206, column: 2, scope: !10064)
!10070 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !1321, file: !1321, line: 131, type: !10071, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !10073)
!10071 = !DISubroutineType(types: !10072)
!10072 = !{!111, !1447}
!10073 = !{!10074}
!10074 = !DILocalVariable(name: "base", arg: 1, scope: !10070, file: !1321, line: 131, type: !1447)
!10075 = !DILocation(line: 0, scope: !10070)
!10076 = !DILocation(line: 133, column: 12, scope: !10070)
!10077 = !DILocation(line: 133, column: 5, scope: !10070)
!10078 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !1321, file: !1321, line: 178, type: !10079, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !10081)
!10079 = !DISubroutineType(types: !10080)
!10080 = !{null, !1447, !111}
!10081 = !{!10082, !10083}
!10082 = !DILocalVariable(name: "base", arg: 1, scope: !10078, file: !1321, line: 178, type: !1447)
!10083 = !DILocalVariable(name: "portVal", arg: 2, scope: !10078, file: !1321, line: 178, type: !111)
!10084 = !DILocation(line: 0, scope: !10078)
!10085 = !DILocation(line: 180, column: 5, scope: !10078)
!10086 = !DILocation(line: 180, column: 23, scope: !10078)
!10087 = !DILocation(line: 181, column: 1, scope: !10078)
!10088 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1410, file: !1410, line: 236, type: !10089, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !10091)
!10089 = !DISubroutineType(types: !10090)
!10090 = !{null, !1334}
!10091 = !{!10092, !10093, !10094, !10095}
!10092 = !DILocalVariable(name: "port", arg: 1, scope: !10088, file: !1410, line: 236, type: !1334)
!10093 = !DILocalVariable(name: "config", scope: !10088, file: !1410, line: 238, type: !9684)
!10094 = !DILocalVariable(name: "data", scope: !10088, file: !1410, line: 239, type: !9905)
!10095 = !DILocalVariable(name: "int_status", scope: !10088, file: !1410, line: 240, type: !111)
!10096 = !DILocation(line: 0, scope: !10088)
!10097 = !DILocation(line: 238, column: 47, scope: !10088)
!10098 = !DILocation(line: 239, column: 37, scope: !10088)
!10099 = !DILocation(line: 242, column: 23, scope: !10088)
!10100 = !DILocation(line: 242, column: 29, scope: !10088)
!10101 = !DILocation(line: 244, column: 20, scope: !10088)
!10102 = !DILocation(line: 246, column: 29, scope: !10088)
!10103 = !DILocation(line: 246, column: 2, scope: !10088)
!10104 = !DILocation(line: 247, column: 1, scope: !10088)
!10105 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9912, file: !9912, line: 69, type: !10106, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !10108)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{null, !9915, !1334, !111}
!10108 = !{!10109, !10110, !10111, !10112, !10113}
!10109 = !DILocalVariable(name: "list", arg: 1, scope: !10105, file: !9912, line: 69, type: !9915)
!10110 = !DILocalVariable(name: "port", arg: 2, scope: !10105, file: !9912, line: 70, type: !1334)
!10111 = !DILocalVariable(name: "pins", arg: 3, scope: !10105, file: !9912, line: 71, type: !111)
!10112 = !DILocalVariable(name: "cb", scope: !10105, file: !9912, line: 73, type: !1376)
!10113 = !DILocalVariable(name: "tmp", scope: !10105, file: !9912, line: 73, type: !1376)
!10114 = !DILocation(line: 0, scope: !10105)
!10115 = !DILocation(line: 75, column: 2, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10105, file: !9912, line: 75, column: 2)
!10117 = !DILocation(line: 0, scope: !10116)
!10118 = !DILocation(line: 76, column: 11, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !9912, line: 76, column: 7)
!10120 = distinct !DILexicalBlock(scope: !10121, file: !9912, line: 75, column: 57)
!10121 = distinct !DILexicalBlock(scope: !10116, file: !9912, line: 75, column: 2)
!10122 = !DILocation(line: 76, column: 20, scope: !10119)
!10123 = !DILocation(line: 76, column: 7, scope: !10120)
!10124 = !DILocation(line: 77, column: 4, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10126, file: !9912, line: 77, column: 4)
!10126 = distinct !DILexicalBlock(scope: !10127, file: !9912, line: 77, column: 4)
!10127 = distinct !DILexicalBlock(scope: !10119, file: !9912, line: 76, column: 28)
!10128 = !DILocation(line: 77, column: 4, scope: !10126)
!10129 = !DILocation(line: 77, column: 4, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10125, file: !9912, line: 77, column: 4)
!10131 = !DILocation(line: 78, column: 4, scope: !10127)
!10132 = !DILocation(line: 79, column: 3, scope: !10127)
!10133 = !DILocation(line: 75, column: 2, scope: !10121)
!10134 = !DILocation(line: 81, column: 1, scope: !10105)
!10135 = !DILocation(line: 0, scope: !1475)
!10136 = !DILocation(line: 318, column: 1, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !1475, file: !1410, line: 318, column: 1)
!10138 = !DILocation(line: 318, column: 1, scope: !1475)
!10139 = !DILocation(line: 318, column: 1, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !1475, file: !1410, line: 318, column: 1)
!10141 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1697, file: !1697, line: 114, type: !1595, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10142)
!10142 = !{!10143, !10144, !10145, !10146}
!10143 = !DILocalVariable(name: "dev", arg: 1, scope: !10141, file: !1697, line: 114, type: !1597)
!10144 = !DILocalVariable(name: "c", arg: 2, scope: !10141, file: !1697, line: 114, type: !1234)
!10145 = !DILocalVariable(name: "uart", scope: !10141, file: !1697, line: 116, type: !1668)
!10146 = !DILocalVariable(name: "ret", scope: !10141, file: !1697, line: 117, type: !103)
!10147 = !DILocation(line: 0, scope: !10141)
!10148 = !DILocation(line: 116, column: 20, scope: !10141)
!10149 = !DILocation(line: 119, column: 6, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10141, file: !1697, line: 119, column: 6)
!10151 = !DILocation(line: 119, column: 6, scope: !10141)
!10152 = !DILocation(line: 120, column: 8, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10150, file: !1697, line: 119, column: 55)
!10154 = !DILocation(line: 120, column: 6, scope: !10153)
!10155 = !DILocation(line: 122, column: 7, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10153, file: !1697, line: 122, column: 7)
!10157 = !DILocation(line: 122, column: 7, scope: !10153)
!10158 = !DILocation(line: 123, column: 4, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10156, file: !1697, line: 122, column: 54)
!10160 = !DILocation(line: 124, column: 3, scope: !10159)
!10161 = !DILocation(line: 128, column: 2, scope: !10141)
!10162 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1697, file: !1697, line: 105, type: !1614, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10163)
!10163 = !{!10164, !10165, !10166}
!10164 = !DILocalVariable(name: "dev", arg: 1, scope: !10162, file: !1697, line: 105, type: !1597)
!10165 = !DILocalVariable(name: "c", arg: 2, scope: !10162, file: !1697, line: 105, type: !167)
!10166 = !DILocalVariable(name: "uart", scope: !10162, file: !1697, line: 107, type: !1668)
!10167 = !DILocation(line: 0, scope: !10162)
!10168 = !DILocation(line: 107, column: 20, scope: !10162)
!10169 = !DILocation(line: 109, column: 2, scope: !10162)
!10170 = !DILocation(line: 109, column: 10, scope: !10162)
!10171 = distinct !{!10171, !10169, !10172}
!10172 = !DILocation(line: 110, column: 2, scope: !10162)
!10173 = !DILocation(line: 111, column: 2, scope: !10162)
!10174 = !DILocation(line: 112, column: 1, scope: !10162)
!10175 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1697, file: !1697, line: 133, type: !1640, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10176)
!10176 = !{!10177, !10178, !10179, !10180, !10181}
!10177 = !DILocalVariable(name: "dev", arg: 1, scope: !10175, file: !1697, line: 133, type: !1597)
!10178 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10175, file: !1697, line: 134, type: !1265)
!10179 = !DILocalVariable(name: "size", arg: 3, scope: !10175, file: !1697, line: 135, type: !103)
!10180 = !DILocalVariable(name: "uart", scope: !10175, file: !1697, line: 137, type: !1668)
!10181 = !DILocalVariable(name: "num_tx", scope: !10175, file: !1697, line: 138, type: !32)
!10182 = !DILocation(line: 0, scope: !10175)
!10183 = !DILocation(line: 137, column: 20, scope: !10175)
!10184 = !DILocation(line: 140, column: 26, scope: !10175)
!10185 = !DILocation(line: 140, column: 31, scope: !10175)
!10186 = !DILocation(line: 141, column: 6, scope: !10175)
!10187 = !DILocation(line: 140, column: 2, scope: !10175)
!10188 = !DILocation(line: 143, column: 22, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10175, file: !1697, line: 141, column: 51)
!10190 = !DILocation(line: 143, column: 3, scope: !10189)
!10191 = !DILocation(line: 144, column: 9, scope: !10189)
!10192 = distinct !{!10192, !10187, !10193}
!10193 = !DILocation(line: 145, column: 2, scope: !10175)
!10194 = !DILocation(line: 147, column: 2, scope: !10175)
!10195 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1697, file: !1697, line: 150, type: !1644, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10196)
!10196 = !{!10197, !10198, !10199, !10200, !10201}
!10197 = !DILocalVariable(name: "dev", arg: 1, scope: !10195, file: !1697, line: 150, type: !1597)
!10198 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10195, file: !1697, line: 150, type: !538)
!10199 = !DILocalVariable(name: "size", arg: 3, scope: !10195, file: !1697, line: 151, type: !1271)
!10200 = !DILocalVariable(name: "uart", scope: !10195, file: !1697, line: 153, type: !1668)
!10201 = !DILocalVariable(name: "num_rx", scope: !10195, file: !1697, line: 154, type: !32)
!10202 = !DILocation(line: 0, scope: !10195)
!10203 = !DILocation(line: 153, column: 20, scope: !10195)
!10204 = !DILocation(line: 156, column: 26, scope: !10195)
!10205 = !DILocation(line: 156, column: 31, scope: !10195)
!10206 = !DILocation(line: 157, column: 6, scope: !10195)
!10207 = !DILocation(line: 156, column: 2, scope: !10195)
!10208 = !DILocation(line: 159, column: 23, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10195, file: !1697, line: 157, column: 51)
!10210 = !DILocation(line: 159, column: 17, scope: !10209)
!10211 = !DILocation(line: 159, column: 3, scope: !10209)
!10212 = !DILocation(line: 159, column: 21, scope: !10209)
!10213 = distinct !{!10213, !10207, !10214}
!10214 = !DILocation(line: 160, column: 2, scope: !10195)
!10215 = !DILocation(line: 162, column: 6, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10195, file: !1697, line: 162, column: 6)
!10217 = !DILocation(line: 162, column: 6, scope: !10195)
!10218 = !DILocation(line: 163, column: 3, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10216, file: !1697, line: 162, column: 53)
!10220 = !DILocation(line: 164, column: 2, scope: !10219)
!10221 = !DILocation(line: 166, column: 2, scope: !10195)
!10222 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1697, file: !1697, line: 169, type: !1648, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10223)
!10223 = !{!10224, !10225}
!10224 = !DILocalVariable(name: "dev", arg: 1, scope: !10222, file: !1697, line: 169, type: !1597)
!10225 = !DILocalVariable(name: "uart", scope: !10222, file: !1697, line: 171, type: !1668)
!10226 = !DILocation(line: 0, scope: !10222)
!10227 = !DILocation(line: 171, column: 20, scope: !10222)
!10228 = !DILocation(line: 173, column: 2, scope: !10222)
!10229 = !DILocation(line: 174, column: 1, scope: !10222)
!10230 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1697, file: !1697, line: 176, type: !1648, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10231)
!10231 = !{!10232, !10233}
!10232 = !DILocalVariable(name: "dev", arg: 1, scope: !10230, file: !1697, line: 176, type: !1597)
!10233 = !DILocalVariable(name: "uart", scope: !10230, file: !1697, line: 178, type: !1668)
!10234 = !DILocation(line: 0, scope: !10230)
!10235 = !DILocation(line: 178, column: 20, scope: !10230)
!10236 = !DILocation(line: 180, column: 2, scope: !10230)
!10237 = !DILocation(line: 181, column: 1, scope: !10230)
!10238 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1697, file: !1697, line: 183, type: !1618, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10239)
!10239 = !{!10240, !10241}
!10240 = !DILocalVariable(name: "dev", arg: 1, scope: !10238, file: !1697, line: 183, type: !1597)
!10241 = !DILocalVariable(name: "uart", scope: !10238, file: !1697, line: 185, type: !1668)
!10242 = !DILocation(line: 0, scope: !10238)
!10243 = !DILocation(line: 185, column: 20, scope: !10238)
!10244 = !DILocation(line: 187, column: 9, scope: !10238)
!10245 = !DILocation(line: 187, column: 2, scope: !10238)
!10246 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1697, file: !1697, line: 190, type: !1648, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10247)
!10247 = !{!10248, !10249}
!10248 = !DILocalVariable(name: "dev", arg: 1, scope: !10246, file: !1697, line: 190, type: !1597)
!10249 = !DILocalVariable(name: "uart", scope: !10246, file: !1697, line: 192, type: !1668)
!10250 = !DILocation(line: 0, scope: !10246)
!10251 = !DILocation(line: 192, column: 20, scope: !10246)
!10252 = !DILocation(line: 194, column: 2, scope: !10246)
!10253 = !DILocation(line: 195, column: 1, scope: !10246)
!10254 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1697, file: !1697, line: 197, type: !1648, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10255)
!10255 = !{!10256, !10257}
!10256 = !DILocalVariable(name: "dev", arg: 1, scope: !10254, file: !1697, line: 197, type: !1597)
!10257 = !DILocalVariable(name: "uart", scope: !10254, file: !1697, line: 199, type: !1668)
!10258 = !DILocation(line: 0, scope: !10254)
!10259 = !DILocation(line: 199, column: 20, scope: !10254)
!10260 = !DILocation(line: 201, column: 2, scope: !10254)
!10261 = !DILocation(line: 202, column: 1, scope: !10254)
!10262 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1697, file: !1697, line: 204, type: !1618, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10263)
!10263 = !{!10264, !10265}
!10264 = !DILocalVariable(name: "dev", arg: 1, scope: !10262, file: !1697, line: 204, type: !1597)
!10265 = !DILocalVariable(name: "uart", scope: !10262, file: !1697, line: 206, type: !1668)
!10266 = !DILocation(line: 0, scope: !10262)
!10267 = !DILocation(line: 206, column: 20, scope: !10262)
!10268 = !DILocation(line: 208, column: 9, scope: !10262)
!10269 = !DILocation(line: 208, column: 2, scope: !10262)
!10270 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1697, file: !1697, line: 211, type: !1648, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10271)
!10271 = !{!10272, !10273}
!10272 = !DILocalVariable(name: "dev", arg: 1, scope: !10270, file: !1697, line: 211, type: !1597)
!10273 = !DILocalVariable(name: "uart", scope: !10270, file: !1697, line: 213, type: !1668)
!10274 = !DILocation(line: 0, scope: !10270)
!10275 = !DILocation(line: 213, column: 20, scope: !10270)
!10276 = !DILocation(line: 215, column: 2, scope: !10270)
!10277 = !DILocation(line: 216, column: 2, scope: !10270)
!10278 = !DILocation(line: 217, column: 1, scope: !10270)
!10279 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1697, file: !1697, line: 219, type: !1648, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10280)
!10280 = !{!10281, !10282}
!10281 = !DILocalVariable(name: "dev", arg: 1, scope: !10279, file: !1697, line: 219, type: !1597)
!10282 = !DILocalVariable(name: "uart", scope: !10279, file: !1697, line: 221, type: !1668)
!10283 = !DILocation(line: 0, scope: !10279)
!10284 = !DILocation(line: 221, column: 20, scope: !10279)
!10285 = !DILocation(line: 223, column: 2, scope: !10279)
!10286 = !DILocation(line: 224, column: 2, scope: !10279)
!10287 = !DILocation(line: 225, column: 1, scope: !10279)
!10288 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1697, file: !1697, line: 227, type: !1618, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10289)
!10289 = !{!10290, !10291}
!10290 = !DILocalVariable(name: "dev", arg: 1, scope: !10288, file: !1697, line: 227, type: !1597)
!10291 = !DILocalVariable(name: "uart", scope: !10288, file: !1697, line: 229, type: !1668)
!10292 = !DILocation(line: 0, scope: !10288)
!10293 = !DILocation(line: 229, column: 20, scope: !10288)
!10294 = !DILocation(line: 231, column: 9, scope: !10288)
!10295 = !DILocation(line: 231, column: 53, scope: !10288)
!10296 = !DILocation(line: 232, column: 3, scope: !10288)
!10297 = !DILocation(line: 231, column: 2, scope: !10288)
!10298 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1697, file: !1697, line: 235, type: !1618, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10299)
!10299 = !{!10300}
!10300 = !DILocalVariable(name: "dev", arg: 1, scope: !10298, file: !1697, line: 235, type: !1597)
!10301 = !DILocation(line: 0, scope: !10298)
!10302 = !DILocation(line: 237, column: 2, scope: !10298)
!10303 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1697, file: !1697, line: 240, type: !1662, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10304)
!10304 = !{!10305, !10306, !10307, !10308}
!10305 = !DILocalVariable(name: "dev", arg: 1, scope: !10303, file: !1697, line: 240, type: !1597)
!10306 = !DILocalVariable(name: "cb", arg: 2, scope: !10303, file: !1697, line: 241, type: !1664)
!10307 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10303, file: !1697, line: 242, type: !102)
!10308 = !DILocalVariable(name: "data", scope: !10303, file: !1697, line: 244, type: !10309)
!10309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!10310 = !DILocation(line: 0, scope: !10303)
!10311 = !DILocation(line: 244, column: 36, scope: !10303)
!10312 = !DILocation(line: 246, column: 8, scope: !10303)
!10313 = !DILocation(line: 246, column: 17, scope: !10303)
!10314 = !DILocation(line: 247, column: 8, scope: !10303)
!10315 = !DILocation(line: 247, column: 16, scope: !10303)
!10316 = !DILocation(line: 248, column: 1, scope: !10303)
!10317 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1504, file: !1504, line: 392, type: !10318, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10320)
!10318 = !DISubroutineType(types: !10319)
!10319 = !{!122, !1668, !111}
!10320 = !{!10321, !10322, !10323}
!10321 = !DILocalVariable(name: "base", arg: 1, scope: !10317, file: !1504, line: 392, type: !1668)
!10322 = !DILocalVariable(name: "flag", arg: 2, scope: !10317, file: !1504, line: 392, type: !111)
!10323 = !DILocalVariable(name: "uart_reg", scope: !10317, file: !1504, line: 393, type: !1162)
!10324 = !DILocation(line: 0, scope: !10317)
!10325 = !DILocation(line: 395, column: 29, scope: !10317)
!10326 = !DILocation(line: 395, column: 52, scope: !10317)
!10327 = !DILocation(line: 395, column: 44, scope: !10317)
!10328 = !DILocation(line: 395, column: 16, scope: !10317)
!10329 = !DILocation(line: 396, column: 20, scope: !10317)
!10330 = !DILocation(line: 396, column: 39, scope: !10317)
!10331 = !DILocation(line: 396, column: 12, scope: !10317)
!10332 = !DILocation(line: 396, column: 5, scope: !10317)
!10333 = distinct !DISubprogram(name: "UART_Getchar", scope: !1504, file: !1504, line: 358, type: !10334, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10336)
!10334 = !DISubroutineType(types: !10335)
!10335 = !{!166, !1668}
!10336 = !{!10337}
!10337 = !DILocalVariable(name: "base", arg: 1, scope: !10333, file: !1504, line: 358, type: !1668)
!10338 = !DILocation(line: 0, scope: !10333)
!10339 = !DILocation(line: 360, column: 22, scope: !10333)
!10340 = !DILocation(line: 360, column: 12, scope: !10333)
!10341 = !DILocation(line: 360, column: 5, scope: !10333)
!10342 = distinct !DISubprogram(name: "UART_Putchar", scope: !1504, file: !1504, line: 346, type: !10343, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10345)
!10343 = !DISubroutineType(types: !10344)
!10344 = !{null, !1668, !166}
!10345 = !{!10346, !10347}
!10346 = !DILocalVariable(name: "base", arg: 1, scope: !10342, file: !1504, line: 346, type: !1668)
!10347 = !DILocalVariable(name: "data", arg: 2, scope: !10342, file: !1504, line: 346, type: !166)
!10348 = !DILocation(line: 0, scope: !10342)
!10349 = !DILocation(line: 348, column: 28, scope: !10342)
!10350 = !DILocation(line: 348, column: 5, scope: !10342)
!10351 = !DILocation(line: 348, column: 25, scope: !10342)
!10352 = !DILocation(line: 349, column: 1, scope: !10342)
!10353 = !DILocation(line: 0, scope: !1768)
!10354 = !DILocation(line: 339, column: 1, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !1768, file: !1697, line: 339, column: 1)
!10356 = !DILocation(line: 339, column: 1, scope: !1768)
!10357 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1697, file: !1697, line: 260, type: !1648, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10358)
!10358 = !{!10359, !10360}
!10359 = !DILocalVariable(name: "dev", arg: 1, scope: !10357, file: !1697, line: 260, type: !1597)
!10360 = !DILocalVariable(name: "data", scope: !10357, file: !1697, line: 262, type: !10309)
!10361 = !DILocation(line: 0, scope: !10357)
!10362 = !DILocation(line: 262, column: 36, scope: !10357)
!10363 = !DILocation(line: 264, column: 12, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10357, file: !1697, line: 264, column: 6)
!10365 = !DILocation(line: 264, column: 6, scope: !10364)
!10366 = !DILocation(line: 264, column: 6, scope: !10357)
!10367 = !DILocation(line: 265, column: 29, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10364, file: !1697, line: 264, column: 22)
!10369 = !DILocation(line: 265, column: 3, scope: !10368)
!10370 = !DILocation(line: 266, column: 2, scope: !10368)
!10371 = !DILocation(line: 267, column: 1, scope: !10357)
!10372 = distinct !DISubprogram(name: "uart_imx_init", scope: !1697, file: !1697, line: 56, type: !1618, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10373)
!10373 = !{!10374, !10375, !10376, !10377, !10378, !10379}
!10374 = !DILocalVariable(name: "dev", arg: 1, scope: !10372, file: !1697, line: 56, type: !1597)
!10375 = !DILocalVariable(name: "uart", scope: !10372, file: !1697, line: 58, type: !1668)
!10376 = !DILocalVariable(name: "config", scope: !10372, file: !1697, line: 59, type: !1694)
!10377 = !DILocalVariable(name: "old_level", scope: !10372, file: !1697, line: 60, type: !32)
!10378 = !DILocalVariable(name: "err", scope: !10372, file: !1697, line: 61, type: !103)
!10379 = !DILocalVariable(name: "initConfig", scope: !10372, file: !1697, line: 67, type: !10380)
!10380 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1504, line: 57, baseType: !10381)
!10381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1504, line: 49, size: 192, elements: !10382)
!10382 = !{!10383, !10384, !10385, !10386, !10387, !10388}
!10383 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !10381, file: !1504, line: 51, baseType: !111, size: 32)
!10384 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !10381, file: !1504, line: 52, baseType: !111, size: 32, offset: 32)
!10385 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !10381, file: !1504, line: 53, baseType: !111, size: 32, offset: 64)
!10386 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !10381, file: !1504, line: 54, baseType: !111, size: 32, offset: 96)
!10387 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10381, file: !1504, line: 55, baseType: !111, size: 32, offset: 128)
!10388 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10381, file: !1504, line: 56, baseType: !111, size: 32, offset: 160)
!10389 = !DILocation(line: 0, scope: !10372)
!10390 = !DILocation(line: 58, column: 20, scope: !10372)
!10391 = !DILocation(line: 55, column: 2, scope: !10392, inlinedAt: !10396)
!10392 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7706, file: !7706, line: 42, type: !9871, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10393)
!10393 = !{!10394, !10395}
!10394 = !DILocalVariable(name: "key", scope: !10392, file: !7706, line: 44, type: !32)
!10395 = !DILocalVariable(name: "tmp", scope: !10392, file: !7706, line: 53, type: !32)
!10396 = distinct !DILocation(line: 64, column: 14, scope: !10372)
!10397 = !{i64 2849799}
!10398 = !DILocation(line: 0, scope: !10392, inlinedAt: !10396)
!10399 = !DILocation(line: 67, column: 2, scope: !10372)
!10400 = !DILocation(line: 67, column: 21, scope: !10372)
!10401 = !DILocation(line: 67, column: 34, scope: !10372)
!10402 = !DILocation(line: 68, column: 23, scope: !10372)
!10403 = !DILocation(line: 75, column: 36, scope: !10372)
!10404 = !DILocation(line: 75, column: 8, scope: !10372)
!10405 = !DILocation(line: 76, column: 6, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10372, file: !1697, line: 76, column: 6)
!10407 = !DILocation(line: 76, column: 6, scope: !10372)
!10408 = !DILocation(line: 81, column: 26, scope: !10372)
!10409 = !DILocation(line: 81, column: 24, scope: !10372)
!10410 = !DILocation(line: 83, column: 2, scope: !10372)
!10411 = !DILocation(line: 86, column: 2, scope: !10372)
!10412 = !DILocation(line: 87, column: 2, scope: !10372)
!10413 = !DILocalVariable(name: "key", arg: 1, scope: !10414, file: !7706, line: 84, type: !32)
!10414 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7706, file: !7706, line: 84, type: !7536, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10415)
!10415 = !{!10413}
!10416 = !DILocation(line: 0, scope: !10414, inlinedAt: !10417)
!10417 = distinct !DILocation(line: 90, column: 2, scope: !10372)
!10418 = !DILocation(line: 95, column: 2, scope: !10414, inlinedAt: !10417)
!10419 = !{i64 2850616}
!10420 = !DILocation(line: 93, column: 10, scope: !10372)
!10421 = !DILocation(line: 93, column: 2, scope: !10372)
!10422 = !DILocation(line: 97, column: 34, scope: !10372)
!10423 = !DILocation(line: 97, column: 26, scope: !10372)
!10424 = !DILocation(line: 97, column: 2, scope: !10372)
!10425 = !DILocation(line: 100, column: 2, scope: !10372)
!10426 = !DILocation(line: 102, column: 2, scope: !10372)
!10427 = !DILocation(line: 103, column: 1, scope: !10372)
!10428 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1706, file: !1706, line: 342, type: !10429, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10431)
!10429 = !DISubroutineType(types: !10430)
!10430 = !{!103, !1703, !166}
!10431 = !{!10432, !10433, !10434, !10435}
!10432 = !DILocalVariable(name: "config", arg: 1, scope: !10428, file: !1706, line: 342, type: !1703)
!10433 = !DILocalVariable(name: "id", arg: 2, scope: !10428, file: !1706, line: 343, type: !166)
!10434 = !DILocalVariable(name: "ret", scope: !10428, file: !1706, line: 345, type: !103)
!10435 = !DILocalVariable(name: "state", scope: !10428, file: !1706, line: 346, type: !1709)
!10436 = !DILocation(line: 0, scope: !10428)
!10437 = !DILocation(line: 346, column: 2, scope: !10428)
!10438 = !DILocation(line: 348, column: 8, scope: !10428)
!10439 = !DILocation(line: 349, column: 10, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10428, file: !1706, line: 349, column: 6)
!10441 = !DILocation(line: 349, column: 6, scope: !10428)
!10442 = !DILocation(line: 353, column: 44, scope: !10428)
!10443 = !DILocation(line: 353, column: 9, scope: !10428)
!10444 = !DILocation(line: 353, column: 2, scope: !10428)
!10445 = !DILocation(line: 354, column: 1, scope: !10428)
!10446 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1504, file: !1504, line: 444, type: !10343, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10447)
!10447 = !{!10448, !10449}
!10448 = !DILocalVariable(name: "base", arg: 1, scope: !10446, file: !1504, line: 444, type: !1668)
!10449 = !DILocalVariable(name: "watermark", arg: 2, scope: !10446, file: !1504, line: 444, type: !166)
!10450 = !DILocation(line: 0, scope: !10446)
!10451 = !DILocation(line: 447, column: 28, scope: !10446)
!10452 = !DILocation(line: 447, column: 48, scope: !10446)
!10453 = !DILocation(line: 447, column: 72, scope: !10446)
!10454 = !DILocation(line: 447, column: 25, scope: !10446)
!10455 = !DILocation(line: 448, column: 1, scope: !10446)
!10456 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1504, file: !1504, line: 458, type: !10343, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10457)
!10457 = !{!10458, !10459}
!10458 = !DILocalVariable(name: "base", arg: 1, scope: !10456, file: !1504, line: 458, type: !1668)
!10459 = !DILocalVariable(name: "watermark", arg: 2, scope: !10456, file: !1504, line: 458, type: !166)
!10460 = !DILocation(line: 0, scope: !10456)
!10461 = !DILocation(line: 461, column: 28, scope: !10456)
!10462 = !DILocation(line: 461, column: 48, scope: !10456)
!10463 = !DILocation(line: 461, column: 72, scope: !10456)
!10464 = !DILocation(line: 461, column: 25, scope: !10456)
!10465 = !DILocation(line: 462, column: 1, scope: !10456)
!10466 = distinct !DISubprogram(name: "UART_Enable", scope: !1504, file: !1504, line: 242, type: !10467, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10469)
!10467 = !DISubroutineType(types: !10468)
!10468 = !{null, !1668}
!10469 = !{!10470}
!10470 = !DILocalVariable(name: "base", arg: 1, scope: !10466, file: !1504, line: 242, type: !1668)
!10471 = !DILocation(line: 0, scope: !10466)
!10472 = !DILocation(line: 244, column: 5, scope: !10466)
!10473 = !DILocation(line: 244, column: 25, scope: !10466)
!10474 = !DILocation(line: 245, column: 1, scope: !10466)
!10475 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1706, file: !1706, line: 316, type: !10476, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1500, retainedNodes: !10478)
!10476 = !DISubroutineType(types: !10477)
!10477 = !{!103, !1703, !1709}
!10478 = !{!10479, !10480, !10481}
!10479 = !DILocalVariable(name: "config", arg: 1, scope: !10475, file: !1706, line: 317, type: !1703)
!10480 = !DILocalVariable(name: "state", arg: 2, scope: !10475, file: !1706, line: 318, type: !1709)
!10481 = !DILocalVariable(name: "reg", scope: !10475, file: !1706, line: 320, type: !22)
!10482 = !DILocation(line: 0, scope: !10475)
!10483 = !DILocation(line: 329, column: 39, scope: !10475)
!10484 = !DILocation(line: 329, column: 52, scope: !10475)
!10485 = !DILocation(line: 329, column: 9, scope: !10475)
!10486 = !DILocation(line: 329, column: 2, scope: !10475)
!10487 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2004, file: !2004, line: 270, type: !2010, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !10488)
!10488 = !{!10489}
!10489 = !DILocalVariable(name: "dev", arg: 1, scope: !10487, file: !2004, line: 270, type: !2012)
!10490 = !DILocation(line: 0, scope: !10487)
!10491 = !DILocation(line: 274, column: 2, scope: !10487)
!10492 = !DILocation(line: 275, column: 12, scope: !10487)
!10493 = !DILocation(line: 276, column: 15, scope: !10487)
!10494 = !DILocation(line: 277, column: 16, scope: !10487)
!10495 = !DILocation(line: 278, column: 15, scope: !10487)
!10496 = !DILocation(line: 279, column: 16, scope: !10487)
!10497 = !DILocation(line: 282, column: 2, scope: !10487)
!10498 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1925, file: !1925, line: 1814, type: !7625, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !10499)
!10499 = !{!10500, !10501}
!10500 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10498, file: !1925, line: 1814, type: !2871)
!10501 = !DILocalVariable(name: "priority", arg: 2, scope: !10498, file: !1925, line: 1814, type: !111)
!10502 = !DILocation(line: 0, scope: !10498)
!10503 = !DILocation(line: 1822, column: 46, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !1925, line: 1821, column: 3)
!10505 = distinct !DILexicalBlock(scope: !10498, file: !1925, line: 1816, column: 7)
!10506 = !DILocation(line: 1824, column: 1, scope: !10498)
!10507 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2004, file: !2004, line: 118, type: !7520, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !10508)
!10508 = !{!10509, !10510}
!10509 = !DILocalVariable(name: "arg", arg: 1, scope: !10507, file: !2004, line: 118, type: !102)
!10510 = !DILocalVariable(name: "dticks", scope: !10507, file: !2004, line: 121, type: !111)
!10511 = !DILocation(line: 0, scope: !10507)
!10512 = !DILocation(line: 124, column: 2, scope: !10507)
!10513 = !DILocation(line: 129, column: 17, scope: !10507)
!10514 = !DILocation(line: 129, column: 14, scope: !10507)
!10515 = !DILocation(line: 130, column: 15, scope: !10507)
!10516 = !DILocation(line: 145, column: 27, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !2004, line: 132, column: 16)
!10518 = distinct !DILexicalBlock(scope: !10507, file: !2004, line: 132, column: 6)
!10519 = !DILocation(line: 145, column: 25, scope: !10517)
!10520 = !DILocation(line: 145, column: 45, scope: !10517)
!10521 = !DILocation(line: 146, column: 30, scope: !10517)
!10522 = !DILocation(line: 146, column: 20, scope: !10517)
!10523 = !DILocation(line: 147, column: 3, scope: !10517)
!10524 = !DILocation(line: 151, column: 2, scope: !10507)
!10525 = !DILocation(line: 152, column: 1, scope: !10507)
!10526 = distinct !DISubprogram(name: "elapsed", scope: !2004, file: !2004, line: 85, type: !7672, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !10527)
!10527 = !{!10528, !10529, !10530}
!10528 = !DILocalVariable(name: "val1", scope: !10526, file: !2004, line: 87, type: !111)
!10529 = !DILocalVariable(name: "ctrl", scope: !10526, file: !2004, line: 88, type: !111)
!10530 = !DILocalVariable(name: "val2", scope: !10526, file: !2004, line: 89, type: !111)
!10531 = !DILocation(line: 87, column: 27, scope: !10526)
!10532 = !DILocation(line: 0, scope: !10526)
!10533 = !DILocation(line: 88, column: 27, scope: !10526)
!10534 = !DILocation(line: 89, column: 27, scope: !10526)
!10535 = !DILocation(line: 105, column: 12, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10526, file: !2004, line: 105, column: 6)
!10537 = !DILocation(line: 106, column: 6, scope: !10536)
!10538 = !DILocation(line: 107, column: 16, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10536, file: !2004, line: 106, column: 24)
!10540 = !DILocation(line: 111, column: 18, scope: !10539)
!10541 = !DILocation(line: 112, column: 2, scope: !10539)
!10542 = !DILocation(line: 114, column: 20, scope: !10526)
!10543 = !DILocation(line: 114, column: 30, scope: !10526)
!10544 = !DILocation(line: 114, column: 28, scope: !10526)
!10545 = !DILocation(line: 114, column: 2, scope: !10526)
!10546 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2004, file: !2004, line: 154, type: !10547, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !10549)
!10547 = !DISubroutineType(types: !10548)
!10548 = !{null, !314, !122}
!10549 = !{!10550, !10551, !10552, !10553, !10554, !10555, !10556, !10561, !10562}
!10550 = !DILocalVariable(name: "ticks", arg: 1, scope: !10546, file: !2004, line: 154, type: !314)
!10551 = !DILocalVariable(name: "idle", arg: 2, scope: !10546, file: !2004, line: 154, type: !122)
!10552 = !DILocalVariable(name: "delay", scope: !10546, file: !2004, line: 169, type: !111)
!10553 = !DILocalVariable(name: "val1", scope: !10546, file: !2004, line: 170, type: !111)
!10554 = !DILocalVariable(name: "val2", scope: !10546, file: !2004, line: 170, type: !111)
!10555 = !DILocalVariable(name: "last_load_", scope: !10546, file: !2004, line: 171, type: !111)
!10556 = !DILocalVariable(name: "key", scope: !10546, file: !2004, line: 176, type: !10557)
!10557 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !10558)
!10558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !10559)
!10559 = !{!10560}
!10560 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10558, file: !152, line: 33, baseType: !103, size: 32)
!10561 = !DILocalVariable(name: "pending", scope: !10546, file: !2004, line: 178, type: !111)
!10562 = !DILocalVariable(name: "unannounced", scope: !10546, file: !2004, line: 185, type: !111)
!10563 = !DILocation(line: 0, scope: !10546)
!10564 = !DILocation(line: 162, column: 49, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10546, file: !2004, line: 162, column: 6)
!10566 = !DILocation(line: 163, column: 17, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10565, file: !2004, line: 162, column: 78)
!10568 = !DILocation(line: 164, column: 13, scope: !10567)
!10569 = !DILocation(line: 165, column: 3, scope: !10567)
!10570 = !DILocation(line: 171, column: 24, scope: !10546)
!10571 = !DILocation(line: 173, column: 10, scope: !10546)
!10572 = !DILocation(line: 174, column: 10, scope: !10546)
!10573 = !DILocalVariable(name: "l", arg: 1, scope: !10574, file: !152, line: 136, type: !10577)
!10574 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !10575, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !10578)
!10575 = !DISubroutineType(types: !10576)
!10576 = !{!10557, !10577}
!10577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 32)
!10578 = !{!10573, !10579}
!10579 = !DILocalVariable(name: "k", scope: !10574, file: !152, line: 139, type: !10557)
!10580 = !DILocation(line: 0, scope: !10574, inlinedAt: !10581)
!10581 = distinct !DILocation(line: 176, column: 25, scope: !10546)
!10582 = !DILocation(line: 55, column: 2, scope: !10583, inlinedAt: !10587)
!10583 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7706, file: !7706, line: 42, type: !9871, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !10584)
!10584 = !{!10585, !10586}
!10585 = !DILocalVariable(name: "key", scope: !10583, file: !7706, line: 44, type: !32)
!10586 = !DILocalVariable(name: "tmp", scope: !10583, file: !7706, line: 53, type: !32)
!10587 = distinct !DILocation(line: 145, column: 10, scope: !10574, inlinedAt: !10581)
!10588 = !{i64 2952537}
!10589 = !DILocation(line: 0, scope: !10583, inlinedAt: !10587)
!10590 = !DILocation(line: 148, column: 2, scope: !10591, inlinedAt: !10581)
!10591 = distinct !DILexicalBlock(scope: !10592, file: !152, line: 148, column: 2)
!10592 = distinct !DILexicalBlock(scope: !10574, file: !152, line: 148, column: 2)
!10593 = !DILocation(line: 148, column: 2, scope: !10592, inlinedAt: !10581)
!10594 = !DILocation(line: 148, column: 2, scope: !10595, inlinedAt: !10581)
!10595 = distinct !DILexicalBlock(scope: !10591, file: !152, line: 148, column: 2)
!10596 = !DILocation(line: 160, column: 2, scope: !10574, inlinedAt: !10581)
!10597 = !DILocation(line: 178, column: 21, scope: !10546)
!10598 = !DILocation(line: 180, column: 18, scope: !10546)
!10599 = !DILocation(line: 182, column: 14, scope: !10546)
!10600 = !DILocation(line: 183, column: 15, scope: !10546)
!10601 = !DILocation(line: 185, column: 39, scope: !10546)
!10602 = !DILocation(line: 185, column: 37, scope: !10546)
!10603 = !DILocation(line: 187, column: 27, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10546, file: !2004, line: 187, column: 6)
!10605 = !DILocation(line: 187, column: 6, scope: !10546)
!10606 = !DILocation(line: 202, column: 27, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10604, file: !2004, line: 195, column: 9)
!10608 = !DILocation(line: 202, column: 48, scope: !10607)
!10609 = !DILocation(line: 203, column: 9, scope: !10607)
!10610 = !DILocation(line: 204, column: 11, scope: !10607)
!10611 = !DILocation(line: 205, column: 13, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10607, file: !2004, line: 205, column: 7)
!10613 = !DILocation(line: 205, column: 7, scope: !10607)
!10614 = !DILocation(line: 0, scope: !10604)
!10615 = !DILocation(line: 212, column: 18, scope: !10546)
!10616 = !DILocation(line: 214, column: 28, scope: !10546)
!10617 = !DILocation(line: 214, column: 16, scope: !10546)
!10618 = !DILocation(line: 215, column: 15, scope: !10546)
!10619 = !DILocation(line: 227, column: 11, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10546, file: !2004, line: 227, column: 6)
!10621 = !DILocation(line: 227, column: 6, scope: !10546)
!10622 = !DILocation(line: 228, column: 15, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10620, file: !2004, line: 227, column: 19)
!10624 = !DILocation(line: 228, column: 38, scope: !10623)
!10625 = !DILocation(line: 228, column: 24, scope: !10623)
!10626 = !DILocation(line: 229, column: 2, scope: !10623)
!10627 = !DILocation(line: 230, column: 24, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10620, file: !2004, line: 229, column: 9)
!10629 = !DILocation(line: 230, column: 15, scope: !10628)
!10630 = !DILocation(line: 0, scope: !10620)
!10631 = !DILocalVariable(name: "key", arg: 2, scope: !10632, file: !152, line: 190, type: !10557)
!10632 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !10633, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !10635)
!10633 = !DISubroutineType(types: !10634)
!10634 = !{null, !10577, !10557}
!10635 = !{!10636, !10631}
!10636 = !DILocalVariable(name: "l", arg: 1, scope: !10632, file: !152, line: 189, type: !10577)
!10637 = !DILocation(line: 0, scope: !10632, inlinedAt: !10638)
!10638 = distinct !DILocation(line: 232, column: 2, scope: !10546)
!10639 = !DILocation(line: 194, column: 2, scope: !10640, inlinedAt: !10638)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !152, line: 194, column: 2)
!10641 = distinct !DILexicalBlock(scope: !10632, file: !152, line: 194, column: 2)
!10642 = !DILocation(line: 194, column: 2, scope: !10641, inlinedAt: !10638)
!10643 = !DILocation(line: 194, column: 2, scope: !10644, inlinedAt: !10638)
!10644 = distinct !DILexicalBlock(scope: !10640, file: !152, line: 194, column: 2)
!10645 = !DILocalVariable(name: "key", arg: 1, scope: !10646, file: !7706, line: 84, type: !32)
!10646 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7706, file: !7706, line: 84, type: !7536, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !10647)
!10647 = !{!10645}
!10648 = !DILocation(line: 0, scope: !10646, inlinedAt: !10649)
!10649 = distinct !DILocation(line: 215, column: 2, scope: !10632, inlinedAt: !10638)
!10650 = !DILocation(line: 95, column: 2, scope: !10646, inlinedAt: !10649)
!10651 = !{i64 2953354}
!10652 = !DILocation(line: 234, column: 1, scope: !10546)
!10653 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2004, file: !2004, line: 236, type: !7672, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !10654)
!10654 = !{!10655, !10656}
!10655 = !DILocalVariable(name: "key", scope: !10653, file: !2004, line: 242, type: !10557)
!10656 = !DILocalVariable(name: "cyc", scope: !10653, file: !2004, line: 243, type: !111)
!10657 = !DILocation(line: 0, scope: !10574, inlinedAt: !10658)
!10658 = distinct !DILocation(line: 242, column: 25, scope: !10653)
!10659 = !DILocation(line: 55, column: 2, scope: !10583, inlinedAt: !10660)
!10660 = distinct !DILocation(line: 145, column: 10, scope: !10574, inlinedAt: !10658)
!10661 = !DILocation(line: 0, scope: !10583, inlinedAt: !10660)
!10662 = !DILocation(line: 148, column: 2, scope: !10591, inlinedAt: !10658)
!10663 = !DILocation(line: 148, column: 2, scope: !10592, inlinedAt: !10658)
!10664 = !DILocation(line: 148, column: 2, scope: !10595, inlinedAt: !10658)
!10665 = !DILocation(line: 160, column: 2, scope: !10574, inlinedAt: !10658)
!10666 = !DILocation(line: 0, scope: !10653)
!10667 = !DILocation(line: 243, column: 17, scope: !10653)
!10668 = !DILocation(line: 243, column: 29, scope: !10653)
!10669 = !DILocation(line: 243, column: 43, scope: !10653)
!10670 = !DILocation(line: 0, scope: !10632, inlinedAt: !10671)
!10671 = distinct !DILocation(line: 245, column: 2, scope: !10653)
!10672 = !DILocation(line: 194, column: 2, scope: !10640, inlinedAt: !10671)
!10673 = !DILocation(line: 194, column: 2, scope: !10641, inlinedAt: !10671)
!10674 = !DILocation(line: 194, column: 2, scope: !10644, inlinedAt: !10671)
!10675 = !DILocation(line: 243, column: 27, scope: !10653)
!10676 = !DILocation(line: 243, column: 41, scope: !10653)
!10677 = !DILocation(line: 0, scope: !10646, inlinedAt: !10678)
!10678 = distinct !DILocation(line: 215, column: 2, scope: !10632, inlinedAt: !10671)
!10679 = !DILocation(line: 95, column: 2, scope: !10646, inlinedAt: !10678)
!10680 = !DILocation(line: 246, column: 13, scope: !10653)
!10681 = !DILocation(line: 246, column: 2, scope: !10653)
!10682 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2004, file: !2004, line: 249, type: !7672, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !10683)
!10683 = !{!10684, !10685}
!10684 = !DILocalVariable(name: "key", scope: !10682, file: !2004, line: 251, type: !10557)
!10685 = !DILocalVariable(name: "ret", scope: !10682, file: !2004, line: 252, type: !111)
!10686 = !DILocation(line: 0, scope: !10574, inlinedAt: !10687)
!10687 = distinct !DILocation(line: 251, column: 25, scope: !10682)
!10688 = !DILocation(line: 55, column: 2, scope: !10583, inlinedAt: !10689)
!10689 = distinct !DILocation(line: 145, column: 10, scope: !10574, inlinedAt: !10687)
!10690 = !DILocation(line: 0, scope: !10583, inlinedAt: !10689)
!10691 = !DILocation(line: 148, column: 2, scope: !10591, inlinedAt: !10687)
!10692 = !DILocation(line: 148, column: 2, scope: !10592, inlinedAt: !10687)
!10693 = !DILocation(line: 148, column: 2, scope: !10595, inlinedAt: !10687)
!10694 = !DILocation(line: 160, column: 2, scope: !10574, inlinedAt: !10687)
!10695 = !DILocation(line: 0, scope: !10682)
!10696 = !DILocation(line: 252, column: 17, scope: !10682)
!10697 = !DILocation(line: 252, column: 29, scope: !10682)
!10698 = !DILocation(line: 0, scope: !10632, inlinedAt: !10699)
!10699 = distinct !DILocation(line: 254, column: 2, scope: !10682)
!10700 = !DILocation(line: 194, column: 2, scope: !10640, inlinedAt: !10699)
!10701 = !DILocation(line: 194, column: 2, scope: !10641, inlinedAt: !10699)
!10702 = !DILocation(line: 194, column: 2, scope: !10644, inlinedAt: !10699)
!10703 = !DILocation(line: 252, column: 27, scope: !10682)
!10704 = !DILocation(line: 0, scope: !10646, inlinedAt: !10705)
!10705 = distinct !DILocation(line: 215, column: 2, scope: !10632, inlinedAt: !10699)
!10706 = !DILocation(line: 95, column: 2, scope: !10646, inlinedAt: !10705)
!10707 = !DILocation(line: 255, column: 2, scope: !10682)
!10708 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2004, file: !2004, line: 258, type: !317, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !2275)
!10709 = !DILocation(line: 260, column: 6, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10708, file: !2004, line: 260, column: 6)
!10711 = !DILocation(line: 260, column: 16, scope: !10710)
!10712 = !DILocation(line: 260, column: 6, scope: !10708)
!10713 = !DILocation(line: 261, column: 17, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10710, file: !2004, line: 260, column: 34)
!10715 = !DILocation(line: 262, column: 2, scope: !10714)
!10716 = !DILocation(line: 263, column: 1, scope: !10708)
!10717 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2004, file: !2004, line: 265, type: !317, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1779, retainedNodes: !2275)
!10718 = !DILocation(line: 267, column: 16, scope: !10717)
!10719 = !DILocation(line: 268, column: 1, scope: !10717)
!10720 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10721, file: !10721, line: 9, type: !10722, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3164, retainedNodes: !10752)
!10721 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10722 = !DISubroutineType(types: !10723)
!10723 = !{!103, !10724, !166, !10751}
!10724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10725, size: 32)
!10725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10726)
!10726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1706, line: 60, size: 64, elements: !10727)
!10727 = !{!10728, !10750}
!10728 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10726, file: !1706, line: 69, baseType: !10729, size: 32)
!10729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10730, size: 32)
!10730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10731)
!10731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1706, line: 50, size: 64, elements: !10732)
!10732 = !{!10733, !10748, !10749}
!10733 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10731, file: !1706, line: 52, baseType: !10734, size: 32)
!10734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10735, size: 32)
!10735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10736)
!10736 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1463, line: 64, baseType: !10737)
!10737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1463, line: 59, size: 160, elements: !10738)
!10738 = !{!10739, !10747}
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10737, file: !1463, line: 60, baseType: !10740, size: 128)
!10740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1463, line: 51, size: 128, elements: !10741)
!10741 = !{!10742, !10743, !10744, !10745, !10746}
!10742 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !10740, file: !1463, line: 52, baseType: !111, size: 32)
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !10740, file: !1463, line: 53, baseType: !111, size: 32, offset: 32)
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !10740, file: !1463, line: 54, baseType: !111, size: 32, offset: 64)
!10745 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !10740, file: !1463, line: 55, baseType: !166, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10746 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !10740, file: !1463, line: 56, baseType: !111, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10747 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !10737, file: !1463, line: 61, baseType: !111, size: 32, offset: 128)
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10731, file: !1706, line: 54, baseType: !166, size: 8, offset: 32)
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10731, file: !1706, line: 56, baseType: !166, size: 8, offset: 40)
!10750 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10726, file: !1706, line: 71, baseType: !166, size: 8, offset: 32)
!10751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10729, size: 32)
!10752 = !{!10753, !10754, !10755}
!10753 = !DILocalVariable(name: "config", arg: 1, scope: !10720, file: !10721, line: 9, type: !10724)
!10754 = !DILocalVariable(name: "id", arg: 2, scope: !10720, file: !10721, line: 9, type: !166)
!10755 = !DILocalVariable(name: "state", arg: 3, scope: !10720, file: !10721, line: 10, type: !10751)
!10756 = !DILocation(line: 0, scope: !10720)
!10757 = !DILocation(line: 12, column: 20, scope: !10720)
!10758 = !DILocation(line: 13, column: 27, scope: !10720)
!10759 = !DILocation(line: 13, column: 42, scope: !10720)
!10760 = !DILocation(line: 13, column: 19, scope: !10720)
!10761 = !DILocation(line: 13, column: 16, scope: !10720)
!10762 = !DILocation(line: 13, column: 2, scope: !10720)
!10763 = distinct !{!10763, !10762, !10764}
!10764 = !DILocation(line: 19, column: 2, scope: !10720)
!10765 = !DILocation(line: 14, column: 23, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10767, file: !10721, line: 14, column: 7)
!10767 = distinct !DILexicalBlock(scope: !10720, file: !10721, line: 13, column: 54)
!10768 = !DILocation(line: 14, column: 10, scope: !10766)
!10769 = !DILocation(line: 18, column: 11, scope: !10767)
!10770 = !DILocation(line: 14, column: 7, scope: !10767)
!10771 = !DILocation(line: 22, column: 1, scope: !10720)
!10772 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !2045, file: !2045, line: 51, type: !2051, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !10773)
!10773 = !{!10774}
!10774 = !DILocalVariable(name: "dev", arg: 1, scope: !10772, file: !2045, line: 51, type: !2053)
!10775 = !DILocation(line: 0, scope: !10772)
!10776 = !DILocation(line: 66, column: 2, scope: !10772)
!10777 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2045, file: !2045, line: 10, type: !10778, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !10794)
!10778 = !DISubroutineType(types: !10779)
!10779 = !{!103, !10780, !166, !22}
!10780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10781, size: 32)
!10781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10782)
!10782 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1463, line: 64, baseType: !10783)
!10783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1463, line: 59, size: 160, elements: !10784)
!10784 = !{!10785, !10793}
!10785 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10783, file: !1463, line: 60, baseType: !10786, size: 128)
!10786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1463, line: 51, size: 128, elements: !10787)
!10787 = !{!10788, !10789, !10790, !10791, !10792}
!10788 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !10786, file: !1463, line: 52, baseType: !111, size: 32)
!10789 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !10786, file: !1463, line: 53, baseType: !111, size: 32, offset: 32)
!10790 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !10786, file: !1463, line: 54, baseType: !111, size: 32, offset: 64)
!10791 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !10786, file: !1463, line: 55, baseType: !166, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10792 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !10786, file: !1463, line: 56, baseType: !111, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10793 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !10783, file: !1463, line: 61, baseType: !111, size: 32, offset: 128)
!10794 = !{!10795, !10796, !10797, !10798, !10800, !10803, !10804, !10805, !10806, !10807}
!10795 = !DILocalVariable(name: "pins", arg: 1, scope: !10777, file: !2045, line: 10, type: !10780)
!10796 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10777, file: !2045, line: 10, type: !166)
!10797 = !DILocalVariable(name: "reg", arg: 3, scope: !10777, file: !2045, line: 11, type: !22)
!10798 = !DILocalVariable(name: "i", scope: !10799, file: !2045, line: 14, type: !166)
!10799 = distinct !DILexicalBlock(scope: !10777, file: !2045, line: 14, column: 2)
!10800 = !DILocalVariable(name: "mux_register", scope: !10801, file: !2045, line: 15, type: !111)
!10801 = distinct !DILexicalBlock(scope: !10802, file: !2045, line: 14, column: 41)
!10802 = distinct !DILexicalBlock(scope: !10799, file: !2045, line: 14, column: 2)
!10803 = !DILocalVariable(name: "mux_mode", scope: !10801, file: !2045, line: 16, type: !111)
!10804 = !DILocalVariable(name: "input_register", scope: !10801, file: !2045, line: 17, type: !111)
!10805 = !DILocalVariable(name: "input_daisy", scope: !10801, file: !2045, line: 18, type: !111)
!10806 = !DILocalVariable(name: "config_register", scope: !10801, file: !2045, line: 19, type: !111)
!10807 = !DILocalVariable(name: "pin_ctrl_flags", scope: !10801, file: !2045, line: 20, type: !111)
!10808 = !DILocation(line: 0, scope: !10777)
!10809 = !DILocation(line: 0, scope: !10799)
!10810 = !DILocation(line: 14, column: 25, scope: !10802)
!10811 = !DILocation(line: 14, column: 2, scope: !10799)
!10812 = !DILocation(line: 48, column: 2, scope: !10777)
!10813 = !DILocation(line: 15, column: 42, scope: !10801)
!10814 = !DILocation(line: 0, scope: !10801)
!10815 = !DILocation(line: 16, column: 38, scope: !10801)
!10816 = !DILocation(line: 17, column: 44, scope: !10801)
!10817 = !DILocation(line: 19, column: 45, scope: !10801)
!10818 = !DILocation(line: 20, column: 37, scope: !10801)
!10819 = !DILocation(line: 35, column: 4, scope: !10801)
!10820 = !DILocation(line: 36, column: 4, scope: !10801)
!10821 = !DILocation(line: 35, column: 45, scope: !10801)
!10822 = !DILocation(line: 34, column: 5, scope: !10801)
!10823 = !DILocation(line: 34, column: 53, scope: !10801)
!10824 = !DILocation(line: 37, column: 7, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10801, file: !2045, line: 37, column: 7)
!10826 = !DILocation(line: 37, column: 7, scope: !10801)
!10827 = !DILocation(line: 18, column: 41, scope: !10801)
!10828 = !DILocation(line: 39, column: 5, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10825, file: !2045, line: 37, column: 23)
!10830 = !DILocation(line: 38, column: 6, scope: !10829)
!10831 = !DILocation(line: 38, column: 56, scope: !10829)
!10832 = !DILocation(line: 40, column: 3, scope: !10829)
!10833 = !DILocation(line: 41, column: 7, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10801, file: !2045, line: 41, column: 7)
!10835 = !DILocation(line: 41, column: 7, scope: !10801)
!10836 = !DILocation(line: 43, column: 20, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10834, file: !2045, line: 41, column: 24)
!10838 = !DILocation(line: 42, column: 6, scope: !10837)
!10839 = !DILocation(line: 42, column: 57, scope: !10837)
!10840 = !DILocation(line: 44, column: 3, scope: !10837)
!10841 = !DILocation(line: 14, column: 37, scope: !10802)
!10842 = distinct !{!10842, !10811, !10843}
!10843 = !DILocation(line: 47, column: 2, scope: !10799)
!10844 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !10845, file: !10845, line: 43, type: !10846, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !10900)
!10845 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10846 = !DISubroutineType(types: !10847)
!10847 = !{null, !10848, !111, !111, !111}
!10848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10849, size: 32)
!10849 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !1038, line: 4575, baseType: !10850)
!10850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 4532, size: 390144, elements: !10851)
!10851 = !{!10852, !10853, !10854, !10855, !10856, !10857, !10865, !10866, !10874, !10875}
!10852 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !10850, file: !1038, line: 4533, baseType: !1042, size: 32)
!10853 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !10850, file: !1038, line: 4534, baseType: !1042, size: 32, offset: 32)
!10854 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !10850, file: !1038, line: 4535, baseType: !1042, size: 32, offset: 64)
!10855 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !10850, file: !1038, line: 4536, baseType: !1042, size: 32, offset: 96)
!10856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10850, file: !1038, line: 4537, baseType: !1047, size: 16256, offset: 128)
!10857 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !10850, file: !1038, line: 4543, baseType: !10858, size: 4224, offset: 16384)
!10858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10859, size: 4224, elements: !1058)
!10859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10850, file: !1038, line: 4538, size: 128, elements: !10860)
!10860 = !{!10861, !10862, !10863, !10864}
!10861 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !10859, file: !1038, line: 4539, baseType: !1042, size: 32)
!10862 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !10859, file: !1038, line: 4540, baseType: !1042, size: 32, offset: 32)
!10863 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !10859, file: !1038, line: 4541, baseType: !1042, size: 32, offset: 64)
!10864 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !10859, file: !1038, line: 4542, baseType: !1042, size: 32, offset: 96)
!10865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10850, file: !1038, line: 4544, baseType: !1061, size: 110464, offset: 20608)
!10866 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !10850, file: !1038, line: 4550, baseType: !10867, size: 24448, offset: 131072)
!10867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10868, size: 24448, elements: !1072)
!10868 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10850, file: !1038, line: 4545, size: 128, elements: !10869)
!10869 = !{!10870, !10871, !10872, !10873}
!10870 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !10868, file: !1038, line: 4546, baseType: !1042, size: 32)
!10871 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !10868, file: !1038, line: 4547, baseType: !1042, size: 32, offset: 32)
!10872 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !10868, file: !1038, line: 4548, baseType: !1042, size: 32, offset: 64)
!10873 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !10868, file: !1038, line: 4549, baseType: !1042, size: 32, offset: 96)
!10874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10850, file: !1038, line: 4551, baseType: !1075, size: 106624, offset: 155520)
!10875 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !10850, file: !1038, line: 4574, baseType: !10876, size: 128000, offset: 262144)
!10876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10877, size: 128000, elements: !1106)
!10877 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10850, file: !1038, line: 4552, size: 1024, elements: !10878)
!10878 = !{!10879, !10880, !10881, !10882, !10883, !10884, !10885, !10886, !10887, !10888, !10889, !10890, !10891, !10892, !10893, !10894, !10895, !10896, !10897, !10898, !10899}
!10879 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !10877, file: !1038, line: 4553, baseType: !1042, size: 32)
!10880 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !10877, file: !1038, line: 4554, baseType: !1042, size: 32, offset: 32)
!10881 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !10877, file: !1038, line: 4555, baseType: !1042, size: 32, offset: 64)
!10882 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !10877, file: !1038, line: 4556, baseType: !1042, size: 32, offset: 96)
!10883 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !10877, file: !1038, line: 4557, baseType: !1042, size: 32, offset: 128)
!10884 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !10877, file: !1038, line: 4558, baseType: !1042, size: 32, offset: 160)
!10885 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !10877, file: !1038, line: 4559, baseType: !1042, size: 32, offset: 192)
!10886 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !10877, file: !1038, line: 4560, baseType: !1042, size: 32, offset: 224)
!10887 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !10877, file: !1038, line: 4561, baseType: !1042, size: 32, offset: 256)
!10888 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !10877, file: !1038, line: 4562, baseType: !1042, size: 32, offset: 288)
!10889 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !10877, file: !1038, line: 4563, baseType: !1042, size: 32, offset: 320)
!10890 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !10877, file: !1038, line: 4564, baseType: !1042, size: 32, offset: 352)
!10891 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !10877, file: !1038, line: 4565, baseType: !1042, size: 32, offset: 384)
!10892 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !10877, file: !1038, line: 4566, baseType: !1042, size: 32, offset: 416)
!10893 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !10877, file: !1038, line: 4567, baseType: !1042, size: 32, offset: 448)
!10894 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !10877, file: !1038, line: 4568, baseType: !1042, size: 32, offset: 480)
!10895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10877, file: !1038, line: 4569, baseType: !1099, size: 384, offset: 512)
!10896 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !10877, file: !1038, line: 4570, baseType: !1042, size: 32, offset: 896)
!10897 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !10877, file: !1038, line: 4571, baseType: !1042, size: 32, offset: 928)
!10898 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !10877, file: !1038, line: 4572, baseType: !1042, size: 32, offset: 960)
!10899 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !10877, file: !1038, line: 4573, baseType: !1042, size: 32, offset: 992)
!10900 = !{!10901, !10902, !10903, !10904}
!10901 = !DILocalVariable(name: "base", arg: 1, scope: !10844, file: !10845, line: 43, type: !10848)
!10902 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10844, file: !10845, line: 43, type: !111)
!10903 = !DILocalVariable(name: "pre", arg: 3, scope: !10844, file: !10845, line: 43, type: !111)
!10904 = !DILocalVariable(name: "post", arg: 4, scope: !10844, file: !10845, line: 43, type: !111)
!10905 = !DILocation(line: 0, scope: !10844)
!10906 = !DILocation(line: 45, column: 5, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10908, file: !10845, line: 45, column: 5)
!10908 = distinct !DILexicalBlock(scope: !10844, file: !10845, line: 45, column: 5)
!10909 = !DILocation(line: 45, column: 5, scope: !10908)
!10910 = !DILocation(line: 45, column: 5, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10907, file: !10845, line: 45, column: 5)
!10912 = !DILocation(line: 46, column: 5, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !10845, line: 46, column: 5)
!10914 = distinct !DILexicalBlock(scope: !10844, file: !10845, line: 46, column: 5)
!10915 = !DILocation(line: 46, column: 5, scope: !10914)
!10916 = !DILocation(line: 46, column: 5, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10913, file: !10845, line: 46, column: 5)
!10918 = !DILocation(line: 48, column: 25, scope: !10844)
!10919 = !DILocation(line: 48, column: 42, scope: !10844)
!10920 = !DILocation(line: 50, column: 24, scope: !10844)
!10921 = !DILocation(line: 49, column: 94, scope: !10844)
!10922 = !DILocation(line: 50, column: 54, scope: !10844)
!10923 = !DILocation(line: 48, column: 22, scope: !10844)
!10924 = !DILocation(line: 51, column: 1, scope: !10844)
!10925 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !10845, file: !10845, line: 59, type: !10926, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !10928)
!10926 = !DISubroutineType(types: !10927)
!10927 = !{null, !10848, !111, !1732, !1732}
!10928 = !{!10929, !10930, !10931, !10932}
!10929 = !DILocalVariable(name: "base", arg: 1, scope: !10925, file: !10845, line: 59, type: !10848)
!10930 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10925, file: !10845, line: 59, type: !111)
!10931 = !DILocalVariable(name: "pre", arg: 3, scope: !10925, file: !10845, line: 59, type: !1732)
!10932 = !DILocalVariable(name: "post", arg: 4, scope: !10925, file: !10845, line: 59, type: !1732)
!10933 = !DILocation(line: 0, scope: !10925)
!10934 = !DILocation(line: 61, column: 5, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10936, file: !10845, line: 61, column: 5)
!10936 = distinct !DILexicalBlock(scope: !10925, file: !10845, line: 61, column: 5)
!10937 = !DILocation(line: 61, column: 5, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10935, file: !10845, line: 61, column: 5)
!10939 = !DILocation(line: 63, column: 13, scope: !10925)
!10940 = !DILocation(line: 63, column: 63, scope: !10925)
!10941 = !DILocation(line: 63, column: 10, scope: !10925)
!10942 = !DILocation(line: 64, column: 14, scope: !10925)
!10943 = !DILocation(line: 64, column: 31, scope: !10925)
!10944 = !DILocation(line: 64, column: 11, scope: !10925)
!10945 = !DILocation(line: 65, column: 1, scope: !10925)
!10946 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !10845, file: !10845, line: 73, type: !10947, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !10949)
!10947 = !DISubroutineType(types: !10948)
!10948 = !{null, !10848, !111, !111, !111, !111}
!10949 = !{!10950, !10951, !10952, !10953, !10954}
!10950 = !DILocalVariable(name: "base", arg: 1, scope: !10946, file: !10845, line: 73, type: !10848)
!10951 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10946, file: !10845, line: 73, type: !111)
!10952 = !DILocalVariable(name: "mux", arg: 3, scope: !10946, file: !10845, line: 73, type: !111)
!10953 = !DILocalVariable(name: "pre", arg: 4, scope: !10946, file: !10845, line: 73, type: !111)
!10954 = !DILocalVariable(name: "post", arg: 5, scope: !10946, file: !10845, line: 73, type: !111)
!10955 = !DILocation(line: 0, scope: !10946)
!10956 = !DILocation(line: 75, column: 5, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10958, file: !10845, line: 75, column: 5)
!10958 = distinct !DILexicalBlock(scope: !10946, file: !10845, line: 75, column: 5)
!10959 = !DILocation(line: 75, column: 5, scope: !10958)
!10960 = !DILocation(line: 75, column: 5, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10957, file: !10845, line: 75, column: 5)
!10962 = !DILocation(line: 76, column: 5, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10964, file: !10845, line: 76, column: 5)
!10964 = distinct !DILexicalBlock(scope: !10946, file: !10845, line: 76, column: 5)
!10965 = !DILocation(line: 76, column: 5, scope: !10964)
!10966 = !DILocation(line: 76, column: 5, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10963, file: !10845, line: 76, column: 5)
!10968 = !DILocation(line: 78, column: 25, scope: !10946)
!10969 = !DILocation(line: 78, column: 42, scope: !10946)
!10970 = !DILocation(line: 80, column: 24, scope: !10946)
!10971 = !DILocation(line: 80, column: 51, scope: !10946)
!10972 = !DILocation(line: 79, column: 121, scope: !10946)
!10973 = !DILocation(line: 80, column: 49, scope: !10946)
!10974 = !DILocation(line: 80, column: 81, scope: !10946)
!10975 = !DILocation(line: 78, column: 22, scope: !10946)
!10976 = !DILocation(line: 81, column: 1, scope: !10946)
!10977 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !10978, file: !10978, line: 43, type: !10979, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !10981)
!10978 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10979 = !DISubroutineType(types: !10980)
!10980 = !{!111, !3182}
!10981 = !{!10982}
!10982 = !DILocalVariable(name: "base", arg: 1, scope: !10977, file: !10978, line: 43, type: !3182)
!10983 = !DILocation(line: 0, scope: !10977)
!10984 = !DILocation(line: 45, column: 9, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10977, file: !10978, line: 45, column: 9)
!10986 = !DILocation(line: 45, column: 9, scope: !10977)
!10987 = !DILocation(line: 48, column: 26, scope: !10977)
!10988 = !DILocation(line: 48, column: 45, scope: !10977)
!10989 = !DILocation(line: 48, column: 23, scope: !10977)
!10990 = !DILocation(line: 48, column: 5, scope: !10977)
!10991 = !DILocation(line: 49, column: 1, scope: !10977)
!10992 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !3173, file: !3173, line: 220, type: !10993, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !10995)
!10993 = !DISubroutineType(types: !10994)
!10994 = !{!122, !3182, !111}
!10995 = !{!10996, !10997}
!10996 = !DILocalVariable(name: "base", arg: 1, scope: !10992, file: !3173, line: 220, type: !3182)
!10997 = !DILocalVariable(name: "pllControl", arg: 2, scope: !10992, file: !3173, line: 220, type: !111)
!10998 = !DILocation(line: 0, scope: !10992)
!10999 = !DILocation(line: 222, column: 19, scope: !10992)
!11000 = !DILocation(line: 222, column: 58, scope: !10992)
!11001 = !DILocation(line: 222, column: 12, scope: !10992)
!11002 = !DILocation(line: 222, column: 5, scope: !10992)
!11003 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !10978, file: !10978, line: 57, type: !10979, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !11004)
!11004 = !{!11005}
!11005 = !DILocalVariable(name: "base", arg: 1, scope: !11003, file: !10978, line: 57, type: !3182)
!11006 = !DILocation(line: 0, scope: !11003)
!11007 = !DILocation(line: 59, column: 9, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11003, file: !10978, line: 59, column: 9)
!11009 = !DILocation(line: 59, column: 9, scope: !11003)
!11010 = !DILocation(line: 62, column: 9, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11003, file: !10978, line: 62, column: 9)
!11012 = !DILocation(line: 62, column: 28, scope: !11011)
!11013 = !DILocation(line: 0, scope: !11011)
!11014 = !DILocation(line: 66, column: 1, scope: !11003)
!11015 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !10978, file: !10978, line: 74, type: !10979, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !11016)
!11016 = !{!11017, !11018, !11019, !11020}
!11017 = !DILocalVariable(name: "base", arg: 1, scope: !11015, file: !10978, line: 74, type: !3182)
!11018 = !DILocalVariable(name: "divSelect", scope: !11015, file: !10978, line: 76, type: !166)
!11019 = !DILocalVariable(name: "divTestSelect", scope: !11015, file: !10978, line: 76, type: !166)
!11020 = !DILocalVariable(name: "factor", scope: !11015, file: !10978, line: 77, type: !3245)
!11021 = !DILocation(line: 0, scope: !11015)
!11022 = !DILocation(line: 79, column: 9, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11015, file: !10978, line: 79, column: 9)
!11024 = !DILocation(line: 79, column: 9, scope: !11015)
!11025 = !DILocation(line: 82, column: 17, scope: !11015)
!11026 = !DILocation(line: 83, column: 22, scope: !11015)
!11027 = !DILocation(line: 83, column: 100, scope: !11015)
!11028 = !DILocation(line: 83, column: 21, scope: !11015)
!11029 = !DILocation(line: 86, column: 5, scope: !11015)
!11030 = !DILocation(line: 100, column: 9, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11015, file: !10978, line: 100, column: 9)
!11032 = !DILocation(line: 100, column: 41, scope: !11031)
!11033 = !DILocation(line: 100, column: 9, scope: !11015)
!11034 = !DILocation(line: 102, column: 27, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11031, file: !10978, line: 101, column: 5)
!11036 = !DILocation(line: 102, column: 59, scope: !11035)
!11037 = !DILocation(line: 102, column: 19, scope: !11035)
!11038 = !DILocation(line: 103, column: 27, scope: !11035)
!11039 = !DILocation(line: 103, column: 62, scope: !11035)
!11040 = !DILocation(line: 103, column: 19, scope: !11035)
!11041 = !DILocation(line: 102, column: 95, scope: !11035)
!11042 = !DILocation(line: 104, column: 27, scope: !11035)
!11043 = !DILocation(line: 104, column: 60, scope: !11035)
!11044 = !DILocation(line: 104, column: 19, scope: !11035)
!11045 = !DILocation(line: 103, column: 98, scope: !11035)
!11046 = !DILocation(line: 105, column: 39, scope: !11035)
!11047 = !DILocation(line: 105, column: 27, scope: !11035)
!11048 = !DILocation(line: 105, column: 60, scope: !11035)
!11049 = !DILocation(line: 105, column: 70, scope: !11035)
!11050 = !DILocation(line: 105, column: 57, scope: !11035)
!11051 = !DILocation(line: 105, column: 16, scope: !11035)
!11052 = !DILocation(line: 105, column: 9, scope: !11035)
!11053 = !DILocation(line: 109, column: 28, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11031, file: !10978, line: 108, column: 5)
!11055 = !DILocation(line: 109, column: 48, scope: !11054)
!11056 = !DILocation(line: 109, column: 46, scope: !11054)
!11057 = !DILocation(line: 109, column: 9, scope: !11054)
!11058 = !DILocation(line: 111, column: 1, scope: !11015)
!11059 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !10978, file: !10978, line: 119, type: !10979, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !11060)
!11060 = !{!11061}
!11061 = !DILocalVariable(name: "base", arg: 1, scope: !11059, file: !10978, line: 119, type: !3182)
!11062 = !DILocation(line: 0, scope: !11059)
!11063 = !DILocation(line: 121, column: 9, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11059, file: !10978, line: 121, column: 9)
!11065 = !DILocation(line: 125, column: 1, scope: !11059)
!11066 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !10978, file: !10978, line: 133, type: !10979, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !11067)
!11067 = !{!11068, !11069, !11070, !11071, !11072}
!11068 = !DILocalVariable(name: "base", arg: 1, scope: !11066, file: !10978, line: 133, type: !3182)
!11069 = !DILocalVariable(name: "divSelect", scope: !11066, file: !10978, line: 135, type: !166)
!11070 = !DILocalVariable(name: "divPostSelect", scope: !11066, file: !10978, line: 135, type: !166)
!11071 = !DILocalVariable(name: "divTestSelect", scope: !11066, file: !10978, line: 135, type: !166)
!11072 = !DILocalVariable(name: "factor", scope: !11066, file: !10978, line: 136, type: !3245)
!11073 = !DILocation(line: 0, scope: !11066)
!11074 = !DILocation(line: 138, column: 9, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11066, file: !10978, line: 138, column: 9)
!11076 = !DILocation(line: 138, column: 9, scope: !11066)
!11077 = !DILocation(line: 141, column: 17, scope: !11066)
!11078 = !DILocation(line: 142, column: 22, scope: !11066)
!11079 = !DILocation(line: 142, column: 101, scope: !11066)
!11080 = !DILocation(line: 142, column: 21, scope: !11066)
!11081 = !DILocation(line: 144, column: 22, scope: !11066)
!11082 = !DILocation(line: 144, column: 104, scope: !11066)
!11083 = !DILocation(line: 144, column: 21, scope: !11066)
!11084 = !DILocation(line: 147, column: 5, scope: !11066)
!11085 = !DILocation(line: 161, column: 5, scope: !11066)
!11086 = !DILocation(line: 175, column: 9, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11066, file: !10978, line: 175, column: 9)
!11088 = !DILocation(line: 175, column: 43, scope: !11087)
!11089 = !DILocation(line: 175, column: 9, scope: !11066)
!11090 = !DILocation(line: 177, column: 27, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11087, file: !10978, line: 176, column: 5)
!11092 = !DILocation(line: 177, column: 61, scope: !11091)
!11093 = !DILocation(line: 177, column: 19, scope: !11091)
!11094 = !DILocation(line: 178, column: 27, scope: !11091)
!11095 = !DILocation(line: 178, column: 64, scope: !11091)
!11096 = !DILocation(line: 178, column: 19, scope: !11091)
!11097 = !DILocation(line: 177, column: 99, scope: !11091)
!11098 = !DILocation(line: 179, column: 27, scope: !11091)
!11099 = !DILocation(line: 179, column: 62, scope: !11091)
!11100 = !DILocation(line: 179, column: 19, scope: !11091)
!11101 = !DILocation(line: 178, column: 102, scope: !11091)
!11102 = !DILocation(line: 180, column: 40, scope: !11091)
!11103 = !DILocation(line: 180, column: 58, scope: !11091)
!11104 = !DILocation(line: 180, column: 27, scope: !11091)
!11105 = !DILocation(line: 180, column: 79, scope: !11091)
!11106 = !DILocation(line: 180, column: 89, scope: !11091)
!11107 = !DILocation(line: 180, column: 76, scope: !11091)
!11108 = !DILocation(line: 180, column: 16, scope: !11091)
!11109 = !DILocation(line: 180, column: 9, scope: !11091)
!11110 = !DILocation(line: 184, column: 29, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11087, file: !10978, line: 183, column: 5)
!11112 = !DILocation(line: 184, column: 47, scope: !11111)
!11113 = !DILocation(line: 184, column: 67, scope: !11111)
!11114 = !DILocation(line: 184, column: 65, scope: !11111)
!11115 = !DILocation(line: 184, column: 9, scope: !11111)
!11116 = !DILocation(line: 186, column: 1, scope: !11066)
!11117 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !10978, file: !10978, line: 194, type: !10979, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !11118)
!11118 = !{!11119, !11120, !11121, !11122, !11123}
!11119 = !DILocalVariable(name: "base", arg: 1, scope: !11117, file: !10978, line: 194, type: !3182)
!11120 = !DILocalVariable(name: "divSelect", scope: !11117, file: !10978, line: 196, type: !166)
!11121 = !DILocalVariable(name: "divPostSelect", scope: !11117, file: !10978, line: 196, type: !166)
!11122 = !DILocalVariable(name: "divTestSelect", scope: !11117, file: !10978, line: 196, type: !166)
!11123 = !DILocalVariable(name: "factor", scope: !11117, file: !10978, line: 197, type: !3245)
!11124 = !DILocation(line: 0, scope: !11117)
!11125 = !DILocation(line: 199, column: 9, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11117, file: !10978, line: 199, column: 9)
!11127 = !DILocation(line: 199, column: 9, scope: !11117)
!11128 = !DILocation(line: 202, column: 17, scope: !11117)
!11129 = !DILocation(line: 203, column: 22, scope: !11117)
!11130 = !DILocation(line: 203, column: 101, scope: !11117)
!11131 = !DILocation(line: 203, column: 21, scope: !11117)
!11132 = !DILocation(line: 205, column: 22, scope: !11117)
!11133 = !DILocation(line: 205, column: 104, scope: !11117)
!11134 = !DILocation(line: 205, column: 21, scope: !11117)
!11135 = !DILocation(line: 208, column: 5, scope: !11117)
!11136 = !DILocation(line: 222, column: 5, scope: !11117)
!11137 = !DILocation(line: 236, column: 9, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11117, file: !10978, line: 236, column: 9)
!11139 = !DILocation(line: 236, column: 43, scope: !11138)
!11140 = !DILocation(line: 236, column: 9, scope: !11117)
!11141 = !DILocation(line: 238, column: 27, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11138, file: !10978, line: 237, column: 5)
!11143 = !DILocation(line: 238, column: 61, scope: !11142)
!11144 = !DILocation(line: 238, column: 19, scope: !11142)
!11145 = !DILocation(line: 239, column: 27, scope: !11142)
!11146 = !DILocation(line: 239, column: 64, scope: !11142)
!11147 = !DILocation(line: 239, column: 19, scope: !11142)
!11148 = !DILocation(line: 238, column: 99, scope: !11142)
!11149 = !DILocation(line: 240, column: 27, scope: !11142)
!11150 = !DILocation(line: 240, column: 62, scope: !11142)
!11151 = !DILocation(line: 240, column: 19, scope: !11142)
!11152 = !DILocation(line: 239, column: 102, scope: !11142)
!11153 = !DILocation(line: 241, column: 40, scope: !11142)
!11154 = !DILocation(line: 241, column: 58, scope: !11142)
!11155 = !DILocation(line: 241, column: 27, scope: !11142)
!11156 = !DILocation(line: 241, column: 79, scope: !11142)
!11157 = !DILocation(line: 241, column: 89, scope: !11142)
!11158 = !DILocation(line: 241, column: 76, scope: !11142)
!11159 = !DILocation(line: 241, column: 16, scope: !11142)
!11160 = !DILocation(line: 241, column: 9, scope: !11142)
!11161 = !DILocation(line: 245, column: 29, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11138, file: !10978, line: 244, column: 5)
!11163 = !DILocation(line: 245, column: 47, scope: !11162)
!11164 = !DILocation(line: 245, column: 67, scope: !11162)
!11165 = !DILocation(line: 245, column: 65, scope: !11162)
!11166 = !DILocation(line: 245, column: 9, scope: !11162)
!11167 = !DILocation(line: 247, column: 1, scope: !11117)
!11168 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !10978, file: !10978, line: 255, type: !11169, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !11171)
!11169 = !DISubroutineType(types: !11170)
!11170 = !{!111, !3182, !111}
!11171 = !{!11172, !11173, !11174, !11175}
!11172 = !DILocalVariable(name: "base", arg: 1, scope: !11168, file: !10978, line: 255, type: !3182)
!11173 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !11168, file: !10978, line: 255, type: !111)
!11174 = !DILocalVariable(name: "main", scope: !11168, file: !10978, line: 257, type: !111)
!11175 = !DILocalVariable(name: "frac", scope: !11168, file: !10978, line: 257, type: !111)
!11176 = !DILocation(line: 0, scope: !11168)
!11177 = !DILocation(line: 260, column: 5, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !10978, line: 260, column: 5)
!11179 = distinct !DILexicalBlock(scope: !11168, file: !10978, line: 260, column: 5)
!11180 = !DILocation(line: 260, column: 5, scope: !11179)
!11181 = !DILocation(line: 260, column: 5, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11178, file: !10978, line: 260, column: 5)
!11183 = !DILocation(line: 262, column: 12, scope: !11168)
!11184 = !DILocation(line: 263, column: 12, scope: !11168)
!11185 = !DILocation(line: 265, column: 17, scope: !11168)
!11186 = !DILocation(line: 265, column: 24, scope: !11168)
!11187 = !DILocation(line: 265, column: 5, scope: !11168)
!11188 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !3173, file: !3173, line: 373, type: !11169, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !11189)
!11189 = !{!11190, !11191}
!11190 = !DILocalVariable(name: "base", arg: 1, scope: !11188, file: !3173, line: 373, type: !3182)
!11191 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !11188, file: !3173, line: 373, type: !111)
!11192 = !DILocation(line: 0, scope: !11188)
!11193 = !DILocation(line: 375, column: 13, scope: !11188)
!11194 = !DILocation(line: 375, column: 52, scope: !11188)
!11195 = !DILocation(line: 375, column: 49, scope: !11188)
!11196 = !DILocation(line: 375, column: 85, scope: !11188)
!11197 = !DILocation(line: 375, column: 5, scope: !11188)
!11198 = distinct !DISubprogram(name: "GPIO_Init", scope: !11199, file: !11199, line: 47, type: !11200, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3246, retainedNodes: !11224)
!11199 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11200 = !DISubroutineType(types: !11201)
!11201 = !{null, !11202, !11214}
!11202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11203, size: 32)
!11203 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !1038, line: 19729, baseType: !11204)
!11204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 19720, size: 256, elements: !11205)
!11205 = !{!11206, !11207, !11208, !11209, !11210, !11211, !11212, !11213}
!11206 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !11204, file: !1038, line: 19721, baseType: !1042, size: 32)
!11207 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !11204, file: !1038, line: 19722, baseType: !1042, size: 32, offset: 32)
!11208 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !11204, file: !1038, line: 19723, baseType: !1113, size: 32, offset: 64)
!11209 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !11204, file: !1038, line: 19724, baseType: !1042, size: 32, offset: 96)
!11210 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !11204, file: !1038, line: 19725, baseType: !1042, size: 32, offset: 128)
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !11204, file: !1038, line: 19726, baseType: !1042, size: 32, offset: 160)
!11212 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !11204, file: !1038, line: 19727, baseType: !1042, size: 32, offset: 192)
!11213 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !11204, file: !1038, line: 19728, baseType: !1042, size: 32, offset: 224)
!11214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11215, size: 32)
!11215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11216)
!11216 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !1321, line: 78, baseType: !11217)
!11217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !1321, line: 73, size: 96, elements: !11218)
!11218 = !{!11219, !11220, !11222}
!11219 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !11217, file: !1321, line: 75, baseType: !111, size: 32)
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !11217, file: !1321, line: 76, baseType: !11221, size: 32, offset: 32)
!11221 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !1321, line: 53, baseType: !3249)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !11217, file: !1321, line: 77, baseType: !11223, size: 32, offset: 64)
!11223 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !1321, line: 63, baseType: !3253)
!11224 = !{!11225, !11226, !11227, !11228}
!11225 = !DILocalVariable(name: "base", arg: 1, scope: !11198, file: !11199, line: 47, type: !11202)
!11226 = !DILocalVariable(name: "initConfig", arg: 2, scope: !11198, file: !11199, line: 47, type: !11214)
!11227 = !DILocalVariable(name: "pin", scope: !11198, file: !11199, line: 49, type: !111)
!11228 = !DILocalVariable(name: "icr", scope: !11198, file: !11199, line: 50, type: !1162)
!11229 = !DILocation(line: 0, scope: !11198)
!11230 = !DILocation(line: 53, column: 5, scope: !11198)
!11231 = !DILocation(line: 53, column: 24, scope: !11198)
!11232 = !DILocation(line: 54, column: 2, scope: !11198)
!11233 = !DILocation(line: 54, column: 26, scope: !11198)
!11234 = !DILocation(line: 57, column: 23, scope: !11198)
!11235 = !DILocation(line: 60, column: 21, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11198, file: !11199, line: 60, column: 9)
!11237 = !DILocation(line: 60, column: 31, scope: !11236)
!11238 = !DILocation(line: 0, scope: !11236)
!11239 = !DILocation(line: 60, column: 9, scope: !11198)
!11240 = !DILocation(line: 61, column: 9, scope: !11236)
!11241 = !DILocation(line: 61, column: 29, scope: !11236)
!11242 = !DILocation(line: 63, column: 32, scope: !11236)
!11243 = !DILocation(line: 63, column: 9, scope: !11236)
!11244 = !DILocation(line: 63, column: 29, scope: !11236)
!11245 = !DILocation(line: 66, column: 12, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11198, file: !11199, line: 66, column: 8)
!11247 = !DILocation(line: 66, column: 8, scope: !11198)
!11248 = !DILocation(line: 73, column: 24, scope: !11198)
!11249 = !DILocation(line: 73, column: 5, scope: !11198)
!11250 = !DILocation(line: 77, column: 30, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !11199, line: 76, column: 9)
!11252 = distinct !DILexicalBlock(scope: !11198, file: !11199, line: 74, column: 5)
!11253 = !DILocation(line: 77, column: 26, scope: !11251)
!11254 = !DILocation(line: 77, column: 21, scope: !11251)
!11255 = !DILocation(line: 77, column: 18, scope: !11251)
!11256 = !DILocation(line: 78, column: 13, scope: !11251)
!11257 = !DILocation(line: 82, column: 21, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11252, file: !11199, line: 81, column: 9)
!11259 = !DILocation(line: 82, column: 38, scope: !11258)
!11260 = !DILocation(line: 82, column: 34, scope: !11258)
!11261 = !DILocation(line: 82, column: 29, scope: !11258)
!11262 = !DILocation(line: 82, column: 26, scope: !11258)
!11263 = !DILocation(line: 82, column: 53, scope: !11258)
!11264 = !DILocation(line: 82, column: 47, scope: !11258)
!11265 = !DILocation(line: 83, column: 13, scope: !11258)
!11266 = !DILocation(line: 87, column: 21, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11252, file: !11199, line: 86, column: 9)
!11268 = !DILocation(line: 87, column: 38, scope: !11267)
!11269 = !DILocation(line: 87, column: 34, scope: !11267)
!11270 = !DILocation(line: 87, column: 29, scope: !11267)
!11271 = !DILocation(line: 87, column: 26, scope: !11267)
!11272 = !DILocation(line: 87, column: 53, scope: !11267)
!11273 = !DILocation(line: 87, column: 47, scope: !11267)
!11274 = !DILocation(line: 88, column: 13, scope: !11267)
!11275 = !DILocation(line: 92, column: 29, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11252, file: !11199, line: 91, column: 9)
!11277 = !DILocation(line: 92, column: 25, scope: !11276)
!11278 = !DILocation(line: 92, column: 18, scope: !11276)
!11279 = !DILocation(line: 93, column: 13, scope: !11276)
!11280 = !DILocation(line: 0, scope: !11252)
!11281 = !DILocation(line: 100, column: 1, scope: !11198)
!11282 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !11199, file: !11199, line: 111, type: !11283, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3246, retainedNodes: !11286)
!11283 = !DISubroutineType(types: !11284)
!11284 = !{null, !11202, !111, !11285}
!11285 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !1321, line: 70, baseType: !1320)
!11286 = !{!11287, !11288, !11289}
!11287 = !DILocalVariable(name: "base", arg: 1, scope: !11282, file: !11199, line: 111, type: !11202)
!11288 = !DILocalVariable(name: "pin", arg: 2, scope: !11282, file: !11199, line: 111, type: !111)
!11289 = !DILocalVariable(name: "pinVal", arg: 3, scope: !11282, file: !11199, line: 111, type: !11285)
!11290 = !DILocation(line: 0, scope: !11282)
!11291 = !DILocation(line: 113, column: 5, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11293, file: !11199, line: 113, column: 5)
!11293 = distinct !DILexicalBlock(scope: !11282, file: !11199, line: 113, column: 5)
!11294 = !DILocation(line: 113, column: 5, scope: !11293)
!11295 = !DILocation(line: 113, column: 5, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11292, file: !11199, line: 113, column: 5)
!11297 = !DILocation(line: 114, column: 16, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11282, file: !11199, line: 114, column: 9)
!11299 = !DILocation(line: 0, scope: !11298)
!11300 = !DILocation(line: 114, column: 9, scope: !11282)
!11301 = !DILocation(line: 116, column: 9, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11298, file: !11199, line: 115, column: 5)
!11303 = !DILocation(line: 116, column: 27, scope: !11302)
!11304 = !DILocation(line: 117, column: 5, scope: !11302)
!11305 = !DILocation(line: 120, column: 30, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11298, file: !11199, line: 119, column: 5)
!11307 = !DILocation(line: 120, column: 9, scope: !11306)
!11308 = !DILocation(line: 120, column: 27, scope: !11306)
!11309 = !DILocation(line: 122, column: 1, scope: !11282)
!11310 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !11199, file: !11199, line: 133, type: !11311, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3246, retainedNodes: !11313)
!11311 = !DISubroutineType(types: !11312)
!11312 = !{null, !11202, !111, !122}
!11313 = !{!11314, !11315, !11316}
!11314 = !DILocalVariable(name: "base", arg: 1, scope: !11310, file: !11199, line: 133, type: !11202)
!11315 = !DILocalVariable(name: "pin", arg: 2, scope: !11310, file: !11199, line: 133, type: !111)
!11316 = !DILocalVariable(name: "enable", arg: 3, scope: !11310, file: !11199, line: 133, type: !122)
!11317 = !DILocation(line: 0, scope: !11310)
!11318 = !DILocation(line: 135, column: 5, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11320, file: !11199, line: 135, column: 5)
!11320 = distinct !DILexicalBlock(scope: !11310, file: !11199, line: 135, column: 5)
!11321 = !DILocation(line: 135, column: 5, scope: !11320)
!11322 = !DILocation(line: 135, column: 5, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11319, file: !11199, line: 135, column: 5)
!11324 = !DILocation(line: 0, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11310, file: !11199, line: 137, column: 8)
!11326 = !DILocation(line: 137, column: 8, scope: !11310)
!11327 = !DILocation(line: 138, column: 9, scope: !11325)
!11328 = !DILocation(line: 138, column: 28, scope: !11325)
!11329 = !DILocation(line: 140, column: 31, scope: !11325)
!11330 = !DILocation(line: 140, column: 9, scope: !11325)
!11331 = !DILocation(line: 140, column: 28, scope: !11325)
!11332 = !DILocation(line: 141, column: 1, scope: !11310)
!11333 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !11199, file: !11199, line: 150, type: !11311, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3246, retainedNodes: !11334)
!11334 = !{!11335, !11336, !11337}
!11335 = !DILocalVariable(name: "base", arg: 1, scope: !11333, file: !11199, line: 150, type: !11202)
!11336 = !DILocalVariable(name: "pin", arg: 2, scope: !11333, file: !11199, line: 150, type: !111)
!11337 = !DILocalVariable(name: "enable", arg: 3, scope: !11333, file: !11199, line: 150, type: !122)
!11338 = !DILocation(line: 0, scope: !11333)
!11339 = !DILocation(line: 152, column: 5, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11341, file: !11199, line: 152, column: 5)
!11341 = distinct !DILexicalBlock(scope: !11333, file: !11199, line: 152, column: 5)
!11342 = !DILocation(line: 152, column: 5, scope: !11341)
!11343 = !DILocation(line: 152, column: 5, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11340, file: !11199, line: 152, column: 5)
!11345 = !DILocation(line: 0, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11333, file: !11199, line: 154, column: 8)
!11347 = !DILocation(line: 154, column: 8, scope: !11333)
!11348 = !DILocation(line: 155, column: 9, scope: !11346)
!11349 = !DILocation(line: 155, column: 33, scope: !11346)
!11350 = !DILocation(line: 157, column: 36, scope: !11346)
!11351 = !DILocation(line: 157, column: 9, scope: !11346)
!11352 = !DILocation(line: 157, column: 33, scope: !11346)
!11353 = !DILocation(line: 158, column: 1, scope: !11333)
!11354 = distinct !DISubprogram(name: "UART_Init", scope: !11355, file: !11355, line: 47, type: !11356, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11392)
!11355 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11356 = !DISubroutineType(types: !11357)
!11357 = !{null, !11358, !11381}
!11358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11359, size: 32)
!11359 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !1038, line: 41342, baseType: !11360)
!11360 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 41322, size: 1504, elements: !11361)
!11361 = !{!11362, !11363, !11364, !11365, !11366, !11367, !11368, !11369, !11370, !11371, !11372, !11373, !11374, !11375, !11376, !11377, !11378, !11379, !11380}
!11362 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !11360, file: !1038, line: 41323, baseType: !1113, size: 32)
!11363 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11360, file: !1038, line: 41324, baseType: !1674, size: 480, offset: 32)
!11364 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !11360, file: !1038, line: 41325, baseType: !1042, size: 32, offset: 512)
!11365 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11360, file: !1038, line: 41326, baseType: !1674, size: 480, offset: 544)
!11366 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !11360, file: !1038, line: 41327, baseType: !1042, size: 32, offset: 1024)
!11367 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !11360, file: !1038, line: 41328, baseType: !1042, size: 32, offset: 1056)
!11368 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !11360, file: !1038, line: 41329, baseType: !1042, size: 32, offset: 1088)
!11369 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !11360, file: !1038, line: 41330, baseType: !1042, size: 32, offset: 1120)
!11370 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !11360, file: !1038, line: 41331, baseType: !1042, size: 32, offset: 1152)
!11371 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !11360, file: !1038, line: 41332, baseType: !1042, size: 32, offset: 1184)
!11372 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !11360, file: !1038, line: 41333, baseType: !1042, size: 32, offset: 1216)
!11373 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !11360, file: !1038, line: 41334, baseType: !1042, size: 32, offset: 1248)
!11374 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !11360, file: !1038, line: 41335, baseType: !1042, size: 32, offset: 1280)
!11375 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !11360, file: !1038, line: 41336, baseType: !1042, size: 32, offset: 1312)
!11376 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !11360, file: !1038, line: 41337, baseType: !1042, size: 32, offset: 1344)
!11377 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !11360, file: !1038, line: 41338, baseType: !1113, size: 32, offset: 1376)
!11378 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !11360, file: !1038, line: 41339, baseType: !1042, size: 32, offset: 1408)
!11379 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !11360, file: !1038, line: 41340, baseType: !1042, size: 32, offset: 1440)
!11380 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !11360, file: !1038, line: 41341, baseType: !1042, size: 32, offset: 1472)
!11381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11382, size: 32)
!11382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11383)
!11383 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1504, line: 57, baseType: !11384)
!11384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1504, line: 49, size: 192, elements: !11385)
!11385 = !{!11386, !11387, !11388, !11389, !11390, !11391}
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !11384, file: !1504, line: 51, baseType: !111, size: 32)
!11387 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !11384, file: !1504, line: 52, baseType: !111, size: 32, offset: 32)
!11388 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !11384, file: !1504, line: 53, baseType: !111, size: 32, offset: 64)
!11389 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !11384, file: !1504, line: 54, baseType: !111, size: 32, offset: 96)
!11390 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !11384, file: !1504, line: 55, baseType: !111, size: 32, offset: 128)
!11391 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !11384, file: !1504, line: 56, baseType: !111, size: 32, offset: 160)
!11392 = !{!11393, !11394}
!11393 = !DILocalVariable(name: "base", arg: 1, scope: !11354, file: !11355, line: 47, type: !11358)
!11394 = !DILocalVariable(name: "initConfig", arg: 2, scope: !11354, file: !11355, line: 47, type: !11381)
!11395 = !DILocation(line: 0, scope: !11354)
!11396 = !DILocation(line: 49, column: 5, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11398, file: !11355, line: 49, column: 5)
!11398 = distinct !DILexicalBlock(scope: !11354, file: !11355, line: 49, column: 5)
!11399 = !DILocation(line: 49, column: 5, scope: !11398)
!11400 = !DILocation(line: 49, column: 5, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11397, file: !11355, line: 49, column: 5)
!11402 = !DILocation(line: 52, column: 5, scope: !11354)
!11403 = !DILocation(line: 52, column: 25, scope: !11354)
!11404 = !DILocation(line: 55, column: 5, scope: !11354)
!11405 = !DILocation(line: 60, column: 41, scope: !11354)
!11406 = !DILocation(line: 61, column: 41, scope: !11354)
!11407 = !DILocation(line: 62, column: 41, scope: !11354)
!11408 = !DILocation(line: 63, column: 41, scope: !11354)
!11409 = !DILocation(line: 60, column: 5, scope: !11354)
!11410 = !DILocation(line: 60, column: 25, scope: !11354)
!11411 = !DILocation(line: 61, column: 52, scope: !11354)
!11412 = !DILocation(line: 62, column: 52, scope: !11354)
!11413 = !DILocation(line: 63, column: 52, scope: !11354)
!11414 = !DILocation(line: 68, column: 5, scope: !11354)
!11415 = !DILocation(line: 68, column: 25, scope: !11354)
!11416 = !DILocation(line: 72, column: 40, scope: !11354)
!11417 = !DILocation(line: 72, column: 63, scope: !11354)
!11418 = !DILocation(line: 72, column: 5, scope: !11354)
!11419 = !DILocation(line: 73, column: 1, scope: !11354)
!11420 = distinct !DISubprogram(name: "UART_Deinit", scope: !11355, file: !11355, line: 82, type: !11421, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11423)
!11421 = !DISubroutineType(types: !11422)
!11422 = !{null, !11358}
!11423 = !{!11424}
!11424 = !DILocalVariable(name: "base", arg: 1, scope: !11420, file: !11355, line: 82, type: !11358)
!11425 = !DILocation(line: 0, scope: !11420)
!11426 = !DILocation(line: 85, column: 5, scope: !11420)
!11427 = !DILocation(line: 85, column: 25, scope: !11420)
!11428 = !DILocation(line: 88, column: 26, scope: !11420)
!11429 = !DILocation(line: 89, column: 5, scope: !11420)
!11430 = !DILocation(line: 89, column: 26, scope: !11420)
!11431 = !DILocation(line: 90, column: 5, scope: !11420)
!11432 = !DILocation(line: 90, column: 26, scope: !11420)
!11433 = !DILocation(line: 93, column: 5, scope: !11420)
!11434 = !DILocation(line: 93, column: 26, scope: !11420)
!11435 = !DILocation(line: 94, column: 5, scope: !11420)
!11436 = !DILocation(line: 94, column: 26, scope: !11420)
!11437 = !DILocation(line: 95, column: 5, scope: !11420)
!11438 = !DILocation(line: 95, column: 26, scope: !11420)
!11439 = !DILocation(line: 96, column: 5, scope: !11420)
!11440 = !DILocation(line: 96, column: 26, scope: !11420)
!11441 = !DILocation(line: 97, column: 5, scope: !11420)
!11442 = !DILocation(line: 97, column: 26, scope: !11420)
!11443 = !DILocation(line: 98, column: 5, scope: !11420)
!11444 = !DILocation(line: 98, column: 26, scope: !11420)
!11445 = !DILocation(line: 99, column: 5, scope: !11420)
!11446 = !DILocation(line: 99, column: 26, scope: !11420)
!11447 = !DILocation(line: 103, column: 25, scope: !11420)
!11448 = !DILocation(line: 104, column: 5, scope: !11420)
!11449 = !DILocation(line: 104, column: 14, scope: !11420)
!11450 = !DILocation(line: 104, column: 34, scope: !11420)
!11451 = !DILocation(line: 104, column: 12, scope: !11420)
!11452 = distinct !{!11452, !11448, !11453}
!11453 = !DILocation(line: 104, column: 57, scope: !11420)
!11454 = !DILocation(line: 105, column: 1, scope: !11420)
!11455 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !11355, file: !11355, line: 113, type: !11456, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11458)
!11456 = !DISubroutineType(types: !11457)
!11457 = !{null, !11358, !111, !111}
!11458 = !{!11459, !11460, !11461, !11462, !11463, !11464, !11465, !11466, !11467, !11470, !11471}
!11459 = !DILocalVariable(name: "base", arg: 1, scope: !11455, file: !11355, line: 113, type: !11358)
!11460 = !DILocalVariable(name: "clockRate", arg: 2, scope: !11455, file: !11355, line: 113, type: !111)
!11461 = !DILocalVariable(name: "baudRate", arg: 3, scope: !11455, file: !11355, line: 113, type: !111)
!11462 = !DILocalVariable(name: "numerator", scope: !11455, file: !11355, line: 115, type: !111)
!11463 = !DILocalVariable(name: "denominator", scope: !11455, file: !11355, line: 116, type: !111)
!11464 = !DILocalVariable(name: "divisor", scope: !11455, file: !11355, line: 117, type: !111)
!11465 = !DILocalVariable(name: "refFreqDiv", scope: !11455, file: !11355, line: 118, type: !111)
!11466 = !DILocalVariable(name: "divider", scope: !11455, file: !11355, line: 119, type: !111)
!11467 = !DILocalVariable(name: "m", scope: !11468, file: !11355, line: 141, type: !111)
!11468 = distinct !DILexicalBlock(scope: !11469, file: !11355, line: 140, column: 5)
!11469 = distinct !DILexicalBlock(scope: !11455, file: !11355, line: 138, column: 9)
!11470 = !DILocalVariable(name: "n", scope: !11468, file: !11355, line: 142, type: !111)
!11471 = !DILocalVariable(name: "max", scope: !11468, file: !11355, line: 143, type: !111)
!11472 = !DILocation(line: 0, scope: !11455)
!11473 = !DILocation(line: 123, column: 28, scope: !11455)
!11474 = !DILocation(line: 126, column: 24, scope: !11455)
!11475 = !DILocation(line: 126, column: 5, scope: !11455)
!11476 = !DILocation(line: 129, column: 33, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11455, file: !11355, line: 127, column: 5)
!11478 = distinct !{!11478, !11475, !11479}
!11479 = !DILocation(line: 131, column: 5, scope: !11455)
!11480 = !DILocation(line: 133, column: 27, scope: !11455)
!11481 = !DILocation(line: 134, column: 35, scope: !11455)
!11482 = !DILocation(line: 138, column: 20, scope: !11469)
!11483 = !DILocation(line: 138, column: 48, scope: !11469)
!11484 = !DILocation(line: 141, column: 33, scope: !11468)
!11485 = !DILocation(line: 141, column: 38, scope: !11468)
!11486 = !DILocation(line: 141, column: 65, scope: !11468)
!11487 = !DILocation(line: 0, scope: !11468)
!11488 = !DILocation(line: 142, column: 35, scope: !11468)
!11489 = !DILocation(line: 142, column: 40, scope: !11468)
!11490 = !DILocation(line: 142, column: 61, scope: !11468)
!11491 = !DILocation(line: 143, column: 26, scope: !11468)
!11492 = !DILocation(line: 143, column: 24, scope: !11468)
!11493 = !DILocation(line: 144, column: 19, scope: !11468)
!11494 = !DILocation(line: 145, column: 21, scope: !11468)
!11495 = !DILocation(line: 146, column: 15, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11468, file: !11355, line: 146, column: 13)
!11497 = !DILocation(line: 146, column: 13, scope: !11468)
!11498 = !DILocation(line: 148, column: 15, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11468, file: !11355, line: 148, column: 13)
!11500 = !DILocation(line: 148, column: 13, scope: !11468)
!11501 = !DILocation(line: 150, column: 5, scope: !11468)
!11502 = !DILocation(line: 151, column: 26, scope: !11455)
!11503 = !DILocation(line: 151, column: 31, scope: !11455)
!11504 = !DILocation(line: 151, column: 52, scope: !11455)
!11505 = !DILocation(line: 153, column: 5, scope: !11455)
!11506 = !DILocation(line: 0, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11455, file: !11355, line: 154, column: 5)
!11508 = !DILocation(line: 180, column: 5, scope: !11455)
!11509 = !DILocation(line: 180, column: 25, scope: !11455)
!11510 = !DILocation(line: 181, column: 25, scope: !11455)
!11511 = !DILocation(line: 182, column: 27, scope: !11455)
!11512 = !DILocation(line: 182, column: 5, scope: !11455)
!11513 = !DILocation(line: 182, column: 25, scope: !11455)
!11514 = !DILocation(line: 183, column: 27, scope: !11455)
!11515 = !DILocation(line: 183, column: 5, scope: !11455)
!11516 = !DILocation(line: 183, column: 25, scope: !11455)
!11517 = !DILocation(line: 184, column: 28, scope: !11455)
!11518 = !DILocation(line: 184, column: 5, scope: !11455)
!11519 = !DILocation(line: 184, column: 26, scope: !11455)
!11520 = !DILocation(line: 185, column: 1, scope: !11455)
!11521 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !11355, file: !11355, line: 194, type: !11522, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11524)
!11522 = !DISubroutineType(types: !11523)
!11523 = !{null, !11358, !111, !122}
!11524 = !{!11525, !11526, !11527}
!11525 = !DILocalVariable(name: "base", arg: 1, scope: !11521, file: !11355, line: 194, type: !11358)
!11526 = !DILocalVariable(name: "direction", arg: 2, scope: !11521, file: !11355, line: 194, type: !111)
!11527 = !DILocalVariable(name: "invert", arg: 3, scope: !11521, file: !11355, line: 194, type: !122)
!11528 = !DILocation(line: 0, scope: !11521)
!11529 = !DILocation(line: 196, column: 5, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !11355, line: 196, column: 5)
!11531 = distinct !DILexicalBlock(scope: !11521, file: !11355, line: 196, column: 5)
!11532 = !DILocation(line: 196, column: 5, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11530, file: !11355, line: 196, column: 5)
!11534 = !DILocation(line: 198, column: 9, scope: !11521)
!11535 = !DILocation(line: 200, column: 13, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11537, file: !11355, line: 199, column: 5)
!11537 = distinct !DILexicalBlock(scope: !11521, file: !11355, line: 198, column: 9)
!11538 = !DILocation(line: 201, column: 13, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11536, file: !11355, line: 200, column: 13)
!11540 = !DILocation(line: 201, column: 33, scope: !11539)
!11541 = !DILocation(line: 202, column: 13, scope: !11536)
!11542 = !DILocation(line: 203, column: 13, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11536, file: !11355, line: 202, column: 13)
!11544 = !DILocation(line: 203, column: 33, scope: !11543)
!11545 = !DILocation(line: 207, column: 13, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11537, file: !11355, line: 206, column: 5)
!11547 = !DILocation(line: 208, column: 13, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11546, file: !11355, line: 207, column: 13)
!11549 = !DILocation(line: 208, column: 33, scope: !11548)
!11550 = !DILocation(line: 209, column: 13, scope: !11546)
!11551 = !DILocation(line: 210, column: 13, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11546, file: !11355, line: 209, column: 13)
!11553 = !DILocation(line: 210, column: 33, scope: !11552)
!11554 = !DILocation(line: 212, column: 1, scope: !11521)
!11555 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !11355, file: !11355, line: 224, type: !11556, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11558)
!11556 = !DISubroutineType(types: !11557)
!11557 = !{null, !11358, !122}
!11558 = !{!11559, !11560}
!11559 = !DILocalVariable(name: "base", arg: 1, scope: !11555, file: !11355, line: 224, type: !11358)
!11560 = !DILocalVariable(name: "enable", arg: 2, scope: !11555, file: !11355, line: 224, type: !122)
!11561 = !DILocation(line: 0, scope: !11555)
!11562 = !DILocation(line: 0, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11555, file: !11355, line: 226, column: 9)
!11564 = !DILocation(line: 226, column: 9, scope: !11555)
!11565 = !DILocation(line: 230, column: 1, scope: !11555)
!11566 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !11355, file: !11355, line: 239, type: !11556, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11567)
!11567 = !{!11568, !11569}
!11568 = !DILocalVariable(name: "base", arg: 1, scope: !11566, file: !11355, line: 239, type: !11358)
!11569 = !DILocalVariable(name: "enable", arg: 2, scope: !11566, file: !11355, line: 239, type: !122)
!11570 = !DILocation(line: 0, scope: !11566)
!11571 = !DILocation(line: 0, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11566, file: !11355, line: 241, column: 9)
!11573 = !DILocation(line: 241, column: 9, scope: !11566)
!11574 = !DILocation(line: 245, column: 1, scope: !11566)
!11575 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !11355, file: !11355, line: 258, type: !11522, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11576)
!11576 = !{!11577, !11578, !11579, !11580, !11581}
!11577 = !DILocalVariable(name: "base", arg: 1, scope: !11575, file: !11355, line: 258, type: !11358)
!11578 = !DILocalVariable(name: "intSource", arg: 2, scope: !11575, file: !11355, line: 258, type: !111)
!11579 = !DILocalVariable(name: "enable", arg: 3, scope: !11575, file: !11355, line: 258, type: !122)
!11580 = !DILocalVariable(name: "uart_reg", scope: !11575, file: !11355, line: 260, type: !1162)
!11581 = !DILocalVariable(name: "uart_mask", scope: !11575, file: !11355, line: 261, type: !111)
!11582 = !DILocation(line: 0, scope: !11575)
!11583 = !DILocation(line: 263, column: 29, scope: !11575)
!11584 = !DILocation(line: 263, column: 57, scope: !11575)
!11585 = !DILocation(line: 263, column: 44, scope: !11575)
!11586 = !DILocation(line: 263, column: 16, scope: !11575)
!11587 = !DILocation(line: 264, column: 34, scope: !11575)
!11588 = !DILocation(line: 264, column: 20, scope: !11575)
!11589 = !DILocation(line: 266, column: 9, scope: !11575)
!11590 = !DILocation(line: 267, column: 19, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11575, file: !11355, line: 266, column: 9)
!11592 = !DILocation(line: 267, column: 9, scope: !11591)
!11593 = !DILocation(line: 269, column: 22, scope: !11591)
!11594 = !DILocation(line: 269, column: 19, scope: !11591)
!11595 = !DILocation(line: 0, scope: !11591)
!11596 = !DILocation(line: 270, column: 1, scope: !11575)
!11597 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !11355, file: !11355, line: 299, type: !11598, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11600)
!11598 = !DISubroutineType(types: !11599)
!11599 = !{null, !11358, !111}
!11600 = !{!11601, !11602, !11603, !11604}
!11601 = !DILocalVariable(name: "base", arg: 1, scope: !11597, file: !11355, line: 299, type: !11358)
!11602 = !DILocalVariable(name: "flag", arg: 2, scope: !11597, file: !11355, line: 299, type: !111)
!11603 = !DILocalVariable(name: "uart_reg", scope: !11597, file: !11355, line: 301, type: !1162)
!11604 = !DILocalVariable(name: "uart_mask", scope: !11597, file: !11355, line: 302, type: !111)
!11605 = !DILocation(line: 0, scope: !11597)
!11606 = !DILocation(line: 304, column: 29, scope: !11597)
!11607 = !DILocation(line: 304, column: 52, scope: !11597)
!11608 = !DILocation(line: 304, column: 44, scope: !11597)
!11609 = !DILocation(line: 304, column: 16, scope: !11597)
!11610 = !DILocation(line: 305, column: 29, scope: !11597)
!11611 = !DILocation(line: 305, column: 20, scope: !11597)
!11612 = !DILocation(line: 308, column: 15, scope: !11597)
!11613 = !DILocation(line: 309, column: 1, scope: !11597)
!11614 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !11355, file: !11355, line: 322, type: !11522, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11615)
!11615 = !{!11616, !11617, !11618, !11619, !11620}
!11616 = !DILocalVariable(name: "base", arg: 1, scope: !11614, file: !11355, line: 322, type: !11358)
!11617 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !11614, file: !11355, line: 322, type: !111)
!11618 = !DILocalVariable(name: "enable", arg: 3, scope: !11614, file: !11355, line: 322, type: !122)
!11619 = !DILocalVariable(name: "uart_reg", scope: !11614, file: !11355, line: 324, type: !1162)
!11620 = !DILocalVariable(name: "uart_mask", scope: !11614, file: !11355, line: 325, type: !111)
!11621 = !DILocation(line: 0, scope: !11614)
!11622 = !DILocation(line: 327, column: 29, scope: !11614)
!11623 = !DILocation(line: 327, column: 57, scope: !11614)
!11624 = !DILocation(line: 327, column: 44, scope: !11614)
!11625 = !DILocation(line: 327, column: 16, scope: !11614)
!11626 = !DILocation(line: 328, column: 34, scope: !11614)
!11627 = !DILocation(line: 328, column: 20, scope: !11614)
!11628 = !DILocation(line: 329, column: 9, scope: !11614)
!11629 = !DILocation(line: 330, column: 19, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11614, file: !11355, line: 329, column: 9)
!11631 = !DILocation(line: 330, column: 9, scope: !11630)
!11632 = !DILocation(line: 332, column: 22, scope: !11630)
!11633 = !DILocation(line: 332, column: 19, scope: !11630)
!11634 = !DILocation(line: 0, scope: !11630)
!11635 = !DILocation(line: 333, column: 1, scope: !11614)
!11636 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !11355, file: !11355, line: 345, type: !11556, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11637)
!11637 = !{!11638, !11639}
!11638 = !DILocalVariable(name: "base", arg: 1, scope: !11636, file: !11355, line: 345, type: !11358)
!11639 = !DILocalVariable(name: "enable", arg: 2, scope: !11636, file: !11355, line: 345, type: !122)
!11640 = !DILocation(line: 0, scope: !11636)
!11641 = !DILocation(line: 0, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11636, file: !11355, line: 347, column: 9)
!11643 = !DILocation(line: 347, column: 9, scope: !11636)
!11644 = !DILocation(line: 351, column: 1, scope: !11636)
!11645 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !11355, file: !11355, line: 362, type: !11556, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11646)
!11646 = !{!11647, !11648}
!11647 = !DILocalVariable(name: "base", arg: 1, scope: !11645, file: !11355, line: 362, type: !11358)
!11648 = !DILocalVariable(name: "enable", arg: 2, scope: !11645, file: !11355, line: 362, type: !122)
!11649 = !DILocation(line: 0, scope: !11645)
!11650 = !DILocation(line: 0, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11645, file: !11355, line: 364, column: 9)
!11652 = !DILocation(line: 364, column: 9, scope: !11645)
!11653 = !DILocation(line: 368, column: 1, scope: !11645)
!11654 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !11355, file: !11355, line: 379, type: !11556, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11655)
!11655 = !{!11656, !11657}
!11656 = !DILocalVariable(name: "base", arg: 1, scope: !11654, file: !11355, line: 379, type: !11358)
!11657 = !DILocalVariable(name: "active", arg: 2, scope: !11654, file: !11355, line: 379, type: !122)
!11658 = !DILocation(line: 0, scope: !11654)
!11659 = !DILocation(line: 0, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11654, file: !11355, line: 381, column: 9)
!11661 = !DILocation(line: 381, column: 9, scope: !11654)
!11662 = !DILocation(line: 385, column: 1, scope: !11654)
!11663 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !11355, file: !11355, line: 394, type: !11598, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11664)
!11664 = !{!11665, !11666}
!11665 = !DILocalVariable(name: "base", arg: 1, scope: !11663, file: !11355, line: 394, type: !11358)
!11666 = !DILocalVariable(name: "mode", arg: 2, scope: !11663, file: !11355, line: 394, type: !111)
!11667 = !DILocation(line: 0, scope: !11663)
!11668 = !DILocation(line: 396, column: 5, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11670, file: !11355, line: 396, column: 5)
!11670 = distinct !DILexicalBlock(scope: !11663, file: !11355, line: 396, column: 5)
!11671 = !DILocation(line: 396, column: 5, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11669, file: !11355, line: 396, column: 5)
!11673 = !DILocation(line: 0, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11663, file: !11355, line: 398, column: 9)
!11675 = !DILocation(line: 398, column: 9, scope: !11663)
!11676 = !DILocation(line: 402, column: 1, scope: !11663)
!11677 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !11355, file: !11355, line: 412, type: !11556, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11678)
!11678 = !{!11679, !11680}
!11679 = !DILocalVariable(name: "base", arg: 1, scope: !11677, file: !11355, line: 412, type: !11358)
!11680 = !DILocalVariable(name: "active", arg: 2, scope: !11677, file: !11355, line: 412, type: !122)
!11681 = !DILocation(line: 0, scope: !11677)
!11682 = !DILocation(line: 0, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11677, file: !11355, line: 414, column: 9)
!11684 = !DILocation(line: 414, column: 9, scope: !11677)
!11685 = !DILocation(line: 418, column: 1, scope: !11677)
!11686 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !11355, file: !11355, line: 427, type: !11556, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11687)
!11687 = !{!11688, !11689}
!11688 = !DILocalVariable(name: "base", arg: 1, scope: !11686, file: !11355, line: 427, type: !11358)
!11689 = !DILocalVariable(name: "active", arg: 2, scope: !11686, file: !11355, line: 427, type: !122)
!11690 = !DILocation(line: 0, scope: !11686)
!11691 = !DILocation(line: 0, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11686, file: !11355, line: 429, column: 9)
!11693 = !DILocation(line: 429, column: 9, scope: !11686)
!11694 = !DILocation(line: 433, column: 1, scope: !11686)
!11695 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !11355, file: !11355, line: 442, type: !11556, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11696)
!11696 = !{!11697, !11698}
!11697 = !DILocalVariable(name: "base", arg: 1, scope: !11695, file: !11355, line: 442, type: !11358)
!11698 = !DILocalVariable(name: "active", arg: 2, scope: !11695, file: !11355, line: 442, type: !122)
!11699 = !DILocation(line: 0, scope: !11695)
!11700 = !DILocation(line: 0, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11695, file: !11355, line: 444, column: 9)
!11702 = !DILocation(line: 444, column: 9, scope: !11695)
!11703 = !DILocation(line: 448, column: 1, scope: !11695)
!11704 = distinct !DISubprogram(name: "UART_Putchar9", scope: !11355, file: !11355, line: 460, type: !11705, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11707)
!11705 = !DISubroutineType(types: !11706)
!11706 = !{null, !11358, !181}
!11707 = !{!11708, !11709}
!11708 = !DILocalVariable(name: "base", arg: 1, scope: !11704, file: !11355, line: 460, type: !11358)
!11709 = !DILocalVariable(name: "data", arg: 2, scope: !11704, file: !11355, line: 460, type: !181)
!11710 = !DILocation(line: 0, scope: !11704)
!11711 = !DILocation(line: 462, column: 5, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11713, file: !11355, line: 462, column: 5)
!11713 = distinct !DILexicalBlock(scope: !11704, file: !11355, line: 462, column: 5)
!11714 = !DILocation(line: 462, column: 5, scope: !11713)
!11715 = !DILocation(line: 462, column: 5, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11712, file: !11355, line: 462, column: 5)
!11717 = !DILocation(line: 0, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11704, file: !11355, line: 464, column: 9)
!11719 = !DILocation(line: 464, column: 9, scope: !11704)
!11720 = !DILocation(line: 468, column: 33, scope: !11704)
!11721 = !DILocation(line: 468, column: 5, scope: !11704)
!11722 = !DILocation(line: 468, column: 25, scope: !11704)
!11723 = !DILocation(line: 469, column: 1, scope: !11704)
!11724 = distinct !DISubprogram(name: "UART_Getchar9", scope: !11355, file: !11355, line: 478, type: !11725, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11727)
!11725 = !DISubroutineType(types: !11726)
!11726 = !{!181, !11358}
!11727 = !{!11728, !11729}
!11728 = !DILocalVariable(name: "base", arg: 1, scope: !11724, file: !11355, line: 478, type: !11358)
!11729 = !DILocalVariable(name: "rxData", scope: !11724, file: !11355, line: 480, type: !181)
!11730 = !DILocation(line: 0, scope: !11724)
!11731 = !DILocation(line: 480, column: 23, scope: !11724)
!11732 = !DILocation(line: 482, column: 9, scope: !11724)
!11733 = !DILocation(line: 491, column: 5, scope: !11724)
!11734 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !11355, file: !11355, line: 501, type: !11556, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11735)
!11735 = !{!11736, !11737}
!11736 = !DILocalVariable(name: "base", arg: 1, scope: !11734, file: !11355, line: 501, type: !11358)
!11737 = !DILocalVariable(name: "enable", arg: 2, scope: !11734, file: !11355, line: 501, type: !122)
!11738 = !DILocation(line: 0, scope: !11734)
!11739 = !DILocation(line: 0, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11734, file: !11355, line: 503, column: 9)
!11741 = !DILocation(line: 503, column: 9, scope: !11734)
!11742 = !DILocation(line: 507, column: 1, scope: !11734)
!11743 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !11355, file: !11355, line: 516, type: !11556, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11744)
!11744 = !{!11745, !11746}
!11745 = !DILocalVariable(name: "base", arg: 1, scope: !11743, file: !11355, line: 516, type: !11358)
!11746 = !DILocalVariable(name: "enable", arg: 2, scope: !11743, file: !11355, line: 516, type: !122)
!11747 = !DILocation(line: 0, scope: !11743)
!11748 = !DILocation(line: 0, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11743, file: !11355, line: 518, column: 9)
!11750 = !DILocation(line: 518, column: 9, scope: !11743)
!11751 = !DILocation(line: 522, column: 1, scope: !11743)
!11752 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !11355, file: !11355, line: 534, type: !11556, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11753)
!11753 = !{!11754, !11755}
!11754 = !DILocalVariable(name: "base", arg: 1, scope: !11752, file: !11355, line: 534, type: !11358)
!11755 = !DILocalVariable(name: "enable", arg: 2, scope: !11752, file: !11355, line: 534, type: !122)
!11756 = !DILocation(line: 0, scope: !11752)
!11757 = !DILocation(line: 0, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11752, file: !11355, line: 536, column: 9)
!11759 = !DILocation(line: 536, column: 9, scope: !11752)
!11760 = !DILocation(line: 540, column: 1, scope: !11752)
!11761 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !11355, file: !11355, line: 550, type: !11598, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11762)
!11762 = !{!11763, !11764}
!11763 = !DILocalVariable(name: "base", arg: 1, scope: !11761, file: !11355, line: 550, type: !11358)
!11764 = !DILocalVariable(name: "voteClock", arg: 2, scope: !11761, file: !11355, line: 550, type: !111)
!11765 = !DILocation(line: 0, scope: !11761)
!11766 = !DILocation(line: 552, column: 5, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11768, file: !11355, line: 552, column: 5)
!11768 = distinct !DILexicalBlock(scope: !11761, file: !11355, line: 552, column: 5)
!11769 = !DILocation(line: 552, column: 5, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11767, file: !11355, line: 552, column: 5)
!11771 = !DILocation(line: 0, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11761, file: !11355, line: 555, column: 9)
!11773 = !DILocation(line: 555, column: 9, scope: !11761)
!11774 = !DILocation(line: 559, column: 1, scope: !11761)
!11775 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !11355, file: !11355, line: 571, type: !11556, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11776)
!11776 = !{!11777, !11778}
!11777 = !DILocalVariable(name: "base", arg: 1, scope: !11775, file: !11355, line: 571, type: !11358)
!11778 = !DILocalVariable(name: "enable", arg: 2, scope: !11775, file: !11355, line: 571, type: !122)
!11779 = !DILocation(line: 0, scope: !11775)
!11780 = !DILocation(line: 0, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11775, file: !11355, line: 573, column: 9)
!11782 = !DILocation(line: 573, column: 9, scope: !11775)
!11783 = !DILocation(line: 577, column: 1, scope: !11775)
!11784 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !11355, file: !11355, line: 587, type: !11556, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11785)
!11785 = !{!11786, !11787}
!11786 = !DILocalVariable(name: "base", arg: 1, scope: !11784, file: !11355, line: 587, type: !11358)
!11787 = !DILocalVariable(name: "active", arg: 2, scope: !11784, file: !11355, line: 587, type: !122)
!11788 = !DILocation(line: 0, scope: !11784)
!11789 = !DILocation(line: 0, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11784, file: !11355, line: 589, column: 9)
!11791 = !DILocation(line: 589, column: 9, scope: !11784)
!11792 = !DILocation(line: 593, column: 1, scope: !11784)
!11793 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !11355, file: !11355, line: 602, type: !11556, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !11794)
!11794 = !{!11795, !11796}
!11795 = !DILocalVariable(name: "base", arg: 1, scope: !11793, file: !11355, line: 602, type: !11358)
!11796 = !DILocalVariable(name: "enable", arg: 2, scope: !11793, file: !11355, line: 602, type: !122)
!11797 = !DILocation(line: 0, scope: !11793)
!11798 = !DILocation(line: 0, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11793, file: !11355, line: 604, column: 9)
!11800 = !DILocation(line: 604, column: 9, scope: !11793)
!11801 = !DILocation(line: 608, column: 1, scope: !11793)
!11802 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !11803, file: !11803, line: 42, type: !11804, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3272, retainedNodes: !11820)
!11803 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11804 = !DISubroutineType(types: !11805)
!11805 = !{!111, !11806}
!11806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11807, size: 32)
!11807 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !1038, line: 20831, baseType: !11808)
!11808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 20820, size: 320, elements: !11809)
!11809 = !{!11810, !11811, !11812, !11813, !11814, !11815, !11816, !11817, !11818, !11819}
!11810 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !11808, file: !1038, line: 20821, baseType: !1042, size: 32)
!11811 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !11808, file: !1038, line: 20822, baseType: !1042, size: 32, offset: 32)
!11812 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !11808, file: !1038, line: 20823, baseType: !1042, size: 32, offset: 64)
!11813 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !11808, file: !1038, line: 20824, baseType: !1042, size: 32, offset: 96)
!11814 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !11808, file: !1038, line: 20825, baseType: !1042, size: 32, offset: 128)
!11815 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !11808, file: !1038, line: 20826, baseType: !1042, size: 32, offset: 160)
!11816 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !11808, file: !1038, line: 20827, baseType: !1042, size: 32, offset: 192)
!11817 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !11808, file: !1038, line: 20828, baseType: !1113, size: 32, offset: 224)
!11818 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !11808, file: !1038, line: 20829, baseType: !1113, size: 32, offset: 256)
!11819 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !11808, file: !1038, line: 20830, baseType: !1113, size: 32, offset: 288)
!11820 = !{!11821, !11822, !11823, !11824, !11825}
!11821 = !DILocalVariable(name: "base", arg: 1, scope: !11802, file: !11803, line: 42, type: !11806)
!11822 = !DILocalVariable(name: "root", scope: !11802, file: !11803, line: 44, type: !111)
!11823 = !DILocalVariable(name: "hz", scope: !11802, file: !11803, line: 45, type: !111)
!11824 = !DILocalVariable(name: "pre", scope: !11802, file: !11803, line: 46, type: !111)
!11825 = !DILocalVariable(name: "post", scope: !11802, file: !11803, line: 46, type: !111)
!11826 = !DILocation(line: 0, scope: !11802)
!11827 = !DILocation(line: 46, column: 2, scope: !11802)
!11828 = !DILocation(line: 48, column: 10, scope: !11802)
!11829 = !DILocation(line: 48, column: 2, scope: !11802)
!11830 = !DILocation(line: 56, column: 3, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11802, file: !11803, line: 48, column: 26)
!11832 = !DILocation(line: 0, scope: !11831)
!11833 = !DILocation(line: 61, column: 2, scope: !11802)
!11834 = !DILocation(line: 66, column: 8, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11802, file: !11803, line: 61, column: 16)
!11836 = !DILocation(line: 67, column: 3, scope: !11835)
!11837 = !DILocation(line: 0, scope: !11835)
!11838 = !DILocation(line: 72, column: 15, scope: !11802)
!11839 = !DILocation(line: 72, column: 19, scope: !11802)
!11840 = !DILocation(line: 72, column: 12, scope: !11802)
!11841 = !DILocation(line: 72, column: 27, scope: !11802)
!11842 = !DILocation(line: 72, column: 32, scope: !11802)
!11843 = !DILocation(line: 72, column: 24, scope: !11802)
!11844 = !DILocation(line: 72, column: 2, scope: !11802)
!11845 = !DILocation(line: 73, column: 1, scope: !11802)
!11846 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !754, file: !754, line: 368, type: !11847, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3272, retainedNodes: !11849)
!11847 = !DISubroutineType(types: !11848)
!11848 = !{!111, !3286, !111}
!11849 = !{!11850, !11851}
!11850 = !DILocalVariable(name: "base", arg: 1, scope: !11846, file: !754, line: 368, type: !3286)
!11851 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11846, file: !754, line: 368, type: !111)
!11852 = !DILocation(line: 0, scope: !11846)
!11853 = !DILocation(line: 370, column: 13, scope: !11846)
!11854 = !DILocation(line: 370, column: 58, scope: !11846)
!11855 = !DILocation(line: 370, column: 5, scope: !11846)
!11856 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !11803, file: !11803, line: 81, type: !11857, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3272, retainedNodes: !11877)
!11857 = !DISubroutineType(types: !11858)
!11858 = !{!111, !11859}
!11859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11860, size: 32)
!11860 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !1038, line: 12462, baseType: !11861)
!11861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 12450, size: 544, elements: !11862)
!11862 = !{!11863, !11864, !11865, !11866, !11867, !11868, !11869, !11870, !11871, !11872, !11876}
!11863 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !11861, file: !1038, line: 12451, baseType: !1113, size: 32)
!11864 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !11861, file: !1038, line: 12452, baseType: !1042, size: 32, offset: 32)
!11865 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !11861, file: !1038, line: 12453, baseType: !1042, size: 32, offset: 64)
!11866 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !11861, file: !1038, line: 12454, baseType: !1042, size: 32, offset: 96)
!11867 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !11861, file: !1038, line: 12455, baseType: !1042, size: 32, offset: 128)
!11868 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !11861, file: !1038, line: 12456, baseType: !1042, size: 32, offset: 160)
!11869 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !11861, file: !1038, line: 12457, baseType: !1042, size: 32, offset: 192)
!11870 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !11861, file: !1038, line: 12458, baseType: !1042, size: 32, offset: 224)
!11871 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !11861, file: !1038, line: 12459, baseType: !1042, size: 32, offset: 256)
!11872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11861, file: !1038, line: 12460, baseType: !11873, size: 224, offset: 288)
!11873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 224, elements: !11874)
!11874 = !{!11875}
!11875 = !DISubrange(count: 28)
!11876 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !11861, file: !1038, line: 12461, baseType: !1042, size: 32, offset: 512)
!11877 = !{!11878, !11879, !11880, !11881, !11882}
!11878 = !DILocalVariable(name: "base", arg: 1, scope: !11856, file: !11803, line: 81, type: !11859)
!11879 = !DILocalVariable(name: "root", scope: !11856, file: !11803, line: 83, type: !111)
!11880 = !DILocalVariable(name: "hz", scope: !11856, file: !11803, line: 84, type: !111)
!11881 = !DILocalVariable(name: "pre", scope: !11856, file: !11803, line: 85, type: !111)
!11882 = !DILocalVariable(name: "post", scope: !11856, file: !11803, line: 85, type: !111)
!11883 = !DILocation(line: 0, scope: !11856)
!11884 = !DILocation(line: 85, column: 2, scope: !11856)
!11885 = !DILocation(line: 87, column: 10, scope: !11856)
!11886 = !DILocation(line: 87, column: 2, scope: !11856)
!11887 = !DILocation(line: 95, column: 3, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11856, file: !11803, line: 87, column: 26)
!11889 = !DILocation(line: 0, scope: !11888)
!11890 = !DILocation(line: 100, column: 2, scope: !11856)
!11891 = !DILocation(line: 105, column: 8, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11856, file: !11803, line: 100, column: 16)
!11893 = !DILocation(line: 106, column: 3, scope: !11892)
!11894 = !DILocation(line: 0, scope: !11892)
!11895 = !DILocation(line: 111, column: 15, scope: !11856)
!11896 = !DILocation(line: 111, column: 19, scope: !11856)
!11897 = !DILocation(line: 111, column: 12, scope: !11856)
!11898 = !DILocation(line: 111, column: 27, scope: !11856)
!11899 = !DILocation(line: 111, column: 32, scope: !11856)
!11900 = !DILocation(line: 111, column: 24, scope: !11856)
!11901 = !DILocation(line: 111, column: 2, scope: !11856)
!11902 = !DILocation(line: 112, column: 1, scope: !11856)
!11903 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !11803, file: !11803, line: 120, type: !11904, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3272, retainedNodes: !11948)
!11904 = !DISubroutineType(types: !11905)
!11905 = !{!111, !11906}
!11906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11907, size: 32)
!11907 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !1038, line: 3477, baseType: !11908)
!11908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 3446, size: 20256, elements: !11909)
!11909 = !{!11910, !11911, !11912, !11913, !11915, !11916, !11917, !11918, !11919, !11920, !11921, !11922, !11923, !11924, !11925, !11926, !11928, !11929, !11930, !11931, !11932, !11942, !11944, !11946, !11947}
!11910 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !11908, file: !1038, line: 3447, baseType: !1042, size: 32)
!11911 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !11908, file: !1038, line: 3448, baseType: !1042, size: 32, offset: 32)
!11912 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !11908, file: !1038, line: 3449, baseType: !1042, size: 32, offset: 64)
!11913 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11908, file: !1038, line: 3450, baseType: !11914, size: 32, offset: 96)
!11914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 32, elements: !1992)
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !11908, file: !1038, line: 3451, baseType: !1042, size: 32, offset: 128)
!11916 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !11908, file: !1038, line: 3452, baseType: !1042, size: 32, offset: 160)
!11917 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !11908, file: !1038, line: 3453, baseType: !1042, size: 32, offset: 192)
!11918 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !11908, file: !1038, line: 3454, baseType: !1042, size: 32, offset: 224)
!11919 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !11908, file: !1038, line: 3455, baseType: !1042, size: 32, offset: 256)
!11920 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !11908, file: !1038, line: 3456, baseType: !1042, size: 32, offset: 288)
!11921 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !11908, file: !1038, line: 3457, baseType: !1042, size: 32, offset: 320)
!11922 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !11908, file: !1038, line: 3458, baseType: !1042, size: 32, offset: 352)
!11923 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !11908, file: !1038, line: 3459, baseType: !1042, size: 32, offset: 384)
!11924 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !11908, file: !1038, line: 3460, baseType: !1042, size: 32, offset: 416)
!11925 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !11908, file: !1038, line: 3461, baseType: !1113, size: 32, offset: 448)
!11926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11908, file: !1038, line: 3462, baseType: !11927, size: 64, offset: 480)
!11927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 64, elements: !1938)
!11928 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !11908, file: !1038, line: 3463, baseType: !1113, size: 32, offset: 544)
!11929 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !11908, file: !1038, line: 3464, baseType: !1042, size: 32, offset: 576)
!11930 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !11908, file: !1038, line: 3465, baseType: !1113, size: 32, offset: 608)
!11931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !11908, file: !1038, line: 3466, baseType: !1099, size: 384, offset: 640)
!11932 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !11908, file: !1038, line: 3472, baseType: !11933, size: 8192, offset: 1024)
!11933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11934, size: 8192, elements: !11940)
!11934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11908, file: !1038, line: 3467, size: 128, elements: !11935)
!11935 = !{!11936, !11937, !11938, !11939}
!11936 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !11934, file: !1038, line: 3468, baseType: !1042, size: 32)
!11937 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !11934, file: !1038, line: 3469, baseType: !1042, size: 32, offset: 32)
!11938 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !11934, file: !1038, line: 3470, baseType: !1042, size: 32, offset: 64)
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !11934, file: !1038, line: 3471, baseType: !1042, size: 32, offset: 96)
!11940 = !{!11941}
!11941 = !DISubrange(count: 64)
!11942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !11908, file: !1038, line: 3473, baseType: !11943, size: 8192, offset: 9216)
!11943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 8192, elements: !332)
!11944 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !11908, file: !1038, line: 3474, baseType: !11945, size: 2048, offset: 17408)
!11945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 2048, elements: !11940)
!11946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !11908, file: !1038, line: 3475, baseType: !3187, size: 768, offset: 19456)
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !11908, file: !1038, line: 3476, baseType: !1042, size: 32, offset: 20224)
!11948 = !{!11949, !11950, !11951, !11952, !11953}
!11949 = !DILocalVariable(name: "base", arg: 1, scope: !11903, file: !11803, line: 120, type: !11906)
!11950 = !DILocalVariable(name: "root", scope: !11903, file: !11803, line: 122, type: !111)
!11951 = !DILocalVariable(name: "hz", scope: !11903, file: !11803, line: 123, type: !111)
!11952 = !DILocalVariable(name: "pre", scope: !11903, file: !11803, line: 124, type: !111)
!11953 = !DILocalVariable(name: "post", scope: !11903, file: !11803, line: 124, type: !111)
!11954 = !DILocation(line: 0, scope: !11903)
!11955 = !DILocation(line: 124, column: 2, scope: !11903)
!11956 = !DILocation(line: 126, column: 10, scope: !11903)
!11957 = !DILocation(line: 126, column: 2, scope: !11903)
!11958 = !DILocation(line: 134, column: 3, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11903, file: !11803, line: 126, column: 26)
!11960 = !DILocation(line: 0, scope: !11959)
!11961 = !DILocation(line: 139, column: 2, scope: !11903)
!11962 = !DILocation(line: 144, column: 8, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11903, file: !11803, line: 139, column: 16)
!11964 = !DILocation(line: 144, column: 45, scope: !11963)
!11965 = !DILocation(line: 145, column: 3, scope: !11963)
!11966 = !DILocation(line: 147, column: 8, scope: !11963)
!11967 = !DILocation(line: 148, column: 3, scope: !11963)
!11968 = !DILocation(line: 0, scope: !11963)
!11969 = !DILocation(line: 153, column: 15, scope: !11903)
!11970 = !DILocation(line: 153, column: 19, scope: !11903)
!11971 = !DILocation(line: 153, column: 12, scope: !11903)
!11972 = !DILocation(line: 153, column: 27, scope: !11903)
!11973 = !DILocation(line: 153, column: 32, scope: !11903)
!11974 = !DILocation(line: 153, column: 24, scope: !11903)
!11975 = !DILocation(line: 153, column: 2, scope: !11903)
!11976 = !DILocation(line: 154, column: 1, scope: !11903)
!11977 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !11803, file: !11803, line: 162, type: !11978, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3272, retainedNodes: !11994)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{!111, !11980}
!11980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11981, size: 32)
!11981 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !1038, line: 21082, baseType: !11982)
!11982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 21072, size: 144, elements: !11983)
!11983 = !{!11984, !11985, !11987, !11988, !11989, !11990, !11991, !11992, !11993}
!11984 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !11982, file: !1038, line: 21073, baseType: !1156, size: 16)
!11985 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11982, file: !1038, line: 21074, baseType: !11986, size: 16, offset: 16)
!11986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 16, elements: !216)
!11987 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !11982, file: !1038, line: 21075, baseType: !1156, size: 16, offset: 32)
!11988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11982, file: !1038, line: 21076, baseType: !11986, size: 16, offset: 48)
!11989 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !11982, file: !1038, line: 21077, baseType: !1156, size: 16, offset: 64)
!11990 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !11982, file: !1038, line: 21078, baseType: !11986, size: 16, offset: 80)
!11991 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !11982, file: !1038, line: 21079, baseType: !1156, size: 16, offset: 96)
!11992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !11982, file: !1038, line: 21080, baseType: !11986, size: 16, offset: 112)
!11993 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !11982, file: !1038, line: 21081, baseType: !1156, size: 16, offset: 128)
!11994 = !{!11995, !11996, !11997, !11998, !11999}
!11995 = !DILocalVariable(name: "base", arg: 1, scope: !11977, file: !11803, line: 162, type: !11980)
!11996 = !DILocalVariable(name: "root", scope: !11977, file: !11803, line: 164, type: !111)
!11997 = !DILocalVariable(name: "hz", scope: !11977, file: !11803, line: 165, type: !111)
!11998 = !DILocalVariable(name: "pre", scope: !11977, file: !11803, line: 166, type: !111)
!11999 = !DILocalVariable(name: "post", scope: !11977, file: !11803, line: 166, type: !111)
!12000 = !DILocation(line: 0, scope: !11977)
!12001 = !DILocation(line: 166, column: 2, scope: !11977)
!12002 = !DILocation(line: 168, column: 10, scope: !11977)
!12003 = !DILocation(line: 168, column: 2, scope: !11977)
!12004 = !DILocation(line: 0, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11977, file: !11803, line: 168, column: 26)
!12006 = !DILocation(line: 189, column: 2, scope: !11977)
!12007 = !DILocation(line: 194, column: 8, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !11977, file: !11803, line: 189, column: 16)
!12009 = !DILocation(line: 194, column: 45, scope: !12008)
!12010 = !DILocation(line: 195, column: 3, scope: !12008)
!12011 = !DILocation(line: 0, scope: !12008)
!12012 = !DILocation(line: 200, column: 15, scope: !11977)
!12013 = !DILocation(line: 200, column: 19, scope: !11977)
!12014 = !DILocation(line: 200, column: 12, scope: !11977)
!12015 = !DILocation(line: 200, column: 27, scope: !11977)
!12016 = !DILocation(line: 200, column: 32, scope: !11977)
!12017 = !DILocation(line: 200, column: 24, scope: !11977)
!12018 = !DILocation(line: 200, column: 2, scope: !11977)
!12019 = !DILocation(line: 201, column: 1, scope: !11977)
!12020 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !11803, file: !11803, line: 209, type: !12021, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3272, retainedNodes: !12046)
!12021 = !DISubroutineType(types: !12022)
!12022 = !{!111, !12023}
!12023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12024, size: 32)
!12024 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !1038, line: 41342, baseType: !12025)
!12025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 41322, size: 1504, elements: !12026)
!12026 = !{!12027, !12028, !12029, !12030, !12031, !12032, !12033, !12034, !12035, !12036, !12037, !12038, !12039, !12040, !12041, !12042, !12043, !12044, !12045}
!12027 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !12025, file: !1038, line: 41323, baseType: !1113, size: 32)
!12028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12025, file: !1038, line: 41324, baseType: !1674, size: 480, offset: 32)
!12029 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !12025, file: !1038, line: 41325, baseType: !1042, size: 32, offset: 512)
!12030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !12025, file: !1038, line: 41326, baseType: !1674, size: 480, offset: 544)
!12031 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !12025, file: !1038, line: 41327, baseType: !1042, size: 32, offset: 1024)
!12032 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !12025, file: !1038, line: 41328, baseType: !1042, size: 32, offset: 1056)
!12033 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !12025, file: !1038, line: 41329, baseType: !1042, size: 32, offset: 1088)
!12034 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !12025, file: !1038, line: 41330, baseType: !1042, size: 32, offset: 1120)
!12035 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !12025, file: !1038, line: 41331, baseType: !1042, size: 32, offset: 1152)
!12036 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !12025, file: !1038, line: 41332, baseType: !1042, size: 32, offset: 1184)
!12037 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !12025, file: !1038, line: 41333, baseType: !1042, size: 32, offset: 1216)
!12038 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !12025, file: !1038, line: 41334, baseType: !1042, size: 32, offset: 1248)
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !12025, file: !1038, line: 41335, baseType: !1042, size: 32, offset: 1280)
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !12025, file: !1038, line: 41336, baseType: !1042, size: 32, offset: 1312)
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !12025, file: !1038, line: 41337, baseType: !1042, size: 32, offset: 1344)
!12042 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !12025, file: !1038, line: 41338, baseType: !1113, size: 32, offset: 1376)
!12043 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !12025, file: !1038, line: 41339, baseType: !1042, size: 32, offset: 1408)
!12044 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !12025, file: !1038, line: 41340, baseType: !1042, size: 32, offset: 1440)
!12045 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !12025, file: !1038, line: 41341, baseType: !1042, size: 32, offset: 1472)
!12046 = !{!12047, !12048, !12049, !12050, !12051}
!12047 = !DILocalVariable(name: "base", arg: 1, scope: !12020, file: !11803, line: 209, type: !12023)
!12048 = !DILocalVariable(name: "root", scope: !12020, file: !11803, line: 211, type: !111)
!12049 = !DILocalVariable(name: "hz", scope: !12020, file: !11803, line: 212, type: !111)
!12050 = !DILocalVariable(name: "pre", scope: !12020, file: !11803, line: 213, type: !111)
!12051 = !DILocalVariable(name: "post", scope: !12020, file: !11803, line: 213, type: !111)
!12052 = !DILocation(line: 0, scope: !12020)
!12053 = !DILocation(line: 213, column: 2, scope: !12020)
!12054 = !DILocation(line: 215, column: 10, scope: !12020)
!12055 = !DILocation(line: 215, column: 2, scope: !12020)
!12056 = !DILocation(line: 223, column: 3, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12020, file: !11803, line: 215, column: 26)
!12058 = !DILocation(line: 227, column: 3, scope: !12057)
!12059 = !DILocation(line: 231, column: 3, scope: !12057)
!12060 = !DILocation(line: 235, column: 3, scope: !12057)
!12061 = !DILocation(line: 239, column: 3, scope: !12057)
!12062 = !DILocation(line: 243, column: 3, scope: !12057)
!12063 = !DILocation(line: 0, scope: !12057)
!12064 = !DILocation(line: 248, column: 2, scope: !12020)
!12065 = !DILocation(line: 253, column: 8, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12020, file: !11803, line: 248, column: 16)
!12067 = !DILocation(line: 253, column: 45, scope: !12066)
!12068 = !DILocation(line: 254, column: 3, scope: !12066)
!12069 = !DILocation(line: 256, column: 8, scope: !12066)
!12070 = !DILocation(line: 257, column: 3, scope: !12066)
!12071 = !DILocation(line: 0, scope: !12066)
!12072 = !DILocation(line: 262, column: 15, scope: !12020)
!12073 = !DILocation(line: 262, column: 19, scope: !12020)
!12074 = !DILocation(line: 262, column: 12, scope: !12020)
!12075 = !DILocation(line: 262, column: 27, scope: !12020)
!12076 = !DILocation(line: 262, column: 32, scope: !12020)
!12077 = !DILocation(line: 262, column: 24, scope: !12020)
!12078 = !DILocation(line: 262, column: 2, scope: !12020)
!12079 = !DILocation(line: 263, column: 1, scope: !12020)
!12080 = distinct !DISubprogram(name: "z_device_state_init", scope: !12081, file: !12081, line: 23, type: !317, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3397, retainedNodes: !12082)
!12081 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12082 = !{!12083}
!12083 = !DILocalVariable(name: "dev", scope: !12080, file: !12081, line: 25, type: !12084)
!12084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12085, size: 32)
!12085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12086)
!12086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1216, line: 378, size: 192, elements: !12087)
!12087 = !{!12088, !12089, !12090, !12091, !12097, !12098}
!12088 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12086, file: !1216, line: 380, baseType: !108, size: 32)
!12089 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12086, file: !1216, line: 382, baseType: !13, size: 32, offset: 32)
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12086, file: !1216, line: 384, baseType: !13, size: 32, offset: 64)
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12086, file: !1216, line: 386, baseType: !12092, size: 32, offset: 96)
!12092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12093, size: 32)
!12093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1216, line: 351, size: 16, elements: !12094)
!12094 = !{!12095, !12096}
!12095 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12093, file: !1216, line: 359, baseType: !166, size: 8)
!12096 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12093, file: !1216, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12097 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12086, file: !1216, line: 388, baseType: !102, size: 32, offset: 128)
!12098 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12086, file: !1216, line: 396, baseType: !1229, size: 32, offset: 160)
!12099 = !DILocation(line: 0, scope: !12080)
!12100 = !DILocation(line: 31, column: 1, scope: !12080)
!12101 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12081, file: !12081, line: 33, type: !12102, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3397, retainedNodes: !12104)
!12102 = !DISubroutineType(types: !12103)
!12103 = !{!12084, !108}
!12104 = !{!12105, !12106}
!12105 = !DILocalVariable(name: "name", arg: 1, scope: !12101, file: !12081, line: 33, type: !108)
!12106 = !DILocalVariable(name: "dev", scope: !12101, file: !12081, line: 35, type: !12084)
!12107 = !DILocation(line: 0, scope: !12101)
!12108 = !DILocation(line: 40, column: 12, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12101, file: !12081, line: 40, column: 6)
!12110 = !DILocation(line: 40, column: 21, scope: !12109)
!12111 = !DILocation(line: 40, column: 25, scope: !12109)
!12112 = !DILocation(line: 40, column: 33, scope: !12109)
!12113 = !DILocation(line: 40, column: 6, scope: !12101)
!12114 = !DILocation(line: 55, column: 2, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12101, file: !12081, line: 55, column: 2)
!12116 = !DILocation(line: 50, column: 7, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12118, file: !12081, line: 50, column: 7)
!12118 = distinct !DILexicalBlock(scope: !12119, file: !12081, line: 49, column: 57)
!12119 = distinct !DILexicalBlock(scope: !12120, file: !12081, line: 49, column: 2)
!12120 = distinct !DILexicalBlock(scope: !12101, file: !12081, line: 49, column: 2)
!12121 = !DILocation(line: 50, column: 30, scope: !12117)
!12122 = !DILocation(line: 50, column: 39, scope: !12117)
!12123 = !DILocation(line: 50, column: 44, scope: !12117)
!12124 = !DILocation(line: 50, column: 7, scope: !12118)
!12125 = !DILocation(line: 49, column: 53, scope: !12119)
!12126 = !DILocation(line: 49, column: 33, scope: !12119)
!12127 = !DILocation(line: 49, column: 2, scope: !12120)
!12128 = distinct !{!12128, !12127, !12129}
!12129 = !DILocation(line: 53, column: 2, scope: !12120)
!12130 = !DILocation(line: 56, column: 7, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12132, file: !12081, line: 56, column: 7)
!12132 = distinct !DILexicalBlock(scope: !12133, file: !12081, line: 55, column: 57)
!12133 = distinct !DILexicalBlock(scope: !12115, file: !12081, line: 55, column: 2)
!12134 = !DILocation(line: 56, column: 30, scope: !12131)
!12135 = !DILocation(line: 56, column: 52, scope: !12131)
!12136 = !DILocation(line: 56, column: 34, scope: !12131)
!12137 = !DILocation(line: 56, column: 58, scope: !12131)
!12138 = !DILocation(line: 56, column: 7, scope: !12132)
!12139 = !DILocation(line: 55, column: 53, scope: !12133)
!12140 = !DILocation(line: 55, column: 33, scope: !12133)
!12141 = distinct !{!12141, !12114, !12142}
!12142 = !DILocation(line: 59, column: 2, scope: !12115)
!12143 = !DILocation(line: 62, column: 1, scope: !12101)
!12144 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12081, file: !12081, line: 93, type: !12145, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3397, retainedNodes: !12147)
!12145 = !DISubroutineType(types: !12146)
!12146 = !{!122, !12084}
!12147 = !{!12148}
!12148 = !DILocalVariable(name: "dev", arg: 1, scope: !12144, file: !12081, line: 93, type: !12084)
!12149 = !DILocation(line: 0, scope: !12144)
!12150 = !DILocation(line: 99, column: 10, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12144, file: !12081, line: 99, column: 6)
!12152 = !DILocation(line: 99, column: 6, scope: !12144)
!12153 = !DILocation(line: 103, column: 14, scope: !12144)
!12154 = !DILocation(line: 103, column: 21, scope: !12144)
!12155 = !DILocation(line: 103, column: 33, scope: !12144)
!12156 = !DILocation(line: 103, column: 49, scope: !12144)
!12157 = !DILocation(line: 103, column: 58, scope: !12144)
!12158 = !DILocation(line: 104, column: 1, scope: !12144)
!12159 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12081, file: !12081, line: 87, type: !12160, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3397, retainedNodes: !12163)
!12160 = !DISubroutineType(types: !12161)
!12161 = !{!156, !12162}
!12162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12084, size: 32)
!12163 = !{!12164}
!12164 = !DILocalVariable(name: "devices", arg: 1, scope: !12159, file: !12081, line: 87, type: !12162)
!12165 = !DILocation(line: 0, scope: !12159)
!12166 = !DILocation(line: 89, column: 11, scope: !12159)
!12167 = !DILocation(line: 90, column: 2, scope: !12159)
!12168 = distinct !DISubprogram(name: "device_required_foreach", scope: !12081, file: !12081, line: 125, type: !12169, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3397, retainedNodes: !12175)
!12169 = !DISubroutineType(types: !12170)
!12170 = !{!103, !12084, !12171, !102}
!12171 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !1216, line: 471, baseType: !12172)
!12172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12173, size: 32)
!12173 = !DISubroutineType(types: !12174)
!12174 = !{!103, !12084, !102}
!12175 = !{!12176, !12177, !12178, !12179, !12180}
!12176 = !DILocalVariable(name: "dev", arg: 1, scope: !12168, file: !12081, line: 125, type: !12084)
!12177 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12168, file: !12081, line: 126, type: !12171)
!12178 = !DILocalVariable(name: "context", arg: 3, scope: !12168, file: !12081, line: 127, type: !102)
!12179 = !DILocalVariable(name: "handle_count", scope: !12168, file: !12081, line: 129, type: !156)
!12180 = !DILocalVariable(name: "handles", scope: !12168, file: !12081, line: 130, type: !1229)
!12181 = !DILocation(line: 0, scope: !12168)
!12182 = !DILocation(line: 129, column: 2, scope: !12168)
!12183 = !DILocation(line: 129, column: 9, scope: !12168)
!12184 = !DILocation(line: 130, column: 35, scope: !12168)
!12185 = !DILocation(line: 132, column: 33, scope: !12168)
!12186 = !DILocation(line: 132, column: 9, scope: !12168)
!12187 = !DILocation(line: 133, column: 1, scope: !12168)
!12188 = !DILocation(line: 132, column: 2, scope: !12168)
!12189 = distinct !DISubprogram(name: "device_required_handles_get", scope: !1216, file: !1216, line: 493, type: !12190, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3397, retainedNodes: !12192)
!12190 = !DISubroutineType(types: !12191)
!12191 = !{!1229, !12084, !2846}
!12192 = !{!12193, !12194, !12195, !12196}
!12193 = !DILocalVariable(name: "dev", arg: 1, scope: !12189, file: !1216, line: 493, type: !12084)
!12194 = !DILocalVariable(name: "count", arg: 2, scope: !12189, file: !1216, line: 493, type: !2846)
!12195 = !DILocalVariable(name: "rv", scope: !12189, file: !1216, line: 495, type: !1229)
!12196 = !DILocalVariable(name: "i", scope: !12197, file: !1216, line: 498, type: !156)
!12197 = distinct !DILexicalBlock(scope: !12198, file: !1216, line: 497, column: 18)
!12198 = distinct !DILexicalBlock(scope: !12189, file: !1216, line: 497, column: 6)
!12199 = !DILocation(line: 0, scope: !12189)
!12200 = !DILocation(line: 495, column: 35, scope: !12189)
!12201 = !DILocation(line: 497, column: 9, scope: !12198)
!12202 = !DILocation(line: 497, column: 6, scope: !12189)
!12203 = !DILocation(line: 0, scope: !12197)
!12204 = !DILocation(line: 500, column: 11, scope: !12197)
!12205 = !DILocation(line: 500, column: 40, scope: !12197)
!12206 = !DILocation(line: 502, column: 4, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12197, file: !1216, line: 501, column: 40)
!12208 = distinct !{!12208, !12209, !12210}
!12209 = !DILocation(line: 500, column: 3, scope: !12197)
!12210 = !DILocation(line: 503, column: 3, scope: !12197)
!12211 = !DILocation(line: 504, column: 10, scope: !12197)
!12212 = !DILocation(line: 505, column: 2, scope: !12197)
!12213 = !DILocation(line: 507, column: 2, scope: !12189)
!12214 = distinct !DISubprogram(name: "device_visitor", scope: !12081, file: !12081, line: 106, type: !12215, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3397, retainedNodes: !12217)
!12215 = !DISubroutineType(types: !12216)
!12216 = !{!103, !1229, !156, !12171, !102}
!12217 = !{!12218, !12219, !12220, !12221, !12222, !12224, !12227, !12228}
!12218 = !DILocalVariable(name: "handles", arg: 1, scope: !12214, file: !12081, line: 106, type: !1229)
!12219 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12214, file: !12081, line: 107, type: !156)
!12220 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12214, file: !12081, line: 108, type: !12171)
!12221 = !DILocalVariable(name: "context", arg: 4, scope: !12214, file: !12081, line: 109, type: !102)
!12222 = !DILocalVariable(name: "i", scope: !12223, file: !12081, line: 112, type: !156)
!12223 = distinct !DILexicalBlock(scope: !12214, file: !12081, line: 112, column: 2)
!12224 = !DILocalVariable(name: "dh", scope: !12225, file: !12081, line: 113, type: !1231)
!12225 = distinct !DILexicalBlock(scope: !12226, file: !12081, line: 112, column: 44)
!12226 = distinct !DILexicalBlock(scope: !12223, file: !12081, line: 112, column: 2)
!12227 = !DILocalVariable(name: "rdev", scope: !12225, file: !12081, line: 114, type: !12084)
!12228 = !DILocalVariable(name: "rc", scope: !12225, file: !12081, line: 115, type: !103)
!12229 = !DILocation(line: 0, scope: !12214)
!12230 = !DILocation(line: 0, scope: !12223)
!12231 = !DILocation(line: 112, column: 23, scope: !12226)
!12232 = !DILocation(line: 112, column: 2, scope: !12223)
!12233 = distinct !{!12233, !12232, !12234}
!12234 = !DILocation(line: 120, column: 2, scope: !12223)
!12235 = !DILocation(line: 113, column: 24, scope: !12225)
!12236 = !DILocation(line: 0, scope: !12225)
!12237 = !DILocation(line: 114, column: 31, scope: !12225)
!12238 = !DILocation(line: 115, column: 12, scope: !12225)
!12239 = !DILocation(line: 117, column: 10, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12225, file: !12081, line: 117, column: 7)
!12241 = !DILocation(line: 112, column: 39, scope: !12226)
!12242 = !DILocation(line: 123, column: 1, scope: !12214)
!12243 = distinct !DISubprogram(name: "device_from_handle", scope: !1216, file: !1216, line: 439, type: !12244, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3397, retainedNodes: !12246)
!12244 = !DISubroutineType(types: !12245)
!12245 = !{!12084, !1231}
!12246 = !{!12247, !12248, !12249}
!12247 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12243, file: !1216, line: 439, type: !1231)
!12248 = !DILocalVariable(name: "dev", scope: !12243, file: !1216, line: 443, type: !12084)
!12249 = !DILocalVariable(name: "numdev", scope: !12243, file: !1216, line: 444, type: !156)
!12250 = !DILocation(line: 0, scope: !12243)
!12251 = !DILocation(line: 446, column: 7, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12243, file: !1216, line: 446, column: 6)
!12253 = !DILocation(line: 446, column: 18, scope: !12252)
!12254 = !DILocation(line: 446, column: 23, scope: !12252)
!12255 = !DILocation(line: 450, column: 2, scope: !12243)
!12256 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12081, file: !12081, line: 135, type: !12169, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3397, retainedNodes: !12257)
!12257 = !{!12258, !12259, !12260, !12261, !12262}
!12258 = !DILocalVariable(name: "dev", arg: 1, scope: !12256, file: !12081, line: 135, type: !12084)
!12259 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12256, file: !12081, line: 136, type: !12171)
!12260 = !DILocalVariable(name: "context", arg: 3, scope: !12256, file: !12081, line: 137, type: !102)
!12261 = !DILocalVariable(name: "handle_count", scope: !12256, file: !12081, line: 139, type: !156)
!12262 = !DILocalVariable(name: "handles", scope: !12256, file: !12081, line: 140, type: !1229)
!12263 = !DILocation(line: 0, scope: !12256)
!12264 = !DILocation(line: 139, column: 2, scope: !12256)
!12265 = !DILocation(line: 139, column: 9, scope: !12256)
!12266 = !DILocation(line: 140, column: 35, scope: !12256)
!12267 = !DILocation(line: 142, column: 33, scope: !12256)
!12268 = !DILocation(line: 142, column: 9, scope: !12256)
!12269 = !DILocation(line: 143, column: 1, scope: !12256)
!12270 = !DILocation(line: 142, column: 2, scope: !12256)
!12271 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !1216, file: !1216, line: 573, type: !12190, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3397, retainedNodes: !12272)
!12272 = !{!12273, !12274, !12275, !12276, !12277}
!12273 = !DILocalVariable(name: "dev", arg: 1, scope: !12271, file: !1216, line: 573, type: !12084)
!12274 = !DILocalVariable(name: "count", arg: 2, scope: !12271, file: !1216, line: 573, type: !2846)
!12275 = !DILocalVariable(name: "rv", scope: !12271, file: !1216, line: 575, type: !1229)
!12276 = !DILocalVariable(name: "region", scope: !12271, file: !1216, line: 576, type: !156)
!12277 = !DILocalVariable(name: "i", scope: !12271, file: !1216, line: 577, type: !156)
!12278 = !DILocation(line: 0, scope: !12271)
!12279 = !DILocation(line: 575, column: 35, scope: !12271)
!12280 = !DILocation(line: 579, column: 9, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12271, file: !1216, line: 579, column: 6)
!12282 = !DILocation(line: 579, column: 6, scope: !12271)
!12283 = !DILocation(line: 582, column: 8, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12285, file: !1216, line: 582, column: 8)
!12285 = distinct !DILexicalBlock(scope: !12286, file: !1216, line: 581, column: 23)
!12286 = distinct !DILexicalBlock(scope: !12281, file: !1216, line: 579, column: 18)
!12287 = !DILocation(line: 582, column: 12, scope: !12284)
!12288 = !DILocation(line: 585, column: 6, scope: !12285)
!12289 = !DILocation(line: 0, scope: !12286)
!12290 = !DILocation(line: 581, column: 17, scope: !12286)
!12291 = !DILocation(line: 581, column: 3, scope: !12286)
!12292 = !DILocation(line: 588, column: 10, scope: !12286)
!12293 = !DILocation(line: 588, column: 16, scope: !12286)
!12294 = !DILocation(line: 589, column: 4, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12286, file: !1216, line: 588, column: 39)
!12296 = !DILocation(line: 588, column: 3, scope: !12286)
!12297 = distinct !{!12297, !12296, !12298}
!12298 = !DILocation(line: 590, column: 3, scope: !12286)
!12299 = !DILocation(line: 591, column: 10, scope: !12286)
!12300 = !DILocation(line: 592, column: 2, scope: !12286)
!12301 = !DILocation(line: 575, column: 25, scope: !12271)
!12302 = !DILocation(line: 594, column: 2, scope: !12271)
!12303 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2074, file: !2074, line: 49, type: !12304, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2071, retainedNodes: !2275)
!12304 = !DISubroutineType(types: !12305)
!12305 = !{!726}
!12306 = !DILocation(line: 51, column: 10, scope: !12303)
!12307 = !DILocation(line: 51, column: 20, scope: !12303)
!12308 = !DILocation(line: 51, column: 2, scope: !12303)
!12309 = distinct !DISubprogram(name: "coredump", scope: !3404, file: !3404, line: 209, type: !12310, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12452)
!12310 = !DISubroutineType(types: !12311)
!12311 = !{null, !32, !12312, !12356}
!12312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12313, size: 32)
!12313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12314)
!12314 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2977, line: 141, baseType: !12315)
!12315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2977, line: 97, size: 256, elements: !12316)
!12316 = !{!12317}
!12317 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12315, file: !2977, line: 107, baseType: !12318, size: 256)
!12318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2977, line: 98, size: 256, elements: !12319)
!12319 = !{!12320, !12325, !12330, !12335, !12340, !12345, !12350, !12355}
!12320 = !DIDerivedType(tag: DW_TAG_member, scope: !12318, file: !2977, line: 99, baseType: !12321, size: 32)
!12321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12318, file: !2977, line: 99, size: 32, elements: !12322)
!12322 = !{!12323, !12324}
!12323 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12321, file: !2977, line: 99, baseType: !111, size: 32)
!12324 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12321, file: !2977, line: 99, baseType: !111, size: 32)
!12325 = !DIDerivedType(tag: DW_TAG_member, scope: !12318, file: !2977, line: 100, baseType: !12326, size: 32, offset: 32)
!12326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12318, file: !2977, line: 100, size: 32, elements: !12327)
!12327 = !{!12328, !12329}
!12328 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12326, file: !2977, line: 100, baseType: !111, size: 32)
!12329 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12326, file: !2977, line: 100, baseType: !111, size: 32)
!12330 = !DIDerivedType(tag: DW_TAG_member, scope: !12318, file: !2977, line: 101, baseType: !12331, size: 32, offset: 64)
!12331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12318, file: !2977, line: 101, size: 32, elements: !12332)
!12332 = !{!12333, !12334}
!12333 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12331, file: !2977, line: 101, baseType: !111, size: 32)
!12334 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12331, file: !2977, line: 101, baseType: !111, size: 32)
!12335 = !DIDerivedType(tag: DW_TAG_member, scope: !12318, file: !2977, line: 102, baseType: !12336, size: 32, offset: 96)
!12336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12318, file: !2977, line: 102, size: 32, elements: !12337)
!12337 = !{!12338, !12339}
!12338 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12336, file: !2977, line: 102, baseType: !111, size: 32)
!12339 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12336, file: !2977, line: 102, baseType: !111, size: 32)
!12340 = !DIDerivedType(tag: DW_TAG_member, scope: !12318, file: !2977, line: 103, baseType: !12341, size: 32, offset: 128)
!12341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12318, file: !2977, line: 103, size: 32, elements: !12342)
!12342 = !{!12343, !12344}
!12343 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12341, file: !2977, line: 103, baseType: !111, size: 32)
!12344 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12341, file: !2977, line: 103, baseType: !111, size: 32)
!12345 = !DIDerivedType(tag: DW_TAG_member, scope: !12318, file: !2977, line: 104, baseType: !12346, size: 32, offset: 160)
!12346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12318, file: !2977, line: 104, size: 32, elements: !12347)
!12347 = !{!12348, !12349}
!12348 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12346, file: !2977, line: 104, baseType: !111, size: 32)
!12349 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12346, file: !2977, line: 104, baseType: !111, size: 32)
!12350 = !DIDerivedType(tag: DW_TAG_member, scope: !12318, file: !2977, line: 105, baseType: !12351, size: 32, offset: 192)
!12351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12318, file: !2977, line: 105, size: 32, elements: !12352)
!12352 = !{!12353, !12354}
!12353 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12351, file: !2977, line: 105, baseType: !111, size: 32)
!12354 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12351, file: !2977, line: 105, baseType: !111, size: 32)
!12355 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12318, file: !2977, line: 106, baseType: !111, size: 32, offset: 224)
!12356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12357, size: 32)
!12357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !12358)
!12358 = !{!12359, !12417, !12429, !12430, !12431, !12432, !12447}
!12359 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12357, file: !199, line: 247, baseType: !12360, size: 384)
!12360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !12361)
!12361 = !{!12362, !12386, !12393, !12394, !12395, !12404, !12405, !12406}
!12362 = !DIDerivedType(tag: DW_TAG_member, scope: !12360, file: !199, line: 60, baseType: !12363, size: 64)
!12363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12360, file: !199, line: 60, size: 64, elements: !12364)
!12364 = !{!12365, !12380}
!12365 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12363, file: !199, line: 61, baseType: !12366, size: 64)
!12366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !12367)
!12367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !12368)
!12368 = !{!12369, !12375}
!12369 = !DIDerivedType(tag: DW_TAG_member, scope: !12367, file: !136, line: 38, baseType: !12370, size: 32)
!12370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12367, file: !136, line: 38, size: 32, elements: !12371)
!12371 = !{!12372, !12374}
!12372 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12370, file: !136, line: 39, baseType: !12373, size: 32)
!12373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12367, size: 32)
!12374 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12370, file: !136, line: 40, baseType: !12373, size: 32)
!12375 = !DIDerivedType(tag: DW_TAG_member, scope: !12367, file: !136, line: 42, baseType: !12376, size: 32, offset: 32)
!12376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12367, file: !136, line: 42, size: 32, elements: !12377)
!12377 = !{!12378, !12379}
!12378 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12376, file: !136, line: 43, baseType: !12373, size: 32)
!12379 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12376, file: !136, line: 44, baseType: !12373, size: 32)
!12380 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12363, file: !199, line: 62, baseType: !12381, size: 64)
!12381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !12382)
!12382 = !{!12383}
!12383 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12381, file: !211, line: 50, baseType: !12384, size: 64)
!12384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12385, size: 64, elements: !216)
!12385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12381, size: 32)
!12386 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12360, file: !199, line: 68, baseType: !12387, size: 32, offset: 64)
!12387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12388, size: 32)
!12388 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !12389)
!12389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !12390)
!12390 = !{!12391}
!12391 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12389, file: !131, line: 232, baseType: !12392, size: 64)
!12392 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !12367)
!12393 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12360, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!12394 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12360, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!12395 = !DIDerivedType(tag: DW_TAG_member, scope: !12360, file: !199, line: 90, baseType: !12396, size: 16, offset: 112)
!12396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12360, file: !199, line: 90, size: 16, elements: !12397)
!12397 = !{!12398, !12403}
!12398 = !DIDerivedType(tag: DW_TAG_member, scope: !12396, file: !199, line: 91, baseType: !12399, size: 16)
!12399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12396, file: !199, line: 91, size: 16, elements: !12400)
!12400 = !{!12401, !12402}
!12401 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12399, file: !199, line: 96, baseType: !229, size: 8)
!12402 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12399, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!12403 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12396, file: !199, line: 100, baseType: !181, size: 16)
!12404 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12360, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!12405 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12360, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!12406 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12360, file: !199, line: 131, baseType: !12407, size: 192, offset: 192)
!12407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !12408)
!12408 = !{!12409, !12410, !12416}
!12409 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12407, file: !131, line: 245, baseType: !12366, size: 64)
!12410 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12407, file: !131, line: 246, baseType: !12411, size: 32, offset: 64)
!12411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !12412)
!12412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12413, size: 32)
!12413 = !DISubroutineType(types: !12414)
!12414 = !{null, !12415}
!12415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12407, size: 32)
!12416 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12407, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!12417 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12357, file: !199, line: 250, baseType: !12418, size: 288, offset: 384)
!12418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !12419)
!12419 = !{!12420, !12421, !12422, !12423, !12424, !12425, !12426, !12427, !12428}
!12420 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12418, file: !248, line: 26, baseType: !111, size: 32)
!12421 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12418, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!12422 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12418, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!12423 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12418, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!12424 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12418, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!12425 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12418, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!12426 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12418, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!12427 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12418, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!12428 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12418, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!12429 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12357, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!12430 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12357, file: !199, line: 256, baseType: !12388, size: 64, offset: 704)
!12431 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12357, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!12432 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12357, file: !199, line: 325, baseType: !12433, size: 32, offset: 800)
!12433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12434, size: 32)
!12434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !12435)
!12435 = !{!12436, !12442, !12443}
!12436 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12434, file: !127, line: 5074, baseType: !12437, size: 96)
!12437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !12438)
!12438 = !{!12439, !12440, !12441}
!12439 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12437, file: !268, line: 57, baseType: !271, size: 32)
!12440 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12437, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!12441 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12437, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!12442 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12434, file: !127, line: 5075, baseType: !12388, size: 64, offset: 96)
!12443 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12434, file: !127, line: 5076, baseType: !12444, size: 32, offset: 160)
!12444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !12445)
!12445 = !{!12446}
!12446 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12444, file: !152, line: 52, baseType: !22, size: 32)
!12447 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12357, file: !199, line: 343, baseType: !12448, size: 64, offset: 832)
!12448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !12449)
!12449 = !{!12450, !12451}
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12448, file: !248, line: 63, baseType: !111, size: 32)
!12451 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12448, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!12452 = !{!12453, !12454, !12455}
!12453 = !DILocalVariable(name: "reason", arg: 1, scope: !12309, file: !3404, line: 209, type: !32)
!12454 = !DILocalVariable(name: "esf", arg: 2, scope: !12309, file: !3404, line: 209, type: !12312)
!12455 = !DILocalVariable(name: "thread", arg: 3, scope: !12309, file: !3404, line: 210, type: !12356)
!12456 = !DILocation(line: 0, scope: !12309)
!12457 = !DILocation(line: 212, column: 1, scope: !12309)
!12458 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3404, file: !3404, line: 214, type: !12459, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12461)
!12459 = !DISubroutineType(types: !12460)
!12460 = !{null, !22, !22}
!12461 = !{!12462, !12463}
!12462 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12458, file: !3404, line: 214, type: !22)
!12463 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12458, file: !3404, line: 214, type: !22)
!12464 = !DILocation(line: 0, scope: !12458)
!12465 = !DILocation(line: 216, column: 1, scope: !12458)
!12466 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3404, file: !3404, line: 218, type: !12467, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12469)
!12467 = !DISubroutineType(types: !12468)
!12468 = !{null, !538, !156}
!12469 = !{!12470, !12471}
!12470 = !DILocalVariable(name: "buf", arg: 1, scope: !12466, file: !3404, line: 218, type: !538)
!12471 = !DILocalVariable(name: "buflen", arg: 2, scope: !12466, file: !3404, line: 218, type: !156)
!12472 = !DILocation(line: 0, scope: !12466)
!12473 = !DILocation(line: 220, column: 1, scope: !12466)
!12474 = distinct !DISubprogram(name: "coredump_query", scope: !3404, file: !3404, line: 222, type: !12475, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12477)
!12475 = !DISubroutineType(types: !12476)
!12476 = !{!103, !3403, !102}
!12477 = !{!12478, !12479}
!12478 = !DILocalVariable(name: "query_id", arg: 1, scope: !12474, file: !3404, line: 222, type: !3403)
!12479 = !DILocalVariable(name: "arg", arg: 2, scope: !12474, file: !3404, line: 222, type: !102)
!12480 = !DILocation(line: 0, scope: !12474)
!12481 = !DILocation(line: 224, column: 2, scope: !12474)
!12482 = distinct !DISubprogram(name: "coredump_cmd", scope: !3404, file: !3404, line: 227, type: !12483, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12485)
!12483 = !DISubroutineType(types: !12484)
!12484 = !{!103, !3410, !102}
!12485 = !{!12486, !12487}
!12486 = !DILocalVariable(name: "query_id", arg: 1, scope: !12482, file: !3404, line: 227, type: !3410)
!12487 = !DILocalVariable(name: "arg", arg: 2, scope: !12482, file: !3404, line: 227, type: !102)
!12488 = !DILocation(line: 0, scope: !12482)
!12489 = !DILocation(line: 229, column: 2, scope: !12482)
!12490 = distinct !DISubprogram(name: "arch_system_halt", scope: !12491, file: !12491, line: 23, type: !7536, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12492)
!12491 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12492 = !{!12493}
!12493 = !DILocalVariable(name: "reason", arg: 1, scope: !12490, file: !12491, line: 23, type: !32)
!12494 = !DILocation(line: 0, scope: !12490)
!12495 = !DILocation(line: 55, column: 2, scope: !12496, inlinedAt: !12500)
!12496 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7706, file: !7706, line: 42, type: !9871, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12497)
!12497 = !{!12498, !12499}
!12498 = !DILocalVariable(name: "key", scope: !12496, file: !7706, line: 44, type: !32)
!12499 = !DILocalVariable(name: "tmp", scope: !12496, file: !7706, line: 53, type: !32)
!12500 = distinct !DILocation(line: 31, column: 8, scope: !12490)
!12501 = !{i64 2846350}
!12502 = !DILocation(line: 0, scope: !12496, inlinedAt: !12500)
!12503 = !DILocation(line: 32, column: 2, scope: !12490)
!12504 = !DILocation(line: 32, column: 2, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12506, file: !12491, line: 32, column: 2)
!12506 = distinct !DILexicalBlock(scope: !12490, file: !12491, line: 32, column: 2)
!12507 = distinct !{!12507, !12508, !12509}
!12508 = !DILocation(line: 32, column: 2, scope: !12506)
!12509 = !DILocation(line: 34, column: 2, scope: !12506)
!12510 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12491, file: !12491, line: 39, type: !12511, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12513)
!12511 = !DISubroutineType(types: !12512)
!12512 = !{null, !32, !12312}
!12513 = !{!12514, !12515}
!12514 = !DILocalVariable(name: "reason", arg: 1, scope: !12510, file: !12491, line: 39, type: !32)
!12515 = !DILocalVariable(name: "esf", arg: 2, scope: !12510, file: !12491, line: 40, type: !12312)
!12516 = !DILocation(line: 0, scope: !12510)
!12517 = !DILocation(line: 45, column: 2, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12519, file: !12491, line: 45, column: 2)
!12519 = distinct !DILexicalBlock(scope: !12520, file: !12491, line: 45, column: 2)
!12520 = distinct !DILexicalBlock(scope: !12521, file: !12491, line: 45, column: 2)
!12521 = distinct !DILexicalBlock(scope: !12510, file: !12491, line: 45, column: 2)
!12522 = !DILocation(line: 46, column: 2, scope: !12510)
!12523 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12491, file: !12491, line: 81, type: !7536, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12524)
!12524 = !{!12525}
!12525 = !DILocalVariable(name: "reason", arg: 1, scope: !12523, file: !12491, line: 81, type: !32)
!12526 = !DILocation(line: 0, scope: !12523)
!12527 = !DILocation(line: 83, column: 2, scope: !12523)
!12528 = distinct !DISubprogram(name: "z_fatal_error", scope: !12491, file: !12491, line: 96, type: !12511, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12529)
!12529 = !{!12530, !12531, !12532, !12533}
!12530 = !DILocalVariable(name: "reason", arg: 1, scope: !12528, file: !12491, line: 96, type: !32)
!12531 = !DILocalVariable(name: "esf", arg: 2, scope: !12528, file: !12491, line: 96, type: !12312)
!12532 = !DILocalVariable(name: "key", scope: !12528, file: !12491, line: 102, type: !32)
!12533 = !DILocalVariable(name: "thread", scope: !12528, file: !12491, line: 103, type: !12356)
!12534 = !DILocation(line: 0, scope: !12528)
!12535 = !DILocation(line: 55, column: 2, scope: !12496, inlinedAt: !12536)
!12536 = distinct !DILocation(line: 102, column: 21, scope: !12528)
!12537 = !DILocation(line: 0, scope: !12496, inlinedAt: !12536)
!12538 = !DILocation(line: 104, column: 4, scope: !12528)
!12539 = !DILocation(line: 109, column: 2, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12541, file: !12491, line: 109, column: 2)
!12541 = distinct !DILexicalBlock(scope: !12542, file: !12491, line: 109, column: 2)
!12542 = distinct !DILexicalBlock(scope: !12543, file: !12491, line: 109, column: 2)
!12543 = distinct !DILexicalBlock(scope: !12528, file: !12491, line: 109, column: 2)
!12544 = !DILocation(line: 119, column: 11, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12528, file: !12491, line: 119, column: 6)
!12546 = !DILocation(line: 119, column: 20, scope: !12545)
!12547 = !DILocalVariable(name: "esf", arg: 1, scope: !12548, file: !8579, line: 71, type: !12312)
!12548 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8579, file: !8579, line: 71, type: !12549, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12551)
!12549 = !DISubroutineType(types: !12550)
!12550 = !{!122, !12312}
!12551 = !{!12547}
!12552 = !DILocation(line: 0, scope: !12548, inlinedAt: !12553)
!12553 = distinct !DILocation(line: 119, column: 23, scope: !12545)
!12554 = !DILocation(line: 73, column: 21, scope: !12548, inlinedAt: !12553)
!12555 = !DILocation(line: 73, column: 26, scope: !12548, inlinedAt: !12553)
!12556 = !DILocation(line: 73, column: 9, scope: !12548, inlinedAt: !12553)
!12557 = !DILocation(line: 119, column: 6, scope: !12528)
!12558 = !DILocation(line: 120, column: 3, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12560, file: !12491, line: 120, column: 3)
!12560 = distinct !DILexicalBlock(scope: !12561, file: !12491, line: 120, column: 3)
!12561 = distinct !DILexicalBlock(scope: !12562, file: !12491, line: 120, column: 3)
!12562 = distinct !DILexicalBlock(scope: !12563, file: !12491, line: 120, column: 3)
!12563 = distinct !DILexicalBlock(scope: !12545, file: !12491, line: 119, column: 57)
!12564 = !DILocation(line: 121, column: 2, scope: !12563)
!12565 = !DILocation(line: 124, column: 2, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12567, file: !12491, line: 124, column: 2)
!12567 = distinct !DILexicalBlock(scope: !12568, file: !12491, line: 124, column: 2)
!12568 = distinct !DILexicalBlock(scope: !12569, file: !12491, line: 124, column: 2)
!12569 = distinct !DILexicalBlock(scope: !12528, file: !12491, line: 124, column: 2)
!12570 = !DILocation(line: 131, column: 2, scope: !12528)
!12571 = !DILocation(line: 147, column: 3, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12573, file: !12491, line: 147, column: 3)
!12573 = distinct !DILexicalBlock(scope: !12574, file: !12491, line: 147, column: 3)
!12574 = distinct !DILexicalBlock(scope: !12575, file: !12491, line: 146, column: 32)
!12575 = distinct !DILexicalBlock(scope: !12528, file: !12491, line: 146, column: 6)
!12576 = !DILocation(line: 147, column: 3, scope: !12573)
!12577 = !DILocation(line: 147, column: 3, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12572, file: !12491, line: 147, column: 3)
!12579 = !DILocalVariable(name: "key", arg: 1, scope: !12580, file: !7706, line: 84, type: !32)
!12580 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7706, file: !7706, line: 84, type: !7536, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12581)
!12581 = !{!12579}
!12582 = !DILocation(line: 0, scope: !12580, inlinedAt: !12583)
!12583 = distinct !DILocation(line: 186, column: 2, scope: !12528)
!12584 = !DILocation(line: 95, column: 2, scope: !12580, inlinedAt: !12583)
!12585 = !{i64 2847167}
!12586 = !DILocation(line: 189, column: 3, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12588, file: !12491, line: 188, column: 41)
!12588 = distinct !DILexicalBlock(scope: !12528, file: !12491, line: 188, column: 6)
!12589 = !DILocation(line: 191, column: 1, scope: !12528)
!12590 = distinct !DISubprogram(name: "k_current_get", scope: !127, file: !127, line: 530, type: !12591, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !2275)
!12591 = !DISubroutineType(types: !12592)
!12592 = !{!12593}
!12593 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !12356)
!12594 = !DILocation(line: 535, column: 9, scope: !12590)
!12595 = !DILocation(line: 535, column: 2, scope: !12590)
!12596 = distinct !DISubprogram(name: "reason_to_str", scope: !12491, file: !12491, line: 62, type: !12597, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12599)
!12597 = !DISubroutineType(types: !12598)
!12598 = !{!108, !32}
!12599 = !{!12600}
!12600 = !DILocalVariable(name: "reason", arg: 1, scope: !12596, file: !12491, line: 62, type: !32)
!12601 = !DILocation(line: 0, scope: !12596)
!12602 = !DILocation(line: 64, column: 2, scope: !12596)
!12603 = !DILocation(line: 0, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12596, file: !12491, line: 64, column: 18)
!12605 = !DILocation(line: 78, column: 1, scope: !12596)
!12606 = distinct !DISubprogram(name: "thread_name_get", scope: !12491, file: !12491, line: 51, type: !12607, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12609)
!12607 = !DISubroutineType(types: !12608)
!12608 = !{!108, !12356}
!12609 = !{!12610, !12611}
!12610 = !DILocalVariable(name: "thread", arg: 1, scope: !12606, file: !12491, line: 51, type: !12356)
!12611 = !DILocalVariable(name: "thread_name", scope: !12606, file: !12491, line: 53, type: !108)
!12612 = !DILocation(line: 0, scope: !12606)
!12613 = !DILocation(line: 53, column: 36, scope: !12606)
!12614 = !DILocation(line: 53, column: 28, scope: !12606)
!12615 = !DILocation(line: 53, column: 47, scope: !12606)
!12616 = !DILocation(line: 55, column: 19, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12606, file: !12491, line: 55, column: 6)
!12618 = !DILocation(line: 55, column: 28, scope: !12617)
!12619 = !DILocation(line: 55, column: 32, scope: !12617)
!12620 = !DILocation(line: 55, column: 47, scope: !12617)
!12621 = !DILocation(line: 55, column: 6, scope: !12606)
!12622 = !DILocation(line: 57, column: 2, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12617, file: !12491, line: 55, column: 57)
!12624 = !DILocation(line: 59, column: 2, scope: !12606)
!12625 = distinct !DISubprogram(name: "k_thread_abort", scope: !5050, file: !5050, line: 188, type: !12626, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12628)
!12626 = !DISubroutineType(types: !12627)
!12627 = !{null, !12593}
!12628 = !{!12629}
!12629 = !DILocalVariable(name: "thread", arg: 1, scope: !12625, file: !5050, line: 188, type: !12593)
!12630 = !DILocation(line: 0, scope: !12625)
!12631 = !DILocation(line: 197, column: 2, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12625, file: !5050, line: 197, column: 2)
!12633 = !{i64 2151045493}
!12634 = !DILocation(line: 198, column: 2, scope: !12625)
!12635 = !DILocation(line: 199, column: 1, scope: !12625)
!12636 = distinct !DISubprogram(name: "z_current_get", scope: !5050, file: !5050, line: 173, type: !12591, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !2275)
!12637 = !DILocation(line: 180, column: 2, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12636, file: !5050, line: 180, column: 2)
!12639 = !{i64 2151045425}
!12640 = !DILocation(line: 181, column: 9, scope: !12636)
!12641 = !DILocation(line: 181, column: 2, scope: !12636)
!12642 = distinct !DISubprogram(name: "z_early_memset", scope: !2081, file: !2081, line: 108, type: !12643, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12645)
!12643 = !DISubroutineType(types: !12644)
!12644 = !{null, !102, !103, !156}
!12645 = !{!12646, !12647, !12648}
!12646 = !DILocalVariable(name: "dst", arg: 1, scope: !12642, file: !2081, line: 108, type: !102)
!12647 = !DILocalVariable(name: "c", arg: 2, scope: !12642, file: !2081, line: 108, type: !103)
!12648 = !DILocalVariable(name: "n", arg: 3, scope: !12642, file: !2081, line: 108, type: !156)
!12649 = !DILocation(line: 0, scope: !12642)
!12650 = !DILocation(line: 110, column: 9, scope: !12642)
!12651 = !DILocation(line: 111, column: 1, scope: !12642)
!12652 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2081, file: !2081, line: 121, type: !12653, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12655)
!12653 = !DISubroutineType(types: !12654)
!12654 = !{null, !102, !13, !156}
!12655 = !{!12656, !12657, !12658}
!12656 = !DILocalVariable(name: "dst", arg: 1, scope: !12652, file: !2081, line: 121, type: !102)
!12657 = !DILocalVariable(name: "src", arg: 2, scope: !12652, file: !2081, line: 121, type: !13)
!12658 = !DILocalVariable(name: "n", arg: 3, scope: !12652, file: !2081, line: 121, type: !156)
!12659 = !DILocation(line: 0, scope: !12652)
!12660 = !DILocation(line: 123, column: 9, scope: !12652)
!12661 = !DILocation(line: 124, column: 1, scope: !12652)
!12662 = distinct !DISubprogram(name: "z_bss_zero", scope: !2081, file: !2081, line: 132, type: !317, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !2275)
!12663 = !DILocation(line: 143, column: 2, scope: !12662)
!12664 = !DILocation(line: 168, column: 1, scope: !12662)
!12665 = distinct !DISubprogram(name: "z_init_cpu", scope: !2081, file: !2081, line: 372, type: !12666, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12668)
!12666 = !DISubroutineType(types: !12667)
!12667 = !{null, !103}
!12668 = !{!12669}
!12669 = !DILocalVariable(name: "id", arg: 1, scope: !12665, file: !2081, line: 372, type: !103)
!12670 = !DILocation(line: 0, scope: !12665)
!12671 = !DILocation(line: 374, column: 2, scope: !12665)
!12672 = !DILocation(line: 375, column: 34, scope: !12665)
!12673 = !DILocation(line: 375, column: 19, scope: !12665)
!12674 = !DILocation(line: 375, column: 31, scope: !12665)
!12675 = !DILocation(line: 376, column: 24, scope: !12665)
!12676 = !DILocation(line: 376, column: 19, scope: !12665)
!12677 = !DILocation(line: 376, column: 22, scope: !12665)
!12678 = !DILocation(line: 378, column: 26, scope: !12665)
!12679 = !DILocation(line: 378, column: 4, scope: !12665)
!12680 = !DILocation(line: 378, column: 50, scope: !12665)
!12681 = !DILocation(line: 377, column: 19, scope: !12665)
!12682 = !DILocation(line: 377, column: 29, scope: !12665)
!12683 = !DILocation(line: 384, column: 1, scope: !12665)
!12684 = distinct !DISubprogram(name: "init_idle_thread", scope: !2081, file: !2081, line: 343, type: !12666, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12685)
!12685 = !{!12686, !12687, !12688, !12691}
!12686 = !DILocalVariable(name: "i", arg: 1, scope: !12684, file: !2081, line: 343, type: !103)
!12687 = !DILocalVariable(name: "thread", scope: !12684, file: !2081, line: 345, type: !2173)
!12688 = !DILocalVariable(name: "stack", scope: !12684, file: !2081, line: 346, type: !12689)
!12689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12690, size: 32)
!12690 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !297, line: 44, baseType: !2284)
!12691 = !DILocalVariable(name: "tname", scope: !12684, file: !2081, line: 358, type: !160)
!12692 = !DILocation(line: 0, scope: !12684)
!12693 = !DILocation(line: 345, column: 29, scope: !12684)
!12694 = !DILocation(line: 346, column: 28, scope: !12684)
!12695 = !DILocation(line: 362, column: 37, scope: !12684)
!12696 = !DILocation(line: 362, column: 36, scope: !12684)
!12697 = !DILocation(line: 361, column: 2, scope: !12684)
!12698 = !DILocation(line: 365, column: 2, scope: !12684)
!12699 = !DILocation(line: 370, column: 1, scope: !12684)
!12700 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !299, file: !299, line: 331, type: !12701, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12703)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{!160, !12689}
!12703 = !{!12704}
!12704 = !DILocalVariable(name: "sym", arg: 1, scope: !12700, file: !299, line: 331, type: !12689)
!12705 = !DILocation(line: 0, scope: !12700)
!12706 = !DILocation(line: 333, column: 9, scope: !12700)
!12707 = !DILocation(line: 333, column: 2, scope: !12700)
!12708 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12709, file: !12709, line: 155, type: !12710, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12712)
!12709 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12710 = !DISubroutineType(types: !12711)
!12711 = !{null, !2173}
!12712 = !{!12713}
!12713 = !DILocalVariable(name: "thread", arg: 1, scope: !12708, file: !12709, line: 155, type: !2173)
!12714 = !DILocation(line: 0, scope: !12708)
!12715 = !DILocation(line: 157, column: 15, scope: !12708)
!12716 = !DILocation(line: 157, column: 28, scope: !12708)
!12717 = !DILocation(line: 158, column: 1, scope: !12708)
!12718 = distinct !DISubprogram(name: "z_cstart", scope: !2081, file: !2081, line: 501, type: !317, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12719)
!12719 = !{!12720}
!12720 = !DILocalVariable(name: "dummy_thread", scope: !12718, file: !2081, line: 518, type: !2174)
!12721 = !DILocation(line: 507, column: 2, scope: !12718)
!12722 = !DILocation(line: 43, column: 14, scope: !12723, inlinedAt: !12727)
!12723 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12724, file: !12724, line: 40, type: !317, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12725)
!12724 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12725 = !{!12726}
!12726 = !DILocalVariable(name: "msp", scope: !12723, file: !12724, line: 42, type: !111)
!12727 = distinct !DILocation(line: 44, column: 2, scope: !12728, inlinedAt: !12730)
!12728 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12729, file: !12729, line: 42, type: !317, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !2275)
!12729 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12730 = distinct !DILocation(line: 510, column: 2, scope: !12718)
!12731 = !DILocation(line: 43, column: 3, scope: !12723, inlinedAt: !12727)
!12732 = !DILocation(line: 43, column: 60, scope: !12723, inlinedAt: !12727)
!12733 = !DILocation(line: 0, scope: !12723, inlinedAt: !12727)
!12734 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12735, file: !7585, line: 1153, type: !111)
!12735 = distinct !DISubprogram(name: "__set_MSP", scope: !7585, file: !7585, line: 1153, type: !7682, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12736)
!12736 = !{!12734}
!12737 = !DILocation(line: 0, scope: !12735, inlinedAt: !12738)
!12738 = distinct !DILocation(line: 46, column: 2, scope: !12723, inlinedAt: !12727)
!12739 = !DILocation(line: 1155, column: 3, scope: !12735, inlinedAt: !12738)
!12740 = !{i64 7509109}
!12741 = !DILocation(line: 62, column: 11, scope: !12723, inlinedAt: !12727)
!12742 = !DILocation(line: 102, column: 2, scope: !12743, inlinedAt: !12744)
!12743 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8579, file: !8579, line: 97, type: !317, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !2275)
!12744 = distinct !DILocation(line: 45, column: 2, scope: !12728, inlinedAt: !12730)
!12745 = !DILocation(line: 108, column: 2, scope: !12743, inlinedAt: !12744)
!12746 = !DILocation(line: 112, column: 2, scope: !12743, inlinedAt: !12744)
!12747 = !DILocation(line: 113, column: 2, scope: !12743, inlinedAt: !12744)
!12748 = !DILocation(line: 114, column: 2, scope: !12743, inlinedAt: !12744)
!12749 = !DILocation(line: 116, column: 2, scope: !12743, inlinedAt: !12744)
!12750 = !DILocation(line: 123, column: 13, scope: !12743, inlinedAt: !12744)
!12751 = !DILocation(line: 46, column: 2, scope: !12728, inlinedAt: !12730)
!12752 = !DILocation(line: 47, column: 2, scope: !12728, inlinedAt: !12730)
!12753 = !DILocation(line: 174, column: 12, scope: !12754, inlinedAt: !12755)
!12754 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8579, file: !8579, line: 169, type: !317, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !2275)
!12755 = distinct !DILocation(line: 48, column: 2, scope: !12728, inlinedAt: !12730)
!12756 = !DILocation(line: 179, column: 12, scope: !12754, inlinedAt: !12755)
!12757 = !DILocation(line: 518, column: 2, scope: !12718)
!12758 = !DILocation(line: 518, column: 18, scope: !12718)
!12759 = !DILocation(line: 520, column: 2, scope: !12718)
!12760 = !DILocation(line: 523, column: 2, scope: !12718)
!12761 = !DILocation(line: 526, column: 2, scope: !12718)
!12762 = !DILocation(line: 527, column: 2, scope: !12718)
!12763 = !DILocation(line: 543, column: 24, scope: !12718)
!12764 = !DILocation(line: 543, column: 2, scope: !12718)
!12765 = !DILocation(line: 0, scope: !2306)
!12766 = !DILocation(line: 246, column: 15, scope: !2324)
!12767 = !DILocation(line: 246, column: 36, scope: !2323)
!12768 = !DILocation(line: 246, column: 2, scope: !2324)
!12769 = !DILocation(line: 247, column: 37, scope: !2322)
!12770 = !DILocation(line: 0, scope: !2322)
!12771 = !DILocation(line: 248, column: 19, scope: !2322)
!12772 = !DILocation(line: 248, column: 12, scope: !2322)
!12773 = !DILocation(line: 250, column: 11, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !2322, file: !2081, line: 250, column: 7)
!12775 = !DILocation(line: 250, column: 7, scope: !2322)
!12776 = !DILocation(line: 254, column: 11, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12778, file: !2081, line: 254, column: 8)
!12778 = distinct !DILexicalBlock(scope: !12774, file: !2081, line: 250, column: 20)
!12779 = !DILocation(line: 254, column: 8, scope: !12778)
!12780 = !DILocation(line: 255, column: 9, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12777, file: !2081, line: 254, column: 17)
!12782 = !DILocation(line: 258, column: 9, scope: !12781)
!12783 = !DILocation(line: 261, column: 28, scope: !12781)
!12784 = !DILocation(line: 261, column: 10, scope: !12781)
!12785 = !DILocation(line: 261, column: 17, scope: !12781)
!12786 = !DILocation(line: 261, column: 26, scope: !12781)
!12787 = !DILocation(line: 262, column: 4, scope: !12781)
!12788 = !DILocation(line: 263, column: 9, scope: !12778)
!12789 = !DILocation(line: 263, column: 16, scope: !12778)
!12790 = !DILocation(line: 263, column: 28, scope: !12778)
!12791 = !DILocation(line: 264, column: 3, scope: !12778)
!12792 = !DILocation(line: 246, column: 60, scope: !2323)
!12793 = distinct !{!12793, !12768, !12794}
!12794 = !DILocation(line: 265, column: 2, scope: !2324)
!12795 = !DILocation(line: 266, column: 1, scope: !2306)
!12796 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1925, file: !1925, line: 1814, type: !7625, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12797)
!12797 = !{!12798, !12799}
!12798 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12796, file: !1925, line: 1814, type: !2871)
!12799 = !DILocalVariable(name: "priority", arg: 2, scope: !12796, file: !1925, line: 1814, type: !111)
!12800 = !DILocation(line: 0, scope: !12796)
!12801 = !DILocation(line: 1822, column: 48, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12803, file: !1925, line: 1821, column: 3)
!12803 = distinct !DILexicalBlock(scope: !12796, file: !1925, line: 1816, column: 7)
!12804 = !DILocation(line: 1822, column: 32, scope: !12802)
!12805 = !DILocation(line: 1822, column: 40, scope: !12802)
!12806 = !DILocation(line: 1822, column: 5, scope: !12802)
!12807 = !DILocation(line: 1822, column: 46, scope: !12802)
!12808 = !DILocation(line: 1824, column: 1, scope: !12796)
!12809 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12729, file: !12729, line: 32, type: !317, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2275)
!12810 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12811, file: !12811, line: 215, type: !12710, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12812)
!12811 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12812 = !{!12813}
!12813 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12810, file: !12811, line: 215, type: !2173)
!12814 = !DILocation(line: 0, scope: !12810)
!12815 = !DILocation(line: 217, column: 21, scope: !12810)
!12816 = !DILocation(line: 217, column: 34, scope: !12810)
!12817 = !DILocation(line: 221, column: 21, scope: !12810)
!12818 = !DILocation(line: 221, column: 34, scope: !12810)
!12819 = !DILocation(line: 230, column: 2, scope: !12810)
!12820 = !DILocation(line: 239, column: 24, scope: !12810)
!12821 = !DILocation(line: 240, column: 1, scope: !12810)
!12822 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2081, file: !2081, line: 399, type: !12823, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12825)
!12823 = !DISubroutineType(types: !12824)
!12824 = !{!160}
!12825 = !{!12826}
!12826 = !DILocalVariable(name: "stack_ptr", scope: !12822, file: !2081, line: 401, type: !160)
!12827 = !DILocation(line: 404, column: 2, scope: !12822)
!12828 = !DILocation(line: 416, column: 24, scope: !12822)
!12829 = !DILocation(line: 418, column: 14, scope: !12822)
!12830 = !DILocation(line: 0, scope: !12822)
!12831 = !DILocation(line: 423, column: 2, scope: !12822)
!12832 = !DILocation(line: 424, column: 2, scope: !12822)
!12833 = !DILocation(line: 426, column: 2, scope: !12822)
!12834 = !DILocation(line: 428, column: 2, scope: !12822)
!12835 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2081, file: !2081, line: 432, type: !12836, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12838)
!12836 = !DISubroutineType(types: !12837)
!12837 = !{null, !160}
!12838 = !{!12839}
!12839 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12835, file: !2081, line: 432, type: !160)
!12840 = !DILocation(line: 0, scope: !12835)
!12841 = !DILocation(line: 435, column: 2, scope: !12835)
!12842 = !DILocation(line: 445, column: 2, scope: !12835)
!12843 = distinct !DISubprogram(name: "bg_thread_main", scope: !2081, file: !2081, line: 277, type: !306, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2077, retainedNodes: !12844)
!12844 = !{!12845, !12846, !12847}
!12845 = !DILocalVariable(name: "unused1", arg: 1, scope: !12843, file: !2081, line: 277, type: !102)
!12846 = !DILocalVariable(name: "unused2", arg: 2, scope: !12843, file: !2081, line: 277, type: !102)
!12847 = !DILocalVariable(name: "unused3", arg: 3, scope: !12843, file: !2081, line: 277, type: !102)
!12848 = !DILocation(line: 0, scope: !12843)
!12849 = !DILocation(line: 291, column: 20, scope: !12843)
!12850 = !DILocation(line: 293, column: 2, scope: !12843)
!12851 = !DILocation(line: 297, column: 2, scope: !12843)
!12852 = !DILocation(line: 305, column: 2, scope: !12843)
!12853 = !DILocation(line: 307, column: 2, scope: !12843)
!12854 = !DILocation(line: 330, column: 8, scope: !12843)
!12855 = !DILocation(line: 333, column: 34, scope: !12843)
!12856 = !DILocation(line: 339, column: 1, scope: !12843)
!12857 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2335, file: !2335, line: 45, type: !12858, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !12866)
!12858 = !DISubroutineType(types: !12859)
!12859 = !{null, !12860, !102}
!12860 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !127, line: 103, baseType: !12861)
!12861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12862, size: 32)
!12862 = !DISubroutineType(types: !12863)
!12863 = !{null, !12864, !102}
!12864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12865, size: 32)
!12865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2340)
!12866 = !{!12867, !12868}
!12867 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12857, file: !2335, line: 45, type: !12860)
!12868 = !DILocalVariable(name: "user_data", arg: 2, scope: !12857, file: !2335, line: 45, type: !102)
!12869 = !DILocation(line: 0, scope: !12857)
!12870 = !DILocation(line: 71, column: 1, scope: !12857)
!12871 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2335, file: !2335, line: 73, type: !12858, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !12872)
!12872 = !{!12873, !12874}
!12873 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12871, file: !2335, line: 73, type: !12860)
!12874 = !DILocalVariable(name: "user_data", arg: 2, scope: !12871, file: !2335, line: 73, type: !102)
!12875 = !DILocation(line: 0, scope: !12871)
!12876 = !DILocation(line: 95, column: 1, scope: !12871)
!12877 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2335, file: !2335, line: 97, type: !8580, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2275)
!12878 = !DILocation(line: 1031, column: 3, scope: !12879, inlinedAt: !12882)
!12879 = distinct !DISubprogram(name: "__get_IPSR", scope: !7585, file: !7585, line: 1027, type: !7672, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !12880)
!12880 = !{!12881}
!12881 = !DILocalVariable(name: "result", scope: !12879, file: !7585, line: 1029, type: !111)
!12882 = distinct !DILocation(line: 48, column: 10, scope: !12883, inlinedAt: !12884)
!12883 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8579, file: !8579, line: 46, type: !8580, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2275)
!12884 = distinct !DILocation(line: 99, column: 9, scope: !12877)
!12885 = !{i64 7020953}
!12886 = !DILocation(line: 0, scope: !12879, inlinedAt: !12882)
!12887 = !DILocation(line: 48, column: 9, scope: !12883, inlinedAt: !12884)
!12888 = !DILocation(line: 99, column: 2, scope: !12877)
!12889 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2335, file: !2335, line: 106, type: !317, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2275)
!12890 = !DILocation(line: 108, column: 2, scope: !12889)
!12891 = !DILocation(line: 108, column: 17, scope: !12889)
!12892 = !DILocation(line: 108, column: 30, scope: !12889)
!12893 = !DILocation(line: 109, column: 1, scope: !12889)
!12894 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2335, file: !2335, line: 116, type: !317, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2275)
!12895 = !DILocation(line: 118, column: 2, scope: !12894)
!12896 = !DILocation(line: 118, column: 17, scope: !12894)
!12897 = !DILocation(line: 118, column: 30, scope: !12894)
!12898 = !DILocation(line: 119, column: 1, scope: !12894)
!12899 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2335, file: !2335, line: 126, type: !8580, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2275)
!12900 = !DILocation(line: 128, column: 10, scope: !12899)
!12901 = !DILocation(line: 128, column: 25, scope: !12899)
!12902 = !DILocation(line: 128, column: 38, scope: !12899)
!12903 = !DILocation(line: 128, column: 53, scope: !12899)
!12904 = !DILocation(line: 128, column: 2, scope: !12899)
!12905 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2335, file: !2335, line: 187, type: !12906, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !12908)
!12906 = !DISubroutineType(types: !12907)
!12907 = !{!103, !2339, !108}
!12908 = !{!12909, !12910}
!12909 = !DILocalVariable(name: "thread", arg: 1, scope: !12905, file: !2335, line: 187, type: !2339)
!12910 = !DILocalVariable(name: "value", arg: 2, scope: !12905, file: !2335, line: 187, type: !108)
!12911 = !DILocation(line: 0, scope: !12905)
!12912 = !DILocation(line: 206, column: 2, scope: !12905)
!12913 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2335, file: !2335, line: 238, type: !12914, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !12916)
!12914 = !DISubroutineType(types: !12915)
!12915 = !{!108, !2339}
!12916 = !{!12917}
!12917 = !DILocalVariable(name: "thread", arg: 1, scope: !12913, file: !2335, line: 238, type: !2339)
!12918 = !DILocation(line: 0, scope: !12913)
!12919 = !DILocation(line: 244, column: 2, scope: !12913)
!12920 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2335, file: !2335, line: 248, type: !12921, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !12923)
!12921 = !DISubroutineType(types: !12922)
!12922 = !{!103, !2338, !160, !156}
!12923 = !{!12924, !12925, !12926}
!12924 = !DILocalVariable(name: "thread", arg: 1, scope: !12920, file: !2335, line: 248, type: !2338)
!12925 = !DILocalVariable(name: "buf", arg: 2, scope: !12920, file: !2335, line: 248, type: !160)
!12926 = !DILocalVariable(name: "size", arg: 3, scope: !12920, file: !2335, line: 248, type: !156)
!12927 = !DILocation(line: 0, scope: !12920)
!12928 = !DILocation(line: 257, column: 2, scope: !12920)
!12929 = !DILocation(line: 0, scope: !2334)
!12930 = !DILocation(line: 281, column: 11, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !2334, file: !2335, line: 281, column: 6)
!12932 = !DILocation(line: 281, column: 20, scope: !12931)
!12933 = !DILocation(line: 275, column: 45, scope: !2334)
!12934 = !DILocation(line: 285, column: 10, scope: !2334)
!12935 = !DILocation(line: 0, scope: !2452)
!12936 = !DILocation(line: 293, column: 39, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !2452, file: !2335, line: 293, column: 2)
!12938 = !DILocation(line: 293, column: 2, scope: !2452)
!12939 = !DILocation(line: 273, column: 14, scope: !2334)
!12940 = !DILocation(line: 309, column: 2, scope: !2334)
!12941 = !DILocation(line: 309, column: 11, scope: !2334)
!12942 = !DILocation(line: 311, column: 2, scope: !2334)
!12943 = !DILocation(line: 293, column: 26, scope: !12937)
!12944 = !DILocation(line: 294, column: 9, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12937, file: !2335, line: 293, column: 54)
!12946 = !DILocation(line: 295, column: 21, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12945, file: !2335, line: 295, column: 7)
!12948 = !DILocation(line: 295, column: 28, scope: !12947)
!12949 = !DILocation(line: 295, column: 7, scope: !12945)
!12950 = !DILocation(line: 299, column: 25, scope: !12945)
!12951 = !DILocation(line: 299, column: 41, scope: !12945)
!12952 = !DILocation(line: 300, column: 7, scope: !12945)
!12953 = !DILocation(line: 300, column: 26, scope: !12945)
!12954 = !DILocation(line: 299, column: 10, scope: !12945)
!12955 = !DILocation(line: 299, column: 7, scope: !12945)
!12956 = !DILocation(line: 302, column: 16, scope: !12945)
!12957 = !DILocation(line: 304, column: 20, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12945, file: !2335, line: 304, column: 7)
!12959 = !DILocation(line: 304, column: 7, scope: !12945)
!12960 = !DILocation(line: 305, column: 26, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12958, file: !2335, line: 304, column: 26)
!12962 = !DILocation(line: 305, column: 42, scope: !12961)
!12963 = !DILocation(line: 305, column: 11, scope: !12961)
!12964 = !DILocation(line: 305, column: 8, scope: !12961)
!12965 = !DILocation(line: 306, column: 3, scope: !12961)
!12966 = !DILocation(line: 293, column: 50, scope: !12937)
!12967 = !DILocation(line: 312, column: 1, scope: !2334)
!12968 = distinct !DISubprogram(name: "copy_bytes", scope: !2335, file: !2335, line: 261, type: !12969, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !12971)
!12969 = !DISubroutineType(types: !12970)
!12970 = !{!156, !160, !156, !108, !156}
!12971 = !{!12972, !12973, !12974, !12975, !12976}
!12972 = !DILocalVariable(name: "dest", arg: 1, scope: !12968, file: !2335, line: 261, type: !160)
!12973 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12968, file: !2335, line: 261, type: !156)
!12974 = !DILocalVariable(name: "src", arg: 3, scope: !12968, file: !2335, line: 261, type: !108)
!12975 = !DILocalVariable(name: "src_size", arg: 4, scope: !12968, file: !2335, line: 261, type: !156)
!12976 = !DILocalVariable(name: "bytes_to_copy", scope: !12968, file: !2335, line: 263, type: !156)
!12977 = !DILocation(line: 0, scope: !12968)
!12978 = !DILocation(line: 265, column: 18, scope: !12968)
!12979 = !DILocation(line: 266, column: 2, scope: !12968)
!12980 = !DILocation(line: 268, column: 2, scope: !12968)
!12981 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2335, file: !2335, line: 383, type: !12982, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !12984)
!12982 = !DISubroutineType(types: !12983)
!12983 = !{null, !2339}
!12984 = !{!12985}
!12985 = !DILocalVariable(name: "thread", arg: 1, scope: !12981, file: !2335, line: 383, type: !2339)
!12986 = !DILocation(line: 0, scope: !12981)
!12987 = !DILocation(line: 387, column: 2, scope: !12981)
!12988 = !DILocation(line: 388, column: 1, scope: !12981)
!12989 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2335, file: !2335, line: 528, type: !12990, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !12997)
!12990 = !DISubroutineType(types: !12991)
!12991 = !{!160, !2339, !12992, !156, !304, !102, !102, !102, !103, !111, !108}
!12992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12993, size: 32)
!12993 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !297, line: 44, baseType: !12994)
!12994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !299, line: 47, size: 8, elements: !12995)
!12995 = !{!12996}
!12996 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12994, file: !299, line: 48, baseType: !110, size: 8)
!12997 = !{!12998, !12999, !13000, !13001, !13002, !13003, !13004, !13005, !13006, !13007, !13008}
!12998 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12989, file: !2335, line: 528, type: !2339)
!12999 = !DILocalVariable(name: "stack", arg: 2, scope: !12989, file: !2335, line: 529, type: !12992)
!13000 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12989, file: !2335, line: 529, type: !156)
!13001 = !DILocalVariable(name: "entry", arg: 4, scope: !12989, file: !2335, line: 530, type: !304)
!13002 = !DILocalVariable(name: "p1", arg: 5, scope: !12989, file: !2335, line: 531, type: !102)
!13003 = !DILocalVariable(name: "p2", arg: 6, scope: !12989, file: !2335, line: 531, type: !102)
!13004 = !DILocalVariable(name: "p3", arg: 7, scope: !12989, file: !2335, line: 531, type: !102)
!13005 = !DILocalVariable(name: "prio", arg: 8, scope: !12989, file: !2335, line: 532, type: !103)
!13006 = !DILocalVariable(name: "options", arg: 9, scope: !12989, file: !2335, line: 532, type: !111)
!13007 = !DILocalVariable(name: "name", arg: 10, scope: !12989, file: !2335, line: 532, type: !108)
!13008 = !DILocalVariable(name: "stack_ptr", scope: !12989, file: !2335, line: 534, type: !160)
!13009 = !DILocation(line: 0, scope: !12989)
!13010 = !DILocation(line: 536, column: 2, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !13012, file: !2335, line: 536, column: 2)
!13012 = distinct !DILexicalBlock(scope: !13013, file: !2335, line: 536, column: 2)
!13013 = distinct !DILexicalBlock(scope: !12989, file: !2335, line: 536, column: 2)
!13014 = !DILocation(line: 536, column: 2, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !13011, file: !2335, line: 536, column: 2)
!13016 = !DILocation(line: 550, column: 28, scope: !12989)
!13017 = !DILocation(line: 550, column: 2, scope: !12989)
!13018 = !DILocation(line: 553, column: 34, scope: !12989)
!13019 = !DILocation(line: 553, column: 2, scope: !12989)
!13020 = !DILocation(line: 554, column: 14, scope: !12989)
!13021 = !DILocation(line: 564, column: 2, scope: !12989)
!13022 = !DILocation(line: 567, column: 14, scope: !12989)
!13023 = !DILocation(line: 567, column: 24, scope: !12989)
!13024 = !DILocation(line: 612, column: 7, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !12989, file: !2335, line: 612, column: 6)
!13026 = !DILocation(line: 612, column: 6, scope: !12989)
!13027 = !DILocation(line: 627, column: 40, scope: !12989)
!13028 = !DILocation(line: 637, column: 2, scope: !12989)
!13029 = !DILocation(line: 613, column: 15, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13025, file: !2335, line: 612, column: 17)
!13031 = !DILocation(line: 613, column: 29, scope: !13030)
!13032 = !DILocation(line: 638, column: 1, scope: !12989)
!13033 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12709, file: !12709, line: 78, type: !13034, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13036)
!13034 = !DISubroutineType(types: !13035)
!13035 = !{!122, !102}
!13036 = !{!13037}
!13037 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13033, file: !12709, line: 78, type: !102)
!13038 = !DILocation(line: 0, scope: !13033)
!13039 = !DILocation(line: 80, column: 21, scope: !13033)
!13040 = !DILocation(line: 80, column: 2, scope: !13033)
!13041 = distinct !DISubprogram(name: "z_waitq_init", scope: !13042, file: !13042, line: 47, type: !13043, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13045)
!13042 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13043 = !DISubroutineType(types: !13044)
!13044 = !{null, !2370}
!13045 = !{!13046}
!13046 = !DILocalVariable(name: "w", arg: 1, scope: !13041, file: !13042, line: 47, type: !2370)
!13047 = !DILocation(line: 0, scope: !13041)
!13048 = !DILocation(line: 49, column: 21, scope: !13041)
!13049 = !DILocation(line: 49, column: 2, scope: !13041)
!13050 = !DILocation(line: 50, column: 1, scope: !13041)
!13051 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2335, file: !2335, line: 791, type: !13052, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13055)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{null, !13054, !103, !111, !32}
!13054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 32)
!13055 = !{!13056, !13057, !13058, !13059}
!13056 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13051, file: !2335, line: 791, type: !13054)
!13057 = !DILocalVariable(name: "priority", arg: 2, scope: !13051, file: !2335, line: 791, type: !103)
!13058 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13051, file: !2335, line: 792, type: !111)
!13059 = !DILocalVariable(name: "options", arg: 4, scope: !13051, file: !2335, line: 792, type: !32)
!13060 = !DILocation(line: 0, scope: !13051)
!13061 = !DILocation(line: 795, column: 15, scope: !13051)
!13062 = !DILocation(line: 795, column: 25, scope: !13051)
!13063 = !DILocation(line: 796, column: 30, scope: !13051)
!13064 = !DILocation(line: 796, column: 15, scope: !13051)
!13065 = !DILocation(line: 796, column: 28, scope: !13051)
!13066 = !DILocation(line: 797, column: 30, scope: !13051)
!13067 = !DILocation(line: 797, column: 15, scope: !13051)
!13068 = !DILocation(line: 797, column: 28, scope: !13051)
!13069 = !DILocation(line: 799, column: 22, scope: !13051)
!13070 = !DILocation(line: 799, column: 15, scope: !13051)
!13071 = !DILocation(line: 799, column: 20, scope: !13051)
!13072 = !DILocation(line: 801, column: 15, scope: !13051)
!13073 = !DILocation(line: 801, column: 28, scope: !13051)
!13074 = !DILocation(line: 814, column: 2, scope: !13051)
!13075 = !DILocation(line: 815, column: 1, scope: !13051)
!13076 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2335, file: !2335, line: 449, type: !13077, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13079)
!13077 = !DISubroutineType(types: !13078)
!13078 = !{!160, !2339, !12992, !156}
!13079 = !{!13080, !13081, !13082, !13083, !13084, !13085, !13086, !13087}
!13080 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13076, file: !2335, line: 449, type: !2339)
!13081 = !DILocalVariable(name: "stack", arg: 2, scope: !13076, file: !2335, line: 450, type: !12992)
!13082 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13076, file: !2335, line: 450, type: !156)
!13083 = !DILocalVariable(name: "stack_obj_size", scope: !13076, file: !2335, line: 452, type: !156)
!13084 = !DILocalVariable(name: "stack_buf_size", scope: !13076, file: !2335, line: 452, type: !156)
!13085 = !DILocalVariable(name: "stack_ptr", scope: !13076, file: !2335, line: 453, type: !160)
!13086 = !DILocalVariable(name: "stack_buf_start", scope: !13076, file: !2335, line: 453, type: !160)
!13087 = !DILocalVariable(name: "delta", scope: !13076, file: !2335, line: 454, type: !156)
!13088 = !DILocation(line: 0, scope: !13076)
!13089 = !DILocation(line: 465, column: 20, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13076, file: !2335, line: 463, column: 2)
!13091 = !DILocation(line: 473, column: 28, scope: !13076)
!13092 = !DILocation(line: 520, column: 2, scope: !13076)
!13093 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13094, file: !13094, line: 40, type: !13095, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13097)
!13094 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13095 = !DISubroutineType(types: !13096)
!13096 = !{null, !13054}
!13097 = !{!13098}
!13098 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13093, file: !13094, line: 40, type: !13054)
!13099 = !DILocation(line: 0, scope: !13093)
!13100 = !DILocation(line: 42, column: 31, scope: !13093)
!13101 = !DILocation(line: 42, column: 2, scope: !13093)
!13102 = !DILocation(line: 43, column: 1, scope: !13093)
!13103 = distinct !DISubprogram(name: "z_init_timeout", scope: !13094, file: !13094, line: 25, type: !2396, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13104)
!13104 = !{!13105}
!13105 = !DILocalVariable(name: "to", arg: 1, scope: !13103, file: !13094, line: 25, type: !2398)
!13106 = !DILocation(line: 0, scope: !13103)
!13107 = !DILocation(line: 27, column: 22, scope: !13103)
!13108 = !DILocation(line: 27, column: 2, scope: !13103)
!13109 = !DILocation(line: 28, column: 1, scope: !13103)
!13110 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !13111, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13113)
!13111 = !DISubroutineType(types: !13112)
!13112 = !{null, !2438}
!13113 = !{!13114}
!13114 = !DILocalVariable(name: "node", arg: 1, scope: !13110, file: !136, line: 211, type: !2438)
!13115 = !DILocation(line: 0, scope: !13110)
!13116 = !DILocation(line: 213, column: 8, scope: !13110)
!13117 = !DILocation(line: 213, column: 13, scope: !13110)
!13118 = !DILocation(line: 214, column: 8, scope: !13110)
!13119 = !DILocation(line: 214, column: 13, scope: !13110)
!13120 = !DILocation(line: 215, column: 1, scope: !13110)
!13121 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !13122, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13125)
!13122 = !DISubroutineType(types: !13123)
!13123 = !{null, !13124}
!13124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!13125 = !{!13126}
!13126 = !DILocalVariable(name: "list", arg: 1, scope: !13121, file: !136, line: 197, type: !13124)
!13127 = !DILocation(line: 0, scope: !13121)
!13128 = !DILocation(line: 199, column: 8, scope: !13121)
!13129 = !DILocation(line: 199, column: 13, scope: !13121)
!13130 = !DILocation(line: 200, column: 8, scope: !13121)
!13131 = !DILocation(line: 200, column: 13, scope: !13121)
!13132 = !DILocation(line: 201, column: 1, scope: !13121)
!13133 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2335, file: !2335, line: 641, type: !13134, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13140)
!13134 = !DISubroutineType(types: !13135)
!13135 = !{!2338, !2339, !12992, !156, !304, !102, !102, !102, !103, !111, !13136}
!13136 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !13137)
!13137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !13138)
!13138 = !{!13139}
!13139 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13137, file: !105, line: 66, baseType: !104, size: 64)
!13140 = !{!13141, !13142, !13143, !13144, !13145, !13146, !13147, !13148, !13149, !13150}
!13141 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13133, file: !2335, line: 641, type: !2339)
!13142 = !DILocalVariable(name: "stack", arg: 2, scope: !13133, file: !2335, line: 642, type: !12992)
!13143 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13133, file: !2335, line: 643, type: !156)
!13144 = !DILocalVariable(name: "entry", arg: 4, scope: !13133, file: !2335, line: 643, type: !304)
!13145 = !DILocalVariable(name: "p1", arg: 5, scope: !13133, file: !2335, line: 644, type: !102)
!13146 = !DILocalVariable(name: "p2", arg: 6, scope: !13133, file: !2335, line: 644, type: !102)
!13147 = !DILocalVariable(name: "p3", arg: 7, scope: !13133, file: !2335, line: 644, type: !102)
!13148 = !DILocalVariable(name: "prio", arg: 8, scope: !13133, file: !2335, line: 645, type: !103)
!13149 = !DILocalVariable(name: "options", arg: 9, scope: !13133, file: !2335, line: 645, type: !111)
!13150 = !DILocalVariable(name: "delay", arg: 10, scope: !13133, file: !2335, line: 645, type: !13136)
!13151 = !DILocation(line: 0, scope: !13133)
!13152 = !DILocation(line: 1031, column: 3, scope: !12879, inlinedAt: !13153)
!13153 = distinct !DILocation(line: 48, column: 10, scope: !12883, inlinedAt: !13154)
!13154 = distinct !DILocation(line: 647, column: 2, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13156, file: !2335, line: 647, column: 2)
!13156 = distinct !DILexicalBlock(scope: !13133, file: !2335, line: 647, column: 2)
!13157 = !DILocation(line: 0, scope: !12879, inlinedAt: !13153)
!13158 = !DILocation(line: 48, column: 9, scope: !12883, inlinedAt: !13154)
!13159 = !DILocation(line: 647, column: 2, scope: !13156)
!13160 = !DILocation(line: 647, column: 2, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13155, file: !2335, line: 647, column: 2)
!13162 = !DILocation(line: 649, column: 2, scope: !13133)
!13163 = !DILocation(line: 652, column: 7, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13133, file: !2335, line: 652, column: 6)
!13165 = !DILocation(line: 652, column: 6, scope: !13133)
!13166 = !DILocation(line: 653, column: 3, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13164, file: !2335, line: 652, column: 39)
!13168 = !DILocation(line: 654, column: 2, scope: !13167)
!13169 = !DILocation(line: 656, column: 2, scope: !13133)
!13170 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2335, file: !2335, line: 401, type: !13171, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13173)
!13171 = !DISubroutineType(types: !13172)
!13172 = !{null, !2339, !13136}
!13173 = !{!13174, !13175}
!13174 = !DILocalVariable(name: "thread", arg: 1, scope: !13170, file: !2335, line: 401, type: !2339)
!13175 = !DILocalVariable(name: "delay", arg: 2, scope: !13170, file: !2335, line: 401, type: !13136)
!13176 = !DILocation(line: 0, scope: !13170)
!13177 = !DILocation(line: 404, column: 6, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13170, file: !2335, line: 404, column: 6)
!13179 = !DILocation(line: 404, column: 6, scope: !13170)
!13180 = !DILocation(line: 405, column: 3, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13178, file: !2335, line: 404, column: 38)
!13182 = !DILocation(line: 406, column: 2, scope: !13181)
!13183 = !DILocation(line: 407, column: 3, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13178, file: !2335, line: 406, column: 9)
!13185 = !DILocation(line: 413, column: 1, scope: !13170)
!13186 = distinct !DISubprogram(name: "k_thread_start", scope: !5050, file: !5050, line: 205, type: !13187, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13189)
!13187 = !DISubroutineType(types: !13188)
!13188 = !{null, !2338}
!13189 = !{!13190}
!13190 = !DILocalVariable(name: "thread", arg: 1, scope: !13186, file: !5050, line: 205, type: !2338)
!13191 = !DILocation(line: 0, scope: !13186)
!13192 = !DILocation(line: 214, column: 2, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13186, file: !5050, line: 214, column: 2)
!13194 = !{i64 2151070717}
!13195 = !DILocation(line: 215, column: 2, scope: !13186)
!13196 = !DILocation(line: 216, column: 1, scope: !13186)
!13197 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13094, file: !13094, line: 47, type: !13171, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13198)
!13198 = !{!13199, !13200}
!13199 = !DILocalVariable(name: "thread", arg: 1, scope: !13197, file: !13094, line: 47, type: !2339)
!13200 = !DILocalVariable(name: "ticks", arg: 2, scope: !13197, file: !13094, line: 47, type: !13136)
!13201 = !DILocation(line: 0, scope: !13197)
!13202 = !DILocation(line: 49, column: 30, scope: !13197)
!13203 = !DILocation(line: 49, column: 2, scope: !13197)
!13204 = !DILocation(line: 50, column: 1, scope: !13197)
!13205 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2335, file: !2335, line: 748, type: !317, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13206)
!13206 = !{!13207, !13224}
!13207 = !DILocalVariable(name: "thread_data", scope: !13208, file: !2335, line: 750, type: !13209)
!13208 = distinct !DILexicalBlock(scope: !13205, file: !2335, line: 750, column: 2)
!13209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13210, size: 32)
!13210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !13211)
!13211 = !{!13212, !13213, !13214, !13215, !13216, !13217, !13218, !13219, !13220, !13221, !13222, !13223}
!13212 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13210, file: !127, line: 621, baseType: !2339, size: 32)
!13213 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13210, file: !127, line: 622, baseType: !12992, size: 32, offset: 32)
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13210, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!13215 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13210, file: !127, line: 624, baseType: !304, size: 32, offset: 96)
!13216 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13210, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!13217 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13210, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!13218 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13210, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!13219 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13210, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!13220 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13210, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13210, file: !127, line: 630, baseType: !314, size: 32, offset: 288)
!13222 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13210, file: !127, line: 631, baseType: !316, size: 32, offset: 320)
!13223 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13210, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!13224 = !DILocalVariable(name: "thread_data", scope: !13225, file: !2335, line: 781, type: !13209)
!13225 = distinct !DILexicalBlock(scope: !13205, file: !2335, line: 781, column: 2)
!13226 = !DILocation(line: 0, scope: !13208)
!13227 = !DILocation(line: 750, column: 2, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13229, file: !2335, line: 750, column: 2)
!13229 = distinct !DILexicalBlock(scope: !13230, file: !2335, line: 750, column: 2)
!13230 = distinct !DILexicalBlock(scope: !13208, file: !2335, line: 750, column: 2)
!13231 = !DILocation(line: 750, column: 2, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13233, file: !2335, line: 750, column: 2)
!13233 = distinct !DILexicalBlock(scope: !13228, file: !2335, line: 750, column: 2)
!13234 = !DILocation(line: 750, column: 2, scope: !13229)
!13235 = !DILocation(line: 750, column: 2, scope: !13208)
!13236 = !DILocation(line: 780, column: 2, scope: !13205)
!13237 = !DILocation(line: 0, scope: !13225)
!13238 = !DILocation(line: 781, column: 2, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13240, file: !2335, line: 781, column: 2)
!13240 = distinct !DILexicalBlock(scope: !13241, file: !2335, line: 781, column: 2)
!13241 = distinct !DILexicalBlock(scope: !13225, file: !2335, line: 781, column: 2)
!13242 = !DILocation(line: 752, column: 17, scope: !13243)
!13243 = distinct !DILexicalBlock(scope: !13230, file: !2335, line: 750, column: 38)
!13244 = !DILocation(line: 753, column: 17, scope: !13243)
!13245 = !DILocation(line: 754, column: 17, scope: !13243)
!13246 = !DILocation(line: 755, column: 17, scope: !13243)
!13247 = !DILocation(line: 756, column: 17, scope: !13243)
!13248 = !DILocation(line: 757, column: 17, scope: !13243)
!13249 = !DILocation(line: 758, column: 17, scope: !13243)
!13250 = !DILocation(line: 759, column: 17, scope: !13243)
!13251 = !DILocation(line: 760, column: 17, scope: !13243)
!13252 = !DILocation(line: 751, column: 3, scope: !13243)
!13253 = !DILocation(line: 763, column: 16, scope: !13243)
!13254 = !DILocation(line: 763, column: 29, scope: !13243)
!13255 = !DILocation(line: 763, column: 39, scope: !13243)
!13256 = !DILocation(line: 750, column: 2, scope: !13230)
!13257 = !DILocation(line: 750, column: 2, scope: !13233)
!13258 = distinct !{!13258, !13235, !13259}
!13259 = !DILocation(line: 764, column: 2, scope: !13208)
!13260 = !DILocation(line: 781, column: 2, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13262, file: !2335, line: 781, column: 2)
!13262 = distinct !DILexicalBlock(scope: !13239, file: !2335, line: 781, column: 2)
!13263 = !DILocation(line: 781, column: 2, scope: !13240)
!13264 = !DILocation(line: 781, column: 2, scope: !13225)
!13265 = !DILocation(line: 787, column: 2, scope: !13205)
!13266 = !DILocation(line: 788, column: 1, scope: !13205)
!13267 = !DILocation(line: 782, column: 20, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13269, file: !2335, line: 782, column: 7)
!13269 = distinct !DILexicalBlock(scope: !13241, file: !2335, line: 781, column: 38)
!13270 = !DILocation(line: 782, column: 31, scope: !13268)
!13271 = !DILocation(line: 782, column: 7, scope: !13269)
!13272 = !DILocation(line: 783, column: 37, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13268, file: !2335, line: 782, column: 51)
!13274 = !DILocation(line: 784, column: 10, scope: !13273)
!13275 = !DILocation(line: 783, column: 4, scope: !13273)
!13276 = !DILocation(line: 785, column: 3, scope: !13273)
!13277 = !DILocation(line: 781, column: 2, scope: !13241)
!13278 = !DILocation(line: 781, column: 2, scope: !13262)
!13279 = distinct !{!13279, !13264, !13280}
!13280 = !DILocation(line: 786, column: 2, scope: !13225)
!13281 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3696, file: !3696, line: 403, type: !3697, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13282)
!13282 = !{!13283}
!13283 = !DILocalVariable(name: "t", arg: 1, scope: !13281, file: !3696, line: 403, type: !112)
!13284 = !DILocation(line: 0, scope: !13281)
!13285 = !DILocalVariable(name: "t", arg: 1, scope: !13286, file: !3696, line: 102, type: !112)
!13286 = distinct !DISubprogram(name: "z_tmcvt", scope: !3696, file: !3696, line: 102, type: !3704, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13287)
!13287 = !{!13285, !13288, !13289, !13290, !13291, !13292, !13293, !13294, !13295, !13296, !13297}
!13288 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13286, file: !3696, line: 102, type: !111)
!13289 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13286, file: !3696, line: 103, type: !111)
!13290 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13286, file: !3696, line: 103, type: !122)
!13291 = !DILocalVariable(name: "result32", arg: 5, scope: !13286, file: !3696, line: 104, type: !122)
!13292 = !DILocalVariable(name: "round_up", arg: 6, scope: !13286, file: !3696, line: 104, type: !122)
!13293 = !DILocalVariable(name: "round_off", arg: 7, scope: !13286, file: !3696, line: 105, type: !122)
!13294 = !DILocalVariable(name: "mul_ratio", scope: !13286, file: !3696, line: 107, type: !122)
!13295 = !DILocalVariable(name: "div_ratio", scope: !13286, file: !3696, line: 109, type: !122)
!13296 = !DILocalVariable(name: "off", scope: !13286, file: !3696, line: 116, type: !112)
!13297 = !DILocalVariable(name: "rdivisor", scope: !13298, file: !3696, line: 119, type: !111)
!13298 = distinct !DILexicalBlock(scope: !13299, file: !3696, line: 118, column: 18)
!13299 = distinct !DILexicalBlock(scope: !13286, file: !3696, line: 118, column: 6)
!13300 = !DILocation(line: 0, scope: !13286, inlinedAt: !13301)
!13301 = distinct !DILocation(line: 406, column: 9, scope: !13281)
!13302 = !DILocation(line: 145, column: 13, scope: !13303, inlinedAt: !13301)
!13303 = distinct !DILexicalBlock(scope: !13304, file: !3696, line: 144, column: 10)
!13304 = distinct !DILexicalBlock(scope: !13305, file: !3696, line: 142, column: 7)
!13305 = distinct !DILexicalBlock(scope: !13306, file: !3696, line: 141, column: 24)
!13306 = distinct !DILexicalBlock(scope: !13307, file: !3696, line: 141, column: 13)
!13307 = distinct !DILexicalBlock(scope: !13286, file: !3696, line: 134, column: 6)
!13308 = !DILocation(line: 406, column: 2, scope: !13281)
!13309 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2335, file: !2335, line: 817, type: !4935, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13310)
!13310 = !{!13311, !13312, !13313, !13314}
!13311 = !DILocalVariable(name: "entry", arg: 1, scope: !13309, file: !2335, line: 817, type: !304)
!13312 = !DILocalVariable(name: "p1", arg: 2, scope: !13309, file: !2335, line: 818, type: !102)
!13313 = !DILocalVariable(name: "p2", arg: 3, scope: !13309, file: !2335, line: 818, type: !102)
!13314 = !DILocalVariable(name: "p3", arg: 4, scope: !13309, file: !2335, line: 818, type: !102)
!13315 = !DILocation(line: 0, scope: !13309)
!13316 = !DILocation(line: 822, column: 2, scope: !13309)
!13317 = !DILocation(line: 822, column: 17, scope: !13309)
!13318 = !DILocation(line: 822, column: 30, scope: !13309)
!13319 = !DILocation(line: 823, column: 2, scope: !13309)
!13320 = !DILocation(line: 845, column: 2, scope: !13309)
!13321 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2335, file: !2335, line: 853, type: !13322, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13325)
!13322 = !DISubroutineType(types: !13323)
!13323 = !{!122, !13324}
!13324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 32)
!13325 = !{!13326, !13327}
!13326 = !DILocalVariable(name: "l", arg: 1, scope: !13321, file: !2335, line: 853, type: !13324)
!13327 = !DILocalVariable(name: "thread_cpu", scope: !13321, file: !2335, line: 855, type: !22)
!13328 = !DILocation(line: 0, scope: !13321)
!13329 = !DILocation(line: 855, column: 28, scope: !13321)
!13330 = !DILocation(line: 857, column: 17, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13321, file: !2335, line: 857, column: 6)
!13332 = !DILocation(line: 857, column: 6, scope: !13321)
!13333 = !DILocation(line: 858, column: 19, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13335, file: !2335, line: 858, column: 7)
!13335 = distinct !DILexicalBlock(scope: !13331, file: !2335, line: 857, column: 24)
!13336 = !DILocation(line: 858, column: 42, scope: !13334)
!13337 = !DILocation(line: 858, column: 28, scope: !13334)
!13338 = !DILocation(line: 858, column: 25, scope: !13334)
!13339 = !DILocation(line: 858, column: 7, scope: !13335)
!13340 = !DILocation(line: 862, column: 2, scope: !13321)
!13341 = !DILocation(line: 863, column: 1, scope: !13321)
!13342 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2335, file: !2335, line: 865, type: !13322, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13343)
!13343 = !{!13344}
!13344 = !DILocalVariable(name: "l", arg: 1, scope: !13342, file: !2335, line: 865, type: !13324)
!13345 = !DILocation(line: 0, scope: !13342)
!13346 = !DILocation(line: 867, column: 9, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13342, file: !2335, line: 867, column: 6)
!13348 = !DILocation(line: 867, column: 38, scope: !13347)
!13349 = !DILocation(line: 867, column: 24, scope: !13347)
!13350 = !DILocation(line: 867, column: 54, scope: !13347)
!13351 = !DILocation(line: 867, column: 43, scope: !13347)
!13352 = !DILocation(line: 867, column: 41, scope: !13347)
!13353 = !DILocation(line: 867, column: 20, scope: !13347)
!13354 = !DILocation(line: 867, column: 6, scope: !13342)
!13355 = !DILocation(line: 870, column: 16, scope: !13342)
!13356 = !DILocation(line: 871, column: 2, scope: !13342)
!13357 = !DILocation(line: 872, column: 1, scope: !13342)
!13358 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2335, file: !2335, line: 874, type: !13359, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13361)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{null, !13324}
!13361 = !{!13362}
!13362 = !DILocalVariable(name: "l", arg: 1, scope: !13358, file: !2335, line: 874, type: !13324)
!13363 = !DILocation(line: 0, scope: !13358)
!13364 = !DILocation(line: 876, column: 32, scope: !13358)
!13365 = !DILocation(line: 876, column: 18, scope: !13358)
!13366 = !DILocation(line: 876, column: 48, scope: !13358)
!13367 = !DILocation(line: 876, column: 37, scope: !13358)
!13368 = !DILocation(line: 876, column: 35, scope: !13358)
!13369 = !DILocation(line: 876, column: 5, scope: !13358)
!13370 = !DILocation(line: 876, column: 16, scope: !13358)
!13371 = !DILocation(line: 877, column: 1, scope: !13358)
!13372 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2335, file: !2335, line: 888, type: !13373, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13375)
!13373 = !DISubroutineType(types: !13374)
!13374 = !{!103, !2339}
!13375 = !{!13376}
!13376 = !DILocalVariable(name: "thread", arg: 1, scope: !13372, file: !2335, line: 888, type: !2339)
!13377 = !DILocation(line: 0, scope: !13372)
!13378 = !DILocation(line: 893, column: 2, scope: !13372)
!13379 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2335, file: !2335, line: 897, type: !13380, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13382)
!13380 = !DISubroutineType(types: !13381)
!13381 = !{!103, !2339, !32}
!13382 = !{!13383, !13384}
!13383 = !DILocalVariable(name: "thread", arg: 1, scope: !13379, file: !2335, line: 897, type: !2339)
!13384 = !DILocalVariable(name: "options", arg: 2, scope: !13379, file: !2335, line: 897, type: !32)
!13385 = !DILocation(line: 0, scope: !13379)
!13386 = !DILocation(line: 902, column: 2, scope: !13379)
!13387 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2335, file: !2335, line: 1072, type: !13388, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13393)
!13388 = !DISubroutineType(types: !13389)
!13389 = !{!103, !2338, !13390}
!13390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13391, size: 32)
!13391 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !199, line: 234, baseType: !13392)
!13392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !199, line: 192, elements: !2275)
!13393 = !{!13394, !13395}
!13394 = !DILocalVariable(name: "thread", arg: 1, scope: !13387, file: !2335, line: 1072, type: !2338)
!13395 = !DILocalVariable(name: "stats", arg: 2, scope: !13387, file: !2335, line: 1073, type: !13390)
!13396 = !DILocation(line: 0, scope: !13387)
!13397 = !DILocation(line: 1075, column: 14, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13387, file: !2335, line: 1075, column: 6)
!13399 = !DILocation(line: 1075, column: 23, scope: !13398)
!13400 = !DILocation(line: 1086, column: 1, scope: !13387)
!13401 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2335, file: !2335, line: 1088, type: !13402, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !13404)
!13402 = !DISubroutineType(types: !13403)
!13403 = !{!103, !13390}
!13404 = !{!13405}
!13405 = !DILocalVariable(name: "stats", arg: 1, scope: !13401, file: !2335, line: 1088, type: !13390)
!13406 = !DILocation(line: 0, scope: !13401)
!13407 = !DILocation(line: 1094, column: 12, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13401, file: !2335, line: 1094, column: 6)
!13409 = !DILocation(line: 1120, column: 1, scope: !13401)
!13410 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13411, file: !13411, line: 20, type: !317, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3418, retainedNodes: !2275)
!13411 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13412 = !DILocation(line: 30, column: 2, scope: !13410)
!13413 = !DILocation(line: 31, column: 1, scope: !13410)
!13414 = distinct !DISubprogram(name: "idle", scope: !13411, file: !13411, line: 33, type: !306, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3418, retainedNodes: !13415)
!13415 = !{!13416, !13417, !13418}
!13416 = !DILocalVariable(name: "unused1", arg: 1, scope: !13414, file: !13411, line: 33, type: !102)
!13417 = !DILocalVariable(name: "unused2", arg: 2, scope: !13414, file: !13411, line: 33, type: !102)
!13418 = !DILocalVariable(name: "unused3", arg: 3, scope: !13414, file: !13411, line: 33, type: !102)
!13419 = !DILocation(line: 0, scope: !13414)
!13420 = !DILocation(line: 39, column: 2, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13422, file: !13411, line: 39, column: 2)
!13422 = distinct !DILexicalBlock(scope: !13414, file: !13411, line: 39, column: 2)
!13423 = !DILocation(line: 39, column: 2, scope: !13422)
!13424 = !DILocation(line: 39, column: 2, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13421, file: !13411, line: 39, column: 2)
!13426 = !DILocation(line: 55, column: 2, scope: !13427, inlinedAt: !13431)
!13427 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7706, file: !7706, line: 42, type: !9871, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3418, retainedNodes: !13428)
!13428 = !{!13429, !13430}
!13429 = !DILocalVariable(name: "key", scope: !13427, file: !7706, line: 44, type: !32)
!13430 = !DILocalVariable(name: "tmp", scope: !13427, file: !7706, line: 53, type: !32)
!13431 = distinct !DILocation(line: 62, column: 10, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13414, file: !13411, line: 41, column: 15)
!13433 = !{i64 2844692}
!13434 = !DILocation(line: 0, scope: !13427, inlinedAt: !13431)
!13435 = !DILocation(line: 86, column: 3, scope: !13432)
!13436 = !DILocation(line: 41, column: 2, scope: !13414)
!13437 = distinct !{!13437, !13436, !13438}
!13438 = !DILocation(line: 105, column: 2, scope: !13414)
!13439 = distinct !DISubprogram(name: "k_cpu_idle", scope: !127, file: !127, line: 5627, type: !317, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3418, retainedNodes: !2275)
!13440 = !DILocation(line: 5629, column: 2, scope: !13439)
!13441 = !DILocation(line: 5630, column: 1, scope: !13439)
!13442 = !DISubprogram(name: "arch_cpu_idle", scope: !297, file: !297, line: 167, type: !317, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2275)
!13443 = distinct !DISubprogram(name: "k_msgq_init", scope: !13444, file: !13444, line: 35, type: !13445, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13460)
!13444 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13445 = !DISubroutineType(types: !13446)
!13446 = !{null, !13447, !160, !156, !111}
!13447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13448, size: 32)
!13448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !13449)
!13449 = !{!13450, !13451, !13452, !13453, !13454, !13455, !13456, !13457, !13458, !13459}
!13450 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13448, file: !127, line: 4206, baseType: !3456, size: 64)
!13451 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13448, file: !127, line: 4208, baseType: !3512, size: 32, offset: 64)
!13452 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13448, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!13453 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13448, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!13454 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !13448, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!13455 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !13448, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!13456 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !13448, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!13457 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !13448, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!13458 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13448, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!13459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13448, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!13460 = !{!13461, !13462, !13463, !13464}
!13461 = !DILocalVariable(name: "msgq", arg: 1, scope: !13443, file: !13444, line: 35, type: !13447)
!13462 = !DILocalVariable(name: "buffer", arg: 2, scope: !13443, file: !13444, line: 35, type: !160)
!13463 = !DILocalVariable(name: "msg_size", arg: 3, scope: !13443, file: !13444, line: 35, type: !156)
!13464 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !13443, file: !13444, line: 36, type: !111)
!13465 = !DILocation(line: 0, scope: !13443)
!13466 = !DILocation(line: 38, column: 8, scope: !13443)
!13467 = !DILocation(line: 38, column: 17, scope: !13443)
!13468 = !DILocation(line: 39, column: 8, scope: !13443)
!13469 = !DILocation(line: 39, column: 17, scope: !13443)
!13470 = !DILocation(line: 40, column: 8, scope: !13443)
!13471 = !DILocation(line: 40, column: 21, scope: !13443)
!13472 = !DILocation(line: 41, column: 40, scope: !13443)
!13473 = !DILocation(line: 41, column: 28, scope: !13443)
!13474 = !DILocation(line: 41, column: 8, scope: !13443)
!13475 = !DILocation(line: 41, column: 19, scope: !13443)
!13476 = !DILocation(line: 42, column: 8, scope: !13443)
!13477 = !DILocation(line: 42, column: 17, scope: !13443)
!13478 = !DILocation(line: 43, column: 8, scope: !13443)
!13479 = !DILocation(line: 43, column: 18, scope: !13443)
!13480 = !DILocation(line: 44, column: 8, scope: !13443)
!13481 = !DILocation(line: 44, column: 18, scope: !13443)
!13482 = !DILocation(line: 45, column: 8, scope: !13443)
!13483 = !DILocation(line: 45, column: 14, scope: !13443)
!13484 = !DILocation(line: 46, column: 22, scope: !13443)
!13485 = !DILocation(line: 46, column: 2, scope: !13443)
!13486 = !DILocation(line: 47, column: 15, scope: !13443)
!13487 = !DILocation(line: 55, column: 1, scope: !13443)
!13488 = distinct !DISubprogram(name: "z_waitq_init", scope: !13042, file: !13042, line: 47, type: !13489, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13491)
!13489 = !DISubroutineType(types: !13490)
!13490 = !{null, !3455}
!13491 = !{!13492}
!13492 = !DILocalVariable(name: "w", arg: 1, scope: !13488, file: !13042, line: 47, type: !3455)
!13493 = !DILocation(line: 0, scope: !13488)
!13494 = !DILocation(line: 49, column: 21, scope: !13488)
!13495 = !DILocation(line: 49, column: 2, scope: !13488)
!13496 = !DILocation(line: 50, column: 1, scope: !13488)
!13497 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !13498, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13501)
!13498 = !DISubroutineType(types: !13499)
!13499 = !{null, !13500}
!13500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 32)
!13501 = !{!13502}
!13502 = !DILocalVariable(name: "list", arg: 1, scope: !13497, file: !136, line: 197, type: !13500)
!13503 = !DILocation(line: 0, scope: !13497)
!13504 = !DILocation(line: 199, column: 8, scope: !13497)
!13505 = !DILocation(line: 199, column: 13, scope: !13497)
!13506 = !DILocation(line: 200, column: 8, scope: !13497)
!13507 = !DILocation(line: 200, column: 13, scope: !13497)
!13508 = !DILocation(line: 201, column: 1, scope: !13497)
!13509 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !13444, file: !13444, line: 57, type: !13510, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13512)
!13510 = !DISubroutineType(types: !13511)
!13511 = !{!103, !13447, !156, !111}
!13512 = !{!13513, !13514, !13515, !13516, !13517, !13518}
!13513 = !DILocalVariable(name: "msgq", arg: 1, scope: !13509, file: !13444, line: 57, type: !13447)
!13514 = !DILocalVariable(name: "msg_size", arg: 2, scope: !13509, file: !13444, line: 57, type: !156)
!13515 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !13509, file: !13444, line: 58, type: !111)
!13516 = !DILocalVariable(name: "buffer", scope: !13509, file: !13444, line: 60, type: !102)
!13517 = !DILocalVariable(name: "ret", scope: !13509, file: !13444, line: 61, type: !103)
!13518 = !DILocalVariable(name: "total_size", scope: !13509, file: !13444, line: 62, type: !156)
!13519 = !DILocation(line: 0, scope: !13509)
!13520 = !DILocation(line: 62, column: 2, scope: !13509)
!13521 = !DILocation(line: 66, column: 6, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13509, file: !13444, line: 66, column: 6)
!13523 = !DILocation(line: 66, column: 6, scope: !13509)
!13524 = !DILocation(line: 69, column: 28, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13522, file: !13444, line: 68, column: 9)
!13526 = !DILocation(line: 69, column: 12, scope: !13525)
!13527 = !DILocation(line: 70, column: 14, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13525, file: !13444, line: 70, column: 7)
!13529 = !DILocation(line: 70, column: 7, scope: !13525)
!13530 = !DILocation(line: 71, column: 4, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13528, file: !13444, line: 70, column: 23)
!13532 = !DILocation(line: 72, column: 10, scope: !13531)
!13533 = !DILocation(line: 72, column: 16, scope: !13531)
!13534 = !DILocation(line: 74, column: 3, scope: !13531)
!13535 = !DILocation(line: 0, scope: !13522)
!13536 = !DILocation(line: 82, column: 1, scope: !13509)
!13537 = !DILocation(line: 81, column: 2, scope: !13509)
!13538 = distinct !DISubprogram(name: "size_mul_overflow", scope: !13539, file: !13539, line: 105, type: !13540, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13542)
!13539 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13540 = !DISubroutineType(types: !13541)
!13541 = !{!122, !156, !156, !2846}
!13542 = !{!13543, !13544, !13545}
!13543 = !DILocalVariable(name: "a", arg: 1, scope: !13538, file: !13539, line: 105, type: !156)
!13544 = !DILocalVariable(name: "b", arg: 2, scope: !13538, file: !13539, line: 105, type: !156)
!13545 = !DILocalVariable(name: "result", arg: 3, scope: !13538, file: !13539, line: 105, type: !2846)
!13546 = !DILocation(line: 0, scope: !13538)
!13547 = !DILocation(line: 107, column: 9, scope: !13538)
!13548 = !DILocation(line: 107, column: 2, scope: !13538)
!13549 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13550, file: !13550, line: 102, type: !13551, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13552)
!13550 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13551 = !DISubroutineType(types: !3399)
!13552 = !{!13553}
!13553 = !DILocalVariable(name: "size", arg: 1, scope: !13549, file: !13550, line: 102, type: !156)
!13554 = !DILocation(line: 0, scope: !13549)
!13555 = !DILocation(line: 104, column: 9, scope: !13549)
!13556 = !DILocation(line: 104, column: 2, scope: !13549)
!13557 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !13444, file: !13444, line: 95, type: !13558, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13560)
!13558 = !DISubroutineType(types: !13559)
!13559 = !{!103, !13447}
!13560 = !{!13561}
!13561 = !DILocalVariable(name: "msgq", arg: 1, scope: !13557, file: !13444, line: 95, type: !13447)
!13562 = !DILocation(line: 0, scope: !13557)
!13563 = !DILocation(line: 99, column: 2, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13557, file: !13444, line: 99, column: 2)
!13565 = !DILocation(line: 99, column: 2, scope: !13557)
!13566 = !DILocation(line: 105, column: 13, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13557, file: !13444, line: 105, column: 6)
!13568 = !DILocation(line: 105, column: 19, scope: !13567)
!13569 = !DILocation(line: 105, column: 40, scope: !13567)
!13570 = !DILocation(line: 105, column: 6, scope: !13557)
!13571 = !DILocation(line: 106, column: 16, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13567, file: !13444, line: 105, column: 47)
!13573 = !DILocation(line: 106, column: 3, scope: !13572)
!13574 = !DILocation(line: 107, column: 15, scope: !13572)
!13575 = !DILocation(line: 108, column: 2, scope: !13572)
!13576 = !DILocation(line: 113, column: 1, scope: !13557)
!13577 = distinct !DISubprogram(name: "z_waitq_head", scope: !13042, file: !13042, line: 52, type: !13578, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13580)
!13578 = !DISubroutineType(types: !13579)
!13579 = !{!3438, !3455}
!13580 = !{!13581}
!13581 = !DILocalVariable(name: "w", arg: 1, scope: !13577, file: !13042, line: 52, type: !3455)
!13582 = !DILocation(line: 0, scope: !13577)
!13583 = !DILocation(line: 54, column: 52, scope: !13577)
!13584 = !DILocation(line: 54, column: 28, scope: !13577)
!13585 = !DILocation(line: 54, column: 9, scope: !13577)
!13586 = !DILocation(line: 54, column: 2, scope: !13577)
!13587 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !13588, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13590)
!13588 = !DISubroutineType(types: !13589)
!13589 = !{!3423, !13500}
!13590 = !{!13591}
!13591 = !DILocalVariable(name: "list", arg: 1, scope: !13587, file: !136, line: 294, type: !13500)
!13592 = !DILocation(line: 0, scope: !13587)
!13593 = !DILocation(line: 296, column: 9, scope: !13587)
!13594 = !DILocation(line: 296, column: 49, scope: !13587)
!13595 = !DILocation(line: 296, column: 2, scope: !13587)
!13596 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !13597, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13599)
!13597 = !DISubroutineType(types: !13598)
!13598 = !{!122, !13500}
!13599 = !{!13600}
!13600 = !DILocalVariable(name: "list", arg: 1, scope: !13596, file: !136, line: 266, type: !13500)
!13601 = !DILocation(line: 0, scope: !13596)
!13602 = !DILocation(line: 268, column: 15, scope: !13596)
!13603 = !DILocation(line: 268, column: 20, scope: !13596)
!13604 = !DILocation(line: 268, column: 2, scope: !13596)
!13605 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !13444, file: !13444, line: 116, type: !13606, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13612)
!13606 = !DISubroutineType(types: !13607)
!13607 = !{!103, !13447, !13, !13608}
!13608 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !13609)
!13609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !13610)
!13610 = !{!13611}
!13611 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13609, file: !105, line: 66, baseType: !104, size: 64)
!13612 = !{!13613, !13614, !13615, !13616, !13617, !13622}
!13613 = !DILocalVariable(name: "msgq", arg: 1, scope: !13605, file: !13444, line: 116, type: !13447)
!13614 = !DILocalVariable(name: "data", arg: 2, scope: !13605, file: !13444, line: 116, type: !13)
!13615 = !DILocalVariable(name: "timeout", arg: 3, scope: !13605, file: !13444, line: 116, type: !13608)
!13616 = !DILocalVariable(name: "pending_thread", scope: !13605, file: !13444, line: 120, type: !3438)
!13617 = !DILocalVariable(name: "key", scope: !13605, file: !13444, line: 121, type: !13618)
!13618 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !13619)
!13619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !13620)
!13620 = !{!13621}
!13621 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13619, file: !152, line: 33, baseType: !103, size: 32)
!13622 = !DILocalVariable(name: "result", scope: !13605, file: !13444, line: 122, type: !103)
!13623 = !DILocation(line: 0, scope: !13605)
!13624 = !DILocation(line: 1031, column: 3, scope: !13625, inlinedAt: !13628)
!13625 = distinct !DISubprogram(name: "__get_IPSR", scope: !7585, file: !7585, line: 1027, type: !7672, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13626)
!13626 = !{!13627}
!13627 = !DILocalVariable(name: "result", scope: !13625, file: !7585, line: 1029, type: !111)
!13628 = distinct !DILocation(line: 48, column: 10, scope: !13629, inlinedAt: !13630)
!13629 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8579, file: !8579, line: 46, type: !8580, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !2275)
!13630 = distinct !DILocation(line: 118, column: 2, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13632, file: !13444, line: 118, column: 2)
!13632 = distinct !DILexicalBlock(scope: !13605, file: !13444, line: 118, column: 2)
!13633 = !{i64 6993258}
!13634 = !DILocation(line: 0, scope: !13625, inlinedAt: !13628)
!13635 = !DILocation(line: 48, column: 9, scope: !13629, inlinedAt: !13630)
!13636 = !DILocation(line: 118, column: 2, scope: !13631)
!13637 = !DILocation(line: 118, column: 2, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13631, file: !13444, line: 118, column: 2)
!13639 = !DILocation(line: 124, column: 27, scope: !13605)
!13640 = !DILocalVariable(name: "l", arg: 1, scope: !13641, file: !152, line: 136, type: !13644)
!13641 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !13642, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13645)
!13642 = !DISubroutineType(types: !13643)
!13643 = !{!13618, !13644}
!13644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 32)
!13645 = !{!13640, !13646}
!13646 = !DILocalVariable(name: "k", scope: !13641, file: !152, line: 139, type: !13618)
!13647 = !DILocation(line: 0, scope: !13641, inlinedAt: !13648)
!13648 = distinct !DILocation(line: 124, column: 8, scope: !13605)
!13649 = !DILocation(line: 55, column: 2, scope: !13650, inlinedAt: !13654)
!13650 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7706, file: !7706, line: 42, type: !9871, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13651)
!13651 = !{!13652, !13653}
!13652 = !DILocalVariable(name: "key", scope: !13650, file: !7706, line: 44, type: !32)
!13653 = !DILocalVariable(name: "tmp", scope: !13650, file: !7706, line: 53, type: !32)
!13654 = distinct !DILocation(line: 145, column: 10, scope: !13641, inlinedAt: !13648)
!13655 = !{i64 2850829}
!13656 = !DILocation(line: 0, scope: !13650, inlinedAt: !13654)
!13657 = !DILocation(line: 148, column: 2, scope: !13658, inlinedAt: !13648)
!13658 = distinct !DILexicalBlock(scope: !13659, file: !152, line: 148, column: 2)
!13659 = distinct !DILexicalBlock(scope: !13641, file: !152, line: 148, column: 2)
!13660 = !DILocation(line: 148, column: 2, scope: !13659, inlinedAt: !13648)
!13661 = !DILocation(line: 148, column: 2, scope: !13662, inlinedAt: !13648)
!13662 = distinct !DILexicalBlock(scope: !13658, file: !152, line: 148, column: 2)
!13663 = !DILocation(line: 160, column: 2, scope: !13641, inlinedAt: !13648)
!13664 = !DILocation(line: 128, column: 12, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13605, file: !13444, line: 128, column: 6)
!13666 = !DILocation(line: 128, column: 30, scope: !13665)
!13667 = !DILocation(line: 128, column: 22, scope: !13665)
!13668 = !DILocation(line: 128, column: 6, scope: !13605)
!13669 = !DILocation(line: 130, column: 49, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13665, file: !13444, line: 128, column: 40)
!13671 = !DILocation(line: 130, column: 20, scope: !13670)
!13672 = !DILocation(line: 131, column: 22, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13670, file: !13444, line: 131, column: 7)
!13674 = !DILocation(line: 131, column: 7, scope: !13670)
!13675 = !DILocation(line: 135, column: 38, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13673, file: !13444, line: 131, column: 31)
!13677 = !DILocation(line: 136, column: 17, scope: !13676)
!13678 = !DILocation(line: 135, column: 10, scope: !13676)
!13679 = !DILocalVariable(name: "thread", arg: 1, scope: !13680, file: !12729, line: 65, type: !3438)
!13680 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12729, file: !12729, line: 65, type: !13681, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13683)
!13681 = !DISubroutineType(types: !13682)
!13682 = !{null, !3438, !32}
!13683 = !{!13679, !13684}
!13684 = !DILocalVariable(name: "value", arg: 2, scope: !13680, file: !12729, line: 65, type: !32)
!13685 = !DILocation(line: 0, scope: !13680, inlinedAt: !13686)
!13686 = distinct !DILocation(line: 138, column: 4, scope: !13676)
!13687 = !DILocation(line: 67, column: 15, scope: !13680, inlinedAt: !13686)
!13688 = !DILocation(line: 67, column: 33, scope: !13680, inlinedAt: !13686)
!13689 = !DILocation(line: 139, column: 4, scope: !13676)
!13690 = !DILocation(line: 140, column: 4, scope: !13676)
!13691 = !DILocation(line: 141, column: 4, scope: !13676)
!13692 = !DILocation(line: 144, column: 23, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13673, file: !13444, line: 142, column: 10)
!13694 = !DILocation(line: 144, column: 46, scope: !13693)
!13695 = !DILocation(line: 144, column: 10, scope: !13693)
!13696 = !DILocation(line: 145, column: 29, scope: !13693)
!13697 = !DILocation(line: 145, column: 20, scope: !13693)
!13698 = !DILocation(line: 146, column: 33, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13693, file: !13444, line: 146, column: 8)
!13700 = !DILocation(line: 146, column: 24, scope: !13699)
!13701 = !DILocation(line: 146, column: 8, scope: !13693)
!13702 = !DILocation(line: 147, column: 29, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13699, file: !13444, line: 146, column: 45)
!13704 = !DILocation(line: 147, column: 21, scope: !13703)
!13705 = !DILocation(line: 148, column: 4, scope: !13703)
!13706 = !DILocation(line: 149, column: 19, scope: !13693)
!13707 = !DILocation(line: 155, column: 2, scope: !13670)
!13708 = !DILocation(line: 155, column: 13, scope: !13665)
!13709 = !DILocation(line: 162, column: 3, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13711, file: !13444, line: 158, column: 9)
!13711 = distinct !DILexicalBlock(scope: !13665, file: !13444, line: 155, column: 13)
!13712 = !DILocation(line: 162, column: 18, scope: !13710)
!13713 = !DILocation(line: 162, column: 28, scope: !13710)
!13714 = !DILocation(line: 164, column: 49, scope: !13710)
!13715 = !DILocation(line: 164, column: 12, scope: !13710)
!13716 = !DILocation(line: 166, column: 3, scope: !13710)
!13717 = !DILocation(line: 0, scope: !13665)
!13718 = !DILocalVariable(name: "key", arg: 2, scope: !13719, file: !152, line: 190, type: !13618)
!13719 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !13720, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13722)
!13720 = !DISubroutineType(types: !13721)
!13721 = !{null, !13644, !13618}
!13722 = !{!13723, !13718}
!13723 = !DILocalVariable(name: "l", arg: 1, scope: !13719, file: !152, line: 189, type: !13644)
!13724 = !DILocation(line: 0, scope: !13719, inlinedAt: !13725)
!13725 = distinct !DILocation(line: 171, column: 2, scope: !13605)
!13726 = !DILocation(line: 194, column: 2, scope: !13727, inlinedAt: !13725)
!13727 = distinct !DILexicalBlock(scope: !13728, file: !152, line: 194, column: 2)
!13728 = distinct !DILexicalBlock(scope: !13719, file: !152, line: 194, column: 2)
!13729 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !13725)
!13730 = !DILocation(line: 194, column: 2, scope: !13731, inlinedAt: !13725)
!13731 = distinct !DILexicalBlock(scope: !13727, file: !152, line: 194, column: 2)
!13732 = !DILocalVariable(name: "key", arg: 1, scope: !13733, file: !7706, line: 84, type: !32)
!13733 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7706, file: !7706, line: 84, type: !7536, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13734)
!13734 = !{!13732}
!13735 = !DILocation(line: 0, scope: !13733, inlinedAt: !13736)
!13736 = distinct !DILocation(line: 215, column: 2, scope: !13719, inlinedAt: !13725)
!13737 = !DILocation(line: 95, column: 2, scope: !13733, inlinedAt: !13736)
!13738 = !{i64 2851646}
!13739 = !DILocation(line: 173, column: 2, scope: !13605)
!13740 = !DILocation(line: 174, column: 1, scope: !13605)
!13741 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !13444, file: !13444, line: 188, type: !13742, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13750)
!13742 = !DISubroutineType(types: !13743)
!13743 = !{null, !13447, !13744}
!13744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13745, size: 32)
!13745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !127, line: 4259, size: 96, elements: !13746)
!13746 = !{!13747, !13748, !13749}
!13747 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13745, file: !127, line: 4261, baseType: !156, size: 32)
!13748 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13745, file: !127, line: 4263, baseType: !111, size: 32, offset: 32)
!13749 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13745, file: !127, line: 4265, baseType: !111, size: 32, offset: 64)
!13750 = !{!13751, !13752}
!13751 = !DILocalVariable(name: "msgq", arg: 1, scope: !13741, file: !13444, line: 188, type: !13447)
!13752 = !DILocalVariable(name: "attrs", arg: 2, scope: !13741, file: !13444, line: 188, type: !13744)
!13753 = !DILocation(line: 0, scope: !13741)
!13754 = !DILocation(line: 190, column: 26, scope: !13741)
!13755 = !DILocation(line: 190, column: 9, scope: !13741)
!13756 = !DILocation(line: 190, column: 18, scope: !13741)
!13757 = !DILocation(line: 191, column: 26, scope: !13741)
!13758 = !DILocation(line: 191, column: 9, scope: !13741)
!13759 = !DILocation(line: 191, column: 18, scope: !13741)
!13760 = !DILocation(line: 192, column: 27, scope: !13741)
!13761 = !DILocation(line: 192, column: 9, scope: !13741)
!13762 = !DILocation(line: 192, column: 19, scope: !13741)
!13763 = !DILocation(line: 193, column: 1, scope: !13741)
!13764 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !13444, file: !13444, line: 206, type: !13765, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13767)
!13765 = !DISubroutineType(types: !13766)
!13766 = !{!103, !13447, !102, !13608}
!13767 = !{!13768, !13769, !13770, !13771, !13772, !13773}
!13768 = !DILocalVariable(name: "msgq", arg: 1, scope: !13764, file: !13444, line: 206, type: !13447)
!13769 = !DILocalVariable(name: "data", arg: 2, scope: !13764, file: !13444, line: 206, type: !102)
!13770 = !DILocalVariable(name: "timeout", arg: 3, scope: !13764, file: !13444, line: 206, type: !13608)
!13771 = !DILocalVariable(name: "key", scope: !13764, file: !13444, line: 210, type: !13618)
!13772 = !DILocalVariable(name: "pending_thread", scope: !13764, file: !13444, line: 211, type: !3438)
!13773 = !DILocalVariable(name: "result", scope: !13764, file: !13444, line: 212, type: !103)
!13774 = !DILocation(line: 0, scope: !13764)
!13775 = !DILocation(line: 1031, column: 3, scope: !13625, inlinedAt: !13776)
!13776 = distinct !DILocation(line: 48, column: 10, scope: !13629, inlinedAt: !13777)
!13777 = distinct !DILocation(line: 208, column: 2, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13779, file: !13444, line: 208, column: 2)
!13779 = distinct !DILexicalBlock(scope: !13764, file: !13444, line: 208, column: 2)
!13780 = !DILocation(line: 0, scope: !13625, inlinedAt: !13776)
!13781 = !DILocation(line: 48, column: 9, scope: !13629, inlinedAt: !13777)
!13782 = !DILocation(line: 208, column: 2, scope: !13778)
!13783 = !DILocation(line: 208, column: 2, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13778, file: !13444, line: 208, column: 2)
!13785 = !DILocation(line: 214, column: 27, scope: !13764)
!13786 = !DILocation(line: 0, scope: !13641, inlinedAt: !13787)
!13787 = distinct !DILocation(line: 214, column: 8, scope: !13764)
!13788 = !DILocation(line: 55, column: 2, scope: !13650, inlinedAt: !13789)
!13789 = distinct !DILocation(line: 145, column: 10, scope: !13641, inlinedAt: !13787)
!13790 = !DILocation(line: 0, scope: !13650, inlinedAt: !13789)
!13791 = !DILocation(line: 148, column: 2, scope: !13658, inlinedAt: !13787)
!13792 = !DILocation(line: 148, column: 2, scope: !13659, inlinedAt: !13787)
!13793 = !DILocation(line: 148, column: 2, scope: !13662, inlinedAt: !13787)
!13794 = !DILocation(line: 160, column: 2, scope: !13641, inlinedAt: !13787)
!13795 = !DILocation(line: 218, column: 12, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13764, file: !13444, line: 218, column: 6)
!13797 = !DILocation(line: 218, column: 22, scope: !13796)
!13798 = !DILocation(line: 218, column: 6, scope: !13764)
!13799 = !DILocation(line: 220, column: 28, scope: !13800)
!13800 = distinct !DILexicalBlock(scope: !13796, file: !13444, line: 218, column: 28)
!13801 = !DILocation(line: 220, column: 44, scope: !13800)
!13802 = !DILocation(line: 220, column: 9, scope: !13800)
!13803 = !DILocation(line: 221, column: 27, scope: !13800)
!13804 = !DILocation(line: 221, column: 18, scope: !13800)
!13805 = !DILocation(line: 222, column: 31, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13800, file: !13444, line: 222, column: 7)
!13807 = !DILocation(line: 222, column: 22, scope: !13806)
!13808 = !DILocation(line: 222, column: 7, scope: !13800)
!13809 = !DILocation(line: 223, column: 27, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13806, file: !13444, line: 222, column: 43)
!13811 = !DILocation(line: 223, column: 19, scope: !13810)
!13812 = !DILocation(line: 224, column: 3, scope: !13810)
!13813 = !DILocation(line: 225, column: 18, scope: !13800)
!13814 = !DILocation(line: 228, column: 49, scope: !13800)
!13815 = !DILocation(line: 228, column: 20, scope: !13800)
!13816 = !DILocation(line: 229, column: 22, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13800, file: !13444, line: 229, column: 7)
!13818 = !DILocation(line: 229, column: 7, scope: !13800)
!13819 = !DILocation(line: 233, column: 23, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13817, file: !13444, line: 229, column: 31)
!13821 = !DILocation(line: 233, column: 55, scope: !13820)
!13822 = !DILocation(line: 234, column: 17, scope: !13820)
!13823 = !DILocation(line: 233, column: 10, scope: !13820)
!13824 = !DILocation(line: 235, column: 29, scope: !13820)
!13825 = !DILocation(line: 235, column: 20, scope: !13820)
!13826 = !DILocation(line: 236, column: 33, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13820, file: !13444, line: 236, column: 8)
!13828 = !DILocation(line: 236, column: 24, scope: !13827)
!13829 = !DILocation(line: 236, column: 8, scope: !13820)
!13830 = !DILocation(line: 237, column: 29, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13827, file: !13444, line: 236, column: 45)
!13832 = !DILocation(line: 237, column: 21, scope: !13831)
!13833 = !DILocation(line: 238, column: 4, scope: !13831)
!13834 = !DILocation(line: 239, column: 19, scope: !13820)
!13835 = !DILocation(line: 0, scope: !13680, inlinedAt: !13836)
!13836 = distinct !DILocation(line: 242, column: 4, scope: !13820)
!13837 = !DILocation(line: 67, column: 15, scope: !13680, inlinedAt: !13836)
!13838 = !DILocation(line: 67, column: 33, scope: !13680, inlinedAt: !13836)
!13839 = !DILocation(line: 243, column: 4, scope: !13820)
!13840 = !DILocation(line: 244, column: 4, scope: !13820)
!13841 = !DILocation(line: 248, column: 4, scope: !13820)
!13842 = !DILocation(line: 251, column: 13, scope: !13796)
!13843 = !DILocation(line: 258, column: 3, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13845, file: !13444, line: 254, column: 9)
!13845 = distinct !DILexicalBlock(scope: !13796, file: !13444, line: 251, column: 13)
!13846 = !DILocation(line: 258, column: 18, scope: !13844)
!13847 = !DILocation(line: 258, column: 28, scope: !13844)
!13848 = !DILocation(line: 260, column: 49, scope: !13844)
!13849 = !DILocation(line: 260, column: 12, scope: !13844)
!13850 = !DILocation(line: 262, column: 3, scope: !13844)
!13851 = !DILocation(line: 0, scope: !13796)
!13852 = !DILocation(line: 0, scope: !13719, inlinedAt: !13853)
!13853 = distinct !DILocation(line: 267, column: 2, scope: !13764)
!13854 = !DILocation(line: 194, column: 2, scope: !13727, inlinedAt: !13853)
!13855 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !13853)
!13856 = !DILocation(line: 194, column: 2, scope: !13731, inlinedAt: !13853)
!13857 = !DILocation(line: 0, scope: !13733, inlinedAt: !13858)
!13858 = distinct !DILocation(line: 215, column: 2, scope: !13719, inlinedAt: !13853)
!13859 = !DILocation(line: 95, column: 2, scope: !13733, inlinedAt: !13858)
!13860 = !DILocation(line: 269, column: 2, scope: !13764)
!13861 = !DILocation(line: 270, column: 1, scope: !13764)
!13862 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !13444, file: !13444, line: 284, type: !13863, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13865)
!13863 = !DISubroutineType(types: !13864)
!13864 = !{!103, !13447, !102}
!13865 = !{!13866, !13867, !13868, !13869}
!13866 = !DILocalVariable(name: "msgq", arg: 1, scope: !13862, file: !13444, line: 284, type: !13447)
!13867 = !DILocalVariable(name: "data", arg: 2, scope: !13862, file: !13444, line: 284, type: !102)
!13868 = !DILocalVariable(name: "key", scope: !13862, file: !13444, line: 286, type: !13618)
!13869 = !DILocalVariable(name: "result", scope: !13862, file: !13444, line: 287, type: !103)
!13870 = !DILocation(line: 0, scope: !13862)
!13871 = !DILocation(line: 289, column: 27, scope: !13862)
!13872 = !DILocation(line: 0, scope: !13641, inlinedAt: !13873)
!13873 = distinct !DILocation(line: 289, column: 8, scope: !13862)
!13874 = !DILocation(line: 55, column: 2, scope: !13650, inlinedAt: !13875)
!13875 = distinct !DILocation(line: 145, column: 10, scope: !13641, inlinedAt: !13873)
!13876 = !DILocation(line: 0, scope: !13650, inlinedAt: !13875)
!13877 = !DILocation(line: 148, column: 2, scope: !13658, inlinedAt: !13873)
!13878 = !DILocation(line: 148, column: 2, scope: !13659, inlinedAt: !13873)
!13879 = !DILocation(line: 148, column: 2, scope: !13662, inlinedAt: !13873)
!13880 = !DILocation(line: 160, column: 2, scope: !13641, inlinedAt: !13873)
!13881 = !DILocation(line: 291, column: 12, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13862, file: !13444, line: 291, column: 6)
!13883 = !DILocation(line: 291, column: 22, scope: !13882)
!13884 = !DILocation(line: 291, column: 6, scope: !13862)
!13885 = !DILocation(line: 293, column: 28, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13882, file: !13444, line: 291, column: 28)
!13887 = !DILocation(line: 293, column: 44, scope: !13886)
!13888 = !DILocation(line: 293, column: 9, scope: !13886)
!13889 = !DILocation(line: 295, column: 2, scope: !13886)
!13890 = !DILocation(line: 0, scope: !13882)
!13891 = !DILocation(line: 0, scope: !13719, inlinedAt: !13892)
!13892 = distinct !DILocation(line: 302, column: 2, scope: !13862)
!13893 = !DILocation(line: 194, column: 2, scope: !13727, inlinedAt: !13892)
!13894 = !DILocation(line: 194, column: 2, scope: !13728, inlinedAt: !13892)
!13895 = !DILocation(line: 194, column: 2, scope: !13731, inlinedAt: !13892)
!13896 = !DILocation(line: 0, scope: !13733, inlinedAt: !13897)
!13897 = distinct !DILocation(line: 215, column: 2, scope: !13719, inlinedAt: !13892)
!13898 = !DILocation(line: 95, column: 2, scope: !13733, inlinedAt: !13897)
!13899 = !DILocation(line: 304, column: 2, scope: !13862)
!13900 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !13444, file: !13444, line: 318, type: !13901, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !13903)
!13901 = !DISubroutineType(types: !13902)
!13902 = !{null, !13447}
!13903 = !{!13904, !13905, !13906}
!13904 = !DILocalVariable(name: "msgq", arg: 1, scope: !13900, file: !13444, line: 318, type: !13447)
!13905 = !DILocalVariable(name: "key", scope: !13900, file: !13444, line: 320, type: !13618)
!13906 = !DILocalVariable(name: "pending_thread", scope: !13900, file: !13444, line: 321, type: !3438)
!13907 = !DILocation(line: 0, scope: !13900)
!13908 = !DILocation(line: 323, column: 27, scope: !13900)
!13909 = !DILocation(line: 0, scope: !13641, inlinedAt: !13910)
!13910 = distinct !DILocation(line: 323, column: 8, scope: !13900)
!13911 = !DILocation(line: 55, column: 2, scope: !13650, inlinedAt: !13912)
!13912 = distinct !DILocation(line: 145, column: 10, scope: !13641, inlinedAt: !13910)
!13913 = !DILocation(line: 0, scope: !13650, inlinedAt: !13912)
!13914 = !DILocation(line: 148, column: 2, scope: !13658, inlinedAt: !13910)
!13915 = !DILocation(line: 148, column: 2, scope: !13659, inlinedAt: !13910)
!13916 = !DILocation(line: 148, column: 2, scope: !13662, inlinedAt: !13910)
!13917 = !DILocation(line: 160, column: 2, scope: !13641, inlinedAt: !13910)
!13918 = !DILocation(line: 328, column: 27, scope: !13900)
!13919 = !DILocation(line: 328, column: 65, scope: !13900)
!13920 = !DILocation(line: 328, column: 2, scope: !13900)
!13921 = !DILocation(line: 0, scope: !13680, inlinedAt: !13922)
!13922 = distinct !DILocation(line: 329, column: 3, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13900, file: !13444, line: 328, column: 74)
!13924 = !DILocation(line: 67, column: 15, scope: !13680, inlinedAt: !13922)
!13925 = !DILocation(line: 67, column: 33, scope: !13680, inlinedAt: !13922)
!13926 = !DILocation(line: 330, column: 3, scope: !13923)
!13927 = distinct !{!13927, !13920, !13928}
!13928 = !DILocation(line: 331, column: 2, scope: !13900)
!13929 = !DILocation(line: 333, column: 8, scope: !13900)
!13930 = !DILocation(line: 333, column: 18, scope: !13900)
!13931 = !DILocation(line: 334, column: 25, scope: !13900)
!13932 = !DILocation(line: 334, column: 8, scope: !13900)
!13933 = !DILocation(line: 334, column: 17, scope: !13900)
!13934 = !DILocation(line: 336, column: 2, scope: !13900)
!13935 = !DILocation(line: 337, column: 1, scope: !13900)
!13936 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2557, file: !2557, line: 49, type: !13937, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !13946)
!13937 = !DISubroutineType(types: !13938)
!13938 = !{!103, !13939}
!13939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13940, size: 32)
!13940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !13941)
!13941 = !{!13942, !13943, !13944, !13945}
!13942 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13940, file: !127, line: 2722, baseType: !2492, size: 64)
!13943 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13940, file: !127, line: 2724, baseType: !2474, size: 32, offset: 64)
!13944 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13940, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!13945 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13940, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!13946 = !{!13947}
!13947 = !DILocalVariable(name: "mutex", arg: 1, scope: !13936, file: !2557, line: 49, type: !13939)
!13948 = !DILocation(line: 0, scope: !13936)
!13949 = !DILocation(line: 51, column: 9, scope: !13936)
!13950 = !DILocation(line: 51, column: 15, scope: !13936)
!13951 = !DILocation(line: 52, column: 9, scope: !13936)
!13952 = !DILocation(line: 52, column: 20, scope: !13936)
!13953 = !DILocation(line: 54, column: 23, scope: !13936)
!13954 = !DILocation(line: 54, column: 2, scope: !13936)
!13955 = !DILocation(line: 60, column: 2, scope: !13936)
!13956 = distinct !DISubprogram(name: "z_waitq_init", scope: !13042, file: !13042, line: 47, type: !13957, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !13959)
!13957 = !DISubroutineType(types: !13958)
!13958 = !{null, !2491}
!13959 = !{!13960}
!13960 = !DILocalVariable(name: "w", arg: 1, scope: !13956, file: !13042, line: 47, type: !2491)
!13961 = !DILocation(line: 0, scope: !13956)
!13962 = !DILocation(line: 49, column: 21, scope: !13956)
!13963 = !DILocation(line: 49, column: 2, scope: !13956)
!13964 = !DILocation(line: 50, column: 1, scope: !13956)
!13965 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !13966, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !13969)
!13966 = !DISubroutineType(types: !13967)
!13967 = !{null, !13968}
!13968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!13969 = !{!13970}
!13970 = !DILocalVariable(name: "list", arg: 1, scope: !13965, file: !136, line: 197, type: !13968)
!13971 = !DILocation(line: 0, scope: !13965)
!13972 = !DILocation(line: 199, column: 8, scope: !13965)
!13973 = !DILocation(line: 199, column: 13, scope: !13965)
!13974 = !DILocation(line: 200, column: 8, scope: !13965)
!13975 = !DILocation(line: 200, column: 13, scope: !13965)
!13976 = !DILocation(line: 201, column: 1, scope: !13965)
!13977 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2557, file: !2557, line: 95, type: !13978, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !13984)
!13978 = !DISubroutineType(types: !13979)
!13979 = !{!103, !13939, !13980}
!13980 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !13981)
!13981 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !13982)
!13982 = !{!13983}
!13983 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13981, file: !105, line: 66, baseType: !104, size: 64)
!13984 = !{!13985, !13986, !13987, !13988, !13993, !13994, !13995}
!13985 = !DILocalVariable(name: "mutex", arg: 1, scope: !13977, file: !2557, line: 95, type: !13939)
!13986 = !DILocalVariable(name: "timeout", arg: 2, scope: !13977, file: !2557, line: 95, type: !13980)
!13987 = !DILocalVariable(name: "new_prio", scope: !13977, file: !2557, line: 97, type: !103)
!13988 = !DILocalVariable(name: "key", scope: !13977, file: !2557, line: 98, type: !13989)
!13989 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !13990)
!13990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !13991)
!13991 = !{!13992}
!13992 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13990, file: !152, line: 33, baseType: !103, size: 32)
!13993 = !DILocalVariable(name: "resched", scope: !13977, file: !2557, line: 99, type: !122)
!13994 = !DILocalVariable(name: "got_mutex", scope: !13977, file: !2557, line: 146, type: !103)
!13995 = !DILocalVariable(name: "waiter", scope: !13996, file: !2557, line: 169, type: !2474)
!13996 = distinct !DILexicalBlock(scope: !13997, file: !2557, line: 168, column: 36)
!13997 = distinct !DILexicalBlock(scope: !13977, file: !2557, line: 168, column: 6)
!13998 = !DILocation(line: 0, scope: !13977)
!13999 = !DILocation(line: 1031, column: 3, scope: !14000, inlinedAt: !14003)
!14000 = distinct !DISubprogram(name: "__get_IPSR", scope: !7585, file: !7585, line: 1027, type: !7672, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14001)
!14001 = !{!14002}
!14002 = !DILocalVariable(name: "result", scope: !14000, file: !7585, line: 1029, type: !111)
!14003 = distinct !DILocation(line: 48, column: 10, scope: !14004, inlinedAt: !14005)
!14004 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8579, file: !8579, line: 46, type: !8580, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !2275)
!14005 = distinct !DILocation(line: 101, column: 2, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14007, file: !2557, line: 101, column: 2)
!14007 = distinct !DILexicalBlock(scope: !13977, file: !2557, line: 101, column: 2)
!14008 = !{i64 6976506}
!14009 = !DILocation(line: 0, scope: !14000, inlinedAt: !14003)
!14010 = !DILocation(line: 48, column: 9, scope: !14004, inlinedAt: !14005)
!14011 = !DILocation(line: 101, column: 2, scope: !14007)
!14012 = !DILocation(line: 101, column: 2, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14006, file: !2557, line: 101, column: 2)
!14014 = !DILocalVariable(name: "l", arg: 1, scope: !14015, file: !152, line: 136, type: !14018)
!14015 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !14016, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14019)
!14016 = !DISubroutineType(types: !14017)
!14017 = !{!13989, !14018}
!14018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 32)
!14019 = !{!14014, !14020}
!14020 = !DILocalVariable(name: "k", scope: !14015, file: !152, line: 139, type: !13989)
!14021 = !DILocation(line: 0, scope: !14015, inlinedAt: !14022)
!14022 = distinct !DILocation(line: 105, column: 8, scope: !13977)
!14023 = !DILocation(line: 55, column: 2, scope: !14024, inlinedAt: !14028)
!14024 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7706, file: !7706, line: 42, type: !9871, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14025)
!14025 = !{!14026, !14027}
!14026 = !DILocalVariable(name: "key", scope: !14024, file: !7706, line: 44, type: !32)
!14027 = !DILocalVariable(name: "tmp", scope: !14024, file: !7706, line: 53, type: !32)
!14028 = distinct !DILocation(line: 145, column: 10, scope: !14015, inlinedAt: !14022)
!14029 = !{i64 2849100}
!14030 = !DILocation(line: 0, scope: !14024, inlinedAt: !14028)
!14031 = !DILocation(line: 148, column: 2, scope: !14032, inlinedAt: !14022)
!14032 = distinct !DILexicalBlock(scope: !14033, file: !152, line: 148, column: 2)
!14033 = distinct !DILexicalBlock(scope: !14015, file: !152, line: 148, column: 2)
!14034 = !DILocation(line: 148, column: 2, scope: !14033, inlinedAt: !14022)
!14035 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !14022)
!14036 = distinct !DILexicalBlock(scope: !14032, file: !152, line: 148, column: 2)
!14037 = !DILocation(line: 160, column: 2, scope: !14015, inlinedAt: !14022)
!14038 = !DILocation(line: 107, column: 6, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !13977, file: !2557, line: 107, column: 6)
!14040 = !DILocation(line: 107, column: 6, scope: !13977)
!14041 = !{!"branch_weights", i32 2000, i32 1}
!14042 = !DILocation(line: 110, column: 6, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14039, file: !2557, line: 107, column: 71)
!14044 = !DILocation(line: 110, column: 21, scope: !14043)
!14045 = !DILocation(line: 109, column: 28, scope: !14043)
!14046 = !DILocation(line: 111, column: 13, scope: !14043)
!14047 = !DILocation(line: 114, column: 18, scope: !14043)
!14048 = !DILocation(line: 109, column: 10, scope: !14043)
!14049 = !DILocation(line: 109, column: 26, scope: !14043)
!14050 = !DILocation(line: 113, column: 20, scope: !14043)
!14051 = !DILocation(line: 114, column: 10, scope: !14043)
!14052 = !DILocation(line: 114, column: 16, scope: !14043)
!14053 = !DILocalVariable(name: "key", arg: 2, scope: !14054, file: !152, line: 190, type: !13989)
!14054 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !14055, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14057)
!14055 = !DISubroutineType(types: !14056)
!14056 = !{null, !14018, !13989}
!14057 = !{!14058, !14053}
!14058 = !DILocalVariable(name: "l", arg: 1, scope: !14054, file: !152, line: 189, type: !14018)
!14059 = !DILocation(line: 0, scope: !14054, inlinedAt: !14060)
!14060 = distinct !DILocation(line: 120, column: 3, scope: !14043)
!14061 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14060)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !152, line: 194, column: 2)
!14063 = distinct !DILexicalBlock(scope: !14054, file: !152, line: 194, column: 2)
!14064 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14060)
!14065 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14060)
!14066 = distinct !DILexicalBlock(scope: !14062, file: !152, line: 194, column: 2)
!14067 = !DILocalVariable(name: "key", arg: 1, scope: !14068, file: !7706, line: 84, type: !32)
!14068 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7706, file: !7706, line: 84, type: !7536, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14069)
!14069 = !{!14067}
!14070 = !DILocation(line: 0, scope: !14068, inlinedAt: !14071)
!14071 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14060)
!14072 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14071)
!14073 = !{i64 2849917}
!14074 = !DILocation(line: 124, column: 3, scope: !14043)
!14075 = !DILocation(line: 127, column: 6, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !13977, file: !2557, line: 127, column: 6)
!14077 = !DILocation(line: 127, column: 6, scope: !13977)
!14078 = !{!"branch_weights", i32 1, i32 2000}
!14079 = !DILocation(line: 0, scope: !14054, inlinedAt: !14080)
!14080 = distinct !DILocation(line: 128, column: 3, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14076, file: !2557, line: 127, column: 50)
!14082 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14080)
!14083 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14080)
!14084 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14080)
!14085 = !DILocation(line: 0, scope: !14068, inlinedAt: !14086)
!14086 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14080)
!14087 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14086)
!14088 = !DILocation(line: 132, column: 3, scope: !14081)
!14089 = !DILocation(line: 137, column: 53, scope: !13977)
!14090 = !DILocation(line: 137, column: 38, scope: !13977)
!14091 = !DILocation(line: 138, column: 29, scope: !13977)
!14092 = !DILocation(line: 138, column: 10, scope: !13977)
!14093 = !DILocation(line: 137, column: 13, scope: !13977)
!14094 = !DILocation(line: 142, column: 6, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !13977, file: !2557, line: 142, column: 6)
!14096 = !DILocation(line: 142, column: 6, scope: !13977)
!14097 = !DILocation(line: 143, column: 13, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14095, file: !2557, line: 142, column: 59)
!14099 = !DILocation(line: 144, column: 2, scope: !14098)
!14100 = !DILocation(line: 146, column: 50, scope: !13977)
!14101 = !DILocation(line: 146, column: 18, scope: !13977)
!14102 = !DILocation(line: 153, column: 16, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !13977, file: !2557, line: 153, column: 6)
!14104 = !DILocation(line: 153, column: 6, scope: !13977)
!14105 = !DILocation(line: 0, scope: !14015, inlinedAt: !14106)
!14106 = distinct !DILocation(line: 162, column: 8, scope: !13977)
!14107 = !DILocation(line: 55, column: 2, scope: !14024, inlinedAt: !14108)
!14108 = distinct !DILocation(line: 145, column: 10, scope: !14015, inlinedAt: !14106)
!14109 = !DILocation(line: 0, scope: !14024, inlinedAt: !14108)
!14110 = !DILocation(line: 148, column: 2, scope: !14032, inlinedAt: !14106)
!14111 = !DILocation(line: 148, column: 2, scope: !14033, inlinedAt: !14106)
!14112 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !14106)
!14113 = !DILocation(line: 160, column: 2, scope: !14015, inlinedAt: !14106)
!14114 = !DILocation(line: 168, column: 6, scope: !13997)
!14115 = !DILocation(line: 168, column: 6, scope: !13977)
!14116 = !DILocation(line: 169, column: 29, scope: !13996)
!14117 = !DILocation(line: 0, scope: !13996)
!14118 = !DILocation(line: 171, column: 22, scope: !13996)
!14119 = !DILocation(line: 171, column: 14, scope: !13996)
!14120 = !DILocation(line: 172, column: 42, scope: !13996)
!14121 = !DILocation(line: 172, column: 29, scope: !13996)
!14122 = !DILocation(line: 172, column: 55, scope: !13996)
!14123 = !DILocation(line: 172, column: 4, scope: !13996)
!14124 = !DILocation(line: 173, column: 11, scope: !13996)
!14125 = !DILocation(line: 177, column: 13, scope: !13996)
!14126 = !DILocation(line: 177, column: 48, scope: !13996)
!14127 = !DILocation(line: 180, column: 6, scope: !13977)
!14128 = !DILocation(line: 181, column: 3, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14130, file: !2557, line: 180, column: 15)
!14130 = distinct !DILexicalBlock(scope: !13977, file: !2557, line: 180, column: 6)
!14131 = !DILocation(line: 182, column: 2, scope: !14129)
!14132 = !DILocation(line: 0, scope: !14054, inlinedAt: !14133)
!14133 = distinct !DILocation(line: 183, column: 3, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14130, file: !2557, line: 182, column: 9)
!14135 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14133)
!14136 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14133)
!14137 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14133)
!14138 = !DILocation(line: 0, scope: !14068, inlinedAt: !14139)
!14139 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14133)
!14140 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14139)
!14141 = !DILocation(line: 189, column: 1, scope: !13977)
!14142 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2557, file: !2557, line: 72, type: !14143, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14145)
!14143 = !DISubroutineType(types: !14144)
!14144 = !{!314, !314, !314}
!14145 = !{!14146, !14147, !14148}
!14146 = !DILocalVariable(name: "target", arg: 1, scope: !14142, file: !2557, line: 72, type: !314)
!14147 = !DILocalVariable(name: "limit", arg: 2, scope: !14142, file: !2557, line: 72, type: !314)
!14148 = !DILocalVariable(name: "new_prio", scope: !14142, file: !2557, line: 74, type: !103)
!14149 = !DILocation(line: 0, scope: !14142)
!14150 = !DILocation(line: 74, column: 17, scope: !14142)
!14151 = !DILocation(line: 76, column: 13, scope: !14142)
!14152 = !DILocation(line: 78, column: 2, scope: !14142)
!14153 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12709, file: !12709, line: 211, type: !14154, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14156)
!14154 = !DISubroutineType(types: !14155)
!14155 = !{!122, !103, !103}
!14156 = !{!14157, !14158}
!14157 = !DILocalVariable(name: "prio", arg: 1, scope: !14153, file: !12709, line: 211, type: !103)
!14158 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14153, file: !12709, line: 211, type: !103)
!14159 = !DILocation(line: 0, scope: !14153)
!14160 = !DILocation(line: 213, column: 9, scope: !14153)
!14161 = !DILocation(line: 213, column: 2, scope: !14153)
!14162 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2557, file: !2557, line: 81, type: !14163, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14165)
!14163 = !DISubroutineType(types: !14164)
!14164 = !{!122, !13939, !314}
!14165 = !{!14166, !14167}
!14166 = !DILocalVariable(name: "mutex", arg: 1, scope: !14162, file: !2557, line: 81, type: !13939)
!14167 = !DILocalVariable(name: "new_prio", arg: 2, scope: !14162, file: !2557, line: 81, type: !314)
!14168 = !DILocation(line: 0, scope: !14162)
!14169 = !DILocation(line: 83, column: 13, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14162, file: !2557, line: 83, column: 6)
!14171 = !DILocation(line: 83, column: 25, scope: !14170)
!14172 = !DILocation(line: 83, column: 6, scope: !14170)
!14173 = !DILocation(line: 83, column: 30, scope: !14170)
!14174 = !DILocation(line: 83, column: 6, scope: !14162)
!14175 = !DILocation(line: 90, column: 10, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14170, file: !2557, line: 83, column: 43)
!14177 = !DILocation(line: 90, column: 3, scope: !14176)
!14178 = !DILocation(line: 93, column: 1, scope: !14162)
!14179 = distinct !DISubprogram(name: "z_waitq_head", scope: !13042, file: !13042, line: 52, type: !14180, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14182)
!14180 = !DISubroutineType(types: !14181)
!14181 = !{!2474, !2491}
!14182 = !{!14183}
!14183 = !DILocalVariable(name: "w", arg: 1, scope: !14179, file: !13042, line: 52, type: !2491)
!14184 = !DILocation(line: 0, scope: !14179)
!14185 = !DILocation(line: 54, column: 52, scope: !14179)
!14186 = !DILocation(line: 54, column: 28, scope: !14179)
!14187 = !DILocation(line: 54, column: 9, scope: !14179)
!14188 = !DILocation(line: 54, column: 2, scope: !14179)
!14189 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !14190, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14192)
!14190 = !DISubroutineType(types: !14191)
!14191 = !{!2459, !13968}
!14192 = !{!14193}
!14193 = !DILocalVariable(name: "list", arg: 1, scope: !14189, file: !136, line: 294, type: !13968)
!14194 = !DILocation(line: 0, scope: !14189)
!14195 = !DILocation(line: 296, column: 9, scope: !14189)
!14196 = !DILocation(line: 296, column: 49, scope: !14189)
!14197 = !DILocation(line: 296, column: 2, scope: !14189)
!14198 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !14199, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14201)
!14199 = !DISubroutineType(types: !14200)
!14200 = !{!122, !13968}
!14201 = !{!14202}
!14202 = !DILocalVariable(name: "list", arg: 1, scope: !14198, file: !136, line: 266, type: !13968)
!14203 = !DILocation(line: 0, scope: !14198)
!14204 = !DILocation(line: 268, column: 15, scope: !14198)
!14205 = !DILocation(line: 268, column: 20, scope: !14198)
!14206 = !DILocation(line: 268, column: 2, scope: !14198)
!14207 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12709, file: !12709, line: 206, type: !14154, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14208)
!14208 = !{!14209, !14210}
!14209 = !DILocalVariable(name: "prio1", arg: 1, scope: !14207, file: !12709, line: 206, type: !103)
!14210 = !DILocalVariable(name: "prio2", arg: 2, scope: !14207, file: !12709, line: 206, type: !103)
!14211 = !DILocation(line: 0, scope: !14207)
!14212 = !DILocation(line: 208, column: 15, scope: !14207)
!14213 = !DILocation(line: 208, column: 2, scope: !14207)
!14214 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12709, file: !12709, line: 186, type: !746, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14215)
!14215 = !{!14216}
!14216 = !DILocalVariable(name: "prio", arg: 1, scope: !14214, file: !12709, line: 186, type: !103)
!14217 = !DILocation(line: 0, scope: !14214)
!14218 = !DILocation(line: 188, column: 9, scope: !14214)
!14219 = !DILocation(line: 188, column: 2, scope: !14214)
!14220 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12709, file: !12709, line: 181, type: !14221, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14223)
!14221 = !DISubroutineType(types: !14222)
!14222 = !{!122, !103}
!14223 = !{!14224}
!14224 = !DILocalVariable(name: "prio", arg: 1, scope: !14220, file: !12709, line: 181, type: !103)
!14225 = !DILocation(line: 0, scope: !14220)
!14226 = !DILocation(line: 183, column: 14, scope: !14220)
!14227 = !DILocation(line: 183, column: 2, scope: !14220)
!14228 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2557, file: !2557, line: 201, type: !13937, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14229)
!14229 = !{!14230, !14231, !14232, !14233}
!14230 = !DILocalVariable(name: "mutex", arg: 1, scope: !14228, file: !2557, line: 201, type: !13939)
!14231 = !DILocalVariable(name: "new_owner", scope: !14228, file: !2557, line: 203, type: !2474)
!14232 = !DILocalVariable(name: "key", scope: !14228, file: !2557, line: 242, type: !13989)
!14233 = !DILabel(scope: !14228, name: "k_mutex_unlock_return", file: !2557, line: 270)
!14234 = !DILocation(line: 0, scope: !14228)
!14235 = !DILocation(line: 1031, column: 3, scope: !14000, inlinedAt: !14236)
!14236 = distinct !DILocation(line: 48, column: 10, scope: !14004, inlinedAt: !14237)
!14237 = distinct !DILocation(line: 205, column: 2, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14239, file: !2557, line: 205, column: 2)
!14239 = distinct !DILexicalBlock(scope: !14228, file: !2557, line: 205, column: 2)
!14240 = !DILocation(line: 0, scope: !14000, inlinedAt: !14236)
!14241 = !DILocation(line: 48, column: 9, scope: !14004, inlinedAt: !14237)
!14242 = !DILocation(line: 205, column: 2, scope: !14239)
!14243 = !DILocation(line: 205, column: 2, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14238, file: !2557, line: 205, column: 2)
!14245 = !DILocation(line: 209, column: 2, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14228, file: !2557, line: 209, column: 2)
!14247 = !DILocation(line: 209, column: 2, scope: !14228)
!14248 = !DILocation(line: 217, column: 2, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14228, file: !2557, line: 217, column: 2)
!14250 = !DILocation(line: 217, column: 2, scope: !14228)
!14251 = !DILocation(line: 229, column: 2, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14253, file: !2557, line: 229, column: 2)
!14253 = distinct !DILexicalBlock(scope: !14228, file: !2557, line: 229, column: 2)
!14254 = !DILocation(line: 229, column: 2, scope: !14253)
!14255 = !DILocation(line: 229, column: 2, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14252, file: !2557, line: 229, column: 2)
!14257 = !DILocation(line: 238, column: 20, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14259, file: !2557, line: 237, column: 30)
!14259 = distinct !DILexicalBlock(scope: !14228, file: !2557, line: 237, column: 6)
!14260 = !DILocation(line: 239, column: 3, scope: !14258)
!14261 = !DILocation(line: 0, scope: !14015, inlinedAt: !14262)
!14262 = distinct !DILocation(line: 242, column: 25, scope: !14228)
!14263 = !DILocation(line: 55, column: 2, scope: !14024, inlinedAt: !14264)
!14264 = distinct !DILocation(line: 145, column: 10, scope: !14015, inlinedAt: !14262)
!14265 = !DILocation(line: 0, scope: !14024, inlinedAt: !14264)
!14266 = !DILocation(line: 148, column: 2, scope: !14032, inlinedAt: !14262)
!14267 = !DILocation(line: 148, column: 2, scope: !14033, inlinedAt: !14262)
!14268 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !14262)
!14269 = !DILocation(line: 160, column: 2, scope: !14015, inlinedAt: !14262)
!14270 = !DILocation(line: 244, column: 34, scope: !14228)
!14271 = !DILocation(line: 244, column: 2, scope: !14228)
!14272 = !DILocation(line: 247, column: 44, scope: !14228)
!14273 = !DILocation(line: 247, column: 14, scope: !14228)
!14274 = !DILocation(line: 249, column: 15, scope: !14228)
!14275 = !DILocation(line: 254, column: 16, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14228, file: !2557, line: 254, column: 6)
!14277 = !DILocation(line: 254, column: 6, scope: !14228)
!14278 = !DILocation(line: 260, column: 44, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14276, file: !2557, line: 254, column: 25)
!14280 = !DILocation(line: 260, column: 28, scope: !14279)
!14281 = !DILocation(line: 260, column: 26, scope: !14279)
!14282 = !DILocalVariable(name: "thread", arg: 1, scope: !14283, file: !12729, line: 65, type: !2474)
!14283 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12729, file: !12729, line: 65, type: !14284, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2456, retainedNodes: !14286)
!14284 = !DISubroutineType(types: !14285)
!14285 = !{null, !2474, !32}
!14286 = !{!14282, !14287}
!14287 = !DILocalVariable(name: "value", arg: 2, scope: !14283, file: !12729, line: 65, type: !32)
!14288 = !DILocation(line: 0, scope: !14283, inlinedAt: !14289)
!14289 = distinct !DILocation(line: 261, column: 3, scope: !14279)
!14290 = !DILocation(line: 67, column: 15, scope: !14283, inlinedAt: !14289)
!14291 = !DILocation(line: 67, column: 33, scope: !14283, inlinedAt: !14289)
!14292 = !DILocation(line: 262, column: 3, scope: !14279)
!14293 = !DILocation(line: 263, column: 3, scope: !14279)
!14294 = !DILocation(line: 264, column: 2, scope: !14279)
!14295 = !DILocation(line: 265, column: 21, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14276, file: !2557, line: 264, column: 9)
!14297 = !DILocation(line: 0, scope: !14054, inlinedAt: !14298)
!14298 = distinct !DILocation(line: 266, column: 3, scope: !14296)
!14299 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14298)
!14300 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14298)
!14301 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14298)
!14302 = !DILocation(line: 0, scope: !14068, inlinedAt: !14303)
!14303 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14298)
!14304 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14303)
!14305 = !DILocation(line: 274, column: 1, scope: !14228)
!14306 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2664, file: !2664, line: 93, type: !14307, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14309)
!14307 = !DISubroutineType(types: !14308)
!14308 = !{!314, !2563, !2563}
!14309 = !{!14310, !14311, !14312, !14313}
!14310 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14306, file: !2664, line: 93, type: !2563)
!14311 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14306, file: !2664, line: 94, type: !2563)
!14312 = !DILocalVariable(name: "b1", scope: !14306, file: !2664, line: 97, type: !314)
!14313 = !DILocalVariable(name: "b2", scope: !14306, file: !2664, line: 98, type: !314)
!14314 = !DILocation(line: 0, scope: !14306)
!14315 = !DILocation(line: 97, column: 30, scope: !14306)
!14316 = !DILocation(line: 98, column: 30, scope: !14306)
!14317 = !DILocation(line: 100, column: 9, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14306, file: !2664, line: 100, column: 6)
!14319 = !DILocation(line: 100, column: 6, scope: !14306)
!14320 = !DILocation(line: 125, column: 1, scope: !14306)
!14321 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2664, file: !2664, line: 428, type: !14322, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14324)
!14322 = !DISubroutineType(types: !14323)
!14323 = !{null, !2563}
!14324 = !{!14325}
!14325 = !DILocalVariable(name: "curr", arg: 1, scope: !14321, file: !2664, line: 428, type: !2563)
!14326 = !DILocation(line: 0, scope: !14321)
!14327 = !DILocation(line: 434, column: 6, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14321, file: !2664, line: 434, column: 6)
!14329 = !DILocation(line: 434, column: 23, scope: !14328)
!14330 = !DILocation(line: 434, column: 6, scope: !14321)
!14331 = !DILocation(line: 435, column: 50, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14328, file: !2664, line: 434, column: 29)
!14333 = !DILocation(line: 435, column: 48, scope: !14332)
!14334 = !DILocation(line: 435, column: 29, scope: !14332)
!14335 = !DILocation(line: 436, column: 24, scope: !14332)
!14336 = !DILocation(line: 436, column: 3, scope: !14332)
!14337 = !DILocation(line: 437, column: 2, scope: !14332)
!14338 = !DILocation(line: 438, column: 1, scope: !14321)
!14339 = distinct !DISubprogram(name: "slice_time", scope: !2664, file: !2664, line: 407, type: !14340, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14342)
!14340 = !DISubroutineType(types: !14341)
!14341 = !{!103, !2563}
!14342 = !{!14343, !14344}
!14343 = !DILocalVariable(name: "curr", arg: 1, scope: !14339, file: !2664, line: 407, type: !2563)
!14344 = !DILocalVariable(name: "ret", scope: !14339, file: !2664, line: 409, type: !103)
!14345 = !DILocation(line: 0, scope: !14339)
!14346 = !DILocation(line: 409, column: 12, scope: !14339)
!14347 = !DILocation(line: 416, column: 2, scope: !14339)
!14348 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2664, file: !2664, line: 440, type: !14349, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14351)
!14349 = !DISubroutineType(types: !14350)
!14350 = !{null, !314, !103}
!14351 = !{!14352, !14353, !14354, !14360}
!14352 = !DILocalVariable(name: "slice", arg: 1, scope: !14348, file: !2664, line: 440, type: !314)
!14353 = !DILocalVariable(name: "prio", arg: 2, scope: !14348, file: !2664, line: 440, type: !103)
!14354 = !DILocalVariable(name: "__i", scope: !14355, file: !2664, line: 442, type: !14356)
!14355 = distinct !DILexicalBlock(scope: !14348, file: !2664, line: 442, column: 2)
!14356 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !14357)
!14357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !14358)
!14358 = !{!14359}
!14359 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14357, file: !152, line: 33, baseType: !103, size: 32)
!14360 = !DILocalVariable(name: "__key", scope: !14355, file: !2664, line: 442, type: !14356)
!14361 = !DILocation(line: 0, scope: !14348)
!14362 = !DILocation(line: 0, scope: !14355)
!14363 = !DILocalVariable(name: "l", arg: 1, scope: !14364, file: !152, line: 136, type: !14367)
!14364 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !14365, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14368)
!14365 = !DISubroutineType(types: !14366)
!14366 = !{!14356, !14367}
!14367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 32)
!14368 = !{!14363, !14369}
!14369 = !DILocalVariable(name: "k", scope: !14364, file: !152, line: 139, type: !14356)
!14370 = !DILocation(line: 0, scope: !14364, inlinedAt: !14371)
!14371 = distinct !DILocation(line: 442, column: 2, scope: !14355)
!14372 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !14377)
!14373 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7706, file: !7706, line: 42, type: !9871, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14374)
!14374 = !{!14375, !14376}
!14375 = !DILocalVariable(name: "key", scope: !14373, file: !7706, line: 44, type: !32)
!14376 = !DILocalVariable(name: "tmp", scope: !14373, file: !7706, line: 53, type: !32)
!14377 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !14371)
!14378 = !{i64 2888663}
!14379 = !DILocation(line: 0, scope: !14373, inlinedAt: !14377)
!14380 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !14371)
!14381 = distinct !DILexicalBlock(scope: !14382, file: !152, line: 148, column: 2)
!14382 = distinct !DILexicalBlock(scope: !14364, file: !152, line: 148, column: 2)
!14383 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !14371)
!14384 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !14371)
!14385 = distinct !DILexicalBlock(scope: !14381, file: !152, line: 148, column: 2)
!14386 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !14371)
!14387 = !DILocation(line: 443, column: 29, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14389, file: !2664, line: 442, column: 26)
!14389 = distinct !DILexicalBlock(scope: !14355, file: !2664, line: 442, column: 2)
!14390 = !DILocation(line: 444, column: 17, scope: !14388)
!14391 = !DILocation(line: 445, column: 51, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14388, file: !2664, line: 445, column: 7)
!14393 = !DILocation(line: 445, column: 7, scope: !14388)
!14394 = !DILocation(line: 0, scope: !14388)
!14395 = !DILocation(line: 451, column: 18, scope: !14388)
!14396 = !DILocation(line: 452, column: 3, scope: !14388)
!14397 = !DILocalVariable(name: "key", arg: 2, scope: !14398, file: !152, line: 190, type: !14356)
!14398 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !14399, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14401)
!14399 = !DISubroutineType(types: !14400)
!14400 = !{null, !14367, !14356}
!14401 = !{!14402, !14397}
!14402 = !DILocalVariable(name: "l", arg: 1, scope: !14398, file: !152, line: 189, type: !14367)
!14403 = !DILocation(line: 0, scope: !14398, inlinedAt: !14404)
!14404 = distinct !DILocation(line: 442, column: 2, scope: !14389)
!14405 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !14404)
!14406 = distinct !DILexicalBlock(scope: !14407, file: !152, line: 194, column: 2)
!14407 = distinct !DILexicalBlock(scope: !14398, file: !152, line: 194, column: 2)
!14408 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !14404)
!14409 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !14404)
!14410 = distinct !DILexicalBlock(scope: !14406, file: !152, line: 194, column: 2)
!14411 = !DILocalVariable(name: "key", arg: 1, scope: !14412, file: !7706, line: 84, type: !32)
!14412 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7706, file: !7706, line: 84, type: !7536, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14413)
!14413 = !{!14411}
!14414 = !DILocation(line: 0, scope: !14412, inlinedAt: !14415)
!14415 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !14404)
!14416 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !14415)
!14417 = !{i64 2889480}
!14418 = !DILocation(line: 454, column: 1, scope: !14348)
!14419 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3696, file: !3696, line: 389, type: !14420, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14422)
!14420 = !DISubroutineType(types: !14421)
!14421 = !{!111, !111}
!14422 = !{!14423}
!14423 = !DILocalVariable(name: "t", arg: 1, scope: !14419, file: !3696, line: 389, type: !111)
!14424 = !DILocation(line: 0, scope: !14419)
!14425 = !DILocalVariable(name: "t", arg: 1, scope: !14426, file: !3696, line: 102, type: !112)
!14426 = distinct !DISubprogram(name: "z_tmcvt", scope: !3696, file: !3696, line: 102, type: !3704, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14427)
!14427 = !{!14425, !14428, !14429, !14430, !14431, !14432, !14433, !14434, !14435, !14436, !14437}
!14428 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14426, file: !3696, line: 102, type: !111)
!14429 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14426, file: !3696, line: 103, type: !111)
!14430 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14426, file: !3696, line: 103, type: !122)
!14431 = !DILocalVariable(name: "result32", arg: 5, scope: !14426, file: !3696, line: 104, type: !122)
!14432 = !DILocalVariable(name: "round_up", arg: 6, scope: !14426, file: !3696, line: 104, type: !122)
!14433 = !DILocalVariable(name: "round_off", arg: 7, scope: !14426, file: !3696, line: 105, type: !122)
!14434 = !DILocalVariable(name: "mul_ratio", scope: !14426, file: !3696, line: 107, type: !122)
!14435 = !DILocalVariable(name: "div_ratio", scope: !14426, file: !3696, line: 109, type: !122)
!14436 = !DILocalVariable(name: "off", scope: !14426, file: !3696, line: 116, type: !112)
!14437 = !DILocalVariable(name: "rdivisor", scope: !14438, file: !3696, line: 119, type: !111)
!14438 = distinct !DILexicalBlock(scope: !14439, file: !3696, line: 118, column: 18)
!14439 = distinct !DILexicalBlock(scope: !14426, file: !3696, line: 118, column: 6)
!14440 = !DILocation(line: 0, scope: !14426, inlinedAt: !14441)
!14441 = distinct !DILocation(line: 392, column: 9, scope: !14419)
!14442 = !DILocation(line: 143, column: 25, scope: !14443, inlinedAt: !14441)
!14443 = distinct !DILexicalBlock(scope: !14444, file: !3696, line: 142, column: 17)
!14444 = distinct !DILexicalBlock(scope: !14445, file: !3696, line: 142, column: 7)
!14445 = distinct !DILexicalBlock(scope: !14446, file: !3696, line: 141, column: 24)
!14446 = distinct !DILexicalBlock(scope: !14447, file: !3696, line: 141, column: 13)
!14447 = distinct !DILexicalBlock(scope: !14426, file: !3696, line: 134, column: 6)
!14448 = !DILocation(line: 392, column: 2, scope: !14419)
!14449 = distinct !DISubprogram(name: "z_time_slice", scope: !2664, file: !2664, line: 502, type: !12666, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14450)
!14450 = !{!14451, !14452}
!14451 = !DILocalVariable(name: "ticks", arg: 1, scope: !14449, file: !2664, line: 502, type: !103)
!14452 = !DILocalVariable(name: "key", scope: !14449, file: !2664, line: 511, type: !14356)
!14453 = !DILocation(line: 0, scope: !14449)
!14454 = !DILocation(line: 0, scope: !14364, inlinedAt: !14455)
!14455 = distinct !DILocation(line: 511, column: 25, scope: !14449)
!14456 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !14457)
!14457 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !14455)
!14458 = !DILocation(line: 0, scope: !14373, inlinedAt: !14457)
!14459 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !14455)
!14460 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !14455)
!14461 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !14455)
!14462 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !14455)
!14463 = !DILocation(line: 514, column: 6, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14449, file: !2664, line: 514, column: 6)
!14465 = !DILocation(line: 514, column: 25, scope: !14464)
!14466 = !DILocation(line: 514, column: 22, scope: !14464)
!14467 = !DILocation(line: 514, column: 6, scope: !14449)
!14468 = !DILocation(line: 515, column: 3, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !14464, file: !2664, line: 514, column: 35)
!14470 = !DILocation(line: 0, scope: !14398, inlinedAt: !14471)
!14471 = distinct !DILocation(line: 516, column: 3, scope: !14469)
!14472 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !14471)
!14473 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !14471)
!14474 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !14471)
!14475 = !DILocation(line: 0, scope: !14412, inlinedAt: !14476)
!14476 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !14471)
!14477 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !14476)
!14478 = !DILocation(line: 517, column: 3, scope: !14469)
!14479 = !DILocation(line: 519, column: 18, scope: !14449)
!14480 = !DILocation(line: 522, column: 6, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14449, file: !2664, line: 522, column: 6)
!14482 = !DILocation(line: 522, column: 27, scope: !14481)
!14483 = !DILocation(line: 522, column: 30, scope: !14481)
!14484 = !DILocation(line: 522, column: 6, scope: !14449)
!14485 = !DILocation(line: 523, column: 30, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14487, file: !2664, line: 523, column: 7)
!14487 = distinct !DILexicalBlock(scope: !14481, file: !2664, line: 522, column: 51)
!14488 = !DILocation(line: 523, column: 13, scope: !14486)
!14489 = !DILocation(line: 523, column: 7, scope: !14487)
!14490 = !DILocation(line: 530, column: 10, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14486, file: !2664, line: 523, column: 43)
!14492 = !DILocation(line: 531, column: 3, scope: !14491)
!14493 = !DILocation(line: 532, column: 30, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14486, file: !2664, line: 531, column: 10)
!14495 = !DILocation(line: 535, column: 29, scope: !14496)
!14496 = distinct !DILexicalBlock(scope: !14481, file: !2664, line: 534, column: 9)
!14497 = !DILocation(line: 0, scope: !14398, inlinedAt: !14498)
!14498 = distinct !DILocation(line: 537, column: 2, scope: !14449)
!14499 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !14498)
!14500 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !14498)
!14501 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !14498)
!14502 = !DILocation(line: 0, scope: !14412, inlinedAt: !14503)
!14503 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !14498)
!14504 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !14503)
!14505 = !DILocation(line: 538, column: 1, scope: !14449)
!14506 = distinct !DISubprogram(name: "sliceable", scope: !2664, file: !2664, line: 468, type: !14507, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14509)
!14507 = !DISubroutineType(types: !14508)
!14508 = !{!122, !2563}
!14509 = !{!14510, !14511}
!14510 = !DILocalVariable(name: "thread", arg: 1, scope: !14506, file: !2664, line: 468, type: !2563)
!14511 = !DILocalVariable(name: "ret", scope: !14506, file: !2664, line: 470, type: !122)
!14512 = !DILocation(line: 0, scope: !14506)
!14513 = !DILocation(line: 470, column: 13, scope: !14506)
!14514 = !DILocation(line: 471, column: 3, scope: !14506)
!14515 = !DILocation(line: 471, column: 7, scope: !14506)
!14516 = !DILocation(line: 472, column: 3, scope: !14506)
!14517 = !DILocation(line: 472, column: 37, scope: !14506)
!14518 = !DILocation(line: 472, column: 24, scope: !14506)
!14519 = !DILocation(line: 472, column: 43, scope: !14506)
!14520 = !DILocation(line: 472, column: 7, scope: !14506)
!14521 = !DILocation(line: 473, column: 3, scope: !14506)
!14522 = !DILocation(line: 473, column: 7, scope: !14506)
!14523 = !DILocation(line: 473, column: 6, scope: !14506)
!14524 = !DILocation(line: 479, column: 2, scope: !14506)
!14525 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2664, file: !2664, line: 482, type: !14526, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14528)
!14526 = !DISubroutineType(types: !14527)
!14527 = !{!14356, !14356}
!14528 = !{!14529, !14530}
!14529 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14525, file: !2664, line: 482, type: !14356)
!14530 = !DILocalVariable(name: "curr", scope: !14525, file: !2664, line: 484, type: !2563)
!14531 = !DILocation(line: 0, scope: !14525)
!14532 = !DILocation(line: 484, column: 26, scope: !14525)
!14533 = !DILocation(line: 493, column: 7, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14525, file: !2664, line: 493, column: 6)
!14535 = !DILocation(line: 493, column: 6, scope: !14525)
!14536 = !DILocation(line: 494, column: 3, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14534, file: !2664, line: 493, column: 49)
!14538 = !DILocation(line: 495, column: 2, scope: !14537)
!14539 = !DILocation(line: 496, column: 2, scope: !14525)
!14540 = !DILocation(line: 499, column: 1, scope: !14525)
!14541 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12709, file: !12709, line: 106, type: !14507, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14542)
!14542 = !{!14543, !14544}
!14543 = !DILocalVariable(name: "thread", arg: 1, scope: !14541, file: !12709, line: 106, type: !2563)
!14544 = !DILocalVariable(name: "state", scope: !14541, file: !12709, line: 108, type: !166)
!14545 = !DILocation(line: 0, scope: !14541)
!14546 = !DILocation(line: 108, column: 31, scope: !14541)
!14547 = !DILocation(line: 110, column: 16, scope: !14541)
!14548 = !DILocation(line: 111, column: 41, scope: !14541)
!14549 = !DILocation(line: 110, column: 2, scope: !14541)
!14550 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2664, file: !2664, line: 393, type: !14322, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14551)
!14551 = !{!14552}
!14552 = !DILocalVariable(name: "thread", arg: 1, scope: !14550, file: !2664, line: 393, type: !2563)
!14553 = !DILocation(line: 0, scope: !14550)
!14554 = !DILocation(line: 395, column: 6, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14550, file: !2664, line: 395, column: 6)
!14556 = !DILocation(line: 395, column: 6, scope: !14550)
!14557 = !DILocalVariable(name: "thread", arg: 1, scope: !14558, file: !2664, line: 264, type: !2563)
!14558 = distinct !DISubprogram(name: "dequeue_thread", scope: !2664, file: !2664, line: 264, type: !14322, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14559)
!14559 = !{!14557}
!14560 = !DILocation(line: 0, scope: !14558, inlinedAt: !14561)
!14561 = distinct !DILocation(line: 396, column: 3, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14555, file: !2664, line: 395, column: 34)
!14563 = !DILocation(line: 266, column: 15, scope: !14558, inlinedAt: !14561)
!14564 = !DILocation(line: 266, column: 28, scope: !14558, inlinedAt: !14561)
!14565 = !DILocalVariable(name: "thread", arg: 1, scope: !14566, file: !2664, line: 232, type: !2563)
!14566 = distinct !DISubprogram(name: "runq_remove", scope: !2664, file: !2664, line: 232, type: !14322, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14567)
!14567 = !{!14565}
!14568 = !DILocation(line: 0, scope: !14566, inlinedAt: !14569)
!14569 = distinct !DILocation(line: 268, column: 3, scope: !14570, inlinedAt: !14561)
!14570 = distinct !DILexicalBlock(scope: !14571, file: !2664, line: 267, column: 35)
!14571 = distinct !DILexicalBlock(scope: !14558, file: !2664, line: 267, column: 6)
!14572 = !DILocation(line: 234, column: 2, scope: !14566, inlinedAt: !14569)
!14573 = !DILocation(line: 397, column: 2, scope: !14562)
!14574 = !DILocalVariable(name: "thread", arg: 1, scope: !14575, file: !2664, line: 250, type: !2563)
!14575 = distinct !DISubprogram(name: "queue_thread", scope: !2664, file: !2664, line: 250, type: !14322, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14576)
!14576 = !{!14574}
!14577 = !DILocation(line: 0, scope: !14575, inlinedAt: !14578)
!14578 = distinct !DILocation(line: 398, column: 2, scope: !14550)
!14579 = !DILocation(line: 252, column: 15, scope: !14575, inlinedAt: !14578)
!14580 = !DILocation(line: 252, column: 28, scope: !14575, inlinedAt: !14578)
!14581 = !DILocalVariable(name: "thread", arg: 1, scope: !14582, file: !2664, line: 227, type: !2563)
!14582 = distinct !DISubprogram(name: "runq_add", scope: !2664, file: !2664, line: 227, type: !14322, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14583)
!14583 = !{!14581}
!14584 = !DILocation(line: 0, scope: !14582, inlinedAt: !14585)
!14585 = distinct !DILocation(line: 254, column: 3, scope: !14586, inlinedAt: !14578)
!14586 = distinct !DILexicalBlock(scope: !14587, file: !2664, line: 253, column: 35)
!14587 = distinct !DILexicalBlock(scope: !14575, file: !2664, line: 253, column: 6)
!14588 = !DILocalVariable(name: "pq", arg: 1, scope: !14589, file: !2664, line: 181, type: !14592)
!14589 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2664, file: !2664, line: 181, type: !14590, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14593)
!14590 = !DISubroutineType(types: !14591)
!14591 = !{null, !14592, !2563}
!14592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 32)
!14593 = !{!14588, !14594, !14595}
!14594 = !DILocalVariable(name: "thread", arg: 2, scope: !14589, file: !2664, line: 182, type: !2563)
!14595 = !DILocalVariable(name: "t", scope: !14589, file: !2664, line: 184, type: !2563)
!14596 = !DILocation(line: 0, scope: !14589, inlinedAt: !14597)
!14597 = distinct !DILocation(line: 229, column: 2, scope: !14582, inlinedAt: !14585)
!14598 = !DILocation(line: 186, column: 2, scope: !14599, inlinedAt: !14597)
!14599 = distinct !DILexicalBlock(scope: !14600, file: !2664, line: 186, column: 2)
!14600 = distinct !DILexicalBlock(scope: !14589, file: !2664, line: 186, column: 2)
!14601 = !DILocation(line: 186, column: 2, scope: !14600, inlinedAt: !14597)
!14602 = !DILocation(line: 186, column: 2, scope: !14603, inlinedAt: !14597)
!14603 = distinct !DILexicalBlock(scope: !14599, file: !2664, line: 186, column: 2)
!14604 = !DILocation(line: 188, column: 2, scope: !14605, inlinedAt: !14597)
!14605 = distinct !DILexicalBlock(scope: !14589, file: !2664, line: 188, column: 2)
!14606 = !DILocation(line: 188, column: 2, scope: !14607, inlinedAt: !14597)
!14607 = distinct !DILexicalBlock(scope: !14605, file: !2664, line: 188, column: 2)
!14608 = !DILocation(line: 0, scope: !14605, inlinedAt: !14597)
!14609 = !DILocation(line: 189, column: 7, scope: !14610, inlinedAt: !14597)
!14610 = distinct !DILexicalBlock(scope: !14611, file: !2664, line: 189, column: 7)
!14611 = distinct !DILexicalBlock(scope: !14607, file: !2664, line: 188, column: 56)
!14612 = !DILocation(line: 189, column: 35, scope: !14610, inlinedAt: !14597)
!14613 = !DILocation(line: 189, column: 7, scope: !14611, inlinedAt: !14597)
!14614 = !DILocation(line: 191, column: 21, scope: !14615, inlinedAt: !14597)
!14615 = distinct !DILexicalBlock(scope: !14610, file: !2664, line: 189, column: 40)
!14616 = !DILocation(line: 190, column: 4, scope: !14615, inlinedAt: !14597)
!14617 = !DILocation(line: 192, column: 4, scope: !14615, inlinedAt: !14597)
!14618 = distinct !{!14618, !14604, !14619}
!14619 = !DILocation(line: 194, column: 2, scope: !14605, inlinedAt: !14597)
!14620 = !DILocation(line: 196, column: 37, scope: !14589, inlinedAt: !14597)
!14621 = !DILocation(line: 196, column: 2, scope: !14589, inlinedAt: !14597)
!14622 = !DILocation(line: 197, column: 1, scope: !14589, inlinedAt: !14597)
!14623 = !DILocation(line: 399, column: 25, scope: !14550)
!14624 = !DILocation(line: 399, column: 22, scope: !14550)
!14625 = !DILocation(line: 399, column: 2, scope: !14550)
!14626 = !DILocation(line: 400, column: 1, scope: !14550)
!14627 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12709, file: !12709, line: 136, type: !14507, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14628)
!14628 = !{!14629}
!14629 = !DILocalVariable(name: "thread", arg: 1, scope: !14627, file: !12709, line: 136, type: !2563)
!14630 = !DILocation(line: 0, scope: !14627)
!14631 = !DILocation(line: 138, column: 9, scope: !14627)
!14632 = !DILocation(line: 138, column: 2, scope: !14627)
!14633 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2664, file: !2664, line: 1137, type: !14590, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14634)
!14634 = !{!14635, !14636}
!14635 = !DILocalVariable(name: "pq", arg: 1, scope: !14633, file: !2664, line: 1137, type: !14592)
!14636 = !DILocalVariable(name: "thread", arg: 2, scope: !14633, file: !2664, line: 1137, type: !2563)
!14637 = !DILocation(line: 0, scope: !14633)
!14638 = !DILocation(line: 1139, column: 2, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14640, file: !2664, line: 1139, column: 2)
!14640 = distinct !DILexicalBlock(scope: !14633, file: !2664, line: 1139, column: 2)
!14641 = !DILocation(line: 1139, column: 2, scope: !14640)
!14642 = !DILocation(line: 1139, column: 2, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14639, file: !2664, line: 1139, column: 2)
!14644 = !DILocation(line: 1141, column: 33, scope: !14633)
!14645 = !DILocation(line: 1141, column: 2, scope: !14633)
!14646 = !DILocation(line: 1142, column: 1, scope: !14633)
!14647 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12709, file: !12709, line: 83, type: !14507, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14648)
!14648 = !{!14649}
!14649 = !DILocalVariable(name: "thread", arg: 1, scope: !14647, file: !12709, line: 83, type: !2563)
!14650 = !DILocation(line: 0, scope: !14647)
!14651 = !DILocation(line: 89, column: 16, scope: !14647)
!14652 = !DILocation(line: 89, column: 2, scope: !14647)
!14653 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !14654, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14656)
!14654 = !DISubroutineType(types: !14655)
!14655 = !{!2660, !14592}
!14656 = !{!14657}
!14657 = !DILocalVariable(name: "list", arg: 1, scope: !14653, file: !136, line: 294, type: !14592)
!14658 = !DILocation(line: 0, scope: !14653)
!14659 = !DILocation(line: 296, column: 9, scope: !14653)
!14660 = !DILocation(line: 296, column: 49, scope: !14653)
!14661 = !DILocation(line: 296, column: 2, scope: !14653)
!14662 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !136, file: !136, line: 443, type: !14663, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14665)
!14663 = !DISubroutineType(types: !14664)
!14664 = !{null, !2660, !2660}
!14665 = !{!14666, !14667, !14668}
!14666 = !DILocalVariable(name: "successor", arg: 1, scope: !14662, file: !136, line: 443, type: !2660)
!14667 = !DILocalVariable(name: "node", arg: 2, scope: !14662, file: !136, line: 443, type: !2660)
!14668 = !DILocalVariable(name: "prev", scope: !14662, file: !136, line: 445, type: !14669)
!14669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2660)
!14670 = !DILocation(line: 0, scope: !14662)
!14671 = !DILocation(line: 445, column: 39, scope: !14662)
!14672 = !DILocation(line: 447, column: 8, scope: !14662)
!14673 = !DILocation(line: 447, column: 13, scope: !14662)
!14674 = !DILocation(line: 448, column: 8, scope: !14662)
!14675 = !DILocation(line: 448, column: 13, scope: !14662)
!14676 = !DILocation(line: 449, column: 8, scope: !14662)
!14677 = !DILocation(line: 449, column: 13, scope: !14662)
!14678 = !DILocation(line: 450, column: 18, scope: !14662)
!14679 = !DILocation(line: 451, column: 1, scope: !14662)
!14680 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !136, file: !136, line: 341, type: !14681, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14683)
!14681 = !DISubroutineType(types: !14682)
!14682 = !{!2660, !14592, !2660}
!14683 = !{!14684, !14685}
!14684 = !DILocalVariable(name: "list", arg: 1, scope: !14680, file: !136, line: 341, type: !14592)
!14685 = !DILocalVariable(name: "node", arg: 2, scope: !14680, file: !136, line: 342, type: !2660)
!14686 = !DILocation(line: 0, scope: !14680)
!14687 = !DILocation(line: 344, column: 15, scope: !14680)
!14688 = !DILocation(line: 344, column: 9, scope: !14680)
!14689 = !DILocation(line: 344, column: 26, scope: !14680)
!14690 = !DILocation(line: 344, column: 2, scope: !14680)
!14691 = distinct !DISubprogram(name: "sys_dlist_append", scope: !136, file: !136, line: 404, type: !14692, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14694)
!14692 = !DISubroutineType(types: !14693)
!14693 = !{null, !14592, !2660}
!14694 = !{!14695, !14696, !14697}
!14695 = !DILocalVariable(name: "list", arg: 1, scope: !14691, file: !136, line: 404, type: !14592)
!14696 = !DILocalVariable(name: "node", arg: 2, scope: !14691, file: !136, line: 404, type: !2660)
!14697 = !DILocalVariable(name: "tail", scope: !14691, file: !136, line: 406, type: !14669)
!14698 = !DILocation(line: 0, scope: !14691)
!14699 = !DILocation(line: 406, column: 34, scope: !14691)
!14700 = !DILocation(line: 408, column: 8, scope: !14691)
!14701 = !DILocation(line: 408, column: 13, scope: !14691)
!14702 = !DILocation(line: 409, column: 8, scope: !14691)
!14703 = !DILocation(line: 409, column: 13, scope: !14691)
!14704 = !DILocation(line: 411, column: 8, scope: !14691)
!14705 = !DILocation(line: 411, column: 13, scope: !14691)
!14706 = !DILocation(line: 412, column: 13, scope: !14691)
!14707 = !DILocation(line: 413, column: 1, scope: !14691)
!14708 = distinct !DISubprogram(name: "update_cache", scope: !2664, file: !2664, line: 559, type: !12666, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14709)
!14709 = !{!14710, !14711}
!14710 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14708, file: !2664, line: 559, type: !103)
!14711 = !DILocalVariable(name: "thread", scope: !14708, file: !2664, line: 562, type: !2563)
!14712 = !DILocation(line: 0, scope: !14708)
!14713 = !DILocation(line: 239, column: 9, scope: !14714, inlinedAt: !14717)
!14714 = distinct !DISubprogram(name: "runq_best", scope: !2664, file: !2664, line: 237, type: !14715, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !2275)
!14715 = !DISubroutineType(types: !14716)
!14716 = !{!2563}
!14717 = distinct !DILocation(line: 314, column: 28, scope: !14718, inlinedAt: !14721)
!14718 = distinct !DISubprogram(name: "next_up", scope: !2664, file: !2664, line: 312, type: !14715, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14719)
!14719 = !{!14720}
!14720 = !DILocalVariable(name: "thread", scope: !14718, file: !2664, line: 314, type: !2563)
!14721 = distinct !DILocation(line: 562, column: 28, scope: !14708)
!14722 = !DILocation(line: 0, scope: !14718, inlinedAt: !14721)
!14723 = !DILocation(line: 340, column: 17, scope: !14718, inlinedAt: !14721)
!14724 = !DILocation(line: 340, column: 9, scope: !14718, inlinedAt: !14721)
!14725 = !DILocalVariable(name: "thread", arg: 1, scope: !14726, file: !2664, line: 127, type: !2563)
!14726 = distinct !DISubprogram(name: "should_preempt", scope: !2664, file: !2664, line: 127, type: !14727, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14729)
!14727 = !DISubroutineType(types: !14728)
!14728 = !{!122, !2563, !103}
!14729 = !{!14725, !14730}
!14730 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14726, file: !2664, line: 128, type: !103)
!14731 = !DILocation(line: 0, scope: !14726, inlinedAt: !14732)
!14732 = distinct !DILocation(line: 564, column: 6, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14708, file: !2664, line: 564, column: 6)
!14734 = !DILocation(line: 133, column: 17, scope: !14735, inlinedAt: !14732)
!14735 = distinct !DILexicalBlock(scope: !14726, file: !2664, line: 133, column: 6)
!14736 = !DILocation(line: 0, scope: !14733)
!14737 = !DILocation(line: 133, column: 6, scope: !14726, inlinedAt: !14732)
!14738 = !DILocation(line: 137, column: 2, scope: !14739, inlinedAt: !14732)
!14739 = distinct !DILexicalBlock(scope: !14740, file: !2664, line: 137, column: 2)
!14740 = distinct !DILexicalBlock(scope: !14726, file: !2664, line: 137, column: 2)
!14741 = !DILocation(line: 137, column: 2, scope: !14740, inlinedAt: !14732)
!14742 = !DILocation(line: 137, column: 2, scope: !14743, inlinedAt: !14732)
!14743 = distinct !DILexicalBlock(scope: !14739, file: !2664, line: 137, column: 2)
!14744 = !DILocation(line: 140, column: 6, scope: !14745, inlinedAt: !14732)
!14745 = distinct !DILexicalBlock(scope: !14726, file: !2664, line: 140, column: 6)
!14746 = !DILocation(line: 140, column: 6, scope: !14726, inlinedAt: !14732)
!14747 = !DILocation(line: 150, column: 9, scope: !14748, inlinedAt: !14732)
!14748 = distinct !DILexicalBlock(scope: !14726, file: !2664, line: 149, column: 6)
!14749 = !DILocation(line: 149, column: 6, scope: !14726, inlinedAt: !14732)
!14750 = !DILocation(line: 157, column: 6, scope: !14751, inlinedAt: !14732)
!14751 = distinct !DILexicalBlock(scope: !14726, file: !2664, line: 157, column: 6)
!14752 = !DILocation(line: 564, column: 6, scope: !14708)
!14753 = !DILocation(line: 566, column: 14, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14755, file: !2664, line: 566, column: 7)
!14755 = distinct !DILexicalBlock(scope: !14733, file: !2664, line: 564, column: 42)
!14756 = !DILocation(line: 566, column: 7, scope: !14755)
!14757 = !DILocation(line: 567, column: 4, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14754, file: !2664, line: 566, column: 27)
!14759 = !DILocation(line: 568, column: 3, scope: !14758)
!14760 = !DILocation(line: 585, column: 1, scope: !14708)
!14761 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2664, file: !2664, line: 1144, type: !14762, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14764)
!14762 = !DISubroutineType(types: !14763)
!14763 = !{!2563, !14592}
!14764 = !{!14765, !14766, !14767}
!14765 = !DILocalVariable(name: "pq", arg: 1, scope: !14761, file: !2664, line: 1144, type: !14592)
!14766 = !DILocalVariable(name: "thread", scope: !14761, file: !2664, line: 1146, type: !2563)
!14767 = !DILocalVariable(name: "n", scope: !14761, file: !2664, line: 1147, type: !2660)
!14768 = !DILocation(line: 0, scope: !14761)
!14769 = !DILocation(line: 1147, column: 19, scope: !14761)
!14770 = !DILocation(line: 1152, column: 2, scope: !14761)
!14771 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12709, file: !12709, line: 115, type: !14507, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14772)
!14772 = !{!14773}
!14773 = !DILocalVariable(name: "thread", arg: 1, scope: !14771, file: !12709, line: 115, type: !2563)
!14774 = !DILocation(line: 0, scope: !14771)
!14775 = !DILocation(line: 117, column: 46, scope: !14771)
!14776 = !DILocation(line: 117, column: 10, scope: !14771)
!14777 = !DILocation(line: 117, column: 9, scope: !14771)
!14778 = !DILocation(line: 117, column: 2, scope: !14771)
!14779 = distinct !DISubprogram(name: "is_preempt", scope: !2664, file: !2664, line: 62, type: !14340, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14780)
!14780 = !{!14781}
!14781 = !DILocalVariable(name: "thread", arg: 1, scope: !14779, file: !2664, line: 62, type: !2563)
!14782 = !DILocation(line: 0, scope: !14779)
!14783 = !DILocation(line: 65, column: 22, scope: !14779)
!14784 = !DILocation(line: 65, column: 30, scope: !14779)
!14785 = !DILocation(line: 65, column: 2, scope: !14779)
!14786 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13094, file: !13094, line: 35, type: !14787, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14791)
!14787 = !DISubroutineType(types: !14788)
!14788 = !{!122, !14789}
!14789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14790, size: 32)
!14790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2614)
!14791 = !{!14792}
!14792 = !DILocalVariable(name: "to", arg: 1, scope: !14786, file: !13094, line: 35, type: !14789)
!14793 = !DILocation(line: 0, scope: !14786)
!14794 = !DILocation(line: 37, column: 35, scope: !14786)
!14795 = !DILocation(line: 37, column: 10, scope: !14786)
!14796 = !DILocation(line: 37, column: 9, scope: !14786)
!14797 = !DILocation(line: 37, column: 2, scope: !14786)
!14798 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !136, file: !136, line: 225, type: !14799, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14803)
!14799 = !DISubroutineType(types: !14800)
!14800 = !{!122, !14801}
!14801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14802, size: 32)
!14802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2573)
!14803 = !{!14804}
!14804 = !DILocalVariable(name: "node", arg: 1, scope: !14798, file: !136, line: 225, type: !14801)
!14805 = !DILocation(line: 0, scope: !14798)
!14806 = !DILocation(line: 227, column: 15, scope: !14798)
!14807 = !DILocation(line: 227, column: 20, scope: !14798)
!14808 = !DILocation(line: 227, column: 2, scope: !14798)
!14809 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !136, file: !136, line: 325, type: !14681, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14810)
!14810 = !{!14811, !14812}
!14811 = !DILocalVariable(name: "list", arg: 1, scope: !14809, file: !136, line: 325, type: !14592)
!14812 = !DILocalVariable(name: "node", arg: 2, scope: !14809, file: !136, line: 326, type: !2660)
!14813 = !DILocation(line: 0, scope: !14809)
!14814 = !DILocation(line: 328, column: 24, scope: !14809)
!14815 = !DILocation(line: 328, column: 15, scope: !14809)
!14816 = !DILocation(line: 328, column: 9, scope: !14809)
!14817 = !DILocation(line: 328, column: 45, scope: !14809)
!14818 = !DILocation(line: 328, column: 2, scope: !14809)
!14819 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !14820, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14822)
!14820 = !DISubroutineType(types: !14821)
!14821 = !{!122, !14592}
!14822 = !{!14823}
!14823 = !DILocalVariable(name: "list", arg: 1, scope: !14819, file: !136, line: 266, type: !14592)
!14824 = !DILocation(line: 0, scope: !14819)
!14825 = !DILocation(line: 268, column: 15, scope: !14819)
!14826 = !DILocation(line: 268, column: 20, scope: !14819)
!14827 = !DILocation(line: 268, column: 2, scope: !14819)
!14828 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !136, file: !136, line: 496, type: !14829, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14831)
!14829 = !DISubroutineType(types: !14830)
!14830 = !{null, !2660}
!14831 = !{!14832, !14833, !14834}
!14832 = !DILocalVariable(name: "node", arg: 1, scope: !14828, file: !136, line: 496, type: !2660)
!14833 = !DILocalVariable(name: "prev", scope: !14828, file: !136, line: 498, type: !14669)
!14834 = !DILocalVariable(name: "next", scope: !14828, file: !136, line: 499, type: !14669)
!14835 = !DILocation(line: 0, scope: !14828)
!14836 = !DILocation(line: 498, column: 34, scope: !14828)
!14837 = !DILocation(line: 499, column: 34, scope: !14828)
!14838 = !DILocation(line: 501, column: 8, scope: !14828)
!14839 = !DILocation(line: 501, column: 13, scope: !14828)
!14840 = !DILocation(line: 502, column: 8, scope: !14828)
!14841 = !DILocation(line: 502, column: 13, scope: !14828)
!14842 = !DILocation(line: 503, column: 2, scope: !14828)
!14843 = !DILocation(line: 504, column: 1, scope: !14828)
!14844 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !14829, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14845)
!14845 = !{!14846}
!14846 = !DILocalVariable(name: "node", arg: 1, scope: !14844, file: !136, line: 211, type: !2660)
!14847 = !DILocation(line: 0, scope: !14844)
!14848 = !DILocation(line: 213, column: 8, scope: !14844)
!14849 = !DILocation(line: 213, column: 13, scope: !14844)
!14850 = !DILocation(line: 214, column: 8, scope: !14844)
!14851 = !DILocation(line: 214, column: 13, scope: !14844)
!14852 = !DILocation(line: 215, column: 1, scope: !14844)
!14853 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12709, file: !12709, line: 131, type: !14854, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14856)
!14854 = !DISubroutineType(types: !14855)
!14855 = !{!122, !2563, !111}
!14856 = !{!14857, !14858}
!14857 = !DILocalVariable(name: "thread", arg: 1, scope: !14853, file: !12709, line: 131, type: !2563)
!14858 = !DILocalVariable(name: "state", arg: 2, scope: !14853, file: !12709, line: 131, type: !111)
!14859 = !DILocation(line: 0, scope: !14853)
!14860 = !DILocation(line: 133, column: 23, scope: !14853)
!14861 = !DILocation(line: 133, column: 10, scope: !14853)
!14862 = !DILocation(line: 133, column: 36, scope: !14853)
!14863 = !DILocation(line: 133, column: 45, scope: !14853)
!14864 = !DILocation(line: 133, column: 2, scope: !14853)
!14865 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12709, file: !12709, line: 211, type: !14154, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14866)
!14866 = !{!14867, !14868}
!14867 = !DILocalVariable(name: "prio", arg: 1, scope: !14865, file: !12709, line: 211, type: !103)
!14868 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14865, file: !12709, line: 211, type: !103)
!14869 = !DILocation(line: 0, scope: !14865)
!14870 = !DILocation(line: 213, column: 9, scope: !14865)
!14871 = !DILocation(line: 213, column: 2, scope: !14865)
!14872 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12709, file: !12709, line: 206, type: !14154, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14873)
!14873 = !{!14874, !14875}
!14874 = !DILocalVariable(name: "prio1", arg: 1, scope: !14872, file: !12709, line: 206, type: !103)
!14875 = !DILocalVariable(name: "prio2", arg: 2, scope: !14872, file: !12709, line: 206, type: !103)
!14876 = !DILocation(line: 0, scope: !14872)
!14877 = !DILocation(line: 208, column: 15, scope: !14872)
!14878 = !DILocation(line: 208, column: 2, scope: !14872)
!14879 = distinct !DISubprogram(name: "z_ready_thread", scope: !2664, file: !2664, line: 635, type: !14322, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14880)
!14880 = !{!14881, !14882, !14884}
!14881 = !DILocalVariable(name: "thread", arg: 1, scope: !14879, file: !2664, line: 635, type: !2563)
!14882 = !DILocalVariable(name: "__i", scope: !14883, file: !2664, line: 637, type: !14356)
!14883 = distinct !DILexicalBlock(scope: !14879, file: !2664, line: 637, column: 2)
!14884 = !DILocalVariable(name: "__key", scope: !14883, file: !2664, line: 637, type: !14356)
!14885 = !DILocation(line: 0, scope: !14879)
!14886 = !DILocation(line: 0, scope: !14883)
!14887 = !DILocation(line: 0, scope: !14364, inlinedAt: !14888)
!14888 = distinct !DILocation(line: 637, column: 2, scope: !14883)
!14889 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !14890)
!14890 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !14888)
!14891 = !DILocation(line: 0, scope: !14373, inlinedAt: !14890)
!14892 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !14888)
!14893 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !14888)
!14894 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !14888)
!14895 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !14888)
!14896 = !DILocation(line: 639, column: 4, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14898, file: !2664, line: 638, column: 41)
!14898 = distinct !DILexicalBlock(scope: !14899, file: !2664, line: 638, column: 7)
!14899 = distinct !DILexicalBlock(scope: !14900, file: !2664, line: 637, column: 26)
!14900 = distinct !DILexicalBlock(scope: !14883, file: !2664, line: 637, column: 2)
!14901 = !DILocation(line: 0, scope: !14398, inlinedAt: !14902)
!14902 = distinct !DILocation(line: 637, column: 2, scope: !14900)
!14903 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !14902)
!14904 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !14902)
!14905 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !14902)
!14906 = !DILocation(line: 0, scope: !14412, inlinedAt: !14907)
!14907 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !14902)
!14908 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !14907)
!14909 = !DILocation(line: 642, column: 1, scope: !14879)
!14910 = distinct !DISubprogram(name: "ready_thread", scope: !2664, file: !2664, line: 617, type: !14322, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14911)
!14911 = !{!14912}
!14912 = !DILocalVariable(name: "thread", arg: 1, scope: !14910, file: !2664, line: 617, type: !2563)
!14913 = !DILocation(line: 0, scope: !14910)
!14914 = !DILocation(line: 626, column: 7, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14910, file: !2664, line: 626, column: 6)
!14916 = !DILocation(line: 626, column: 34, scope: !14915)
!14917 = !DILocation(line: 626, column: 37, scope: !14915)
!14918 = !DILocation(line: 626, column: 6, scope: !14910)
!14919 = !DILocation(line: 0, scope: !14575, inlinedAt: !14920)
!14920 = distinct !DILocation(line: 629, column: 3, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14915, file: !2664, line: 626, column: 64)
!14922 = !DILocation(line: 252, column: 15, scope: !14575, inlinedAt: !14920)
!14923 = !DILocation(line: 252, column: 28, scope: !14575, inlinedAt: !14920)
!14924 = !DILocation(line: 0, scope: !14582, inlinedAt: !14925)
!14925 = distinct !DILocation(line: 254, column: 3, scope: !14586, inlinedAt: !14920)
!14926 = !DILocation(line: 0, scope: !14589, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 229, column: 2, scope: !14582, inlinedAt: !14925)
!14928 = !DILocation(line: 186, column: 2, scope: !14599, inlinedAt: !14927)
!14929 = !DILocation(line: 186, column: 2, scope: !14600, inlinedAt: !14927)
!14930 = !DILocation(line: 186, column: 2, scope: !14603, inlinedAt: !14927)
!14931 = !DILocation(line: 188, column: 2, scope: !14605, inlinedAt: !14927)
!14932 = !DILocation(line: 188, column: 2, scope: !14607, inlinedAt: !14927)
!14933 = !DILocation(line: 0, scope: !14605, inlinedAt: !14927)
!14934 = !DILocation(line: 189, column: 7, scope: !14610, inlinedAt: !14927)
!14935 = !DILocation(line: 189, column: 35, scope: !14610, inlinedAt: !14927)
!14936 = !DILocation(line: 189, column: 7, scope: !14611, inlinedAt: !14927)
!14937 = !DILocation(line: 191, column: 21, scope: !14615, inlinedAt: !14927)
!14938 = !DILocation(line: 190, column: 4, scope: !14615, inlinedAt: !14927)
!14939 = !DILocation(line: 192, column: 4, scope: !14615, inlinedAt: !14927)
!14940 = distinct !{!14940, !14931, !14941}
!14941 = !DILocation(line: 194, column: 2, scope: !14605, inlinedAt: !14927)
!14942 = !DILocation(line: 196, column: 37, scope: !14589, inlinedAt: !14927)
!14943 = !DILocation(line: 196, column: 2, scope: !14589, inlinedAt: !14927)
!14944 = !DILocation(line: 197, column: 1, scope: !14589, inlinedAt: !14927)
!14945 = !DILocation(line: 630, column: 3, scope: !14921)
!14946 = !DILocation(line: 632, column: 2, scope: !14921)
!14947 = !DILocation(line: 633, column: 1, scope: !14910)
!14948 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12709, file: !12709, line: 120, type: !14507, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14949)
!14949 = !{!14950}
!14950 = !DILocalVariable(name: "thread", arg: 1, scope: !14948, file: !12709, line: 120, type: !2563)
!14951 = !DILocation(line: 0, scope: !14948)
!14952 = !DILocation(line: 122, column: 12, scope: !14948)
!14953 = !DILocation(line: 122, column: 62, scope: !14948)
!14954 = !DILocation(line: 123, column: 4, scope: !14948)
!14955 = !DILocation(line: 122, column: 2, scope: !14948)
!14956 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2664, file: !2664, line: 644, type: !14322, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14957)
!14957 = !{!14958, !14959, !14961}
!14958 = !DILocalVariable(name: "thread", arg: 1, scope: !14956, file: !2664, line: 644, type: !2563)
!14959 = !DILocalVariable(name: "__i", scope: !14960, file: !2664, line: 646, type: !14356)
!14960 = distinct !DILexicalBlock(scope: !14956, file: !2664, line: 646, column: 2)
!14961 = !DILocalVariable(name: "__key", scope: !14960, file: !2664, line: 646, type: !14356)
!14962 = !DILocation(line: 0, scope: !14956)
!14963 = !DILocation(line: 0, scope: !14960)
!14964 = !DILocation(line: 0, scope: !14364, inlinedAt: !14965)
!14965 = distinct !DILocation(line: 646, column: 2, scope: !14960)
!14966 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !14967)
!14967 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !14965)
!14968 = !DILocation(line: 0, scope: !14373, inlinedAt: !14967)
!14969 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !14965)
!14970 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !14965)
!14971 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !14965)
!14972 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !14965)
!14973 = !DILocation(line: 647, column: 3, scope: !14974)
!14974 = distinct !DILexicalBlock(scope: !14975, file: !2664, line: 646, column: 26)
!14975 = distinct !DILexicalBlock(scope: !14960, file: !2664, line: 646, column: 2)
!14976 = !DILocation(line: 0, scope: !14398, inlinedAt: !14977)
!14977 = distinct !DILocation(line: 646, column: 2, scope: !14975)
!14978 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !14977)
!14979 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !14977)
!14980 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !14977)
!14981 = !DILocation(line: 0, scope: !14412, inlinedAt: !14982)
!14982 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !14977)
!14983 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !14982)
!14984 = !DILocation(line: 649, column: 1, scope: !14956)
!14985 = distinct !DISubprogram(name: "z_sched_start", scope: !2664, file: !2664, line: 651, type: !14322, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !14986)
!14986 = !{!14987, !14988}
!14987 = !DILocalVariable(name: "thread", arg: 1, scope: !14985, file: !2664, line: 651, type: !2563)
!14988 = !DILocalVariable(name: "key", scope: !14985, file: !2664, line: 653, type: !14356)
!14989 = !DILocation(line: 0, scope: !14985)
!14990 = !DILocation(line: 0, scope: !14364, inlinedAt: !14991)
!14991 = distinct !DILocation(line: 653, column: 25, scope: !14985)
!14992 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !14993)
!14993 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !14991)
!14994 = !DILocation(line: 0, scope: !14373, inlinedAt: !14993)
!14995 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !14991)
!14996 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !14991)
!14997 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !14991)
!14998 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !14991)
!14999 = !DILocation(line: 655, column: 6, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14985, file: !2664, line: 655, column: 6)
!15001 = !DILocation(line: 655, column: 6, scope: !14985)
!15002 = !DILocation(line: 0, scope: !14398, inlinedAt: !15003)
!15003 = distinct !DILocation(line: 656, column: 3, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !15000, file: !2664, line: 655, column: 36)
!15005 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15003)
!15006 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15003)
!15007 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15003)
!15008 = !DILocation(line: 0, scope: !14412, inlinedAt: !15009)
!15009 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15003)
!15010 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15009)
!15011 = !DILocation(line: 657, column: 3, scope: !15004)
!15012 = !DILocation(line: 660, column: 2, scope: !14985)
!15013 = !DILocation(line: 661, column: 2, scope: !14985)
!15014 = !DILocation(line: 662, column: 2, scope: !14985)
!15015 = !DILocation(line: 663, column: 1, scope: !14985)
!15016 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12709, file: !12709, line: 126, type: !14507, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15017)
!15017 = !{!15018}
!15018 = !DILocalVariable(name: "thread", arg: 1, scope: !15016, file: !12709, line: 126, type: !2563)
!15019 = !DILocation(line: 0, scope: !15016)
!15020 = !DILocation(line: 128, column: 23, scope: !15016)
!15021 = !DILocation(line: 128, column: 36, scope: !15016)
!15022 = !DILocation(line: 128, column: 56, scope: !15016)
!15023 = !DILocation(line: 128, column: 2, scope: !15016)
!15024 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12709, file: !12709, line: 155, type: !14322, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15025)
!15025 = !{!15026}
!15026 = !DILocalVariable(name: "thread", arg: 1, scope: !15024, file: !12709, line: 155, type: !2563)
!15027 = !DILocation(line: 0, scope: !15024)
!15028 = !DILocation(line: 157, column: 15, scope: !15024)
!15029 = !DILocation(line: 157, column: 28, scope: !15024)
!15030 = !DILocation(line: 158, column: 1, scope: !15024)
!15031 = distinct !DISubprogram(name: "z_reschedule", scope: !2664, file: !2664, line: 967, type: !14399, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15032)
!15032 = !{!15033, !15034}
!15033 = !DILocalVariable(name: "lock", arg: 1, scope: !15031, file: !2664, line: 967, type: !14367)
!15034 = !DILocalVariable(name: "key", arg: 2, scope: !15031, file: !2664, line: 967, type: !14356)
!15035 = !DILocation(line: 0, scope: !15031)
!15036 = !DILocation(line: 969, column: 6, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !15031, file: !2664, line: 969, column: 6)
!15038 = !DILocation(line: 969, column: 23, scope: !15037)
!15039 = !DILocation(line: 969, column: 26, scope: !15037)
!15040 = !DILocation(line: 969, column: 6, scope: !15031)
!15041 = !DILocalVariable(name: "key", arg: 2, scope: !15042, file: !12811, line: 193, type: !14356)
!15042 = distinct !DISubprogram(name: "z_swap", scope: !12811, file: !12811, line: 193, type: !15043, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15045)
!15043 = !DISubroutineType(types: !15044)
!15044 = !{!103, !14367, !14356}
!15045 = !{!15046, !15041}
!15046 = !DILocalVariable(name: "lock", arg: 1, scope: !15042, file: !12811, line: 193, type: !14367)
!15047 = !DILocation(line: 0, scope: !15042, inlinedAt: !15048)
!15048 = distinct !DILocation(line: 970, column: 3, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15037, file: !2664, line: 969, column: 39)
!15050 = !DILocalVariable(name: "l", arg: 1, scope: !15051, file: !152, line: 221, type: !14367)
!15051 = distinct !DISubprogram(name: "k_spin_release", scope: !152, file: !152, line: 221, type: !15052, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15054)
!15052 = !DISubroutineType(types: !15053)
!15053 = !{null, !14367}
!15054 = !{!15050}
!15055 = !DILocation(line: 0, scope: !15051, inlinedAt: !15056)
!15056 = distinct !DILocation(line: 195, column: 2, scope: !15042, inlinedAt: !15048)
!15057 = !DILocation(line: 225, column: 2, scope: !15058, inlinedAt: !15056)
!15058 = distinct !DILexicalBlock(scope: !15059, file: !152, line: 225, column: 2)
!15059 = distinct !DILexicalBlock(scope: !15051, file: !152, line: 225, column: 2)
!15060 = !DILocation(line: 225, column: 2, scope: !15059, inlinedAt: !15056)
!15061 = !DILocation(line: 225, column: 2, scope: !15062, inlinedAt: !15056)
!15062 = distinct !DILexicalBlock(scope: !15058, file: !152, line: 225, column: 2)
!15063 = !DILocation(line: 196, column: 9, scope: !15042, inlinedAt: !15048)
!15064 = !DILocation(line: 971, column: 2, scope: !15049)
!15065 = !DILocation(line: 0, scope: !14398, inlinedAt: !15066)
!15066 = distinct !DILocation(line: 972, column: 3, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15037, file: !2664, line: 971, column: 9)
!15068 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15066)
!15069 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15066)
!15070 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15066)
!15071 = !DILocation(line: 0, scope: !14412, inlinedAt: !15072)
!15072 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15066)
!15073 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15072)
!15074 = !DILocation(line: 975, column: 1, scope: !15031)
!15075 = distinct !DISubprogram(name: "resched", scope: !2664, file: !2664, line: 940, type: !15076, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15078)
!15076 = !DISubroutineType(types: !15077)
!15077 = !{!122, !111}
!15078 = !{!15079}
!15079 = !DILocalVariable(name: "key", arg: 1, scope: !15075, file: !2664, line: 940, type: !111)
!15080 = !DILocation(line: 0, scope: !15075)
!15081 = !DILocalVariable(name: "key", arg: 1, scope: !15082, file: !7706, line: 112, type: !32)
!15082 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7706, file: !7706, line: 112, type: !15083, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15085)
!15083 = !DISubroutineType(types: !15084)
!15084 = !{!122, !32}
!15085 = !{!15081}
!15086 = !DILocation(line: 0, scope: !15082, inlinedAt: !15087)
!15087 = distinct !DILocation(line: 946, column: 9, scope: !15075)
!15088 = !DILocation(line: 115, column: 13, scope: !15082, inlinedAt: !15087)
!15089 = !DILocation(line: 946, column: 32, scope: !15075)
!15090 = !DILocation(line: 1031, column: 3, scope: !15091, inlinedAt: !15094)
!15091 = distinct !DISubprogram(name: "__get_IPSR", scope: !7585, file: !7585, line: 1027, type: !7672, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15092)
!15092 = !{!15093}
!15093 = !DILocalVariable(name: "result", scope: !15091, file: !7585, line: 1029, type: !111)
!15094 = distinct !DILocation(line: 48, column: 10, scope: !15095, inlinedAt: !15096)
!15095 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8579, file: !8579, line: 46, type: !8580, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !2275)
!15096 = distinct !DILocation(line: 946, column: 36, scope: !15075)
!15097 = !{i64 7016069}
!15098 = !DILocation(line: 0, scope: !15091, inlinedAt: !15094)
!15099 = !DILocation(line: 48, column: 9, scope: !15095, inlinedAt: !15096)
!15100 = !DILocation(line: 946, column: 2, scope: !15075)
!15101 = distinct !DISubprogram(name: "need_swap", scope: !2664, file: !2664, line: 953, type: !8580, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15102)
!15102 = !{!15103}
!15103 = !DILocalVariable(name: "new_thread", scope: !15101, file: !2664, line: 959, type: !2563)
!15104 = !DILocation(line: 962, column: 31, scope: !15101)
!15105 = !DILocation(line: 0, scope: !15101)
!15106 = !DILocation(line: 963, column: 23, scope: !15101)
!15107 = !DILocation(line: 963, column: 20, scope: !15101)
!15108 = !DILocation(line: 963, column: 2, scope: !15101)
!15109 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12811, file: !12811, line: 181, type: !7595, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15110)
!15110 = !{!15111, !15112}
!15111 = !DILocalVariable(name: "key", arg: 1, scope: !15109, file: !12811, line: 181, type: !32)
!15112 = !DILocalVariable(name: "ret", scope: !15109, file: !12811, line: 183, type: !103)
!15113 = !DILocation(line: 0, scope: !15109)
!15114 = !DILocation(line: 185, column: 8, scope: !15109)
!15115 = !DILocation(line: 186, column: 2, scope: !15109)
!15116 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2664, file: !2664, line: 665, type: !14322, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15117)
!15117 = !{!15118, !15119, !15121}
!15118 = !DILocalVariable(name: "thread", arg: 1, scope: !15116, file: !2664, line: 665, type: !2563)
!15119 = !DILocalVariable(name: "__i", scope: !15120, file: !2664, line: 671, type: !14356)
!15120 = distinct !DILexicalBlock(scope: !15116, file: !2664, line: 671, column: 2)
!15121 = !DILocalVariable(name: "__key", scope: !15120, file: !2664, line: 671, type: !14356)
!15122 = !DILocation(line: 0, scope: !15116)
!15123 = !DILocation(line: 669, column: 8, scope: !15116)
!15124 = !DILocation(line: 0, scope: !15120)
!15125 = !DILocation(line: 0, scope: !14364, inlinedAt: !15126)
!15126 = distinct !DILocation(line: 671, column: 2, scope: !15120)
!15127 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15128)
!15128 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15126)
!15129 = !DILocation(line: 0, scope: !14373, inlinedAt: !15128)
!15130 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15126)
!15131 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15126)
!15132 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15126)
!15133 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15126)
!15134 = !DILocation(line: 672, column: 7, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15136, file: !2664, line: 672, column: 7)
!15136 = distinct !DILexicalBlock(scope: !15137, file: !2664, line: 671, column: 26)
!15137 = distinct !DILexicalBlock(scope: !15120, file: !2664, line: 671, column: 2)
!15138 = !DILocation(line: 672, column: 7, scope: !15136)
!15139 = !DILocation(line: 0, scope: !14558, inlinedAt: !15140)
!15140 = distinct !DILocation(line: 673, column: 4, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15135, file: !2664, line: 672, column: 35)
!15142 = !DILocation(line: 266, column: 15, scope: !14558, inlinedAt: !15140)
!15143 = !DILocation(line: 266, column: 28, scope: !14558, inlinedAt: !15140)
!15144 = !DILocation(line: 0, scope: !14566, inlinedAt: !15145)
!15145 = distinct !DILocation(line: 268, column: 3, scope: !14570, inlinedAt: !15140)
!15146 = !DILocation(line: 234, column: 2, scope: !14566, inlinedAt: !15145)
!15147 = !DILocation(line: 674, column: 3, scope: !15141)
!15148 = !DILocation(line: 675, column: 3, scope: !15136)
!15149 = !DILocation(line: 676, column: 26, scope: !15136)
!15150 = !DILocation(line: 676, column: 23, scope: !15136)
!15151 = !DILocation(line: 676, column: 3, scope: !15136)
!15152 = !DILocation(line: 0, scope: !14398, inlinedAt: !15153)
!15153 = distinct !DILocation(line: 671, column: 2, scope: !15137)
!15154 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15153)
!15155 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15153)
!15156 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15153)
!15157 = !DILocation(line: 0, scope: !14412, inlinedAt: !15158)
!15158 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15153)
!15159 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15158)
!15160 = !DILocation(line: 679, column: 16, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15116, file: !2664, line: 679, column: 6)
!15162 = !DILocation(line: 679, column: 13, scope: !15161)
!15163 = !DILocation(line: 679, column: 6, scope: !15116)
!15164 = !DILocation(line: 680, column: 3, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15161, file: !2664, line: 679, column: 26)
!15166 = !DILocation(line: 681, column: 2, scope: !15165)
!15167 = !DILocation(line: 684, column: 1, scope: !15116)
!15168 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13094, file: !13094, line: 52, type: !14340, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15169)
!15169 = !{!15170}
!15170 = !DILocalVariable(name: "thread", arg: 1, scope: !15168, file: !13094, line: 52, type: !2563)
!15171 = !DILocation(line: 0, scope: !15168)
!15172 = !DILocation(line: 54, column: 39, scope: !15168)
!15173 = !DILocation(line: 54, column: 9, scope: !15168)
!15174 = !DILocation(line: 54, column: 2, scope: !15168)
!15175 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12709, file: !12709, line: 141, type: !14322, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15176)
!15176 = !{!15177}
!15177 = !DILocalVariable(name: "thread", arg: 1, scope: !15175, file: !12709, line: 141, type: !2563)
!15178 = !DILocation(line: 0, scope: !15175)
!15179 = !DILocation(line: 143, column: 15, scope: !15175)
!15180 = !DILocation(line: 143, column: 28, scope: !15175)
!15181 = !DILocation(line: 146, column: 1, scope: !15175)
!15182 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12709, file: !12709, line: 73, type: !317, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !2275)
!15183 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15184)
!15184 = distinct !DILocation(line: 75, column: 30, scope: !15182)
!15185 = !DILocation(line: 0, scope: !14373, inlinedAt: !15184)
!15186 = !DILocation(line: 75, column: 9, scope: !15182)
!15187 = !DILocation(line: 76, column: 1, scope: !15182)
!15188 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2664, file: !2664, line: 977, type: !7682, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15189)
!15189 = !{!15190}
!15190 = !DILocalVariable(name: "key", arg: 1, scope: !15188, file: !2664, line: 977, type: !111)
!15191 = !DILocation(line: 0, scope: !15188)
!15192 = !DILocation(line: 979, column: 6, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15188, file: !2664, line: 979, column: 6)
!15194 = !DILocation(line: 979, column: 6, scope: !15188)
!15195 = !DILocation(line: 980, column: 3, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15193, file: !2664, line: 979, column: 20)
!15197 = !DILocation(line: 981, column: 2, scope: !15196)
!15198 = !DILocation(line: 0, scope: !14412, inlinedAt: !15199)
!15199 = distinct !DILocation(line: 982, column: 3, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !15193, file: !2664, line: 981, column: 9)
!15201 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15199)
!15202 = !DILocation(line: 985, column: 1, scope: !15188)
!15203 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2664, file: !2664, line: 695, type: !14322, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15204)
!15204 = !{!15205, !15206}
!15205 = !DILocalVariable(name: "thread", arg: 1, scope: !15203, file: !2664, line: 695, type: !2563)
!15206 = !DILocalVariable(name: "key", scope: !15203, file: !2664, line: 699, type: !14356)
!15207 = !DILocation(line: 0, scope: !15203)
!15208 = !DILocation(line: 0, scope: !14364, inlinedAt: !15209)
!15209 = distinct !DILocation(line: 699, column: 25, scope: !15203)
!15210 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15209)
!15212 = !DILocation(line: 0, scope: !14373, inlinedAt: !15211)
!15213 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15209)
!15214 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15209)
!15215 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15209)
!15216 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15209)
!15217 = !DILocation(line: 702, column: 7, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15203, file: !2664, line: 702, column: 6)
!15219 = !DILocation(line: 702, column: 6, scope: !15203)
!15220 = !DILocation(line: 0, scope: !14398, inlinedAt: !15221)
!15221 = distinct !DILocation(line: 703, column: 3, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15218, file: !2664, line: 702, column: 38)
!15223 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15221)
!15224 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15221)
!15225 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15221)
!15226 = !DILocation(line: 0, scope: !14412, inlinedAt: !15227)
!15227 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15221)
!15228 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15227)
!15229 = !DILocation(line: 704, column: 3, scope: !15222)
!15230 = !DILocation(line: 707, column: 2, scope: !15203)
!15231 = !DILocation(line: 708, column: 2, scope: !15203)
!15232 = !DILocation(line: 710, column: 2, scope: !15203)
!15233 = !DILocation(line: 713, column: 1, scope: !15203)
!15234 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12709, file: !12709, line: 96, type: !14507, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15235)
!15235 = !{!15236}
!15236 = !DILocalVariable(name: "thread", arg: 1, scope: !15234, file: !12709, line: 96, type: !2563)
!15237 = !DILocation(line: 0, scope: !15234)
!15238 = !DILocation(line: 98, column: 23, scope: !15234)
!15239 = !DILocation(line: 98, column: 36, scope: !15234)
!15240 = !DILocation(line: 98, column: 57, scope: !15234)
!15241 = !DILocation(line: 98, column: 2, scope: !15234)
!15242 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12709, file: !12709, line: 148, type: !14322, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15243)
!15243 = !{!15244}
!15244 = !DILocalVariable(name: "thread", arg: 1, scope: !15242, file: !12709, line: 148, type: !2563)
!15245 = !DILocation(line: 0, scope: !15242)
!15246 = !DILocation(line: 150, column: 15, scope: !15242)
!15247 = !DILocation(line: 150, column: 28, scope: !15242)
!15248 = !DILocation(line: 153, column: 1, scope: !15242)
!15249 = distinct !DISubprogram(name: "z_pend_thread", scope: !2664, file: !2664, line: 770, type: !15250, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15256)
!15250 = !DISubroutineType(types: !15251)
!15251 = !{null, !2563, !2594, !15252}
!15252 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15253)
!15253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15254)
!15254 = !{!15255}
!15255 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15253, file: !105, line: 66, baseType: !104, size: 64)
!15256 = !{!15257, !15258, !15259, !15260, !15262}
!15257 = !DILocalVariable(name: "thread", arg: 1, scope: !15249, file: !2664, line: 770, type: !2563)
!15258 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15249, file: !2664, line: 770, type: !2594)
!15259 = !DILocalVariable(name: "timeout", arg: 3, scope: !15249, file: !2664, line: 771, type: !15252)
!15260 = !DILocalVariable(name: "__i", scope: !15261, file: !2664, line: 774, type: !14356)
!15261 = distinct !DILexicalBlock(scope: !15249, file: !2664, line: 774, column: 2)
!15262 = !DILocalVariable(name: "__key", scope: !15261, file: !2664, line: 774, type: !14356)
!15263 = !DILocation(line: 0, scope: !15249)
!15264 = !DILocation(line: 773, column: 2, scope: !15265)
!15265 = distinct !DILexicalBlock(scope: !15266, file: !2664, line: 773, column: 2)
!15266 = distinct !DILexicalBlock(scope: !15249, file: !2664, line: 773, column: 2)
!15267 = !DILocation(line: 773, column: 2, scope: !15266)
!15268 = !DILocation(line: 773, column: 2, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15265, file: !2664, line: 773, column: 2)
!15270 = !DILocation(line: 0, scope: !15261)
!15271 = !DILocation(line: 0, scope: !14364, inlinedAt: !15272)
!15272 = distinct !DILocation(line: 774, column: 2, scope: !15261)
!15273 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15274)
!15274 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15272)
!15275 = !DILocation(line: 0, scope: !14373, inlinedAt: !15274)
!15276 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15272)
!15277 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15272)
!15278 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15272)
!15279 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15272)
!15280 = !DILocation(line: 775, column: 3, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15282, file: !2664, line: 774, column: 26)
!15282 = distinct !DILexicalBlock(scope: !15261, file: !2664, line: 774, column: 2)
!15283 = !DILocation(line: 0, scope: !14398, inlinedAt: !15284)
!15284 = distinct !DILocation(line: 774, column: 2, scope: !15282)
!15285 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15284)
!15286 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15284)
!15287 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15284)
!15288 = !DILocation(line: 0, scope: !14412, inlinedAt: !15289)
!15289 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15284)
!15290 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15289)
!15291 = !DILocation(line: 777, column: 1, scope: !15249)
!15292 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2664, file: !2664, line: 79, type: !14507, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15293)
!15293 = !{!15294}
!15294 = !DILocalVariable(name: "thread", arg: 1, scope: !15292, file: !2664, line: 79, type: !2563)
!15295 = !DILocation(line: 0, scope: !15292)
!15296 = !DILocation(line: 81, column: 23, scope: !15292)
!15297 = !DILocation(line: 81, column: 36, scope: !15292)
!15298 = !DILocation(line: 81, column: 53, scope: !15292)
!15299 = !DILocation(line: 81, column: 2, scope: !15292)
!15300 = distinct !DISubprogram(name: "pend_locked", scope: !2664, file: !2664, line: 760, type: !15250, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15301)
!15301 = !{!15302, !15303, !15304}
!15302 = !DILocalVariable(name: "thread", arg: 1, scope: !15300, file: !2664, line: 760, type: !2563)
!15303 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15300, file: !2664, line: 760, type: !2594)
!15304 = !DILocalVariable(name: "timeout", arg: 3, scope: !15300, file: !2664, line: 761, type: !15252)
!15305 = !DILocation(line: 0, scope: !15300)
!15306 = !DILocation(line: 766, column: 2, scope: !15300)
!15307 = !DILocation(line: 767, column: 2, scope: !15300)
!15308 = !DILocation(line: 768, column: 1, scope: !15300)
!15309 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2664, file: !2664, line: 740, type: !15310, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15312)
!15310 = !DISubroutineType(types: !15311)
!15311 = !{null, !2563, !2594}
!15312 = !{!15313, !15314}
!15313 = !DILocalVariable(name: "thread", arg: 1, scope: !15309, file: !2664, line: 740, type: !2563)
!15314 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15309, file: !2664, line: 740, type: !2594)
!15315 = !DILocation(line: 0, scope: !15309)
!15316 = !DILocation(line: 742, column: 2, scope: !15309)
!15317 = !DILocation(line: 743, column: 2, scope: !15309)
!15318 = !DILocation(line: 747, column: 13, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15309, file: !2664, line: 747, column: 6)
!15320 = !DILocation(line: 747, column: 6, scope: !15309)
!15321 = !DILocation(line: 748, column: 16, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15319, file: !2664, line: 747, column: 22)
!15323 = !DILocation(line: 748, column: 26, scope: !15322)
!15324 = !DILocation(line: 749, column: 28, scope: !15322)
!15325 = !DILocation(line: 0, scope: !14589, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 749, column: 3, scope: !15322)
!15327 = !DILocation(line: 186, column: 2, scope: !14599, inlinedAt: !15326)
!15328 = !DILocation(line: 186, column: 2, scope: !14600, inlinedAt: !15326)
!15329 = !DILocation(line: 186, column: 2, scope: !14603, inlinedAt: !15326)
!15330 = !DILocation(line: 188, column: 2, scope: !14605, inlinedAt: !15326)
!15331 = !DILocation(line: 188, column: 2, scope: !14607, inlinedAt: !15326)
!15332 = !DILocation(line: 0, scope: !14605, inlinedAt: !15326)
!15333 = !DILocation(line: 189, column: 7, scope: !14610, inlinedAt: !15326)
!15334 = !DILocation(line: 189, column: 35, scope: !14610, inlinedAt: !15326)
!15335 = !DILocation(line: 189, column: 7, scope: !14611, inlinedAt: !15326)
!15336 = !DILocation(line: 191, column: 21, scope: !14615, inlinedAt: !15326)
!15337 = !DILocation(line: 190, column: 4, scope: !14615, inlinedAt: !15326)
!15338 = !DILocation(line: 192, column: 4, scope: !14615, inlinedAt: !15326)
!15339 = distinct !{!15339, !15330, !15340}
!15340 = !DILocation(line: 194, column: 2, scope: !14605, inlinedAt: !15326)
!15341 = !DILocation(line: 196, column: 37, scope: !14589, inlinedAt: !15326)
!15342 = !DILocation(line: 196, column: 2, scope: !14589, inlinedAt: !15326)
!15343 = !DILocation(line: 197, column: 1, scope: !14589, inlinedAt: !15326)
!15344 = !DILocation(line: 751, column: 1, scope: !15309)
!15345 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2664, file: !2664, line: 753, type: !15346, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15348)
!15346 = !DISubroutineType(types: !15347)
!15347 = !{null, !2563, !15252}
!15348 = !{!15349, !15350}
!15349 = !DILocalVariable(name: "thread", arg: 1, scope: !15345, file: !2664, line: 753, type: !2563)
!15350 = !DILocalVariable(name: "timeout", arg: 2, scope: !15345, file: !2664, line: 753, type: !15252)
!15351 = !DILocation(line: 0, scope: !15345)
!15352 = !DILocation(line: 755, column: 7, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15345, file: !2664, line: 755, column: 6)
!15354 = !DILocation(line: 755, column: 6, scope: !15345)
!15355 = !DILocation(line: 756, column: 3, scope: !15356)
!15356 = distinct !DILexicalBlock(scope: !15353, file: !2664, line: 755, column: 41)
!15357 = !DILocation(line: 757, column: 2, scope: !15356)
!15358 = !DILocation(line: 758, column: 1, scope: !15345)
!15359 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13094, file: !13094, line: 47, type: !15346, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15360)
!15360 = !{!15361, !15362}
!15361 = !DILocalVariable(name: "thread", arg: 1, scope: !15359, file: !13094, line: 47, type: !2563)
!15362 = !DILocalVariable(name: "ticks", arg: 2, scope: !15359, file: !13094, line: 47, type: !15252)
!15363 = !DILocation(line: 0, scope: !15359)
!15364 = !DILocation(line: 49, column: 30, scope: !15359)
!15365 = !DILocation(line: 49, column: 2, scope: !15359)
!15366 = !DILocation(line: 50, column: 1, scope: !15359)
!15367 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2664, file: !2664, line: 795, type: !2620, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15368)
!15368 = !{!15369, !15370, !15371, !15373, !15374}
!15369 = !DILocalVariable(name: "timeout", arg: 1, scope: !15367, file: !2664, line: 795, type: !2622)
!15370 = !DILocalVariable(name: "thread", scope: !15367, file: !2664, line: 797, type: !2563)
!15371 = !DILocalVariable(name: "__i", scope: !15372, file: !2664, line: 800, type: !14356)
!15372 = distinct !DILexicalBlock(scope: !15367, file: !2664, line: 800, column: 2)
!15373 = !DILocalVariable(name: "__key", scope: !15372, file: !2664, line: 800, type: !14356)
!15374 = !DILocalVariable(name: "killed", scope: !15375, file: !2664, line: 801, type: !122)
!15375 = distinct !DILexicalBlock(scope: !15376, file: !2664, line: 800, column: 26)
!15376 = distinct !DILexicalBlock(scope: !15372, file: !2664, line: 800, column: 2)
!15377 = !DILocation(line: 0, scope: !15367)
!15378 = !DILocation(line: 797, column: 28, scope: !15367)
!15379 = !DILocation(line: 0, scope: !15372)
!15380 = !DILocation(line: 0, scope: !14364, inlinedAt: !15381)
!15381 = distinct !DILocation(line: 800, column: 2, scope: !15372)
!15382 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15381)
!15384 = !DILocation(line: 0, scope: !14373, inlinedAt: !15383)
!15385 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15381)
!15386 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15381)
!15387 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15381)
!15388 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15381)
!15389 = !DILocation(line: 801, column: 27, scope: !15375)
!15390 = !DILocation(line: 801, column: 32, scope: !15375)
!15391 = !DILocation(line: 801, column: 61, scope: !15375)
!15392 = !DILocation(line: 0, scope: !15375)
!15393 = !DILocation(line: 804, column: 7, scope: !15375)
!15394 = !DILocation(line: 805, column: 21, scope: !15395)
!15395 = distinct !DILexicalBlock(scope: !15396, file: !2664, line: 805, column: 8)
!15396 = distinct !DILexicalBlock(scope: !15397, file: !2664, line: 804, column: 16)
!15397 = distinct !DILexicalBlock(scope: !15375, file: !2664, line: 804, column: 7)
!15398 = !DILocation(line: 805, column: 31, scope: !15395)
!15399 = !DILocation(line: 805, column: 8, scope: !15396)
!15400 = !DILocation(line: 806, column: 5, scope: !15401)
!15401 = distinct !DILexicalBlock(scope: !15395, file: !2664, line: 805, column: 40)
!15402 = !DILocation(line: 807, column: 4, scope: !15401)
!15403 = !DILocation(line: 808, column: 4, scope: !15396)
!15404 = !DILocation(line: 809, column: 4, scope: !15396)
!15405 = !DILocation(line: 810, column: 4, scope: !15396)
!15406 = !DILocation(line: 811, column: 3, scope: !15396)
!15407 = !DILocation(line: 0, scope: !14398, inlinedAt: !15408)
!15408 = distinct !DILocation(line: 800, column: 2, scope: !15376)
!15409 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15408)
!15410 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15408)
!15411 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15408)
!15412 = !DILocation(line: 0, scope: !14412, inlinedAt: !15413)
!15413 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15408)
!15414 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15413)
!15415 = !DILocation(line: 813, column: 1, scope: !15367)
!15416 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2664, file: !2664, line: 779, type: !14322, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15417)
!15417 = !{!15418}
!15418 = !DILocalVariable(name: "thread", arg: 1, scope: !15416, file: !2664, line: 779, type: !2563)
!15419 = !DILocation(line: 0, scope: !15416)
!15420 = !DILocation(line: 781, column: 21, scope: !15416)
!15421 = !DILocation(line: 781, column: 2, scope: !15416)
!15422 = !DILocation(line: 782, column: 2, scope: !15416)
!15423 = !DILocation(line: 783, column: 15, scope: !15416)
!15424 = !DILocation(line: 783, column: 25, scope: !15416)
!15425 = !DILocation(line: 784, column: 1, scope: !15416)
!15426 = distinct !DISubprogram(name: "pended_on_thread", scope: !2664, file: !2664, line: 724, type: !15427, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15429)
!15427 = !DISubroutineType(types: !15428)
!15428 = !{!2594, !2563}
!15429 = !{!15430}
!15430 = !DILocalVariable(name: "thread", arg: 1, scope: !15426, file: !2664, line: 724, type: !2563)
!15431 = !DILocation(line: 0, scope: !15426)
!15432 = !DILocation(line: 726, column: 2, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15434, file: !2664, line: 726, column: 2)
!15434 = distinct !DILexicalBlock(scope: !15426, file: !2664, line: 726, column: 2)
!15435 = !DILocation(line: 726, column: 2, scope: !15434)
!15436 = !DILocation(line: 726, column: 2, scope: !15437)
!15437 = distinct !DILexicalBlock(scope: !15433, file: !2664, line: 726, column: 2)
!15438 = !DILocation(line: 728, column: 2, scope: !15426)
!15439 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12709, file: !12709, line: 165, type: !14322, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15440)
!15440 = !{!15441}
!15441 = !DILocalVariable(name: "thread", arg: 1, scope: !15439, file: !12709, line: 165, type: !2563)
!15442 = !DILocation(line: 0, scope: !15439)
!15443 = !DILocation(line: 167, column: 15, scope: !15439)
!15444 = !DILocation(line: 167, column: 28, scope: !15439)
!15445 = !DILocation(line: 168, column: 1, scope: !15439)
!15446 = distinct !DISubprogram(name: "unready_thread", scope: !2664, file: !2664, line: 731, type: !14322, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15447)
!15447 = !{!15448}
!15448 = !DILocalVariable(name: "thread", arg: 1, scope: !15446, file: !2664, line: 731, type: !2563)
!15449 = !DILocation(line: 0, scope: !15446)
!15450 = !DILocation(line: 733, column: 6, scope: !15451)
!15451 = distinct !DILexicalBlock(scope: !15446, file: !2664, line: 733, column: 6)
!15452 = !DILocation(line: 733, column: 6, scope: !15446)
!15453 = !DILocation(line: 0, scope: !14558, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 734, column: 3, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15451, file: !2664, line: 733, column: 34)
!15456 = !DILocation(line: 266, column: 15, scope: !14558, inlinedAt: !15454)
!15457 = !DILocation(line: 266, column: 28, scope: !14558, inlinedAt: !15454)
!15458 = !DILocation(line: 0, scope: !14566, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 268, column: 3, scope: !14570, inlinedAt: !15454)
!15460 = !DILocation(line: 234, column: 2, scope: !14566, inlinedAt: !15459)
!15461 = !DILocation(line: 735, column: 2, scope: !15455)
!15462 = !DILocation(line: 736, column: 25, scope: !15446)
!15463 = !DILocation(line: 736, column: 22, scope: !15446)
!15464 = !DILocation(line: 736, column: 2, scope: !15446)
!15465 = !DILocation(line: 737, column: 1, scope: !15446)
!15466 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12709, file: !12709, line: 160, type: !14322, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15467)
!15467 = !{!15468}
!15468 = !DILocalVariable(name: "thread", arg: 1, scope: !15466, file: !12709, line: 160, type: !2563)
!15469 = !DILocation(line: 0, scope: !15466)
!15470 = !DILocation(line: 162, column: 15, scope: !15466)
!15471 = !DILocation(line: 162, column: 28, scope: !15466)
!15472 = !DILocation(line: 163, column: 1, scope: !15466)
!15473 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2664, file: !2664, line: 786, type: !14322, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15474)
!15474 = !{!15475, !15476, !15478}
!15475 = !DILocalVariable(name: "thread", arg: 1, scope: !15473, file: !2664, line: 786, type: !2563)
!15476 = !DILocalVariable(name: "__i", scope: !15477, file: !2664, line: 788, type: !14356)
!15477 = distinct !DILexicalBlock(scope: !15473, file: !2664, line: 788, column: 2)
!15478 = !DILocalVariable(name: "__key", scope: !15477, file: !2664, line: 788, type: !14356)
!15479 = !DILocation(line: 0, scope: !15473)
!15480 = !DILocation(line: 0, scope: !15477)
!15481 = !DILocation(line: 0, scope: !14364, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 788, column: 2, scope: !15477)
!15483 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15484)
!15484 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15482)
!15485 = !DILocation(line: 0, scope: !14373, inlinedAt: !15484)
!15486 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15482)
!15487 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15482)
!15488 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15482)
!15489 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15482)
!15490 = !DILocation(line: 789, column: 3, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15492, file: !2664, line: 788, column: 26)
!15492 = distinct !DILexicalBlock(scope: !15477, file: !2664, line: 788, column: 2)
!15493 = !DILocation(line: 0, scope: !14398, inlinedAt: !15494)
!15494 = distinct !DILocation(line: 788, column: 2, scope: !15492)
!15495 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15494)
!15496 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15494)
!15497 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15494)
!15498 = !DILocation(line: 0, scope: !14412, inlinedAt: !15499)
!15499 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15494)
!15500 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15499)
!15501 = !DILocation(line: 791, column: 1, scope: !15473)
!15502 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2664, file: !2664, line: 816, type: !15503, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15505)
!15503 = !DISubroutineType(types: !15504)
!15504 = !{!103, !111, !2594, !15252}
!15505 = !{!15506, !15507, !15508, !15509, !15510, !15512}
!15506 = !DILocalVariable(name: "key", arg: 1, scope: !15502, file: !2664, line: 816, type: !111)
!15507 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15502, file: !2664, line: 816, type: !2594)
!15508 = !DILocalVariable(name: "timeout", arg: 3, scope: !15502, file: !2664, line: 816, type: !15252)
!15509 = !DILocalVariable(name: "ret", scope: !15502, file: !2664, line: 828, type: !103)
!15510 = !DILocalVariable(name: "__i", scope: !15511, file: !2664, line: 829, type: !14356)
!15511 = distinct !DILexicalBlock(scope: !15502, file: !2664, line: 829, column: 2)
!15512 = !DILocalVariable(name: "__key", scope: !15511, file: !2664, line: 829, type: !14356)
!15513 = !DILocation(line: 0, scope: !15502)
!15514 = !DILocation(line: 823, column: 14, scope: !15502)
!15515 = !DILocation(line: 823, column: 2, scope: !15502)
!15516 = !DILocation(line: 826, column: 20, scope: !15502)
!15517 = !DILocation(line: 826, column: 18, scope: !15502)
!15518 = !DILocation(line: 828, column: 12, scope: !15502)
!15519 = !DILocation(line: 0, scope: !15511)
!15520 = !DILocation(line: 0, scope: !14364, inlinedAt: !15521)
!15521 = distinct !DILocation(line: 829, column: 2, scope: !15511)
!15522 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15523)
!15523 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15521)
!15524 = !DILocation(line: 0, scope: !14373, inlinedAt: !15523)
!15525 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15521)
!15526 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15521)
!15527 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15521)
!15528 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15521)
!15529 = !DILocation(line: 830, column: 7, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15531, file: !2664, line: 830, column: 7)
!15531 = distinct !DILexicalBlock(scope: !15532, file: !2664, line: 829, column: 26)
!15532 = distinct !DILexicalBlock(scope: !15511, file: !2664, line: 829, column: 2)
!15533 = !DILocation(line: 830, column: 26, scope: !15530)
!15534 = !DILocation(line: 830, column: 23, scope: !15530)
!15535 = !DILocation(line: 830, column: 7, scope: !15531)
!15536 = !DILocation(line: 831, column: 20, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15530, file: !2664, line: 830, column: 36)
!15538 = !DILocation(line: 832, column: 3, scope: !15537)
!15539 = !DILocation(line: 0, scope: !14398, inlinedAt: !15540)
!15540 = distinct !DILocation(line: 829, column: 2, scope: !15532)
!15541 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15540)
!15542 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15540)
!15543 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15540)
!15544 = !DILocation(line: 0, scope: !14412, inlinedAt: !15545)
!15545 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15540)
!15546 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15545)
!15547 = !DILocation(line: 834, column: 2, scope: !15502)
!15548 = distinct !DISubprogram(name: "z_pend_curr", scope: !2664, file: !2664, line: 840, type: !15549, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15551)
!15549 = !DISubroutineType(types: !15550)
!15550 = !{!103, !14367, !14356, !2594, !15252}
!15551 = !{!15552, !15553, !15554, !15555}
!15552 = !DILocalVariable(name: "lock", arg: 1, scope: !15548, file: !2664, line: 840, type: !14367)
!15553 = !DILocalVariable(name: "key", arg: 2, scope: !15548, file: !2664, line: 840, type: !14356)
!15554 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15548, file: !2664, line: 841, type: !2594)
!15555 = !DILocalVariable(name: "timeout", arg: 4, scope: !15548, file: !2664, line: 841, type: !15252)
!15556 = !DILocation(line: 0, scope: !15548)
!15557 = !DILocation(line: 844, column: 20, scope: !15548)
!15558 = !DILocation(line: 844, column: 18, scope: !15548)
!15559 = !DILocation(line: 846, column: 2, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15561, file: !2664, line: 846, column: 2)
!15561 = distinct !DILexicalBlock(scope: !15548, file: !2664, line: 846, column: 2)
!15562 = !DILocation(line: 846, column: 2, scope: !15561)
!15563 = !DILocation(line: 846, column: 2, scope: !15564)
!15564 = distinct !DILexicalBlock(scope: !15560, file: !2664, line: 846, column: 2)
!15565 = !DILocation(line: 0, scope: !14364, inlinedAt: !15566)
!15566 = distinct !DILocation(line: 856, column: 9, scope: !15548)
!15567 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15568)
!15568 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15566)
!15569 = !DILocation(line: 0, scope: !14373, inlinedAt: !15568)
!15570 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15566)
!15571 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15566)
!15572 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15566)
!15573 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15566)
!15574 = !DILocation(line: 857, column: 14, scope: !15548)
!15575 = !DILocation(line: 857, column: 2, scope: !15548)
!15576 = !DILocation(line: 0, scope: !15051, inlinedAt: !15577)
!15577 = distinct !DILocation(line: 858, column: 2, scope: !15548)
!15578 = !DILocation(line: 225, column: 2, scope: !15058, inlinedAt: !15577)
!15579 = !DILocation(line: 225, column: 2, scope: !15059, inlinedAt: !15577)
!15580 = !DILocation(line: 225, column: 2, scope: !15062, inlinedAt: !15577)
!15581 = !DILocation(line: 0, scope: !15042, inlinedAt: !15582)
!15582 = distinct !DILocation(line: 859, column: 9, scope: !15548)
!15583 = !DILocation(line: 0, scope: !15051, inlinedAt: !15584)
!15584 = distinct !DILocation(line: 195, column: 2, scope: !15042, inlinedAt: !15582)
!15585 = !DILocation(line: 225, column: 2, scope: !15058, inlinedAt: !15584)
!15586 = !DILocation(line: 225, column: 2, scope: !15059, inlinedAt: !15584)
!15587 = !DILocation(line: 225, column: 2, scope: !15062, inlinedAt: !15584)
!15588 = !DILocation(line: 196, column: 9, scope: !15042, inlinedAt: !15582)
!15589 = !DILocation(line: 859, column: 2, scope: !15548)
!15590 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2664, file: !2664, line: 862, type: !15591, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15593)
!15591 = !DISubroutineType(types: !15592)
!15592 = !{!2563, !2594}
!15593 = !{!15594, !15595, !15596, !15598}
!15594 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15590, file: !2664, line: 862, type: !2594)
!15595 = !DILocalVariable(name: "thread", scope: !15590, file: !2664, line: 864, type: !2563)
!15596 = !DILocalVariable(name: "__i", scope: !15597, file: !2664, line: 866, type: !14356)
!15597 = distinct !DILexicalBlock(scope: !15590, file: !2664, line: 866, column: 2)
!15598 = !DILocalVariable(name: "__key", scope: !15597, file: !2664, line: 866, type: !14356)
!15599 = !DILocation(line: 0, scope: !15590)
!15600 = !DILocation(line: 0, scope: !15597)
!15601 = !DILocation(line: 0, scope: !14364, inlinedAt: !15602)
!15602 = distinct !DILocation(line: 866, column: 2, scope: !15597)
!15603 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15602)
!15605 = !DILocation(line: 0, scope: !14373, inlinedAt: !15604)
!15606 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15602)
!15607 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15602)
!15608 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15602)
!15609 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15602)
!15610 = !DILocation(line: 867, column: 12, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15612, file: !2664, line: 866, column: 26)
!15612 = distinct !DILexicalBlock(scope: !15597, file: !2664, line: 866, column: 2)
!15613 = !DILocation(line: 869, column: 14, scope: !15614)
!15614 = distinct !DILexicalBlock(scope: !15611, file: !2664, line: 869, column: 7)
!15615 = !DILocation(line: 869, column: 7, scope: !15611)
!15616 = !DILocation(line: 870, column: 4, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !15614, file: !2664, line: 869, column: 23)
!15618 = !DILocation(line: 871, column: 3, scope: !15617)
!15619 = !DILocation(line: 0, scope: !14398, inlinedAt: !15620)
!15620 = distinct !DILocation(line: 866, column: 2, scope: !15612)
!15621 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15620)
!15622 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15620)
!15623 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15620)
!15624 = !DILocation(line: 0, scope: !14412, inlinedAt: !15625)
!15625 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15620)
!15626 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15625)
!15627 = !DILocation(line: 874, column: 2, scope: !15590)
!15628 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2664, file: !2664, line: 877, type: !15591, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15629)
!15629 = !{!15630, !15631, !15632, !15634}
!15630 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15628, file: !2664, line: 877, type: !2594)
!15631 = !DILocalVariable(name: "thread", scope: !15628, file: !2664, line: 879, type: !2563)
!15632 = !DILocalVariable(name: "__i", scope: !15633, file: !2664, line: 881, type: !14356)
!15633 = distinct !DILexicalBlock(scope: !15628, file: !2664, line: 881, column: 2)
!15634 = !DILocalVariable(name: "__key", scope: !15633, file: !2664, line: 881, type: !14356)
!15635 = !DILocation(line: 0, scope: !15628)
!15636 = !DILocation(line: 0, scope: !15633)
!15637 = !DILocation(line: 0, scope: !14364, inlinedAt: !15638)
!15638 = distinct !DILocation(line: 881, column: 2, scope: !15633)
!15639 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15640)
!15640 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15638)
!15641 = !DILocation(line: 0, scope: !14373, inlinedAt: !15640)
!15642 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15638)
!15643 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15638)
!15644 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15638)
!15645 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15638)
!15646 = !DILocation(line: 882, column: 12, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15648, file: !2664, line: 881, column: 26)
!15648 = distinct !DILexicalBlock(scope: !15633, file: !2664, line: 881, column: 2)
!15649 = !DILocation(line: 884, column: 14, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15647, file: !2664, line: 884, column: 7)
!15651 = !DILocation(line: 884, column: 7, scope: !15647)
!15652 = !DILocation(line: 885, column: 4, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !15650, file: !2664, line: 884, column: 23)
!15654 = !DILocation(line: 886, column: 10, scope: !15653)
!15655 = !DILocation(line: 887, column: 3, scope: !15653)
!15656 = !DILocation(line: 0, scope: !14398, inlinedAt: !15657)
!15657 = distinct !DILocation(line: 881, column: 2, scope: !15648)
!15658 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15657)
!15659 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15657)
!15660 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15657)
!15661 = !DILocation(line: 0, scope: !14412, inlinedAt: !15662)
!15662 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15657)
!15663 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15662)
!15664 = !DILocation(line: 890, column: 2, scope: !15628)
!15665 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2664, file: !2664, line: 893, type: !14322, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15666)
!15666 = !{!15667}
!15667 = !DILocalVariable(name: "thread", arg: 1, scope: !15665, file: !2664, line: 893, type: !2563)
!15668 = !DILocation(line: 0, scope: !15665)
!15669 = !DILocation(line: 0, scope: !15473, inlinedAt: !15670)
!15670 = distinct !DILocation(line: 895, column: 2, scope: !15665)
!15671 = !DILocation(line: 0, scope: !15477, inlinedAt: !15670)
!15672 = !DILocation(line: 0, scope: !14364, inlinedAt: !15673)
!15673 = distinct !DILocation(line: 788, column: 2, scope: !15477, inlinedAt: !15670)
!15674 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15675)
!15675 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15673)
!15676 = !DILocation(line: 0, scope: !14373, inlinedAt: !15675)
!15677 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15673)
!15678 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15673)
!15679 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15673)
!15680 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15673)
!15681 = !DILocation(line: 789, column: 3, scope: !15491, inlinedAt: !15670)
!15682 = !DILocation(line: 0, scope: !14398, inlinedAt: !15683)
!15683 = distinct !DILocation(line: 788, column: 2, scope: !15492, inlinedAt: !15670)
!15684 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15683)
!15685 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15683)
!15686 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15683)
!15687 = !DILocation(line: 0, scope: !14412, inlinedAt: !15688)
!15688 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15683)
!15689 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15688)
!15690 = !DILocation(line: 896, column: 8, scope: !15665)
!15691 = !DILocation(line: 897, column: 1, scope: !15665)
!15692 = distinct !DISubprogram(name: "z_set_prio", scope: !2664, file: !2664, line: 902, type: !14727, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15693)
!15693 = !{!15694, !15695, !15696, !15697, !15699}
!15694 = !DILocalVariable(name: "thread", arg: 1, scope: !15692, file: !2664, line: 902, type: !2563)
!15695 = !DILocalVariable(name: "prio", arg: 2, scope: !15692, file: !2664, line: 902, type: !103)
!15696 = !DILocalVariable(name: "need_sched", scope: !15692, file: !2664, line: 904, type: !122)
!15697 = !DILocalVariable(name: "__i", scope: !15698, file: !2664, line: 906, type: !14356)
!15698 = distinct !DILexicalBlock(scope: !15692, file: !2664, line: 906, column: 2)
!15699 = !DILocalVariable(name: "__key", scope: !15698, file: !2664, line: 906, type: !14356)
!15700 = !DILocation(line: 0, scope: !15692)
!15701 = !DILocation(line: 0, scope: !15698)
!15702 = !DILocation(line: 0, scope: !14364, inlinedAt: !15703)
!15703 = distinct !DILocation(line: 906, column: 2, scope: !15698)
!15704 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15705)
!15705 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15703)
!15706 = !DILocation(line: 0, scope: !14373, inlinedAt: !15705)
!15707 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15703)
!15708 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15703)
!15709 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15703)
!15710 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15703)
!15711 = !DILocation(line: 907, column: 16, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15713, file: !2664, line: 906, column: 26)
!15713 = distinct !DILexicalBlock(scope: !15698, file: !2664, line: 906, column: 2)
!15714 = !DILocation(line: 909, column: 7, scope: !15712)
!15715 = !DILocation(line: 0, scope: !14558, inlinedAt: !15716)
!15716 = distinct !DILocation(line: 912, column: 5, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !15718, file: !2664, line: 911, column: 63)
!15718 = distinct !DILexicalBlock(scope: !15719, file: !2664, line: 911, column: 8)
!15719 = distinct !DILexicalBlock(scope: !15720, file: !2664, line: 909, column: 19)
!15720 = distinct !DILexicalBlock(scope: !15712, file: !2664, line: 909, column: 7)
!15721 = !DILocation(line: 266, column: 28, scope: !14558, inlinedAt: !15716)
!15722 = !DILocation(line: 0, scope: !14566, inlinedAt: !15723)
!15723 = distinct !DILocation(line: 268, column: 3, scope: !14570, inlinedAt: !15716)
!15724 = !DILocation(line: 234, column: 2, scope: !14566, inlinedAt: !15723)
!15725 = !DILocation(line: 913, column: 23, scope: !15717)
!15726 = !DILocation(line: 0, scope: !14575, inlinedAt: !15727)
!15727 = distinct !DILocation(line: 914, column: 5, scope: !15717)
!15728 = !DILocation(line: 252, column: 28, scope: !14575, inlinedAt: !15727)
!15729 = !DILocation(line: 0, scope: !14582, inlinedAt: !15730)
!15730 = distinct !DILocation(line: 254, column: 3, scope: !14586, inlinedAt: !15727)
!15731 = !DILocation(line: 0, scope: !14589, inlinedAt: !15732)
!15732 = distinct !DILocation(line: 229, column: 2, scope: !14582, inlinedAt: !15730)
!15733 = !DILocation(line: 186, column: 2, scope: !14599, inlinedAt: !15732)
!15734 = !DILocation(line: 186, column: 2, scope: !14600, inlinedAt: !15732)
!15735 = !DILocation(line: 186, column: 2, scope: !14603, inlinedAt: !15732)
!15736 = !DILocation(line: 188, column: 2, scope: !14605, inlinedAt: !15732)
!15737 = !DILocation(line: 188, column: 2, scope: !14607, inlinedAt: !15732)
!15738 = !DILocation(line: 0, scope: !14605, inlinedAt: !15732)
!15739 = !DILocation(line: 189, column: 7, scope: !14610, inlinedAt: !15732)
!15740 = !DILocation(line: 189, column: 35, scope: !14610, inlinedAt: !15732)
!15741 = !DILocation(line: 189, column: 7, scope: !14611, inlinedAt: !15732)
!15742 = !DILocation(line: 190, column: 4, scope: !14615, inlinedAt: !15732)
!15743 = !DILocation(line: 192, column: 4, scope: !14615, inlinedAt: !15732)
!15744 = distinct !{!15744, !15736, !15745}
!15745 = !DILocation(line: 194, column: 2, scope: !14605, inlinedAt: !15732)
!15746 = !DILocation(line: 196, column: 2, scope: !14589, inlinedAt: !15732)
!15747 = !DILocation(line: 197, column: 1, scope: !14589, inlinedAt: !15732)
!15748 = !DILocation(line: 918, column: 4, scope: !15719)
!15749 = !DILocation(line: 919, column: 3, scope: !15719)
!15750 = !DILocation(line: 920, column: 22, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15720, file: !2664, line: 919, column: 10)
!15752 = !DILocation(line: 0, scope: !14398, inlinedAt: !15753)
!15753 = distinct !DILocation(line: 906, column: 2, scope: !15713)
!15754 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15753)
!15755 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15753)
!15756 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15753)
!15757 = !DILocation(line: 0, scope: !14412, inlinedAt: !15758)
!15758 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15753)
!15759 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15758)
!15760 = !DILocation(line: 926, column: 2, scope: !15692)
!15761 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2664, file: !2664, line: 929, type: !15762, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15764)
!15762 = !DISubroutineType(types: !15763)
!15763 = !{null, !2563, !103}
!15764 = !{!15765, !15766, !15767}
!15765 = !DILocalVariable(name: "thread", arg: 1, scope: !15761, file: !2664, line: 929, type: !2563)
!15766 = !DILocalVariable(name: "prio", arg: 2, scope: !15761, file: !2664, line: 929, type: !103)
!15767 = !DILocalVariable(name: "need_sched", scope: !15761, file: !2664, line: 931, type: !122)
!15768 = !DILocation(line: 0, scope: !15761)
!15769 = !DILocation(line: 931, column: 20, scope: !15761)
!15770 = !DILocation(line: 935, column: 17, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15761, file: !2664, line: 935, column: 6)
!15772 = !DILocation(line: 935, column: 20, scope: !15771)
!15773 = !DILocation(line: 935, column: 35, scope: !15771)
!15774 = !DILocation(line: 935, column: 48, scope: !15771)
!15775 = !DILocation(line: 935, column: 6, scope: !15761)
!15776 = !DILocation(line: 936, column: 3, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15771, file: !2664, line: 935, column: 55)
!15778 = !DILocation(line: 937, column: 2, scope: !15777)
!15779 = !DILocation(line: 938, column: 1, scope: !15761)
!15780 = distinct !DISubprogram(name: "k_sched_lock", scope: !2664, file: !2664, line: 987, type: !317, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15781)
!15781 = !{!15782, !15784}
!15782 = !DILocalVariable(name: "__i", scope: !15783, file: !2664, line: 989, type: !14356)
!15783 = distinct !DILexicalBlock(scope: !15780, file: !2664, line: 989, column: 2)
!15784 = !DILocalVariable(name: "__key", scope: !15783, file: !2664, line: 989, type: !14356)
!15785 = !DILocation(line: 0, scope: !15783)
!15786 = !DILocation(line: 0, scope: !14364, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 989, column: 2, scope: !15783)
!15788 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15789)
!15789 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15787)
!15790 = !DILocation(line: 0, scope: !14373, inlinedAt: !15789)
!15791 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15787)
!15792 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15787)
!15793 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15787)
!15794 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15787)
!15795 = !DILocation(line: 992, column: 3, scope: !15796)
!15796 = distinct !DILexicalBlock(scope: !15797, file: !2664, line: 989, column: 26)
!15797 = distinct !DILexicalBlock(scope: !15783, file: !2664, line: 989, column: 2)
!15798 = !DILocation(line: 0, scope: !14398, inlinedAt: !15799)
!15799 = distinct !DILocation(line: 989, column: 2, scope: !15797)
!15800 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15799)
!15801 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15799)
!15802 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15799)
!15803 = !DILocation(line: 0, scope: !14412, inlinedAt: !15804)
!15804 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15799)
!15805 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15804)
!15806 = !DILocation(line: 994, column: 1, scope: !15780)
!15807 = distinct !DISubprogram(name: "z_sched_lock", scope: !12709, file: !12709, line: 251, type: !317, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !2275)
!15808 = !DILocation(line: 1031, column: 3, scope: !15091, inlinedAt: !15809)
!15809 = distinct !DILocation(line: 48, column: 10, scope: !15095, inlinedAt: !15810)
!15810 = distinct !DILocation(line: 253, column: 2, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15812, file: !12709, line: 253, column: 2)
!15812 = distinct !DILexicalBlock(scope: !15807, file: !12709, line: 253, column: 2)
!15813 = !DILocation(line: 0, scope: !15091, inlinedAt: !15809)
!15814 = !DILocation(line: 48, column: 9, scope: !15095, inlinedAt: !15810)
!15815 = !DILocation(line: 253, column: 2, scope: !15812)
!15816 = !DILocation(line: 253, column: 2, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15811, file: !12709, line: 253, column: 2)
!15818 = !DILocation(line: 254, column: 2, scope: !15819)
!15819 = distinct !DILexicalBlock(scope: !15820, file: !12709, line: 254, column: 2)
!15820 = distinct !DILexicalBlock(scope: !15807, file: !12709, line: 254, column: 2)
!15821 = !DILocation(line: 254, column: 2, scope: !15820)
!15822 = !DILocation(line: 254, column: 2, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15819, file: !12709, line: 254, column: 2)
!15824 = !DILocation(line: 256, column: 2, scope: !15807)
!15825 = !DILocation(line: 258, column: 2, scope: !15826)
!15826 = distinct !DILexicalBlock(scope: !15807, file: !12709, line: 258, column: 2)
!15827 = !{i64 2154801790}
!15828 = !DILocation(line: 259, column: 1, scope: !15807)
!15829 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2664, file: !2664, line: 996, type: !317, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15830)
!15830 = !{!15831, !15833}
!15831 = !DILocalVariable(name: "__i", scope: !15832, file: !2664, line: 998, type: !14356)
!15832 = distinct !DILexicalBlock(scope: !15829, file: !2664, line: 998, column: 2)
!15833 = !DILocalVariable(name: "__key", scope: !15832, file: !2664, line: 998, type: !14356)
!15834 = !DILocation(line: 0, scope: !15832)
!15835 = !DILocation(line: 0, scope: !14364, inlinedAt: !15836)
!15836 = distinct !DILocation(line: 998, column: 2, scope: !15832)
!15837 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !15836)
!15839 = !DILocation(line: 0, scope: !14373, inlinedAt: !15838)
!15840 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !15836)
!15841 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !15836)
!15842 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !15836)
!15843 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !15836)
!15844 = !DILocation(line: 999, column: 3, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15846, file: !2664, line: 999, column: 3)
!15846 = distinct !DILexicalBlock(scope: !15847, file: !2664, line: 999, column: 3)
!15847 = distinct !DILexicalBlock(scope: !15848, file: !2664, line: 998, column: 26)
!15848 = distinct !DILexicalBlock(scope: !15832, file: !2664, line: 998, column: 2)
!15849 = !DILocation(line: 999, column: 3, scope: !15846)
!15850 = !DILocation(line: 999, column: 3, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15845, file: !2664, line: 999, column: 3)
!15852 = !DILocation(line: 1031, column: 3, scope: !15091, inlinedAt: !15853)
!15853 = distinct !DILocation(line: 48, column: 10, scope: !15095, inlinedAt: !15854)
!15854 = distinct !DILocation(line: 1000, column: 3, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15856, file: !2664, line: 1000, column: 3)
!15856 = distinct !DILexicalBlock(scope: !15847, file: !2664, line: 1000, column: 3)
!15857 = !DILocation(line: 0, scope: !15091, inlinedAt: !15853)
!15858 = !DILocation(line: 48, column: 9, scope: !15095, inlinedAt: !15854)
!15859 = !DILocation(line: 1000, column: 3, scope: !15856)
!15860 = !DILocation(line: 1000, column: 3, scope: !15861)
!15861 = distinct !DILexicalBlock(scope: !15855, file: !2664, line: 1000, column: 3)
!15862 = !DILocation(line: 1002, column: 5, scope: !15847)
!15863 = !DILocation(line: 1002, column: 20, scope: !15847)
!15864 = !DILocation(line: 1002, column: 3, scope: !15847)
!15865 = !DILocation(line: 1003, column: 3, scope: !15847)
!15866 = !DILocation(line: 0, scope: !14398, inlinedAt: !15867)
!15867 = distinct !DILocation(line: 998, column: 2, scope: !15848)
!15868 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !15867)
!15869 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !15867)
!15870 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !15867)
!15871 = !DILocation(line: 0, scope: !14412, inlinedAt: !15872)
!15872 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !15867)
!15873 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !15872)
!15874 = !DILocation(line: 1011, column: 2, scope: !15829)
!15875 = !DILocation(line: 1012, column: 1, scope: !15829)
!15876 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2664, file: !2664, line: 1014, type: !14715, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !2275)
!15877 = !DILocation(line: 1028, column: 25, scope: !15876)
!15878 = !DILocation(line: 1028, column: 2, scope: !15876)
!15879 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2664, file: !2664, line: 1155, type: !15880, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15882)
!15880 = !DISubroutineType(types: !15881)
!15881 = !{!122, !2592, !2592}
!15882 = !{!15883, !15884, !15885, !15886, !15887}
!15883 = !DILocalVariable(name: "a", arg: 1, scope: !15879, file: !2664, line: 1155, type: !2592)
!15884 = !DILocalVariable(name: "b", arg: 2, scope: !15879, file: !2664, line: 1155, type: !2592)
!15885 = !DILocalVariable(name: "thread_a", scope: !15879, file: !2664, line: 1157, type: !2563)
!15886 = !DILocalVariable(name: "thread_b", scope: !15879, file: !2664, line: 1157, type: !2563)
!15887 = !DILocalVariable(name: "cmp", scope: !15879, file: !2664, line: 1158, type: !314)
!15888 = !DILocation(line: 0, scope: !15879)
!15889 = !DILocation(line: 1160, column: 13, scope: !15879)
!15890 = !DILocation(line: 1161, column: 13, scope: !15879)
!15891 = !DILocation(line: 1163, column: 8, scope: !15879)
!15892 = !DILocation(line: 1165, column: 10, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15879, file: !2664, line: 1165, column: 6)
!15894 = !DILocation(line: 1165, column: 6, scope: !15879)
!15895 = !DILocation(line: 1167, column: 17, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15893, file: !2664, line: 1167, column: 13)
!15897 = !DILocation(line: 1167, column: 13, scope: !15893)
!15898 = !DILocation(line: 1170, column: 25, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15896, file: !2664, line: 1169, column: 9)
!15900 = !DILocation(line: 1170, column: 52, scope: !15899)
!15901 = !DILocation(line: 1170, column: 35, scope: !15899)
!15902 = !DILocation(line: 1170, column: 3, scope: !15899)
!15903 = !DILocation(line: 0, scope: !15893)
!15904 = !DILocation(line: 1173, column: 1, scope: !15879)
!15905 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2664, file: !2664, line: 1175, type: !15906, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15921)
!15906 = !DISubroutineType(types: !15907)
!15907 = !{null, !15908, !2563}
!15908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15909, size: 32)
!15909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15910, line: 37, size: 128, elements: !15911)
!15910 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15911 = !{!15912, !15920}
!15912 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15909, file: !15910, line: 38, baseType: !15913, size: 96)
!15913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !211, line: 83, size: 96, elements: !15914)
!15914 = !{!15915, !15916, !15919}
!15915 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15913, file: !211, line: 84, baseType: !2592, size: 32)
!15916 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15913, file: !211, line: 85, baseType: !15917, size: 32, offset: 32)
!15917 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !211, line: 81, baseType: !15918)
!15918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15880, size: 32)
!15919 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15913, file: !211, line: 86, baseType: !103, size: 32, offset: 64)
!15920 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15909, file: !15910, line: 39, baseType: !103, size: 32, offset: 96)
!15921 = !{!15922, !15923, !15924, !15925, !15934}
!15922 = !DILocalVariable(name: "pq", arg: 1, scope: !15905, file: !2664, line: 1175, type: !15908)
!15923 = !DILocalVariable(name: "thread", arg: 2, scope: !15905, file: !2664, line: 1175, type: !2563)
!15924 = !DILocalVariable(name: "t", scope: !15905, file: !2664, line: 1177, type: !2563)
!15925 = !DILocalVariable(name: "__f", scope: !15926, file: !2664, line: 1190, type: !15929)
!15926 = distinct !DILexicalBlock(scope: !15927, file: !2664, line: 1190, column: 3)
!15927 = distinct !DILexicalBlock(scope: !15928, file: !2664, line: 1189, column: 27)
!15928 = distinct !DILexicalBlock(scope: !15905, file: !2664, line: 1189, column: 6)
!15929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !211, line: 155, size: 96, elements: !15930)
!15930 = !{!15931, !15932, !15933}
!15931 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15929, file: !211, line: 156, baseType: !2659, size: 32)
!15932 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15929, file: !211, line: 157, baseType: !538, size: 32, offset: 32)
!15933 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15929, file: !211, line: 158, baseType: !314, size: 32, offset: 64)
!15934 = !DILocalVariable(name: "n", scope: !15935, file: !2664, line: 1190, type: !2592)
!15935 = distinct !DILexicalBlock(scope: !15936, file: !2664, line: 1190, column: 3)
!15936 = distinct !DILexicalBlock(scope: !15926, file: !2664, line: 1190, column: 3)
!15937 = !DILocation(line: 0, scope: !15905)
!15938 = !DILocation(line: 1179, column: 2, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15940, file: !2664, line: 1179, column: 2)
!15940 = distinct !DILexicalBlock(scope: !15905, file: !2664, line: 1179, column: 2)
!15941 = !DILocation(line: 1179, column: 2, scope: !15940)
!15942 = !DILocation(line: 1179, column: 2, scope: !15943)
!15943 = distinct !DILexicalBlock(scope: !15939, file: !2664, line: 1179, column: 2)
!15944 = !DILocation(line: 1181, column: 31, scope: !15905)
!15945 = !DILocation(line: 1181, column: 45, scope: !15905)
!15946 = !DILocation(line: 1181, column: 15, scope: !15905)
!15947 = !DILocation(line: 1181, column: 25, scope: !15905)
!15948 = !DILocation(line: 1189, column: 11, scope: !15928)
!15949 = !DILocation(line: 1189, column: 7, scope: !15928)
!15950 = !DILocation(line: 1189, column: 6, scope: !15905)
!15951 = !DILocation(line: 1190, column: 3, scope: !15926)
!15952 = !DILocation(line: 1190, column: 3, scope: !15935)
!15953 = !DILocation(line: 0, scope: !15935)
!15954 = !DILocation(line: 1190, column: 3, scope: !15936)
!15955 = !DILocation(line: 1193, column: 2, scope: !15927)
!15956 = !DILocation(line: 1191, column: 42, scope: !15957)
!15957 = distinct !DILexicalBlock(scope: !15936, file: !2664, line: 1190, column: 54)
!15958 = !DILocation(line: 1191, column: 12, scope: !15957)
!15959 = !DILocation(line: 1191, column: 22, scope: !15957)
!15960 = distinct !{!15960, !15951, !15961}
!15961 = !DILocation(line: 1192, column: 3, scope: !15926)
!15962 = !DILocation(line: 1195, column: 17, scope: !15905)
!15963 = !DILocation(line: 1195, column: 37, scope: !15905)
!15964 = !DILocation(line: 1195, column: 2, scope: !15905)
!15965 = !DILocation(line: 1196, column: 1, scope: !15905)
!15966 = !DISubprogram(name: "z_rb_foreach_next", scope: !211, file: !211, line: 176, type: !15967, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2275)
!15967 = !DISubroutineType(types: !15968)
!15968 = !{!2592, !15969, !15970}
!15969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15913, size: 32)
!15970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15929, size: 32)
!15971 = !DISubprogram(name: "rb_insert", scope: !211, file: !211, line: 105, type: !15972, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2275)
!15972 = !DISubroutineType(types: !15973)
!15973 = !{null, !15969, !2592}
!15974 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2664, file: !2664, line: 1198, type: !15906, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !15975)
!15975 = !{!15976, !15977}
!15976 = !DILocalVariable(name: "pq", arg: 1, scope: !15974, file: !2664, line: 1198, type: !15908)
!15977 = !DILocalVariable(name: "thread", arg: 2, scope: !15974, file: !2664, line: 1198, type: !2563)
!15978 = !DILocation(line: 0, scope: !15974)
!15979 = !DILocation(line: 1200, column: 2, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15981, file: !2664, line: 1200, column: 2)
!15981 = distinct !DILexicalBlock(scope: !15974, file: !2664, line: 1200, column: 2)
!15982 = !DILocation(line: 1200, column: 2, scope: !15981)
!15983 = !DILocation(line: 1200, column: 2, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15980, file: !2664, line: 1200, column: 2)
!15985 = !DILocation(line: 1202, column: 17, scope: !15974)
!15986 = !DILocation(line: 1202, column: 37, scope: !15974)
!15987 = !DILocation(line: 1202, column: 2, scope: !15974)
!15988 = !DILocation(line: 1204, column: 16, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15974, file: !2664, line: 1204, column: 6)
!15990 = !DILocation(line: 1204, column: 7, scope: !15989)
!15991 = !DILocation(line: 1204, column: 6, scope: !15974)
!15992 = !DILocation(line: 1205, column: 7, scope: !15993)
!15993 = distinct !DILexicalBlock(scope: !15989, file: !2664, line: 1204, column: 22)
!15994 = !DILocation(line: 1205, column: 22, scope: !15993)
!15995 = !DILocation(line: 1206, column: 2, scope: !15993)
!15996 = !DILocation(line: 1207, column: 1, scope: !15974)
!15997 = !DISubprogram(name: "rb_remove", scope: !211, file: !211, line: 110, type: !15972, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2275)
!15998 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2664, file: !2664, line: 1209, type: !15999, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16001)
!15999 = !DISubroutineType(types: !16000)
!16000 = !{!2563, !15908}
!16001 = !{!16002, !16003, !16004}
!16002 = !DILocalVariable(name: "pq", arg: 1, scope: !15998, file: !2664, line: 1209, type: !15908)
!16003 = !DILocalVariable(name: "thread", scope: !15998, file: !2664, line: 1211, type: !2563)
!16004 = !DILocalVariable(name: "n", scope: !15998, file: !2664, line: 1212, type: !2592)
!16005 = !DILocation(line: 0, scope: !15998)
!16006 = !DILocation(line: 1212, column: 37, scope: !15998)
!16007 = !DILocation(line: 1212, column: 21, scope: !15998)
!16008 = !DILocation(line: 1217, column: 2, scope: !15998)
!16009 = distinct !DISubprogram(name: "rb_get_min", scope: !211, file: !211, line: 115, type: !16010, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16012)
!16010 = !DISubroutineType(types: !16011)
!16011 = !{!2592, !15969}
!16012 = !{!16013}
!16013 = !DILocalVariable(name: "tree", arg: 1, scope: !16009, file: !211, line: 115, type: !15969)
!16014 = !DILocation(line: 0, scope: !16009)
!16015 = !DILocation(line: 117, column: 9, scope: !16009)
!16016 = !DILocation(line: 117, column: 2, scope: !16009)
!16017 = !DISubprogram(name: "z_rb_get_minmax", scope: !211, file: !211, line: 100, type: !16018, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2275)
!16018 = !DISubroutineType(types: !16019)
!16019 = !{!2592, !15969, !166}
!16020 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2664, file: !2664, line: 1246, type: !16021, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16029)
!16021 = !DISubroutineType(types: !16022)
!16022 = !{!2563, !16023}
!16023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16024, size: 32)
!16024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15910, line: 53, size: 2080, elements: !16025)
!16025 = !{!16026, !16028}
!16026 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16024, file: !15910, line: 54, baseType: !16027, size: 2048)
!16027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2599, size: 2048, elements: !1116)
!16028 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16024, file: !15910, line: 55, baseType: !32, size: 32, offset: 2048)
!16029 = !{!16030, !16031, !16032, !16033}
!16030 = !DILocalVariable(name: "pq", arg: 1, scope: !16020, file: !2664, line: 1246, type: !16023)
!16031 = !DILocalVariable(name: "thread", scope: !16020, file: !2664, line: 1252, type: !2563)
!16032 = !DILocalVariable(name: "l", scope: !16020, file: !2664, line: 1253, type: !14592)
!16033 = !DILocalVariable(name: "n", scope: !16020, file: !2664, line: 1254, type: !2660)
!16034 = !DILocation(line: 0, scope: !16020)
!16035 = !DILocation(line: 1248, column: 11, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !16020, file: !2664, line: 1248, column: 6)
!16037 = !DILocation(line: 1248, column: 7, scope: !16036)
!16038 = !DILocation(line: 1248, column: 6, scope: !16020)
!16039 = !DILocation(line: 1253, column: 31, scope: !16020)
!16040 = !DILocation(line: 1253, column: 20, scope: !16020)
!16041 = !DILocation(line: 1254, column: 19, scope: !16020)
!16042 = !DILocation(line: 1260, column: 1, scope: !16020)
!16043 = distinct !DISubprogram(name: "z_unpend_all", scope: !2664, file: !2664, line: 1262, type: !16044, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16046)
!16044 = !DISubroutineType(types: !16045)
!16045 = !{!103, !2594}
!16046 = !{!16047, !16048, !16049}
!16047 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16043, file: !2664, line: 1262, type: !2594)
!16048 = !DILocalVariable(name: "need_sched", scope: !16043, file: !2664, line: 1264, type: !103)
!16049 = !DILocalVariable(name: "thread", scope: !16043, file: !2664, line: 1265, type: !2563)
!16050 = !DILocation(line: 0, scope: !16043)
!16051 = !DILocation(line: 1267, column: 19, scope: !16043)
!16052 = !DILocation(line: 1267, column: 41, scope: !16043)
!16053 = !DILocation(line: 1267, column: 2, scope: !16043)
!16054 = !DILocation(line: 1268, column: 3, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16043, file: !2664, line: 1267, column: 50)
!16056 = !DILocation(line: 1269, column: 3, scope: !16055)
!16057 = distinct !{!16057, !16053, !16058}
!16058 = !DILocation(line: 1271, column: 2, scope: !16043)
!16059 = !DILocation(line: 1273, column: 2, scope: !16043)
!16060 = distinct !DISubprogram(name: "z_waitq_head", scope: !13042, file: !13042, line: 52, type: !15591, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16061)
!16061 = !{!16062}
!16062 = !DILocalVariable(name: "w", arg: 1, scope: !16060, file: !13042, line: 52, type: !2594)
!16063 = !DILocation(line: 0, scope: !16060)
!16064 = !DILocation(line: 54, column: 52, scope: !16060)
!16065 = !DILocation(line: 54, column: 28, scope: !16060)
!16066 = !DILocation(line: 54, column: 9, scope: !16060)
!16067 = !DILocation(line: 54, column: 2, scope: !16060)
!16068 = distinct !DISubprogram(name: "init_ready_q", scope: !2664, file: !2664, line: 1276, type: !16069, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16076)
!16069 = !DISubroutineType(types: !16070)
!16070 = !{null, !16071}
!16071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16072, size: 32)
!16072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !131, line: 83, size: 96, elements: !16073)
!16073 = !{!16074, !16075}
!16074 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16072, file: !131, line: 86, baseType: !2563, size: 32)
!16075 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16072, file: !131, line: 90, baseType: !2599, size: 64, offset: 32)
!16076 = !{!16077}
!16077 = !DILocalVariable(name: "rq", arg: 1, scope: !16068, file: !2664, line: 1276, type: !16071)
!16078 = !DILocation(line: 0, scope: !16068)
!16079 = !DILocation(line: 1289, column: 22, scope: !16068)
!16080 = !DILocation(line: 1289, column: 2, scope: !16068)
!16081 = !DILocation(line: 1291, column: 1, scope: !16068)
!16082 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !16083, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16085)
!16083 = !DISubroutineType(types: !16084)
!16084 = !{null, !14592}
!16085 = !{!16086}
!16086 = !DILocalVariable(name: "list", arg: 1, scope: !16082, file: !136, line: 197, type: !14592)
!16087 = !DILocation(line: 0, scope: !16082)
!16088 = !DILocation(line: 199, column: 8, scope: !16082)
!16089 = !DILocation(line: 199, column: 13, scope: !16082)
!16090 = !DILocation(line: 200, column: 8, scope: !16082)
!16091 = !DILocation(line: 200, column: 13, scope: !16082)
!16092 = !DILocation(line: 201, column: 1, scope: !16082)
!16093 = distinct !DISubprogram(name: "z_sched_init", scope: !2664, file: !2664, line: 1293, type: !317, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !2275)
!16094 = !DILocation(line: 1302, column: 2, scope: !16093)
!16095 = !DILocation(line: 1306, column: 2, scope: !16093)
!16096 = !DILocation(line: 1309, column: 1, scope: !16093)
!16097 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2664, file: !2664, line: 1311, type: !16098, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16101)
!16098 = !DISubroutineType(types: !16099)
!16099 = !{!103, !16100}
!16100 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !2563)
!16101 = !{!16102}
!16102 = !DILocalVariable(name: "thread", arg: 1, scope: !16097, file: !2664, line: 1311, type: !16100)
!16103 = !DILocation(line: 0, scope: !16097)
!16104 = !DILocation(line: 1313, column: 22, scope: !16097)
!16105 = !DILocation(line: 1313, column: 9, scope: !16097)
!16106 = !DILocation(line: 1313, column: 2, scope: !16097)
!16107 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2664, file: !2664, line: 1325, type: !16108, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16110)
!16108 = !DISubroutineType(types: !16109)
!16109 = !{null, !16100, !103}
!16110 = !{!16111, !16112, !16113}
!16111 = !DILocalVariable(name: "thread", arg: 1, scope: !16107, file: !2664, line: 1325, type: !16100)
!16112 = !DILocalVariable(name: "prio", arg: 2, scope: !16107, file: !2664, line: 1325, type: !103)
!16113 = !DILocalVariable(name: "th", scope: !16107, file: !2664, line: 1334, type: !2563)
!16114 = !DILocation(line: 0, scope: !16107)
!16115 = !DILocation(line: 1331, column: 2, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16117, file: !2664, line: 1331, column: 2)
!16117 = distinct !DILexicalBlock(scope: !16118, file: !2664, line: 1331, column: 2)
!16118 = distinct !DILexicalBlock(scope: !16107, file: !2664, line: 1331, column: 2)
!16119 = !DILocation(line: 1331, column: 2, scope: !16120)
!16120 = distinct !DILexicalBlock(scope: !16116, file: !2664, line: 1331, column: 2)
!16121 = !DILocation(line: 1031, column: 3, scope: !15091, inlinedAt: !16122)
!16122 = distinct !DILocation(line: 48, column: 10, scope: !15095, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 1332, column: 2, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16125, file: !2664, line: 1332, column: 2)
!16125 = distinct !DILexicalBlock(scope: !16107, file: !2664, line: 1332, column: 2)
!16126 = !DILocation(line: 0, scope: !15091, inlinedAt: !16122)
!16127 = !DILocation(line: 48, column: 9, scope: !15095, inlinedAt: !16123)
!16128 = !DILocation(line: 1332, column: 2, scope: !16125)
!16129 = !DILocation(line: 1332, column: 2, scope: !16130)
!16130 = distinct !DILexicalBlock(scope: !16124, file: !2664, line: 1332, column: 2)
!16131 = !DILocation(line: 1336, column: 2, scope: !16107)
!16132 = !DILocation(line: 1337, column: 1, scope: !16107)
!16133 = distinct !DISubprogram(name: "k_can_yield", scope: !2664, file: !2664, line: 1384, type: !8580, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !2275)
!16134 = !DILocation(line: 1386, column: 11, scope: !16133)
!16135 = !DILocation(line: 1386, column: 29, scope: !16133)
!16136 = !DILocation(line: 1386, column: 32, scope: !16133)
!16137 = !DILocation(line: 1386, column: 46, scope: !16133)
!16138 = !DILocation(line: 1387, column: 28, scope: !16133)
!16139 = !DILocation(line: 1387, column: 4, scope: !16133)
!16140 = !DILocation(line: 1386, column: 2, scope: !16133)
!16141 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !127, file: !127, line: 989, type: !8580, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !2275)
!16142 = !DILocation(line: 993, column: 10, scope: !16141)
!16143 = !DILocation(line: 993, column: 2, scope: !16141)
!16144 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2664, file: !2664, line: 1390, type: !317, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16145)
!16145 = !{!16146}
!16146 = !DILocalVariable(name: "key", scope: !16144, file: !2664, line: 1396, type: !14356)
!16147 = !DILocation(line: 1031, column: 3, scope: !15091, inlinedAt: !16148)
!16148 = distinct !DILocation(line: 48, column: 10, scope: !15095, inlinedAt: !16149)
!16149 = distinct !DILocation(line: 1392, column: 2, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16151, file: !2664, line: 1392, column: 2)
!16151 = distinct !DILexicalBlock(scope: !16144, file: !2664, line: 1392, column: 2)
!16152 = !DILocation(line: 0, scope: !15091, inlinedAt: !16148)
!16153 = !DILocation(line: 48, column: 9, scope: !15095, inlinedAt: !16149)
!16154 = !DILocation(line: 1392, column: 2, scope: !16151)
!16155 = !DILocation(line: 1392, column: 2, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !16150, file: !2664, line: 1392, column: 2)
!16157 = !DILocation(line: 0, scope: !14364, inlinedAt: !16158)
!16158 = distinct !DILocation(line: 1396, column: 25, scope: !16144)
!16159 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !16160)
!16160 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !16158)
!16161 = !DILocation(line: 0, scope: !14373, inlinedAt: !16160)
!16162 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !16158)
!16163 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !16158)
!16164 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !16158)
!16165 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !16158)
!16166 = !DILocation(line: 0, scope: !16144)
!16167 = !DILocation(line: 1400, column: 18, scope: !16168)
!16168 = distinct !DILexicalBlock(scope: !16169, file: !2664, line: 1399, column: 36)
!16169 = distinct !DILexicalBlock(scope: !16144, file: !2664, line: 1398, column: 6)
!16170 = !DILocation(line: 0, scope: !14558, inlinedAt: !16171)
!16171 = distinct !DILocation(line: 1400, column: 3, scope: !16168)
!16172 = !DILocation(line: 266, column: 15, scope: !14558, inlinedAt: !16171)
!16173 = !DILocation(line: 266, column: 28, scope: !14558, inlinedAt: !16171)
!16174 = !DILocation(line: 0, scope: !14566, inlinedAt: !16175)
!16175 = distinct !DILocation(line: 268, column: 3, scope: !14570, inlinedAt: !16171)
!16176 = !DILocation(line: 234, column: 2, scope: !14566, inlinedAt: !16175)
!16177 = !DILocation(line: 1402, column: 15, scope: !16144)
!16178 = !DILocation(line: 0, scope: !14575, inlinedAt: !16179)
!16179 = distinct !DILocation(line: 1402, column: 2, scope: !16144)
!16180 = !DILocation(line: 252, column: 15, scope: !14575, inlinedAt: !16179)
!16181 = !DILocation(line: 252, column: 28, scope: !14575, inlinedAt: !16179)
!16182 = !DILocation(line: 0, scope: !14582, inlinedAt: !16183)
!16183 = distinct !DILocation(line: 254, column: 3, scope: !14586, inlinedAt: !16179)
!16184 = !DILocation(line: 0, scope: !14589, inlinedAt: !16185)
!16185 = distinct !DILocation(line: 229, column: 2, scope: !14582, inlinedAt: !16183)
!16186 = !DILocation(line: 186, column: 2, scope: !14599, inlinedAt: !16185)
!16187 = !DILocation(line: 186, column: 2, scope: !14600, inlinedAt: !16185)
!16188 = !DILocation(line: 186, column: 2, scope: !14603, inlinedAt: !16185)
!16189 = !DILocation(line: 188, column: 2, scope: !14605, inlinedAt: !16185)
!16190 = !DILocation(line: 188, column: 2, scope: !14607, inlinedAt: !16185)
!16191 = !DILocation(line: 0, scope: !14605, inlinedAt: !16185)
!16192 = !DILocation(line: 189, column: 7, scope: !14610, inlinedAt: !16185)
!16193 = !DILocation(line: 189, column: 35, scope: !14610, inlinedAt: !16185)
!16194 = !DILocation(line: 189, column: 7, scope: !14611, inlinedAt: !16185)
!16195 = !DILocation(line: 191, column: 21, scope: !14615, inlinedAt: !16185)
!16196 = !DILocation(line: 190, column: 4, scope: !14615, inlinedAt: !16185)
!16197 = !DILocation(line: 192, column: 4, scope: !14615, inlinedAt: !16185)
!16198 = distinct !{!16198, !16189, !16199}
!16199 = !DILocation(line: 194, column: 2, scope: !14605, inlinedAt: !16185)
!16200 = !DILocation(line: 196, column: 37, scope: !14589, inlinedAt: !16185)
!16201 = !DILocation(line: 196, column: 2, scope: !14589, inlinedAt: !16185)
!16202 = !DILocation(line: 197, column: 1, scope: !14589, inlinedAt: !16185)
!16203 = !DILocation(line: 1403, column: 2, scope: !16144)
!16204 = !DILocation(line: 0, scope: !15042, inlinedAt: !16205)
!16205 = distinct !DILocation(line: 1404, column: 2, scope: !16144)
!16206 = !DILocation(line: 0, scope: !15051, inlinedAt: !16207)
!16207 = distinct !DILocation(line: 195, column: 2, scope: !15042, inlinedAt: !16205)
!16208 = !DILocation(line: 225, column: 2, scope: !15058, inlinedAt: !16207)
!16209 = !DILocation(line: 225, column: 2, scope: !15059, inlinedAt: !16207)
!16210 = !DILocation(line: 225, column: 2, scope: !15062, inlinedAt: !16207)
!16211 = !DILocation(line: 196, column: 9, scope: !15042, inlinedAt: !16205)
!16212 = !DILocation(line: 1405, column: 1, scope: !16144)
!16213 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2664, file: !2664, line: 1459, type: !16214, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16216)
!16214 = !DISubroutineType(types: !16215)
!16215 = !{!314, !15252}
!16216 = !{!16217, !16218, !16219}
!16217 = !DILocalVariable(name: "timeout", arg: 1, scope: !16213, file: !2664, line: 1459, type: !15252)
!16218 = !DILocalVariable(name: "ticks", scope: !16213, file: !2664, line: 1461, type: !104)
!16219 = !DILocalVariable(name: "ret", scope: !16213, file: !2664, line: 1480, type: !314)
!16220 = !DILocation(line: 0, scope: !16213)
!16221 = !DILocation(line: 1031, column: 3, scope: !15091, inlinedAt: !16222)
!16222 = distinct !DILocation(line: 48, column: 10, scope: !15095, inlinedAt: !16223)
!16223 = distinct !DILocation(line: 1463, column: 2, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !16225, file: !2664, line: 1463, column: 2)
!16225 = distinct !DILexicalBlock(scope: !16213, file: !2664, line: 1463, column: 2)
!16226 = !DILocation(line: 0, scope: !15091, inlinedAt: !16222)
!16227 = !DILocation(line: 48, column: 9, scope: !15095, inlinedAt: !16223)
!16228 = !DILocation(line: 1463, column: 2, scope: !16225)
!16229 = !DILocation(line: 1463, column: 2, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16224, file: !2664, line: 1463, column: 2)
!16231 = !DILocation(line: 1468, column: 6, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16213, file: !2664, line: 1468, column: 6)
!16233 = !DILocation(line: 1468, column: 6, scope: !16213)
!16234 = !DILocation(line: 1469, column: 20, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16232, file: !2664, line: 1468, column: 40)
!16236 = !DILocation(line: 1469, column: 3, scope: !16235)
!16237 = !DILocation(line: 1473, column: 3, scope: !16235)
!16238 = !DILocation(line: 1478, column: 10, scope: !16213)
!16239 = !DILocation(line: 1480, column: 16, scope: !16213)
!16240 = !DILocation(line: 1485, column: 1, scope: !16213)
!16241 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5050, file: !5050, line: 310, type: !16242, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16244)
!16242 = !DISubroutineType(types: !16243)
!16243 = !{null, !16100}
!16244 = !{!16245}
!16245 = !DILocalVariable(name: "thread", arg: 1, scope: !16241, file: !5050, line: 310, type: !16100)
!16246 = !DILocation(line: 0, scope: !16241)
!16247 = !DILocation(line: 319, column: 2, scope: !16248)
!16248 = distinct !DILexicalBlock(scope: !16241, file: !5050, line: 319, column: 2)
!16249 = !{i64 2151088282}
!16250 = !DILocation(line: 320, column: 2, scope: !16241)
!16251 = !DILocation(line: 321, column: 1, scope: !16241)
!16252 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2664, file: !2664, line: 1415, type: !16253, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16255)
!16253 = !DISubroutineType(types: !16254)
!16254 = !{!314, !104}
!16255 = !{!16256, !16257, !16258, !16259}
!16256 = !DILocalVariable(name: "ticks", arg: 1, scope: !16252, file: !2664, line: 1415, type: !104)
!16257 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16252, file: !2664, line: 1418, type: !111)
!16258 = !DILocalVariable(name: "timeout", scope: !16252, file: !2664, line: 1430, type: !15252)
!16259 = !DILocalVariable(name: "key", scope: !16252, file: !2664, line: 1437, type: !14356)
!16260 = !DILocation(line: 0, scope: !16252)
!16261 = !DILocation(line: 1031, column: 3, scope: !15091, inlinedAt: !16262)
!16262 = distinct !DILocation(line: 48, column: 10, scope: !15095, inlinedAt: !16263)
!16263 = distinct !DILocation(line: 1420, column: 2, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16265, file: !2664, line: 1420, column: 2)
!16265 = distinct !DILexicalBlock(scope: !16252, file: !2664, line: 1420, column: 2)
!16266 = !DILocation(line: 0, scope: !15091, inlinedAt: !16262)
!16267 = !DILocation(line: 48, column: 9, scope: !15095, inlinedAt: !16263)
!16268 = !DILocation(line: 1420, column: 2, scope: !16265)
!16269 = !DILocation(line: 1420, column: 2, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16264, file: !2664, line: 1420, column: 2)
!16271 = !DILocation(line: 1425, column: 12, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16252, file: !2664, line: 1425, column: 6)
!16273 = !DILocation(line: 1425, column: 6, scope: !16252)
!16274 = !DILocation(line: 1426, column: 3, scope: !16275)
!16275 = distinct !DILexicalBlock(scope: !16272, file: !2664, line: 1425, column: 18)
!16276 = !DILocation(line: 1427, column: 3, scope: !16275)
!16277 = !DILocation(line: 1431, column: 24, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16252, file: !2664, line: 1431, column: 6)
!16279 = !DILocation(line: 1431, column: 6, scope: !16252)
!16280 = !DILocation(line: 1432, column: 35, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16278, file: !2664, line: 1431, column: 30)
!16282 = !DILocation(line: 1432, column: 27, scope: !16281)
!16283 = !DILocation(line: 1433, column: 2, scope: !16281)
!16284 = !DILocation(line: 1434, column: 27, scope: !16285)
!16285 = distinct !DILexicalBlock(scope: !16278, file: !2664, line: 1433, column: 9)
!16286 = !DILocation(line: 0, scope: !16278)
!16287 = !DILocation(line: 0, scope: !14364, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 1437, column: 25, scope: !16252)
!16289 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !16290)
!16290 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !16288)
!16291 = !DILocation(line: 0, scope: !14373, inlinedAt: !16290)
!16292 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !16288)
!16293 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !16288)
!16294 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !16288)
!16295 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !16288)
!16296 = !DILocation(line: 1440, column: 20, scope: !16252)
!16297 = !DILocation(line: 1440, column: 18, scope: !16252)
!16298 = !DILocation(line: 1442, column: 2, scope: !16252)
!16299 = !DILocation(line: 1443, column: 23, scope: !16252)
!16300 = !DILocation(line: 1443, column: 2, scope: !16252)
!16301 = !DILocation(line: 1444, column: 29, scope: !16252)
!16302 = !DILocation(line: 1444, column: 2, scope: !16252)
!16303 = !DILocation(line: 0, scope: !15042, inlinedAt: !16304)
!16304 = distinct !DILocation(line: 1446, column: 8, scope: !16252)
!16305 = !DILocation(line: 0, scope: !15051, inlinedAt: !16306)
!16306 = distinct !DILocation(line: 195, column: 2, scope: !15042, inlinedAt: !16304)
!16307 = !DILocation(line: 225, column: 2, scope: !15058, inlinedAt: !16306)
!16308 = !DILocation(line: 225, column: 2, scope: !15059, inlinedAt: !16306)
!16309 = !DILocation(line: 225, column: 2, scope: !15062, inlinedAt: !16306)
!16310 = !DILocation(line: 196, column: 9, scope: !15042, inlinedAt: !16304)
!16311 = !DILocation(line: 1448, column: 2, scope: !16312)
!16312 = distinct !DILexicalBlock(scope: !16313, file: !2664, line: 1448, column: 2)
!16313 = distinct !DILexicalBlock(scope: !16252, file: !2664, line: 1448, column: 2)
!16314 = !DILocation(line: 1448, column: 2, scope: !16313)
!16315 = !DILocation(line: 1448, column: 2, scope: !16316)
!16316 = distinct !DILexicalBlock(scope: !16312, file: !2664, line: 1448, column: 2)
!16317 = !DILocation(line: 1450, column: 10, scope: !16252)
!16318 = !DILocation(line: 1450, column: 45, scope: !16252)
!16319 = !DILocation(line: 1450, column: 43, scope: !16252)
!16320 = !DILocation(line: 1451, column: 6, scope: !16252)
!16321 = !DILocation(line: 1457, column: 1, scope: !16252)
!16322 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3696, file: !3696, line: 1103, type: !3697, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16323)
!16323 = !{!16324}
!16324 = !DILocalVariable(name: "t", arg: 1, scope: !16322, file: !3696, line: 1103, type: !112)
!16325 = !DILocation(line: 0, scope: !16322)
!16326 = !DILocation(line: 0, scope: !14426, inlinedAt: !16327)
!16327 = distinct !DILocation(line: 1106, column: 9, scope: !16322)
!16328 = !DILocation(line: 139, column: 13, scope: !16329, inlinedAt: !16327)
!16329 = distinct !DILexicalBlock(scope: !16330, file: !3696, line: 138, column: 10)
!16330 = distinct !DILexicalBlock(scope: !16331, file: !3696, line: 136, column: 7)
!16331 = distinct !DILexicalBlock(scope: !14447, file: !3696, line: 134, column: 17)
!16332 = !DILocation(line: 1106, column: 2, scope: !16322)
!16333 = distinct !DISubprogram(name: "k_yield", scope: !5050, file: !5050, line: 140, type: !317, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !2275)
!16334 = !DILocation(line: 148, column: 2, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16333, file: !5050, line: 148, column: 2)
!16336 = !{i64 2151087602}
!16337 = !DILocation(line: 149, column: 2, scope: !16333)
!16338 = !DILocation(line: 150, column: 1, scope: !16333)
!16339 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2664, file: !2664, line: 1495, type: !16340, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16342)
!16340 = !DISubroutineType(types: !16341)
!16341 = !{!314, !103}
!16342 = !{!16343, !16344}
!16343 = !DILocalVariable(name: "us", arg: 1, scope: !16339, file: !2664, line: 1495, type: !103)
!16344 = !DILocalVariable(name: "ticks", scope: !16339, file: !2664, line: 1497, type: !314)
!16345 = !DILocation(line: 0, scope: !16339)
!16346 = !DILocation(line: 1501, column: 31, scope: !16339)
!16347 = !DILocation(line: 1501, column: 10, scope: !16339)
!16348 = !DILocation(line: 1502, column: 23, scope: !16339)
!16349 = !DILocation(line: 1502, column: 10, scope: !16339)
!16350 = !DILocation(line: 1506, column: 31, scope: !16339)
!16351 = !DILocation(line: 1506, column: 9, scope: !16339)
!16352 = !DILocation(line: 1506, column: 2, scope: !16339)
!16353 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3696, file: !3696, line: 571, type: !3697, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16354)
!16354 = !{!16355}
!16355 = !DILocalVariable(name: "t", arg: 1, scope: !16353, file: !3696, line: 571, type: !112)
!16356 = !DILocation(line: 0, scope: !16353)
!16357 = !DILocation(line: 0, scope: !14426, inlinedAt: !16358)
!16358 = distinct !DILocation(line: 574, column: 9, scope: !16353)
!16359 = !DILocation(line: 135, column: 5, scope: !16331, inlinedAt: !16358)
!16360 = !DILocation(line: 139, column: 13, scope: !16329, inlinedAt: !16358)
!16361 = !DILocation(line: 574, column: 2, scope: !16353)
!16362 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3696, file: !3696, line: 1187, type: !3697, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16363)
!16363 = !{!16364}
!16364 = !DILocalVariable(name: "t", arg: 1, scope: !16362, file: !3696, line: 1187, type: !112)
!16365 = !DILocation(line: 0, scope: !16362)
!16366 = !DILocation(line: 0, scope: !14426, inlinedAt: !16367)
!16367 = distinct !DILocation(line: 1190, column: 9, scope: !16362)
!16368 = !DILocation(line: 145, column: 13, scope: !16369, inlinedAt: !16367)
!16369 = distinct !DILexicalBlock(scope: !14444, file: !3696, line: 144, column: 10)
!16370 = !DILocation(line: 1190, column: 2, scope: !16362)
!16371 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2664, file: !2664, line: 1517, type: !16242, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16372)
!16372 = !{!16373}
!16373 = !DILocalVariable(name: "thread", arg: 1, scope: !16371, file: !2664, line: 1517, type: !16100)
!16374 = !DILocation(line: 0, scope: !16371)
!16375 = !DILocation(line: 1521, column: 6, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16371, file: !2664, line: 1521, column: 6)
!16377 = !DILocation(line: 1521, column: 6, scope: !16371)
!16378 = !DILocation(line: 1525, column: 6, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16371, file: !2664, line: 1525, column: 6)
!16380 = !DILocation(line: 1525, column: 37, scope: !16379)
!16381 = !DILocation(line: 1525, column: 6, scope: !16371)
!16382 = !DILocation(line: 1527, column: 20, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16384, file: !2664, line: 1527, column: 7)
!16384 = distinct !DILexicalBlock(scope: !16379, file: !2664, line: 1525, column: 42)
!16385 = !DILocation(line: 1527, column: 33, scope: !16383)
!16386 = !DILocation(line: 1527, column: 7, scope: !16384)
!16387 = !DILocation(line: 1532, column: 2, scope: !16371)
!16388 = !DILocation(line: 1533, column: 2, scope: !16371)
!16389 = !DILocation(line: 1031, column: 3, scope: !15091, inlinedAt: !16390)
!16390 = distinct !DILocation(line: 48, column: 10, scope: !15095, inlinedAt: !16391)
!16391 = distinct !DILocation(line: 1537, column: 7, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16371, file: !2664, line: 1537, column: 6)
!16393 = !DILocation(line: 0, scope: !15091, inlinedAt: !16390)
!16394 = !DILocation(line: 48, column: 9, scope: !15095, inlinedAt: !16391)
!16395 = !DILocation(line: 1537, column: 6, scope: !16371)
!16396 = !DILocation(line: 1538, column: 3, scope: !16397)
!16397 = distinct !DILexicalBlock(scope: !16392, file: !2664, line: 1537, column: 25)
!16398 = !DILocation(line: 1539, column: 2, scope: !16397)
!16399 = !DILocation(line: 1540, column: 1, scope: !16371)
!16400 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12709, file: !12709, line: 101, type: !14507, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16401)
!16401 = !{!16402}
!16402 = !DILocalVariable(name: "thread", arg: 1, scope: !16400, file: !12709, line: 101, type: !2563)
!16403 = !DILocation(line: 0, scope: !16400)
!16404 = !DILocation(line: 103, column: 23, scope: !16400)
!16405 = !DILocation(line: 103, column: 36, scope: !16400)
!16406 = !DILocation(line: 103, column: 55, scope: !16400)
!16407 = !DILocation(line: 103, column: 2, scope: !16400)
!16408 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2664, file: !2664, line: 1567, type: !16409, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16411)
!16409 = !DISubroutineType(types: !16410)
!16410 = !{!16100}
!16411 = !{!16412}
!16412 = !DILocalVariable(name: "ret", scope: !16408, file: !2664, line: 1577, type: !16100)
!16413 = !DILocation(line: 1577, column: 30, scope: !16408)
!16414 = !DILocation(line: 0, scope: !16408)
!16415 = !DILocation(line: 1582, column: 2, scope: !16408)
!16416 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2664, file: !2664, line: 1593, type: !16417, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !2275)
!16417 = !DISubroutineType(types: !16418)
!16418 = !{!103}
!16419 = !DILocation(line: 1031, column: 3, scope: !15091, inlinedAt: !16420)
!16420 = distinct !DILocation(line: 48, column: 10, scope: !15095, inlinedAt: !16421)
!16421 = distinct !DILocation(line: 1595, column: 10, scope: !16416)
!16422 = !DILocation(line: 0, scope: !15091, inlinedAt: !16420)
!16423 = !DILocation(line: 48, column: 9, scope: !15095, inlinedAt: !16421)
!16424 = !DILocation(line: 1595, column: 27, scope: !16416)
!16425 = !DILocation(line: 1595, column: 41, scope: !16416)
!16426 = !DILocation(line: 1595, column: 30, scope: !16416)
!16427 = !DILocation(line: 1595, column: 2, scope: !16416)
!16428 = distinct !DISubprogram(name: "z_thread_abort", scope: !2664, file: !2664, line: 1725, type: !14322, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16429)
!16429 = !{!16430, !16431}
!16430 = !DILocalVariable(name: "thread", arg: 1, scope: !16428, file: !2664, line: 1725, type: !2563)
!16431 = !DILocalVariable(name: "key", scope: !16428, file: !2664, line: 1727, type: !14356)
!16432 = !DILocation(line: 0, scope: !16428)
!16433 = !DILocation(line: 0, scope: !14364, inlinedAt: !16434)
!16434 = distinct !DILocation(line: 1727, column: 25, scope: !16428)
!16435 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !16436)
!16436 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !16434)
!16437 = !DILocation(line: 0, scope: !14373, inlinedAt: !16436)
!16438 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !16434)
!16439 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !16434)
!16440 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !16434)
!16441 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !16434)
!16442 = !DILocation(line: 1729, column: 20, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16428, file: !2664, line: 1729, column: 6)
!16444 = !DILocation(line: 1729, column: 33, scope: !16443)
!16445 = !DILocation(line: 1729, column: 48, scope: !16443)
!16446 = !DILocation(line: 1729, column: 6, scope: !16428)
!16447 = !DILocation(line: 0, scope: !14398, inlinedAt: !16448)
!16448 = distinct !DILocation(line: 1730, column: 3, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16443, file: !2664, line: 1729, column: 54)
!16450 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !16448)
!16451 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !16448)
!16452 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !16448)
!16453 = !DILocation(line: 0, scope: !14412, inlinedAt: !16454)
!16454 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !16448)
!16455 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !16454)
!16456 = !DILocation(line: 1731, column: 3, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16458, file: !2664, line: 1731, column: 3)
!16458 = distinct !DILexicalBlock(scope: !16459, file: !2664, line: 1731, column: 3)
!16459 = distinct !DILexicalBlock(scope: !16449, file: !2664, line: 1731, column: 3)
!16460 = !DILocation(line: 1736, column: 20, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !16428, file: !2664, line: 1736, column: 6)
!16462 = !DILocation(line: 1736, column: 33, scope: !16461)
!16463 = !DILocation(line: 1736, column: 49, scope: !16461)
!16464 = !DILocation(line: 1736, column: 6, scope: !16428)
!16465 = !DILocation(line: 0, scope: !14398, inlinedAt: !16466)
!16466 = distinct !DILocation(line: 1737, column: 3, scope: !16467)
!16467 = distinct !DILexicalBlock(scope: !16461, file: !2664, line: 1736, column: 56)
!16468 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !16466)
!16469 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !16466)
!16470 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !16466)
!16471 = !DILocation(line: 0, scope: !14412, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !16466)
!16473 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !16472)
!16474 = !DILocation(line: 1738, column: 3, scope: !16467)
!16475 = !DILocation(line: 1775, column: 2, scope: !16428)
!16476 = !DILocation(line: 1776, column: 16, scope: !16477)
!16477 = distinct !DILexicalBlock(scope: !16428, file: !2664, line: 1776, column: 6)
!16478 = !DILocation(line: 1776, column: 13, scope: !16477)
!16479 = !DILocation(line: 1776, column: 25, scope: !16477)
!16480 = !DILocation(line: 1031, column: 3, scope: !15091, inlinedAt: !16481)
!16481 = distinct !DILocation(line: 48, column: 10, scope: !15095, inlinedAt: !16482)
!16482 = distinct !DILocation(line: 1776, column: 29, scope: !16477)
!16483 = !DILocation(line: 0, scope: !15091, inlinedAt: !16481)
!16484 = !DILocation(line: 48, column: 9, scope: !15095, inlinedAt: !16482)
!16485 = !DILocation(line: 1776, column: 6, scope: !16428)
!16486 = !DILocation(line: 0, scope: !15042, inlinedAt: !16487)
!16487 = distinct !DILocation(line: 1777, column: 3, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16477, file: !2664, line: 1776, column: 47)
!16489 = !DILocation(line: 0, scope: !15051, inlinedAt: !16490)
!16490 = distinct !DILocation(line: 195, column: 2, scope: !15042, inlinedAt: !16487)
!16491 = !DILocation(line: 225, column: 2, scope: !15058, inlinedAt: !16490)
!16492 = !DILocation(line: 225, column: 2, scope: !15059, inlinedAt: !16490)
!16493 = !DILocation(line: 225, column: 2, scope: !15062, inlinedAt: !16490)
!16494 = !DILocation(line: 196, column: 9, scope: !15042, inlinedAt: !16487)
!16495 = !DILocation(line: 1778, column: 3, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16497, file: !2664, line: 1778, column: 3)
!16497 = distinct !DILexicalBlock(scope: !16498, file: !2664, line: 1778, column: 3)
!16498 = distinct !DILexicalBlock(scope: !16488, file: !2664, line: 1778, column: 3)
!16499 = !DILocation(line: 0, scope: !14398, inlinedAt: !16500)
!16500 = distinct !DILocation(line: 1780, column: 2, scope: !16428)
!16501 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !16500)
!16502 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !16500)
!16503 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !16500)
!16504 = !DILocation(line: 0, scope: !14412, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !16500)
!16506 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !16505)
!16507 = !DILocation(line: 1781, column: 1, scope: !16428)
!16508 = distinct !DISubprogram(name: "end_thread", scope: !2664, file: !2664, line: 1690, type: !14322, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16509)
!16509 = !{!16510}
!16510 = !DILocalVariable(name: "thread", arg: 1, scope: !16508, file: !2664, line: 1690, type: !2563)
!16511 = !DILocation(line: 0, scope: !16508)
!16512 = !DILocation(line: 1695, column: 20, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16508, file: !2664, line: 1695, column: 6)
!16514 = !DILocation(line: 1695, column: 33, scope: !16513)
!16515 = !DILocation(line: 1695, column: 49, scope: !16513)
!16516 = !DILocation(line: 1695, column: 6, scope: !16508)
!16517 = !DILocation(line: 1697, column: 29, scope: !16518)
!16518 = distinct !DILexicalBlock(scope: !16513, file: !2664, line: 1695, column: 56)
!16519 = !DILocation(line: 1698, column: 7, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16518, file: !2664, line: 1698, column: 7)
!16521 = !DILocation(line: 1698, column: 7, scope: !16518)
!16522 = !DILocation(line: 0, scope: !14558, inlinedAt: !16523)
!16523 = distinct !DILocation(line: 1699, column: 4, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16520, file: !2664, line: 1698, column: 35)
!16525 = !DILocation(line: 266, column: 28, scope: !14558, inlinedAt: !16523)
!16526 = !DILocation(line: 0, scope: !14566, inlinedAt: !16527)
!16527 = distinct !DILocation(line: 268, column: 3, scope: !14570, inlinedAt: !16523)
!16528 = !DILocation(line: 234, column: 2, scope: !14566, inlinedAt: !16527)
!16529 = !DILocation(line: 1700, column: 3, scope: !16524)
!16530 = !DILocation(line: 1701, column: 20, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16518, file: !2664, line: 1701, column: 7)
!16532 = !DILocation(line: 1701, column: 30, scope: !16531)
!16533 = !DILocation(line: 1701, column: 7, scope: !16518)
!16534 = !DILocation(line: 1702, column: 4, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16531, file: !2664, line: 1701, column: 39)
!16536 = !DILocation(line: 1703, column: 3, scope: !16535)
!16537 = !DILocation(line: 1704, column: 9, scope: !16518)
!16538 = !DILocation(line: 1705, column: 23, scope: !16518)
!16539 = !DILocation(line: 1705, column: 3, scope: !16518)
!16540 = !DILocation(line: 1706, column: 3, scope: !16518)
!16541 = !DILocation(line: 1722, column: 2, scope: !16518)
!16542 = !DILocation(line: 1723, column: 1, scope: !16508)
!16543 = distinct !DISubprogram(name: "unpend_all", scope: !2664, file: !2664, line: 1674, type: !16544, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16546)
!16544 = !DISubroutineType(types: !16545)
!16545 = !{null, !2594}
!16546 = !{!16547, !16548}
!16547 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16543, file: !2664, line: 1674, type: !2594)
!16548 = !DILocalVariable(name: "thread", scope: !16543, file: !2664, line: 1676, type: !2563)
!16549 = !DILocation(line: 0, scope: !16543)
!16550 = !DILocation(line: 1678, column: 19, scope: !16543)
!16551 = !DILocation(line: 1678, column: 41, scope: !16543)
!16552 = !DILocation(line: 1678, column: 2, scope: !16543)
!16553 = !DILocation(line: 1679, column: 3, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16543, file: !2664, line: 1678, column: 50)
!16555 = !DILocation(line: 1680, column: 9, scope: !16554)
!16556 = !DILocalVariable(name: "thread", arg: 1, scope: !16557, file: !12729, line: 65, type: !2563)
!16557 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12729, file: !12729, line: 65, type: !16558, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16560)
!16558 = !DISubroutineType(types: !16559)
!16559 = !{null, !2563, !32}
!16560 = !{!16556, !16561}
!16561 = !DILocalVariable(name: "value", arg: 2, scope: !16557, file: !12729, line: 65, type: !32)
!16562 = !DILocation(line: 0, scope: !16557, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 1681, column: 3, scope: !16554)
!16564 = !DILocation(line: 67, column: 15, scope: !16557, inlinedAt: !16563)
!16565 = !DILocation(line: 67, column: 33, scope: !16557, inlinedAt: !16563)
!16566 = !DILocation(line: 1682, column: 3, scope: !16554)
!16567 = distinct !{!16567, !16552, !16568}
!16568 = !DILocation(line: 1683, column: 2, scope: !16543)
!16569 = !DILocation(line: 1684, column: 1, scope: !16543)
!16570 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2664, file: !2664, line: 1794, type: !16571, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16573)
!16571 = !DISubroutineType(types: !16572)
!16572 = !{!103, !2563, !15252}
!16573 = !{!16574, !16575, !16576, !16577}
!16574 = !DILocalVariable(name: "thread", arg: 1, scope: !16570, file: !2664, line: 1794, type: !2563)
!16575 = !DILocalVariable(name: "timeout", arg: 2, scope: !16570, file: !2664, line: 1794, type: !15252)
!16576 = !DILocalVariable(name: "key", scope: !16570, file: !2664, line: 1796, type: !14356)
!16577 = !DILocalVariable(name: "ret", scope: !16570, file: !2664, line: 1797, type: !103)
!16578 = !DILocation(line: 0, scope: !16570)
!16579 = !DILocation(line: 0, scope: !14364, inlinedAt: !16580)
!16580 = distinct !DILocation(line: 1796, column: 25, scope: !16570)
!16581 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !16582)
!16582 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !16580)
!16583 = !DILocation(line: 0, scope: !14373, inlinedAt: !16582)
!16584 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !16580)
!16585 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !16580)
!16586 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !16580)
!16587 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !16580)
!16588 = !DILocation(line: 1801, column: 20, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16570, file: !2664, line: 1801, column: 6)
!16590 = !DILocation(line: 1801, column: 33, scope: !16589)
!16591 = !DILocation(line: 1801, column: 49, scope: !16589)
!16592 = !DILocation(line: 1801, column: 6, scope: !16570)
!16593 = !DILocation(line: 1803, column: 13, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16589, file: !2664, line: 1803, column: 13)
!16595 = !DILocation(line: 1803, column: 13, scope: !16589)
!16596 = !DILocation(line: 1805, column: 24, scope: !16597)
!16597 = distinct !DILexicalBlock(scope: !16594, file: !2664, line: 1805, column: 13)
!16598 = !DILocation(line: 1805, column: 21, scope: !16597)
!16599 = !DILocation(line: 1805, column: 34, scope: !16597)
!16600 = !DILocation(line: 1806, column: 20, scope: !16597)
!16601 = !DILocation(line: 1806, column: 44, scope: !16597)
!16602 = !DILocation(line: 1806, column: 30, scope: !16597)
!16603 = !DILocation(line: 1805, column: 13, scope: !16594)
!16604 = !DILocation(line: 1031, column: 3, scope: !15091, inlinedAt: !16605)
!16605 = distinct !DILocation(line: 48, column: 10, scope: !15095, inlinedAt: !16606)
!16606 = distinct !DILocation(line: 1809, column: 3, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16608, file: !2664, line: 1809, column: 3)
!16608 = distinct !DILexicalBlock(scope: !16609, file: !2664, line: 1809, column: 3)
!16609 = distinct !DILexicalBlock(scope: !16597, file: !2664, line: 1808, column: 9)
!16610 = !DILocation(line: 0, scope: !15091, inlinedAt: !16605)
!16611 = !DILocation(line: 48, column: 9, scope: !15095, inlinedAt: !16606)
!16612 = !DILocation(line: 1809, column: 3, scope: !16608)
!16613 = !DILocation(line: 1809, column: 3, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16607, file: !2664, line: 1809, column: 3)
!16615 = !DILocation(line: 1810, column: 23, scope: !16609)
!16616 = !DILocation(line: 1810, column: 42, scope: !16609)
!16617 = !DILocation(line: 1810, column: 3, scope: !16609)
!16618 = !DILocation(line: 1811, column: 22, scope: !16609)
!16619 = !DILocation(line: 1811, column: 3, scope: !16609)
!16620 = !DILocation(line: 0, scope: !15042, inlinedAt: !16621)
!16621 = distinct !DILocation(line: 1814, column: 9, scope: !16609)
!16622 = !DILocation(line: 0, scope: !15051, inlinedAt: !16623)
!16623 = distinct !DILocation(line: 195, column: 2, scope: !15042, inlinedAt: !16621)
!16624 = !DILocation(line: 225, column: 2, scope: !15058, inlinedAt: !16623)
!16625 = !DILocation(line: 225, column: 2, scope: !15059, inlinedAt: !16623)
!16626 = !DILocation(line: 225, column: 2, scope: !15062, inlinedAt: !16623)
!16627 = !DILocation(line: 196, column: 9, scope: !15042, inlinedAt: !16621)
!16628 = !DILocation(line: 1817, column: 3, scope: !16609)
!16629 = !DILocation(line: 0, scope: !16589)
!16630 = !DILocation(line: 0, scope: !14398, inlinedAt: !16631)
!16631 = distinct !DILocation(line: 1822, column: 2, scope: !16570)
!16632 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !16631)
!16633 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !16631)
!16634 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !16631)
!16635 = !DILocation(line: 0, scope: !14412, inlinedAt: !16636)
!16636 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !16631)
!16637 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !16636)
!16638 = !DILocation(line: 1823, column: 2, scope: !16570)
!16639 = !DILocation(line: 1824, column: 1, scope: !16570)
!16640 = distinct !DISubprogram(name: "z_sched_wake", scope: !2664, file: !2664, line: 1882, type: !16641, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16643)
!16641 = !DISubroutineType(types: !16642)
!16642 = !{!122, !2594, !103, !102}
!16643 = !{!16644, !16645, !16646, !16647, !16648, !16649, !16651}
!16644 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16640, file: !2664, line: 1882, type: !2594)
!16645 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16640, file: !2664, line: 1882, type: !103)
!16646 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16640, file: !2664, line: 1882, type: !102)
!16647 = !DILocalVariable(name: "thread", scope: !16640, file: !2664, line: 1884, type: !2563)
!16648 = !DILocalVariable(name: "ret", scope: !16640, file: !2664, line: 1885, type: !122)
!16649 = !DILocalVariable(name: "__i", scope: !16650, file: !2664, line: 1887, type: !14356)
!16650 = distinct !DILexicalBlock(scope: !16640, file: !2664, line: 1887, column: 2)
!16651 = !DILocalVariable(name: "__key", scope: !16650, file: !2664, line: 1887, type: !14356)
!16652 = !DILocation(line: 0, scope: !16640)
!16653 = !DILocation(line: 0, scope: !16650)
!16654 = !DILocation(line: 0, scope: !14364, inlinedAt: !16655)
!16655 = distinct !DILocation(line: 1887, column: 2, scope: !16650)
!16656 = !DILocation(line: 55, column: 2, scope: !14373, inlinedAt: !16657)
!16657 = distinct !DILocation(line: 145, column: 10, scope: !14364, inlinedAt: !16655)
!16658 = !DILocation(line: 0, scope: !14373, inlinedAt: !16657)
!16659 = !DILocation(line: 148, column: 2, scope: !14381, inlinedAt: !16655)
!16660 = !DILocation(line: 148, column: 2, scope: !14382, inlinedAt: !16655)
!16661 = !DILocation(line: 148, column: 2, scope: !14385, inlinedAt: !16655)
!16662 = !DILocation(line: 160, column: 2, scope: !14364, inlinedAt: !16655)
!16663 = !DILocation(line: 1888, column: 12, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16665, file: !2664, line: 1887, column: 26)
!16665 = distinct !DILexicalBlock(scope: !16650, file: !2664, line: 1887, column: 2)
!16666 = !DILocation(line: 1890, column: 14, scope: !16667)
!16667 = distinct !DILexicalBlock(scope: !16664, file: !2664, line: 1890, column: 7)
!16668 = !DILocation(line: 1890, column: 7, scope: !16664)
!16669 = !DILocalVariable(name: "thread", arg: 1, scope: !16670, file: !13550, line: 134, type: !2563)
!16670 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13550, file: !13550, line: 134, type: !16671, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16673)
!16671 = !DISubroutineType(types: !16672)
!16672 = !{null, !2563, !32, !102}
!16673 = !{!16669, !16674, !16675}
!16674 = !DILocalVariable(name: "value", arg: 2, scope: !16670, file: !13550, line: 135, type: !32)
!16675 = !DILocalVariable(name: "data", arg: 3, scope: !16670, file: !13550, line: 136, type: !102)
!16676 = !DILocation(line: 0, scope: !16670, inlinedAt: !16677)
!16677 = distinct !DILocation(line: 1891, column: 4, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16667, file: !2664, line: 1890, column: 23)
!16679 = !DILocation(line: 0, scope: !16557, inlinedAt: !16680)
!16680 = distinct !DILocation(line: 138, column: 2, scope: !16670, inlinedAt: !16677)
!16681 = !DILocation(line: 67, column: 15, scope: !16557, inlinedAt: !16680)
!16682 = !DILocation(line: 67, column: 33, scope: !16557, inlinedAt: !16680)
!16683 = !DILocation(line: 139, column: 15, scope: !16670, inlinedAt: !16677)
!16684 = !DILocation(line: 139, column: 25, scope: !16670, inlinedAt: !16677)
!16685 = !DILocation(line: 1894, column: 4, scope: !16678)
!16686 = !DILocation(line: 1895, column: 10, scope: !16678)
!16687 = !DILocation(line: 1896, column: 4, scope: !16678)
!16688 = !DILocation(line: 1898, column: 3, scope: !16678)
!16689 = !DILocation(line: 0, scope: !14398, inlinedAt: !16690)
!16690 = distinct !DILocation(line: 1887, column: 2, scope: !16665)
!16691 = !DILocation(line: 194, column: 2, scope: !14406, inlinedAt: !16690)
!16692 = !DILocation(line: 194, column: 2, scope: !14407, inlinedAt: !16690)
!16693 = !DILocation(line: 194, column: 2, scope: !14410, inlinedAt: !16690)
!16694 = !DILocation(line: 0, scope: !14412, inlinedAt: !16695)
!16695 = distinct !DILocation(line: 215, column: 2, scope: !14398, inlinedAt: !16690)
!16696 = !DILocation(line: 95, column: 2, scope: !14412, inlinedAt: !16695)
!16697 = !DILocation(line: 1901, column: 2, scope: !16640)
!16698 = distinct !DISubprogram(name: "z_sched_wait", scope: !2664, file: !2664, line: 1904, type: !16699, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !16702)
!16699 = !DISubroutineType(types: !16700)
!16700 = !{!103, !14367, !14356, !2594, !15252, !16701}
!16701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16702 = !{!16703, !16704, !16705, !16706, !16707, !16708}
!16703 = !DILocalVariable(name: "lock", arg: 1, scope: !16698, file: !2664, line: 1904, type: !14367)
!16704 = !DILocalVariable(name: "key", arg: 2, scope: !16698, file: !2664, line: 1904, type: !14356)
!16705 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16698, file: !2664, line: 1905, type: !2594)
!16706 = !DILocalVariable(name: "timeout", arg: 4, scope: !16698, file: !2664, line: 1905, type: !15252)
!16707 = !DILocalVariable(name: "data", arg: 5, scope: !16698, file: !2664, line: 1905, type: !16701)
!16708 = !DILocalVariable(name: "ret", scope: !16698, file: !2664, line: 1907, type: !103)
!16709 = !DILocation(line: 0, scope: !16698)
!16710 = !DILocation(line: 1907, column: 12, scope: !16698)
!16711 = !DILocation(line: 1909, column: 11, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16698, file: !2664, line: 1909, column: 6)
!16713 = !DILocation(line: 1909, column: 6, scope: !16698)
!16714 = !DILocation(line: 1910, column: 11, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16712, file: !2664, line: 1909, column: 20)
!16716 = !DILocation(line: 1910, column: 26, scope: !16715)
!16717 = !DILocation(line: 1910, column: 9, scope: !16715)
!16718 = !DILocation(line: 1911, column: 2, scope: !16715)
!16719 = !DILocation(line: 1912, column: 2, scope: !16698)
!16720 = distinct !DISubprogram(name: "z_data_copy", scope: !16721, file: !16721, line: 22, type: !317, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3520, retainedNodes: !2275)
!16721 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16722 = !DILocation(line: 24, column: 2, scope: !16720)
!16723 = !DILocation(line: 27, column: 2, scope: !16720)
!16724 = !DILocation(line: 71, column: 1, scope: !16720)
!16725 = distinct !DISubprogram(name: "z_add_timeout", scope: !2701, file: !2701, line: 88, type: !16726, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16732)
!16726 = !DISubroutineType(types: !16727)
!16727 = !{null, !2674, !2693, !16728}
!16728 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16729)
!16729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16730)
!16730 = !{!16731}
!16731 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16729, file: !105, line: 66, baseType: !104, size: 64)
!16732 = !{!16733, !16734, !16735, !16736, !16742, !16743, !16746, !16749}
!16733 = !DILocalVariable(name: "to", arg: 1, scope: !16725, file: !2701, line: 88, type: !2674)
!16734 = !DILocalVariable(name: "fn", arg: 2, scope: !16725, file: !2701, line: 88, type: !2693)
!16735 = !DILocalVariable(name: "timeout", arg: 3, scope: !16725, file: !2701, line: 89, type: !16728)
!16736 = !DILocalVariable(name: "__i", scope: !16737, file: !2701, line: 102, type: !16738)
!16737 = distinct !DILexicalBlock(scope: !16725, file: !2701, line: 102, column: 2)
!16738 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !16739)
!16739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !16740)
!16740 = !{!16741}
!16741 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16739, file: !152, line: 33, baseType: !103, size: 32)
!16742 = !DILocalVariable(name: "__key", scope: !16737, file: !2701, line: 102, type: !16738)
!16743 = !DILocalVariable(name: "t", scope: !16744, file: !2701, line: 103, type: !2674)
!16744 = distinct !DILexicalBlock(scope: !16745, file: !2701, line: 102, column: 24)
!16745 = distinct !DILexicalBlock(scope: !16737, file: !2701, line: 102, column: 2)
!16746 = !DILocalVariable(name: "ticks", scope: !16747, file: !2701, line: 107, type: !104)
!16747 = distinct !DILexicalBlock(scope: !16748, file: !2701, line: 106, column: 39)
!16748 = distinct !DILexicalBlock(scope: !16744, file: !2701, line: 105, column: 7)
!16749 = !DILocalVariable(name: "next_time", scope: !16750, file: !2701, line: 137, type: !314)
!16750 = distinct !DILexicalBlock(scope: !16751, file: !2701, line: 127, column: 22)
!16751 = distinct !DILexicalBlock(scope: !16744, file: !2701, line: 127, column: 7)
!16752 = !DILocation(line: 0, scope: !16725)
!16753 = !DILocation(line: 91, column: 6, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !16725, file: !2701, line: 91, column: 6)
!16755 = !DILocation(line: 91, column: 6, scope: !16725)
!16756 = !DILocation(line: 99, column: 2, scope: !16757)
!16757 = distinct !DILexicalBlock(scope: !16758, file: !2701, line: 99, column: 2)
!16758 = distinct !DILexicalBlock(scope: !16725, file: !2701, line: 99, column: 2)
!16759 = !DILocation(line: 99, column: 2, scope: !16758)
!16760 = !DILocation(line: 99, column: 2, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16757, file: !2701, line: 99, column: 2)
!16762 = !DILocation(line: 100, column: 6, scope: !16725)
!16763 = !DILocation(line: 100, column: 9, scope: !16725)
!16764 = !DILocation(line: 0, scope: !16737)
!16765 = !DILocalVariable(name: "l", arg: 1, scope: !16766, file: !152, line: 136, type: !16769)
!16766 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !16767, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16770)
!16767 = !DISubroutineType(types: !16768)
!16768 = !{!16738, !16769}
!16769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 32)
!16770 = !{!16765, !16771}
!16771 = !DILocalVariable(name: "k", scope: !16766, file: !152, line: 139, type: !16738)
!16772 = !DILocation(line: 0, scope: !16766, inlinedAt: !16773)
!16773 = distinct !DILocation(line: 102, column: 2, scope: !16737)
!16774 = !DILocation(line: 55, column: 2, scope: !16775, inlinedAt: !16779)
!16775 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7706, file: !7706, line: 42, type: !9871, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16776)
!16776 = !{!16777, !16778}
!16777 = !DILocalVariable(name: "key", scope: !16775, file: !7706, line: 44, type: !32)
!16778 = !DILocalVariable(name: "tmp", scope: !16775, file: !7706, line: 53, type: !32)
!16779 = distinct !DILocation(line: 145, column: 10, scope: !16766, inlinedAt: !16773)
!16780 = !{i64 2850205}
!16781 = !DILocation(line: 0, scope: !16775, inlinedAt: !16779)
!16782 = !DILocation(line: 148, column: 2, scope: !16783, inlinedAt: !16773)
!16783 = distinct !DILexicalBlock(scope: !16784, file: !152, line: 148, column: 2)
!16784 = distinct !DILexicalBlock(scope: !16766, file: !152, line: 148, column: 2)
!16785 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !16773)
!16786 = !DILocation(line: 148, column: 2, scope: !16787, inlinedAt: !16773)
!16787 = distinct !DILexicalBlock(scope: !16783, file: !152, line: 148, column: 2)
!16788 = !DILocation(line: 160, column: 2, scope: !16766, inlinedAt: !16773)
!16789 = !DILocation(line: 106, column: 33, scope: !16748)
!16790 = !DILocation(line: 105, column: 7, scope: !16744)
!16791 = !DILocation(line: 107, column: 50, scope: !16747)
!16792 = !DILocation(line: 107, column: 48, scope: !16747)
!16793 = !DILocation(line: 0, scope: !16747)
!16794 = !DILocation(line: 109, column: 17, scope: !16747)
!16795 = !DILocation(line: 110, column: 3, scope: !16747)
!16796 = !DILocation(line: 111, column: 31, scope: !16797)
!16797 = distinct !DILexicalBlock(scope: !16748, file: !2701, line: 110, column: 10)
!16798 = !DILocation(line: 111, column: 37, scope: !16797)
!16799 = !DILocation(line: 111, column: 35, scope: !16797)
!16800 = !DILocation(line: 0, scope: !16748)
!16801 = !DILocation(line: 109, column: 8, scope: !16747)
!16802 = !DILocation(line: 109, column: 15, scope: !16747)
!16803 = !DILocation(line: 114, column: 12, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !16744, file: !2701, line: 114, column: 3)
!16805 = !DILocation(line: 0, scope: !16744)
!16806 = !DILocation(line: 114, column: 3, scope: !16804)
!16807 = !DILocation(line: 115, column: 24, scope: !16808)
!16808 = distinct !DILexicalBlock(scope: !16809, file: !2701, line: 115, column: 8)
!16809 = distinct !DILexicalBlock(scope: !16810, file: !2701, line: 114, column: 45)
!16810 = distinct !DILexicalBlock(scope: !16804, file: !2701, line: 114, column: 3)
!16811 = !DILocation(line: 115, column: 11, scope: !16808)
!16812 = !DILocation(line: 115, column: 18, scope: !16808)
!16813 = !DILocation(line: 115, column: 8, scope: !16809)
!16814 = !DILocation(line: 116, column: 15, scope: !16815)
!16815 = distinct !DILexicalBlock(scope: !16808, file: !2701, line: 115, column: 32)
!16816 = !DILocation(line: 117, column: 26, scope: !16815)
!16817 = !DILocation(line: 117, column: 5, scope: !16815)
!16818 = !DILocation(line: 123, column: 7, scope: !16744)
!16819 = !DILocation(line: 120, column: 15, scope: !16809)
!16820 = !DILocation(line: 114, column: 36, scope: !16810)
!16821 = distinct !{!16821, !16806, !16822}
!16822 = !DILocation(line: 121, column: 3, scope: !16804)
!16823 = !DILocation(line: 124, column: 4, scope: !16824)
!16824 = distinct !DILexicalBlock(scope: !16825, file: !2701, line: 123, column: 18)
!16825 = distinct !DILexicalBlock(scope: !16744, file: !2701, line: 123, column: 7)
!16826 = !DILocation(line: 125, column: 3, scope: !16824)
!16827 = !DILocation(line: 127, column: 13, scope: !16751)
!16828 = !DILocation(line: 127, column: 10, scope: !16751)
!16829 = !DILocation(line: 127, column: 7, scope: !16744)
!16830 = !DILocation(line: 137, column: 24, scope: !16750)
!16831 = !DILocation(line: 0, scope: !16750)
!16832 = !DILocation(line: 139, column: 18, scope: !16833)
!16833 = distinct !DILexicalBlock(scope: !16750, file: !2701, line: 139, column: 8)
!16834 = !DILocation(line: 139, column: 23, scope: !16833)
!16835 = !DILocation(line: 141, column: 5, scope: !16836)
!16836 = distinct !DILexicalBlock(scope: !16833, file: !2701, line: 140, column: 48)
!16837 = !DILocation(line: 142, column: 4, scope: !16836)
!16838 = !DILocalVariable(name: "key", arg: 2, scope: !16839, file: !152, line: 190, type: !16738)
!16839 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !16840, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16842)
!16840 = !DISubroutineType(types: !16841)
!16841 = !{null, !16769, !16738}
!16842 = !{!16843, !16838}
!16843 = !DILocalVariable(name: "l", arg: 1, scope: !16839, file: !152, line: 189, type: !16769)
!16844 = !DILocation(line: 0, scope: !16839, inlinedAt: !16845)
!16845 = distinct !DILocation(line: 102, column: 2, scope: !16745)
!16846 = !DILocation(line: 194, column: 2, scope: !16847, inlinedAt: !16845)
!16847 = distinct !DILexicalBlock(scope: !16848, file: !152, line: 194, column: 2)
!16848 = distinct !DILexicalBlock(scope: !16839, file: !152, line: 194, column: 2)
!16849 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !16845)
!16850 = !DILocation(line: 194, column: 2, scope: !16851, inlinedAt: !16845)
!16851 = distinct !DILexicalBlock(scope: !16847, file: !152, line: 194, column: 2)
!16852 = !DILocalVariable(name: "key", arg: 1, scope: !16853, file: !7706, line: 84, type: !32)
!16853 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7706, file: !7706, line: 84, type: !7536, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16854)
!16854 = !{!16852}
!16855 = !DILocation(line: 0, scope: !16853, inlinedAt: !16856)
!16856 = distinct !DILocation(line: 215, column: 2, scope: !16839, inlinedAt: !16845)
!16857 = !DILocation(line: 95, column: 2, scope: !16853, inlinedAt: !16856)
!16858 = !{i64 2851022}
!16859 = !DILocation(line: 148, column: 1, scope: !16725)
!16860 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !136, file: !136, line: 225, type: !16861, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16865)
!16861 = !DISubroutineType(types: !16862)
!16862 = !{!122, !16863}
!16863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16864, size: 32)
!16864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2678)
!16865 = !{!16866}
!16866 = !DILocalVariable(name: "node", arg: 1, scope: !16860, file: !136, line: 225, type: !16863)
!16867 = !DILocation(line: 0, scope: !16860)
!16868 = !DILocation(line: 227, column: 15, scope: !16860)
!16869 = !DILocation(line: 227, column: 20, scope: !16860)
!16870 = !DILocation(line: 227, column: 2, scope: !16860)
!16871 = distinct !DISubprogram(name: "elapsed", scope: !2701, file: !2701, line: 62, type: !16872, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !2275)
!16872 = !DISubroutineType(types: !16873)
!16873 = !{!314}
!16874 = !DILocation(line: 64, column: 9, scope: !16871)
!16875 = !DILocation(line: 64, column: 28, scope: !16871)
!16876 = !DILocation(line: 64, column: 35, scope: !16871)
!16877 = !DILocation(line: 64, column: 2, scope: !16871)
!16878 = distinct !DISubprogram(name: "first", scope: !2701, file: !2701, line: 39, type: !16879, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16881)
!16879 = !DISubroutineType(types: !16880)
!16880 = !{!2674}
!16881 = !{!16882}
!16882 = !DILocalVariable(name: "t", scope: !16878, file: !2701, line: 41, type: !16883)
!16883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!16884 = !DILocation(line: 41, column: 19, scope: !16878)
!16885 = !DILocation(line: 0, scope: !16878)
!16886 = !DILocation(line: 43, column: 9, scope: !16878)
!16887 = !DILocation(line: 43, column: 2, scope: !16878)
!16888 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !136, file: !136, line: 443, type: !16889, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16891)
!16889 = !DISubroutineType(types: !16890)
!16890 = !{null, !16883, !16883}
!16891 = !{!16892, !16893, !16894}
!16892 = !DILocalVariable(name: "successor", arg: 1, scope: !16888, file: !136, line: 443, type: !16883)
!16893 = !DILocalVariable(name: "node", arg: 2, scope: !16888, file: !136, line: 443, type: !16883)
!16894 = !DILocalVariable(name: "prev", scope: !16888, file: !136, line: 445, type: !16895)
!16895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16883)
!16896 = !DILocation(line: 0, scope: !16888)
!16897 = !DILocation(line: 445, column: 39, scope: !16888)
!16898 = !DILocation(line: 447, column: 8, scope: !16888)
!16899 = !DILocation(line: 447, column: 13, scope: !16888)
!16900 = !DILocation(line: 448, column: 8, scope: !16888)
!16901 = !DILocation(line: 448, column: 13, scope: !16888)
!16902 = !DILocation(line: 449, column: 8, scope: !16888)
!16903 = !DILocation(line: 449, column: 13, scope: !16888)
!16904 = !DILocation(line: 450, column: 18, scope: !16888)
!16905 = !DILocation(line: 451, column: 1, scope: !16888)
!16906 = distinct !DISubprogram(name: "next", scope: !2701, file: !2701, line: 46, type: !16907, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16909)
!16907 = !DISubroutineType(types: !16908)
!16908 = !{!2674, !2674}
!16909 = !{!16910, !16911}
!16910 = !DILocalVariable(name: "t", arg: 1, scope: !16906, file: !2701, line: 46, type: !2674)
!16911 = !DILocalVariable(name: "n", scope: !16906, file: !2701, line: 48, type: !16883)
!16912 = !DILocation(line: 0, scope: !16906)
!16913 = !DILocation(line: 48, column: 58, scope: !16906)
!16914 = !DILocation(line: 48, column: 19, scope: !16906)
!16915 = !DILocation(line: 50, column: 9, scope: !16906)
!16916 = !DILocation(line: 50, column: 2, scope: !16906)
!16917 = distinct !DISubprogram(name: "sys_dlist_append", scope: !136, file: !136, line: 404, type: !16918, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16921)
!16918 = !DISubroutineType(types: !16919)
!16919 = !{null, !16920, !16883}
!16920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 32)
!16921 = !{!16922, !16923, !16924}
!16922 = !DILocalVariable(name: "list", arg: 1, scope: !16917, file: !136, line: 404, type: !16920)
!16923 = !DILocalVariable(name: "node", arg: 2, scope: !16917, file: !136, line: 404, type: !16883)
!16924 = !DILocalVariable(name: "tail", scope: !16917, file: !136, line: 406, type: !16895)
!16925 = !DILocation(line: 0, scope: !16917)
!16926 = !DILocation(line: 406, column: 34, scope: !16917)
!16927 = !DILocation(line: 408, column: 8, scope: !16917)
!16928 = !DILocation(line: 408, column: 13, scope: !16917)
!16929 = !DILocation(line: 409, column: 8, scope: !16917)
!16930 = !DILocation(line: 409, column: 13, scope: !16917)
!16931 = !DILocation(line: 411, column: 8, scope: !16917)
!16932 = !DILocation(line: 411, column: 13, scope: !16917)
!16933 = !DILocation(line: 412, column: 13, scope: !16917)
!16934 = !DILocation(line: 413, column: 1, scope: !16917)
!16935 = distinct !DISubprogram(name: "next_timeout", scope: !2701, file: !2701, line: 67, type: !16872, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16936)
!16936 = !{!16937, !16938, !16939}
!16937 = !DILocalVariable(name: "to", scope: !16935, file: !2701, line: 69, type: !2674)
!16938 = !DILocalVariable(name: "ticks_elapsed", scope: !16935, file: !2701, line: 70, type: !314)
!16939 = !DILocalVariable(name: "ret", scope: !16935, file: !2701, line: 71, type: !314)
!16940 = !DILocation(line: 69, column: 24, scope: !16935)
!16941 = !DILocation(line: 0, scope: !16935)
!16942 = !DILocation(line: 70, column: 26, scope: !16935)
!16943 = !DILocation(line: 73, column: 10, scope: !16944)
!16944 = distinct !DILexicalBlock(scope: !16935, file: !2701, line: 73, column: 6)
!16945 = !DILocation(line: 73, column: 19, scope: !16944)
!16946 = !DILocation(line: 74, column: 21, scope: !16944)
!16947 = !DILocation(line: 74, column: 30, scope: !16944)
!16948 = !DILocation(line: 74, column: 28, scope: !16944)
!16949 = !DILocation(line: 74, column: 45, scope: !16944)
!16950 = !DILocation(line: 73, column: 6, scope: !16935)
!16951 = !DILocation(line: 77, column: 9, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16944, file: !2701, line: 76, column: 9)
!16953 = !DILocation(line: 0, scope: !16944)
!16954 = !DILocation(line: 81, column: 20, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16935, file: !2701, line: 81, column: 6)
!16956 = !DILocation(line: 81, column: 6, scope: !16955)
!16957 = !DILocation(line: 81, column: 32, scope: !16955)
!16958 = !DILocation(line: 85, column: 2, scope: !16935)
!16959 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !136, file: !136, line: 341, type: !16960, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16962)
!16960 = !DISubroutineType(types: !16961)
!16961 = !{!16883, !16920, !16883}
!16962 = !{!16963, !16964}
!16963 = !DILocalVariable(name: "list", arg: 1, scope: !16959, file: !136, line: 341, type: !16920)
!16964 = !DILocalVariable(name: "node", arg: 2, scope: !16959, file: !136, line: 342, type: !16883)
!16965 = !DILocation(line: 0, scope: !16959)
!16966 = !DILocation(line: 344, column: 15, scope: !16959)
!16967 = !DILocation(line: 344, column: 9, scope: !16959)
!16968 = !DILocation(line: 344, column: 26, scope: !16959)
!16969 = !DILocation(line: 344, column: 2, scope: !16959)
!16970 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !136, file: !136, line: 325, type: !16960, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16971)
!16971 = !{!16972, !16973}
!16972 = !DILocalVariable(name: "list", arg: 1, scope: !16970, file: !136, line: 325, type: !16920)
!16973 = !DILocalVariable(name: "node", arg: 2, scope: !16970, file: !136, line: 326, type: !16883)
!16974 = !DILocation(line: 0, scope: !16970)
!16975 = !DILocation(line: 328, column: 24, scope: !16970)
!16976 = !DILocation(line: 328, column: 15, scope: !16970)
!16977 = !DILocation(line: 328, column: 9, scope: !16970)
!16978 = !DILocation(line: 328, column: 45, scope: !16970)
!16979 = !DILocation(line: 328, column: 2, scope: !16970)
!16980 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !16981, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16983)
!16981 = !DISubroutineType(types: !16982)
!16982 = !{!16883, !16920}
!16983 = !{!16984}
!16984 = !DILocalVariable(name: "list", arg: 1, scope: !16980, file: !136, line: 294, type: !16920)
!16985 = !DILocation(line: 0, scope: !16980)
!16986 = !DILocation(line: 296, column: 9, scope: !16980)
!16987 = !DILocation(line: 296, column: 2, scope: !16980)
!16988 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !16989, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !16991)
!16989 = !DISubroutineType(types: !16990)
!16990 = !{!122, !16920}
!16991 = !{!16992}
!16992 = !DILocalVariable(name: "list", arg: 1, scope: !16988, file: !136, line: 266, type: !16920)
!16993 = !DILocation(line: 0, scope: !16988)
!16994 = !DILocation(line: 268, column: 15, scope: !16988)
!16995 = !DILocation(line: 268, column: 20, scope: !16988)
!16996 = !DILocation(line: 268, column: 2, scope: !16988)
!16997 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2701, file: !2701, line: 150, type: !16998, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17000)
!16998 = !DISubroutineType(types: !16999)
!16999 = !{!103, !2674}
!17000 = !{!17001, !17002, !17003, !17005}
!17001 = !DILocalVariable(name: "to", arg: 1, scope: !16997, file: !2701, line: 150, type: !2674)
!17002 = !DILocalVariable(name: "ret", scope: !16997, file: !2701, line: 152, type: !103)
!17003 = !DILocalVariable(name: "__i", scope: !17004, file: !2701, line: 154, type: !16738)
!17004 = distinct !DILexicalBlock(scope: !16997, file: !2701, line: 154, column: 2)
!17005 = !DILocalVariable(name: "__key", scope: !17004, file: !2701, line: 154, type: !16738)
!17006 = !DILocation(line: 0, scope: !16997)
!17007 = !DILocation(line: 0, scope: !17004)
!17008 = !DILocation(line: 0, scope: !16766, inlinedAt: !17009)
!17009 = distinct !DILocation(line: 154, column: 2, scope: !17004)
!17010 = !DILocation(line: 55, column: 2, scope: !16775, inlinedAt: !17011)
!17011 = distinct !DILocation(line: 145, column: 10, scope: !16766, inlinedAt: !17009)
!17012 = !DILocation(line: 0, scope: !16775, inlinedAt: !17011)
!17013 = !DILocation(line: 148, column: 2, scope: !16783, inlinedAt: !17009)
!17014 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17009)
!17015 = !DILocation(line: 148, column: 2, scope: !16787, inlinedAt: !17009)
!17016 = !DILocation(line: 160, column: 2, scope: !16766, inlinedAt: !17009)
!17017 = !DILocation(line: 155, column: 7, scope: !17018)
!17018 = distinct !DILexicalBlock(scope: !17019, file: !2701, line: 155, column: 7)
!17019 = distinct !DILexicalBlock(scope: !17020, file: !2701, line: 154, column: 24)
!17020 = distinct !DILexicalBlock(scope: !17004, file: !2701, line: 154, column: 2)
!17021 = !DILocation(line: 155, column: 7, scope: !17019)
!17022 = !DILocation(line: 156, column: 4, scope: !17023)
!17023 = distinct !DILexicalBlock(scope: !17018, file: !2701, line: 155, column: 39)
!17024 = !DILocation(line: 158, column: 3, scope: !17023)
!17025 = !DILocation(line: 0, scope: !16839, inlinedAt: !17026)
!17026 = distinct !DILocation(line: 154, column: 2, scope: !17020)
!17027 = !DILocation(line: 194, column: 2, scope: !16847, inlinedAt: !17026)
!17028 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17026)
!17029 = !DILocation(line: 194, column: 2, scope: !16851, inlinedAt: !17026)
!17030 = !DILocation(line: 0, scope: !16853, inlinedAt: !17031)
!17031 = distinct !DILocation(line: 215, column: 2, scope: !16839, inlinedAt: !17026)
!17032 = !DILocation(line: 95, column: 2, scope: !16853, inlinedAt: !17031)
!17033 = !DILocation(line: 161, column: 2, scope: !16997)
!17034 = distinct !DISubprogram(name: "remove_timeout", scope: !2701, file: !2701, line: 53, type: !2695, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17035)
!17035 = !{!17036}
!17036 = !DILocalVariable(name: "t", arg: 1, scope: !17034, file: !2701, line: 53, type: !2674)
!17037 = !DILocation(line: 0, scope: !17034)
!17038 = !DILocation(line: 55, column: 6, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17034, file: !2701, line: 55, column: 6)
!17040 = !DILocation(line: 55, column: 14, scope: !17039)
!17041 = !DILocation(line: 55, column: 6, scope: !17034)
!17042 = !DILocation(line: 56, column: 25, scope: !17043)
!17043 = distinct !DILexicalBlock(scope: !17039, file: !2701, line: 55, column: 23)
!17044 = !DILocation(line: 56, column: 12, scope: !17043)
!17045 = !DILocation(line: 56, column: 19, scope: !17043)
!17046 = !DILocation(line: 57, column: 2, scope: !17043)
!17047 = !DILocation(line: 59, column: 23, scope: !17034)
!17048 = !DILocation(line: 59, column: 2, scope: !17034)
!17049 = !DILocation(line: 60, column: 1, scope: !17034)
!17050 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !136, file: !136, line: 496, type: !17051, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17053)
!17051 = !DISubroutineType(types: !17052)
!17052 = !{null, !16883}
!17053 = !{!17054, !17055, !17056}
!17054 = !DILocalVariable(name: "node", arg: 1, scope: !17050, file: !136, line: 496, type: !16883)
!17055 = !DILocalVariable(name: "prev", scope: !17050, file: !136, line: 498, type: !16895)
!17056 = !DILocalVariable(name: "next", scope: !17050, file: !136, line: 499, type: !16895)
!17057 = !DILocation(line: 0, scope: !17050)
!17058 = !DILocation(line: 498, column: 34, scope: !17050)
!17059 = !DILocation(line: 499, column: 34, scope: !17050)
!17060 = !DILocation(line: 501, column: 8, scope: !17050)
!17061 = !DILocation(line: 501, column: 13, scope: !17050)
!17062 = !DILocation(line: 502, column: 8, scope: !17050)
!17063 = !DILocation(line: 502, column: 13, scope: !17050)
!17064 = !DILocation(line: 503, column: 2, scope: !17050)
!17065 = !DILocation(line: 504, column: 1, scope: !17050)
!17066 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !17051, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17067)
!17067 = !{!17068}
!17068 = !DILocalVariable(name: "node", arg: 1, scope: !17066, file: !136, line: 211, type: !16883)
!17069 = !DILocation(line: 0, scope: !17066)
!17070 = !DILocation(line: 213, column: 8, scope: !17066)
!17071 = !DILocation(line: 213, column: 13, scope: !17066)
!17072 = !DILocation(line: 214, column: 8, scope: !17066)
!17073 = !DILocation(line: 214, column: 13, scope: !17066)
!17074 = !DILocation(line: 215, column: 1, scope: !17066)
!17075 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2701, file: !2701, line: 183, type: !17076, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17080)
!17076 = !DISubroutineType(types: !17077)
!17077 = !{!104, !17078}
!17078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17079, size: 32)
!17079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2675)
!17080 = !{!17081, !17082, !17083, !17085}
!17081 = !DILocalVariable(name: "timeout", arg: 1, scope: !17075, file: !2701, line: 183, type: !17078)
!17082 = !DILocalVariable(name: "ticks", scope: !17075, file: !2701, line: 185, type: !104)
!17083 = !DILocalVariable(name: "__i", scope: !17084, file: !2701, line: 187, type: !16738)
!17084 = distinct !DILexicalBlock(scope: !17075, file: !2701, line: 187, column: 2)
!17085 = !DILocalVariable(name: "__key", scope: !17084, file: !2701, line: 187, type: !16738)
!17086 = !DILocation(line: 0, scope: !17075)
!17087 = !DILocation(line: 0, scope: !17084)
!17088 = !DILocation(line: 0, scope: !16766, inlinedAt: !17089)
!17089 = distinct !DILocation(line: 187, column: 2, scope: !17084)
!17090 = !DILocation(line: 55, column: 2, scope: !16775, inlinedAt: !17091)
!17091 = distinct !DILocation(line: 145, column: 10, scope: !16766, inlinedAt: !17089)
!17092 = !DILocation(line: 0, scope: !16775, inlinedAt: !17091)
!17093 = !DILocation(line: 148, column: 2, scope: !16783, inlinedAt: !17089)
!17094 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17089)
!17095 = !DILocation(line: 148, column: 2, scope: !16787, inlinedAt: !17089)
!17096 = !DILocation(line: 160, column: 2, scope: !16766, inlinedAt: !17089)
!17097 = !DILocation(line: 188, column: 11, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !17099, file: !2701, line: 187, column: 24)
!17099 = distinct !DILexicalBlock(scope: !17084, file: !2701, line: 187, column: 2)
!17100 = !DILocation(line: 0, scope: !16839, inlinedAt: !17101)
!17101 = distinct !DILocation(line: 187, column: 2, scope: !17099)
!17102 = !DILocation(line: 194, column: 2, scope: !16847, inlinedAt: !17101)
!17103 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17101)
!17104 = !DILocation(line: 194, column: 2, scope: !16851, inlinedAt: !17101)
!17105 = !DILocation(line: 0, scope: !16853, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 215, column: 2, scope: !16839, inlinedAt: !17101)
!17107 = !DILocation(line: 95, column: 2, scope: !16853, inlinedAt: !17106)
!17108 = !DILocation(line: 191, column: 2, scope: !17075)
!17109 = distinct !DISubprogram(name: "timeout_rem", scope: !2701, file: !2701, line: 165, type: !17076, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17110)
!17110 = !{!17111, !17112, !17113}
!17111 = !DILocalVariable(name: "timeout", arg: 1, scope: !17109, file: !2701, line: 165, type: !17078)
!17112 = !DILocalVariable(name: "ticks", scope: !17109, file: !2701, line: 167, type: !104)
!17113 = !DILocalVariable(name: "t", scope: !17114, file: !2701, line: 173, type: !2674)
!17114 = distinct !DILexicalBlock(scope: !17109, file: !2701, line: 173, column: 2)
!17115 = !DILocation(line: 0, scope: !17109)
!17116 = !DILocation(line: 169, column: 6, scope: !17117)
!17117 = distinct !DILexicalBlock(scope: !17109, file: !2701, line: 169, column: 6)
!17118 = !DILocation(line: 169, column: 6, scope: !17109)
!17119 = !DILocation(line: 173, column: 28, scope: !17114)
!17120 = !DILocation(line: 0, scope: !17114)
!17121 = !DILocation(line: 173, column: 39, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17114, file: !2701, line: 173, column: 2)
!17123 = !DILocation(line: 173, column: 2, scope: !17114)
!17124 = !DILocation(line: 174, column: 15, scope: !17125)
!17125 = distinct !DILexicalBlock(scope: !17122, file: !2701, line: 173, column: 61)
!17126 = !DILocation(line: 174, column: 9, scope: !17125)
!17127 = !DILocation(line: 175, column: 15, scope: !17128)
!17128 = distinct !DILexicalBlock(scope: !17125, file: !2701, line: 175, column: 7)
!17129 = !DILocation(line: 175, column: 7, scope: !17125)
!17130 = !DILocation(line: 173, column: 52, scope: !17122)
!17131 = distinct !{!17131, !17123, !17132}
!17132 = !DILocation(line: 178, column: 2, scope: !17114)
!17133 = !DILocation(line: 180, column: 17, scope: !17109)
!17134 = !DILocation(line: 180, column: 15, scope: !17109)
!17135 = !DILocation(line: 180, column: 2, scope: !17109)
!17136 = !DILocation(line: 181, column: 1, scope: !17109)
!17137 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13094, file: !13094, line: 35, type: !17138, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17140)
!17138 = !DISubroutineType(types: !17139)
!17139 = !{!122, !17078}
!17140 = !{!17141}
!17141 = !DILocalVariable(name: "to", arg: 1, scope: !17137, file: !13094, line: 35, type: !17078)
!17142 = !DILocation(line: 0, scope: !17137)
!17143 = !DILocation(line: 37, column: 35, scope: !17137)
!17144 = !DILocation(line: 37, column: 10, scope: !17137)
!17145 = !DILocation(line: 37, column: 9, scope: !17137)
!17146 = !DILocation(line: 37, column: 2, scope: !17137)
!17147 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2701, file: !2701, line: 194, type: !17076, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17148)
!17148 = !{!17149, !17150, !17151, !17153}
!17149 = !DILocalVariable(name: "timeout", arg: 1, scope: !17147, file: !2701, line: 194, type: !17078)
!17150 = !DILocalVariable(name: "ticks", scope: !17147, file: !2701, line: 196, type: !104)
!17151 = !DILocalVariable(name: "__i", scope: !17152, file: !2701, line: 198, type: !16738)
!17152 = distinct !DILexicalBlock(scope: !17147, file: !2701, line: 198, column: 2)
!17153 = !DILocalVariable(name: "__key", scope: !17152, file: !2701, line: 198, type: !16738)
!17154 = !DILocation(line: 0, scope: !17147)
!17155 = !DILocation(line: 0, scope: !17152)
!17156 = !DILocation(line: 0, scope: !16766, inlinedAt: !17157)
!17157 = distinct !DILocation(line: 198, column: 2, scope: !17152)
!17158 = !DILocation(line: 55, column: 2, scope: !16775, inlinedAt: !17159)
!17159 = distinct !DILocation(line: 145, column: 10, scope: !16766, inlinedAt: !17157)
!17160 = !DILocation(line: 0, scope: !16775, inlinedAt: !17159)
!17161 = !DILocation(line: 148, column: 2, scope: !16783, inlinedAt: !17157)
!17162 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17157)
!17163 = !DILocation(line: 148, column: 2, scope: !16787, inlinedAt: !17157)
!17164 = !DILocation(line: 160, column: 2, scope: !16766, inlinedAt: !17157)
!17165 = !DILocation(line: 199, column: 11, scope: !17166)
!17166 = distinct !DILexicalBlock(scope: !17167, file: !2701, line: 198, column: 24)
!17167 = distinct !DILexicalBlock(scope: !17152, file: !2701, line: 198, column: 2)
!17168 = !DILocation(line: 199, column: 23, scope: !17166)
!17169 = !DILocation(line: 0, scope: !16839, inlinedAt: !17170)
!17170 = distinct !DILocation(line: 198, column: 2, scope: !17167)
!17171 = !DILocation(line: 194, column: 2, scope: !16847, inlinedAt: !17170)
!17172 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17170)
!17173 = !DILocation(line: 194, column: 2, scope: !16851, inlinedAt: !17170)
!17174 = !DILocation(line: 0, scope: !16853, inlinedAt: !17175)
!17175 = distinct !DILocation(line: 215, column: 2, scope: !16839, inlinedAt: !17170)
!17176 = !DILocation(line: 95, column: 2, scope: !16853, inlinedAt: !17175)
!17177 = !DILocation(line: 199, column: 21, scope: !17166)
!17178 = !DILocation(line: 202, column: 2, scope: !17147)
!17179 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2701, file: !2701, line: 205, type: !16872, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17180)
!17180 = !{!17181, !17182, !17184}
!17181 = !DILocalVariable(name: "ret", scope: !17179, file: !2701, line: 207, type: !314)
!17182 = !DILocalVariable(name: "__i", scope: !17183, file: !2701, line: 209, type: !16738)
!17183 = distinct !DILexicalBlock(scope: !17179, file: !2701, line: 209, column: 2)
!17184 = !DILocalVariable(name: "__key", scope: !17183, file: !2701, line: 209, type: !16738)
!17185 = !DILocation(line: 0, scope: !17179)
!17186 = !DILocation(line: 0, scope: !17183)
!17187 = !DILocation(line: 0, scope: !16766, inlinedAt: !17188)
!17188 = distinct !DILocation(line: 209, column: 2, scope: !17183)
!17189 = !DILocation(line: 55, column: 2, scope: !16775, inlinedAt: !17190)
!17190 = distinct !DILocation(line: 145, column: 10, scope: !16766, inlinedAt: !17188)
!17191 = !DILocation(line: 0, scope: !16775, inlinedAt: !17190)
!17192 = !DILocation(line: 148, column: 2, scope: !16783, inlinedAt: !17188)
!17193 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17188)
!17194 = !DILocation(line: 148, column: 2, scope: !16787, inlinedAt: !17188)
!17195 = !DILocation(line: 160, column: 2, scope: !16766, inlinedAt: !17188)
!17196 = !DILocation(line: 210, column: 9, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17198, file: !2701, line: 209, column: 24)
!17198 = distinct !DILexicalBlock(scope: !17183, file: !2701, line: 209, column: 2)
!17199 = !DILocation(line: 0, scope: !16839, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 209, column: 2, scope: !17198)
!17201 = !DILocation(line: 194, column: 2, scope: !16847, inlinedAt: !17200)
!17202 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17200)
!17203 = !DILocation(line: 194, column: 2, scope: !16851, inlinedAt: !17200)
!17204 = !DILocation(line: 0, scope: !16853, inlinedAt: !17205)
!17205 = distinct !DILocation(line: 215, column: 2, scope: !16839, inlinedAt: !17200)
!17206 = !DILocation(line: 95, column: 2, scope: !16853, inlinedAt: !17205)
!17207 = !DILocation(line: 212, column: 2, scope: !17179)
!17208 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2701, file: !2701, line: 215, type: !10547, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17209)
!17209 = !{!17210, !17211, !17212, !17214, !17215, !17218, !17219}
!17210 = !DILocalVariable(name: "ticks", arg: 1, scope: !17208, file: !2701, line: 215, type: !314)
!17211 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17208, file: !2701, line: 215, type: !122)
!17212 = !DILocalVariable(name: "__i", scope: !17213, file: !2701, line: 217, type: !16738)
!17213 = distinct !DILexicalBlock(scope: !17208, file: !2701, line: 217, column: 2)
!17214 = !DILocalVariable(name: "__key", scope: !17213, file: !2701, line: 217, type: !16738)
!17215 = !DILocalVariable(name: "next_to", scope: !17216, file: !2701, line: 218, type: !103)
!17216 = distinct !DILexicalBlock(scope: !17217, file: !2701, line: 217, column: 24)
!17217 = distinct !DILexicalBlock(scope: !17213, file: !2701, line: 217, column: 2)
!17218 = !DILocalVariable(name: "sooner", scope: !17216, file: !2701, line: 219, type: !122)
!17219 = !DILocalVariable(name: "imminent", scope: !17216, file: !2701, line: 221, type: !122)
!17220 = !DILocation(line: 0, scope: !17208)
!17221 = !DILocation(line: 0, scope: !17213)
!17222 = !DILocation(line: 0, scope: !16766, inlinedAt: !17223)
!17223 = distinct !DILocation(line: 217, column: 2, scope: !17213)
!17224 = !DILocation(line: 55, column: 2, scope: !16775, inlinedAt: !17225)
!17225 = distinct !DILocation(line: 145, column: 10, scope: !16766, inlinedAt: !17223)
!17226 = !DILocation(line: 0, scope: !16775, inlinedAt: !17225)
!17227 = !DILocation(line: 148, column: 2, scope: !16783, inlinedAt: !17223)
!17228 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17223)
!17229 = !DILocation(line: 148, column: 2, scope: !16787, inlinedAt: !17223)
!17230 = !DILocation(line: 160, column: 2, scope: !16766, inlinedAt: !17223)
!17231 = !DILocation(line: 218, column: 17, scope: !17216)
!17232 = !DILocation(line: 0, scope: !17216)
!17233 = !DILocation(line: 221, column: 27, scope: !17216)
!17234 = !DILocation(line: 233, column: 17, scope: !17235)
!17235 = distinct !DILexicalBlock(scope: !17216, file: !2701, line: 233, column: 7)
!17236 = !DILocation(line: 234, column: 26, scope: !17237)
!17237 = distinct !DILexicalBlock(scope: !17235, file: !2701, line: 233, column: 56)
!17238 = !DILocation(line: 234, column: 4, scope: !17237)
!17239 = !DILocation(line: 235, column: 3, scope: !17237)
!17240 = !DILocation(line: 0, scope: !16839, inlinedAt: !17241)
!17241 = distinct !DILocation(line: 217, column: 2, scope: !17217)
!17242 = !DILocation(line: 194, column: 2, scope: !16847, inlinedAt: !17241)
!17243 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17241)
!17244 = !DILocation(line: 194, column: 2, scope: !16851, inlinedAt: !17241)
!17245 = !DILocation(line: 0, scope: !16853, inlinedAt: !17246)
!17246 = distinct !DILocation(line: 215, column: 2, scope: !16839, inlinedAt: !17241)
!17247 = !DILocation(line: 95, column: 2, scope: !16853, inlinedAt: !17246)
!17248 = !DILocation(line: 237, column: 1, scope: !17208)
!17249 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2701, file: !2701, line: 239, type: !17250, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17252)
!17250 = !DISubroutineType(types: !17251)
!17251 = !{null, !314}
!17252 = !{!17253, !17254, !17255, !17257}
!17253 = !DILocalVariable(name: "ticks", arg: 1, scope: !17249, file: !2701, line: 239, type: !314)
!17254 = !DILocalVariable(name: "key", scope: !17249, file: !2701, line: 245, type: !16738)
!17255 = !DILocalVariable(name: "t", scope: !17256, file: !2701, line: 262, type: !2674)
!17256 = distinct !DILexicalBlock(scope: !17249, file: !2701, line: 261, column: 67)
!17257 = !DILocalVariable(name: "dt", scope: !17256, file: !2701, line: 263, type: !103)
!17258 = !DILocation(line: 0, scope: !17249)
!17259 = !DILocation(line: 242, column: 2, scope: !17249)
!17260 = !DILocation(line: 0, scope: !16766, inlinedAt: !17261)
!17261 = distinct !DILocation(line: 245, column: 25, scope: !17249)
!17262 = !DILocation(line: 55, column: 2, scope: !16775, inlinedAt: !17263)
!17263 = distinct !DILocation(line: 145, column: 10, scope: !16766, inlinedAt: !17261)
!17264 = !DILocation(line: 0, scope: !16775, inlinedAt: !17263)
!17265 = !DILocation(line: 148, column: 2, scope: !16783, inlinedAt: !17261)
!17266 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17261)
!17267 = !DILocation(line: 148, column: 2, scope: !16787, inlinedAt: !17261)
!17268 = !DILocation(line: 160, column: 2, scope: !16766, inlinedAt: !17261)
!17269 = !DILocation(line: 261, column: 9, scope: !17249)
!17270 = !DILocation(line: 261, column: 17, scope: !17249)
!17271 = !DILocation(line: 261, column: 25, scope: !17249)
!17272 = !DILocation(line: 261, column: 37, scope: !17249)
!17273 = !DILocation(line: 261, column: 47, scope: !17249)
!17274 = !DILocation(line: 261, column: 44, scope: !17249)
!17275 = !DILocation(line: 261, column: 2, scope: !17249)
!17276 = !DILocation(line: 0, scope: !17256)
!17277 = !DILocation(line: 263, column: 12, scope: !17256)
!17278 = !DILocation(line: 265, column: 16, scope: !17256)
!17279 = !DILocation(line: 265, column: 13, scope: !17256)
!17280 = !DILocation(line: 266, column: 13, scope: !17256)
!17281 = !DILocation(line: 267, column: 3, scope: !17256)
!17282 = !DILocation(line: 0, scope: !16839, inlinedAt: !17283)
!17283 = distinct !DILocation(line: 269, column: 3, scope: !17256)
!17284 = !DILocation(line: 194, column: 2, scope: !16847, inlinedAt: !17283)
!17285 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17283)
!17286 = !DILocation(line: 194, column: 2, scope: !16851, inlinedAt: !17283)
!17287 = !DILocation(line: 0, scope: !16853, inlinedAt: !17288)
!17288 = distinct !DILocation(line: 215, column: 2, scope: !16839, inlinedAt: !17283)
!17289 = !DILocation(line: 95, column: 2, scope: !16853, inlinedAt: !17288)
!17290 = !DILocation(line: 270, column: 6, scope: !17256)
!17291 = !DILocation(line: 270, column: 3, scope: !17256)
!17292 = !DILocation(line: 0, scope: !16766, inlinedAt: !17293)
!17293 = distinct !DILocation(line: 271, column: 9, scope: !17256)
!17294 = !DILocation(line: 55, column: 2, scope: !16775, inlinedAt: !17295)
!17295 = distinct !DILocation(line: 145, column: 10, scope: !16766, inlinedAt: !17293)
!17296 = !DILocation(line: 0, scope: !16775, inlinedAt: !17295)
!17297 = !DILocation(line: 148, column: 2, scope: !16783, inlinedAt: !17293)
!17298 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17293)
!17299 = !DILocation(line: 148, column: 2, scope: !16787, inlinedAt: !17293)
!17300 = !DILocation(line: 160, column: 2, scope: !16766, inlinedAt: !17293)
!17301 = !DILocation(line: 272, column: 22, scope: !17256)
!17302 = distinct !{!17302, !17275, !17303}
!17303 = !DILocation(line: 273, column: 2, scope: !17249)
!17304 = !DILocation(line: 276, column: 19, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17306, file: !2701, line: 275, column: 23)
!17306 = distinct !DILexicalBlock(scope: !17249, file: !2701, line: 275, column: 6)
!17307 = !DILocation(line: 277, column: 2, scope: !17305)
!17308 = !DILocation(line: 279, column: 15, scope: !17249)
!17309 = !DILocation(line: 279, column: 12, scope: !17249)
!17310 = !DILocation(line: 280, column: 21, scope: !17249)
!17311 = !DILocation(line: 282, column: 24, scope: !17249)
!17312 = !DILocation(line: 282, column: 2, scope: !17249)
!17313 = !DILocation(line: 0, scope: !16839, inlinedAt: !17314)
!17314 = distinct !DILocation(line: 284, column: 2, scope: !17249)
!17315 = !DILocation(line: 194, column: 2, scope: !16847, inlinedAt: !17314)
!17316 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17314)
!17317 = !DILocation(line: 194, column: 2, scope: !16851, inlinedAt: !17314)
!17318 = !DILocation(line: 0, scope: !16853, inlinedAt: !17319)
!17319 = distinct !DILocation(line: 215, column: 2, scope: !16839, inlinedAt: !17314)
!17320 = !DILocation(line: 95, column: 2, scope: !16853, inlinedAt: !17319)
!17321 = !DILocation(line: 285, column: 1, scope: !17249)
!17322 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2701, file: !2701, line: 287, type: !17323, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17325)
!17323 = !DISubroutineType(types: !17324)
!17324 = !{!106}
!17325 = !{!17326, !17327, !17329}
!17326 = !DILocalVariable(name: "t", scope: !17322, file: !2701, line: 289, type: !112)
!17327 = !DILocalVariable(name: "__i", scope: !17328, file: !2701, line: 291, type: !16738)
!17328 = distinct !DILexicalBlock(scope: !17322, file: !2701, line: 291, column: 2)
!17329 = !DILocalVariable(name: "__key", scope: !17328, file: !2701, line: 291, type: !16738)
!17330 = !DILocation(line: 0, scope: !17322)
!17331 = !DILocation(line: 0, scope: !17328)
!17332 = !DILocation(line: 0, scope: !16766, inlinedAt: !17333)
!17333 = distinct !DILocation(line: 291, column: 2, scope: !17328)
!17334 = !DILocation(line: 55, column: 2, scope: !16775, inlinedAt: !17335)
!17335 = distinct !DILocation(line: 145, column: 10, scope: !16766, inlinedAt: !17333)
!17336 = !DILocation(line: 0, scope: !16775, inlinedAt: !17335)
!17337 = !DILocation(line: 148, column: 2, scope: !16783, inlinedAt: !17333)
!17338 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17333)
!17339 = !DILocation(line: 148, column: 2, scope: !16787, inlinedAt: !17333)
!17340 = !DILocation(line: 160, column: 2, scope: !16766, inlinedAt: !17333)
!17341 = !DILocation(line: 292, column: 7, scope: !17342)
!17342 = distinct !DILexicalBlock(scope: !17343, file: !2701, line: 291, column: 24)
!17343 = distinct !DILexicalBlock(scope: !17328, file: !2701, line: 291, column: 2)
!17344 = !DILocation(line: 292, column: 19, scope: !17342)
!17345 = !DILocation(line: 0, scope: !16839, inlinedAt: !17346)
!17346 = distinct !DILocation(line: 291, column: 2, scope: !17343)
!17347 = !DILocation(line: 194, column: 2, scope: !16847, inlinedAt: !17346)
!17348 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17346)
!17349 = !DILocation(line: 194, column: 2, scope: !16851, inlinedAt: !17346)
!17350 = !DILocation(line: 0, scope: !16853, inlinedAt: !17351)
!17351 = distinct !DILocation(line: 215, column: 2, scope: !16839, inlinedAt: !17346)
!17352 = !DILocation(line: 95, column: 2, scope: !16853, inlinedAt: !17351)
!17353 = !DILocation(line: 292, column: 17, scope: !17342)
!17354 = !DILocation(line: 294, column: 2, scope: !17322)
!17355 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2701, file: !2701, line: 297, type: !7672, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !2275)
!17356 = !DILocation(line: 300, column: 19, scope: !17355)
!17357 = !DILocation(line: 300, column: 9, scope: !17355)
!17358 = !DILocation(line: 300, column: 2, scope: !17355)
!17359 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2701, file: !2701, line: 306, type: !17323, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !2275)
!17360 = !DILocation(line: 308, column: 9, scope: !17359)
!17361 = !DILocation(line: 308, column: 2, scope: !17359)
!17362 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2701, file: !2701, line: 319, type: !7682, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17363)
!17363 = !{!17364, !17365, !17366, !17367}
!17364 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17362, file: !2701, line: 319, type: !111)
!17365 = !DILocalVariable(name: "start_cycles", scope: !17362, file: !2701, line: 328, type: !111)
!17366 = !DILocalVariable(name: "cycles_to_wait", scope: !17362, file: !2701, line: 331, type: !111)
!17367 = !DILocalVariable(name: "current_cycles", scope: !17368, file: !2701, line: 338, type: !111)
!17368 = distinct !DILexicalBlock(scope: !17369, file: !2701, line: 337, column: 11)
!17369 = distinct !DILexicalBlock(scope: !17370, file: !2701, line: 337, column: 2)
!17370 = distinct !DILexicalBlock(scope: !17362, file: !2701, line: 337, column: 2)
!17371 = !DILocation(line: 0, scope: !17362)
!17372 = !DILocation(line: 322, column: 19, scope: !17373)
!17373 = distinct !DILexicalBlock(scope: !17362, file: !2701, line: 322, column: 6)
!17374 = !DILocation(line: 322, column: 6, scope: !17362)
!17375 = !DILocation(line: 328, column: 26, scope: !17362)
!17376 = !DILocation(line: 333, column: 43, scope: !17362)
!17377 = !DILocation(line: 337, column: 2, scope: !17362)
!17378 = !DILocation(line: 338, column: 29, scope: !17368)
!17379 = !DILocation(line: 0, scope: !17368)
!17380 = !DILocation(line: 341, column: 23, scope: !17381)
!17381 = distinct !DILexicalBlock(scope: !17368, file: !2701, line: 341, column: 7)
!17382 = !DILocation(line: 341, column: 39, scope: !17381)
!17383 = !DILocation(line: 349, column: 1, scope: !17362)
!17384 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !127, file: !127, line: 1675, type: !7672, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !2275)
!17385 = !DILocation(line: 1677, column: 9, scope: !17384)
!17386 = !DILocation(line: 1677, column: 2, scope: !17384)
!17387 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17388, file: !17388, line: 24, type: !7672, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !2275)
!17388 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17389 = !DILocation(line: 26, column: 9, scope: !17387)
!17390 = !DILocation(line: 26, column: 2, scope: !17387)
!17391 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2701, file: !2701, line: 364, type: !17392, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !17394)
!17392 = !DISubroutineType(types: !17393)
!17393 = !{!112, !16728}
!17394 = !{!17395, !17396}
!17395 = !DILocalVariable(name: "timeout", arg: 1, scope: !17391, file: !2701, line: 364, type: !16728)
!17396 = !DILocalVariable(name: "dt", scope: !17391, file: !2701, line: 366, type: !104)
!17397 = !DILocation(line: 0, scope: !17391)
!17398 = !DILocation(line: 368, column: 6, scope: !17391)
!17399 = !DILocation(line: 371, column: 10, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17401, file: !2701, line: 370, column: 47)
!17401 = distinct !DILexicalBlock(scope: !17402, file: !2701, line: 370, column: 13)
!17402 = distinct !DILexicalBlock(scope: !17391, file: !2701, line: 368, column: 6)
!17403 = !DILocation(line: 371, column: 3, scope: !17400)
!17404 = !DILocation(line: 376, column: 58, scope: !17405)
!17405 = distinct !DILexicalBlock(scope: !17406, file: !2701, line: 376, column: 7)
!17406 = distinct !DILexicalBlock(scope: !17401, file: !2701, line: 372, column: 9)
!17407 = !DILocation(line: 376, column: 7, scope: !17406)
!17408 = !DILocation(line: 376, column: 43, scope: !17405)
!17409 = !DILocation(line: 377, column: 4, scope: !17410)
!17410 = distinct !DILexicalBlock(scope: !17405, file: !2701, line: 376, column: 64)
!17411 = !DILocation(line: 379, column: 10, scope: !17406)
!17412 = !DILocation(line: 379, column: 33, scope: !17406)
!17413 = !DILocation(line: 379, column: 31, scope: !17406)
!17414 = !DILocation(line: 379, column: 3, scope: !17406)
!17415 = !DILocation(line: 0, scope: !17402)
!17416 = !DILocation(line: 381, column: 1, scope: !17391)
!17417 = distinct !DISubprogram(name: "k_free", scope: !2718, file: !2718, line: 43, type: !7520, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !17418)
!17418 = !{!17419, !17420}
!17419 = !DILocalVariable(name: "ptr", arg: 1, scope: !17417, file: !2718, line: 43, type: !102)
!17420 = !DILocalVariable(name: "heap_ref", scope: !17417, file: !2718, line: 45, type: !17421)
!17421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17422, size: 32)
!17422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 32)
!17423 = !DILocation(line: 0, scope: !17417)
!17424 = !DILocation(line: 47, column: 10, scope: !17425)
!17425 = distinct !DILexicalBlock(scope: !17417, file: !2718, line: 47, column: 6)
!17426 = !DILocation(line: 47, column: 6, scope: !17417)
!17427 = !DILocation(line: 49, column: 9, scope: !17428)
!17428 = distinct !DILexicalBlock(scope: !17425, file: !2718, line: 47, column: 19)
!17429 = !DILocation(line: 53, column: 15, scope: !17428)
!17430 = !DILocation(line: 53, column: 3, scope: !17428)
!17431 = !DILocation(line: 56, column: 2, scope: !17428)
!17432 = !DILocation(line: 57, column: 1, scope: !17417)
!17433 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2718, file: !2718, line: 64, type: !17434, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !17436)
!17434 = !DISubroutineType(types: !17435)
!17435 = !{!102, !156, !156}
!17436 = !{!17437, !17438, !17439}
!17437 = !DILocalVariable(name: "align", arg: 1, scope: !17433, file: !2718, line: 64, type: !156)
!17438 = !DILocalVariable(name: "size", arg: 2, scope: !17433, file: !2718, line: 64, type: !156)
!17439 = !DILocalVariable(name: "ret", scope: !17433, file: !2718, line: 75, type: !102)
!17440 = !DILocation(line: 0, scope: !17433)
!17441 = !DILocation(line: 66, column: 2, scope: !17442)
!17442 = distinct !DILexicalBlock(scope: !17443, file: !2718, line: 66, column: 2)
!17443 = distinct !DILexicalBlock(scope: !17433, file: !2718, line: 66, column: 2)
!17444 = !DILocation(line: 66, column: 2, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17442, file: !2718, line: 66, column: 2)
!17446 = !DILocation(line: 70, column: 2, scope: !17447)
!17447 = distinct !DILexicalBlock(scope: !17448, file: !2718, line: 70, column: 2)
!17448 = distinct !DILexicalBlock(scope: !17433, file: !2718, line: 70, column: 2)
!17449 = !DILocation(line: 70, column: 2, scope: !17448)
!17450 = !DILocation(line: 70, column: 2, scope: !17451)
!17451 = distinct !DILexicalBlock(scope: !17447, file: !2718, line: 70, column: 2)
!17452 = !DILocation(line: 75, column: 14, scope: !17433)
!17453 = !DILocation(line: 79, column: 2, scope: !17433)
!17454 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2718, file: !2718, line: 12, type: !17455, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !17457)
!17455 = !DISubroutineType(types: !17456)
!17456 = !{!102, !17422, !156, !156}
!17457 = !{!17458, !17459, !17460, !17461, !17462, !17463}
!17458 = !DILocalVariable(name: "heap", arg: 1, scope: !17454, file: !2718, line: 12, type: !17422)
!17459 = !DILocalVariable(name: "align", arg: 2, scope: !17454, file: !2718, line: 12, type: !156)
!17460 = !DILocalVariable(name: "size", arg: 3, scope: !17454, file: !2718, line: 12, type: !156)
!17461 = !DILocalVariable(name: "mem", scope: !17454, file: !2718, line: 14, type: !102)
!17462 = !DILocalVariable(name: "heap_ref", scope: !17454, file: !2718, line: 15, type: !17421)
!17463 = !DILocalVariable(name: "__align", scope: !17454, file: !2718, line: 16, type: !156)
!17464 = !DILocation(line: 0, scope: !17454)
!17465 = !DILocation(line: 24, column: 6, scope: !17466)
!17466 = distinct !DILexicalBlock(scope: !17454, file: !2718, line: 24, column: 6)
!17467 = !DILocation(line: 24, column: 6, scope: !17454)
!17468 = !DILocation(line: 27, column: 18, scope: !17454)
!17469 = !DILocation(line: 29, column: 44, scope: !17454)
!17470 = !DILocation(line: 29, column: 8, scope: !17454)
!17471 = !DILocation(line: 30, column: 10, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17454, file: !2718, line: 30, column: 6)
!17473 = !DILocation(line: 30, column: 6, scope: !17454)
!17474 = !DILocation(line: 34, column: 13, scope: !17454)
!17475 = !DILocation(line: 35, column: 12, scope: !17454)
!17476 = !DILocation(line: 36, column: 8, scope: !17454)
!17477 = !DILocation(line: 37, column: 2, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17479, file: !2718, line: 37, column: 2)
!17479 = distinct !DILexicalBlock(scope: !17454, file: !2718, line: 37, column: 2)
!17480 = !DILocation(line: 37, column: 2, scope: !17479)
!17481 = !DILocation(line: 37, column: 2, scope: !17482)
!17482 = distinct !DILexicalBlock(scope: !17478, file: !2718, line: 37, column: 2)
!17483 = !DILocation(line: 41, column: 1, scope: !17454)
!17484 = distinct !DISubprogram(name: "size_add_overflow", scope: !13539, file: !13539, line: 47, type: !13540, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !17485)
!17485 = !{!17486, !17487, !17488}
!17486 = !DILocalVariable(name: "a", arg: 1, scope: !17484, file: !13539, line: 47, type: !156)
!17487 = !DILocalVariable(name: "b", arg: 2, scope: !17484, file: !13539, line: 47, type: !156)
!17488 = !DILocalVariable(name: "result", arg: 3, scope: !17484, file: !13539, line: 47, type: !2846)
!17489 = !DILocation(line: 0, scope: !17484)
!17490 = !DILocation(line: 49, column: 9, scope: !17484)
!17491 = !DILocation(line: 49, column: 2, scope: !17484)
!17492 = distinct !DISubprogram(name: "k_malloc", scope: !2718, file: !2718, line: 82, type: !13551, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !17493)
!17493 = !{!17494, !17495}
!17494 = !DILocalVariable(name: "size", arg: 1, scope: !17492, file: !2718, line: 82, type: !156)
!17495 = !DILocalVariable(name: "ret", scope: !17492, file: !2718, line: 86, type: !102)
!17496 = !DILocation(line: 0, scope: !17492)
!17497 = !DILocation(line: 86, column: 14, scope: !17492)
!17498 = !DILocation(line: 90, column: 2, scope: !17492)
!17499 = distinct !DISubprogram(name: "k_calloc", scope: !2718, file: !2718, line: 93, type: !17434, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !17500)
!17500 = !{!17501, !17502, !17503, !17504}
!17501 = !DILocalVariable(name: "nmemb", arg: 1, scope: !17499, file: !2718, line: 93, type: !156)
!17502 = !DILocalVariable(name: "size", arg: 2, scope: !17499, file: !2718, line: 93, type: !156)
!17503 = !DILocalVariable(name: "ret", scope: !17499, file: !2718, line: 95, type: !102)
!17504 = !DILocalVariable(name: "bounds", scope: !17499, file: !2718, line: 96, type: !156)
!17505 = !DILocation(line: 0, scope: !17499)
!17506 = !DILocation(line: 96, column: 2, scope: !17499)
!17507 = !DILocation(line: 100, column: 6, scope: !17508)
!17508 = distinct !DILexicalBlock(scope: !17499, file: !2718, line: 100, column: 6)
!17509 = !DILocation(line: 100, column: 6, scope: !17499)
!17510 = !DILocation(line: 106, column: 17, scope: !17499)
!17511 = !DILocation(line: 106, column: 8, scope: !17499)
!17512 = !DILocation(line: 107, column: 10, scope: !17513)
!17513 = distinct !DILexicalBlock(scope: !17499, file: !2718, line: 107, column: 6)
!17514 = !DILocation(line: 107, column: 6, scope: !17499)
!17515 = !DILocation(line: 108, column: 9, scope: !17516)
!17516 = distinct !DILexicalBlock(scope: !17513, file: !2718, line: 107, column: 19)
!17517 = !DILocation(line: 109, column: 2, scope: !17516)
!17518 = !DILocation(line: 114, column: 1, scope: !17499)
!17519 = distinct !DISubprogram(name: "size_mul_overflow", scope: !13539, file: !13539, line: 105, type: !13540, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !17520)
!17520 = !{!17521, !17522, !17523}
!17521 = !DILocalVariable(name: "a", arg: 1, scope: !17519, file: !13539, line: 105, type: !156)
!17522 = !DILocalVariable(name: "b", arg: 2, scope: !17519, file: !13539, line: 105, type: !156)
!17523 = !DILocalVariable(name: "result", arg: 3, scope: !17519, file: !13539, line: 105, type: !2846)
!17524 = !DILocation(line: 0, scope: !17519)
!17525 = !DILocation(line: 107, column: 9, scope: !17519)
!17526 = !DILocation(line: 107, column: 2, scope: !17519)
!17527 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2718, file: !2718, line: 116, type: !17528, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !17594)
!17528 = !DISubroutineType(types: !17529)
!17529 = !{null, !17530}
!17530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17531, size: 32)
!17531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 896, elements: !17532)
!17532 = !{!17533, !17573, !17585, !17586, !17587, !17588, !17589}
!17533 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !17531, file: !199, line: 247, baseType: !17534, size: 384)
!17534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !17535)
!17535 = !{!17536, !17547, !17549, !17550, !17551, !17560, !17561, !17562}
!17536 = !DIDerivedType(tag: DW_TAG_member, scope: !17534, file: !199, line: 60, baseType: !17537, size: 64)
!17537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17534, file: !199, line: 60, size: 64, elements: !17538)
!17538 = !{!17539, !17541}
!17539 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !17537, file: !199, line: 61, baseType: !17540, size: 64)
!17540 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2733)
!17541 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !17537, file: !199, line: 62, baseType: !17542, size: 64)
!17542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !17543)
!17543 = !{!17544}
!17544 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !17542, file: !211, line: 50, baseType: !17545, size: 64)
!17545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17546, size: 64, elements: !216)
!17546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17542, size: 32)
!17547 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !17534, file: !199, line: 68, baseType: !17548, size: 32, offset: 64)
!17548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 32)
!17549 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !17534, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!17550 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !17534, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!17551 = !DIDerivedType(tag: DW_TAG_member, scope: !17534, file: !199, line: 90, baseType: !17552, size: 16, offset: 112)
!17552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17534, file: !199, line: 90, size: 16, elements: !17553)
!17553 = !{!17554, !17559}
!17554 = !DIDerivedType(tag: DW_TAG_member, scope: !17552, file: !199, line: 91, baseType: !17555, size: 16)
!17555 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17552, file: !199, line: 91, size: 16, elements: !17556)
!17556 = !{!17557, !17558}
!17557 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !17555, file: !199, line: 96, baseType: !229, size: 8)
!17558 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !17555, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!17559 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !17552, file: !199, line: 100, baseType: !181, size: 16)
!17560 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !17534, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!17561 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !17534, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!17562 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !17534, file: !199, line: 131, baseType: !17563, size: 192, offset: 192)
!17563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !17564)
!17564 = !{!17565, !17566, !17572}
!17565 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !17563, file: !131, line: 245, baseType: !17540, size: 64)
!17566 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !17563, file: !131, line: 246, baseType: !17567, size: 32, offset: 64)
!17567 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !17568)
!17568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17569, size: 32)
!17569 = !DISubroutineType(types: !17570)
!17570 = !{null, !17571}
!17571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17563, size: 32)
!17572 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !17563, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!17573 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !17531, file: !199, line: 250, baseType: !17574, size: 288, offset: 384)
!17574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !17575)
!17575 = !{!17576, !17577, !17578, !17579, !17580, !17581, !17582, !17583, !17584}
!17576 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !17574, file: !248, line: 26, baseType: !111, size: 32)
!17577 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !17574, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!17578 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !17574, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!17579 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !17574, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!17580 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !17574, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!17581 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !17574, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!17582 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !17574, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!17583 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !17574, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!17584 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !17574, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!17585 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !17531, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!17586 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !17531, file: !199, line: 256, baseType: !2728, size: 64, offset: 704)
!17587 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !17531, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!17588 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !17531, file: !199, line: 325, baseType: !17422, size: 32, offset: 800)
!17589 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !17531, file: !199, line: 343, baseType: !17590, size: 64, offset: 832)
!17590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !17591)
!17591 = !{!17592, !17593}
!17592 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !17590, file: !248, line: 63, baseType: !111, size: 32)
!17593 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !17590, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!17594 = !{!17595}
!17595 = !DILocalVariable(name: "thread", arg: 1, scope: !17527, file: !2718, line: 116, type: !17530)
!17596 = !DILocation(line: 0, scope: !17527)
!17597 = !DILocation(line: 118, column: 10, scope: !17527)
!17598 = !DILocation(line: 118, column: 24, scope: !17527)
!17599 = !DILocation(line: 119, column: 1, scope: !17527)
!17600 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2718, file: !2718, line: 124, type: !17434, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !17601)
!17601 = !{!17602, !17603, !17604, !17605}
!17602 = !DILocalVariable(name: "align", arg: 1, scope: !17600, file: !2718, line: 124, type: !156)
!17603 = !DILocalVariable(name: "size", arg: 2, scope: !17600, file: !2718, line: 124, type: !156)
!17604 = !DILocalVariable(name: "ret", scope: !17600, file: !2718, line: 126, type: !102)
!17605 = !DILocalVariable(name: "heap", scope: !17600, file: !2718, line: 127, type: !17422)
!17606 = !DILocation(line: 0, scope: !17600)
!17607 = !DILocation(line: 129, column: 6, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17600, file: !2718, line: 129, column: 6)
!17609 = !DILocation(line: 129, column: 6, scope: !17600)
!17610 = !DILocation(line: 132, column: 10, scope: !17611)
!17611 = distinct !DILexicalBlock(scope: !17608, file: !2718, line: 131, column: 9)
!17612 = !DILocation(line: 132, column: 20, scope: !17611)
!17613 = !DILocation(line: 135, column: 11, scope: !17614)
!17614 = distinct !DILexicalBlock(scope: !17600, file: !2718, line: 135, column: 6)
!17615 = !DILocation(line: 135, column: 6, scope: !17600)
!17616 = !DILocation(line: 136, column: 9, scope: !17617)
!17617 = distinct !DILexicalBlock(scope: !17614, file: !2718, line: 135, column: 20)
!17618 = !DILocation(line: 137, column: 2, scope: !17617)
!17619 = !DILocation(line: 0, scope: !17614)
!17620 = !DILocation(line: 141, column: 2, scope: !17600)
!17621 = distinct !DISubprogram(name: "boot_banner", scope: !17622, file: !17622, line: 26, type: !317, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3523, retainedNodes: !2275)
!17622 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17623 = !DILocation(line: 36, column: 1, scope: !17621)
!17624 = distinct !DISubprogram(name: "statics_init", scope: !2772, file: !2772, line: 21, type: !1171, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17625)
!17625 = !{!17626, !17627}
!17626 = !DILocalVariable(name: "unused", arg: 1, scope: !17624, file: !2772, line: 21, type: !1173)
!17627 = !DILocalVariable(name: "h", scope: !17628, file: !2772, line: 24, type: !17629)
!17628 = distinct !DILexicalBlock(scope: !17624, file: !2772, line: 24, column: 2)
!17629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17630, size: 32)
!17630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !17631)
!17631 = !{!17632, !17638, !17644}
!17632 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17630, file: !127, line: 5074, baseType: !17633, size: 96)
!17633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !268, line: 56, size: 96, elements: !17634)
!17634 = !{!17635, !17636, !17637}
!17635 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17633, file: !268, line: 57, baseType: !271, size: 32)
!17636 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17633, file: !268, line: 58, baseType: !102, size: 32, offset: 32)
!17637 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17633, file: !268, line: 59, baseType: !156, size: 32, offset: 64)
!17638 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17630, file: !127, line: 5075, baseType: !17639, size: 64, offset: 96)
!17639 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !17640)
!17640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !17641)
!17641 = !{!17642}
!17642 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17640, file: !131, line: 232, baseType: !17643, size: 64)
!17643 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2758)
!17644 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17630, file: !127, line: 5076, baseType: !17645, size: 32, offset: 160)
!17645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !17646)
!17646 = !{!17647}
!17647 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !17645, file: !152, line: 52, baseType: !22, size: 32)
!17648 = !DILocation(line: 0, scope: !17624)
!17649 = !DILocation(line: 0, scope: !17628)
!17650 = !DILocation(line: 24, column: 2, scope: !17651)
!17651 = distinct !DILexicalBlock(scope: !17652, file: !2772, line: 24, column: 2)
!17652 = distinct !DILexicalBlock(scope: !17653, file: !2772, line: 24, column: 2)
!17653 = distinct !DILexicalBlock(scope: !17628, file: !2772, line: 24, column: 2)
!17654 = !DILocation(line: 24, column: 2, scope: !17655)
!17655 = distinct !DILexicalBlock(scope: !17656, file: !2772, line: 24, column: 2)
!17656 = distinct !DILexicalBlock(scope: !17651, file: !2772, line: 24, column: 2)
!17657 = !DILocation(line: 24, column: 2, scope: !17652)
!17658 = !DILocation(line: 24, column: 2, scope: !17628)
!17659 = !DILocation(line: 52, column: 2, scope: !17624)
!17660 = !DILocation(line: 49, column: 27, scope: !17661)
!17661 = distinct !DILexicalBlock(scope: !17662, file: !2772, line: 48, column: 3)
!17662 = distinct !DILexicalBlock(scope: !17653, file: !2772, line: 24, column: 36)
!17663 = !DILocation(line: 49, column: 45, scope: !17661)
!17664 = !DILocation(line: 49, column: 4, scope: !17661)
!17665 = !DILocation(line: 24, column: 2, scope: !17653)
!17666 = !DILocation(line: 24, column: 2, scope: !17656)
!17667 = distinct !{!17667, !17658, !17668}
!17668 = !DILocation(line: 51, column: 2, scope: !17628)
!17669 = distinct !DISubprogram(name: "k_heap_init", scope: !2772, file: !2772, line: 13, type: !17670, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17672)
!17670 = !DISubroutineType(types: !17671)
!17671 = !{null, !17629, !102, !156}
!17672 = !{!17673, !17674, !17675}
!17673 = !DILocalVariable(name: "h", arg: 1, scope: !17669, file: !2772, line: 13, type: !17629)
!17674 = !DILocalVariable(name: "mem", arg: 2, scope: !17669, file: !2772, line: 13, type: !102)
!17675 = !DILocalVariable(name: "bytes", arg: 3, scope: !17669, file: !2772, line: 13, type: !156)
!17676 = !DILocation(line: 0, scope: !17669)
!17677 = !DILocation(line: 15, column: 19, scope: !17669)
!17678 = !DILocation(line: 15, column: 2, scope: !17669)
!17679 = !DILocation(line: 16, column: 20, scope: !17669)
!17680 = !DILocation(line: 16, column: 2, scope: !17669)
!17681 = !DILocation(line: 19, column: 1, scope: !17669)
!17682 = distinct !DISubprogram(name: "z_waitq_init", scope: !13042, file: !13042, line: 47, type: !17683, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17686)
!17683 = !DISubroutineType(types: !17684)
!17684 = !{null, !17685}
!17685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17639, size: 32)
!17686 = !{!17687}
!17687 = !DILocalVariable(name: "w", arg: 1, scope: !17682, file: !13042, line: 47, type: !17685)
!17688 = !DILocation(line: 0, scope: !17682)
!17689 = !DILocation(line: 49, column: 21, scope: !17682)
!17690 = !DILocation(line: 49, column: 2, scope: !17682)
!17691 = !DILocation(line: 50, column: 1, scope: !17682)
!17692 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !17693, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17696)
!17693 = !DISubroutineType(types: !17694)
!17694 = !{null, !17695}
!17695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17643, size: 32)
!17696 = !{!17697}
!17697 = !DILocalVariable(name: "list", arg: 1, scope: !17692, file: !136, line: 197, type: !17695)
!17698 = !DILocation(line: 0, scope: !17692)
!17699 = !DILocation(line: 199, column: 8, scope: !17692)
!17700 = !DILocation(line: 199, column: 13, scope: !17692)
!17701 = !DILocation(line: 200, column: 8, scope: !17692)
!17702 = !DILocation(line: 200, column: 13, scope: !17692)
!17703 = !DILocation(line: 201, column: 1, scope: !17692)
!17704 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2772, file: !2772, line: 64, type: !17705, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17711)
!17705 = !DISubroutineType(types: !17706)
!17706 = !{!102, !17629, !156, !156, !17707}
!17707 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17708)
!17708 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17709)
!17709 = !{!17710}
!17710 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17708, file: !105, line: 66, baseType: !104, size: 64)
!17711 = !{!17712, !17713, !17714, !17715, !17716, !17717, !17718, !17719, !17724}
!17712 = !DILocalVariable(name: "h", arg: 1, scope: !17704, file: !2772, line: 64, type: !17629)
!17713 = !DILocalVariable(name: "align", arg: 2, scope: !17704, file: !2772, line: 64, type: !156)
!17714 = !DILocalVariable(name: "bytes", arg: 3, scope: !17704, file: !2772, line: 64, type: !156)
!17715 = !DILocalVariable(name: "timeout", arg: 4, scope: !17704, file: !2772, line: 65, type: !17707)
!17716 = !DILocalVariable(name: "now", scope: !17704, file: !2772, line: 67, type: !106)
!17717 = !DILocalVariable(name: "end", scope: !17704, file: !2772, line: 67, type: !106)
!17718 = !DILocalVariable(name: "ret", scope: !17704, file: !2772, line: 68, type: !102)
!17719 = !DILocalVariable(name: "key", scope: !17704, file: !2772, line: 72, type: !17720)
!17720 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !17721)
!17721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !17722)
!17722 = !{!17723}
!17723 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17721, file: !152, line: 33, baseType: !103, size: 32)
!17724 = !DILocalVariable(name: "blocked_alloc", scope: !17704, file: !2772, line: 78, type: !122)
!17725 = !DILocation(line: 0, scope: !17704)
!17726 = !DILocation(line: 67, column: 21, scope: !17704)
!17727 = !DILocation(line: 70, column: 8, scope: !17704)
!17728 = !DILocation(line: 72, column: 41, scope: !17704)
!17729 = !DILocalVariable(name: "l", arg: 1, scope: !17730, file: !152, line: 136, type: !17733)
!17730 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !17731, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17734)
!17731 = !DISubroutineType(types: !17732)
!17732 = !{!17720, !17733}
!17733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17645, size: 32)
!17734 = !{!17729, !17735}
!17735 = !DILocalVariable(name: "k", scope: !17730, file: !152, line: 139, type: !17720)
!17736 = !DILocation(line: 0, scope: !17730, inlinedAt: !17737)
!17737 = distinct !DILocation(line: 72, column: 25, scope: !17704)
!17738 = !DILocation(line: 55, column: 2, scope: !17739, inlinedAt: !17743)
!17739 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7706, file: !7706, line: 42, type: !9871, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17740)
!17740 = !{!17741, !17742}
!17741 = !DILocalVariable(name: "key", scope: !17739, file: !7706, line: 44, type: !32)
!17742 = !DILocalVariable(name: "tmp", scope: !17739, file: !7706, line: 53, type: !32)
!17743 = distinct !DILocation(line: 145, column: 10, scope: !17730, inlinedAt: !17737)
!17744 = !{i64 2845259}
!17745 = !DILocation(line: 0, scope: !17739, inlinedAt: !17743)
!17746 = !DILocation(line: 148, column: 2, scope: !17747, inlinedAt: !17737)
!17747 = distinct !DILexicalBlock(scope: !17748, file: !152, line: 148, column: 2)
!17748 = distinct !DILexicalBlock(scope: !17730, file: !152, line: 148, column: 2)
!17749 = !DILocation(line: 148, column: 2, scope: !17748, inlinedAt: !17737)
!17750 = !DILocation(line: 148, column: 2, scope: !17751, inlinedAt: !17737)
!17751 = distinct !DILexicalBlock(scope: !17747, file: !152, line: 148, column: 2)
!17752 = !DILocation(line: 160, column: 2, scope: !17730, inlinedAt: !17737)
!17753 = !DILocation(line: 1031, column: 3, scope: !17754, inlinedAt: !17757)
!17754 = distinct !DISubprogram(name: "__get_IPSR", scope: !7585, file: !7585, line: 1027, type: !7672, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17755)
!17755 = !{!17756}
!17756 = !DILocalVariable(name: "result", scope: !17754, file: !7585, line: 1029, type: !111)
!17757 = distinct !DILocation(line: 48, column: 10, scope: !17758, inlinedAt: !17759)
!17758 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8579, file: !8579, line: 46, type: !8580, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !2275)
!17759 = distinct !DILocation(line: 76, column: 2, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17761, file: !2772, line: 76, column: 2)
!17761 = distinct !DILexicalBlock(scope: !17704, file: !2772, line: 76, column: 2)
!17762 = !{i64 6972665}
!17763 = !DILocation(line: 0, scope: !17754, inlinedAt: !17757)
!17764 = !DILocation(line: 48, column: 9, scope: !17758, inlinedAt: !17759)
!17765 = !DILocation(line: 76, column: 2, scope: !17760)
!17766 = !DILocation(line: 81, column: 9, scope: !17767)
!17767 = distinct !DILexicalBlock(scope: !17704, file: !2772, line: 80, column: 22)
!17768 = !DILocation(line: 83, column: 9, scope: !17767)
!17769 = !DILocation(line: 85, column: 12, scope: !17770)
!17770 = distinct !DILexicalBlock(scope: !17767, file: !2772, line: 84, column: 7)
!17771 = !DILocation(line: 85, column: 21, scope: !17770)
!17772 = !DILocation(line: 76, column: 2, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17760, file: !2772, line: 76, column: 2)
!17774 = !DILocation(line: 85, column: 30, scope: !17770)
!17775 = !DILocation(line: 85, column: 37, scope: !17770)
!17776 = !DILocation(line: 84, column: 7, scope: !17767)
!17777 = !DILocation(line: 99, column: 10, scope: !17767)
!17778 = !DILocation(line: 0, scope: !17730, inlinedAt: !17779)
!17779 = distinct !DILocation(line: 101, column: 9, scope: !17767)
!17780 = !DILocation(line: 55, column: 2, scope: !17739, inlinedAt: !17781)
!17781 = distinct !DILocation(line: 145, column: 10, scope: !17730, inlinedAt: !17779)
!17782 = !DILocation(line: 0, scope: !17739, inlinedAt: !17781)
!17783 = !DILocation(line: 148, column: 2, scope: !17747, inlinedAt: !17779)
!17784 = !DILocation(line: 148, column: 2, scope: !17748, inlinedAt: !17779)
!17785 = !DILocation(line: 148, column: 2, scope: !17751, inlinedAt: !17779)
!17786 = !DILocation(line: 160, column: 2, scope: !17730, inlinedAt: !17779)
!17787 = distinct !{!17787, !17788, !17789}
!17788 = !DILocation(line: 80, column: 2, scope: !17704)
!17789 = !DILocation(line: 102, column: 2, scope: !17704)
!17790 = !DILocalVariable(name: "key", arg: 2, scope: !17791, file: !152, line: 190, type: !17720)
!17791 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !17792, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17794)
!17792 = !DISubroutineType(types: !17793)
!17793 = !{null, !17733, !17720}
!17794 = !{!17795, !17790}
!17795 = !DILocalVariable(name: "l", arg: 1, scope: !17791, file: !152, line: 189, type: !17733)
!17796 = !DILocation(line: 0, scope: !17791, inlinedAt: !17797)
!17797 = distinct !DILocation(line: 106, column: 2, scope: !17704)
!17798 = !DILocation(line: 194, column: 2, scope: !17799, inlinedAt: !17797)
!17799 = distinct !DILexicalBlock(scope: !17800, file: !152, line: 194, column: 2)
!17800 = distinct !DILexicalBlock(scope: !17791, file: !152, line: 194, column: 2)
!17801 = !DILocation(line: 194, column: 2, scope: !17800, inlinedAt: !17797)
!17802 = !DILocation(line: 194, column: 2, scope: !17803, inlinedAt: !17797)
!17803 = distinct !DILexicalBlock(scope: !17799, file: !152, line: 194, column: 2)
!17804 = !DILocalVariable(name: "key", arg: 1, scope: !17805, file: !7706, line: 84, type: !32)
!17805 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7706, file: !7706, line: 84, type: !7536, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17806)
!17806 = !{!17804}
!17807 = !DILocation(line: 0, scope: !17805, inlinedAt: !17808)
!17808 = distinct !DILocation(line: 215, column: 2, scope: !17791, inlinedAt: !17797)
!17809 = !DILocation(line: 95, column: 2, scope: !17805, inlinedAt: !17808)
!17810 = !{i64 2846076}
!17811 = !DILocation(line: 107, column: 2, scope: !17704)
!17812 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2772, file: !2772, line: 110, type: !17813, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17815)
!17813 = !DISubroutineType(types: !17814)
!17814 = !{!102, !17629, !156, !17707}
!17815 = !{!17816, !17817, !17818, !17819}
!17816 = !DILocalVariable(name: "h", arg: 1, scope: !17812, file: !2772, line: 110, type: !17629)
!17817 = !DILocalVariable(name: "bytes", arg: 2, scope: !17812, file: !2772, line: 110, type: !156)
!17818 = !DILocalVariable(name: "timeout", arg: 3, scope: !17812, file: !2772, line: 110, type: !17707)
!17819 = !DILocalVariable(name: "ret", scope: !17812, file: !2772, line: 114, type: !102)
!17820 = !DILocation(line: 0, scope: !17812)
!17821 = !DILocation(line: 114, column: 14, scope: !17812)
!17822 = !DILocation(line: 118, column: 2, scope: !17812)
!17823 = distinct !DISubprogram(name: "k_heap_free", scope: !2772, file: !2772, line: 121, type: !17824, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !17826)
!17824 = !DISubroutineType(types: !17825)
!17825 = !{null, !17629, !102}
!17826 = !{!17827, !17828, !17829}
!17827 = !DILocalVariable(name: "h", arg: 1, scope: !17823, file: !2772, line: 121, type: !17629)
!17828 = !DILocalVariable(name: "mem", arg: 2, scope: !17823, file: !2772, line: 121, type: !102)
!17829 = !DILocalVariable(name: "key", scope: !17823, file: !2772, line: 123, type: !17720)
!17830 = !DILocation(line: 0, scope: !17823)
!17831 = !DILocation(line: 123, column: 41, scope: !17823)
!17832 = !DILocation(line: 0, scope: !17730, inlinedAt: !17833)
!17833 = distinct !DILocation(line: 123, column: 25, scope: !17823)
!17834 = !DILocation(line: 55, column: 2, scope: !17739, inlinedAt: !17835)
!17835 = distinct !DILocation(line: 145, column: 10, scope: !17730, inlinedAt: !17833)
!17836 = !DILocation(line: 0, scope: !17739, inlinedAt: !17835)
!17837 = !DILocation(line: 148, column: 2, scope: !17747, inlinedAt: !17833)
!17838 = !DILocation(line: 148, column: 2, scope: !17748, inlinedAt: !17833)
!17839 = !DILocation(line: 148, column: 2, scope: !17751, inlinedAt: !17833)
!17840 = !DILocation(line: 160, column: 2, scope: !17730, inlinedAt: !17833)
!17841 = !DILocation(line: 125, column: 20, scope: !17823)
!17842 = !DILocation(line: 125, column: 2, scope: !17823)
!17843 = !DILocation(line: 128, column: 60, scope: !17844)
!17844 = distinct !DILexicalBlock(scope: !17823, file: !2772, line: 128, column: 6)
!17845 = !DILocation(line: 128, column: 43, scope: !17844)
!17846 = !DILocation(line: 128, column: 68, scope: !17844)
!17847 = !DILocation(line: 128, column: 6, scope: !17823)
!17848 = !DILocation(line: 129, column: 3, scope: !17849)
!17849 = distinct !DILexicalBlock(scope: !17844, file: !2772, line: 128, column: 74)
!17850 = !DILocation(line: 130, column: 2, scope: !17849)
!17851 = !DILocation(line: 0, scope: !17791, inlinedAt: !17852)
!17852 = distinct !DILocation(line: 131, column: 3, scope: !17853)
!17853 = distinct !DILexicalBlock(scope: !17844, file: !2772, line: 130, column: 9)
!17854 = !DILocation(line: 194, column: 2, scope: !17799, inlinedAt: !17852)
!17855 = !DILocation(line: 194, column: 2, scope: !17800, inlinedAt: !17852)
!17856 = !DILocation(line: 194, column: 2, scope: !17803, inlinedAt: !17852)
!17857 = !DILocation(line: 0, scope: !17805, inlinedAt: !17858)
!17858 = distinct !DILocation(line: 215, column: 2, scope: !17791, inlinedAt: !17852)
!17859 = !DILocation(line: 95, column: 2, scope: !17805, inlinedAt: !17858)
!17860 = !DILocation(line: 133, column: 1, scope: !17823)
