; ModuleID = 'build/96b_stm32_sensor_mez/ipm_mcux/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.1 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.1, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.1, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.ipm_driver_api = type { i32 (%struct.device*, i32, i32, i8*, i32)*, void (%struct.device*, void (%struct.device*, i8*, i32, i8*)*, i8*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)* }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.1, %union.anon.1 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.1*, %union.anon.1* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230156 to i8*), void (i8*)* inttoptr (i32 134228283 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230156 to i8*), void (i8*)* inttoptr (i32 134228263 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230156 to i8*), void (i8*)* inttoptr (i32 134228253 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230156 to i8*), void (i8*)* inttoptr (i32 134228353 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230156 to i8*), void (i8*)* inttoptr (i32 134228343 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230156 to i8*), void (i8*)* inttoptr (i32 134228333 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230156 to i8*), void (i8*)* inttoptr (i32 134228323 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230156 to i8*), void (i8*)* inttoptr (i32 134228313 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230156 to i8*), void (i8*)* inttoptr (i32 134228303 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230156 to i8*), void (i8*)* inttoptr (i32 134228293 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230156 to i8*), void (i8*)* inttoptr (i32 134228273 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@gcounter = dso_local global i32 0, align 4, !dbg !25
@.str = private unnamed_addr constant [14 x i8] c"Received: %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Hello World from MASTER! %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"arm\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"Could not get IPM device handle!\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !171
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !181
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !225
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.1 { i32 101384192 } }], align 4, !dbg !254
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !262
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !408
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !444
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), %union.anon.1 { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.29, i32 0, i32 0), %union.anon.1 { i32 285933600 } }], align 4, !dbg !454
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !459
@.str.28 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.29 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !479
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !681
@.str.30 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !642
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !625
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.30, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !598
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !614
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !644
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !658
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !660
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !662
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !664
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !666
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !668
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !670
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !672
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !674
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !676
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !686
@.str.32 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !719
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !817
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !806
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !858
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !706
@.str.41 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !924
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1203
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1173
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1159
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1104
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !704
@.str.1.42 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1205
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1177
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1175
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1118
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !702
@.str.2.43 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1218
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1181
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1179
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1124
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !700
@.str.3.44 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1220
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1185
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1183
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1133
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !698
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1222
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1189
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1187
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1139
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !696
@.str.5.45 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1224
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1193
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1191
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1145
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !694
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1226
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1197
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1195
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1151
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !692
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1228
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1201
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1199
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1157
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !714
@.str.49 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1230
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1449
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1404
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1451
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.49, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1377
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1379
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !712
@.str.1.50 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1458
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1406
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1483
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.50, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1388
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1390
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !710
@.str.2.51 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1485
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1408
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1495
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.51, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1394
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1396
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !708
@.str.3.54 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1497
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1410
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1507
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.54, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1400
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1402
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1412
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1420
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1443
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1446
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !790
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1475
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1477
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1479
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1481
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1487
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1489
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1491
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1493
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1499
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1501
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1503
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1505
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1509
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1620
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1622
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1618
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1589
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1624
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1102
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.42, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1116
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.43, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1122
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.44, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1131
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1137
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.45, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1143
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1149
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1155
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1714
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1758
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1761
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1768
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1775
@z_main_stack = dso_local global [2112 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1985
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1994
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2001
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2006
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.104 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.107, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.108, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.109, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.110, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.111, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.105, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.112, i32 0, i32 0)], align 4, !dbg !2033
@.str.106 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.107 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.108 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.109 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.110 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.111 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.105 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.112 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2145
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2158
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2266
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2269
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2271
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1999
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1996
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2273
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2309
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1863
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2307
@.str.165 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2874 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2878, !srcloc !2879
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2880, !srcloc !2881
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2882, !srcloc !2883
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2884, !srcloc !2885
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2886, !srcloc !2887
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2888, !srcloc !2889
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2890, !srcloc !2891
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2892, !srcloc !2893
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2894, !srcloc !2895
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2896, !srcloc !2897
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2898, !srcloc !2899
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2900, !srcloc !2901
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2902, !srcloc !2903
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2904, !srcloc !2905
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2906, !srcloc !2907
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2908, !srcloc !2909
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2910, !srcloc !2911
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2912, !srcloc !2913
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2914, !srcloc !2915
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2916, !srcloc !2917
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2918, !srcloc !2919
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2920, !srcloc !2921
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2922, !srcloc !2923
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2924, !srcloc !2925
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2926, !srcloc !2927
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2928, !srcloc !2929
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2930, !srcloc !2931
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2932, !srcloc !2935
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2936, !srcloc !2937
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2938, !srcloc !2939
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2940, !srcloc !2941
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2942, !srcloc !2943
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2944, !srcloc !2945
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2946, !srcloc !2947
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2948, !srcloc !2949
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2950, !srcloc !2951
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2952, !srcloc !2953
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2954, !srcloc !2955
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2956, !srcloc !2957
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2958, !srcloc !2959
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2960, !srcloc !2961
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2962, !srcloc !2963
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2964, !srcloc !2965
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !2966, !srcloc !2967
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !2968, !srcloc !2969
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !2970, !srcloc !2971
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !2972, !srcloc !2973
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !2974, !srcloc !2975
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !2976, !srcloc !2977
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2978, !srcloc !2979
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !2980, !srcloc !2981
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2982, !srcloc !2983
  ret void, !dbg !2984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ping_ipm_callback(%struct.device* noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2, i8* nocapture noundef readonly %3) local_unnamed_addr #1 !dbg !2987 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !2989, metadata !DIExpression()), !dbg !2993
  call void @llvm.dbg.value(metadata i8* %1, metadata !2990, metadata !DIExpression()), !dbg !2993
  call void @llvm.dbg.value(metadata i32 %2, metadata !2991, metadata !DIExpression()), !dbg !2993
  call void @llvm.dbg.value(metadata i8* %3, metadata !2992, metadata !DIExpression()), !dbg !2993
  %5 = bitcast i8* %3 to i32*, !dbg !2994
  %6 = load i32, i32* %5, align 4, !dbg !2995
  store i32 %6, i32* @gcounter, align 4, !dbg !2996
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i32 noundef %6) #24, !dbg !2997
  %7 = load i32, i32* @gcounter, align 4, !dbg !2998
  %8 = add nsw i32 %7, 1, !dbg !2998
  store i32 %8, i32* @gcounter, align 4, !dbg !2998
  %9 = icmp slt i32 %7, 99, !dbg !2999
  br i1 %9, label %10, label %11, !dbg !3001

10:                                               ; preds = %4
  tail call fastcc void @ipm_send(%struct.device* noundef %0) #25, !dbg !3002
  br label %11, !dbg !3004

11:                                               ; preds = %10, %4
  ret void, !dbg !3005
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ipm_send(%struct.device* noundef %0) unnamed_addr #1 !dbg !3006 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3009, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.value(metadata i32 1, metadata !3010, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.value(metadata i32 0, metadata !3011, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.value(metadata i8* bitcast (i32* @gcounter to i8*), metadata !3012, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.value(metadata i32 4, metadata !3013, metadata !DIExpression()), !dbg !3014
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3015, !srcloc !3017
  tail call fastcc void @z_impl_ipm_send(%struct.device* noundef %0) #25, !dbg !3018
  ret void, !dbg !3019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_ipm_send(%struct.device* noundef %0) unnamed_addr #1 !dbg !3020 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3022, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.value(metadata i32 1, metadata !3023, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.value(metadata i32 0, metadata !3024, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.value(metadata i8* bitcast (i32* @gcounter to i8*), metadata !3025, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.value(metadata i32 4, metadata !3026, metadata !DIExpression()), !dbg !3028
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3029
  %3 = bitcast i8** %2 to %struct.ipm_driver_api**, !dbg !3029
  %4 = load %struct.ipm_driver_api*, %struct.ipm_driver_api** %3, align 4, !dbg !3029
  call void @llvm.dbg.value(metadata %struct.ipm_driver_api* %4, metadata !3027, metadata !DIExpression()), !dbg !3028
  %5 = getelementptr inbounds %struct.ipm_driver_api, %struct.ipm_driver_api* %4, i32 0, i32 0, !dbg !3030
  %6 = load i32 (%struct.device*, i32, i32, i8*, i32)*, i32 (%struct.device*, i32, i32, i8*, i32)** %5, align 4, !dbg !3030
  %7 = tail call i32 %6(%struct.device* noundef %0, i32 noundef 1, i32 noundef 0, i8* noundef bitcast (i32* @gcounter to i8*), i32 noundef 4) #24, !dbg !3031
  ret void, !dbg !3032
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #3 !dbg !3033 {
  call void @llvm.dbg.value(metadata i32 1, metadata !3035, metadata !DIExpression()), !dbg !3037
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #24, !dbg !3038
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !3036, metadata !DIExpression()), !dbg !3037
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0)) #24, !dbg !3039
  br label %1, !dbg !3042

1:                                                ; preds = %1, %0
  br label %1, !dbg !3042, !llvm.loop !3043
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3047, metadata !DIExpression()), !dbg !3048
  ret i32 0, !dbg !3049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3050 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3054, metadata !DIExpression()), !dbg !3055
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3056
  ret void, !dbg !3057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3058 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3061
  ret i8* %1, !dbg !3062
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3063 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3075, metadata !DIExpression()), !dbg !3086
  call void @llvm.dbg.value(metadata i8* %0, metadata !3074, metadata !DIExpression()), !dbg !3086
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !3087
  ret void, !dbg !3089
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3094, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i8* %1, metadata !3095, metadata !DIExpression()), !dbg !3096
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3097
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !3097
  ret i32 %4, !dbg !3098
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3099 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3111, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3108, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i8* %1, metadata !3109, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i8* %2, metadata !3110, metadata !DIExpression()), !dbg !3112
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !3113
  ret void, !dbg !3114
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3115 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3119, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata i32 %1, metadata !3120, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata i32 0, metadata !3121, metadata !DIExpression()), !dbg !3122
  %3 = icmp eq i32 %1, 0, !dbg !3123
  br i1 %3, label %13, label %4, !dbg !3126

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3121, metadata !DIExpression()), !dbg !3122
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3127
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3129
  %8 = load i8, i8* %7, align 1, !dbg !3129
  %9 = zext i8 %8 to i32, !dbg !3129
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !3127
  %11 = add nuw i32 %5, 1, !dbg !3130
  call void @llvm.dbg.value(metadata i32 %11, metadata !3121, metadata !DIExpression()), !dbg !3122
  %12 = icmp eq i32 %11, %1, !dbg !3123
  br i1 %12, label %13, label %4, !dbg !3126, !llvm.loop !3131

13:                                               ; preds = %4, %2
  ret void, !dbg !3133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3134 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3138, metadata !DIExpression()), !dbg !3140
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3141
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3141
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3139, metadata !DIExpression()), !dbg !3142
  call void @llvm.va_start(i8* nonnull %3), !dbg !3143
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3144
  %5 = load i32, i32* %4, align 4, !dbg !3144
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3144
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !3144
  call void @llvm.va_end(i8* nonnull %3), !dbg !3145
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3146
  ret void, !dbg !3146
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3147 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3151, metadata !DIExpression()), !dbg !3156
  call void @llvm.dbg.value(metadata i32 %1, metadata !3152, metadata !DIExpression()), !dbg !3156
  call void @llvm.dbg.value(metadata i8* %2, metadata !3153, metadata !DIExpression()), !dbg !3156
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3157
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3157
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3154, metadata !DIExpression()), !dbg !3158
  call void @llvm.va_start(i8* nonnull %5), !dbg !3159
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3160
  %7 = load i32, i32* %6, align 4, !dbg !3160
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3160
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !3160
  call void @llvm.dbg.value(metadata i32 %9, metadata !3155, metadata !DIExpression()), !dbg !3156
  call void @llvm.va_end(i8* nonnull %5), !dbg !3161
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3162
  ret i32 %9, !dbg !3163
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3164 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3171, metadata !DIExpression()), !dbg !3178
  call void @llvm.dbg.value(metadata i8* %0, metadata !3168, metadata !DIExpression()), !dbg !3178
  call void @llvm.dbg.value(metadata i32 %1, metadata !3169, metadata !DIExpression()), !dbg !3178
  call void @llvm.dbg.value(metadata i8* %2, metadata !3170, metadata !DIExpression()), !dbg !3178
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3179
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3179
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3172, metadata !DIExpression()), !dbg !3180
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3181
  store i8* %0, i8** %7, align 4, !dbg !3181
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3181
  store i32 %1, i32* %8, align 4, !dbg !3181
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3181
  store i32 0, i32* %9, align 4, !dbg !3181
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !3182
  %10 = load i32, i32* %9, align 4, !dbg !3183
  %11 = load i32, i32* %8, align 4, !dbg !3185
  %12 = icmp slt i32 %10, %11, !dbg !3186
  br i1 %12, label %13, label %15, !dbg !3187

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3188
  store i8 0, i8* %14, align 1, !dbg !3190
  br label %15, !dbg !3191

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3192
  ret i32 %10, !dbg !3193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3199, metadata !DIExpression()), !dbg !3201
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3200, metadata !DIExpression()), !dbg !3201
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3202
  %4 = load i8*, i8** %3, align 4, !dbg !3202
  %5 = icmp eq i8* %4, null, !dbg !3204
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3205
  br i1 %5, label %12, label %8, !dbg !3206

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3207
  %10 = load i32, i32* %9, align 4, !dbg !3207
  %11 = icmp slt i32 %7, %10, !dbg !3208
  br i1 %11, label %15, label %12, !dbg !3209

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3210
  %14 = add nsw i32 %7, 1, !dbg !3212
  store i32 %14, i32* %13, align 4, !dbg !3212
  br label %25, !dbg !3213

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3214
  %17 = icmp eq i32 %7, %16, !dbg !3216
  br i1 %17, label %18, label %21, !dbg !3217

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3218
  store i32 %19, i32* %6, align 4, !dbg !3218
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3220
  store i8 0, i8* %20, align 1, !dbg !3221
  br label %25, !dbg !3222

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3223
  %23 = add nsw i32 %7, 1, !dbg !3225
  store i32 %23, i32* %6, align 4, !dbg !3225
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3226
  store i8 %22, i8* %24, align 1, !dbg !3227
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3228
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #3 !dbg !3229 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3239, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata i8* %1, metadata !3240, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata i8* %2, metadata !3241, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata i8* %3, metadata !3242, metadata !DIExpression()), !dbg !3243
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !3244
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3245
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !3246
  unreachable, !dbg !3247
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3248 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3352
  ret %struct.k_thread* %1, !dbg !3353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3354 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3359, metadata !DIExpression()), !dbg !3360
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3361, !srcloc !3363
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !3364
  ret void, !dbg !3365
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3366 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3367, !srcloc !3369
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !3370
  ret %struct.k_thread* %1, !dbg !3371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3372 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3385, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3382, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i8* %1, metadata !3383, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i8* %2, metadata !3384, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %4, metadata !3386, metadata !DIExpression()), !dbg !3513
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3514
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3514
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3387, metadata !DIExpression()), !dbg !3515
  call void @llvm.dbg.value(metadata i32 0, metadata !3391, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i1 undef, metadata !3393, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3513
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3516

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3516

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3517
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3385, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i8* %30, metadata !3384, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %29, metadata !3391, metadata !DIExpression()), !dbg !3513
  %31 = load i8, i8* %30, align 1, !dbg !3518
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3516

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3518
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3519
  call void @llvm.dbg.value(metadata i8* %34, metadata !3384, metadata !DIExpression()), !dbg !3513
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !3519
  call void @llvm.dbg.value(metadata i32 %35, metadata !3395, metadata !DIExpression()), !dbg !3520
  %36 = icmp slt i32 %35, 0, !dbg !3521
  %37 = add i32 %29, 1, !dbg !3519
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3513
  br i1 %36, label %365, label %28, !llvm.loop !3523

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3525
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3400, metadata !DIExpression()), !dbg !3526
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3526
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3445, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3448, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i8* %30, metadata !3451, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 -1, metadata !3452, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 -1, metadata !3453, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i8* null, metadata !3454, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i8* %14, metadata !3455, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i8 0, metadata !3456, metadata !DIExpression()), !dbg !3527
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !3528
  call void @llvm.dbg.value(metadata i8* %39, metadata !3384, metadata !DIExpression()), !dbg !3513
  %40 = load i24, i24* %15, align 8, !dbg !3529
  %41 = and i24 %40, 256, !dbg !3529
  %42 = icmp eq i24 %41, 0, !dbg !3529
  br i1 %42, label %51, label %43, !dbg !3531

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3532
  call void @llvm.dbg.value(metadata i8* %44, metadata !3385, metadata !DIExpression()), !dbg !3513
  %45 = bitcast i8* %27 to i32*, !dbg !3532
  %46 = load i32, i32* %45, align 4, !dbg !3532
  call void @llvm.dbg.value(metadata i32 %46, metadata !3452, metadata !DIExpression()), !dbg !3527
  %47 = icmp slt i32 %46, 0, !dbg !3534
  br i1 %47, label %48, label %56, !dbg !3536

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3537
  store i24 %49, i24* %15, align 8, !dbg !3537
  %50 = sub nsw i32 0, %46, !dbg !3539
  call void @llvm.dbg.value(metadata i32 %50, metadata !3452, metadata !DIExpression()), !dbg !3527
  br label %56, !dbg !3540

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3541
  %53 = icmp eq i24 %52, 0, !dbg !3541
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3543
  br label %56, !dbg !3543

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3544
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3527
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3385, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %58, metadata !3452, metadata !DIExpression()), !dbg !3527
  %60 = and i24 %57, 1024, !dbg !3544
  %61 = icmp eq i24 %60, 0, !dbg !3544
  br i1 %61, label %69, label %62, !dbg !3545

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3546
  call void @llvm.dbg.value(metadata i8* %63, metadata !3385, metadata !DIExpression()), !dbg !3513
  %64 = bitcast i8* %59 to i32*, !dbg !3546
  %65 = load i32, i32* %64, align 4, !dbg !3546
  call void @llvm.dbg.value(metadata i32 %65, metadata !3457, metadata !DIExpression()), !dbg !3547
  %66 = icmp slt i32 %65, 0, !dbg !3548
  br i1 %66, label %67, label %74, !dbg !3550

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3551
  store i24 %68, i24* %15, align 8, !dbg !3551
  br label %74, !dbg !3553

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3554
  %71 = icmp eq i24 %70, 0, !dbg !3554
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3556
  br label %74, !dbg !3556

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3557
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3527
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3527
  call void @llvm.dbg.value(metadata i8* %77, metadata !3385, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %76, metadata !3453, metadata !DIExpression()), !dbg !3527
  store i32 0, i32* %16, align 4, !dbg !3558
  store i32 0, i32* %17, align 8, !dbg !3559
  %78 = lshr i24 %75, 16, !dbg !3557
  call void @llvm.dbg.value(metadata i24 %78, metadata !3460, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3527
  %79 = lshr i24 %75, 11, !dbg !3560
  %80 = and i24 %79, 15, !dbg !3560
  %81 = zext i24 %80 to i32, !dbg !3560
  call void @llvm.dbg.value(metadata i32 %81, metadata !3461, metadata !DIExpression()), !dbg !3527
  %82 = trunc i24 %78 to i3, !dbg !3561
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3561

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3562

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3565
  call void @llvm.dbg.value(metadata i8* %85, metadata !3385, metadata !DIExpression()), !dbg !3513
  %86 = bitcast i8* %77 to i32*, !dbg !3565
  %87 = load i32, i32* %86, align 4, !dbg !3565
  %88 = sext i32 %87 to i64, !dbg !3565
  store i64 %88, i64* %20, align 8, !dbg !3567
  br label %115, !dbg !3568

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3569
  call void @llvm.dbg.value(metadata i8* %90, metadata !3385, metadata !DIExpression()), !dbg !3513
  %91 = bitcast i8* %77 to i32*, !dbg !3569
  %92 = load i32, i32* %91, align 4, !dbg !3569
  %93 = sext i32 %92 to i64, !dbg !3569
  store i64 %93, i64* %20, align 8, !dbg !3572
  br label %115, !dbg !3573

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3574
  %96 = add i32 %95, 7, !dbg !3574
  %97 = and i32 %96, -8, !dbg !3574
  %98 = inttoptr i32 %97 to i8*, !dbg !3574
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3574
  call void @llvm.dbg.value(metadata i8* %99, metadata !3385, metadata !DIExpression()), !dbg !3513
  %100 = inttoptr i32 %97 to i64*, !dbg !3574
  %101 = load i64, i64* %100, align 8, !dbg !3574
  store i64 %101, i64* %20, align 8, !dbg !3575
  br label %115, !dbg !3576

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3577
  %104 = add i32 %103, 7, !dbg !3577
  %105 = and i32 %104, -8, !dbg !3577
  %106 = inttoptr i32 %105 to i8*, !dbg !3577
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3577
  call void @llvm.dbg.value(metadata i8* %107, metadata !3385, metadata !DIExpression()), !dbg !3513
  %108 = inttoptr i32 %105 to i64*, !dbg !3577
  %109 = load i64, i64* %108, align 8, !dbg !3577
  store i64 %109, i64* %20, align 8, !dbg !3578
  br label %115, !dbg !3579

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3580
  call void @llvm.dbg.value(metadata i8* %111, metadata !3385, metadata !DIExpression()), !dbg !3513
  %112 = bitcast i8* %77 to i32*, !dbg !3580
  %113 = load i32, i32* %112, align 4, !dbg !3580
  %114 = sext i32 %113 to i64, !dbg !3581
  store i64 %114, i64* %20, align 8, !dbg !3582
  br label %115, !dbg !3583

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3584
  call void @llvm.dbg.value(metadata i8* %117, metadata !3385, metadata !DIExpression()), !dbg !3513
  %118 = trunc i24 %79 to i4, !dbg !3585
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3585

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3586
  %121 = ashr exact i64 %120, 56, !dbg !3586
  store i64 %121, i64* %20, align 8, !dbg !3589
  br label %177, !dbg !3590

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3591
  %124 = ashr exact i64 %123, 48, !dbg !3591
  store i64 %124, i64* %20, align 8, !dbg !3594
  br label %177, !dbg !3595

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3596

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3599
  call void @llvm.dbg.value(metadata i8* %127, metadata !3385, metadata !DIExpression()), !dbg !3513
  %128 = bitcast i8* %77 to i32*, !dbg !3599
  %129 = load i32, i32* %128, align 4, !dbg !3599
  %130 = zext i32 %129 to i64, !dbg !3599
  store i64 %130, i64* %20, align 8, !dbg !3601
  br label %157, !dbg !3602

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3603
  call void @llvm.dbg.value(metadata i8* %132, metadata !3385, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i8* %132, metadata !3385, metadata !DIExpression()), !dbg !3513
  %133 = bitcast i8* %77 to i32*, !dbg !3603
  %134 = load i32, i32* %133, align 4, !dbg !3603
  %135 = zext i32 %134 to i64, !dbg !3603
  store i64 %135, i64* %20, align 8, !dbg !3603
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3605
  %138 = add i32 %137, 7, !dbg !3605
  %139 = and i32 %138, -8, !dbg !3605
  %140 = inttoptr i32 %139 to i8*, !dbg !3605
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3605
  call void @llvm.dbg.value(metadata i8* %141, metadata !3385, metadata !DIExpression()), !dbg !3513
  %142 = inttoptr i32 %139 to i64*, !dbg !3605
  %143 = load i64, i64* %142, align 8, !dbg !3605
  store i64 %143, i64* %20, align 8, !dbg !3606
  br label %157, !dbg !3607

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3608
  %146 = add i32 %145, 7, !dbg !3608
  %147 = and i32 %146, -8, !dbg !3608
  %148 = inttoptr i32 %147 to i8*, !dbg !3608
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3608
  call void @llvm.dbg.value(metadata i8* %149, metadata !3385, metadata !DIExpression()), !dbg !3513
  %150 = inttoptr i32 %147 to i64*, !dbg !3608
  %151 = load i64, i64* %150, align 8, !dbg !3608
  store i64 %151, i64* %20, align 8, !dbg !3609
  br label %157, !dbg !3610

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3611
  call void @llvm.dbg.value(metadata i8* %153, metadata !3385, metadata !DIExpression()), !dbg !3513
  %154 = bitcast i8* %77 to i32*, !dbg !3611
  %155 = load i32, i32* %154, align 4, !dbg !3611
  %156 = zext i32 %155 to i64, !dbg !3612
  store i64 %156, i64* %20, align 8, !dbg !3613
  br label %157, !dbg !3614

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3615
  call void @llvm.dbg.value(metadata i8* %159, metadata !3385, metadata !DIExpression()), !dbg !3513
  %160 = trunc i24 %79 to i4, !dbg !3616
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3616

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3617
  store i64 %162, i64* %20, align 8, !dbg !3620
  br label %177, !dbg !3621

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3622
  store i64 %164, i64* %20, align 8, !dbg !3625
  br label %177, !dbg !3626

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3627
  %167 = add i32 %166, 7, !dbg !3627
  %168 = and i32 %167, -8, !dbg !3627
  %169 = inttoptr i32 %168 to i8*, !dbg !3627
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3627
  call void @llvm.dbg.value(metadata i8* %170, metadata !3385, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i8* %170, metadata !3385, metadata !DIExpression()), !dbg !3513
  %171 = inttoptr i32 %168 to double*, !dbg !3627
  %172 = load double, double* %171, align 8, !dbg !3627
  store double %172, double* %19, align 8, !dbg !3627
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3631
  call void @llvm.dbg.value(metadata i8* %174, metadata !3385, metadata !DIExpression()), !dbg !3513
  %175 = bitcast i8* %77 to i8**, !dbg !3631
  %176 = load i8*, i8** %175, align 4, !dbg !3631
  store i8* %176, i8** %18, align 8, !dbg !3634
  br label %177, !dbg !3635

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3527
  call void @llvm.dbg.value(metadata i8* %178, metadata !3385, metadata !DIExpression()), !dbg !3513
  %179 = and i24 %75, 3, !dbg !3636
  %180 = icmp eq i24 %179, 0, !dbg !3636
  br i1 %180, label %185, label %181, !dbg !3636

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %182, metadata !3462, metadata !DIExpression()), !dbg !3638
  %183 = icmp slt i32 %182, 0, !dbg !3639
  %184 = add i32 %182, %29, !dbg !3637
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3513
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3641
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3642

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !3643
  call void @llvm.dbg.value(metadata i32 %188, metadata !3466, metadata !DIExpression()), !dbg !3644
  %189 = icmp slt i32 %188, 0, !dbg !3645
  %190 = add i32 %29, 1, !dbg !3643
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3513
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3647
  call void @llvm.dbg.value(metadata i8* %192, metadata !3454, metadata !DIExpression()), !dbg !3527
  %193 = icmp sgt i32 %76, -1, !dbg !3648
  br i1 %193, label %194, label %196, !dbg !3650

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !3651
  call void @llvm.dbg.value(metadata i32 %195, metadata !3469, metadata !DIExpression()), !dbg !3653
  br label %241, !dbg !3654

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !3655
  call void @llvm.dbg.value(metadata i32 %197, metadata !3469, metadata !DIExpression()), !dbg !3653
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3454, metadata !DIExpression()), !dbg !3527
  %199 = load i64, i64* %20, align 8, !dbg !3657
  %200 = trunc i64 %199 to i8, !dbg !3658
  store i8 %200, i8* %10, align 1, !dbg !3659
  call void @llvm.dbg.value(metadata i8* %23, metadata !3455, metadata !DIExpression()), !dbg !3527
  br label %245, !dbg !3660

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3661
  %203 = icmp eq i24 %202, 0, !dbg !3661
  %204 = trunc i24 %75 to i8, !dbg !3663
  %205 = shl i8 %204, 1, !dbg !3663
  %206 = and i8 %205, 32, !dbg !3663
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3663
  call void @llvm.dbg.value(metadata i8 %207, metadata !3456, metadata !DIExpression()), !dbg !3527
  %208 = load i64, i64* %20, align 8, !dbg !3664
  call void @llvm.dbg.value(metadata i64 %208, metadata !3392, metadata !DIExpression()), !dbg !3513
  %209 = icmp slt i64 %208, 0, !dbg !3665
  br i1 %209, label %210, label %212, !dbg !3667

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3456, metadata !DIExpression()), !dbg !3527
  %211 = sub nsw i64 0, %208, !dbg !3668
  store i64 %211, i64* %20, align 8, !dbg !3670
  br label %212, !dbg !3671

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3527
  call void @llvm.dbg.value(metadata i8 %213, metadata !3456, metadata !DIExpression()), !dbg !3527
  %214 = load i64, i64* %20, align 8, !dbg !3672
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3673
  call void @llvm.dbg.value(metadata i8* %215, metadata !3454, metadata !DIExpression()), !dbg !3527
  br label %216, !dbg !3674

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3675
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3676
  call void @llvm.dbg.value(metadata i8* %218, metadata !3454, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i8 %217, metadata !3456, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.label(metadata !3512), !dbg !3677
  %219 = icmp sgt i32 %76, -1, !dbg !3678
  br i1 %219, label %222, label %220, !dbg !3679

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3680
  br label %245, !dbg !3679

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3682
  %224 = sub i32 %22, %223, !dbg !3682
  call void @llvm.dbg.value(metadata i32 %224, metadata !3471, metadata !DIExpression()), !dbg !3683
  %225 = load i24, i24* %15, align 8, !dbg !3684
  %226 = and i24 %225, -65, !dbg !3684
  store i24 %226, i24* %15, align 8, !dbg !3684
  %227 = icmp ugt i32 %76, %224, !dbg !3685
  br i1 %227, label %228, label %245, !dbg !3687

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3688
  store i32 %229, i32* %16, align 4, !dbg !3690
  br label %245, !dbg !3691

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3692
  %232 = icmp eq i8* %231, null, !dbg !3694
  br i1 %232, label %245, label %233, !dbg !3695

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3696
  %235 = zext i32 %234 to i64, !dbg !3696
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3698
  call void @llvm.dbg.value(metadata i8* %236, metadata !3454, metadata !DIExpression()), !dbg !3527
  %237 = load i24, i24* %15, align 8, !dbg !3699
  %238 = or i24 %237, 1048576, !dbg !3699
  store i24 %238, i24* %15, align 8, !dbg !3699
  store i8 120, i8* %21, align 1, !dbg !3700
  br label %216, !dbg !3701

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3702
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !3705
  br label %363, !dbg !3706

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3707
  call void @llvm.dbg.value(metadata i32 %242, metadata !3469, metadata !DIExpression()), !dbg !3653
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3708
  call void @llvm.dbg.value(metadata i32 -1, metadata !3453, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 %29, metadata !3391, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i8* %192, metadata !3454, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i8* %243, metadata !3455, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i8 0, metadata !3456, metadata !DIExpression()), !dbg !3527
  %244 = icmp eq i8* %192, null, !dbg !3709
  br i1 %244, label %363, label %245, !dbg !3711, !llvm.loop !3523

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3680
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3527
  call void @llvm.dbg.value(metadata i32 0, metadata !3475, metadata !DIExpression()), !dbg !3527
  %250 = zext i8 %249 to i32, !dbg !3712
  %251 = icmp eq i8 %249, 0, !dbg !3714
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3527
  call void @llvm.dbg.value(metadata i32 undef, metadata !3474, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3527
  call void @llvm.dbg.value(metadata i32 undef, metadata !3474, metadata !DIExpression()), !dbg !3527
  %252 = icmp sgt i32 %58, 0, !dbg !3715
  br i1 %252, label %253, label %302, !dbg !3716

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3680
  %255 = icmp eq i24 %254, 0, !dbg !3680
  %256 = ptrtoint i8* %248 to i32, !dbg !3717
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3527
  %257 = ptrtoint i8* %247 to i32, !dbg !3717
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3527
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3527
  %258 = xor i1 %251, true, !dbg !3718
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3527
  %259 = sext i1 %258 to i32, !dbg !3718
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3527
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3527
  %260 = lshr i24 %246, 19, !dbg !3719
  %261 = and i24 %260, 1, !dbg !3719
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3719
  %263 = zext i24 %262 to i32, !dbg !3719
  %264 = add i32 %257, %259, !dbg !3719
  %265 = add i32 %256, %263, !dbg !3719
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3527
  %266 = and i24 %246, 4194304, !dbg !3720
  %267 = icmp eq i24 %266, 0, !dbg !3720
  %268 = load i32, i32* %16, align 4, !dbg !3722
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3527
  call void @llvm.dbg.value(metadata i32 undef, metadata !3474, metadata !DIExpression()), !dbg !3527
  %269 = load i32, i32* %17, align 8, !dbg !3723
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3723
  call void @llvm.dbg.value(metadata i32 undef, metadata !3474, metadata !DIExpression()), !dbg !3527
  %271 = add i32 %264, %58, !dbg !3723
  %272 = add i32 %265, %268, !dbg !3723
  %273 = add i32 %272, %270, !dbg !3724
  %274 = sub i32 %271, %273, !dbg !3724
  call void @llvm.dbg.value(metadata i32 %274, metadata !3452, metadata !DIExpression()), !dbg !3527
  %275 = and i24 %246, 4, !dbg !3725
  %276 = icmp eq i24 %275, 0, !dbg !3725
  br i1 %276, label %277, label %302, !dbg !3726

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3476, metadata !DIExpression()), !dbg !3727
  %278 = and i24 %246, 64, !dbg !3728
  %279 = icmp eq i24 %278, 0, !dbg !3728
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3729
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3729
  %282 = select i1 %279, i32 32, i32 48, !dbg !3729
  br i1 %280, label %287, label %283, !dbg !3729

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !3730
  call void @llvm.dbg.value(metadata i32 %284, metadata !3481, metadata !DIExpression()), !dbg !3731
  %285 = icmp slt i32 %284, 0, !dbg !3732
  %286 = add i32 %29, 1, !dbg !3730
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3513
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3527
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3517
  call void @llvm.dbg.value(metadata i32 %290, metadata !3391, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i8 undef, metadata !3476, metadata !DIExpression()), !dbg !3727
  call void @llvm.dbg.value(metadata i8 %288, metadata !3456, metadata !DIExpression()), !dbg !3527
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3734
  %292 = add i32 %291, -1, !dbg !3734
  br label %293, !dbg !3734

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3735
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3517
  call void @llvm.dbg.value(metadata i32 %295, metadata !3391, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %294, metadata !3452, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 %294, metadata !3452, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3527
  %296 = icmp sgt i32 %294, 0, !dbg !3736
  br i1 %296, label %297, label %302, !dbg !3734

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !3737
  call void @llvm.dbg.value(metadata i32 %298, metadata !3452, metadata !DIExpression()), !dbg !3527
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !3738
  call void @llvm.dbg.value(metadata i32 %299, metadata !3487, metadata !DIExpression()), !dbg !3739
  %300 = icmp slt i32 %299, 0, !dbg !3740
  %301 = add i32 %295, 1, !dbg !3738
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3513
  br i1 %300, label %361, label %293, !llvm.loop !3742

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3527
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3527
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3517
  call void @llvm.dbg.value(metadata i32 %305, metadata !3391, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %304, metadata !3452, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i8 %303, metadata !3456, metadata !DIExpression()), !dbg !3527
  %306 = icmp eq i8 %303, 0, !dbg !3744
  br i1 %306, label %312, label %307, !dbg !3745

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !3746
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !3747
  call void @llvm.dbg.value(metadata i32 %309, metadata !3490, metadata !DIExpression()), !dbg !3748
  %310 = icmp slt i32 %309, 0, !dbg !3749
  %311 = add i32 %305, 1, !dbg !3747
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3513
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3517
  call void @llvm.dbg.value(metadata i32 %313, metadata !3391, metadata !DIExpression()), !dbg !3513
  %314 = lshr i24 %246, 20, !dbg !3751
  %315 = lshr i24 %246, 19, !dbg !3752
  %316 = or i24 %314, %315, !dbg !3753
  %317 = and i24 %316, 1, !dbg !3753
  %318 = icmp eq i24 %317, 0, !dbg !3753
  br i1 %318, label %323, label %319, !dbg !3754

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3755
  call void @llvm.dbg.value(metadata i32 %320, metadata !3494, metadata !DIExpression()), !dbg !3756
  %321 = icmp slt i32 %320, 0, !dbg !3757
  %322 = add i32 %313, 1, !dbg !3755
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3513
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3517
  call void @llvm.dbg.value(metadata i32 %324, metadata !3391, metadata !DIExpression()), !dbg !3513
  %325 = and i24 %246, 1048576, !dbg !3759
  %326 = icmp eq i24 %325, 0, !dbg !3759
  br i1 %326, label %333, label %327, !dbg !3760

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !3761
  %329 = zext i8 %328 to i32, !dbg !3761
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !3761
  call void @llvm.dbg.value(metadata i32 %330, metadata !3500, metadata !DIExpression()), !dbg !3762
  %331 = icmp slt i32 %330, 0, !dbg !3763
  %332 = add i32 %324, 1, !dbg !3761
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3513
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3517
  call void @llvm.dbg.value(metadata i32 %334, metadata !3391, metadata !DIExpression()), !dbg !3513
  %335 = load i32, i32* %16, align 4, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %335, metadata !3475, metadata !DIExpression()), !dbg !3527
  br label %336, !dbg !3766

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !3767
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3517
  call void @llvm.dbg.value(metadata i32 %338, metadata !3391, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %337, metadata !3475, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3527
  %339 = icmp sgt i32 %337, 0, !dbg !3768
  br i1 %339, label %340, label %345, !dbg !3766

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !3769
  call void @llvm.dbg.value(metadata i32 %341, metadata !3475, metadata !DIExpression()), !dbg !3527
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3770
  call void @llvm.dbg.value(metadata i32 %342, metadata !3504, metadata !DIExpression()), !dbg !3771
  %343 = icmp slt i32 %342, 0, !dbg !3772
  %344 = add i32 %338, 1, !dbg !3770
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3513
  br i1 %343, label %361, label %336, !llvm.loop !3774

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !3776
  call void @llvm.dbg.value(metadata i32 %346, metadata !3507, metadata !DIExpression()), !dbg !3777
  %347 = icmp slt i32 %346, 0, !dbg !3778
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3513
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !3776
  call void @llvm.dbg.value(metadata i32 %349, metadata !3391, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %304, metadata !3452, metadata !DIExpression()), !dbg !3527
  %350 = icmp sgt i32 %304, 0, !dbg !3780
  br i1 %350, label %351, label %363, !dbg !3781

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !3781
  %353 = add i32 %352, %338, !dbg !3781
  br label %354, !dbg !3781

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %355, metadata !3452, metadata !DIExpression()), !dbg !3527
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !3782
  call void @llvm.dbg.value(metadata i32 %356, metadata !3509, metadata !DIExpression()), !dbg !3783
  %357 = icmp slt i32 %356, 0, !dbg !3784
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !3786
  call void @llvm.dbg.value(metadata i32 undef, metadata !3391, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3513
  call void @llvm.dbg.value(metadata i32 %359, metadata !3452, metadata !DIExpression()), !dbg !3527
  %360 = icmp sgt i32 %355, 1, !dbg !3780
  br i1 %360, label %354, label %363, !dbg !3781, !llvm.loop !3787

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3391, metadata !DIExpression()), !dbg !3513
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3524
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3517
  call void @llvm.dbg.value(metadata i32 %364, metadata !3391, metadata !DIExpression()), !dbg !3513
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3524
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3513
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3789
  ret i32 %366, !dbg !3789
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3790 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3794, metadata !DIExpression()), !dbg !3796
  call void @llvm.dbg.value(metadata i8* %1, metadata !3795, metadata !DIExpression()), !dbg !3796
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !3797
  store i24 0, i24* %3, align 4, !dbg !3797
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3797
  store i8 0, i8* %4, align 1, !dbg !3797
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3797
  store i32 0, i32* %5, align 4, !dbg !3797
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3797
  store i32 0, i32* %6, align 4, !dbg !3797
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3798
  call void @llvm.dbg.value(metadata i8* %7, metadata !3795, metadata !DIExpression()), !dbg !3796
  %8 = load i8, i8* %7, align 1, !dbg !3799
  %9 = icmp eq i8 %8, 37, !dbg !3801
  br i1 %9, label %10, label %12, !dbg !3802

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3803
  call void @llvm.dbg.value(metadata i8* %11, metadata !3795, metadata !DIExpression()), !dbg !3796
  store i8 37, i8* %4, align 1, !dbg !3805
  br label %18, !dbg !3806

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !3807
  call void @llvm.dbg.value(metadata i8* %13, metadata !3795, metadata !DIExpression()), !dbg !3796
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !3808
  call void @llvm.dbg.value(metadata i8* %14, metadata !3795, metadata !DIExpression()), !dbg !3796
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !3809
  call void @llvm.dbg.value(metadata i8* %15, metadata !3795, metadata !DIExpression()), !dbg !3796
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !3810
  call void @llvm.dbg.value(metadata i8* %16, metadata !3795, metadata !DIExpression()), !dbg !3796
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !3811
  call void @llvm.dbg.value(metadata i8* %17, metadata !3795, metadata !DIExpression()), !dbg !3796
  br label %18, !dbg !3812

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !3796
  ret i8* %19, !dbg !3813
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !3814 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3818, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i8* %1, metadata !3819, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i8* %2, metadata !3820, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i8* %3, metadata !3821, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i32 0, metadata !3822, metadata !DIExpression()), !dbg !3825
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !3826

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !3827
  call void @llvm.dbg.value(metadata i32 %9, metadata !3822, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i8* %8, metadata !3820, metadata !DIExpression()), !dbg !3825
  %10 = icmp ult i8* %8, %3, !dbg !3828
  br i1 %10, label %11, label %13, !dbg !3829

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !3830
  br label %17, !dbg !3829

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !3831

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !3832
  %16 = icmp eq i8 %15, 0, !dbg !3831
  br i1 %16, label %24, label %17, !dbg !3826

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !3830
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3833
  call void @llvm.dbg.value(metadata i8* %19, metadata !3820, metadata !DIExpression()), !dbg !3825
  %20 = zext i8 %18 to i32, !dbg !3834
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %21, metadata !3823, metadata !DIExpression()), !dbg !3836
  %22 = icmp slt i32 %21, 0, !dbg !3837
  %23 = add i32 %9, 1, !dbg !3839
  call void @llvm.dbg.value(metadata i32 undef, metadata !3822, metadata !DIExpression()), !dbg !3825
  br i1 %22, label %24, label %7, !llvm.loop !3840

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !3825
  ret i32 %25, !dbg !3842
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !3843 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3847, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !3848, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %2, metadata !3849, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %3, metadata !3850, metadata !DIExpression()), !dbg !3857
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !3858
  %6 = load i8, i8* %5, align 1, !dbg !3858
  %7 = zext i8 %6 to i32, !dbg !3859
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !3860
  %9 = icmp eq i32 %8, 0, !dbg !3860
  call void @llvm.dbg.value(metadata i1 %9, metadata !3851, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3857
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !3861
  call void @llvm.dbg.value(metadata i32 %10, metadata !3852, metadata !DIExpression()), !dbg !3857
  %11 = ptrtoint i8* %3 to i32, !dbg !3862
  %12 = ptrtoint i8* %2 to i32, !dbg !3862
  %13 = sub i32 %11, %12, !dbg !3862
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !3863
  call void @llvm.dbg.value(metadata i8* %14, metadata !3854, metadata !DIExpression()), !dbg !3857
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !3864

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !3857
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !3847, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %18, metadata !3854, metadata !DIExpression()), !dbg !3857
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !3865
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %25, metadata !3855, metadata !DIExpression()), !dbg !3867
  %26 = icmp ult i32 %25, 10, !dbg !3868
  %27 = select i1 %26, i32 48, i32 %16, !dbg !3869
  %28 = add i32 %27, %25, !dbg !3867
  %29 = trunc i32 %28 to i8, !dbg !3869
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !3870
  call void @llvm.dbg.value(metadata i8* %30, metadata !3854, metadata !DIExpression()), !dbg !3857
  store i8 %29, i8* %30, align 1, !dbg !3871
  call void @llvm.dbg.value(metadata i64 %22, metadata !3847, metadata !DIExpression()), !dbg !3857
  %31 = icmp uge i64 %19, %15, !dbg !3872
  %32 = icmp ugt i8* %30, %2, !dbg !3873
  %33 = and i1 %31, %32, !dbg !3873
  br i1 %33, label %17, label %34, !dbg !3874, !llvm.loop !3875

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !3877
  %36 = load i24, i24* %35, align 4, !dbg !3877
  %37 = and i24 %36, 32, !dbg !3877
  %38 = icmp eq i24 %37, 0, !dbg !3877
  br i1 %38, label %44, label %39, !dbg !3879

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !3880

40:                                               ; preds = %39
  br label %41, !dbg !3882

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !3886
  store i24 %43, i24* %35, align 4, !dbg !3886
  br label %44, !dbg !3887

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !3887
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !3888 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3894, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i8* %1, metadata !3895, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %2, metadata !3896, metadata !DIExpression()), !dbg !3897
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3898
  %5 = load i24, i24* %4, align 4, !dbg !3898
  %6 = lshr i24 %5, 11, !dbg !3898
  %7 = and i24 %6, 15, !dbg !3898
  %8 = zext i24 %7 to i32, !dbg !3898
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !3899

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !3900
  store i32 %2, i32* %10, align 4, !dbg !3902
  br label %28, !dbg !3903

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !3904
  store i8 %12, i8* %1, align 1, !dbg !3905
  br label %28, !dbg !3906

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !3907
  %15 = bitcast i8* %1 to i16*, !dbg !3908
  store i16 %14, i16* %15, align 2, !dbg !3909
  br label %28, !dbg !3910

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !3911
  store i32 %2, i32* %17, align 4, !dbg !3912
  br label %28, !dbg !3913

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !3914
  %20 = bitcast i8* %1 to i64*, !dbg !3915
  store i64 %19, i64* %20, align 8, !dbg !3916
  br label %28, !dbg !3917

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !3918
  %23 = bitcast i8* %1 to i64*, !dbg !3919
  store i64 %22, i64* %23, align 8, !dbg !3920
  br label %28, !dbg !3921

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !3922
  store i32 %2, i32* %25, align 4, !dbg !3923
  br label %28, !dbg !3924

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !3925
  store i32 %2, i32* %27, align 4, !dbg !3926
  br label %28, !dbg !3927

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !3928
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !3929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3932, metadata !DIExpression()), !dbg !3933
  %2 = add i32 %0, -65, !dbg !3934
  %3 = icmp ult i32 %2, 26, !dbg !3935
  %4 = zext i1 %3 to i32, !dbg !3935
  ret i32 %4, !dbg !3936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !3937 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3941, metadata !DIExpression()), !dbg !3942
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !3943

2:                                                ; preds = %1
  br label %4, !dbg !3944

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !3946

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !3947
  ret i32 %5, !dbg !3948
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !3949 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3951, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8* %1, metadata !3952, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8 1, metadata !3953, metadata !DIExpression()), !dbg !3954
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !3955

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !3953, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8* %5, metadata !3952, metadata !DIExpression()), !dbg !3954
  %6 = load i8, i8* %5, align 1, !dbg !3956
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !3958

7:                                                ; preds = %4
  br label %11, !dbg !3959

8:                                                ; preds = %4
  br label %11, !dbg !3961

9:                                                ; preds = %4
  br label %11, !dbg !3962

10:                                               ; preds = %4
  br label %11, !dbg !3963

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !3964
  %14 = or i24 %13, %12, !dbg !3964
  store i24 %14, i24* %3, align 4, !dbg !3964
  call void @llvm.dbg.value(metadata i8 poison, metadata !3953, metadata !DIExpression()), !dbg !3954
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !3952, metadata !DIExpression()), !dbg !3954
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !3953, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8* %15, metadata !3952, metadata !DIExpression()), !dbg !3954
  %17 = load i24, i24* %3, align 4, !dbg !3965
  %18 = and i24 %17, 68, !dbg !3967
  %19 = icmp eq i24 %18, 68, !dbg !3967
  br i1 %19, label %20, label %22, !dbg !3967

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !3968
  store i24 %21, i24* %3, align 4, !dbg !3968
  br label %22, !dbg !3970

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !3971
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3972 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3974, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.value(metadata i8* %1, metadata !3975, metadata !DIExpression()), !dbg !3978
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3979
  %5 = load i24, i24* %4, align 4, !dbg !3980
  %6 = or i24 %5, 128, !dbg !3980
  store i24 %6, i24* %4, align 4, !dbg !3980
  call void @llvm.dbg.value(metadata i8* %1, metadata !3975, metadata !DIExpression()), !dbg !3978
  %7 = load i8, i8* %1, align 1, !dbg !3981
  %8 = icmp eq i8 %7, 42, !dbg !3983
  br i1 %8, label %9, label %12, !dbg !3984

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !3985
  store i24 %10, i24* %4, align 4, !dbg !3985
  call void @llvm.dbg.value(metadata i8* %1, metadata !3975, metadata !DIExpression()), !dbg !3978
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3987
  call void @llvm.dbg.value(metadata i8* %11, metadata !3975, metadata !DIExpression()), !dbg !3978
  store i8* %11, i8** %3, align 4, !dbg !3987
  br label %29, !dbg !3988

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3976, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.value(metadata i8** %3, metadata !3975, metadata !DIExpression(DW_OP_deref)), !dbg !3978
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !3989
  call void @llvm.dbg.value(metadata i32 %13, metadata !3977, metadata !DIExpression()), !dbg !3978
  %14 = load i8*, i8** %3, align 4, !dbg !3990
  call void @llvm.dbg.value(metadata i8* %14, metadata !3975, metadata !DIExpression()), !dbg !3978
  %15 = icmp eq i8* %14, %1, !dbg !3992
  br i1 %15, label %29, label %16, !dbg !3993

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !3994
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3996
  store i32 %13, i32* %18, align 4, !dbg !3997
  %19 = lshr i32 %13, 31, !dbg !3998
  %20 = lshr i24 %17, 1, !dbg !3999
  %21 = and i24 %20, 1, !dbg !3999
  %22 = zext i24 %21 to i32, !dbg !3999
  %23 = or i32 %19, %22, !dbg !3999
  %24 = trunc i32 %23 to i24, !dbg !3999
  %25 = shl nuw nsw i24 %24, 1, !dbg !3999
  %26 = and i24 %17, -131, !dbg !3999
  %27 = or i24 %26, 128, !dbg !3999
  %28 = or i24 %25, %27, !dbg !3999
  store i24 %28, i24* %4, align 4, !dbg !3999
  br label %29, !dbg !4000

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !3978
  ret i8* %30, !dbg !4001
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4002 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4004, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i8* %1, metadata !4005, metadata !DIExpression()), !dbg !4007
  %4 = load i8, i8* %1, align 1, !dbg !4008
  %5 = icmp eq i8 %4, 46, !dbg !4009
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4010
  %7 = load i24, i24* %6, align 4, !dbg !4011
  %8 = select i1 %5, i24 512, i24 0, !dbg !4011
  %9 = and i24 %7, -513, !dbg !4011
  %10 = or i24 %9, %8, !dbg !4011
  store i24 %10, i24* %6, align 4, !dbg !4011
  br i1 %5, label %11, label %32, !dbg !4012

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4005, metadata !DIExpression()), !dbg !4007
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4013
  call void @llvm.dbg.value(metadata i8* %12, metadata !4005, metadata !DIExpression()), !dbg !4007
  store i8* %12, i8** %3, align 4, !dbg !4013
  %13 = load i8, i8* %12, align 1, !dbg !4014
  %14 = icmp eq i8 %13, 42, !dbg !4016
  br i1 %14, label %15, label %18, !dbg !4017

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4018
  store i24 %16, i24* %6, align 4, !dbg !4018
  call void @llvm.dbg.value(metadata i8* %12, metadata !4005, metadata !DIExpression()), !dbg !4007
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4020
  call void @llvm.dbg.value(metadata i8* %17, metadata !4005, metadata !DIExpression()), !dbg !4007
  store i8* %17, i8** %3, align 4, !dbg !4020
  br label %32, !dbg !4021

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4005, metadata !DIExpression(DW_OP_deref)), !dbg !4007
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4022
  call void @llvm.dbg.value(metadata i32 %19, metadata !4006, metadata !DIExpression()), !dbg !4007
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4023
  store i32 %19, i32* %20, align 4, !dbg !4024
  %21 = lshr i32 %19, 31, !dbg !4025
  %22 = load i24, i24* %6, align 4, !dbg !4026
  %23 = lshr i24 %22, 1, !dbg !4026
  %24 = and i24 %23, 1, !dbg !4026
  %25 = zext i24 %24 to i32, !dbg !4026
  %26 = or i32 %21, %25, !dbg !4026
  %27 = trunc i32 %26 to i24, !dbg !4026
  %28 = shl nuw nsw i24 %27, 1, !dbg !4026
  %29 = and i24 %22, -3, !dbg !4026
  %30 = or i24 %28, %29, !dbg !4026
  store i24 %30, i24* %6, align 4, !dbg !4026
  %31 = load i8*, i8** %3, align 4, !dbg !4027
  call void @llvm.dbg.value(metadata i8* %31, metadata !4005, metadata !DIExpression()), !dbg !4007
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4007
  ret i8* %33, !dbg !4028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4029 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4031, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata i8* %1, metadata !4032, metadata !DIExpression()), !dbg !4033
  %3 = load i8, i8* %1, align 1, !dbg !4034
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4035

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4036
  call void @llvm.dbg.value(metadata i8* %5, metadata !4032, metadata !DIExpression()), !dbg !4033
  %6 = load i8, i8* %5, align 1, !dbg !4039
  %7 = icmp eq i8 %6, 104, !dbg !4040
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4041
  %9 = load i24, i24* %8, align 4, !dbg !4041
  %10 = and i24 %9, -30721, !dbg !4041
  br i1 %7, label %11, label %14, !dbg !4042

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4043
  store i24 %12, i24* %8, align 4, !dbg !4043
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4045
  call void @llvm.dbg.value(metadata i8* %13, metadata !4032, metadata !DIExpression()), !dbg !4033
  br label %56, !dbg !4046

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4047
  store i24 %15, i24* %8, align 4, !dbg !4047
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4049
  call void @llvm.dbg.value(metadata i8* %17, metadata !4032, metadata !DIExpression()), !dbg !4033
  %18 = load i8, i8* %17, align 1, !dbg !4051
  %19 = icmp eq i8 %18, 108, !dbg !4052
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4053
  %21 = load i24, i24* %20, align 4, !dbg !4053
  %22 = and i24 %21, -30721, !dbg !4053
  br i1 %19, label %23, label %26, !dbg !4054

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4055
  store i24 %24, i24* %20, align 4, !dbg !4055
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4057
  call void @llvm.dbg.value(metadata i8* %25, metadata !4032, metadata !DIExpression()), !dbg !4033
  br label %56, !dbg !4058

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4059
  store i24 %27, i24* %20, align 4, !dbg !4059
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4061
  %30 = load i24, i24* %29, align 4, !dbg !4062
  %31 = and i24 %30, -30721, !dbg !4062
  %32 = or i24 %31, 10240, !dbg !4062
  store i24 %32, i24* %29, align 4, !dbg !4062
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4063
  call void @llvm.dbg.value(metadata i8* %33, metadata !4032, metadata !DIExpression()), !dbg !4033
  br label %56, !dbg !4064

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4065
  %36 = load i24, i24* %35, align 4, !dbg !4066
  %37 = and i24 %36, -30721, !dbg !4066
  %38 = or i24 %37, 12288, !dbg !4066
  store i24 %38, i24* %35, align 4, !dbg !4066
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4067
  call void @llvm.dbg.value(metadata i8* %39, metadata !4032, metadata !DIExpression()), !dbg !4033
  br label %56, !dbg !4068

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4069
  %42 = load i24, i24* %41, align 4, !dbg !4070
  %43 = and i24 %42, -30721, !dbg !4070
  %44 = or i24 %43, 14336, !dbg !4070
  store i24 %44, i24* %41, align 4, !dbg !4070
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4071
  call void @llvm.dbg.value(metadata i8* %45, metadata !4032, metadata !DIExpression()), !dbg !4033
  br label %56, !dbg !4072

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4073
  %48 = load i24, i24* %47, align 4, !dbg !4074
  %49 = and i24 %48, -30723, !dbg !4074
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4075
  call void @llvm.dbg.value(metadata i8* %50, metadata !4032, metadata !DIExpression()), !dbg !4033
  %51 = or i24 %49, 16386, !dbg !4076
  store i24 %51, i24* %47, align 4, !dbg !4076
  br label %56, !dbg !4077

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4078
  %54 = load i24, i24* %53, align 4, !dbg !4079
  %55 = and i24 %54, -30721, !dbg !4079
  store i24 %55, i24* %53, align 4, !dbg !4079
  br label %56, !dbg !4080

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4032, metadata !DIExpression()), !dbg !4033
  ret i8* %57, !dbg !4081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4082 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4084, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i8* %1, metadata !4085, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i8 0, metadata !4086, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i8* %1, metadata !4085, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4089
  %3 = load i8, i8* %1, align 1, !dbg !4090
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4091
  store i8 %3, i8* %4, align 1, !dbg !4092
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4093

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4094

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4095
  %9 = load i24, i24* %8, align 4, !dbg !4095
  %10 = and i24 %9, -458753, !dbg !4095
  %11 = or i24 %10, %7, !dbg !4095
  call void @llvm.dbg.label(metadata !4087), !dbg !4096
  %12 = and i24 %9, 30720, !dbg !4097
  %13 = icmp eq i24 %12, 16384, !dbg !4097
  %14 = zext i1 %13 to i24, !dbg !4099
  %15 = or i24 %11, %14, !dbg !4099
  %16 = icmp eq i8 %3, 99, !dbg !4100
  br i1 %16, label %17, label %43, !dbg !4102

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4103
  %19 = icmp ne i24 %18, 0, !dbg !4103
  call void @llvm.dbg.value(metadata i1 %19, metadata !4086, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4089
  br label %43, !dbg !4105

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4106
  %22 = load i24, i24* %21, align 4, !dbg !4107
  %23 = and i24 %22, -458753, !dbg !4107
  %24 = or i24 %23, 262144, !dbg !4107
  call void @llvm.dbg.value(metadata i8 1, metadata !4086, metadata !DIExpression()), !dbg !4089
  br label %43, !dbg !4108

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4111
  %27 = load i24, i24* %26, align 4, !dbg !4112
  %28 = and i24 %27, -458753, !dbg !4112
  %29 = or i24 %28, 196608, !dbg !4112
  %30 = and i24 %27, 30720, !dbg !4113
  %31 = icmp eq i24 %30, 16384, !dbg !4113
  br label %43, !dbg !4115

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4116
  %34 = load i24, i24* %33, align 4, !dbg !4117
  %35 = and i24 %34, -458753, !dbg !4117
  %36 = or i24 %35, 196608, !dbg !4117
  %37 = and i24 %34, 30720, !dbg !4118
  %38 = icmp ne i24 %37, 0, !dbg !4118
  br label %43, !dbg !4120

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4121
  %41 = load i24, i24* %40, align 4, !dbg !4122
  %42 = or i24 %41, 1, !dbg !4122
  br label %43, !dbg !4123

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4124
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4125
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4126
  call void @llvm.dbg.value(metadata i8* %48, metadata !4085, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i8 poison, metadata !4086, metadata !DIExpression()), !dbg !4089
  %49 = lshr i24 %44, 1, !dbg !4124
  %50 = and i24 %49, 1, !dbg !4124
  %51 = zext i24 %50 to i32, !dbg !4124
  %52 = or i32 %51, %47, !dbg !4124
  %53 = trunc i32 %52 to i24, !dbg !4124
  %54 = shl nuw nsw i24 %53, 1, !dbg !4124
  %55 = and i24 %44, -3, !dbg !4124
  %56 = or i24 %54, %55, !dbg !4124
  store i24 %56, i24* %46, align 4, !dbg !4124
  ret i8* %48, !dbg !4127
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4128 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4133, metadata !DIExpression()), !dbg !4136
  %2 = load i8*, i8** %0, align 4, !dbg !4137
  call void @llvm.dbg.value(metadata i8* %2, metadata !4134, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.value(metadata i32 0, metadata !4135, metadata !DIExpression()), !dbg !4136
  %3 = load i8, i8* %2, align 1, !dbg !4138
  %4 = zext i8 %3 to i32, !dbg !4139
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !4140
  %6 = icmp eq i32 %5, 0, !dbg !4141
  br i1 %6, label %19, label %7, !dbg !4141

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4135, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.value(metadata i8* %10, metadata !4134, metadata !DIExpression()), !dbg !4136
  %11 = mul i32 %9, 10, !dbg !4142
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4144
  call void @llvm.dbg.value(metadata i8* %12, metadata !4134, metadata !DIExpression()), !dbg !4136
  %13 = add i32 %11, -48, !dbg !4145
  %14 = add i32 %13, %8, !dbg !4146
  call void @llvm.dbg.value(metadata i32 %14, metadata !4135, metadata !DIExpression()), !dbg !4136
  %15 = load i8, i8* %12, align 1, !dbg !4138
  %16 = zext i8 %15 to i32, !dbg !4139
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !4140
  %18 = icmp eq i32 %17, 0, !dbg !4141
  br i1 %18, label %19, label %7, !dbg !4141, !llvm.loop !4147

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4136
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4136
  store i8* %20, i8** %0, align 4, !dbg !4149
  ret i32 %21, !dbg !4150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4153, metadata !DIExpression()), !dbg !4154
  %2 = add i32 %0, -48, !dbg !4155
  %3 = icmp ult i32 %2, 10, !dbg !4156
  %4 = zext i1 %3 to i32, !dbg !4156
  ret i32 %4, !dbg !4157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4158 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4160, !srcloc !4161
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4162, !srcloc !4163
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4164, !srcloc !4165
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4166, !srcloc !4167
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4168, !srcloc !4169
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4170, !srcloc !4171
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4172, !srcloc !4173
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4174, !srcloc !4175
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4176, !srcloc !4177
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4178, !srcloc !4179
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4180, !srcloc !4181
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4182, !srcloc !4183
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4184, !srcloc !4185
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4186, !srcloc !4187
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4188, !srcloc !4189
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4190, !srcloc !4191
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4192, !srcloc !4193
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4194, !srcloc !4195
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4196, !srcloc !4197
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4198, !srcloc !4199
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4200, !srcloc !4201
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,2048\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4202, !srcloc !4203
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4204, !srcloc !4205
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4206, !srcloc !4207
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4208, !srcloc !4209
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4210, !srcloc !4211
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4212, !srcloc !4213
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4214, !srcloc !4215
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4216, !srcloc !4217
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !4218, !srcloc !4219
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4220, !srcloc !4221
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4222, !srcloc !4223
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4224, !srcloc !4225
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !4226, !srcloc !4227
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !4228, !srcloc !4229
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !4230, !srcloc !4231
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !4232, !srcloc !4233
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4234, !srcloc !4235
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4236, !srcloc !4237
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4238, !srcloc !4239
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !4240, !srcloc !4241
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4242, !srcloc !4243
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !4244, !srcloc !4245
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4246, !srcloc !4247
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4248, !srcloc !4249
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !4250, !srcloc !4251
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4252, !srcloc !4253
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4254, !srcloc !4255
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4256, !srcloc !4257
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !4258, !srcloc !4259
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4260, !srcloc !4261
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4262, !srcloc !4263
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4264, !srcloc !4265
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4266, !srcloc !4267
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4268, !srcloc !4269
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4270, !srcloc !4271
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4272, !srcloc !4273
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4274, !srcloc !4275
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4276, !srcloc !4277
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4278, !srcloc !4279
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4280, !srcloc !4281
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4282, !srcloc !4283
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4284, !srcloc !4285
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4286, !srcloc !4287
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4288, !srcloc !4289
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4290, !srcloc !4291
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4292, !srcloc !4293
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4294, !srcloc !4295
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4296, !srcloc !4297
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4298, !srcloc !4299
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4300, !srcloc !4301
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4302, !srcloc !4303
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4304, !srcloc !4305
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4306, !srcloc !4307
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4308, !srcloc !4309
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4310, !srcloc !4311
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4312, !srcloc !4313
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4314, !srcloc !4315
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4316, !srcloc !4317
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4318, !srcloc !4319
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4320, !srcloc !4321
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4322, !srcloc !4323
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4324, !srcloc !4325
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4326, !srcloc !4327
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4328, !srcloc !4329
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4330, !srcloc !4331
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4332, !srcloc !4333
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4334, !srcloc !4335
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !4336, !srcloc !4337
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4338, !srcloc !4339
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4340, !srcloc !4341
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4342, !srcloc !4343
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4344, !srcloc !4345
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4346, !srcloc !4347
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !4348, !srcloc !4349
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4350, !srcloc !4351
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4352, !srcloc !4353
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4354, !srcloc !4355
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4356, !srcloc !4357
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4358, !srcloc !4359
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4360, !srcloc !4361
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4362, !srcloc !4363
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4364, !srcloc !4365
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4366, !srcloc !4367
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4368, !srcloc !4369
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4370, !srcloc !4371
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4372, !srcloc !4373
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4374, !srcloc !4375
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4376, !srcloc !4377
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4378, !srcloc !4379
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4380, !srcloc !4381
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4382, !srcloc !4383
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4384, !srcloc !4385
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4386, !srcloc !4387
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4388, !srcloc !4389
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4390, !srcloc !4391
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4392, !srcloc !4393
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4394, !srcloc !4395
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4396, !srcloc !4397
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4398, !srcloc !4399
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4400, !srcloc !4401
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4402, !srcloc !4403
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4404, !srcloc !4405
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4406, !srcloc !4407
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4408, !srcloc !4409
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4410, !srcloc !4411
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4412, !srcloc !4413
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4414, !srcloc !4415
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4416, !srcloc !4417
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4418, !srcloc !4419
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4420, !srcloc !4421
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4422, !srcloc !4423
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4424, !srcloc !4425
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4426, !srcloc !4427
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4428, !srcloc !4429
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4430, !srcloc !4431
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4432, !srcloc !4433
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4434, !srcloc !4435
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4436, !srcloc !4437
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4438, !srcloc !4439
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4440, !srcloc !4441
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4442, !srcloc !4443
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4444, !srcloc !4445
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4446, !srcloc !4447
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4448, !srcloc !4449
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4450, !srcloc !4451
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4452, !srcloc !4453
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4454, !srcloc !4455
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4456, !srcloc !4457
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4458, !srcloc !4459
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4460, !srcloc !4461
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !4462, !srcloc !4463
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4464, !srcloc !4465
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4466, !srcloc !4467
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4468, !srcloc !4469
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4470, !srcloc !4471
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4472, !srcloc !4473
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4474, !srcloc !4475
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4476, !srcloc !4477
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4478, !srcloc !4479
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4480, !srcloc !4481
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4482, !srcloc !4483
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4484, !srcloc !4485
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4486, !srcloc !4487
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4488, !srcloc !4489
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4490, !srcloc !4491
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4492, !srcloc !4493
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4494, !srcloc !4495
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4496, !srcloc !4497
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4498, !srcloc !4499
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4500, !srcloc !4501
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4502, !srcloc !4503
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4504, !srcloc !4505
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4506, !srcloc !4507
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4508, !srcloc !4509
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4510, !srcloc !4511
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4512, !srcloc !4513
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,1\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4514, !srcloc !4515
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4516, !srcloc !4517
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4518, !srcloc !4519
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4520, !srcloc !4521
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4522, !srcloc !4523
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4524, !srcloc !4525
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4526, !srcloc !4527
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4528, !srcloc !4529
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4530, !srcloc !4531
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4532, !srcloc !4533
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4534, !srcloc !4535
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4536, !srcloc !4537
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4538, !srcloc !4539
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4540, !srcloc !4541
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4542, !srcloc !4543
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4544, !srcloc !4545
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4546, !srcloc !4547
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4548, !srcloc !4549
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4550, !srcloc !4551
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4552, !srcloc !4553
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4554, !srcloc !4555
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4556, !srcloc !4557
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4558, !srcloc !4559
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4560, !srcloc !4561
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4562, !srcloc !4563
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !4564, !srcloc !4565
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4566, !srcloc !4567
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4568, !srcloc !4569
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4570, !srcloc !4571
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4572, !srcloc !4573
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4574, !srcloc !4575
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4576, !srcloc !4577
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4578, !srcloc !4579
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4580, !srcloc !4581
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4582, !srcloc !4583
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4584, !srcloc !4585
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4586, !srcloc !4587
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4588, !srcloc !4589
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !4590, !srcloc !4591
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4592, !srcloc !4593
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !4594, !srcloc !4595
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4596, !srcloc !4597
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4598, !srcloc !4599
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4600, !srcloc !4601
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4602, !srcloc !4603
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4604, !srcloc !4605
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4606, !srcloc !4607
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4608, !srcloc !4609
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4610, !srcloc !4611
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4612, !srcloc !4613
  tail call void asm sideeffect ".globl\09CONFIG_IPM\0A\09.equ\09CONFIG_IPM,1\0A\09.type\09CONFIG_IPM,%object", ""() #23, !dbg !4614, !srcloc !4615
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4616, !srcloc !4617
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4618, !srcloc !4619
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4620, !srcloc !4621
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4622, !srcloc !4623
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4624, !srcloc !4625
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4626, !srcloc !4627
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4628, !srcloc !4629
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4630, !srcloc !4631
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4632, !srcloc !4633
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4634, !srcloc !4635
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4636, !srcloc !4637
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4638, !srcloc !4639
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4640, !srcloc !4641
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4642, !srcloc !4643
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4644, !srcloc !4645
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4646, !srcloc !4647
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4648, !srcloc !4649
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4650, !srcloc !4651
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4652, !srcloc !4653
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4654, !srcloc !4655
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4656, !srcloc !4657
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4658, !srcloc !4659
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4660, !srcloc !4661
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4662, !srcloc !4663
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4664, !srcloc !4665
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4666, !srcloc !4667
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4668, !srcloc !4669
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4670, !srcloc !4671
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4672, !srcloc !4673
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4674, !srcloc !4675
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4676, !srcloc !4677
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4678, !srcloc !4679
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4680, !srcloc !4681
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !4682, !srcloc !4683
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !4684, !srcloc !4685
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !4686, !srcloc !4687
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !4688, !srcloc !4689
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !4690, !srcloc !4691
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !4692, !srcloc !4693
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !4694, !srcloc !4695
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !4696, !srcloc !4697
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !4698, !srcloc !4699
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !4700, !srcloc !4701
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !4702, !srcloc !4703
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !4704, !srcloc !4705
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !4706, !srcloc !4707
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !4708, !srcloc !4709
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !4710, !srcloc !4711
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !4712, !srcloc !4713
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !4714, !srcloc !4715
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !4716, !srcloc !4717
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !4718, !srcloc !4719
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !4720, !srcloc !4721
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !4722, !srcloc !4723
  ret void, !dbg !4724
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4725 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4727, metadata !DIExpression()), !dbg !4729
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !4730
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !4731
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4732, !srcloc !4741
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4732
  call void @llvm.dbg.value(metadata i32 %3, metadata !4738, metadata !DIExpression()) #23, !dbg !4742
  call void @llvm.dbg.value(metadata i32 undef, metadata !4739, metadata !DIExpression()) #23, !dbg !4742
  call void @llvm.dbg.value(metadata i32 %3, metadata !4728, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %3, metadata !4743, metadata !DIExpression()) #23, !dbg !4748
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !4750, !srcloc !4751
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !4752
  ret i32 0, !dbg !4753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !4754 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4756
  %2 = or i32 %1, 512, !dbg !4756
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4756
  ret void, !dbg !4757
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !4758 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4759
  %2 = or i32 %1, 1024, !dbg !4759
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4759
  ret void, !dbg !4760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !4761 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4763, metadata !DIExpression()), !dbg !4764
  ret i32 0, !dbg !4765
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !4766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4815, metadata !DIExpression()), !dbg !4817
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !4816, metadata !DIExpression()), !dbg !4817
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !4818
  ret void, !dbg !4819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !4820 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !4837, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !4838, metadata !DIExpression()), !dbg !4840
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4841
  %4 = load i32, i32* %3, align 4, !dbg !4841
  call void @llvm.dbg.value(metadata i32 %4, metadata !4839, metadata !DIExpression()), !dbg !4840
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !4842
  ret void, !dbg !4843
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #3 !dbg !4844 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4848, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata i8* %0, metadata !4849, metadata !DIExpression()), !dbg !4851
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !4852
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !4852
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !4850, metadata !DIExpression()), !dbg !4853
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !4853
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4854
  %5 = bitcast i8* %4 to i32*, !dbg !4854
  %6 = load i32, i32* %5, align 4, !dbg !4854
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !4855
  store i32 %6, i32* %7, align 4, !dbg !4856
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !4857
  unreachable, !dbg !4858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !4859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4862, metadata !DIExpression()), !dbg !4863
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !4864
  ret void, !dbg !4865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4870, metadata !DIExpression()), !dbg !4871
  %2 = icmp sgt i32 %0, -1, !dbg !4872
  br i1 %2, label %3, label %8, !dbg !4874

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4875, !srcloc !4877
  %4 = and i32 %0, 31, !dbg !4878
  %5 = shl nuw i32 1, %4, !dbg !4879
  %6 = lshr i32 %0, 5, !dbg !4880
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4881
  store volatile i32 %5, i32* %7, align 4, !dbg !4882
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4883, !srcloc !4884
  br label %8, !dbg !4885

8:                                                ; preds = %3, %1
  ret void, !dbg !4886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !4887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4889, metadata !DIExpression()), !dbg !4890
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !4891
  ret void, !dbg !4892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4895, metadata !DIExpression()), !dbg !4896
  %2 = icmp sgt i32 %0, -1, !dbg !4897
  br i1 %2, label %3, label %8, !dbg !4899

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4900
  %5 = shl nuw i32 1, %4, !dbg !4902
  %6 = lshr i32 %0, 5, !dbg !4903
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4904
  store volatile i32 %5, i32* %7, align 4, !dbg !4905
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4906, !srcloc !4910
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4911, !srcloc !4914
  br label %8, !dbg !4915

8:                                                ; preds = %3, %1
  ret void, !dbg !4916
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !4917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4921, metadata !DIExpression()), !dbg !4922
  %2 = lshr i32 %0, 5, !dbg !4923
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !4924
  %4 = load volatile i32, i32* %3, align 4, !dbg !4924
  %5 = and i32 %0, 31, !dbg !4925
  %6 = shl nuw i32 1, %5, !dbg !4925
  %7 = and i32 %4, %6, !dbg !4926
  ret i32 %7, !dbg !4927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !4928 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4932, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %1, metadata !4933, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %2, metadata !4934, metadata !DIExpression()), !dbg !4935
  %4 = add i32 %1, 1, !dbg !4936
  call void @llvm.dbg.value(metadata i32 %4, metadata !4933, metadata !DIExpression()), !dbg !4935
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !4939
  ret void, !dbg !4940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4945, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i32 %1, metadata !4946, metadata !DIExpression()), !dbg !4947
  %3 = trunc i32 %1 to i8, !dbg !4948
  %4 = shl i8 %3, 4, !dbg !4948
  %5 = and i32 %0, 15, !dbg !4950
  %6 = add nsw i32 %5, -4, !dbg !4950
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4950
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4950
  %9 = icmp slt i32 %0, 0, !dbg !4950
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4950
  store volatile i8 %4, i8* %10, align 1, !dbg !4948
  ret void, !dbg !4951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !4952 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4954, metadata !DIExpression()), !dbg !4955
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !4956
  ret void, !dbg !4957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !4958 {
  tail call void @z_SysNmiOnReset() #24, !dbg !4960
  tail call void @z_arm_int_exit() #24, !dbg !4961
  ret void, !dbg !4962
}

; Function Attrs: optsize
declare !dbg !4963 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !4964 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #3 !dbg !4966 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !4968
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !4969
  tail call void @z_bss_zero() #24, !dbg !4970
  tail call void @z_data_copy() #24, !dbg !4971
  tail call void @z_arm_interrupt_init() #24, !dbg !4972
  tail call void @z_cstart() #27, !dbg !4973
  unreachable, !dbg !4973
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !4974 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !4975
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4976, !srcloc !4979
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4980, !srcloc !4983
  ret void, !dbg !4984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !4985 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4986
  %2 = and i32 %1, -15728641, !dbg !4986
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4986
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !4987, !srcloc !4994
  call void @llvm.dbg.value(metadata i32 %3, metadata !4992, metadata !DIExpression()) #23, !dbg !4995
  %4 = and i32 %3, -5, !dbg !4996
  call void @llvm.dbg.value(metadata i32 %4, metadata !4997, metadata !DIExpression()) #23, !dbg !5002
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !5004, !srcloc !5005
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5006, !srcloc !4983
  ret void, !dbg !5008
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5012, metadata !DIExpression()), !dbg !5013
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5014
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5015
  store i32 %0, i32* %3, align 4, !dbg !5016
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5017
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5018
  store i32 %4, i32* %5, align 4, !dbg !5019
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5020
  %7 = or i32 %6, 268435456, !dbg !5020
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5020
  call void @llvm.dbg.value(metadata i32 0, metadata !5021, metadata !DIExpression()) #23, !dbg !5024
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5026, !srcloc !5027
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5028
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5029
  %10 = load i32, i32* %9, align 4, !dbg !5029
  ret i32 %10, !dbg !5030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !5031 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5141, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5142, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %2, metadata !5143, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5144, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %4, metadata !5145, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %5, metadata !5146, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %6, metadata !5147, metadata !DIExpression()), !dbg !5149
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5150
  call void @llvm.dbg.value(metadata i8* %8, metadata !5148, metadata !DIExpression()), !dbg !5149
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5151
  %10 = bitcast i8* %9 to i32*, !dbg !5151
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5152
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5153
  %12 = bitcast i8* %8 to i32*, !dbg !5154
  store i32 %11, i32* %12, align 4, !dbg !5155
  %13 = ptrtoint i8* %4 to i32, !dbg !5156
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5157
  %15 = bitcast i8* %14 to i32*, !dbg !5157
  store i32 %13, i32* %15, align 4, !dbg !5158
  %16 = ptrtoint i8* %5 to i32, !dbg !5159
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5160
  %18 = bitcast i8* %17 to i32*, !dbg !5160
  store i32 %16, i32* %18, align 4, !dbg !5161
  %19 = ptrtoint i8* %6 to i32, !dbg !5162
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5163
  %21 = bitcast i8* %20 to i32*, !dbg !5163
  store i32 %19, i32* %21, align 4, !dbg !5164
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5165
  %23 = bitcast i8* %22 to i32*, !dbg !5165
  store i32 16777216, i32* %23, align 4, !dbg !5166
  %24 = ptrtoint i8* %8 to i32, !dbg !5167
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5168
  store i32 %24, i32* %25, align 8, !dbg !5169
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5170
  store i32 0, i32* %26, align 4, !dbg !5171
  ret void, !dbg !5172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !5173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5178, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i32 %1, metadata !5179, metadata !DIExpression()), !dbg !5184
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5185
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5180, metadata !DIExpression()), !dbg !5184
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5186
  br i1 %4, label %19, label %5, !dbg !5188

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5183, metadata !DIExpression()), !dbg !5184
  %6 = icmp eq i32 %0, -22, !dbg !5189
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5189
  %8 = load i32, i32* %7, align 4, !dbg !5189
  br i1 %6, label %16, label %9, !dbg !5191

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5189
  %11 = icmp ule i32 %10, %0, !dbg !5189
  %12 = icmp ugt i32 %8, %0, !dbg !5189
  %13 = and i1 %12, %11, !dbg !5189
  %14 = icmp ugt i32 %8, %1, !dbg !5189
  %15 = and i1 %14, %13, !dbg !5189
  br i1 %15, label %18, label %19, !dbg !5189

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5189
  br i1 %17, label %18, label %19, !dbg !5191

18:                                               ; preds = %9, %16
  br label %19, !dbg !5192

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5184
  ret i32 %20, !dbg !5194
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #3 !dbg !5195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5199, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i8* %1, metadata !5200, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5201, metadata !DIExpression()), !dbg !5202
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5203
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !5204
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5205, !srcloc !5206
  unreachable, !dbg !5207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5208 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5226, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i32 %1, metadata !5227, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i32 %2, metadata !5228, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5229, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i32 0, metadata !5230, metadata !DIExpression()), !dbg !5236
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5237
  %9 = and i32 %8, 511, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %9, metadata !5231, metadata !DIExpression()), !dbg !5236
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5239
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5239
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5240
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5240
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5235, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata i32 0, metadata !5242, metadata !DIExpression()) #23, !dbg !5245
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5247, !srcloc !5248
  call void @llvm.dbg.value(metadata i8* %6, metadata !5233, metadata !DIExpression(DW_OP_deref)), !dbg !5236
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !5249
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5234, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i8* %5, metadata !5232, metadata !DIExpression(DW_OP_deref)), !dbg !5236
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !5250
  call void @llvm.dbg.value(metadata i32 %12, metadata !5230, metadata !DIExpression()), !dbg !5236
  %13 = load i8, i8* %5, align 1, !dbg !5251, !range !5253
  call void @llvm.dbg.value(metadata i8 %13, metadata !5232, metadata !DIExpression()), !dbg !5236
  %14 = icmp eq i8 %13, 0, !dbg !5251
  br i1 %14, label %15, label %32, !dbg !5254

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5255
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !5256
  %18 = load i8, i8* %6, align 1, !dbg !5257, !range !5253
  call void @llvm.dbg.value(metadata i8 %18, metadata !5233, metadata !DIExpression()), !dbg !5236
  %19 = icmp eq i8 %18, 0, !dbg !5257
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5259
  %21 = load i32, i32* %20, align 4, !dbg !5259
  br i1 %19, label %27, label %22, !dbg !5260

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5261
  %24 = icmp eq i32 %23, 0, !dbg !5264
  br i1 %24, label %25, label %31, !dbg !5265

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5266
  br label %29, !dbg !5268

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5269
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5259
  br label %31, !dbg !5271

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !5271
  br label %32, !dbg !5272

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5272
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5272
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5272
  ret void, !dbg !5272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !5273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5278, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i32 %1, metadata !5279, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i32 %2, metadata !5280, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i8* %3, metadata !5281, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i8 0, metadata !5282, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5283, metadata !DIExpression()), !dbg !5284
  store i8 0, i8* %3, align 1, !dbg !5285
  %5 = icmp ult i32 %2, -16777216, !dbg !5286
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5288
  br i1 %8, label %16, label %9, !dbg !5288

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5289
  %11 = icmp eq i32 %10, 0, !dbg !5289
  br i1 %11, label %12, label %13, !dbg !5291

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5283, metadata !DIExpression()), !dbg !5284
  store i8 1, i8* %3, align 1, !dbg !5294
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5284
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5283, metadata !DIExpression()), !dbg !5284
  br label %16, !dbg !5297

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5284
  ret %struct.__esf* %17, !dbg !5298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5299 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5303, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i32 %1, metadata !5304, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i8* %2, metadata !5305, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression()), !dbg !5307
  store i8 0, i8* %2, align 1, !dbg !5308
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5309

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !5310
  call void @llvm.dbg.value(metadata i32 %5, metadata !5306, metadata !DIExpression()), !dbg !5307
  br label %11, !dbg !5312

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5313
  call void @llvm.dbg.value(metadata i32 %7, metadata !5306, metadata !DIExpression()), !dbg !5307
  br label %11, !dbg !5314

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5315
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression()), !dbg !5307
  br label %11, !dbg !5316

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !5317
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression()), !dbg !5307
  br label %11, !dbg !5318

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !5319
  br label %11, !dbg !5320

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5322 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5326, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i8* %1, metadata !5327, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i32 0, metadata !5328, metadata !DIExpression()), !dbg !5329
  store i8 0, i8* %1, align 1, !dbg !5330
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5331
  %4 = and i32 %3, 2, !dbg !5333
  %5 = icmp eq i32 %4, 0, !dbg !5334
  br i1 %5, label %6, label %33, !dbg !5335

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5336
  %8 = icmp sgt i32 %7, -1, !dbg !5338
  br i1 %8, label %9, label %33, !dbg !5339

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5340
  %11 = and i32 %10, 1073741824, !dbg !5342
  %12 = icmp eq i32 %11, 0, !dbg !5343
  br i1 %12, label %33, label %13, !dbg !5344

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !5345
  br i1 %14, label %15, label %18, !dbg !5348

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5349
  %17 = load i32, i32* %16, align 4, !dbg !5349
  call void @llvm.dbg.value(metadata i32 %17, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %33, !dbg !5351

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5352
  %20 = and i32 %19, 255, !dbg !5354
  %21 = icmp eq i32 %20, 0, !dbg !5355
  br i1 %21, label %24, label %22, !dbg !5356

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5357
  call void @llvm.dbg.value(metadata i32 %23, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %33, !dbg !5359

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5360
  %26 = and i32 %25, 65280, !dbg !5362
  %27 = icmp eq i32 %26, 0, !dbg !5363
  br i1 %27, label %29, label %28, !dbg !5364

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5365
  call void @llvm.dbg.value(metadata i32 0, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %33, !dbg !5367

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5368
  %31 = icmp ult i32 %30, 65536, !dbg !5370
  br i1 %31, label %33, label %32, !dbg !5371

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #25, !dbg !5372
  call void @llvm.dbg.value(metadata i32 0, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %33, !dbg !5374

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5329
  call void @llvm.dbg.value(metadata i32 %34, metadata !5328, metadata !DIExpression()), !dbg !5329
  ret i32 %34, !dbg !5375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5376 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5378, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 %1, metadata !5379, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i8* %2, metadata !5380, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 0, metadata !5381, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 -22, metadata !5382, metadata !DIExpression()), !dbg !5391
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5392
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5394
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5396
  %7 = and i32 %6, 2, !dbg !5397
  %8 = icmp eq i32 %7, 0, !dbg !5398
  br i1 %8, label %19, label %9, !dbg !5399

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5400
  call void @llvm.dbg.value(metadata i32 %10, metadata !5383, metadata !DIExpression()), !dbg !5401
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5402
  %12 = and i32 %11, 128, !dbg !5404
  %13 = icmp eq i32 %12, 0, !dbg !5405
  br i1 %13, label %19, label %14, !dbg !5406

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5382, metadata !DIExpression()), !dbg !5391
  %15 = icmp eq i32 %1, 0, !dbg !5407
  br i1 %15, label %19, label %16, !dbg !5410

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5411
  %18 = and i32 %17, -129, !dbg !5411
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5411
  br label %19, !dbg !5413

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5391
  call void @llvm.dbg.value(metadata i32 %20, metadata !5382, metadata !DIExpression()), !dbg !5391
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5414
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5416
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5418
  %24 = and i32 %23, 16, !dbg !5419
  %25 = icmp eq i32 %24, 0, !dbg !5419
  br i1 %25, label %26, label %30, !dbg !5420

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5421
  %28 = and i32 %27, 2, !dbg !5422
  %29 = icmp eq i32 %28, 0, !dbg !5422
  br i1 %29, label %39, label %30, !dbg !5423

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5424
  %32 = and i32 %31, 2048, !dbg !5425
  %33 = icmp eq i32 %32, 0, !dbg !5425
  br i1 %33, label %39, label %34, !dbg !5426

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5427
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #24, !dbg !5428
  call void @llvm.dbg.value(metadata i32 %36, metadata !5386, metadata !DIExpression()), !dbg !5429
  %37 = icmp eq i32 %36, 0, !dbg !5430
  br i1 %37, label %39, label %38, !dbg !5432

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5433, metadata !DIExpression()) #23, !dbg !5436
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5439, !srcloc !5440
  call void @llvm.dbg.value(metadata i32 2, metadata !5381, metadata !DIExpression()), !dbg !5391
  br label %39, !dbg !5441

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5391
  call void @llvm.dbg.value(metadata i32 %40, metadata !5381, metadata !DIExpression()), !dbg !5391
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5442
  %42 = and i32 %41, 32, !dbg !5444
  %43 = icmp eq i32 %42, 0, !dbg !5445
  br i1 %43, label %47, label %44, !dbg !5446

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5447
  %46 = and i32 %45, -8193, !dbg !5447
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5447
  br label %47, !dbg !5449

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5450
  %49 = or i32 %48, 255, !dbg !5450
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5450
  store i8 0, i8* %2, align 1, !dbg !5451
  ret i32 %40, !dbg !5452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !5453 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5457, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.value(metadata i32 %0, metadata !5458, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.value(metadata i8* %1, metadata !5459, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.value(metadata i32 0, metadata !5460, metadata !DIExpression()), !dbg !5464
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5465
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5467
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5469
  %6 = and i32 %5, 512, !dbg !5470
  %7 = icmp eq i32 %6, 0, !dbg !5470
  br i1 %7, label %18, label %8, !dbg !5471

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5472
  call void @llvm.dbg.value(metadata i32 %9, metadata !5461, metadata !DIExpression()), !dbg !5473
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5474
  %11 = and i32 %10, 32768, !dbg !5476
  %12 = icmp ne i32 %11, 0, !dbg !5477
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5478
  br i1 %14, label %15, label %18, !dbg !5478

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5479
  %17 = and i32 %16, -32769, !dbg !5479
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5479
  br label %18, !dbg !5483

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5484
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5486
  %21 = and i32 %20, 256, !dbg !5488
  %22 = icmp eq i32 %21, 0, !dbg !5489
  br i1 %22, label %23, label %25, !dbg !5490

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5491
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5493
  %27 = or i32 %26, 65280, !dbg !5493
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5493
  store i8 0, i8* %1, align 1, !dbg !5494
  ret void, !dbg !5495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !5496 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5502, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i32 0, metadata !5503, metadata !DIExpression()), !dbg !5504
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5505
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5507
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5509
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5511
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5513
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5515
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5517
  %8 = or i32 %7, -65536, !dbg !5517
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5517
  ret void, !dbg !5518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !5519 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5523, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i8* %0, metadata !5524, metadata !DIExpression()), !dbg !5525
  store i8 0, i8* %0, align 1, !dbg !5526
  ret void, !dbg !5527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5528 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5532, metadata !DIExpression()), !dbg !5535
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5536
  %3 = load i32, i32* %2, align 4, !dbg !5536
  %4 = inttoptr i32 %3 to i16*, !dbg !5537
  call void @llvm.dbg.value(metadata i16* %4, metadata !5533, metadata !DIExpression()), !dbg !5535
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5538
  %6 = or i32 %5, 256, !dbg !5538
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5538
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5539, !srcloc !5542
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5543, !srcloc !5546
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5547
  %8 = load i16, i16* %7, align 2, !dbg !5548
  call void @llvm.dbg.value(metadata i16 %8, metadata !5534, metadata !DIExpression()), !dbg !5535
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5549
  %10 = and i32 %9, -257, !dbg !5549
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5549
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5550, !srcloc !5542
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5552, !srcloc !5546
  %11 = icmp eq i16 %8, -8446, !dbg !5554
  ret i1 %11, !dbg !5556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !5557 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5558
  %2 = or i32 %1, 16, !dbg !5558
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5558
  ret void, !dbg !5559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !5560 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5563, metadata !DIExpression()), !dbg !5564
  br label %1, !dbg !5565

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5563, metadata !DIExpression()), !dbg !5564
  tail call fastcc void @__NVIC_SetPriority.11(i32 noundef %2) #25, !dbg !5567
  %3 = add nuw nsw i32 %2, 1, !dbg !5570
  call void @llvm.dbg.value(metadata i32 %3, metadata !5563, metadata !DIExpression()), !dbg !5564
  %4 = icmp eq i32 %3, 97, !dbg !5571
  br i1 %4, label %5, label %1, !dbg !5565, !llvm.loop !5572

5:                                                ; preds = %1
  ret void, !dbg !5574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.11(i32 noundef %0) unnamed_addr #13 !dbg !5575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5577, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.value(metadata i32 1, metadata !5578, metadata !DIExpression()), !dbg !5579
  %2 = and i32 %0, 15, !dbg !5580
  %3 = add nsw i32 %2, -4, !dbg !5580
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5580
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5580
  %6 = icmp slt i32 %0, 0, !dbg !5580
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5580
  store volatile i8 16, i8* %7, align 1, !dbg !5581
  ret void, !dbg !5583
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5690, metadata !DIExpression()), !dbg !5691
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5692
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !5694
  br i1 %3, label %4, label %12, !dbg !5695

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !5696, !srcloc !5708
  call void @llvm.dbg.value(metadata i32 %5, metadata !5699, metadata !DIExpression()) #23, !dbg !5709
  %6 = icmp eq i32 %5, 0, !dbg !5710
  br i1 %6, label %12, label %7, !dbg !5711

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5712
  %9 = or i32 %8, 268435456, !dbg !5712
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5712
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5714
  %11 = and i32 %10, -32769, !dbg !5714
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5714
  br label %12, !dbg !5715

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !5716
  ret void, !dbg !5717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !5718 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !5719
  ret void, !dbg !5720
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !264 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !388, metadata !DIExpression()), !dbg !5721
  call void @llvm.dbg.value(metadata i8 0, metadata !389, metadata !DIExpression()), !dbg !5721
  call void @llvm.dbg.value(metadata i32 64, metadata !391, metadata !DIExpression()), !dbg !5721
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !5722
  %3 = load i32, i32* %2, align 4, !dbg !5722
  %4 = add i32 %3, -64, !dbg !5724
  call void @llvm.dbg.value(metadata i32 %4, metadata !390, metadata !DIExpression()), !dbg !5721
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !5725
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !5726
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !5727
  call void @llvm.dbg.value(metadata i8 1, metadata !389, metadata !DIExpression()), !dbg !5721
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !5728
  ret void, !dbg !5729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !5730 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5731
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5732, !srcloc !5735
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5736, !srcloc !5739
  ret void, !dbg !5740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !5741 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !5742, !srcloc !5745
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5746
  ret void, !dbg !5747
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !5748 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5763, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata i8 %1, metadata !5764, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata i32 %2, metadata !5765, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata i32 %3, metadata !5766, metadata !DIExpression()), !dbg !5767
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !5768
  ret void, !dbg !5770
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5771 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5776, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.value(metadata i8 %1, metadata !5777, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.value(metadata i32 undef, metadata !5778, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.value(metadata i32 undef, metadata !5779, metadata !DIExpression()), !dbg !5781
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5782
  call void @llvm.dbg.value(metadata i8 %3, metadata !5780, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5781
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !5783
  call void @llvm.dbg.value(metadata i32 %4, metadata !5780, metadata !DIExpression()), !dbg !5781
  %5 = trunc i32 %4 to i8, !dbg !5784
  store i8 %5, i8* @static_regions_num, align 1, !dbg !5785
  ret void, !dbg !5786
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !5787 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5791, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i8 %1, metadata !5792, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i8 %2, metadata !5793, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i1 %3, metadata !5794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5797
  %5 = zext i8 %2 to i32, !dbg !5798
  call void @llvm.dbg.value(metadata i32 %5, metadata !5796, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 0, metadata !5795, metadata !DIExpression()), !dbg !5797
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !5796, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 0, metadata !5795, metadata !DIExpression()), !dbg !5797
  %7 = icmp eq i8 %1, 0, !dbg !5799
  br i1 %7, label %29, label %8, !dbg !5802

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5796, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 %10, metadata !5795, metadata !DIExpression()), !dbg !5797
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !5803
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !5806
  %13 = load i32, i32* %12, align 4, !dbg !5806
  %14 = icmp eq i32 %13, 0, !dbg !5807
  br i1 %14, label %25, label %15, !dbg !5808

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !5809

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5811
  %18 = icmp eq i32 %17, 0, !dbg !5811
  br i1 %18, label %29, label %19, !dbg !5812

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !5813
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5814
  call void @llvm.dbg.value(metadata i32 %21, metadata !5796, metadata !DIExpression()), !dbg !5797
  %22 = icmp eq i32 %21, -22, !dbg !5815
  br i1 %22, label %29, label %23, !dbg !5817

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !5818
  call void @llvm.dbg.value(metadata i32 %24, metadata !5796, metadata !DIExpression()), !dbg !5797
  br label %25, !dbg !5819

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !5797
  call void @llvm.dbg.value(metadata i32 %26, metadata !5796, metadata !DIExpression()), !dbg !5797
  %27 = add nuw nsw i32 %10, 1, !dbg !5820
  call void @llvm.dbg.value(metadata i32 %27, metadata !5795, metadata !DIExpression()), !dbg !5797
  %28 = icmp eq i32 %27, %6, !dbg !5799
  br i1 %28, label %29, label %8, !dbg !5802, !llvm.loop !5821

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !5797
  ret i32 %30, !dbg !5823
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !5824 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5828, metadata !DIExpression()), !dbg !5830
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !5831
  %3 = load i32, i32* %2, align 4, !dbg !5831
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !5832, !range !5833
  %5 = icmp ult i32 %4, 2, !dbg !5832
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !5834
  br i1 %7, label %8, label %15, !dbg !5834

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !5835
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !5836
  %11 = load i32, i32* %10, align 4, !dbg !5836
  %12 = and i32 %11, %9, !dbg !5837
  %13 = icmp eq i32 %12, 0, !dbg !5838
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5829, metadata !DIExpression()), !dbg !5830
  ret i32 %16, !dbg !5839
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !5840 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5844, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !5845, metadata !DIExpression()), !dbg !5847
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !5848
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5848
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !5846, metadata !DIExpression()), !dbg !5849
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !5850
  %6 = load i32, i32* %5, align 4, !dbg !5850
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !5851
  store i32 %6, i32* %7, align 4, !dbg !5852
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !5853
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !5854
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !5855
  %11 = load i32, i32* %10, align 4, !dbg !5855
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* noundef nonnull %8, %union.anon.1* noundef nonnull %9, i32 noundef %11) #25, !dbg !5856
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !5857
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5858
  ret i32 %12, !dbg !5859
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* nocapture noundef writeonly %0, %union.anon.1* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !5860 {
  call void @llvm.dbg.value(metadata %union.anon.1* %0, metadata !5867, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata %union.anon.1* %1, metadata !5868, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata i32 undef, metadata !5869, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata i32 %2, metadata !5870, metadata !DIExpression()), !dbg !5871
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %1, i32 0, i32 0, !dbg !5872
  %5 = load i32, i32* %4, align 4, !dbg !5872
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !5873
  %7 = or i32 %6, %5, !dbg !5874
  %8 = getelementptr inbounds %union.anon.1, %union.anon.1* %0, i32 0, i32 0, !dbg !5875
  store i32 %7, i32* %8, align 4, !dbg !5876
  ret void, !dbg !5877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5878 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5882, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5883, metadata !DIExpression()), !dbg !5884
  %3 = zext i8 %0 to i32, !dbg !5885
  %4 = icmp ugt i8 %0, 7, !dbg !5887
  br i1 %4, label %6, label %5, !dbg !5888

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !5889
  br label %6, !dbg !5890

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !5884
  ret i32 %7, !dbg !5891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5892 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5896, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5897, metadata !DIExpression()), !dbg !5898
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !5899
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !5900
  %4 = load i32, i32* %3, align 4, !dbg !5900
  %5 = and i32 %4, -32, !dbg !5901
  %6 = or i32 %5, %0, !dbg !5902
  %7 = or i32 %6, 16, !dbg !5902
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !5903
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !5904
  %9 = load i32, i32* %8, align 4, !dbg !5904
  %10 = or i32 %9, 1, !dbg !5905
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5906
  ret void, !dbg !5907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !5908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5911, metadata !DIExpression()), !dbg !5912
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5913
  ret void, !dbg !5914
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !5915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5919, metadata !DIExpression()), !dbg !5920
  %2 = icmp ult i32 %0, 33, !dbg !5921
  br i1 %2, label %11, label %3, !dbg !5923

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !5924
  br i1 %4, label %11, label %5, !dbg !5926

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !5927
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !5928, !range !5833
  %8 = mul nsw i32 %7, -2, !dbg !5929
  %9 = add nsw i32 %8, 62, !dbg !5929
  %10 = and i32 %9, 62, !dbg !5930
  br label %11, !dbg !5931

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !5920
  ret i32 %12, !dbg !5932
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !5933 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5937, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i8 %1, metadata !5938, metadata !DIExpression()), !dbg !5939
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !5940
  ret void, !dbg !5942
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5943 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5947, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata i8 %1, metadata !5948, metadata !DIExpression()), !dbg !5954
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5955
  call void @llvm.dbg.value(metadata i8 %3, metadata !5949, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5954
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !5956
  call void @llvm.dbg.value(metadata i32 %4, metadata !5949, metadata !DIExpression()), !dbg !5954
  %5 = icmp ne i32 %4, -22, !dbg !5957
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !5958
  call void @llvm.dbg.value(metadata i32 %4, metadata !5950, metadata !DIExpression()), !dbg !5959
  br i1 %7, label %8, label %12, !dbg !5958

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5950, metadata !DIExpression()), !dbg !5959
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !5960
  %10 = add i32 %9, 1, !dbg !5963
  call void @llvm.dbg.value(metadata i32 %10, metadata !5950, metadata !DIExpression()), !dbg !5959
  %11 = icmp eq i32 %10, 8, !dbg !5964
  br i1 %11, label %12, label %8, !dbg !5965, !llvm.loop !5966

12:                                               ; preds = %8, %2
  ret void, !dbg !5968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !5969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()), !dbg !5973
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5974
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5975
  ret void, !dbg !5976
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !5977 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !5982
  %2 = icmp ugt i32 %1, 8, !dbg !5984
  br i1 %2, label %14, label %3, !dbg !5985

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !5986
  call void @llvm.dbg.value(metadata i32 0, metadata !5981, metadata !DIExpression()), !dbg !5987
  %4 = icmp eq i32 %1, 0, !dbg !5988
  br i1 %4, label %12, label %5, !dbg !5991

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !5991

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5981, metadata !DIExpression()), !dbg !5987
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !5992
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #25, !dbg !5994
  %10 = add nuw i32 %8, 1, !dbg !5995
  call void @llvm.dbg.value(metadata i32 %10, metadata !5981, metadata !DIExpression()), !dbg !5987
  %11 = icmp eq i32 %10, %1, !dbg !5988
  br i1 %11, label %12, label %7, !dbg !5991, !llvm.loop !5996

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !5998
  store i8 %13, i8* @static_regions_num, align 1, !dbg !5999
  tail call void @arm_core_mpu_enable() #25, !dbg !6000
  br label %14, !dbg !6001

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !5987
  ret i32 %15, !dbg !6002
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6003 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6010, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata i8* %1, metadata !6011, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata i8* %0, metadata !6012, metadata !DIExpression()), !dbg !6013
  %3 = load i8, i8* %1, align 1, !dbg !6014
  %4 = icmp eq i8 %3, 0, !dbg !6015
  br i1 %4, label %13, label %5, !dbg !6016

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6010, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata i8* %8, metadata !6011, metadata !DIExpression()), !dbg !6013
  store i8 %6, i8* %7, align 1, !dbg !6017
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6019
  call void @llvm.dbg.value(metadata i8* %9, metadata !6010, metadata !DIExpression()), !dbg !6013
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6020
  call void @llvm.dbg.value(metadata i8* %10, metadata !6011, metadata !DIExpression()), !dbg !6013
  %11 = load i8, i8* %10, align 1, !dbg !6014
  %12 = icmp eq i8 %11, 0, !dbg !6015
  br i1 %12, label %13, label %5, !dbg !6016, !llvm.loop !6021

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6023
  ret i8* %0, !dbg !6024
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6025 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6029, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %1, metadata !6030, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %2, metadata !6031, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %0, metadata !6032, metadata !DIExpression()), !dbg !6033
  %4 = icmp eq i32 %2, 0, !dbg !6034
  br i1 %4, label %22, label %5, !dbg !6035

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6029, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %7, metadata !6031, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %8, metadata !6030, metadata !DIExpression()), !dbg !6033
  %9 = load i8, i8* %8, align 1, !dbg !6036
  %10 = icmp eq i8 %9, 0, !dbg !6037
  br i1 %10, label %16, label %11, !dbg !6038

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6039
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6041
  call void @llvm.dbg.value(metadata i8* %12, metadata !6030, metadata !DIExpression()), !dbg !6033
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6042
  call void @llvm.dbg.value(metadata i8* %13, metadata !6029, metadata !DIExpression()), !dbg !6033
  %14 = add i32 %7, -1, !dbg !6043
  call void @llvm.dbg.value(metadata i32 %14, metadata !6031, metadata !DIExpression()), !dbg !6033
  %15 = icmp eq i32 %14, 0, !dbg !6034
  br i1 %15, label %22, label %5, !dbg !6035, !llvm.loop !6044

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6029, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %18, metadata !6031, metadata !DIExpression()), !dbg !6033
  store i8 0, i8* %17, align 1, !dbg !6046
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6048
  call void @llvm.dbg.value(metadata i8* %19, metadata !6029, metadata !DIExpression()), !dbg !6033
  %20 = add i32 %18, -1, !dbg !6049
  call void @llvm.dbg.value(metadata i32 %20, metadata !6031, metadata !DIExpression()), !dbg !6033
  %21 = icmp eq i32 %20, 0, !dbg !6050
  br i1 %21, label %22, label %16, !dbg !6051, !llvm.loop !6052

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6054
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6055 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6059, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i32 %1, metadata !6060, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i32 %1, metadata !6061, metadata !DIExpression()), !dbg !6062
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6063

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6059, metadata !DIExpression()), !dbg !6062
  %6 = load i8, i8* %5, align 1, !dbg !6064
  %7 = icmp eq i8 %6, %3, !dbg !6065
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6066
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6067
  call void @llvm.dbg.value(metadata i8* %10, metadata !6059, metadata !DIExpression()), !dbg !6062
  br i1 %9, label %11, label %4, !dbg !6066, !llvm.loop !6069

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6071
  ret i8* %12, !dbg !6072
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6073 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6075, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i32 %1, metadata !6076, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i8* null, metadata !6077, metadata !DIExpression()), !dbg !6078
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6079

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6078
  call void @llvm.dbg.value(metadata i8* %6, metadata !6077, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i8* %5, metadata !6075, metadata !DIExpression()), !dbg !6078
  %7 = load i8, i8* %5, align 1, !dbg !6080
  %8 = icmp eq i8 %7, %3, !dbg !6083
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6084
  call void @llvm.dbg.value(metadata i8* %9, metadata !6077, metadata !DIExpression()), !dbg !6078
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6085
  call void @llvm.dbg.value(metadata i8* %10, metadata !6075, metadata !DIExpression()), !dbg !6078
  %11 = icmp eq i8 %7, 0, !dbg !6086
  br i1 %11, label %12, label %4, !dbg !6086, !llvm.loop !6087

12:                                               ; preds = %4
  ret i8* %9, !dbg !6089
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !6090 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6094, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 0, metadata !6095, metadata !DIExpression()), !dbg !6096
  %2 = load i8, i8* %0, align 1, !dbg !6097
  %3 = icmp eq i8 %2, 0, !dbg !6098
  br i1 %3, label %11, label %4, !dbg !6099

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6095, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %6, metadata !6094, metadata !DIExpression()), !dbg !6096
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6100
  call void @llvm.dbg.value(metadata i8* %7, metadata !6094, metadata !DIExpression()), !dbg !6096
  %8 = add i32 %5, 1, !dbg !6102
  call void @llvm.dbg.value(metadata i32 %8, metadata !6095, metadata !DIExpression()), !dbg !6096
  %9 = load i8, i8* %7, align 1, !dbg !6097
  %10 = icmp eq i8 %9, 0, !dbg !6098
  br i1 %10, label %11, label %4, !dbg !6099, !llvm.loop !6103

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6096
  ret i32 %12, !dbg !6105
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6106 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6110, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.value(metadata i32 %1, metadata !6111, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.value(metadata i32 0, metadata !6112, metadata !DIExpression()), !dbg !6113
  %3 = load i8, i8* %0, align 1, !dbg !6114
  %4 = icmp ne i8 %3, 0, !dbg !6115
  %5 = icmp ne i32 %1, 0, !dbg !6116
  %6 = and i1 %4, %5, !dbg !6116
  br i1 %6, label %7, label %16, !dbg !6117

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6112, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.value(metadata i8* %9, metadata !6110, metadata !DIExpression()), !dbg !6113
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6118
  call void @llvm.dbg.value(metadata i8* %10, metadata !6110, metadata !DIExpression()), !dbg !6113
  %11 = add nuw i32 %8, 1, !dbg !6120
  call void @llvm.dbg.value(metadata i32 %11, metadata !6112, metadata !DIExpression()), !dbg !6113
  %12 = load i8, i8* %10, align 1, !dbg !6114
  %13 = icmp ne i8 %12, 0, !dbg !6115
  %14 = icmp ult i32 %11, %1, !dbg !6116
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6116
  br i1 %15, label %7, label %16, !dbg !6117, !llvm.loop !6121

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6113
  ret i32 %17, !dbg !6123
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6124 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6128, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i8* %1, metadata !6129, metadata !DIExpression()), !dbg !6130
  %3 = load i8, i8* %0, align 1, !dbg !6131
  %4 = load i8, i8* %1, align 1, !dbg !6132
  %5 = icmp ne i8 %3, %4, !dbg !6133
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6134
  br i1 %7, label %18, label %8, !dbg !6134

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6129, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i8* %10, metadata !6128, metadata !DIExpression()), !dbg !6130
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6135
  call void @llvm.dbg.value(metadata i8* %11, metadata !6128, metadata !DIExpression()), !dbg !6130
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6137
  call void @llvm.dbg.value(metadata i8* %12, metadata !6129, metadata !DIExpression()), !dbg !6130
  %13 = load i8, i8* %11, align 1, !dbg !6131
  %14 = load i8, i8* %12, align 1, !dbg !6132
  %15 = icmp ne i8 %13, %14, !dbg !6133
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6134
  br i1 %17, label %18, label %8, !dbg !6134, !llvm.loop !6138

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6131
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6132
  %21 = zext i8 %19 to i32, !dbg !6141
  %22 = zext i8 %20 to i32, !dbg !6142
  %23 = sub nsw i32 %21, %22, !dbg !6143
  ret i32 %23, !dbg !6144
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6145 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6149, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i8* %1, metadata !6150, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i32 %2, metadata !6151, metadata !DIExpression()), !dbg !6152
  %4 = icmp eq i32 %2, 0, !dbg !6153
  br i1 %4, label %23, label %5, !dbg !6153

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6151, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i8* %7, metadata !6150, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i8* %8, metadata !6149, metadata !DIExpression()), !dbg !6152
  %9 = load i8, i8* %8, align 1, !dbg !6154
  %10 = load i8, i8* %7, align 1, !dbg !6155
  %11 = icmp ne i8 %9, %10, !dbg !6156
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6157
  br i1 %13, label %19, label %14, !dbg !6157

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6158
  call void @llvm.dbg.value(metadata i8* %15, metadata !6149, metadata !DIExpression()), !dbg !6152
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6160
  call void @llvm.dbg.value(metadata i8* %16, metadata !6150, metadata !DIExpression()), !dbg !6152
  %17 = add i32 %6, -1, !dbg !6161
  call void @llvm.dbg.value(metadata i32 %17, metadata !6151, metadata !DIExpression()), !dbg !6152
  %18 = icmp eq i32 %17, 0, !dbg !6153
  br i1 %18, label %23, label %5, !dbg !6153, !llvm.loop !6162

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6165
  %21 = zext i8 %10 to i32, !dbg !6166
  %22 = sub nsw i32 %20, %21, !dbg !6167
  br label %23, !dbg !6168

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6168
  ret i32 %24, !dbg !6169
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6170 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6175, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i8* %1, metadata !6176, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i8** %2, metadata !6177, metadata !DIExpression()), !dbg !6180
  %4 = icmp eq i8* %0, null, !dbg !6181
  br i1 %4, label %5, label %7, !dbg !6181

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6182
  br label %7, !dbg !6181

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6181
  call void @llvm.dbg.value(metadata i8* %8, metadata !6178, metadata !DIExpression()), !dbg !6180
  %9 = load i8, i8* %8, align 1, !dbg !6183
  %10 = icmp eq i8 %9, 0, !dbg !6183
  br i1 %10, label %33, label %11, !dbg !6184

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6178, metadata !DIExpression()), !dbg !6180
  %14 = zext i8 %12 to i32, !dbg !6183
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !6185
  %16 = icmp eq i8* %15, null, !dbg !6184
  br i1 %16, label %21, label %17, !dbg !6186

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6187
  call void @llvm.dbg.value(metadata i8* %18, metadata !6178, metadata !DIExpression()), !dbg !6180
  %19 = load i8, i8* %18, align 1, !dbg !6183
  %20 = icmp eq i8 %19, 0, !dbg !6183
  br i1 %20, label %33, label %11, !dbg !6184, !llvm.loop !6189

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6179, metadata !DIExpression()), !dbg !6180
  %24 = zext i8 %22 to i32, !dbg !6191
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !6192
  %26 = icmp eq i8* %25, null, !dbg !6193
  br i1 %26, label %27, label %31, !dbg !6194

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6195
  call void @llvm.dbg.value(metadata i8* %28, metadata !6179, metadata !DIExpression()), !dbg !6180
  %29 = load i8, i8* %28, align 1, !dbg !6191
  %30 = icmp eq i8 %29, 0, !dbg !6191
  br i1 %30, label %33, label %21, !dbg !6197, !llvm.loop !6198

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6200
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6203
  br label %33, !dbg !6204

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6180
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6180
  store i8* %34, i8** %2, align 4, !dbg !6180
  ret i8* %35, !dbg !6205
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6206 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6208, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.value(metadata i8* %1, metadata !6209, metadata !DIExpression()), !dbg !6210
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6211
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6212
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !6213
  ret i8* %0, !dbg !6214
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6215 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6217, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i8* %1, metadata !6218, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i32 %2, metadata !6219, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i8* %0, metadata !6220, metadata !DIExpression()), !dbg !6222
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6223
  call void @llvm.dbg.value(metadata i32 %4, metadata !6221, metadata !DIExpression()), !dbg !6222
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6224
  call void @llvm.dbg.value(metadata i8* %5, metadata !6217, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i8* %1, metadata !6218, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i32 %2, metadata !6219, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i32 %2, metadata !6219, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6222
  %6 = icmp eq i32 %2, 0, !dbg !6225
  br i1 %6, label %18, label %7, !dbg !6226

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6227
  call void @llvm.dbg.value(metadata i8* %9, metadata !6217, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i8* %10, metadata !6218, metadata !DIExpression()), !dbg !6222
  %12 = load i8, i8* %10, align 1, !dbg !6228
  %13 = icmp eq i8 %12, 0, !dbg !6229
  br i1 %13, label %18, label %14, !dbg !6230

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6231
  call void @llvm.dbg.value(metadata i8* %15, metadata !6218, metadata !DIExpression()), !dbg !6222
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6233
  call void @llvm.dbg.value(metadata i8* %16, metadata !6217, metadata !DIExpression()), !dbg !6222
  store i8 %12, i8* %9, align 1, !dbg !6234
  call void @llvm.dbg.value(metadata i32 %11, metadata !6219, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i32 %11, metadata !6219, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6222
  %17 = icmp eq i32 %11, 0, !dbg !6225
  br i1 %17, label %18, label %7, !dbg !6226, !llvm.loop !6235

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6222
  store i8 0, i8* %19, align 1, !dbg !6237
  ret i8* %0, !dbg !6238
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6239 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6243, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %1, metadata !6244, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i32 %2, metadata !6245, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %0, metadata !6246, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %1, metadata !6247, metadata !DIExpression()), !dbg !6248
  %4 = icmp eq i32 %2, 0, !dbg !6249
  br i1 %4, label %31, label %5, !dbg !6251

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6247, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %0, metadata !6246, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i32 %2, metadata !6245, metadata !DIExpression()), !dbg !6248
  %6 = add i32 %2, -1, !dbg !6252
  call void @llvm.dbg.value(metadata i32 %6, metadata !6245, metadata !DIExpression()), !dbg !6248
  %7 = icmp eq i32 %6, 0, !dbg !6253
  br i1 %7, label %23, label %8, !dbg !6254

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6255
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6255
  br label %11, !dbg !6255

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6247, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %14, metadata !6246, metadata !DIExpression()), !dbg !6248
  %15 = load i8, i8* %14, align 1, !dbg !6256
  %16 = load i8, i8* %13, align 1, !dbg !6257
  %17 = icmp eq i8 %15, %16, !dbg !6258
  br i1 %17, label %18, label %23, !dbg !6255

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6259
  call void @llvm.dbg.value(metadata i8* %19, metadata !6246, metadata !DIExpression()), !dbg !6248
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6261
  call void @llvm.dbg.value(metadata i8* %20, metadata !6247, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i32 %12, metadata !6245, metadata !DIExpression()), !dbg !6248
  %21 = add i32 %12, -1, !dbg !6252
  call void @llvm.dbg.value(metadata i32 %21, metadata !6245, metadata !DIExpression()), !dbg !6248
  %22 = icmp eq i32 %21, 0, !dbg !6253
  br i1 %22, label %23, label %11, !dbg !6254, !llvm.loop !6262

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6248
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6248
  %26 = load i8, i8* %24, align 1, !dbg !6264
  %27 = zext i8 %26 to i32, !dbg !6264
  %28 = load i8, i8* %25, align 1, !dbg !6265
  %29 = zext i8 %28 to i32, !dbg !6265
  %30 = sub nsw i32 %27, %29, !dbg !6266
  br label %31, !dbg !6267

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6248
  ret i32 %32, !dbg !6268
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6273, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %1, metadata !6274, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %2, metadata !6275, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %0, metadata !6276, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %1, metadata !6277, metadata !DIExpression()), !dbg !6278
  %4 = ptrtoint i8* %0 to i32, !dbg !6279
  %5 = ptrtoint i8* %1 to i32, !dbg !6279
  %6 = sub i32 %4, %5, !dbg !6279
  %7 = icmp ult i32 %6, %2, !dbg !6281
  br i1 %7, label %10, label %8, !dbg !6282

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6277, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %0, metadata !6276, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %2, metadata !6275, metadata !DIExpression()), !dbg !6278
  %9 = icmp eq i32 %2, 0, !dbg !6283
  br i1 %9, label %26, label %17, !dbg !6285

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6275, metadata !DIExpression()), !dbg !6278
  %12 = add i32 %11, -1, !dbg !6286
  call void @llvm.dbg.value(metadata i32 %12, metadata !6275, metadata !DIExpression()), !dbg !6278
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6289
  %14 = load i8, i8* %13, align 1, !dbg !6289
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6290
  store i8 %14, i8* %15, align 1, !dbg !6291
  %16 = icmp eq i32 %12, 0, !dbg !6292
  br i1 %16, label %26, label %10, !dbg !6293, !llvm.loop !6294

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6277, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %19, metadata !6276, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %20, metadata !6275, metadata !DIExpression()), !dbg !6278
  %21 = load i8, i8* %18, align 1, !dbg !6296
  store i8 %21, i8* %19, align 1, !dbg !6298
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6299
  call void @llvm.dbg.value(metadata i8* %22, metadata !6276, metadata !DIExpression()), !dbg !6278
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6300
  call void @llvm.dbg.value(metadata i8* %23, metadata !6277, metadata !DIExpression()), !dbg !6278
  %24 = add i32 %20, -1, !dbg !6301
  call void @llvm.dbg.value(metadata i32 %24, metadata !6275, metadata !DIExpression()), !dbg !6278
  %25 = icmp eq i32 %24, 0, !dbg !6283
  br i1 %25, label %26, label %17, !dbg !6285, !llvm.loop !6302

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6304
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6305 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6311, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i8* %1, metadata !6312, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i32 %2, metadata !6313, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i8* %0, metadata !6314, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i8* %1, metadata !6315, metadata !DIExpression()), !dbg !6316
  %4 = icmp eq i32 %2, 0, !dbg !6317
  br i1 %4, label %14, label %5, !dbg !6318

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6315, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i8* %7, metadata !6314, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i32 %8, metadata !6313, metadata !DIExpression()), !dbg !6316
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6319
  call void @llvm.dbg.value(metadata i8* %9, metadata !6315, metadata !DIExpression()), !dbg !6316
  %10 = load i8, i8* %6, align 1, !dbg !6321
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6322
  call void @llvm.dbg.value(metadata i8* %11, metadata !6314, metadata !DIExpression()), !dbg !6316
  store i8 %10, i8* %7, align 1, !dbg !6323
  %12 = add i32 %8, -1, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %12, metadata !6313, metadata !DIExpression()), !dbg !6316
  %13 = icmp eq i32 %12, 0, !dbg !6317
  br i1 %13, label %14, label %5, !dbg !6318, !llvm.loop !6325

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6327
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6332, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i32 %1, metadata !6333, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i32 %2, metadata !6334, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8* %0, metadata !6335, metadata !DIExpression()), !dbg !6337
  %4 = trunc i32 %1 to i8, !dbg !6338
  call void @llvm.dbg.value(metadata i8 %4, metadata !6336, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i32 %2, metadata !6334, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8* %0, metadata !6335, metadata !DIExpression()), !dbg !6337
  %5 = icmp eq i32 %2, 0, !dbg !6339
  br i1 %5, label %12, label %6, !dbg !6340

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6334, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8* %8, metadata !6335, metadata !DIExpression()), !dbg !6337
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6341
  call void @llvm.dbg.value(metadata i8* %9, metadata !6335, metadata !DIExpression()), !dbg !6337
  store i8 %4, i8* %8, align 1, !dbg !6343
  %10 = add i32 %7, -1, !dbg !6344
  call void @llvm.dbg.value(metadata i32 %10, metadata !6334, metadata !DIExpression()), !dbg !6337
  %11 = icmp eq i32 %10, 0, !dbg !6339
  br i1 %11, label %12, label %6, !dbg !6340, !llvm.loop !6345

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6347
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6348 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6352, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata i32 %1, metadata !6353, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata i32 %2, metadata !6354, metadata !DIExpression()), !dbg !6358
  %4 = icmp eq i32 %2, 0, !dbg !6359
  br i1 %4, label %17, label %5, !dbg !6360

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6361

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6362
  call void @llvm.dbg.value(metadata i8* %9, metadata !6355, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %8, metadata !6354, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata i8* %9, metadata !6355, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6362
  %10 = load i8, i8* %9, align 1, !dbg !6363
  %11 = icmp eq i8 %10, %6, !dbg !6366
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6367
  call void @llvm.dbg.value(metadata i8* %12, metadata !6355, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %13, metadata !6354, metadata !DIExpression()), !dbg !6358
  br i1 %15, label %16, label %7, !dbg !6367, !llvm.loop !6368

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6370

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6358
  ret i8* %19, !dbg !6371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !6372 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6374, metadata !DIExpression()), !dbg !6375
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6376
  ret void, !dbg !6377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6380, metadata !DIExpression()), !dbg !6381
  ret i32 -1, !dbg !6382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6387, metadata !DIExpression()), !dbg !6389
  call void @llvm.dbg.value(metadata i32* %1, metadata !6388, metadata !DIExpression()), !dbg !6389
  %3 = ptrtoint i32* %1 to i32, !dbg !6390
  %4 = and i32 %3, -2, !dbg !6390
  %5 = icmp eq i32 %4, 2, !dbg !6390
  br i1 %5, label %6, label %9, !dbg !6390

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6391
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !6391
  br label %9, !dbg !6392

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6392
  ret i32 %10, !dbg !6393
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6396, metadata !DIExpression()), !dbg !6398
  call void @llvm.dbg.value(metadata i32* %1, metadata !6397, metadata !DIExpression()), !dbg !6398
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6399
  ret i32 %3, !dbg !6400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6404, metadata !DIExpression()), !dbg !6406
  call void @llvm.dbg.value(metadata i32* %1, metadata !6405, metadata !DIExpression()), !dbg !6406
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6407, !srcloc !6409
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6410
  ret i32 %3, !dbg !6411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6412 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6417, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i32* %1, metadata !6418, metadata !DIExpression()), !dbg !6421
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6422
  call void @llvm.dbg.value(metadata i32 %3, metadata !6419, metadata !DIExpression()), !dbg !6421
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !6423
  call void @llvm.dbg.value(metadata i32 %4, metadata !6420, metadata !DIExpression()), !dbg !6421
  %5 = icmp ne i32 %3, %4, !dbg !6424
  %6 = sext i1 %5 to i32, !dbg !6425
  ret i32 %6, !dbg !6426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6427 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6431, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i32 %1, metadata !6432, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i32 %2, metadata !6433, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i32* %3, metadata !6434, metadata !DIExpression()), !dbg !6435
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6436
  ret i32 %5, !dbg !6437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6438 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6440, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.value(metadata i32 %1, metadata !6441, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.value(metadata i32 %2, metadata !6442, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.value(metadata i32* %3, metadata !6443, metadata !DIExpression()), !dbg !6444
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6445, !srcloc !6447
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6448
  ret i32 %5, !dbg !6449
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6450 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6452, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %1, metadata !6453, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %2, metadata !6454, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32* %3, metadata !6455, metadata !DIExpression()), !dbg !6460
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6461
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6463
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6463
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6463
  br i1 %11, label %33, label %12, !dbg !6463

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6460
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6460
  call void @llvm.dbg.value(metadata i8* %14, metadata !6458, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %13, metadata !6456, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %1, metadata !6457, metadata !DIExpression()), !dbg !6460
  br label %15, !dbg !6464

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6466
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6460
  call void @llvm.dbg.value(metadata i8* %17, metadata !6458, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %16, metadata !6457, metadata !DIExpression()), !dbg !6460
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6467
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6470
  call void @llvm.dbg.value(metadata i8* %19, metadata !6458, metadata !DIExpression()), !dbg !6460
  %20 = load i8, i8* %17, align 1, !dbg !6471
  %21 = zext i8 %20 to i32, !dbg !6472
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !6467
  %23 = icmp eq i32 %22, -1, !dbg !6473
  br i1 %23, label %30, label %24, !dbg !6474

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6475
  call void @llvm.dbg.value(metadata i32 %25, metadata !6457, metadata !DIExpression()), !dbg !6460
  %26 = icmp eq i32 %25, 0, !dbg !6476
  br i1 %26, label %27, label %15, !dbg !6477, !llvm.loop !6478

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6480
  call void @llvm.dbg.value(metadata i32 %28, metadata !6456, metadata !DIExpression()), !dbg !6460
  %29 = icmp eq i32 %28, 0, !dbg !6481
  br i1 %29, label %30, label %12, !dbg !6482, !llvm.loop !6483

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6460
  call void @llvm.dbg.value(metadata i32 %31, metadata !6456, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.label(metadata !6459), !dbg !6486
  %32 = sub i32 %2, %31, !dbg !6487
  br label %33, !dbg !6488

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6460
  ret i32 %34, !dbg !6489
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6490 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6494, metadata !DIExpression()), !dbg !6495
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6496
  %3 = icmp eq i32 %2, -1, !dbg !6498
  br i1 %3, label %8, label %4, !dbg !6499

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6500
  %6 = icmp eq i32 %5, -1, !dbg !6501
  %7 = sext i1 %6 to i32, !dbg !6500
  br label %8, !dbg !6502

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6495
  ret i32 %9, !dbg !6503
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6504 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6506, metadata !DIExpression()), !dbg !6507
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !6508
  ret void, !dbg !6509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6514, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.value(metadata i32 %1, metadata !6515, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6516, metadata !DIExpression()), !dbg !6520
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6521
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6521
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6521
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6517, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.value(metadata i32 %0, metadata !6519, metadata !DIExpression()), !dbg !6520
  %7 = icmp slt i32 %0, %1, !dbg !6522
  br i1 %7, label %8, label %22, !dbg !6525

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6519, metadata !DIExpression()), !dbg !6520
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !6526
  %11 = icmp eq i32 %10, 0, !dbg !6526
  br i1 %11, label %19, label %12, !dbg !6529

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !6530
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !6532
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !6532
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !6534
  br i1 %15, label %19, label %16, !dbg !6535

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !6536
  %18 = load i8*, i8** %17, align 4, !dbg !6536
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !6537
  br label %19, !dbg !6538

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !6539
  call void @llvm.dbg.value(metadata i32 %20, metadata !6519, metadata !DIExpression()), !dbg !6520
  %21 = icmp eq i32 %20, %1, !dbg !6522
  br i1 %21, label %22, label %8, !dbg !6525, !llvm.loop !6540

22:                                               ; preds = %19, %3
  ret void, !dbg !6542
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !6543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6545, metadata !DIExpression()), !dbg !6546
  %2 = shl nuw i32 1, %0, !dbg !6547
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !6550
  ret i32 %3, !dbg !6551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !6552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6556, metadata !DIExpression()), !dbg !6557
  %2 = shl nuw i32 1, %0, !dbg !6558
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !6561
  ret void, !dbg !6562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6566, metadata !DIExpression()), !dbg !6567
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6568
  ret void, !dbg !6569
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6572, metadata !DIExpression()), !dbg !6573
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6574
  %3 = and i32 %2, %0, !dbg !6574
  %4 = icmp eq i32 %3, %0, !dbg !6575
  %5 = zext i1 %4 to i32, !dbg !6575
  ret i32 %5, !dbg !6576
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !6577 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6579, metadata !DIExpression()), !dbg !6580
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !6581
  ret void, !dbg !6582
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !6583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6585, metadata !DIExpression()), !dbg !6586
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !6587
  ret void, !dbg !6588
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !6589 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6591, metadata !DIExpression()), !dbg !6592
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !6593
  ret void, !dbg !6594
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !6595 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6597, metadata !DIExpression()), !dbg !6598
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !6599
  ret void, !dbg !6600
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !6601 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6603, metadata !DIExpression()), !dbg !6604
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !6605
  ret void, !dbg !6606
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !6607 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6609, metadata !DIExpression()), !dbg !6610
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !6611
  ret void, !dbg !6612
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !6613 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6615, metadata !DIExpression()), !dbg !6616
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !6617
  ret void, !dbg !6618
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !6619 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6621, metadata !DIExpression()), !dbg !6622
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !6623
  ret void, !dbg !6624
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !6625 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6627, metadata !DIExpression()), !dbg !6628
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !6629
  ret void, !dbg !6630
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !6631 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6633, metadata !DIExpression()), !dbg !6634
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !6635
  ret void, !dbg !6636
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6637 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6639, metadata !DIExpression()), !dbg !6640
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !6641
  ret i32 0, !dbg !6642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !646 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !650, metadata !DIExpression()), !dbg !6643
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !6644
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !6646
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !6648
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !6650
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !6652
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !6654
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !6656
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !6658
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !6660
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !6662
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !6664
  ret void, !dbg !6666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6669, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i32 0, metadata !6670, metadata !DIExpression()), !dbg !6671
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !6672
  %3 = load i32, i32* %2, align 4, !dbg !6672
  call void @llvm.dbg.value(metadata i32 %3, metadata !6670, metadata !DIExpression()), !dbg !6671
  %4 = shl nuw i32 1, %0, !dbg !6673
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #25, !dbg !6674
  tail call void @arch_irq_enable(i32 noundef %3) #24, !dbg !6675
  ret void, !dbg !6676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6679, metadata !DIExpression()), !dbg !6680
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6681
  %3 = or i32 %2, %0, !dbg !6681
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6681
  ret void, !dbg !6682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !6683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6685, metadata !DIExpression()), !dbg !6686
  %2 = icmp slt i32 %0, 32, !dbg !6687
  br i1 %2, label %3, label %5, !dbg !6689

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !6690
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !6692
  br label %5, !dbg !6693

5:                                                ; preds = %1, %3
  ret void, !dbg !6694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6697, metadata !DIExpression()), !dbg !6698
  %2 = xor i32 %0, -1, !dbg !6699
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6699
  %4 = and i32 %3, %2, !dbg !6699
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6699
  ret void, !dbg !6700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !6701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6705, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.value(metadata i32 %1, metadata !6706, metadata !DIExpression()), !dbg !6707
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !6708

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !6709
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !6711
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !6712
  br label %11, !dbg !6713

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !6714
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !6715
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !6716
  br label %11, !dbg !6717

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !6718
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !6719
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !6720
  br label %11, !dbg !6721

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !6722
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !6723
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !6724
  br label %11, !dbg !6725

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !6726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6729, metadata !DIExpression()), !dbg !6730
  %2 = xor i32 %0, -1, !dbg !6731
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6731
  %4 = and i32 %3, %2, !dbg !6731
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6731
  ret void, !dbg !6732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6735, metadata !DIExpression()), !dbg !6736
  %2 = xor i32 %0, -1, !dbg !6737
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6737
  %4 = and i32 %3, %2, !dbg !6737
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6737
  ret void, !dbg !6738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6741, metadata !DIExpression()), !dbg !6742
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6743
  %3 = or i32 %2, %0, !dbg !6743
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6743
  ret void, !dbg !6744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6747, metadata !DIExpression()), !dbg !6748
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6749
  %3 = or i32 %2, %0, !dbg !6749
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6749
  ret void, !dbg !6750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !6751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6755, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6756, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata i8* %2, metadata !6757, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6758, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6760, metadata !DIExpression()), !dbg !6761
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6762
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !6762
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !6764
  br i1 %6, label %7, label %9, !dbg !6765

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !6766
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6767
  store i8* %2, i8** %8, align 4, !dbg !6768
  br label %9, !dbg !6769

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !6761
  ret i32 %10, !dbg !6770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !6771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6773, metadata !DIExpression()), !dbg !6776
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6774, metadata !DIExpression()), !dbg !6776
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6775, metadata !DIExpression()), !dbg !6776
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6777
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !6778
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6779
  store i8* null, i8** %3, align 4, !dbg !6780
  ret void, !dbg !6781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6782 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6784, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.value(metadata i8* %1, metadata !6785, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.value(metadata i8* %1, metadata !6786, metadata !DIExpression()), !dbg !6789
  %3 = bitcast i8* %1 to i32*, !dbg !6790
  %4 = load i32, i32* %3, align 4, !dbg !6790
  %5 = add i32 %4, -169, !dbg !6790
  %6 = icmp ult i32 %5, -121, !dbg !6790
  br i1 %6, label %15, label %7, !dbg !6792

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6793
  %9 = inttoptr i32 %8 to i32*, !dbg !6794
  call void @llvm.dbg.value(metadata i32* %9, metadata !6787, metadata !DIExpression()), !dbg !6789
  %10 = load volatile i32, i32* %9, align 4, !dbg !6795
  call void @llvm.dbg.value(metadata i32 %10, metadata !6788, metadata !DIExpression()), !dbg !6789
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6796
  %12 = bitcast i8* %11 to i32*, !dbg !6796
  %13 = load i32, i32* %12, align 4, !dbg !6796
  %14 = or i32 %13, %10, !dbg !6797
  call void @llvm.dbg.value(metadata i32 %14, metadata !6788, metadata !DIExpression()), !dbg !6789
  store volatile i32 %14, i32* %9, align 4, !dbg !6798
  br label %15, !dbg !6799

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6789
  ret i32 %16, !dbg !6800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6801 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6803, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i8* %1, metadata !6804, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i8* %1, metadata !6805, metadata !DIExpression()), !dbg !6808
  %3 = bitcast i8* %1 to i32*, !dbg !6809
  %4 = load i32, i32* %3, align 4, !dbg !6809
  %5 = add i32 %4, -169, !dbg !6809
  %6 = icmp ult i32 %5, -121, !dbg !6809
  br i1 %6, label %16, label %7, !dbg !6811

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6812
  %9 = inttoptr i32 %8 to i32*, !dbg !6813
  call void @llvm.dbg.value(metadata i32* %9, metadata !6806, metadata !DIExpression()), !dbg !6808
  %10 = load volatile i32, i32* %9, align 4, !dbg !6814
  call void @llvm.dbg.value(metadata i32 %10, metadata !6807, metadata !DIExpression()), !dbg !6808
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6815
  %12 = bitcast i8* %11 to i32*, !dbg !6815
  %13 = load i32, i32* %12, align 4, !dbg !6815
  %14 = xor i32 %13, -1, !dbg !6816
  %15 = and i32 %10, %14, !dbg !6817
  call void @llvm.dbg.value(metadata i32 %15, metadata !6807, metadata !DIExpression()), !dbg !6808
  store volatile i32 %15, i32* %9, align 4, !dbg !6818
  br label %16, !dbg !6819

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6808
  ret i32 %17, !dbg !6820
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !6821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6823, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i8* %1, metadata !6824, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i32* %2, metadata !6825, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i8* %1, metadata !6826, metadata !DIExpression()), !dbg !6831
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !6832
  call void @llvm.dbg.value(metadata i32 %4, metadata !6827, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i32 undef, metadata !6828, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i32 undef, metadata !6829, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i32 %4, metadata !6830, metadata !DIExpression()), !dbg !6831
  %5 = bitcast i8* %1 to i32*, !dbg !6833
  %6 = load i32, i32* %5, align 4, !dbg !6833
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !6834

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !6835
  call void @llvm.dbg.value(metadata i32 %8, metadata !6828, metadata !DIExpression()), !dbg !6831
  br label %19, !dbg !6836

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #25, !dbg !6838
  call void @llvm.dbg.value(metadata i32 %10, metadata !6829, metadata !DIExpression()), !dbg !6831
  br label %19, !dbg !6839

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !6840
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #25, !dbg !6841
  br label %19, !dbg !6842

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #24, !dbg !6843
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #25, !dbg !6844
  br label %19, !dbg !6845

17:                                               ; preds = %3
  br label %19, !dbg !6846

18:                                               ; preds = %3
  br label %19, !dbg !6847

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !6848
  br label %21, !dbg !6849

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !6831
  ret i32 %22, !dbg !6849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !6850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6852, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata i8* %1, metadata !6853, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata i8* %2, metadata !6854, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata i8* %1, metadata !6855, metadata !DIExpression()), !dbg !6860
  %4 = bitcast i8* %1 to i32*, !dbg !6861
  %5 = load i32, i32* %4, align 4, !dbg !6861
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !6862
  call void @llvm.dbg.value(metadata i32 %6, metadata !6859, metadata !DIExpression()), !dbg !6860
  %7 = icmp slt i32 %6, 0, !dbg !6863
  br i1 %7, label %22, label %8, !dbg !6865

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6855, metadata !DIExpression()), !dbg !6860
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6866
  %10 = bitcast i8* %9 to i32*, !dbg !6866
  %11 = load i32, i32* %10, align 4, !dbg !6866
  %12 = lshr i32 %11, 16, !dbg !6866
  %13 = and i32 %12, 7, !dbg !6866
  %14 = lshr i32 %11, 8, !dbg !6867
  %15 = and i32 %14, 31, !dbg !6867
  %16 = shl i32 %13, %15, !dbg !6868
  call void @llvm.dbg.value(metadata i32 %16, metadata !6858, metadata !DIExpression()), !dbg !6860
  %17 = and i32 %11, 255, !dbg !6869
  %18 = or i32 %17, 1073887232, !dbg !6870
  %19 = inttoptr i32 %18 to i32*, !dbg !6871
  call void @llvm.dbg.value(metadata i32* %19, metadata !6856, metadata !DIExpression()), !dbg !6860
  %20 = load volatile i32, i32* %19, align 4, !dbg !6872
  call void @llvm.dbg.value(metadata i32 %20, metadata !6857, metadata !DIExpression()), !dbg !6860
  %21 = or i32 %16, %20, !dbg !6873
  call void @llvm.dbg.value(metadata i32 %21, metadata !6857, metadata !DIExpression()), !dbg !6860
  store volatile i32 %21, i32* %19, align 4, !dbg !6874
  br label %22, !dbg !6875

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !6860
  ret i32 %23, !dbg !6876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !6877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6881, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.value(metadata i32 0, metadata !6882, metadata !DIExpression()), !dbg !6883
  %2 = add i32 %0, -1, !dbg !6884
  %3 = icmp ult i32 %2, 6, !dbg !6884
  br i1 %3, label %4, label %7, !dbg !6884

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !6884
  %6 = load i32, i32* %5, align 4, !dbg !6884
  call void @llvm.dbg.value(metadata i32 %6, metadata !6882, metadata !DIExpression()), !dbg !6883
  br label %7, !dbg !6885

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !6883
  ret i32 %8, !dbg !6886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !6887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6891, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i32 %1, metadata !6892, metadata !DIExpression()), !dbg !6893
  %3 = udiv i32 %0, %1, !dbg !6894
  ret i32 %3, !dbg !6895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !6896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6900, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i32 8, metadata !6901, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i32 84, metadata !6902, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i32 %1, metadata !6903, metadata !DIExpression()), !dbg !6904
  %3 = mul i32 %0, 84, !dbg !6905
  %4 = shl nsw i32 %1, 3, !dbg !6906
  %5 = udiv i32 %3, %4, !dbg !6907
  ret i32 %5, !dbg !6908
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !6909 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !6911, metadata !DIExpression()), !dbg !6914
  tail call void @config_enable_default_clocks() #24, !dbg !6915
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !6916
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !6916
  %4 = lshr i32 %3, 4, !dbg !6916
  %5 = and i32 %4, 15, !dbg !6916
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !6916
  %7 = load i8, i8* %6, align 1, !dbg !6916
  %8 = zext i8 %7 to i32, !dbg !6916
  %9 = lshr i32 %2, %8, !dbg !6916
  call void @llvm.dbg.value(metadata i32 %9, metadata !6912, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !6913, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !6914
  %10 = icmp ult i32 %9, 84000000, !dbg !6917
  br i1 %10, label %11, label %13, !dbg !6919

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !6920
  br label %13, !dbg !6922

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !6923
  tail call fastcc void @set_up_plls() #25, !dbg !6924
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !6925
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !6928
  br label %14, !dbg !6929

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6930
  %16 = icmp eq i32 %15, 8, !dbg !6931
  br i1 %16, label %17, label %14, !dbg !6929, !llvm.loop !6932

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !6934
  br i1 %18, label %19, label %21, !dbg !6936

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !6937
  br label %21, !dbg !6939

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !6940
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !6941
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !6942
  ret i32 0, !dbg !6943
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !6944 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6946
  %2 = and i32 %1, 240, !dbg !6946
  ret i32 %2, !dbg !6947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !6948 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !6949
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !6954
  br label %1, !dbg !6955

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !6956
  %3 = icmp eq i32 %2, 1, !dbg !6957
  br i1 %3, label %4, label %1, !dbg !6955, !llvm.loop !6958

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !6960
  br label %5, !dbg !6963

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !6964
  %7 = icmp eq i32 %6, 1, !dbg !6965
  br i1 %7, label %8, label %5, !dbg !6963, !llvm.loop !6966

8:                                                ; preds = %5
  ret void, !dbg !6968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !6969 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6970
  %2 = icmp eq i32 %1, 8, !dbg !6972
  br i1 %2, label %3, label %4, !dbg !6973

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !6974
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !6976
  br label %4, !dbg !6977

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !6978
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6979
  %6 = and i32 %5, -196609, !dbg !6979
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6979
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6980
  %8 = and i32 %7, -251658241, !dbg !6980
  %9 = or i32 %8, 134217728, !dbg !6980
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6980
  tail call void @config_pll_sysclock() #24, !dbg !6981
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !6982
  br label %10, !dbg !6983

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !6984
  %12 = icmp eq i32 %11, 1, !dbg !6985
  br i1 %12, label %13, label %10, !dbg !6983, !llvm.loop !6986

13:                                               ; preds = %10
  ret void, !dbg !6988
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !6989 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6991, metadata !DIExpression()), !dbg !6992
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6993
  %2 = and i32 %1, -241, !dbg !6993
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6993
  ret void, !dbg !6994
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !6995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6997, metadata !DIExpression()), !dbg !6998
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6999
  %3 = and i32 %2, -4, !dbg !6999
  %4 = or i32 %3, %0, !dbg !6999
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6999
  ret void, !dbg !7000
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !7001 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7002
  %2 = and i32 %1, 12, !dbg !7002
  ret i32 %2, !dbg !7003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !7004 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !7006, metadata !DIExpression()), !dbg !7007
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7008
  %2 = and i32 %1, -7169, !dbg !7008
  %3 = or i32 %2, 4096, !dbg !7008
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7008
  ret void, !dbg !7009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !7010 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7012, metadata !DIExpression()), !dbg !7013
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7014
  %2 = and i32 %1, -57345, !dbg !7014
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7014
  ret void, !dbg !7015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !7016 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7017
  %2 = icmp eq i32 %1, 1, !dbg !7019
  br i1 %2, label %7, label %3, !dbg !7020

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !7021
  br label %4, !dbg !7023

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7024
  %6 = icmp eq i32 %5, 1, !dbg !7025
  br i1 %6, label %7, label %4, !dbg !7023, !llvm.loop !7026

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !7028
  br label %8, !dbg !7029

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !7030
  %10 = icmp eq i32 %9, 0, !dbg !7031
  br i1 %10, label %11, label %8, !dbg !7029, !llvm.loop !7032

11:                                               ; preds = %8
  ret void, !dbg !7034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !7035 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7036
  %2 = and i32 %1, -16777217, !dbg !7036
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7036
  ret void, !dbg !7037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !7038 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7039
  %2 = or i32 %1, 16777216, !dbg !7039
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7039
  ret void, !dbg !7040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !7041 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7042
  %2 = lshr i32 %1, 25, !dbg !7043
  %3 = and i32 %2, 1, !dbg !7043
  ret i32 %3, !dbg !7044
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !7045 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7046
  %2 = lshr i32 %1, 1, !dbg !7047
  %3 = and i32 %2, 1, !dbg !7047
  ret i32 %3, !dbg !7048
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !7049 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7050
  %2 = or i32 %1, 1, !dbg !7050
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7050
  ret void, !dbg !7051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !7052 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7053
  %2 = and i32 %1, -262145, !dbg !7053
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7053
  ret void, !dbg !7054
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !7055 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7056
  %2 = or i32 %1, 65536, !dbg !7056
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7056
  ret void, !dbg !7057
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !7058 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7059
  %2 = lshr i32 %1, 17, !dbg !7060
  %3 = and i32 %2, 1, !dbg !7060
  ret i32 %3, !dbg !7061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !7062 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7063
  %2 = or i32 %1, 1, !dbg !7063
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7063
  ret void, !dbg !7064
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !7065 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7066
  %2 = lshr i32 %1, 1, !dbg !7067
  %3 = and i32 %2, 1, !dbg !7067
  ret i32 %3, !dbg !7068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !7069 {
  ret i32 16000000, !dbg !7071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !7075 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !7076
  ret void, !dbg !7077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !7078 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !7082, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 8, metadata !7083, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 84, metadata !7084, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7085, metadata !DIExpression()), !dbg !7086
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7087
  %2 = and i32 %1, -4227072, !dbg !7087
  %3 = or i32 %2, 4199688, !dbg !7087
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7087
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7088
  %5 = and i32 %4, -196609, !dbg !7088
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7088
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7089
  %7 = and i32 %6, -1879048193, !dbg !7089
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7089
  ret void, !dbg !7090
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !7091 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !7092
  ret void, !dbg !7093
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !7094 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7097, metadata !DIExpression()), !dbg !7099
  %2 = bitcast i32* %1 to i8*, !dbg !7100
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7100
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7098, metadata !DIExpression()), !dbg !7101
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7102
  %4 = or i32 %3, 268435456, !dbg !7102
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7102
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7103
  %6 = and i32 %5, 268435456, !dbg !7103
  store volatile i32 %6, i32* %1, align 4, !dbg !7104
  %7 = load volatile i32, i32* %1, align 4, !dbg !7105
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7106
  ret void, !dbg !7106
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7107 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7109, metadata !DIExpression()), !dbg !7110
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !7111
  br i1 %2, label %3, label %4, !dbg !7113

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !7114
  br label %4, !dbg !7115

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7110
  ret i32 %5, !dbg !7116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7117 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7122, metadata !DIExpression()), !dbg !7123
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7124, !srcloc !7126
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !7127
  ret i1 %1, !dbg !7128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7129 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7130
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7131
  ret void, !dbg !7132
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7135, metadata !DIExpression()), !dbg !7136
  %2 = icmp eq i32 %0, 10, !dbg !7137
  br i1 %2, label %3, label %4, !dbg !7139

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !7140
  br label %4, !dbg !7142

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7143
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !7144
  ret i32 %0, !dbg !7145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7146 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7149, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata i8 %0, metadata !7150, metadata !DIExpression()), !dbg !7151
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7152, !srcloc !7154
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !7155
  ret void, !dbg !7156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7157 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7159, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i8 %0, metadata !7160, metadata !DIExpression()), !dbg !7162
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7163
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7161, metadata !DIExpression()), !dbg !7162
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7164
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7164
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #24, !dbg !7165
  ret void, !dbg !7166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7167 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7169, metadata !DIExpression()), !dbg !7170
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #24, !dbg !7171
  ret i1 %1, !dbg !7172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7173 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7220, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7221, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7222, metadata !DIExpression()), !dbg !7223
  ret void, !dbg !7224
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7225 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7227, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8 %1, metadata !7228, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i32 %2, metadata !7229, metadata !DIExpression()), !dbg !7232
  %5 = bitcast i32* %4 to i8*, !dbg !7233
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7233
  call void @llvm.dbg.value(metadata i32* %4, metadata !7231, metadata !DIExpression(DW_OP_deref)), !dbg !7232
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !7234
  call void @llvm.dbg.value(metadata i32 %6, metadata !7230, metadata !DIExpression()), !dbg !7232
  %7 = icmp eq i32 %6, 0, !dbg !7235
  br i1 %7, label %8, label %31, !dbg !7237

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7230, metadata !DIExpression()), !dbg !7232
  %9 = and i32 %2, 131072, !dbg !7238
  %10 = icmp eq i32 %9, 0, !dbg !7240
  br i1 %10, label %28, label %11, !dbg !7241

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7242
  %13 = icmp eq i32 %12, 0, !dbg !7245
  br i1 %13, label %18, label %14, !dbg !7246

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7247
  %16 = shl nuw i32 1, %15, !dbg !7247
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !7249
  br label %25, !dbg !7250

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7251
  %20 = icmp eq i32 %19, 0, !dbg !7253
  %21 = zext i8 %1 to i32, !dbg !7232
  br i1 %20, label %25, label %22, !dbg !7254

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7255
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !7257
  br label %25, !dbg !7258

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7259
  %27 = load i32, i32* %4, align 4, !dbg !7260
  call void @llvm.dbg.value(metadata i32 %30, metadata !7231, metadata !DIExpression()), !dbg !7232
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !7261
  br label %31, !dbg !7262

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7259
  %30 = load i32, i32* %4, align 4, !dbg !7260
  call void @llvm.dbg.value(metadata i32 %30, metadata !7231, metadata !DIExpression()), !dbg !7232
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !7261
  call void @llvm.dbg.value(metadata i32 0, metadata !7230, metadata !DIExpression()), !dbg !7232
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7263
  ret i32 %6, !dbg !7263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7264 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7268, metadata !DIExpression()), !dbg !7273
  call void @llvm.dbg.value(metadata i32* %1, metadata !7269, metadata !DIExpression()), !dbg !7273
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7274
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7274
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7274
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7270, metadata !DIExpression()), !dbg !7273
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7275
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7275
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7275
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7272, metadata !DIExpression()), !dbg !7273
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !7276
  store i32 %9, i32* %1, align 4, !dbg !7277
  ret i32 0, !dbg !7278
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7279 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7281, metadata !DIExpression()), !dbg !7287
  call void @llvm.dbg.value(metadata i32 %1, metadata !7282, metadata !DIExpression()), !dbg !7287
  call void @llvm.dbg.value(metadata i32 %2, metadata !7283, metadata !DIExpression()), !dbg !7287
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7288
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7288
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7288
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7284, metadata !DIExpression()), !dbg !7287
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7289
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7289
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7289
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7285, metadata !DIExpression()), !dbg !7287
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !7290
  call void @llvm.dbg.value(metadata i32 %10, metadata !7286, metadata !DIExpression()), !dbg !7287
  %11 = xor i32 %1, -1, !dbg !7291
  %12 = and i32 %10, %11, !dbg !7292
  %13 = and i32 %2, %1, !dbg !7293
  %14 = or i32 %12, %13, !dbg !7294
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !7295
  ret i32 0, !dbg !7296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7297 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7299, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i32 %1, metadata !7300, metadata !DIExpression()), !dbg !7303
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7304
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7304
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7304
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7301, metadata !DIExpression()), !dbg !7303
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7305
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7305
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7305
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7302, metadata !DIExpression()), !dbg !7303
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7306
  store volatile i32 %1, i32* %9, align 4, !dbg !7306
  ret i32 0, !dbg !7307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7308 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7310, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata i32 %1, metadata !7311, metadata !DIExpression()), !dbg !7314
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7315
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7315
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7315
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7312, metadata !DIExpression()), !dbg !7314
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7316
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7316
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7316
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7313, metadata !DIExpression()), !dbg !7314
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !7317
  ret i32 0, !dbg !7318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7319 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7321, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i32 %1, metadata !7322, metadata !DIExpression()), !dbg !7325
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7326
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7326
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7326
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7323, metadata !DIExpression()), !dbg !7325
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7327
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7327
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7327
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7324, metadata !DIExpression()), !dbg !7325
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7328
  %10 = load volatile i32, i32* %9, align 4, !dbg !7328
  %11 = xor i32 %10, %1, !dbg !7328
  store volatile i32 %11, i32* %9, align 4, !dbg !7328
  ret i32 0, !dbg !7329
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7330 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7332, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i8 %1, metadata !7333, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i32 %2, metadata !7334, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i32 %3, metadata !7335, metadata !DIExpression()), !dbg !7342
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7343
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7343
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7343
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7336, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i8* undef, metadata !7337, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i32 0, metadata !7339, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i32 0, metadata !7340, metadata !DIExpression()), !dbg !7342
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7344

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7345
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !7349
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7350
  %12 = load i32, i32* %11, align 4, !dbg !7350
  %13 = icmp eq i32 %10, %12, !dbg !7351
  br i1 %13, label %14, label %29, !dbg !7352

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !7353
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !7355
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !7356
  br label %29, !dbg !7357

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7358
  %17 = load i8*, i8** %16, align 4, !dbg !7358
  call void @llvm.dbg.value(metadata i8* %17, metadata !7337, metadata !DIExpression()), !dbg !7342
  %18 = zext i8 %1 to i32, !dbg !7359
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !7361
  %20 = icmp eq i32 %19, 0, !dbg !7362
  br i1 %20, label %21, label %29, !dbg !7363

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7364
  %23 = load i32, i32* %22, align 4, !dbg !7364
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !7365
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7366

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7339, metadata !DIExpression()), !dbg !7342
  br label %27, !dbg !7367

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7339, metadata !DIExpression()), !dbg !7342
  br label %27, !dbg !7369

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7339, metadata !DIExpression()), !dbg !7342
  br label %27, !dbg !7370

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7342
  call void @llvm.dbg.value(metadata i32 %28, metadata !7339, metadata !DIExpression()), !dbg !7342
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !7371
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !7372
  br label %29, !dbg !7372

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7342
  call void @llvm.dbg.value(metadata i32 %30, metadata !7340, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.label(metadata !7341), !dbg !7373
  ret i32 %30, !dbg !7374
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7375 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7377, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7378, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.value(metadata i1 %2, metadata !7379, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7381
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7382
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7382
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7382
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7380, metadata !DIExpression()), !dbg !7381
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7383
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !7384
  ret i32 %8, !dbg !7385
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7386 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7392, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7393, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i1 %2, metadata !7394, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7395
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !7396
  br i1 %4, label %10, label %5, !dbg !7398

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7399
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #25, !dbg !7402
  %8 = or i1 %7, %2, !dbg !7403
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7403
  br i1 %2, label %11, label %13, !dbg !7403

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7404

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7405
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #25, !dbg !7408
  br label %13, !dbg !7409

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7395
  ret i32 %14, !dbg !7410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7411 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7415, metadata !DIExpression()), !dbg !7416
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7417
  %3 = icmp eq %struct._snode* %2, null, !dbg !7417
  ret i1 %3, !dbg !7417
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !7418 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7422, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7423, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7424, metadata !DIExpression()), !dbg !7426
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7427
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7424, metadata !DIExpression()), !dbg !7426
  %4 = icmp eq %struct._snode* %3, null, !dbg !7429
  br i1 %4, label %15, label %5, !dbg !7427

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7424, metadata !DIExpression()), !dbg !7426
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7431
  br i1 %6, label %9, label %11, !dbg !7434

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7424, metadata !DIExpression()), !dbg !7426
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7431
  br i1 %8, label %9, label %11, !dbg !7434, !llvm.loop !7435

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !7436
  br label %15, !dbg !7436

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7424, metadata !DIExpression()), !dbg !7426
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !7429
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7425, metadata !DIExpression()), !dbg !7426
  %14 = icmp eq %struct._snode* %13, null, !dbg !7429
  br i1 %14, label %15, label %7, !dbg !7427, !llvm.loop !7435

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !7439 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7443, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7444, metadata !DIExpression()), !dbg !7445
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7446
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !7446
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !7446
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7447
  %5 = icmp eq %struct._snode* %4, null, !dbg !7447
  br i1 %5, label %6, label %8, !dbg !7446

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7449
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !7449
  br label %8, !dbg !7449

8:                                                ; preds = %6, %2
  ret void, !dbg !7446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7451 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7455, metadata !DIExpression()), !dbg !7456
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7457
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7457
  ret %struct._snode* %3, !dbg !7458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7459 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7463, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7464, metadata !DIExpression()), !dbg !7465
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7466
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7467
  ret void, !dbg !7468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7469 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7471, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7472, metadata !DIExpression()), !dbg !7473
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7474
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7475
  ret void, !dbg !7476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7477 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7479, metadata !DIExpression()), !dbg !7480
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7481
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7481
  ret %struct._snode* %3, !dbg !7482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7483 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7485, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7486, metadata !DIExpression()), !dbg !7487
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7488
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7489
  ret void, !dbg !7490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !7491 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7495, metadata !DIExpression()), !dbg !7498
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7496, metadata !DIExpression()), !dbg !7498
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7497, metadata !DIExpression()), !dbg !7498
  %4 = icmp eq %struct._snode* %1, null, !dbg !7499
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !7501
  br i1 %4, label %6, label %11, !dbg !7502

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !7503
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7505
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7505
  br i1 %8, label %9, label %15, !dbg !7503

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7507
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !7507
  br label %15, !dbg !7507

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !7509
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7511
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7511
  br i1 %13, label %14, label %15, !dbg !7509

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !7513
  br label %15, !dbg !7513

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !7502
  ret void, !dbg !7502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !7515 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7519, metadata !DIExpression()), !dbg !7520
  %2 = icmp eq %struct._snode* %0, null, !dbg !7521
  br i1 %2, label %5, label %3, !dbg !7521

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !7521
  br label %5, !dbg !7521

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7521
  ret %struct._snode* %6, !dbg !7521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7522 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7524, metadata !DIExpression()), !dbg !7525
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !7526
  ret %struct._snode* %2, !dbg !7526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7527 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7529, metadata !DIExpression()), !dbg !7530
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7531
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7531
  ret %struct._snode* %3, !dbg !7532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7535, metadata !DIExpression()), !dbg !7538
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !7539, !range !7540
  call void @llvm.dbg.value(metadata i32 %2, metadata !7536, metadata !DIExpression()), !dbg !7538
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !7541
  call void @llvm.dbg.value(metadata i32 %3, metadata !7537, metadata !DIExpression()), !dbg !7538
  ret i32 %3, !dbg !7542
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7545, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i8* %1, metadata !7546, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i8* %1, metadata !7547, metadata !DIExpression()), !dbg !7548
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7549
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7549
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7550
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7550
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7550
  %8 = shl nuw i32 1, %0, !dbg !7551
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !7552
  ret void, !dbg !7553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7554 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7558, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i32 %1, metadata !7559, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7560, metadata !DIExpression()), !dbg !7564
  %4 = bitcast i64* %3 to i8*, !dbg !7565
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7565
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !7562, metadata !DIExpression()), !dbg !7564
  store i64 70368744177732, i64* %3, align 8, !dbg !7566
  call void @llvm.dbg.value(metadata i64* %3, metadata !7562, metadata !DIExpression(DW_OP_deref)), !dbg !7564
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !7567
  call void @llvm.dbg.value(metadata i32 %5, metadata !7563, metadata !DIExpression()), !dbg !7564
  %6 = icmp eq i32 %5, 0, !dbg !7568
  br i1 %6, label %7, label %8, !dbg !7570

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !7571
  br label %8, !dbg !7572

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7573
  ret void, !dbg !7573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !7574 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7576, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i8* %0, metadata !7577, metadata !DIExpression()), !dbg !7579
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !7580
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !7578, metadata !DIExpression()), !dbg !7579
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !7581
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !7581
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #24, !dbg !7582
  ret i32 %5, !dbg !7583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7586, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i32 %1, metadata !7587, metadata !DIExpression()), !dbg !7589
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !7590
  call void @llvm.dbg.value(metadata i32 %3, metadata !7588, metadata !DIExpression()), !dbg !7589
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !7591
  ret void, !dbg !7592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !7593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7597, metadata !DIExpression()), !dbg !7598
  %2 = sdiv i32 %0, 4, !dbg !7599
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !7600
  %6 = add nsw i32 %5, 16, !dbg !7601
  %7 = shl i32 15, %6, !dbg !7602
  %8 = or i32 %7, %2, !dbg !7603
  ret i32 %8, !dbg !7604
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7609, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata i32 %1, metadata !7610, metadata !DIExpression()), !dbg !7611
  %3 = and i32 %1, 255, !dbg !7612
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !7612
  %5 = load volatile i32, i32* %4, align 4, !dbg !7612
  %6 = lshr i32 %1, 16, !dbg !7612
  %7 = xor i32 %6, -1, !dbg !7612
  %8 = and i32 %5, %7, !dbg !7612
  call void @llvm.dbg.value(metadata i32 %6, metadata !7613, metadata !DIExpression()) #23, !dbg !7617
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7619, !srcloc !7620
  call void @llvm.dbg.value(metadata i32 %9, metadata !7616, metadata !DIExpression()) #23, !dbg !7617
  call void @llvm.dbg.value(metadata i32 %9, metadata !7621, metadata !DIExpression()) #23, !dbg !7626
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !7628, !range !5833
  %11 = shl i32 %0, %10, !dbg !7612
  %12 = or i32 %11, %8, !dbg !7612
  store volatile i32 %12, i32* %4, align 4, !dbg !7612
  ret void, !dbg !7629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7630 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7634, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7635, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %2, metadata !7636, metadata !DIExpression()), !dbg !7639
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7640
  %5 = icmp eq %struct._snode* %4, null, !dbg !7640
  br i1 %5, label %21, label %6, !dbg !7640

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !7642
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7638, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7637, metadata !DIExpression()), !dbg !7639
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7643
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7643
  %11 = load i32, i32* %10, align 4, !dbg !7643
  %12 = and i32 %11, %2, !dbg !7647
  %13 = icmp eq i32 %12, 0, !dbg !7647
  br i1 %13, label %19, label %14, !dbg !7648

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7637, metadata !DIExpression()), !dbg !7639
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7649
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7649
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7649
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #24, !dbg !7651
  br label %19, !dbg !7652

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7637, metadata !DIExpression()), !dbg !7639
  %20 = icmp eq %struct._snode* %8, null, !dbg !7653
  br i1 %20, label %21, label %6, !dbg !7653

21:                                               ; preds = %19, %3
  ret void, !dbg !7654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !7655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7657, metadata !DIExpression()), !dbg !7658
  %2 = and i32 %0, 255, !dbg !7659
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !7659
  %4 = load volatile i32, i32* %3, align 4, !dbg !7659
  %5 = lshr i32 %0, 16, !dbg !7659
  %6 = and i32 %4, %5, !dbg !7659
  call void @llvm.dbg.value(metadata i32 %5, metadata !7613, metadata !DIExpression()) #23, !dbg !7660
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !7662, !srcloc !7620
  call void @llvm.dbg.value(metadata i32 %7, metadata !7616, metadata !DIExpression()) #23, !dbg !7660
  call void @llvm.dbg.value(metadata i32 %7, metadata !7621, metadata !DIExpression()) #23, !dbg !7663
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7665, !range !5833
  %9 = lshr i32 %6, %8, !dbg !7666
  ret i32 %9, !dbg !7667
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7668 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7673, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %1, metadata !7674, metadata !DIExpression()), !dbg !7675
  %3 = shl i32 %1, 16, !dbg !7676
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !7676
  store volatile i32 %3, i32* %4, align 4, !dbg !7676
  ret void, !dbg !7677
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7678 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7682, metadata !DIExpression()), !dbg !7683
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7684
  %3 = load volatile i32, i32* %2, align 4, !dbg !7684
  ret i32 %3, !dbg !7685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7686 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7688, metadata !DIExpression()), !dbg !7690
  call void @llvm.dbg.value(metadata i32 %1, metadata !7689, metadata !DIExpression()), !dbg !7690
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7691
  store volatile i32 %1, i32* %3, align 4, !dbg !7691
  ret void, !dbg !7692
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7693 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7695, metadata !DIExpression()), !dbg !7696
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !7697
  %3 = load volatile i32, i32* %2, align 4, !dbg !7697
  ret i32 %3, !dbg !7698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !7699 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7703, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.value(metadata i32* %1, metadata !7704, metadata !DIExpression()), !dbg !7705
  %3 = and i32 %0, 131072, !dbg !7706
  %4 = icmp eq i32 %3, 0, !dbg !7708
  br i1 %4, label %22, label %5, !dbg !7709

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !7710
  %6 = and i32 %0, 2, !dbg !7712
  %7 = icmp eq i32 %6, 0, !dbg !7714
  br i1 %7, label %11, label %8, !dbg !7715

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !7716
  %10 = icmp eq i32 %9, 0, !dbg !7716
  br i1 %10, label %33, label %11, !dbg !7719

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !7720
  store i32 %12, i32* %1, align 4, !dbg !7720
  %13 = and i32 %0, 16, !dbg !7721
  %14 = icmp eq i32 %13, 0, !dbg !7723
  br i1 %14, label %17, label %15, !dbg !7724

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !7725
  br label %31, !dbg !7727

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !7728
  %19 = icmp eq i32 %18, 0, !dbg !7730
  br i1 %19, label %33, label %20, !dbg !7731

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !7732
  br label %31, !dbg !7734

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !7735
  %24 = icmp eq i32 %23, 0, !dbg !7737
  br i1 %24, label %31, label %25, !dbg !7738

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !7739
  %27 = icmp eq i32 %26, 0, !dbg !7742
  br i1 %27, label %28, label %31, !dbg !7743

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !7744
  br label %33, !dbg !7745

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !7705
  ret i32 %34, !dbg !7745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7746 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7750, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %1, metadata !7751, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %2, metadata !7752, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %3, metadata !7753, metadata !DIExpression()), !dbg !7761
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7762
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7762
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7762
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7754, metadata !DIExpression()), !dbg !7761
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !7763
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !7763
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !7763
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !7755, metadata !DIExpression()), !dbg !7761
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !7764
  call void @llvm.dbg.value(metadata i32 %11, metadata !7756, metadata !DIExpression()), !dbg !7761
  %12 = and i32 %2, 48, !dbg !7765
  call void @llvm.dbg.value(metadata i32 %12, metadata !7757, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %2, metadata !7758, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %2, metadata !7759, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %2, metadata !7760, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !7761
  %13 = lshr i32 %2, 6, !dbg !7766
  %14 = and i32 %13, 1, !dbg !7766
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !7767
  %15 = lshr i32 %2, 7, !dbg !7768
  %16 = and i32 %15, 3, !dbg !7768
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !7769
  %17 = lshr i32 %2, 9, !dbg !7770
  %18 = and i32 %17, 3, !dbg !7770
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !7771
  %19 = icmp eq i32 %12, 32, !dbg !7772
  br i1 %19, label %20, label %24, !dbg !7774

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !7775
  br i1 %21, label %22, label %23, !dbg !7778

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7779
  br label %24, !dbg !7781

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7782
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !7784
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !7785
  ret void, !dbg !7786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !7787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7789, metadata !DIExpression()), !dbg !7791
  %2 = shl nuw i32 1, %0, !dbg !7792
  call void @llvm.dbg.value(metadata i32 %2, metadata !7790, metadata !DIExpression()), !dbg !7791
  ret i32 %2, !dbg !7793
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !7794 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7798, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata i32 %1, metadata !7799, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata i32 %2, metadata !7800, metadata !DIExpression()), !dbg !7801
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !7802
  %5 = load volatile i32, i32* %4, align 4, !dbg !7802
  %6 = xor i32 %1, -1, !dbg !7802
  %7 = and i32 %5, %6, !dbg !7802
  %8 = mul i32 %2, %1, !dbg !7802
  %9 = or i32 %7, %8, !dbg !7802
  store volatile i32 %9, i32* %4, align 4, !dbg !7802
  ret void, !dbg !7803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7804 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7806, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i32 %1, metadata !7807, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i32 %2, metadata !7808, metadata !DIExpression()), !dbg !7809
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !7810
  %5 = load volatile i32, i32* %4, align 4, !dbg !7810
  call void @llvm.dbg.value(metadata i32 %1, metadata !7613, metadata !DIExpression()) #23, !dbg !7811
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7813, !srcloc !7620
  call void @llvm.dbg.value(metadata i32 %6, metadata !7616, metadata !DIExpression()) #23, !dbg !7811
  call void @llvm.dbg.value(metadata i32 %6, metadata !7621, metadata !DIExpression()) #23, !dbg !7814
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7816, !range !5833
  %8 = shl nuw nsw i32 %7, 1, !dbg !7810
  %9 = shl i32 3, %8, !dbg !7810
  %10 = xor i32 %9, -1, !dbg !7810
  %11 = and i32 %5, %10, !dbg !7810
  call void @llvm.dbg.value(metadata i32 %1, metadata !7613, metadata !DIExpression()) #23, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %6, metadata !7616, metadata !DIExpression()) #23, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %6, metadata !7621, metadata !DIExpression()) #23, !dbg !7819
  %12 = shl i32 %2, %8, !dbg !7810
  %13 = or i32 %11, %12, !dbg !7810
  store volatile i32 %13, i32* %4, align 4, !dbg !7810
  ret void, !dbg !7821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7822 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7824, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata i32 %1, metadata !7825, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata i32 %2, metadata !7826, metadata !DIExpression()), !dbg !7827
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !7828
  %5 = load volatile i32, i32* %4, align 4, !dbg !7828
  call void @llvm.dbg.value(metadata i32 %1, metadata !7613, metadata !DIExpression()) #23, !dbg !7829
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7831, !srcloc !7620
  call void @llvm.dbg.value(metadata i32 %6, metadata !7616, metadata !DIExpression()) #23, !dbg !7829
  call void @llvm.dbg.value(metadata i32 %6, metadata !7621, metadata !DIExpression()) #23, !dbg !7832
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7834, !range !5833
  %8 = shl nuw nsw i32 %7, 1, !dbg !7828
  %9 = shl i32 3, %8, !dbg !7828
  %10 = xor i32 %9, -1, !dbg !7828
  %11 = and i32 %5, %10, !dbg !7828
  call void @llvm.dbg.value(metadata i32 %1, metadata !7613, metadata !DIExpression()) #23, !dbg !7835
  call void @llvm.dbg.value(metadata i32 %6, metadata !7616, metadata !DIExpression()) #23, !dbg !7835
  call void @llvm.dbg.value(metadata i32 %6, metadata !7621, metadata !DIExpression()) #23, !dbg !7837
  %12 = shl i32 %2, %8, !dbg !7828
  %13 = or i32 %11, %12, !dbg !7828
  store volatile i32 %13, i32* %4, align 4, !dbg !7828
  ret void, !dbg !7839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7840 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7842, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %1, metadata !7843, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %2, metadata !7844, metadata !DIExpression()), !dbg !7845
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !7846
  %5 = load volatile i32, i32* %4, align 4, !dbg !7846
  call void @llvm.dbg.value(metadata i32 %1, metadata !7613, metadata !DIExpression()) #23, !dbg !7847
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7849, !srcloc !7620
  call void @llvm.dbg.value(metadata i32 %6, metadata !7616, metadata !DIExpression()) #23, !dbg !7847
  call void @llvm.dbg.value(metadata i32 %6, metadata !7621, metadata !DIExpression()) #23, !dbg !7850
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7852, !range !5833
  %8 = shl nuw nsw i32 %7, 2, !dbg !7846
  %9 = shl i32 15, %8, !dbg !7846
  %10 = xor i32 %9, -1, !dbg !7846
  %11 = and i32 %5, %10, !dbg !7846
  call void @llvm.dbg.value(metadata i32 %1, metadata !7613, metadata !DIExpression()) #23, !dbg !7853
  call void @llvm.dbg.value(metadata i32 %6, metadata !7616, metadata !DIExpression()) #23, !dbg !7853
  call void @llvm.dbg.value(metadata i32 %6, metadata !7621, metadata !DIExpression()) #23, !dbg !7855
  %12 = shl i32 %2, %8, !dbg !7846
  %13 = or i32 %11, %12, !dbg !7846
  store volatile i32 %13, i32* %4, align 4, !dbg !7846
  ret void, !dbg !7857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7858 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7860, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i32 %1, metadata !7861, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i32 %2, metadata !7862, metadata !DIExpression()), !dbg !7863
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !7864
  %5 = load volatile i32, i32* %4, align 4, !dbg !7864
  %6 = lshr i32 %1, 8, !dbg !7864
  call void @llvm.dbg.value(metadata i32 %6, metadata !7613, metadata !DIExpression()) #23, !dbg !7865
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7867, !srcloc !7620
  call void @llvm.dbg.value(metadata i32 %7, metadata !7616, metadata !DIExpression()) #23, !dbg !7865
  call void @llvm.dbg.value(metadata i32 %7, metadata !7621, metadata !DIExpression()) #23, !dbg !7868
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7870, !range !5833
  %9 = shl nuw nsw i32 %8, 2, !dbg !7864
  %10 = shl i32 15, %9, !dbg !7864
  %11 = xor i32 %10, -1, !dbg !7864
  %12 = and i32 %5, %11, !dbg !7864
  call void @llvm.dbg.value(metadata i32 %6, metadata !7613, metadata !DIExpression()) #23, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %7, metadata !7616, metadata !DIExpression()) #23, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %7, metadata !7621, metadata !DIExpression()) #23, !dbg !7873
  %13 = shl i32 %2, %9, !dbg !7864
  %14 = or i32 %12, %13, !dbg !7864
  store volatile i32 %14, i32* %4, align 4, !dbg !7864
  ret void, !dbg !7875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7876 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7878, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.value(metadata i32 %1, metadata !7879, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.value(metadata i32 %2, metadata !7880, metadata !DIExpression()), !dbg !7881
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !7882
  %5 = load volatile i32, i32* %4, align 4, !dbg !7882
  call void @llvm.dbg.value(metadata i32 %1, metadata !7613, metadata !DIExpression()) #23, !dbg !7883
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7885, !srcloc !7620
  call void @llvm.dbg.value(metadata i32 %6, metadata !7616, metadata !DIExpression()) #23, !dbg !7883
  call void @llvm.dbg.value(metadata i32 %6, metadata !7621, metadata !DIExpression()) #23, !dbg !7886
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7888, !range !5833
  %8 = shl nuw nsw i32 %7, 1, !dbg !7882
  %9 = shl i32 3, %8, !dbg !7882
  %10 = xor i32 %9, -1, !dbg !7882
  %11 = and i32 %5, %10, !dbg !7882
  call void @llvm.dbg.value(metadata i32 %1, metadata !7613, metadata !DIExpression()) #23, !dbg !7889
  call void @llvm.dbg.value(metadata i32 %6, metadata !7616, metadata !DIExpression()) #23, !dbg !7889
  call void @llvm.dbg.value(metadata i32 %6, metadata !7621, metadata !DIExpression()) #23, !dbg !7891
  %12 = shl i32 %2, %8, !dbg !7882
  %13 = or i32 %11, %12, !dbg !7882
  store volatile i32 %13, i32* %4, align 4, !dbg !7882
  ret void, !dbg !7893
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !7894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7896, metadata !DIExpression()), !dbg !7899
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7900
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !7900
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !7900
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !7897, metadata !DIExpression()), !dbg !7899
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !7901
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !7902
  %6 = tail call fastcc zeroext i1 @device_is_ready.47() #25, !dbg !7903
  br i1 %6, label %7, label %11, !dbg !7905

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !7906
  call void @llvm.dbg.value(metadata i32 %8, metadata !7898, metadata !DIExpression()), !dbg !7899
  %9 = icmp slt i32 %8, 0, !dbg !7907
  %10 = select i1 %9, i32 %8, i32 0, !dbg !7909
  br label %11, !dbg !7909

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !7899
  ret i32 %12, !dbg !7910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.47() unnamed_addr #1 !dbg !7911 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7915, metadata !DIExpression()), !dbg !7916
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7917, !srcloc !7919
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.48() #25, !dbg !7920
  ret i1 %1, !dbg !7921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7922 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7926, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i8 1, metadata !7927, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !7928, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i32 0, metadata !7929, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7930, metadata !DIExpression()), !dbg !7931
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7932
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !7932
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !7932
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !7928, metadata !DIExpression()), !dbg !7931
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !7933
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !7936
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !7937
  call void @llvm.dbg.value(metadata i32 %7, metadata !7929, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i32 %7, metadata !7929, metadata !DIExpression()), !dbg !7931
  ret i32 %7, !dbg !7938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.48() unnamed_addr #1 !dbg !7939 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7941, metadata !DIExpression()), !dbg !7942
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #24, !dbg !7943
  ret i1 %1, !dbg !7944
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7949, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %1, metadata !7950, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %2, metadata !7951, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %3, metadata !7952, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 0, metadata !7953, metadata !DIExpression()), !dbg !7957
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !7958
  %5 = icmp eq i32 %3, 17, !dbg !7959
  br i1 %5, label %6, label %14, !dbg !7960

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !7961
  call void @llvm.dbg.value(metadata i32 %7, metadata !7954, metadata !DIExpression()), !dbg !7962
  %8 = icmp eq i32 %7, 0, !dbg !7963
  %9 = shl nuw i32 1, %1, !dbg !7965
  br i1 %8, label %12, label %10, !dbg !7966

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !7967
  br label %14, !dbg !7969

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !7970
  br label %14, !dbg !7973

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !7974
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !7975 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7977, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i8* %1, metadata !7978, metadata !DIExpression()), !dbg !7981
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7982
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7982
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7982
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7979, metadata !DIExpression()), !dbg !7981
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !7983
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7983
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !7985
  %9 = icmp eq i32 %8, 0, !dbg !7985
  br i1 %9, label %12, label %10, !dbg !7986

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7987
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !7989
  br label %12, !dbg !7990

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7991
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !7993
  %15 = icmp eq i32 %14, 0, !dbg !7993
  br i1 %15, label %19, label %16, !dbg !7994

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7995
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !7996
  store i8 %18, i8* %1, align 1, !dbg !7997
  br label %19, !dbg !7998

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !7981
  ret i32 %20, !dbg !7999
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !8000 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8002, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.value(metadata i8 %1, metadata !8003, metadata !DIExpression()), !dbg !8006
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8007
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8007
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8007
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8004, metadata !DIExpression()), !dbg !8006
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !8008

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8009
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !8012
  %10 = icmp eq i32 %9, 0, !dbg !8012
  br i1 %10, label %18, label %11, !dbg !8013

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8014, !srcloc !8021
  call void @llvm.dbg.value(metadata i32 undef, metadata !8017, metadata !DIExpression()) #23, !dbg !8022
  call void @llvm.dbg.value(metadata i32 undef, metadata !8018, metadata !DIExpression()) #23, !dbg !8022
  call void @llvm.dbg.value(metadata i32 undef, metadata !8005, metadata !DIExpression()), !dbg !8006
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8023
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !8025
  %15 = icmp eq i32 %14, 0, !dbg !8025
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !8014
  br i1 %15, label %17, label %19, !dbg !8026

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !8017, metadata !DIExpression()) #23, !dbg !8022
  call void @llvm.dbg.value(metadata i32 %16, metadata !8005, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.value(metadata i32 undef, metadata !8027, metadata !DIExpression()) #23, !dbg !8030
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !8032, !srcloc !8033
  br label %18, !dbg !8034

18:                                               ; preds = %17, %7
  br label %7, !dbg !8009, !llvm.loop !8035

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !8014
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8037
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !8038
  call void @llvm.dbg.value(metadata i32 %20, metadata !8027, metadata !DIExpression()) #23, !dbg !8039
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !8041, !srcloc !8033
  ret void, !dbg !8042
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !8043 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8045, metadata !DIExpression()), !dbg !8048
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8049
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8049
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8049
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8046, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata i32 0, metadata !8047, metadata !DIExpression()), !dbg !8048
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8050
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8050
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !8052
  %8 = icmp ne i32 %7, 0, !dbg !8052
  %9 = zext i1 %8 to i32, !dbg !8053
  call void @llvm.dbg.value(metadata i32 %9, metadata !8047, metadata !DIExpression()), !dbg !8048
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8054
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !8056
  %12 = icmp eq i32 %11, 0, !dbg !8056
  %13 = or i32 %9, 2, !dbg !8057
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !8057
  call void @llvm.dbg.value(metadata i32 %14, metadata !8047, metadata !DIExpression()), !dbg !8048
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8058
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !8060
  %17 = icmp eq i32 %16, 0, !dbg !8060
  %18 = or i32 %14, 4, !dbg !8061
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !8061
  call void @llvm.dbg.value(metadata i32 %19, metadata !8047, metadata !DIExpression()), !dbg !8048
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8062
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !8064
  %22 = icmp eq i32 %21, 0, !dbg !8064
  %23 = or i32 %19, 8, !dbg !8065
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !8065
  call void @llvm.dbg.value(metadata i32 %24, metadata !8047, metadata !DIExpression()), !dbg !8048
  %25 = and i32 %24, 8, !dbg !8066
  %26 = icmp eq i32 %25, 0, !dbg !8066
  br i1 %26, label %29, label %27, !dbg !8068

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8069
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !8071
  br label %29, !dbg !8072

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !8073
  %31 = icmp eq i32 %30, 0, !dbg !8073
  br i1 %31, label %34, label %32, !dbg !8075

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8076
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !8078
  br label %34, !dbg !8079

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !8080
  %36 = icmp eq i32 %35, 0, !dbg !8080
  br i1 %36, label %39, label %37, !dbg !8082

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8083
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !8085
  br label %39, !dbg !8086

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !8087
  %41 = icmp eq i32 %40, 0, !dbg !8087
  br i1 %41, label %44, label %42, !dbg !8089

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8090
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !8092
  br label %44, !dbg !8093

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8094
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !8095
  ret i32 %24, !dbg !8096
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !8097 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8099, metadata !DIExpression()), !dbg !8108
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8100, metadata !DIExpression()), !dbg !8108
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8109
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8109
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8109
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8101, metadata !DIExpression()), !dbg !8108
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8110
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !8110
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !8110
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !8102, metadata !DIExpression()), !dbg !8108
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8111
  %10 = load i8, i8* %9, align 4, !dbg !8111
  %11 = zext i8 %10 to i32, !dbg !8112
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !8113
  call void @llvm.dbg.value(metadata i32 %12, metadata !8104, metadata !DIExpression()), !dbg !8108
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8114
  %14 = load i8, i8* %13, align 1, !dbg !8114
  %15 = zext i8 %14 to i32, !dbg !8115
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !8116
  call void @llvm.dbg.value(metadata i32 %16, metadata !8105, metadata !DIExpression()), !dbg !8108
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8117
  %18 = load i8, i8* %17, align 2, !dbg !8117
  %19 = zext i8 %18 to i32, !dbg !8118
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !8119
  call void @llvm.dbg.value(metadata i32 %20, metadata !8106, metadata !DIExpression()), !dbg !8108
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8120
  %22 = load i8, i8* %21, align 1, !dbg !8120
  %23 = zext i8 %22 to i32, !dbg !8121
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !8122
  call void @llvm.dbg.value(metadata i32 %24, metadata !8107, metadata !DIExpression()), !dbg !8108
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8123

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8125
  br i1 %26, label %69, label %27, !dbg !8127

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8128

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8129
  br i1 %29, label %65, label %30, !dbg !8129

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8131
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8108
  br i1 %31, label %38, label %34, !dbg !8133

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8134
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !8134

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8137
  br i1 %37, label %38, label %69, !dbg !8138

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8139
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !8140
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !8141
  %41 = icmp eq i32 %12, %40, !dbg !8143
  br i1 %41, label %43, label %42, !dbg !8144

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !8145
  br label %43, !dbg !8147

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !8148
  %45 = icmp eq i32 %16, %44, !dbg !8150
  br i1 %45, label %47, label %46, !dbg !8151

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !8152
  br label %47, !dbg !8154

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !8155
  %49 = icmp eq i32 %20, %48, !dbg !8157
  br i1 %49, label %51, label %50, !dbg !8158

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !8159
  br label %51, !dbg !8161

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !8162
  %53 = icmp eq i32 %24, %52, !dbg !8164
  br i1 %53, label %55, label %54, !dbg !8165

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !8166
  br label %55, !dbg !8168

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8169
  %57 = load i32, i32* %56, align 4, !dbg !8169
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8171
  %59 = load i32, i32* %58, align 4, !dbg !8171
  %60 = icmp eq i32 %57, %59, !dbg !8172
  br i1 %60, label %63, label %61, !dbg !8173

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !8174
  %62 = load i32, i32* %56, align 4, !dbg !8176
  store i32 %62, i32* %58, align 4, !dbg !8177
  br label %63, !dbg !8178

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8179
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !8180
  br label %69, !dbg !8181

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8129
  %67 = and i8 %66, 1, !dbg !8129
  %68 = icmp eq i8 %67, 0, !dbg !8129
  br i1 %68, label %30, label %69, !dbg !8129

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !8108
  ret i32 %70, !dbg !8182
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8183 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8185, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8186, metadata !DIExpression()), !dbg !8188
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8189
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8189
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8189
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8187, metadata !DIExpression()), !dbg !8188
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8190
  %7 = load i32, i32* %6, align 4, !dbg !8190
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8191
  store i32 %7, i32* %8, align 4, !dbg !8192
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8193, !range !8194
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !8195
  %11 = trunc i32 %10 to i8, !dbg !8195
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8196
  store i8 %11, i8* %12, align 4, !dbg !8197
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !8198, !range !8199
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !8200
  %15 = trunc i32 %14 to i8, !dbg !8200
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8201
  store i8 %15, i8* %16, align 1, !dbg !8202
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !8203
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8204, !range !8194
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !8205
  %20 = trunc i32 %19 to i8, !dbg !8205
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8206
  store i8 %20, i8* %21, align 2, !dbg !8207
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !8208, !range !8209
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !8210
  %24 = trunc i32 %23 to i8, !dbg !8210
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8211
  store i8 %24, i8* %25, align 1, !dbg !8212
  ret i32 0, !dbg !8213
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8214 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8218, metadata !DIExpression()), !dbg !8220
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8221
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8221
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8221
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8219, metadata !DIExpression()), !dbg !8220
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8222
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8222
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !8223
  ret i32 %7, !dbg !8224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8229, metadata !DIExpression()), !dbg !8230
  %2 = icmp eq i32 %0, 1024, !dbg !8231
  %3 = select i1 %2, i32 2, i32 0, !dbg !8231
  %4 = icmp eq i32 %0, 1536, !dbg !8231
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8231
  ret i32 %5, !dbg !8232
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8233 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8235, metadata !DIExpression()), !dbg !8237
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8238
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8238
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8238
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8236, metadata !DIExpression()), !dbg !8237
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8239
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8239
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !8240
  ret i32 %7, !dbg !8241
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8246, metadata !DIExpression()), !dbg !8247
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8248
  %3 = icmp ult i32 %2, 4, !dbg !8248
  br i1 %3, label %4, label %7, !dbg !8248

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8248
  %6 = load i32, i32* %5, align 4, !dbg !8248
  br label %7, !dbg !8248

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8249
  ret i32 %8, !dbg !8251
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8254, metadata !DIExpression()), !dbg !8256
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8257
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8257
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8257
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8255, metadata !DIExpression()), !dbg !8256
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8258
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8258
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !8259
  ret i32 %7, !dbg !8260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8265, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %1, metadata !8266, metadata !DIExpression()), !dbg !8267
  %3 = icmp eq i32 %0, 4096, !dbg !8268
  %4 = icmp eq i32 %1, 0, !dbg !8268
  %5 = select i1 %4, i32 4, i32 3, !dbg !8268
  %6 = select i1 %4, i32 3, i32 2, !dbg !8268
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8268
  ret i32 %7, !dbg !8269
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8270 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8272, metadata !DIExpression()), !dbg !8274
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8275
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8275
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8275
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8273, metadata !DIExpression()), !dbg !8274
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8276
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8276
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !8277
  ret i32 %7, !dbg !8278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8279 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8283, metadata !DIExpression()), !dbg !8284
  %2 = icmp eq i32 %0, 768, !dbg !8285
  %3 = zext i1 %2 to i32, !dbg !8284
  ret i32 %3, !dbg !8287
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8288 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8293, metadata !DIExpression()), !dbg !8294
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8295
  %3 = load volatile i32, i32* %2, align 4, !dbg !8295
  %4 = and i32 %3, 768, !dbg !8295
  ret i32 %4, !dbg !8296
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8297 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8299, metadata !DIExpression()), !dbg !8300
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8301
  %3 = load volatile i32, i32* %2, align 4, !dbg !8301
  %4 = and i32 %3, 4096, !dbg !8301
  ret i32 %4, !dbg !8302
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8303 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8305, metadata !DIExpression()), !dbg !8306
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8307
  %3 = load volatile i32, i32* %2, align 4, !dbg !8307
  %4 = and i32 %3, 12288, !dbg !8307
  ret i32 %4, !dbg !8308
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8309 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8311, metadata !DIExpression()), !dbg !8312
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8313
  %3 = load volatile i32, i32* %2, align 4, !dbg !8313
  %4 = and i32 %3, 1536, !dbg !8313
  ret i32 %4, !dbg !8314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8319, metadata !DIExpression()), !dbg !8320
  %2 = icmp eq i32 %0, 2, !dbg !8321
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8321
  %4 = icmp eq i32 %0, 1, !dbg !8321
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8321
  ret i32 %5, !dbg !8322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8327, metadata !DIExpression()), !dbg !8328
  %2 = icmp ult i32 %0, 3, !dbg !8329
  br i1 %2, label %3, label %6, !dbg !8329

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8329
  %5 = load i32, i32* %4, align 4, !dbg !8329
  br label %6, !dbg !8329

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8330
  ret i32 %7, !dbg !8332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8337, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.value(metadata i32 %1, metadata !8338, metadata !DIExpression()), !dbg !8339
  %3 = icmp eq i32 %0, 4, !dbg !8340
  %4 = icmp eq i32 %1, 0, !dbg !8340
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8340
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8340
  ret i32 %6, !dbg !8341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8346, metadata !DIExpression()), !dbg !8347
  %2 = icmp eq i32 %0, 1, !dbg !8348
  %3 = select i1 %2, i32 768, i32 0, !dbg !8347
  ret i32 %3, !dbg !8350
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8351 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8355, metadata !DIExpression()), !dbg !8356
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8357
  %3 = load volatile i32, i32* %2, align 4, !dbg !8357
  %4 = and i32 %3, -8193, !dbg !8357
  store volatile i32 %4, i32* %2, align 4, !dbg !8357
  ret void, !dbg !8358
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8359 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8363, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata i32 %1, metadata !8364, metadata !DIExpression()), !dbg !8366
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8367
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8367
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8367
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8365, metadata !DIExpression()), !dbg !8366
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8368
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8368
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8369
  ret void, !dbg !8370
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8371 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8373, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 %1, metadata !8374, metadata !DIExpression()), !dbg !8376
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8377
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8377
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8377
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8375, metadata !DIExpression()), !dbg !8376
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8378
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8378
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8379
  ret void, !dbg !8380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8381 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8383, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 %1, metadata !8384, metadata !DIExpression()), !dbg !8386
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8387
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8387
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8387
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8385, metadata !DIExpression()), !dbg !8386
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8388
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8388
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8389
  ret void, !dbg !8390
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8391 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8393, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i32 %1, metadata !8394, metadata !DIExpression()), !dbg !8396
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8397
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8397
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8397
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8395, metadata !DIExpression()), !dbg !8396
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8398
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8398
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8399
  ret void, !dbg !8400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8401 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8403, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.value(metadata i32 %1, metadata !8404, metadata !DIExpression()), !dbg !8408
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8409
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8409
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8409
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8405, metadata !DIExpression()), !dbg !8408
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8410
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8410
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8410
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8406, metadata !DIExpression()), !dbg !8408
  %10 = bitcast i32* %3 to i8*, !dbg !8411
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8411
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8412
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8412
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8416
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8416
  %15 = load i8*, i8** %14, align 4, !dbg !8416
  call void @llvm.dbg.value(metadata i32* %3, metadata !8407, metadata !DIExpression(DW_OP_deref)), !dbg !8408
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !8417
  %17 = icmp slt i32 %16, 0, !dbg !8418
  br i1 %17, label %23, label %18, !dbg !8419

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8420
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8420
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #25, !dbg !8421
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8422
  %22 = load i32, i32* %3, align 4, !dbg !8423
  call void @llvm.dbg.value(metadata i32 %22, metadata !8407, metadata !DIExpression()), !dbg !8408
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #25, !dbg !8424
  br label %23, !dbg !8425

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8425
  ret void, !dbg !8425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8426 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8428, metadata !DIExpression()), !dbg !8429
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8430
  %3 = load volatile i32, i32* %2, align 4, !dbg !8430
  %4 = or i32 %3, 8192, !dbg !8430
  store volatile i32 %4, i32* %2, align 4, !dbg !8430
  ret void, !dbg !8431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8432 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8434, metadata !DIExpression()), !dbg !8438
  call void @llvm.dbg.value(metadata i8* %1, metadata !8435, metadata !DIExpression()), !dbg !8438
  call void @llvm.dbg.value(metadata i32* %2, metadata !8436, metadata !DIExpression()), !dbg !8438
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8439
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8439
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8439
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8437, metadata !DIExpression()), !dbg !8438
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8440
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8440
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8442
  br i1 %9, label %12, label %10, !dbg !8443

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !8444
  br label %12, !dbg !8445

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8438
  ret i32 %13, !dbg !8446
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8447 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8451, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 0, metadata !8452, metadata !DIExpression()), !dbg !8453
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8454
  %3 = load volatile i32, i32* %2, align 4, !dbg !8454
  %4 = and i32 %3, -32769, !dbg !8454
  store volatile i32 %4, i32* %2, align 4, !dbg !8454
  ret void, !dbg !8455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8456 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8460, metadata !DIExpression()), !dbg !8464
  call void @llvm.dbg.value(metadata i32 %1, metadata !8461, metadata !DIExpression()), !dbg !8464
  call void @llvm.dbg.value(metadata i32 0, metadata !8462, metadata !DIExpression()), !dbg !8464
  call void @llvm.dbg.value(metadata i32 %2, metadata !8463, metadata !DIExpression()), !dbg !8464
  %4 = zext i32 %1 to i64, !dbg !8465
  %5 = mul nuw nsw i64 %4, 25, !dbg !8465
  %6 = zext i32 %2 to i64, !dbg !8465
  %7 = shl nuw nsw i64 %6, 2, !dbg !8465
  %8 = udiv i64 %5, %7, !dbg !8465
  %9 = trunc i64 %8 to i32, !dbg !8465
  %10 = udiv i32 %9, 100, !dbg !8465
  %11 = shl nuw nsw i32 %10, 4, !dbg !8465
  %12 = mul i32 %10, -100, !dbg !8465
  %13 = add i32 %12, %9, !dbg !8465
  %14 = shl i32 %13, 4, !dbg !8465
  %15 = add i32 %14, 50, !dbg !8465
  %16 = udiv i32 %15, 100, !dbg !8465
  %17 = and i32 %16, 240, !dbg !8465
  %18 = add nuw nsw i32 %17, %11, !dbg !8465
  %19 = and i32 %16, 15, !dbg !8465
  %20 = and i32 %18, 65520, !dbg !8468
  %21 = or i32 %20, %19, !dbg !8468
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8469
  store volatile i32 %21, i32* %22, align 4, !dbg !8470
  ret void, !dbg !8471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8472 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8474, metadata !DIExpression()), !dbg !8476
  call void @llvm.dbg.value(metadata i32 %1, metadata !8475, metadata !DIExpression()), !dbg !8476
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8477
  %4 = load volatile i32, i32* %3, align 4, !dbg !8477
  %5 = and i32 %4, -769, !dbg !8477
  %6 = or i32 %5, %1, !dbg !8477
  store volatile i32 %6, i32* %3, align 4, !dbg !8477
  ret void, !dbg !8478
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8479 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8481, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata i32 %1, metadata !8482, metadata !DIExpression()), !dbg !8483
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8484
  %4 = load volatile i32, i32* %3, align 4, !dbg !8484
  %5 = and i32 %4, -4097, !dbg !8484
  %6 = or i32 %5, %1, !dbg !8484
  store volatile i32 %6, i32* %3, align 4, !dbg !8484
  ret void, !dbg !8485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8486 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8488, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.value(metadata i32 %1, metadata !8489, metadata !DIExpression()), !dbg !8490
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8491
  %4 = load volatile i32, i32* %3, align 4, !dbg !8491
  %5 = and i32 %4, -12289, !dbg !8491
  %6 = or i32 %5, %1, !dbg !8491
  store volatile i32 %6, i32* %3, align 4, !dbg !8491
  ret void, !dbg !8492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8493 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8495, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i32 %1, metadata !8496, metadata !DIExpression()), !dbg !8497
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8498
  %4 = load volatile i32, i32* %3, align 4, !dbg !8498
  %5 = and i32 %4, -1537, !dbg !8498
  %6 = or i32 %5, %1, !dbg !8498
  store volatile i32 %6, i32* %3, align 4, !dbg !8498
  ret void, !dbg !8499
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8500 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8502, metadata !DIExpression()), !dbg !8503
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8504
  %3 = load volatile i32, i32* %2, align 4, !dbg !8504
  %4 = lshr i32 %3, 3, !dbg !8505
  %5 = and i32 %4, 1, !dbg !8505
  ret i32 %5, !dbg !8506
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8507 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8509, metadata !DIExpression()), !dbg !8510
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8511
  %3 = load volatile i32, i32* %2, align 4, !dbg !8511
  %4 = and i32 %3, 1, !dbg !8511
  ret i32 %4, !dbg !8512
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8513 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8515, metadata !DIExpression()), !dbg !8516
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8517
  %3 = load volatile i32, i32* %2, align 4, !dbg !8517
  %4 = lshr i32 %3, 1, !dbg !8518
  %5 = and i32 %4, 1, !dbg !8518
  ret i32 %5, !dbg !8519
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8520 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8522, metadata !DIExpression()), !dbg !8523
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8524
  %3 = load volatile i32, i32* %2, align 4, !dbg !8524
  %4 = lshr i32 %3, 8, !dbg !8525
  %5 = and i32 %4, 1, !dbg !8525
  ret i32 %5, !dbg !8526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8527 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8529, metadata !DIExpression()), !dbg !8530
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8531
  store volatile i32 -257, i32* %2, align 4, !dbg !8531
  ret void, !dbg !8532
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8533 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8535, metadata !DIExpression()), !dbg !8537
  %3 = bitcast i32* %2 to i8*, !dbg !8538
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8538
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8536, metadata !DIExpression()), !dbg !8539
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8540
  %5 = load volatile i32, i32* %4, align 4, !dbg !8540
  store volatile i32 %5, i32* %2, align 4, !dbg !8541
  %6 = load volatile i32, i32* %2, align 4, !dbg !8542
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8543
  %8 = load volatile i32, i32* %7, align 4, !dbg !8543
  store volatile i32 %8, i32* %2, align 4, !dbg !8544
  %9 = load volatile i32, i32* %2, align 4, !dbg !8545
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8546
  ret void, !dbg !8546
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8547 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8549, metadata !DIExpression()), !dbg !8551
  %3 = bitcast i32* %2 to i8*, !dbg !8552
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8552
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8550, metadata !DIExpression()), !dbg !8553
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8554
  %5 = load volatile i32, i32* %4, align 4, !dbg !8554
  store volatile i32 %5, i32* %2, align 4, !dbg !8555
  %6 = load volatile i32, i32* %2, align 4, !dbg !8556
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8557
  %8 = load volatile i32, i32* %7, align 4, !dbg !8557
  store volatile i32 %8, i32* %2, align 4, !dbg !8558
  %9 = load volatile i32, i32* %2, align 4, !dbg !8559
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8560
  ret void, !dbg !8560
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8561 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8563, metadata !DIExpression()), !dbg !8565
  %3 = bitcast i32* %2 to i8*, !dbg !8566
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8566
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8564, metadata !DIExpression()), !dbg !8567
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8568
  %5 = load volatile i32, i32* %4, align 4, !dbg !8568
  store volatile i32 %5, i32* %2, align 4, !dbg !8569
  %6 = load volatile i32, i32* %2, align 4, !dbg !8570
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8571
  %8 = load volatile i32, i32* %7, align 4, !dbg !8571
  store volatile i32 %8, i32* %2, align 4, !dbg !8572
  %9 = load volatile i32, i32* %2, align 4, !dbg !8573
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8574
  ret void, !dbg !8574
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8575 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8577, metadata !DIExpression()), !dbg !8579
  %3 = bitcast i32* %2 to i8*, !dbg !8580
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8580
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8578, metadata !DIExpression()), !dbg !8581
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8582
  %5 = load volatile i32, i32* %4, align 4, !dbg !8582
  store volatile i32 %5, i32* %2, align 4, !dbg !8583
  %6 = load volatile i32, i32* %2, align 4, !dbg !8584
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8585
  %8 = load volatile i32, i32* %7, align 4, !dbg !8585
  store volatile i32 %8, i32* %2, align 4, !dbg !8586
  %9 = load volatile i32, i32* %2, align 4, !dbg !8587
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8588
  ret void, !dbg !8588
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8589 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8591, metadata !DIExpression()), !dbg !8592
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8593
  %3 = load volatile i32, i32* %2, align 4, !dbg !8593
  %4 = lshr i32 %3, 7, !dbg !8594
  %5 = and i32 %4, 1, !dbg !8594
  ret i32 %5, !dbg !8595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !8596 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8600, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.value(metadata i8 %1, metadata !8601, metadata !DIExpression()), !dbg !8602
  %3 = zext i8 %1 to i32, !dbg !8603
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8604
  store volatile i32 %3, i32* %4, align 4, !dbg !8605
  ret void, !dbg !8606
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8607 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8609, metadata !DIExpression()), !dbg !8610
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8611
  %3 = load volatile i32, i32* %2, align 4, !dbg !8611
  %4 = lshr i32 %3, 5, !dbg !8612
  %5 = and i32 %4, 1, !dbg !8612
  ret i32 %5, !dbg !8613
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8614 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8618, metadata !DIExpression()), !dbg !8619
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8620
  %3 = load volatile i32, i32* %2, align 4, !dbg !8620
  %4 = trunc i32 %3 to i8, !dbg !8621
  ret i8 %4, !dbg !8622
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !8623 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8625, metadata !DIExpression()), !dbg !8631
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8632
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8632
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8632
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8626, metadata !DIExpression()), !dbg !8631
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8633
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !8633
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !8633
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !8627, metadata !DIExpression()), !dbg !8631
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !8634
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !8635
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !8635
  %10 = tail call fastcc zeroext i1 @device_is_ready.56(%struct.device* noundef %9) #25, !dbg !8637
  br i1 %10, label %11, label %49, !dbg !8638

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !8639
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !8640
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8640
  %15 = load i8*, i8** %14, align 4, !dbg !8640
  %16 = tail call fastcc i32 @clock_control_on.57(%struct.device* noundef %12, i8* noundef %15) #25, !dbg !8641
  call void @llvm.dbg.value(metadata i32 %16, metadata !8630, metadata !DIExpression()), !dbg !8631
  %17 = icmp eq i32 %16, 0, !dbg !8642
  br i1 %17, label %18, label %49, !dbg !8644

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !8645
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !8645
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #25, !dbg !8646
  call void @llvm.dbg.value(metadata i32 %21, metadata !8630, metadata !DIExpression()), !dbg !8631
  %22 = icmp slt i32 %21, 0, !dbg !8647
  br i1 %22, label %49, label %23, !dbg !8649

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8650
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8650
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #25, !dbg !8651
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8652
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #25, !dbg !8653
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !8654
  %28 = load i32, i32* %27, align 4, !dbg !8654
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !8656

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !8628, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i32 4096, metadata !8629, metadata !DIExpression()), !dbg !8631
  br label %31, !dbg !8657

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !8628, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i32 0, metadata !8629, metadata !DIExpression()), !dbg !8631
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !8660
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !8660
  call void @llvm.dbg.value(metadata i32 %33, metadata !8629, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i32 %32, metadata !8628, metadata !DIExpression()), !dbg !8631
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8661
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #25, !dbg !8662
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !8663
  %36 = load i8, i8* %35, align 4, !dbg !8663, !range !5253
  %37 = icmp eq i8 %36, 0, !dbg !8663
  br i1 %37, label %39, label %38, !dbg !8665

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !8666
  br label %39, !dbg !8668

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !8669
  %41 = load i32, i32* %40, align 4, !dbg !8669
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #25, !dbg !8670
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !8671
  %43 = load i8, i8* %42, align 4, !dbg !8671, !range !5253
  %44 = icmp eq i8 %43, 0, !dbg !8671
  br i1 %44, label %47, label %45, !dbg !8673

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8674
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #25, !dbg !8676
  br label %47, !dbg !8677

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8678
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #25, !dbg !8679
  br label %49, !dbg !8680

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !8631
  ret i32 %50, !dbg !8681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8682 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8686, metadata !DIExpression()), !dbg !8690
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8691
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !8691
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !8691
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !8687, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8688, metadata !DIExpression()), !dbg !8690
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !8692
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !8693
  ret void, !dbg !8694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.56(%struct.device* noundef %0) unnamed_addr #1 !dbg !8695 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8699, metadata !DIExpression()), !dbg !8700
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8701, !srcloc !8703
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.58(%struct.device* noundef %0) #25, !dbg !8704
  ret i1 %2, !dbg !8705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.57(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8706 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8708, metadata !DIExpression()), !dbg !8711
  call void @llvm.dbg.value(metadata i8* %1, metadata !8709, metadata !DIExpression()), !dbg !8711
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8712
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !8712
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !8712
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !8710, metadata !DIExpression()), !dbg !8711
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !8713
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !8713
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !8714
  ret i32 %8, !dbg !8715
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8716 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8720, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.value(metadata i8 0, metadata !8721, metadata !DIExpression()), !dbg !8724
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8725
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8725
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8723, metadata !DIExpression(DW_OP_deref)), !dbg !8724
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !8726
  call void @llvm.dbg.value(metadata i32 %4, metadata !8722, metadata !DIExpression()), !dbg !8724
  %5 = icmp slt i32 %4, 0, !dbg !8727
  br i1 %5, label %9, label %6, !dbg !8729

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8730
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8723, metadata !DIExpression()), !dbg !8724
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !8731
  br label %9, !dbg !8732

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8724
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8733
  ret i32 %10, !dbg !8733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !8734 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8736, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i32 12, metadata !8737, metadata !DIExpression()), !dbg !8740
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !8741

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !8742, metadata !DIExpression()) #23, !dbg !8748
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !8751, !srcloc !8752
  call void @llvm.dbg.value(metadata i32 %4, metadata !8747, metadata !DIExpression()) #23, !dbg !8748
  %5 = or i32 %4, 12, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %5, metadata !8738, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i32 %5, metadata !8755, metadata !DIExpression()) #23, !dbg !8762
  call void @llvm.dbg.value(metadata i32* %2, metadata !8760, metadata !DIExpression()) #23, !dbg !8762
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !8764, !srcloc !8765
  call void @llvm.dbg.value(metadata i32 %6, metadata !8761, metadata !DIExpression()) #23, !dbg !8762
  %7 = icmp eq i32 %6, 0, !dbg !8741
  br i1 %7, label %8, label %3, !dbg !8753, !llvm.loop !8766

8:                                                ; preds = %3
  ret void, !dbg !8767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8768 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8770, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i32 %1, metadata !8771, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i32 %2, metadata !8772, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i32 0, metadata !8773, metadata !DIExpression()), !dbg !8774
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8775
  %5 = load volatile i32, i32* %4, align 4, !dbg !8775
  %6 = and i32 %5, -5633, !dbg !8775
  %7 = or i32 %2, %1, !dbg !8775
  %8 = or i32 %7, %6, !dbg !8775
  store volatile i32 %8, i32* %4, align 4, !dbg !8775
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8776
  %10 = load volatile i32, i32* %9, align 4, !dbg !8776
  %11 = and i32 %10, -12289, !dbg !8776
  store volatile i32 %11, i32* %9, align 4, !dbg !8776
  ret void, !dbg !8777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8778 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8780, metadata !DIExpression()), !dbg !8781
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8782
  %3 = load volatile i32, i32* %2, align 4, !dbg !8782
  %4 = or i32 %3, 8, !dbg !8782
  store volatile i32 %4, i32* %2, align 4, !dbg !8782
  ret void, !dbg !8783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8784 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8788, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8789, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata i32 0, metadata !8790, metadata !DIExpression()), !dbg !8791
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8792
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !8792
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8793
  %5 = load i8, i8* %4, align 4, !dbg !8793
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !8794
  ret i32 %6, !dbg !8795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.58(%struct.device* noundef %0) unnamed_addr #1 !dbg !8796 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8798, metadata !DIExpression()), !dbg !8799
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !8800
  ret i1 %2, !dbg !8801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !8802 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8804, metadata !DIExpression()), !dbg !8805
  tail call fastcc void @__NVIC_SetPriority.60() #25, !dbg !8806
  store i32 8399, i32* @last_load, align 4, !dbg !8807
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8808
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8809
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8810
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8811
  %3 = or i32 %2, 7, !dbg !8811
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8811
  ret i32 0, !dbg !8812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.60() unnamed_addr #13 !dbg !8813 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8815, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 1, metadata !8816, metadata !DIExpression()), !dbg !8817
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8818
  ret void, !dbg !8821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8822 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8824, metadata !DIExpression()), !dbg !8826
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !8827
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8828
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8829
  %5 = add i32 %4, %3, !dbg !8829
  store i32 %5, i32* @cycle_count, align 4, !dbg !8829
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8830
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8831
  %7 = sub i32 %5, %6, !dbg !8834
  %8 = udiv i32 %7, 8400, !dbg !8835
  call void @llvm.dbg.value(metadata i32 %8, metadata !8825, metadata !DIExpression()), !dbg !8826
  %9 = mul nuw i32 %8, 8400, !dbg !8836
  %10 = add i32 %9, %6, !dbg !8837
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8837
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !8838
  tail call void @z_arm_int_exit() #24, !dbg !8839
  ret void, !dbg !8840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !8841 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8846
  call void @llvm.dbg.value(metadata i32 %1, metadata !8843, metadata !DIExpression()), !dbg !8847
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8848
  call void @llvm.dbg.value(metadata i32 %2, metadata !8844, metadata !DIExpression()), !dbg !8847
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8849
  call void @llvm.dbg.value(metadata i32 %3, metadata !8845, metadata !DIExpression()), !dbg !8847
  %4 = and i32 %2, 65536, !dbg !8850
  %5 = icmp ne i32 %4, 0, !dbg !8850
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8852
  %8 = load i32, i32* @last_load, align 4, !dbg !8847
  br i1 %7, label %9, label %13, !dbg !8852

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8853
  %11 = add i32 %10, %8, !dbg !8853
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8853
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8855
  br label %13, !dbg !8856

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8857
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8858
  %16 = add i32 %14, %15, !dbg !8859
  ret i32 %16, !dbg !8860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8865, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i1 %1, metadata !8866, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8878
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8879
  br i1 %4, label %5, label %8, !dbg !8879

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8881
  %7 = and i32 %6, -2, !dbg !8881
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8881
  store i32 -16777216, i32* @last_load, align 4, !dbg !8883
  br label %54, !dbg !8884

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8885
  call void @llvm.dbg.value(metadata i32 %9, metadata !8870, metadata !DIExpression()), !dbg !8878
  br i1 %3, label %18, label %10, !dbg !8886

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8886
  call void @llvm.dbg.value(metadata i32 undef, metadata !8865, metadata !DIExpression()), !dbg !8878
  %12 = icmp slt i32 %11, 1, !dbg !8887
  br i1 %12, label %18, label %13, !dbg !8887

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !8887
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !8887
  %16 = mul nuw nsw i32 %15, 8400, !dbg !8887
  %17 = add nuw nsw i32 %16, 8399, !dbg !8887
  br label %18, !dbg !8887

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8865, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8888, metadata !DIExpression()) #23, !dbg !8895
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8897, !srcloc !8903
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8897
  call void @llvm.dbg.value(metadata i32 %21, metadata !8900, metadata !DIExpression()) #23, !dbg !8904
  call void @llvm.dbg.value(metadata i32 undef, metadata !8901, metadata !DIExpression()) #23, !dbg !8904
  call void @llvm.dbg.value(metadata i32 %21, metadata !8894, metadata !DIExpression()) #23, !dbg !8895
  call void @llvm.dbg.value(metadata i32 %21, metadata !8871, metadata !DIExpression()), !dbg !8878
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !8905
  call void @llvm.dbg.value(metadata i32 %22, metadata !8876, metadata !DIExpression()), !dbg !8878
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8906
  call void @llvm.dbg.value(metadata i32 %23, metadata !8868, metadata !DIExpression()), !dbg !8878
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8907
  %25 = add i32 %24, %22, !dbg !8907
  store i32 %25, i32* @cycle_count, align 4, !dbg !8907
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8908
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8909
  %27 = sub i32 %25, %26, !dbg !8910
  call void @llvm.dbg.value(metadata i32 %27, metadata !8877, metadata !DIExpression()), !dbg !8878
  %28 = icmp slt i32 %27, 0, !dbg !8911
  br i1 %28, label %38, label %29, !dbg !8913

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8867, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 undef, metadata !8867, metadata !DIExpression()), !dbg !8878
  %30 = add nuw i32 %19, %27, !dbg !8914
  %31 = urem i32 %30, 8400, !dbg !8916
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8878
  %32 = sub nuw nsw i32 %19, %31, !dbg !8917
  call void @llvm.dbg.value(metadata i32 %32, metadata !8867, metadata !DIExpression()), !dbg !8878
  %33 = icmp ugt i32 %32, 1024, !dbg !8918
  br i1 %33, label %34, label %36, !dbg !8918

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8867, metadata !DIExpression()), !dbg !8878
  %35 = icmp ugt i32 %32, 16766400, !dbg !8919
  br i1 %35, label %38, label %36, !dbg !8921

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8922
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8923
  call void @llvm.dbg.value(metadata i32 %40, metadata !8869, metadata !DIExpression()), !dbg !8878
  %41 = add nsw i32 %39, -1, !dbg !8924
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8925
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8926
  %42 = icmp ult i32 %23, %40, !dbg !8927
  br i1 %42, label %43, label %48, !dbg !8929

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8930
  %45 = add i32 %23, %9, !dbg !8932
  %46 = sub i32 %45, %40, !dbg !8933
  %47 = add i32 %46, %44, !dbg !8930
  br label %52, !dbg !8934

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8935
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8937
  %51 = add i32 %49, %50, !dbg !8937
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !8938
  store i32 %53, i32* @cycle_count, align 4, !dbg !8938
  call void @llvm.dbg.value(metadata i32 %21, metadata !8939, metadata !DIExpression()) #23, !dbg !8945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8944, metadata !DIExpression()) #23, !dbg !8945
  call void @llvm.dbg.value(metadata i32 %21, metadata !8947, metadata !DIExpression()) #23, !dbg !8950
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !8952, !srcloc !8953
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !8954
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8955 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8888, metadata !DIExpression()) #23, !dbg !8959
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8961, !srcloc !8903
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8961
  call void @llvm.dbg.value(metadata i32 %2, metadata !8900, metadata !DIExpression()) #23, !dbg !8963
  call void @llvm.dbg.value(metadata i32 undef, metadata !8901, metadata !DIExpression()) #23, !dbg !8963
  call void @llvm.dbg.value(metadata i32 %2, metadata !8894, metadata !DIExpression()) #23, !dbg !8959
  call void @llvm.dbg.value(metadata i32 %2, metadata !8957, metadata !DIExpression()), !dbg !8964
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8965
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8966
  %5 = add i32 %4, %3, !dbg !8967
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8968
  %7 = sub i32 %5, %6, !dbg !8969
  call void @llvm.dbg.value(metadata i32 %7, metadata !8958, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i32 %2, metadata !8939, metadata !DIExpression()) #23, !dbg !8970
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8944, metadata !DIExpression()) #23, !dbg !8970
  call void @llvm.dbg.value(metadata i32 %2, metadata !8947, metadata !DIExpression()) #23, !dbg !8972
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8974, !srcloc !8953
  %8 = udiv i32 %7, 8400, !dbg !8975
  ret i32 %8, !dbg !8976
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8977 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8888, metadata !DIExpression()) #23, !dbg !8981
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8983, !srcloc !8903
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8983
  call void @llvm.dbg.value(metadata i32 %2, metadata !8900, metadata !DIExpression()) #23, !dbg !8985
  call void @llvm.dbg.value(metadata i32 undef, metadata !8901, metadata !DIExpression()) #23, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %2, metadata !8894, metadata !DIExpression()) #23, !dbg !8981
  call void @llvm.dbg.value(metadata i32 %2, metadata !8979, metadata !DIExpression()), !dbg !8986
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8987
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8988
  %5 = add i32 %4, %3, !dbg !8989
  call void @llvm.dbg.value(metadata i32 %5, metadata !8980, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %2, metadata !8939, metadata !DIExpression()) #23, !dbg !8990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8944, metadata !DIExpression()) #23, !dbg !8990
  call void @llvm.dbg.value(metadata i32 %2, metadata !8947, metadata !DIExpression()) #23, !dbg !8992
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8994, !srcloc !8953
  ret i32 %5, !dbg !8995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !8996 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8997
  %2 = icmp eq i32 %1, -16777216, !dbg !8999
  br i1 %2, label %3, label %6, !dbg !9000

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9001
  %5 = or i32 %4, 1, !dbg !9001
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9001
  br label %6, !dbg !9003

6:                                                ; preds = %3, %0
  ret void, !dbg !9004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !9005 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9006
  %2 = and i32 %1, -2, !dbg !9006
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9006
  ret void, !dbg !9007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !9008 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9034, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata i8 %1, metadata !9035, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9036, metadata !DIExpression()), !dbg !9037
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9038
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9038
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9037
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9039
  %8 = load i8, i8* %6, align 4, !dbg !9040
  %9 = zext i8 %8 to i32, !dbg !9041
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9041
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9042
  br i1 %11, label %18, label %24, !dbg !9043

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9037
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9039
  %14 = load i8, i8* %6, align 4, !dbg !9040
  %15 = zext i8 %14 to i32, !dbg !9041
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9041
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9042
  br i1 %17, label %18, label %24, !dbg !9043, !llvm.loop !9044

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9046
  %21 = load i8, i8* %20, align 1, !dbg !9046
  %22 = icmp eq i8 %21, %1, !dbg !9049
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9050
  br i1 %22, label %24, label %12, !dbg !9051

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9037
  ret i32 %25, !dbg !9052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9053 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !9064, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i8 %1, metadata !9065, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i32 %2, metadata !9066, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i32 0, metadata !9069, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i32 0, metadata !9070, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i8 0, metadata !9071, metadata !DIExpression()), !dbg !9081
  %4 = icmp eq i8 %1, 0, !dbg !9082
  br i1 %4, label %35, label %5, !dbg !9083

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9082
  br label %9, !dbg !9083

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !9071, metadata !DIExpression()), !dbg !9081
  call void @llvm.dbg.value(metadata i32 %29, metadata !9069, metadata !DIExpression()), !dbg !9080
  %8 = icmp eq i32 %34, %6, !dbg !9082
  br i1 %8, label %35, label %9, !dbg !9083, !llvm.loop !9084

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9071, metadata !DIExpression()), !dbg !9081
  call void @llvm.dbg.value(metadata i32 %11, metadata !9069, metadata !DIExpression()), !dbg !9080
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !9086
  %13 = load i32, i32* %12, align 4, !dbg !9086
  call void @llvm.dbg.value(metadata i32 %13, metadata !9068, metadata !DIExpression()), !dbg !9080
  %14 = and i32 %13, 31, !dbg !9087
  %15 = icmp ult i32 %14, 16, !dbg !9088
  br i1 %15, label %16, label %20, !dbg !9089

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9090
  %18 = load i32, i32* %17, align 4, !dbg !9090
  %19 = or i32 %18, 32, !dbg !9092
  call void @llvm.dbg.value(metadata i32 %19, metadata !9069, metadata !DIExpression()), !dbg !9080
  br label %28, !dbg !9093

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !9094

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9095
  %23 = load i32, i32* %22, align 4, !dbg !9095
  call void @llvm.dbg.value(metadata i32 %23, metadata !9073, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !9096
  %24 = lshr i32 %23, 7, !dbg !9097
  %25 = and i32 %24, 16, !dbg !9097
  %26 = or i32 %25, %23, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %26, metadata !9069, metadata !DIExpression()), !dbg !9080
  br label %28, !dbg !9098

27:                                               ; preds = %20
  br label %28, !dbg !9099

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !9080
  call void @llvm.dbg.value(metadata i32 %29, metadata !9069, metadata !DIExpression()), !dbg !9080
  %30 = lshr i32 %13, 5, !dbg !9099
  %31 = and i32 %30, 255, !dbg !9099
  call void @llvm.dbg.value(metadata i32 %31, metadata !9067, metadata !DIExpression()), !dbg !9080
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !9100
  call void @llvm.dbg.value(metadata i32 %32, metadata !9070, metadata !DIExpression()), !dbg !9080
  %33 = icmp slt i32 %32, 0, !dbg !9101
  %34 = add nuw nsw i32 %10, 1, !dbg !9103
  call void @llvm.dbg.value(metadata i32 %34, metadata !9071, metadata !DIExpression()), !dbg !9081
  br i1 %33, label %35, label %7, !dbg !9104

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !9105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9110, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.value(metadata i32 %1, metadata !9111, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.value(metadata i32 %2, metadata !9112, metadata !DIExpression()), !dbg !9114
  %4 = icmp ugt i32 %0, 175, !dbg !9115
  br i1 %4, label %16, label %5, !dbg !9117

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9118
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9119
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9119
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9113, metadata !DIExpression()), !dbg !9114
  %9 = add nsw i32 %6, -8, !dbg !9120
  %10 = icmp ult i32 %9, 3, !dbg !9120
  br i1 %10, label %16, label %11, !dbg !9122

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.65(%struct.device* noundef %8) #25, !dbg !9123
  br i1 %12, label %13, label %16, !dbg !9124

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9125
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !9126
  br label %16, !dbg !9127

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9114
  ret i32 %17, !dbg !9128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.65(%struct.device* noundef %0) unnamed_addr #1 !dbg !9129 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9133, metadata !DIExpression()), !dbg !9134
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9135, !srcloc !9137
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.66(%struct.device* noundef %0) #25, !dbg !9138
  ret i1 %2, !dbg !9139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.66(%struct.device* noundef %0) unnamed_addr #1 !dbg !9140 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9142, metadata !DIExpression()), !dbg !9143
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !9144
  ret i1 %2, !dbg !9145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9146 {
  ret void, !dbg !9147
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9148 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9150, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 0, metadata !9151, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 2, metadata !9152, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 0, metadata !9153, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 2, metadata !9154, metadata !DIExpression()), !dbg !9155
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9156
  %2 = and i32 %1, 12, !dbg !9157
  call void @llvm.dbg.value(metadata i32 %2, metadata !9150, metadata !DIExpression()), !dbg !9155
  %3 = icmp eq i32 %2, 8, !dbg !9158
  br i1 %3, label %4, label %18, !dbg !9158

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9159
  call void @llvm.dbg.value(metadata i32 %5, metadata !9153, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9155
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9161
  %7 = and i32 %6, 63, !dbg !9162
  call void @llvm.dbg.value(metadata i32 %7, metadata !9154, metadata !DIExpression()), !dbg !9155
  %8 = udiv i32 16000000, %7, !dbg !9163
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9163
  %10 = lshr i32 %9, 6, !dbg !9163
  %11 = and i32 %10, 511, !dbg !9163
  %12 = mul i32 %11, %8, !dbg !9163
  call void @llvm.dbg.value(metadata i32 %12, metadata !9151, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 %12, metadata !9151, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 %12, metadata !9151, metadata !DIExpression()), !dbg !9155
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9165
  %14 = lshr i32 %13, 15, !dbg !9166
  %15 = and i32 %14, 6, !dbg !9166
  %16 = add nuw nsw i32 %15, 2, !dbg !9166
  call void @llvm.dbg.value(metadata i32 %16, metadata !9152, metadata !DIExpression()), !dbg !9155
  %17 = udiv i32 %12, %16, !dbg !9167
  br label %18, !dbg !9168

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !9169
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9170
  %21 = lshr i32 %20, 4, !dbg !9171
  %22 = and i32 %21, 15, !dbg !9171
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !9172
  %24 = load i8, i8* %23, align 1, !dbg !9172
  %25 = zext i8 %24 to i32, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %25, metadata !9150, metadata !DIExpression()), !dbg !9155
  %26 = lshr i32 %19, %25, !dbg !9173
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !9173
  ret void, !dbg !9174
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !9175 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9217, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 0, metadata !9218, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 0, metadata !9219, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 0, metadata !9220, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 0, metadata !9221, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 0, metadata !9222, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 0, metadata !9223, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 0, metadata !9224, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 0, metadata !9225, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 0, metadata !9226, metadata !DIExpression()), !dbg !9231
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9232
  %4 = load i32, i32* %3, align 4, !dbg !9232
  %5 = and i32 %4, 1, !dbg !9234
  %6 = icmp eq i32 %5, 0, !dbg !9235
  br i1 %6, label %17, label %7, !dbg !9236

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9237
  %9 = and i32 %8, -100663297, !dbg !9237
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9237
  %11 = load i32, i32* %10, align 4, !dbg !9237
  %12 = or i32 %9, %11, !dbg !9237
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9237
  %13 = load i32, i32* %10, align 4, !dbg !9239
  %14 = icmp eq i32 %13, 0, !dbg !9241
  %15 = zext i1 %14 to i32, !dbg !9242
  %16 = load i32, i32* %3, align 4, !dbg !9243
  br label %17, !dbg !9242

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !9243
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !9231
  call void @llvm.dbg.value(metadata i32 %19, metadata !9225, metadata !DIExpression()), !dbg !9231
  %20 = and i32 %18, 2, !dbg !9245
  %21 = icmp eq i32 %20, 0, !dbg !9246
  br i1 %21, label %32, label %22, !dbg !9247

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9248
  %24 = and i32 %23, -402653185, !dbg !9248
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9248
  %26 = load i32, i32* %25, align 4, !dbg !9248
  %27 = or i32 %24, %26, !dbg !9248
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9248
  %28 = load i32, i32* %25, align 4, !dbg !9250
  %29 = icmp eq i32 %28, 0, !dbg !9252
  %30 = select i1 %29, i32 1, i32 %19, !dbg !9253
  %31 = load i32, i32* %3, align 4, !dbg !9254
  br label %32, !dbg !9253

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !9254
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !9231
  call void @llvm.dbg.value(metadata i32 %34, metadata !9225, metadata !DIExpression()), !dbg !9231
  %35 = and i32 %33, 4, !dbg !9256
  %36 = icmp eq i32 %35, 0, !dbg !9257
  br i1 %36, label %49, label %37, !dbg !9258

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9259
  %39 = and i32 %38, -3145729, !dbg !9259
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9259
  %41 = load i32, i32* %40, align 4, !dbg !9259
  %42 = or i32 %39, %41, !dbg !9259
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9259
  %43 = load i32, i32* %40, align 4, !dbg !9261
  %44 = icmp eq i32 %43, 1048576, !dbg !9263
  %45 = select i1 %44, i32 1, i32 %34, !dbg !9264
  call void @llvm.dbg.value(metadata i32 %45, metadata !9225, metadata !DIExpression()), !dbg !9231
  %46 = icmp eq i32 %43, 0, !dbg !9265
  %47 = zext i1 %46 to i32, !dbg !9267
  %48 = load i32, i32* %3, align 4, !dbg !9268
  br label %49, !dbg !9267

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !9268
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !9231
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !9231
  call void @llvm.dbg.value(metadata i32 %52, metadata !9226, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 %51, metadata !9225, metadata !DIExpression()), !dbg !9231
  %53 = and i32 %50, 8, !dbg !9270
  %54 = icmp eq i32 %53, 0, !dbg !9271
  br i1 %54, label %67, label %55, !dbg !9272

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9273
  %57 = and i32 %56, -12582913, !dbg !9273
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9273
  %59 = load i32, i32* %58, align 4, !dbg !9273
  %60 = or i32 %57, %59, !dbg !9273
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9273
  %61 = load i32, i32* %58, align 4, !dbg !9275
  %62 = icmp eq i32 %61, 4194304, !dbg !9277
  %63 = select i1 %62, i32 1, i32 %51, !dbg !9278
  call void @llvm.dbg.value(metadata i32 %63, metadata !9225, metadata !DIExpression()), !dbg !9231
  %64 = icmp eq i32 %61, 0, !dbg !9279
  %65 = select i1 %64, i32 1, i32 %52, !dbg !9281
  %66 = load i32, i32* %3, align 4, !dbg !9282
  br label %67, !dbg !9281

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !9282
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !9231
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !9231
  call void @llvm.dbg.value(metadata i32 %70, metadata !9226, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 %69, metadata !9225, metadata !DIExpression()), !dbg !9231
  %71 = and i32 %68, 32, !dbg !9283
  %72 = icmp eq i32 %71, 0, !dbg !9284
  br i1 %72, label %131, label %73, !dbg !9285

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !9286
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !9286
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9227, metadata !DIExpression()), !dbg !9286
  store volatile i32 0, i32* %2, align 4, !dbg !9286
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9286
  %76 = or i32 %75, 268435456, !dbg !9286
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9286
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9286
  %78 = and i32 %77, 268435456, !dbg !9286
  store volatile i32 %78, i32* %2, align 4, !dbg !9286
  %79 = load volatile i32, i32* %2, align 4, !dbg !9286
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !9287
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9288
  %81 = or i32 %80, 256, !dbg !9288
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9288
  %82 = tail call i32 @HAL_GetTick() #24, !dbg !9289
  call void @llvm.dbg.value(metadata i32 %82, metadata !9218, metadata !DIExpression()), !dbg !9231
  br label %83, !dbg !9290

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9291
  %85 = and i32 %84, 256, !dbg !9292
  %86 = icmp eq i32 %85, 0, !dbg !9293
  br i1 %86, label %87, label %91, !dbg !9290

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #24, !dbg !9294
  %89 = sub i32 %88, %82, !dbg !9297
  %90 = icmp ugt i32 %89, 2, !dbg !9298
  br i1 %90, label %439, label %83, !dbg !9299, !llvm.loop !9300

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9302
  %93 = and i32 %92, 768, !dbg !9303
  call void @llvm.dbg.value(metadata i32 %93, metadata !9219, metadata !DIExpression()), !dbg !9231
  %94 = icmp eq i32 %93, 0, !dbg !9304
  br i1 %94, label %116, label %95, !dbg !9306

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9307
  %97 = load i32, i32* %96, align 4, !dbg !9307
  %98 = and i32 %97, 768, !dbg !9308
  %99 = icmp eq i32 %93, %98, !dbg !9309
  br i1 %99, label %116, label %100, !dbg !9310

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9311
  %102 = and i32 %101, -769, !dbg !9313
  call void @llvm.dbg.value(metadata i32 %102, metadata !9219, metadata !DIExpression()), !dbg !9231
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9314
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9315
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9316
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9317
  %104 = and i32 %103, 1, !dbg !9317
  %105 = icmp eq i32 %104, 0, !dbg !9317
  br i1 %105, label %116, label %106, !dbg !9319

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #24, !dbg !9320
  call void @llvm.dbg.value(metadata i32 %107, metadata !9218, metadata !DIExpression()), !dbg !9231
  br label %108, !dbg !9322

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9323
  %110 = and i32 %109, 2, !dbg !9324
  %111 = icmp eq i32 %110, 0, !dbg !9324
  br i1 %111, label %112, label %116, !dbg !9322

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #24, !dbg !9325
  %114 = sub i32 %113, %107, !dbg !9328
  %115 = icmp ugt i32 %114, 5000, !dbg !9329
  br i1 %115, label %439, label %108, !dbg !9330, !llvm.loop !9331

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9333
  %118 = load i32, i32* %117, align 4, !dbg !9333
  %119 = and i32 %118, 768, !dbg !9333
  %120 = icmp eq i32 %119, 768, !dbg !9333
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9333
  %122 = and i32 %121, -2031617, !dbg !9333
  %123 = and i32 %118, 268434687, !dbg !9333
  %124 = select i1 %120, i32 %123, i32 0, !dbg !9333
  %125 = or i32 %122, %124, !dbg !9333
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9333
  %126 = load i32, i32* %117, align 4, !dbg !9333
  %127 = and i32 %126, 4095, !dbg !9333
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9333
  %129 = or i32 %128, %127, !dbg !9333
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9333
  %130 = load i32, i32* %3, align 4, !dbg !9335
  br label %131, !dbg !9337

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !9335
  %133 = and i32 %132, 16, !dbg !9338
  %134 = icmp eq i32 %133, 0, !dbg !9339
  br i1 %134, label %140, label %135, !dbg !9340

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9341
  %137 = load i8, i8* %136, align 4, !dbg !9341
  %138 = zext i8 %137 to i32, !dbg !9341
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !9341
  %139 = load i32, i32* %3, align 4, !dbg !9343
  br label %140, !dbg !9345

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !9343
  %142 = and i32 %141, 128, !dbg !9346
  %143 = icmp eq i32 %142, 0, !dbg !9347
  br i1 %143, label %151, label %144, !dbg !9348

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9349
  %146 = and i32 %145, -12582913, !dbg !9349
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9349
  %148 = load i32, i32* %147, align 4, !dbg !9349
  %149 = or i32 %146, %148, !dbg !9349
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9349
  %150 = load i32, i32* %3, align 4, !dbg !9351
  br label %151, !dbg !9353

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !9351
  %153 = and i32 %152, 64, !dbg !9354
  %154 = icmp eq i32 %153, 0, !dbg !9355
  br i1 %154, label %162, label %155, !dbg !9356

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9357
  %157 = and i32 %156, -67108865, !dbg !9357
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9357
  %159 = load i32, i32* %158, align 4, !dbg !9357
  %160 = or i32 %157, %159, !dbg !9357
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9357
  %161 = load i32, i32* %3, align 4, !dbg !9359
  br label %162, !dbg !9361

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !9359
  %164 = and i32 %163, 256, !dbg !9362
  %165 = icmp eq i32 %164, 0, !dbg !9363
  br i1 %165, label %176, label %166, !dbg !9364

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9365
  %168 = and i32 %167, -134217729, !dbg !9365
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9365
  %170 = load i32, i32* %169, align 4, !dbg !9365
  %171 = or i32 %168, %170, !dbg !9365
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9365
  %172 = load i32, i32* %169, align 4, !dbg !9367
  %173 = icmp eq i32 %172, 134217728, !dbg !9369
  %174 = select i1 %173, i32 1, i32 %70, !dbg !9370
  %175 = load i32, i32* %3, align 4, !dbg !9371
  br label %176, !dbg !9370

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !9371
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !9231
  call void @llvm.dbg.value(metadata i32 %178, metadata !9226, metadata !DIExpression()), !dbg !9231
  %179 = and i32 %177, 512, !dbg !9373
  %180 = icmp eq i32 %179, 0, !dbg !9374
  br i1 %180, label %188, label %181, !dbg !9375

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9376
  %183 = and i32 %182, -268435457, !dbg !9376
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9376
  %185 = load i32, i32* %184, align 4, !dbg !9376
  %186 = or i32 %183, %185, !dbg !9376
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9376
  %187 = load i32, i32* %3, align 4, !dbg !9378
  br label %188, !dbg !9380

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !9378
  %190 = and i32 %189, 1024, !dbg !9381
  %191 = icmp eq i32 %190, 0, !dbg !9382
  br i1 %191, label %204, label %192, !dbg !9383

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9384
  %194 = and i32 %193, -536870913, !dbg !9384
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9384
  %196 = load i32, i32* %195, align 4, !dbg !9384
  %197 = or i32 %194, %196, !dbg !9384
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9384
  %198 = load i32, i32* %195, align 4, !dbg !9386
  %199 = icmp eq i32 %198, 536870912, !dbg !9388
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !9389
  call void @llvm.dbg.value(metadata i32 %69, metadata !9225, metadata !DIExpression()), !dbg !9231
  br i1 %201, label %209, label %202, !dbg !9389

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !9390
  br label %206, !dbg !9389

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !9225, metadata !DIExpression()), !dbg !9231
  %205 = icmp eq i32 %69, 1, !dbg !9392
  br i1 %205, label %209, label %206, !dbg !9393

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !9390
  %208 = icmp eq i32 %207, 2048, !dbg !9394
  br i1 %208, label %209, label %356, !dbg !9395

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9396
  %210 = tail call i32 @HAL_GetTick() #24, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %210, metadata !9218, metadata !DIExpression()), !dbg !9231
  br label %211, !dbg !9399

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9400
  %213 = and i32 %212, 134217728, !dbg !9400
  %214 = icmp eq i32 %213, 0, !dbg !9400
  br i1 %214, label %219, label %215, !dbg !9399

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #24, !dbg !9401
  %217 = sub i32 %216, %210, !dbg !9404
  %218 = icmp ugt i32 %217, 2, !dbg !9405
  br i1 %218, label %439, label %211, !dbg !9406, !llvm.loop !9407

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !9409
  %221 = and i32 %220, 1, !dbg !9411
  %222 = icmp eq i32 %221, 0, !dbg !9412
  br i1 %222, label %227, label %223, !dbg !9413

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9414
  %225 = load i32, i32* %224, align 4, !dbg !9414
  %226 = icmp eq i32 %225, 0, !dbg !9415
  br i1 %226, label %234, label %227, !dbg !9416

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !9417
  %229 = icmp eq i32 %228, 0, !dbg !9418
  br i1 %229, label %252, label %230, !dbg !9419

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9420
  %232 = load i32, i32* %231, align 4, !dbg !9420
  %233 = icmp eq i32 %232, 0, !dbg !9421
  br i1 %233, label %234, label %252, !dbg !9422

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9423
  %236 = and i32 %235, 196608, !dbg !9425
  call void @llvm.dbg.value(metadata i32 %236, metadata !9220, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9231
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9426
  %238 = and i32 %237, 251658240, !dbg !9427
  call void @llvm.dbg.value(metadata i32 %238, metadata !9221, metadata !DIExpression()), !dbg !9231
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9428
  %240 = load i32, i32* %239, align 4, !dbg !9428
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9428
  %242 = load i32, i32* %241, align 4, !dbg !9428
  %243 = shl i32 %242, 6, !dbg !9428
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9428
  %245 = load i32, i32* %244, align 4, !dbg !9428
  %246 = shl i32 %245, 28, !dbg !9428
  %247 = or i32 %240, %236, !dbg !9428
  %248 = or i32 %247, %238, !dbg !9428
  %249 = or i32 %248, %243, !dbg !9428
  %250 = or i32 %249, %246, !dbg !9428
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9428
  %251 = load i32, i32* %3, align 4, !dbg !9429
  br label %252, !dbg !9431

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !9429
  %254 = and i32 %253, 4, !dbg !9432
  %255 = icmp eq i32 %254, 0, !dbg !9433
  br i1 %255, label %260, label %256, !dbg !9434

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9435
  %258 = load i32, i32* %257, align 4, !dbg !9435
  %259 = icmp eq i32 %258, 1048576, !dbg !9436
  br i1 %259, label %267, label %260, !dbg !9437

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !9438
  %262 = icmp eq i32 %261, 0, !dbg !9439
  br i1 %262, label %291, label %263, !dbg !9440

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9441
  %265 = load i32, i32* %264, align 4, !dbg !9441
  %266 = icmp eq i32 %265, 4194304, !dbg !9442
  br i1 %266, label %267, label %291, !dbg !9443

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9444
  %269 = and i32 %268, 196608, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %269, metadata !9220, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9231
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9447
  %271 = and i32 %270, 1879048192, !dbg !9448
  call void @llvm.dbg.value(metadata i32 %271, metadata !9222, metadata !DIExpression()), !dbg !9231
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9449
  %273 = load i32, i32* %272, align 4, !dbg !9449
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9449
  %275 = load i32, i32* %274, align 4, !dbg !9449
  %276 = shl i32 %275, 6, !dbg !9449
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9449
  %278 = load i32, i32* %277, align 4, !dbg !9449
  %279 = shl i32 %278, 24, !dbg !9449
  %280 = or i32 %273, %269, !dbg !9449
  %281 = or i32 %280, %271, !dbg !9449
  %282 = or i32 %281, %276, !dbg !9449
  %283 = or i32 %282, %279, !dbg !9449
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9449
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9450
  %285 = and i32 %284, -32, !dbg !9450
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9450
  %287 = load i32, i32* %286, align 4, !dbg !9450
  %288 = add i32 %287, -1, !dbg !9450
  %289 = or i32 %288, %285, !dbg !9450
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9450
  %290 = load i32, i32* %3, align 4, !dbg !9451
  br label %291, !dbg !9453

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !9451
  %293 = and i32 %292, 1024, !dbg !9454
  %294 = icmp eq i32 %293, 0, !dbg !9455
  br i1 %294, label %321, label %295, !dbg !9456

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9457
  %297 = load i32, i32* %296, align 4, !dbg !9457
  %298 = icmp eq i32 %297, 536870912, !dbg !9458
  br i1 %298, label %299, label %321, !dbg !9459

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9460
  call void @llvm.dbg.value(metadata i32 %300, metadata !9221, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9231
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9462
  %302 = and i32 %301, 1879048192, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %302, metadata !9222, metadata !DIExpression()), !dbg !9231
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9464
  %304 = load i32, i32* %303, align 4, !dbg !9464
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9464
  %306 = load i32, i32* %305, align 4, !dbg !9464
  %307 = shl i32 %306, 6, !dbg !9464
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9464
  %309 = load i32, i32* %308, align 4, !dbg !9464
  %310 = shl i32 %309, 15, !dbg !9464
  %311 = add i32 %310, -65536, !dbg !9464
  %312 = and i32 %311, -65536, !dbg !9464
  %313 = shl i32 %300, 9, !dbg !9464
  %314 = and i32 %313, 100663296, !dbg !9464
  %315 = add nuw nsw i32 %314, 33554432, !dbg !9464
  %316 = or i32 %302, %304, !dbg !9464
  %317 = or i32 %316, %315, !dbg !9464
  %318 = or i32 %317, %307, !dbg !9464
  %319 = or i32 %318, %312, !dbg !9464
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9464
  %320 = load i32, i32* %3, align 4, !dbg !9465
  br label %321, !dbg !9467

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !9465
  %323 = and i32 %322, 2048, !dbg !9468
  %324 = icmp eq i32 %323, 0, !dbg !9469
  br i1 %324, label %346, label %325, !dbg !9470

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9471
  %327 = load i32, i32* %326, align 4, !dbg !9471
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9471
  %329 = load i32, i32* %328, align 4, !dbg !9471
  %330 = shl i32 %329, 6, !dbg !9471
  %331 = or i32 %330, %327, !dbg !9471
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9471
  %333 = load i32, i32* %332, align 4, !dbg !9471
  %334 = shl i32 %333, 15, !dbg !9471
  %335 = add i32 %334, -65536, !dbg !9471
  %336 = and i32 %335, -65536, !dbg !9471
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9471
  %338 = load i32, i32* %337, align 4, !dbg !9471
  %339 = shl i32 %338, 24, !dbg !9471
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9471
  %341 = load i32, i32* %340, align 4, !dbg !9471
  %342 = shl i32 %341, 28, !dbg !9471
  %343 = or i32 %331, %339, !dbg !9471
  %344 = or i32 %343, %336, !dbg !9471
  %345 = or i32 %344, %342, !dbg !9471
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9471
  br label %346, !dbg !9473

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9474
  %347 = tail call i32 @HAL_GetTick() #24, !dbg !9475
  call void @llvm.dbg.value(metadata i32 %347, metadata !9218, metadata !DIExpression()), !dbg !9231
  br label %348, !dbg !9476

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9477
  %350 = and i32 %349, 134217728, !dbg !9478
  %351 = icmp eq i32 %350, 0, !dbg !9478
  br i1 %351, label %352, label %356, !dbg !9476

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #24, !dbg !9479
  %354 = sub i32 %353, %347, !dbg !9482
  %355 = icmp ugt i32 %354, 2, !dbg !9483
  br i1 %355, label %439, label %348, !dbg !9484, !llvm.loop !9485

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !9487
  br i1 %357, label %358, label %439, !dbg !9489

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9490
  %359 = tail call i32 @HAL_GetTick() #24, !dbg !9492
  call void @llvm.dbg.value(metadata i32 %359, metadata !9218, metadata !DIExpression()), !dbg !9231
  br label %360, !dbg !9493

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9494
  %362 = and i32 %361, 536870912, !dbg !9494
  %363 = icmp eq i32 %362, 0, !dbg !9494
  br i1 %363, label %368, label %364, !dbg !9493

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #24, !dbg !9495
  %366 = sub i32 %365, %359, !dbg !9498
  %367 = icmp ugt i32 %366, 2, !dbg !9499
  br i1 %367, label %439, label %360, !dbg !9500, !llvm.loop !9501

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !9503
  %370 = and i32 %369, 4, !dbg !9505
  %371 = icmp eq i32 %370, 0, !dbg !9506
  br i1 %371, label %376, label %372, !dbg !9507

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9508
  %374 = load i32, i32* %373, align 4, !dbg !9508
  %375 = icmp eq i32 %374, 0, !dbg !9509
  br i1 %375, label %383, label %376, !dbg !9510

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !9511
  %378 = icmp eq i32 %377, 0, !dbg !9512
  br i1 %378, label %405, label %379, !dbg !9513

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9514
  %381 = load i32, i32* %380, align 4, !dbg !9514
  %382 = icmp eq i32 %381, 0, !dbg !9515
  br i1 %382, label %383, label %405, !dbg !9516

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9517
  %385 = and i32 %384, 196608, !dbg !9519
  call void @llvm.dbg.value(metadata i32 %385, metadata !9223, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9231
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9520
  %387 = load i32, i32* %386, align 4, !dbg !9520
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9520
  %389 = load i32, i32* %388, align 4, !dbg !9520
  %390 = shl i32 %389, 6, !dbg !9520
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9520
  %392 = load i32, i32* %391, align 4, !dbg !9520
  %393 = shl i32 %392, 24, !dbg !9520
  %394 = or i32 %385, %387, !dbg !9520
  %395 = or i32 %394, %390, !dbg !9520
  %396 = or i32 %395, %393, !dbg !9520
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9520
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9521
  %398 = and i32 %397, -7937, !dbg !9521
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9521
  %400 = load i32, i32* %399, align 4, !dbg !9521
  %401 = shl i32 %400, 8, !dbg !9521
  %402 = add i32 %401, -256, !dbg !9521
  %403 = or i32 %402, %398, !dbg !9521
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9521
  %404 = load i32, i32* %3, align 4, !dbg !9522
  br label %405, !dbg !9524

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !9522
  %407 = and i32 %406, 256, !dbg !9525
  %408 = icmp eq i32 %407, 0, !dbg !9526
  br i1 %408, label %429, label %409, !dbg !9527

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9528
  %411 = load i32, i32* %410, align 4, !dbg !9528
  %412 = icmp eq i32 %411, 134217728, !dbg !9529
  br i1 %412, label %413, label %429, !dbg !9530

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9531
  %415 = and i32 %414, 251658240, !dbg !9533
  call void @llvm.dbg.value(metadata i32 %415, metadata !9224, metadata !DIExpression()), !dbg !9231
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9534
  %417 = load i32, i32* %416, align 4, !dbg !9534
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9534
  %419 = load i32, i32* %418, align 4, !dbg !9534
  %420 = shl i32 %419, 6, !dbg !9534
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9534
  %422 = load i32, i32* %421, align 4, !dbg !9534
  %423 = shl i32 %422, 15, !dbg !9534
  %424 = add i32 %423, -65536, !dbg !9534
  %425 = and i32 %424, -65536, !dbg !9534
  %426 = or i32 %415, %417, !dbg !9534
  %427 = or i32 %426, %420, !dbg !9534
  %428 = or i32 %427, %425, !dbg !9534
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9534
  br label %429, !dbg !9535

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9536
  %430 = tail call i32 @HAL_GetTick() #24, !dbg !9537
  call void @llvm.dbg.value(metadata i32 %430, metadata !9218, metadata !DIExpression()), !dbg !9231
  br label %431, !dbg !9538

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9539
  %433 = and i32 %432, 536870912, !dbg !9540
  %434 = icmp eq i32 %433, 0, !dbg !9540
  br i1 %434, label %435, label %439, !dbg !9538

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #24, !dbg !9541
  %437 = sub i32 %436, %430, !dbg !9544
  %438 = icmp ugt i32 %437, 2, !dbg !9545
  br i1 %438, label %439, label %431, !dbg !9546, !llvm.loop !9547

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !9231
  ret i32 %440, !dbg !9549
}

; Function Attrs: optsize
declare !dbg !9550 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #14 !dbg !9552 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9556, metadata !DIExpression()), !dbg !9558
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9559
  store i32 2047, i32* %2, align 4, !dbg !9560
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9561
  %4 = and i32 %3, 63, !dbg !9562
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9563
  store i32 %4, i32* %5, align 4, !dbg !9564
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9565
  %7 = lshr i32 %6, 6, !dbg !9566
  %8 = and i32 %7, 511, !dbg !9566
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9567
  store i32 %8, i32* %9, align 4, !dbg !9568
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9569
  %11 = lshr i32 %10, 15, !dbg !9570
  %12 = and i32 %11, 6, !dbg !9570
  %13 = add nuw nsw i32 %12, 2, !dbg !9570
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9571
  store i32 %13, i32* %14, align 4, !dbg !9572
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9573
  %16 = lshr i32 %15, 24, !dbg !9574
  %17 = and i32 %16, 15, !dbg !9574
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9575
  store i32 %17, i32* %18, align 4, !dbg !9576
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9577
  %20 = lshr i32 %19, 28, !dbg !9578
  %21 = and i32 %20, 7, !dbg !9578
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9579
  store i32 %21, i32* %22, align 4, !dbg !9580
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9581
  %24 = and i32 %23, 63, !dbg !9582
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9583
  store i32 %24, i32* %25, align 4, !dbg !9584
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9585
  %27 = lshr i32 %26, 6, !dbg !9586
  %28 = and i32 %27, 511, !dbg !9586
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9587
  store i32 %28, i32* %29, align 4, !dbg !9588
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9589
  %31 = lshr i32 %30, 15, !dbg !9590
  %32 = and i32 %31, 6, !dbg !9590
  %33 = add nuw nsw i32 %32, 2, !dbg !9590
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9591
  store i32 %33, i32* %34, align 4, !dbg !9592
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9593
  %36 = lshr i32 %35, 24, !dbg !9594
  %37 = and i32 %36, 15, !dbg !9594
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9595
  store i32 %37, i32* %38, align 4, !dbg !9596
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9597
  %40 = and i32 %39, 31, !dbg !9598
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9599
  store i32 %40, i32* %41, align 4, !dbg !9600
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9601
  %43 = lshr i32 %42, 8, !dbg !9602
  %44 = and i32 %43, 31, !dbg !9602
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9603
  store i32 %44, i32* %45, align 4, !dbg !9604
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9605
  %47 = and i32 %46, 3145728, !dbg !9605
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9606
  store i32 %47, i32* %48, align 4, !dbg !9607
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9608
  %50 = and i32 %49, 12582912, !dbg !9608
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9609
  store i32 %50, i32* %51, align 4, !dbg !9610
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9611
  %53 = and i32 %52, 100663296, !dbg !9611
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9612
  store i32 %53, i32* %54, align 4, !dbg !9613
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9614
  %56 = and i32 %55, 402653184, !dbg !9614
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9615
  store i32 %56, i32* %57, align 4, !dbg !9616
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9617
  %59 = and i32 %58, 2031616, !dbg !9618
  call void @llvm.dbg.value(metadata i32 %59, metadata !9557, metadata !DIExpression()), !dbg !9558
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9619
  %61 = and i32 %60, 768, !dbg !9620
  %62 = or i32 %61, %59, !dbg !9621
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9622
  store i32 %62, i32* %63, align 4, !dbg !9623
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9624
  %65 = and i32 %64, 67108864, !dbg !9624
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9625
  store i32 %65, i32* %66, align 4, !dbg !9626
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9627
  %68 = and i32 %67, 12582912, !dbg !9627
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9628
  store i32 %68, i32* %69, align 4, !dbg !9629
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9630
  %71 = and i32 %70, 134217728, !dbg !9630
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9631
  store i32 %71, i32* %72, align 4, !dbg !9632
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9633
  %74 = and i32 %73, 268435456, !dbg !9633
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9634
  store i32 %74, i32* %75, align 4, !dbg !9635
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9636
  %77 = and i32 %76, 536870912, !dbg !9636
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9637
  store i32 %77, i32* %78, align 4, !dbg !9638
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9639
  %80 = lshr i32 %79, 24, !dbg !9641
  %81 = trunc i32 %80 to i8, !dbg !9641
  %82 = and i8 %81, 1, !dbg !9641
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9642
  store i8 %82, i8* %83, align 4, !dbg !9644
  ret void, !dbg !9645
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #14 !dbg !9646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9648, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 0, metadata !9649, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 0, metadata !9650, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 0, metadata !9651, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 0, metadata !9652, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 0, metadata !9653, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 0, metadata !9654, metadata !DIExpression()), !dbg !9655
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !9656

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9657
  call void @llvm.dbg.value(metadata i32 %3, metadata !9652, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 %3, metadata !9652, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !9655
  %4 = lshr i32 %3, 20, !dbg !9660
  %5 = and i32 %4, 15, !dbg !9660
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !9660

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9661
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9665
  %9 = and i32 %8, 63, !dbg !9665
  %10 = udiv i32 16000000, %9, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %10, metadata !9651, metadata !DIExpression()), !dbg !9655
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9666
  %12 = lshr i32 %11, 24, !dbg !9667
  %13 = and i32 %12, 15, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %13, metadata !9649, metadata !DIExpression()), !dbg !9655
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9668
  %15 = lshr i32 %14, 6, !dbg !9669
  %16 = and i32 %15, 511, !dbg !9669
  %17 = mul i32 %16, %10, !dbg !9670
  %18 = udiv i32 %17, %13, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %18, metadata !9650, metadata !DIExpression()), !dbg !9655
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9672
  %20 = lshr i32 %19, 8, !dbg !9673
  %21 = and i32 %20, 31, !dbg !9673
  %22 = add nuw nsw i32 %21, 1, !dbg !9674
  call void @llvm.dbg.value(metadata i32 %22, metadata !9649, metadata !DIExpression()), !dbg !9655
  %23 = udiv i32 %18, %22, !dbg !9675
  call void @llvm.dbg.value(metadata i32 %23, metadata !9650, metadata !DIExpression()), !dbg !9655
  br label %123, !dbg !9676

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9677
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9680
  %27 = and i32 %26, 63, !dbg !9680
  %28 = udiv i32 16000000, %27, !dbg !9680
  call void @llvm.dbg.value(metadata i32 %28, metadata !9651, metadata !DIExpression()), !dbg !9655
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9681
  %30 = lshr i32 %29, 24, !dbg !9682
  %31 = and i32 %30, 15, !dbg !9682
  call void @llvm.dbg.value(metadata i32 %31, metadata !9649, metadata !DIExpression()), !dbg !9655
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9683
  %33 = lshr i32 %32, 6, !dbg !9684
  %34 = and i32 %33, 511, !dbg !9684
  %35 = mul i32 %34, %28, !dbg !9685
  %36 = udiv i32 %35, %31, !dbg !9686
  call void @llvm.dbg.value(metadata i32 %36, metadata !9650, metadata !DIExpression()), !dbg !9655
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9687
  %38 = and i32 %37, 31, !dbg !9688
  %39 = add nuw nsw i32 %38, 1, !dbg !9689
  call void @llvm.dbg.value(metadata i32 %39, metadata !9649, metadata !DIExpression()), !dbg !9655
  %40 = udiv i32 %36, %39, !dbg !9690
  call void @llvm.dbg.value(metadata i32 %40, metadata !9650, metadata !DIExpression()), !dbg !9655
  br label %123, !dbg !9691

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9692
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9695
  %44 = and i32 %43, 63, !dbg !9695
  %45 = udiv i32 16000000, %44, !dbg !9695
  call void @llvm.dbg.value(metadata i32 %45, metadata !9651, metadata !DIExpression()), !dbg !9655
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9696
  %47 = lshr i32 %46, 28, !dbg !9697
  %48 = and i32 %47, 7, !dbg !9697
  call void @llvm.dbg.value(metadata i32 %48, metadata !9649, metadata !DIExpression()), !dbg !9655
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9698
  %50 = lshr i32 %49, 6, !dbg !9699
  %51 = and i32 %50, 511, !dbg !9699
  %52 = mul i32 %51, %45, !dbg !9700
  %53 = udiv i32 %52, %48, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %53, metadata !9650, metadata !DIExpression()), !dbg !9655
  br label %123, !dbg !9702

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !9650, metadata !DIExpression()), !dbg !9655
  br label %123, !dbg !9703

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9705
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9650, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9650, metadata !DIExpression()), !dbg !9655
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9708
  call void @llvm.dbg.value(metadata i32 %58, metadata !9653, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !9655
  %59 = lshr i32 %58, 25, !dbg !9710
  %60 = and i32 %59, 3, !dbg !9710
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !9710

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9711
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9715
  %64 = and i32 %63, 63, !dbg !9715
  %65 = udiv i32 16000000, %64, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %65, metadata !9651, metadata !DIExpression()), !dbg !9655
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9716
  %67 = lshr i32 %66, 6, !dbg !9717
  %68 = and i32 %67, 511, !dbg !9717
  %69 = mul i32 %68, %65, !dbg !9718
  call void @llvm.dbg.value(metadata i32 %69, metadata !9654, metadata !DIExpression()), !dbg !9655
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9719
  %71 = lshr i32 %70, 28, !dbg !9720
  %72 = and i32 %71, 7, !dbg !9720
  %73 = udiv i32 %69, %72, !dbg !9721
  call void @llvm.dbg.value(metadata i32 %73, metadata !9650, metadata !DIExpression()), !dbg !9655
  br label %123, !dbg !9722

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9723
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9726
  %77 = and i32 %76, 63, !dbg !9726
  %78 = udiv i32 16000000, %77, !dbg !9726
  call void @llvm.dbg.value(metadata i32 %78, metadata !9651, metadata !DIExpression()), !dbg !9655
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9727
  %80 = lshr i32 %79, 6, !dbg !9728
  %81 = and i32 %80, 511, !dbg !9728
  %82 = mul i32 %81, %78, !dbg !9729
  call void @llvm.dbg.value(metadata i32 %82, metadata !9654, metadata !DIExpression()), !dbg !9655
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9730
  %84 = lshr i32 %83, 28, !dbg !9731
  %85 = and i32 %84, 7, !dbg !9731
  %86 = udiv i32 %82, %85, !dbg !9732
  call void @llvm.dbg.value(metadata i32 %86, metadata !9650, metadata !DIExpression()), !dbg !9655
  br label %123, !dbg !9733

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9734
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9650, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9650, metadata !DIExpression()), !dbg !9655
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9737
  call void @llvm.dbg.value(metadata i32 %91, metadata !9653, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !9655
  %92 = lshr i32 %91, 27, !dbg !9739
  %93 = and i32 %92, 3, !dbg !9739
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !9739

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9740
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9744
  %97 = and i32 %96, 63, !dbg !9744
  %98 = udiv i32 16000000, %97, !dbg !9744
  call void @llvm.dbg.value(metadata i32 %98, metadata !9651, metadata !DIExpression()), !dbg !9655
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9745
  %100 = lshr i32 %99, 6, !dbg !9746
  %101 = and i32 %100, 511, !dbg !9746
  %102 = mul i32 %101, %98, !dbg !9747
  call void @llvm.dbg.value(metadata i32 %102, metadata !9654, metadata !DIExpression()), !dbg !9655
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9748
  %104 = lshr i32 %103, 28, !dbg !9749
  %105 = and i32 %104, 7, !dbg !9749
  %106 = udiv i32 %102, %105, !dbg !9750
  call void @llvm.dbg.value(metadata i32 %106, metadata !9650, metadata !DIExpression()), !dbg !9655
  br label %123, !dbg !9751

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9752
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 undef, metadata !9651, metadata !DIExpression()), !dbg !9655
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9755
  %110 = and i32 %109, 63, !dbg !9755
  %111 = udiv i32 16000000, %110, !dbg !9755
  call void @llvm.dbg.value(metadata i32 %111, metadata !9651, metadata !DIExpression()), !dbg !9655
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9756
  %113 = lshr i32 %112, 6, !dbg !9757
  %114 = and i32 %113, 511, !dbg !9757
  %115 = mul i32 %114, %111, !dbg !9758
  call void @llvm.dbg.value(metadata i32 %115, metadata !9654, metadata !DIExpression()), !dbg !9655
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9759
  %117 = lshr i32 %116, 28, !dbg !9760
  %118 = and i32 %117, 7, !dbg !9760
  %119 = udiv i32 %115, %118, !dbg !9761
  call void @llvm.dbg.value(metadata i32 %119, metadata !9650, metadata !DIExpression()), !dbg !9655
  br label %123, !dbg !9762

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9763
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9650, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9650, metadata !DIExpression()), !dbg !9655
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !9655
  call void @llvm.dbg.value(metadata i32 %124, metadata !9650, metadata !DIExpression()), !dbg !9655
  ret i32 %124, !dbg !9766
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #13 !dbg !9767 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9771, metadata !DIExpression()), !dbg !9772
  %2 = icmp eq i8 %0, 1, !dbg !9773
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9775
  %4 = and i32 %3, -9, !dbg !9776
  %5 = select i1 %2, i32 8, i32 0, !dbg !9776
  %6 = or i32 %4, %5, !dbg !9776
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9775
  ret void, !dbg !9777
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9778 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !9783, metadata !DIExpression()), !dbg !9785
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9786
  %2 = tail call i32 @HAL_GetTick() #24, !dbg !9787
  call void @llvm.dbg.value(metadata i32 %2, metadata !9784, metadata !DIExpression()), !dbg !9785
  br label %3, !dbg !9788

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9789
  %5 = and i32 %4, 134217728, !dbg !9789
  %6 = icmp eq i32 %5, 0, !dbg !9789
  br i1 %6, label %11, label %7, !dbg !9788

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #24, !dbg !9790
  %9 = sub i32 %8, %2, !dbg !9793
  %10 = icmp ugt i32 %9, 2, !dbg !9794
  br i1 %10, label %41, label %3, !dbg !9795, !llvm.loop !9796

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !9798
  %13 = load i32, i32* %12, align 4, !dbg !9798
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !9798
  %15 = load i32, i32* %14, align 4, !dbg !9798
  %16 = shl i32 %15, 6, !dbg !9798
  %17 = or i32 %16, %13, !dbg !9798
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !9798
  %19 = load i32, i32* %18, align 4, !dbg !9798
  %20 = shl i32 %19, 15, !dbg !9798
  %21 = add i32 %20, -65536, !dbg !9798
  %22 = and i32 %21, -65536, !dbg !9798
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !9798
  %24 = load i32, i32* %23, align 4, !dbg !9798
  %25 = shl i32 %24, 24, !dbg !9798
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !9798
  %27 = load i32, i32* %26, align 4, !dbg !9798
  %28 = shl i32 %27, 28, !dbg !9798
  %29 = or i32 %17, %25, !dbg !9798
  %30 = or i32 %29, %22, !dbg !9798
  %31 = or i32 %30, %28, !dbg !9798
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9798
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9799
  %32 = tail call i32 @HAL_GetTick() #24, !dbg !9800
  call void @llvm.dbg.value(metadata i32 %32, metadata !9784, metadata !DIExpression()), !dbg !9785
  br label %33, !dbg !9801

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9802
  %35 = and i32 %34, 134217728, !dbg !9803
  %36 = icmp eq i32 %35, 0, !dbg !9803
  br i1 %36, label %37, label %41, !dbg !9801

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #24, !dbg !9804
  %39 = sub i32 %38, %32, !dbg !9807
  %40 = icmp ugt i32 %39, 2, !dbg !9808
  br i1 %40, label %41, label %33, !dbg !9809, !llvm.loop !9810

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !9785
  ret i32 %42, !dbg !9812
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !9813 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9818
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !9819
  call void @llvm.dbg.value(metadata i32 %1, metadata !9817, metadata !DIExpression()), !dbg !9820
  br label %2, !dbg !9821

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9822
  %4 = and i32 %3, 134217728, !dbg !9822
  %5 = icmp eq i32 %4, 0, !dbg !9823
  br i1 %5, label %10, label %6, !dbg !9821

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #24, !dbg !9824
  %8 = sub i32 %7, %1, !dbg !9827
  %9 = icmp ugt i32 %8, 2, !dbg !9828
  br i1 %9, label %10, label %2, !dbg !9829, !llvm.loop !9830

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !9820
  ret i32 %11, !dbg !9832
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9833 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !9838, metadata !DIExpression()), !dbg !9840
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9841
  %2 = tail call i32 @HAL_GetTick() #24, !dbg !9842
  call void @llvm.dbg.value(metadata i32 %2, metadata !9839, metadata !DIExpression()), !dbg !9840
  br label %3, !dbg !9843

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9844
  %5 = and i32 %4, 536870912, !dbg !9844
  %6 = icmp eq i32 %5, 0, !dbg !9844
  br i1 %6, label %11, label %7, !dbg !9843

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #24, !dbg !9845
  %9 = sub i32 %8, %2, !dbg !9848
  %10 = icmp ugt i32 %9, 2, !dbg !9849
  br i1 %10, label %37, label %3, !dbg !9850, !llvm.loop !9851

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !9853
  %13 = load i32, i32* %12, align 4, !dbg !9853
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !9853
  %15 = load i32, i32* %14, align 4, !dbg !9853
  %16 = shl i32 %15, 6, !dbg !9853
  %17 = or i32 %16, %13, !dbg !9853
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !9853
  %19 = load i32, i32* %18, align 4, !dbg !9853
  %20 = shl i32 %19, 15, !dbg !9853
  %21 = add i32 %20, -65536, !dbg !9853
  %22 = and i32 %21, -65536, !dbg !9853
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !9853
  %24 = load i32, i32* %23, align 4, !dbg !9853
  %25 = shl i32 %24, 24, !dbg !9853
  %26 = or i32 %17, %25, !dbg !9853
  %27 = or i32 %26, %22, !dbg !9853
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9853
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9854
  %28 = tail call i32 @HAL_GetTick() #24, !dbg !9855
  call void @llvm.dbg.value(metadata i32 %28, metadata !9839, metadata !DIExpression()), !dbg !9840
  br label %29, !dbg !9856

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9857
  %31 = and i32 %30, 536870912, !dbg !9858
  %32 = icmp eq i32 %31, 0, !dbg !9858
  br i1 %32, label %33, label %37, !dbg !9856

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #24, !dbg !9859
  %35 = sub i32 %34, %28, !dbg !9862
  %36 = icmp ugt i32 %35, 2, !dbg !9863
  br i1 %36, label %37, label %29, !dbg !9864, !llvm.loop !9865

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !9840
  ret i32 %38, !dbg !9867
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !9868 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9871
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !9872
  call void @llvm.dbg.value(metadata i32 %1, metadata !9870, metadata !DIExpression()), !dbg !9873
  br label %2, !dbg !9874

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9875
  %4 = and i32 %3, 536870912, !dbg !9875
  %5 = icmp eq i32 %4, 0, !dbg !9875
  br i1 %5, label %10, label %6, !dbg !9874

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #24, !dbg !9876
  %8 = sub i32 %7, %1, !dbg !9879
  %9 = icmp ugt i32 %8, 2, !dbg !9880
  br i1 %9, label %10, label %2, !dbg !9881, !llvm.loop !9882

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !9873
  ret i32 %11, !dbg !9884
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #14 !dbg !9885 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9887, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata i32 0, metadata !9888, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata i32 0, metadata !9889, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata i32 0, metadata !9890, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata i32 0, metadata !9891, metadata !DIExpression()), !dbg !9892
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9893
  %2 = lshr i32 %1, 2, !dbg !9894
  %3 = and i32 %2, 3, !dbg !9894
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !9894

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9895
  %6 = and i32 %5, 63, !dbg !9898
  call void @llvm.dbg.value(metadata i32 %6, metadata !9887, metadata !DIExpression()), !dbg !9892
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9899
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9901
  %9 = lshr i32 %8, 6, !dbg !9901
  %10 = and i32 %9, 511, !dbg !9901
  %11 = zext i32 %10 to i64, !dbg !9901
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !9901
  %13 = zext i32 %6 to i64, !dbg !9901
  %14 = udiv i64 %12, %13, !dbg !9901
  %15 = trunc i64 %14 to i32, !dbg !9901
  call void @llvm.dbg.value(metadata i32 %15, metadata !9888, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata i32 %15, metadata !9888, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata i32 %15, metadata !9888, metadata !DIExpression()), !dbg !9892
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9902
  %17 = lshr i32 %16, 15, !dbg !9903
  %18 = and i32 %17, 6, !dbg !9903
  %19 = add nuw nsw i32 %18, 2, !dbg !9903
  call void @llvm.dbg.value(metadata i32 %19, metadata !9889, metadata !DIExpression()), !dbg !9892
  %20 = udiv i32 %15, %19, !dbg !9904
  call void @llvm.dbg.value(metadata i32 %20, metadata !9891, metadata !DIExpression()), !dbg !9892
  br label %38, !dbg !9905

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9906
  %23 = and i32 %22, 63, !dbg !9908
  call void @llvm.dbg.value(metadata i32 %23, metadata !9887, metadata !DIExpression()), !dbg !9892
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9909
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9911
  %26 = lshr i32 %25, 6, !dbg !9911
  %27 = and i32 %26, 511, !dbg !9911
  %28 = zext i32 %27 to i64, !dbg !9911
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !9911
  %30 = zext i32 %23 to i64, !dbg !9911
  %31 = udiv i64 %29, %30, !dbg !9911
  %32 = trunc i64 %31 to i32, !dbg !9911
  call void @llvm.dbg.value(metadata i32 %32, metadata !9888, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata i32 %32, metadata !9888, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata i32 %32, metadata !9888, metadata !DIExpression()), !dbg !9892
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9912
  %34 = lshr i32 %33, 28, !dbg !9913
  %35 = and i32 %34, 7, !dbg !9913
  call void @llvm.dbg.value(metadata i32 %35, metadata !9890, metadata !DIExpression()), !dbg !9892
  %36 = udiv i32 %32, %35, !dbg !9914
  call void @llvm.dbg.value(metadata i32 %36, metadata !9891, metadata !DIExpression()), !dbg !9892
  br label %38, !dbg !9915

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !9916
  call void @llvm.dbg.value(metadata i32 %39, metadata !9891, metadata !DIExpression()), !dbg !9892
  ret i32 %39, !dbg !9917
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !9918 {
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !9921
  call void @llvm.dbg.value(metadata i32 %1, metadata !9920, metadata !DIExpression()), !dbg !9922
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9923
  %3 = or i32 %2, 1, !dbg !9923
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9923
  br label %4, !dbg !9924

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9925
  %6 = and i32 %5, 2, !dbg !9925
  %7 = icmp eq i32 %6, 0, !dbg !9926
  br i1 %7, label %8, label %12, !dbg !9924

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #24, !dbg !9927
  %10 = sub i32 %9, %1, !dbg !9930
  %11 = icmp ugt i32 %10, 2, !dbg !9931
  br i1 %11, label %89, label %4, !dbg !9932, !llvm.loop !9933

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9935
  %14 = or i32 %13, 128, !dbg !9935
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9935
  %15 = tail call i32 @HAL_GetTick() #24, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %15, metadata !9920, metadata !DIExpression()), !dbg !9922
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9937
  br label %16, !dbg !9938

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9939
  %18 = and i32 %17, 12, !dbg !9939
  %19 = icmp eq i32 %18, 0, !dbg !9940
  %20 = tail call i32 @HAL_GetTick() #24, !dbg !9922
  br i1 %19, label %24, label %21, !dbg !9938

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !9941
  %23 = icmp ugt i32 %22, 5000, !dbg !9944
  br i1 %23, label %89, label %16, !dbg !9945, !llvm.loop !9946

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !9920, metadata !DIExpression()), !dbg !9922
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9948
  %26 = and i32 %25, -851969, !dbg !9948
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9948
  br label %27, !dbg !9949

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9950
  %29 = and i32 %28, 131072, !dbg !9950
  %30 = icmp eq i32 %29, 0, !dbg !9951
  %31 = tail call i32 @HAL_GetTick() #24, !dbg !9922
  br i1 %30, label %35, label %32, !dbg !9949

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !9952
  %34 = icmp ugt i32 %33, 100, !dbg !9955
  br i1 %34, label %89, label %27, !dbg !9956, !llvm.loop !9957

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !9920, metadata !DIExpression()), !dbg !9922
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9959
  %37 = and i32 %36, -16777217, !dbg !9959
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9959
  br label %38, !dbg !9960

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9961
  %40 = and i32 %39, 33554432, !dbg !9961
  %41 = icmp eq i32 %40, 0, !dbg !9962
  %42 = tail call i32 @HAL_GetTick() #24, !dbg !9922
  br i1 %41, label %46, label %43, !dbg !9960

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !9963
  %45 = icmp ugt i32 %44, 2, !dbg !9966
  br i1 %45, label %89, label %38, !dbg !9967, !llvm.loop !9968

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !9920, metadata !DIExpression()), !dbg !9922
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9970
  %48 = and i32 %47, -67108865, !dbg !9970
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9970
  br label %49, !dbg !9971

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9972
  %51 = and i32 %50, 134217728, !dbg !9972
  %52 = icmp eq i32 %51, 0, !dbg !9973
  %53 = tail call i32 @HAL_GetTick() #24, !dbg !9922
  br i1 %52, label %57, label %54, !dbg !9971

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !9974
  %56 = icmp ugt i32 %55, 2, !dbg !9977
  br i1 %56, label %89, label %49, !dbg !9978, !llvm.loop !9979

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !9920, metadata !DIExpression()), !dbg !9922
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9981
  %59 = and i32 %58, -268435457, !dbg !9981
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9981
  br label %60, !dbg !9982

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9983
  %62 = and i32 %61, 536870912, !dbg !9983
  %63 = icmp eq i32 %62, 0, !dbg !9984
  br i1 %63, label %68, label %64, !dbg !9982

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #24, !dbg !9985
  %66 = sub i32 %65, %53, !dbg !9988
  %67 = icmp ugt i32 %66, 2, !dbg !9989
  br i1 %67, label %89, label %60, !dbg !9990, !llvm.loop !9991

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9993
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9994
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9995
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9996
  %70 = and i32 %69, -7937, !dbg !9996
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9996
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9997
  %72 = and i32 %71, -8193, !dbg !9997
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9997
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9998
  %74 = and i32 %73, -16385, !dbg !9998
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9998
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9999
  %76 = or i32 %75, 10420224, !dbg !9999
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9999
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10000
  %78 = or i32 %77, 2097152, !dbg !10000
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10000
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10001
  %80 = or i32 %79, 4194304, !dbg !10001
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10001
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10002
  %82 = and i32 %81, -2, !dbg !10002
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10002
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10003
  %84 = or i32 %83, 16777216, !dbg !10003
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10003
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !10004
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !10005
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #24, !dbg !10007
  %87 = icmp ne i32 %86, 0, !dbg !10008
  %88 = zext i1 %87 to i32, !dbg !10009
  br label %89, !dbg !10009

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !9922
  ret i32 %90, !dbg !10010
}

; Function Attrs: optsize
declare !dbg !10011 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10014 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10040, metadata !DIExpression()), !dbg !10051
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10052
  br i1 %3, label %337, label %4, !dbg !10054

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10055
  %6 = load i32, i32* %5, align 4, !dbg !10055
  %7 = and i32 %6, 1, !dbg !10057
  %8 = icmp eq i32 %7, 0, !dbg !10058
  br i1 %8, label %74, label %9, !dbg !10059

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10060
  %11 = and i32 %10, 12, !dbg !10060
  %12 = icmp eq i32 %11, 4, !dbg !10063
  br i1 %12, label %29, label %13, !dbg !10064

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10065
  %15 = and i32 %14, 12, !dbg !10065
  %16 = icmp eq i32 %15, 8, !dbg !10066
  br i1 %16, label %17, label %21, !dbg !10067

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10068
  %19 = and i32 %18, 4194304, !dbg !10069
  %20 = icmp eq i32 %19, 0, !dbg !10070
  br i1 %20, label %21, label %29, !dbg !10071

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10072
  %23 = and i32 %22, 12, !dbg !10072
  %24 = icmp eq i32 %23, 12, !dbg !10073
  br i1 %24, label %25, label %37, !dbg !10074

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10075
  %27 = and i32 %26, 4194304, !dbg !10076
  %28 = icmp eq i32 %27, 0, !dbg !10077
  br i1 %28, label %37, label %29, !dbg !10078

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10079
  %31 = and i32 %30, 131072, !dbg !10079
  %32 = icmp eq i32 %31, 0, !dbg !10079
  br i1 %32, label %74, label %33, !dbg !10082

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10083
  %35 = load i32, i32* %34, align 4, !dbg !10083
  %36 = icmp eq i32 %35, 0, !dbg !10084
  br i1 %36, label %337, label %74, !dbg !10085

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10086
  %39 = load i32, i32* %38, align 4, !dbg !10086
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !10090

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10091
  %42 = or i32 %41, 65536, !dbg !10091
  br label %53, !dbg !10091

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10093
  %45 = or i32 %44, 262144, !dbg !10093
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10093
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10093
  %47 = or i32 %46, 65536, !dbg !10093
  br label %53, !dbg !10093

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10096
  %50 = and i32 %49, -65537, !dbg !10096
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10096
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10096
  %52 = and i32 %51, -262145, !dbg !10096
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10098
  %55 = load i32, i32* %38, align 4, !dbg !10099
  %56 = icmp eq i32 %55, 0, !dbg !10101
  %57 = tail call i32 @HAL_GetTick() #24, !dbg !10102
  call void @llvm.dbg.value(metadata i32 %57, metadata !10041, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata i32 %57, metadata !10041, metadata !DIExpression()), !dbg !10051
  br i1 %56, label %66, label %58, !dbg !10103

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10104
  %60 = and i32 %59, 131072, !dbg !10106
  %61 = icmp eq i32 %60, 0, !dbg !10106
  br i1 %61, label %62, label %74, !dbg !10107

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !10108
  %64 = sub i32 %63, %57, !dbg !10111
  %65 = icmp ugt i32 %64, 100, !dbg !10112
  br i1 %65, label %337, label %58, !dbg !10113, !llvm.loop !10114

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10116
  %68 = and i32 %67, 131072, !dbg !10116
  %69 = icmp eq i32 %68, 0, !dbg !10116
  br i1 %69, label %74, label %70, !dbg !10118

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #24, !dbg !10119
  %72 = sub i32 %71, %57, !dbg !10122
  %73 = icmp ugt i32 %72, 100, !dbg !10123
  br i1 %73, label %337, label %66, !dbg !10124, !llvm.loop !10125

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !10127
  %76 = and i32 %75, 2, !dbg !10129
  %77 = icmp eq i32 %76, 0, !dbg !10130
  br i1 %77, label %137, label %78, !dbg !10131

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10132
  %80 = and i32 %79, 12, !dbg !10132
  %81 = icmp eq i32 %80, 0, !dbg !10135
  br i1 %81, label %98, label %82, !dbg !10136

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10137
  %84 = and i32 %83, 12, !dbg !10137
  %85 = icmp eq i32 %84, 8, !dbg !10138
  br i1 %85, label %86, label %90, !dbg !10139

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10140
  %88 = and i32 %87, 4194304, !dbg !10141
  %89 = icmp eq i32 %88, 0, !dbg !10142
  br i1 %89, label %98, label %90, !dbg !10143

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10144
  %92 = and i32 %91, 12, !dbg !10144
  %93 = icmp eq i32 %92, 12, !dbg !10145
  br i1 %93, label %94, label %106, !dbg !10146

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10147
  %96 = and i32 %95, 4194304, !dbg !10148
  %97 = icmp eq i32 %96, 0, !dbg !10149
  br i1 %97, label %98, label %106, !dbg !10150

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10151
  %100 = and i32 %99, 2, !dbg !10151
  %101 = icmp eq i32 %100, 0, !dbg !10151
  br i1 %101, label %130, label %102, !dbg !10154

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10155
  %104 = load i32, i32* %103, align 4, !dbg !10155
  %105 = icmp eq i32 %104, 1, !dbg !10156
  br i1 %105, label %130, label %337, !dbg !10157

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10158
  %108 = load i32, i32* %107, align 4, !dbg !10158
  %109 = icmp eq i32 %108, 0, !dbg !10161
  br i1 %109, label %120, label %110, !dbg !10162

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10163
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !10165
  call void @llvm.dbg.value(metadata i32 %111, metadata !10041, metadata !DIExpression()), !dbg !10051
  br label %112, !dbg !10166

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10167
  %114 = and i32 %113, 2, !dbg !10168
  %115 = icmp eq i32 %114, 0, !dbg !10168
  br i1 %115, label %116, label %130, !dbg !10166

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #24, !dbg !10169
  %118 = sub i32 %117, %111, !dbg !10172
  %119 = icmp ugt i32 %118, 2, !dbg !10173
  br i1 %119, label %337, label %112, !dbg !10174, !llvm.loop !10175

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10177
  %121 = tail call i32 @HAL_GetTick() #24, !dbg !10179
  call void @llvm.dbg.value(metadata i32 %121, metadata !10041, metadata !DIExpression()), !dbg !10051
  br label %122, !dbg !10180

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10181
  %124 = and i32 %123, 2, !dbg !10181
  %125 = icmp eq i32 %124, 0, !dbg !10181
  br i1 %125, label %137, label %126, !dbg !10180

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #24, !dbg !10182
  %128 = sub i32 %127, %121, !dbg !10185
  %129 = icmp ugt i32 %128, 2, !dbg !10186
  br i1 %129, label %337, label %122, !dbg !10187, !llvm.loop !10188

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10190
  %132 = and i32 %131, -249, !dbg !10190
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10190
  %134 = load i32, i32* %133, align 4, !dbg !10190
  %135 = shl i32 %134, 3, !dbg !10190
  %136 = or i32 %135, %132, !dbg !10190
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10190
  br label %137, !dbg !10191

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !10191
  %139 = and i32 %138, 8, !dbg !10193
  %140 = icmp eq i32 %139, 0, !dbg !10194
  br i1 %140, label %165, label %141, !dbg !10195

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10196
  %143 = load i32, i32* %142, align 4, !dbg !10196
  %144 = icmp eq i32 %143, 0, !dbg !10199
  br i1 %144, label %155, label %145, !dbg !10200

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10201
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !10203
  call void @llvm.dbg.value(metadata i32 %146, metadata !10041, metadata !DIExpression()), !dbg !10051
  br label %147, !dbg !10204

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10205
  %149 = and i32 %148, 2, !dbg !10206
  %150 = icmp eq i32 %149, 0, !dbg !10206
  br i1 %150, label %151, label %165, !dbg !10204

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #24, !dbg !10207
  %153 = sub i32 %152, %146, !dbg !10210
  %154 = icmp ugt i32 %153, 2, !dbg !10211
  br i1 %154, label %337, label %147, !dbg !10212, !llvm.loop !10213

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10215
  %156 = tail call i32 @HAL_GetTick() #24, !dbg !10217
  call void @llvm.dbg.value(metadata i32 %156, metadata !10041, metadata !DIExpression()), !dbg !10051
  br label %157, !dbg !10218

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10219
  %159 = and i32 %158, 2, !dbg !10219
  %160 = icmp eq i32 %159, 0, !dbg !10219
  br i1 %160, label %165, label %161, !dbg !10218

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #24, !dbg !10220
  %163 = sub i32 %162, %156, !dbg !10223
  %164 = icmp ugt i32 %163, 2, !dbg !10224
  br i1 %164, label %337, label %157, !dbg !10225, !llvm.loop !10226

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !10228
  %167 = and i32 %166, 4, !dbg !10229
  %168 = icmp eq i32 %167, 0, !dbg !10230
  br i1 %168, label %237, label %169, !dbg !10231

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !10043, metadata !DIExpression()), !dbg !10232
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10233
  %171 = and i32 %170, 268435456, !dbg !10233
  %172 = icmp eq i32 %171, 0, !dbg !10233
  br i1 %172, label %173, label %180, !dbg !10234

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !10235
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !10235
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10047, metadata !DIExpression()), !dbg !10235
  store volatile i32 0, i32* %2, align 4, !dbg !10235
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10235
  %176 = or i32 %175, 268435456, !dbg !10235
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10235
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10235
  %178 = and i32 %177, 268435456, !dbg !10235
  store volatile i32 %178, i32* %2, align 4, !dbg !10235
  %179 = load volatile i32, i32* %2, align 4, !dbg !10235
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !10236
  call void @llvm.dbg.value(metadata i32 1, metadata !10043, metadata !DIExpression()), !dbg !10232
  br label %180, !dbg !10237

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !10043, metadata !DIExpression()), !dbg !10232
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10238
  %182 = and i32 %181, 256, !dbg !10238
  %183 = icmp eq i32 %182, 0, !dbg !10238
  br i1 %183, label %184, label %196, !dbg !10240

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10241
  %186 = or i32 %185, 256, !dbg !10241
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10241
  %187 = tail call i32 @HAL_GetTick() #24, !dbg !10243
  call void @llvm.dbg.value(metadata i32 %187, metadata !10041, metadata !DIExpression()), !dbg !10051
  br label %188, !dbg !10244

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10245
  %190 = and i32 %189, 256, !dbg !10245
  %191 = icmp eq i32 %190, 0, !dbg !10245
  br i1 %191, label %192, label %196, !dbg !10244

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #24, !dbg !10246
  %194 = sub i32 %193, %187, !dbg !10249
  %195 = icmp ugt i32 %194, 2, !dbg !10250
  br i1 %195, label %337, label %188, !dbg !10251, !llvm.loop !10252

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10254
  %198 = load i32, i32* %197, align 4, !dbg !10254
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !10257

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10258
  %201 = or i32 %200, 1, !dbg !10258
  br label %212, !dbg !10258

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10260
  %204 = or i32 %203, 4, !dbg !10260
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10260
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10260
  %206 = or i32 %205, 1, !dbg !10260
  br label %212, !dbg !10260

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10263
  %209 = and i32 %208, -2, !dbg !10263
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10263
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10263
  %211 = and i32 %210, -5, !dbg !10263
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10265
  %214 = load i32, i32* %197, align 4, !dbg !10266
  %215 = icmp eq i32 %214, 0, !dbg !10268
  %216 = tail call i32 @HAL_GetTick() #24, !dbg !10269
  call void @llvm.dbg.value(metadata i32 %216, metadata !10041, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata i32 %216, metadata !10041, metadata !DIExpression()), !dbg !10051
  br i1 %215, label %225, label %217, !dbg !10270

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10271
  %219 = and i32 %218, 2, !dbg !10273
  %220 = icmp eq i32 %219, 0, !dbg !10273
  br i1 %220, label %221, label %233, !dbg !10274

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #24, !dbg !10275
  %223 = sub i32 %222, %216, !dbg !10278
  %224 = icmp ugt i32 %223, 5000, !dbg !10279
  br i1 %224, label %337, label %217, !dbg !10280, !llvm.loop !10281

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10283
  %227 = and i32 %226, 2, !dbg !10283
  %228 = icmp eq i32 %227, 0, !dbg !10283
  br i1 %228, label %233, label %229, !dbg !10285

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #24, !dbg !10286
  %231 = sub i32 %230, %216, !dbg !10289
  %232 = icmp ugt i32 %231, 5000, !dbg !10290
  br i1 %232, label %337, label %225, !dbg !10291, !llvm.loop !10292

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !10294

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10295
  %236 = and i32 %235, -268435457, !dbg !10295
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10295
  br label %237, !dbg !10298

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10299
  %239 = load i32, i32* %238, align 4, !dbg !10299
  %240 = icmp eq i32 %239, 0, !dbg !10301
  br i1 %240, label %336, label %241, !dbg !10302

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10303
  %243 = and i32 %242, 12, !dbg !10303
  %244 = icmp eq i32 %243, 8, !dbg !10306
  br i1 %244, label %297, label %245, !dbg !10307

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !10308
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10311
  %247 = tail call i32 @HAL_GetTick() #24, !dbg !10311
  call void @llvm.dbg.value(metadata i32 %247, metadata !10041, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata i32 %247, metadata !10041, metadata !DIExpression()), !dbg !10051
  br i1 %246, label %248, label %289, !dbg !10312

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10313
  %250 = and i32 %249, 33554432, !dbg !10313
  %251 = icmp eq i32 %250, 0, !dbg !10313
  br i1 %251, label %256, label %252, !dbg !10315

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #24, !dbg !10316
  %254 = sub i32 %253, %247, !dbg !10319
  %255 = icmp ugt i32 %254, 2, !dbg !10320
  br i1 %255, label %337, label %248, !dbg !10321, !llvm.loop !10322

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10324
  %258 = load i32, i32* %257, align 4, !dbg !10324
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10324
  %260 = load i32, i32* %259, align 4, !dbg !10324
  %261 = or i32 %260, %258, !dbg !10324
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10324
  %263 = load i32, i32* %262, align 4, !dbg !10324
  %264 = shl i32 %263, 6, !dbg !10324
  %265 = or i32 %261, %264, !dbg !10324
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10324
  %267 = load i32, i32* %266, align 4, !dbg !10324
  %268 = shl i32 %267, 15, !dbg !10324
  %269 = add i32 %268, -65536, !dbg !10324
  %270 = and i32 %269, -65536, !dbg !10324
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10324
  %272 = load i32, i32* %271, align 4, !dbg !10324
  %273 = shl i32 %272, 24, !dbg !10324
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10324
  %275 = load i32, i32* %274, align 4, !dbg !10324
  %276 = shl i32 %275, 28, !dbg !10324
  %277 = or i32 %265, %273, !dbg !10324
  %278 = or i32 %277, %270, !dbg !10324
  %279 = or i32 %278, %276, !dbg !10324
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10324
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10325
  %280 = tail call i32 @HAL_GetTick() #24, !dbg !10326
  call void @llvm.dbg.value(metadata i32 %280, metadata !10041, metadata !DIExpression()), !dbg !10051
  br label %281, !dbg !10327

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10328
  %283 = and i32 %282, 33554432, !dbg !10329
  %284 = icmp eq i32 %283, 0, !dbg !10329
  br i1 %284, label %285, label %336, !dbg !10327

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #24, !dbg !10330
  %287 = sub i32 %286, %280, !dbg !10333
  %288 = icmp ugt i32 %287, 2, !dbg !10334
  br i1 %288, label %337, label %281, !dbg !10335, !llvm.loop !10336

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10338
  %291 = and i32 %290, 33554432, !dbg !10338
  %292 = icmp eq i32 %291, 0, !dbg !10338
  br i1 %292, label %336, label %293, !dbg !10340

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #24, !dbg !10341
  %295 = sub i32 %294, %247, !dbg !10344
  %296 = icmp ugt i32 %295, 2, !dbg !10345
  br i1 %296, label %337, label %289, !dbg !10346, !llvm.loop !10347

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !10349
  br i1 %298, label %337, label %299, !dbg !10352

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10353
  call void @llvm.dbg.value(metadata i32 %300, metadata !10042, metadata !DIExpression()), !dbg !10051
  %301 = and i32 %300, 4194304, !dbg !10355
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10357
  %303 = load i32, i32* %302, align 4, !dbg !10357
  %304 = icmp eq i32 %301, %303, !dbg !10358
  br i1 %304, label %305, label %337, !dbg !10359

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !10360
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10361
  %308 = load i32, i32* %307, align 4, !dbg !10361
  %309 = icmp eq i32 %306, %308, !dbg !10362
  br i1 %309, label %310, label %337, !dbg !10363

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !10364
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10365
  %313 = load i32, i32* %312, align 4, !dbg !10365
  %314 = shl i32 %313, 6, !dbg !10366
  %315 = icmp eq i32 %311, %314, !dbg !10367
  br i1 %315, label %316, label %337, !dbg !10368

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !10369
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10370
  %319 = load i32, i32* %318, align 4, !dbg !10370
  %320 = shl i32 %319, 15, !dbg !10371
  %321 = add i32 %320, -65536, !dbg !10371
  %322 = and i32 %321, -65536, !dbg !10371
  %323 = icmp eq i32 %317, %322, !dbg !10372
  br i1 %323, label %324, label %337, !dbg !10373

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !10374
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10375
  %327 = load i32, i32* %326, align 4, !dbg !10375
  %328 = shl i32 %327, 24, !dbg !10376
  %329 = icmp eq i32 %325, %328, !dbg !10377
  br i1 %329, label %330, label %337, !dbg !10378

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !10379
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10380
  %333 = load i32, i32* %332, align 4, !dbg !10380
  %334 = shl i32 %333, 28, !dbg !10381
  %335 = icmp eq i32 %331, %334, !dbg !10382
  br i1 %335, label %336, label %337, !dbg !10383

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !10384

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !10051
  ret i32 %338, !dbg !10385
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !10386 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10390, metadata !DIExpression()), !dbg !10391
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10392
  store i32 15, i32* %2, align 4, !dbg !10393
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10394
  %4 = and i32 %3, 262144, !dbg !10396
  %5 = icmp eq i32 %4, 0, !dbg !10397
  br i1 %5, label %8, label %6, !dbg !10398

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10399
  store i32 327680, i32* %7, align 4, !dbg !10401
  br label %15, !dbg !10402

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10403
  %10 = and i32 %9, 65536, !dbg !10405
  %11 = icmp eq i32 %10, 0, !dbg !10406
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10407
  br i1 %11, label %14, label %13, !dbg !10408

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !10409
  br label %15, !dbg !10411

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !10412
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10414
  %17 = and i32 %16, 1, !dbg !10416
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10417
  store i32 %17, i32* %18, align 4, !dbg !10419
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10420
  %20 = lshr i32 %19, 3, !dbg !10421
  %21 = and i32 %20, 31, !dbg !10421
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10422
  store i32 %21, i32* %22, align 4, !dbg !10423
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10424
  %24 = and i32 %23, 4, !dbg !10426
  %25 = icmp eq i32 %24, 0, !dbg !10427
  br i1 %25, label %28, label %26, !dbg !10428

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10429
  store i32 5, i32* %27, align 4, !dbg !10431
  br label %35, !dbg !10432

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10433
  %30 = and i32 %29, 1, !dbg !10435
  %31 = icmp eq i32 %30, 0, !dbg !10436
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10437
  br i1 %31, label %34, label %33, !dbg !10438

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !10439
  br label %35, !dbg !10441

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !10442
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10444
  %37 = and i32 %36, 1, !dbg !10446
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10447
  store i32 %37, i32* %38, align 4, !dbg !10449
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10450
  %40 = and i32 %39, 16777216, !dbg !10452
  %41 = icmp eq i32 %40, 0, !dbg !10453
  %42 = select i1 %41, i32 1, i32 2, !dbg !10454
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10455
  store i32 %42, i32* %43, align 4, !dbg !10457
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10458
  %45 = and i32 %44, 4194304, !dbg !10459
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10460
  store i32 %45, i32* %46, align 4, !dbg !10461
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10462
  %48 = and i32 %47, 63, !dbg !10463
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10464
  store i32 %48, i32* %49, align 4, !dbg !10465
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10466
  %51 = lshr i32 %50, 6, !dbg !10467
  %52 = and i32 %51, 511, !dbg !10467
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10468
  store i32 %52, i32* %53, align 4, !dbg !10469
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10470
  %55 = shl i32 %54, 1, !dbg !10471
  %56 = and i32 %55, 393216, !dbg !10471
  %57 = add nuw nsw i32 %56, 131072, !dbg !10471
  %58 = lshr exact i32 %57, 16, !dbg !10472
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10473
  store i32 %58, i32* %59, align 4, !dbg !10474
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10475
  %61 = lshr i32 %60, 24, !dbg !10476
  %62 = and i32 %61, 15, !dbg !10476
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10477
  store i32 %62, i32* %63, align 4, !dbg !10478
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10479
  %65 = lshr i32 %64, 28, !dbg !10480
  %66 = and i32 %65, 7, !dbg !10480
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10481
  store i32 %66, i32* %67, align 4, !dbg !10482
  ret void, !dbg !10483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !10484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10487, metadata !DIExpression()), !dbg !10488
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !10489
  ret void, !dbg !10490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !10491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10494, metadata !DIExpression()), !dbg !10496
  call void @llvm.dbg.value(metadata i32 1000, metadata !10495, metadata !DIExpression()), !dbg !10496
  %2 = udiv i32 %0, 1000, !dbg !10497
  %3 = add nsw i32 %2, -1, !dbg !10498
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10499
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10500
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10501
  ret void, !dbg !10502
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !10503 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10505, metadata !DIExpression()), !dbg !10507
  %3 = bitcast i32* %2 to i8*, !dbg !10508
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10508
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10506, metadata !DIExpression()), !dbg !10509
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10510
  store volatile i32 %4, i32* %2, align 4, !dbg !10509
  %5 = load volatile i32, i32* %2, align 4, !dbg !10511
  %6 = icmp eq i32 %0, -1, !dbg !10512
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10505, metadata !DIExpression()), !dbg !10507
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %8, metadata !10505, metadata !DIExpression()), !dbg !10507
  br label %9, !dbg !10514

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10505, metadata !DIExpression()), !dbg !10507
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10515
  call void @llvm.dbg.value(metadata i32 undef, metadata !10505, metadata !DIExpression()), !dbg !10507
  %12 = shl i32 %11, 15, !dbg !10507
  %13 = ashr i32 %12, 31, !dbg !10507
  %14 = add i32 %13, %10, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %14, metadata !10505, metadata !DIExpression()), !dbg !10507
  %15 = icmp eq i32 %14, 0, !dbg !10514
  br i1 %15, label %16, label %9, !dbg !10514

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10518
  ret void, !dbg !10518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !10519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10521, metadata !DIExpression()), !dbg !10522
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !10523
  ret void, !dbg !10524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !10525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10530, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i32 0, metadata !10533, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i32 0, metadata !10534, metadata !DIExpression()), !dbg !10535
  %2 = icmp eq i32 %0, 0, !dbg !10536
  br i1 %2, label %72, label %3, !dbg !10538

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10539
  %5 = icmp eq i32 %4, 49152, !dbg !10542
  br i1 %5, label %6, label %21, !dbg !10543

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !10544
  %8 = select i1 %7, i32 0, i32 5, !dbg !10547
  call void @llvm.dbg.value(metadata i32 %8, metadata !10533, metadata !DIExpression()), !dbg !10535
  %9 = add i32 %0, -120000001, !dbg !10548
  %10 = icmp ult i32 %9, 30000000, !dbg !10548
  %11 = select i1 %10, i32 4, i32 %8, !dbg !10548
  call void @llvm.dbg.value(metadata i32 %11, metadata !10533, metadata !DIExpression()), !dbg !10535
  %12 = icmp ult i32 %9, -30000000, !dbg !10550
  %13 = select i1 %12, i32 %11, i32 3, !dbg !10550
  call void @llvm.dbg.value(metadata i32 %13, metadata !10533, metadata !DIExpression()), !dbg !10535
  %14 = icmp ugt i32 %0, 60000000, !dbg !10552
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !10554
  br i1 %16, label %21, label %17, !dbg !10554

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !10555
  %19 = and i1 %18, %15, !dbg !10558
  %20 = select i1 %19, i32 1, i32 %13, !dbg !10558
  br label %21, !dbg !10558

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !10535
  call void @llvm.dbg.value(metadata i32 %22, metadata !10533, metadata !DIExpression()), !dbg !10535
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10559
  %24 = icmp eq i32 %23, 32768, !dbg !10561
  br i1 %24, label %25, label %45, !dbg !10562

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !10563
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !10566
  %29 = select i1 %28, i32 5, i32 %22, !dbg !10566
  call void @llvm.dbg.value(metadata i32 %29, metadata !10533, metadata !DIExpression()), !dbg !10535
  %30 = icmp ugt i32 %0, 12000000, !dbg !10567
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !10569
  %33 = select i1 %32, i32 4, i32 %29, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %33, metadata !10533, metadata !DIExpression()), !dbg !10535
  %34 = icmp ugt i32 %0, 90000000, !dbg !10570
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !10572
  %37 = select i1 %36, i32 3, i32 %33, !dbg !10572
  call void @llvm.dbg.value(metadata i32 %37, metadata !10533, metadata !DIExpression()), !dbg !10535
  %38 = icmp ugt i32 %0, 60000000, !dbg !10573
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !10575
  br i1 %40, label %45, label %41, !dbg !10575

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !10576
  %43 = select i1 %42, i1 %39, i1 false, !dbg !10579
  %44 = select i1 %43, i32 1, i32 %37, !dbg !10579
  br label %45, !dbg !10579

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !10580
  call void @llvm.dbg.value(metadata i32 %46, metadata !10533, metadata !DIExpression()), !dbg !10535
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10581
  %48 = icmp eq i32 %47, 16384, !dbg !10583
  br i1 %48, label %49, label %61, !dbg !10584

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !10585
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !10588
  %53 = select i1 %52, i32 3, i32 %46, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %53, metadata !10533, metadata !DIExpression()), !dbg !10535
  %54 = icmp ugt i32 %0, 60000000, !dbg !10589
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !10591
  br i1 %56, label %61, label %57, !dbg !10591

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !10592
  %59 = select i1 %58, i1 %55, i1 false, !dbg !10595
  %60 = select i1 %59, i32 1, i32 %53, !dbg !10595
  br label %61, !dbg !10595

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !10580
  call void @llvm.dbg.value(metadata i32 %62, metadata !10533, metadata !DIExpression()), !dbg !10535
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #25, !dbg !10596
  call void @llvm.dbg.value(metadata i32 2, metadata !10531, metadata !DIExpression()), !dbg !10535
  br label %63, !dbg !10597

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !10580
  call void @llvm.dbg.value(metadata i32 %64, metadata !10531, metadata !DIExpression()), !dbg !10535
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !10598
  call void @llvm.dbg.value(metadata i32 %65, metadata !10532, metadata !DIExpression()), !dbg !10535
  %66 = add nsw i32 %64, -1, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %66, metadata !10531, metadata !DIExpression()), !dbg !10535
  %67 = icmp ne i32 %65, %62, !dbg !10601
  %68 = icmp ne i32 %66, 0, !dbg !10602
  %69 = select i1 %67, i1 %68, i1 false, !dbg !10602
  br i1 %69, label %63, label %70, !dbg !10603, !llvm.loop !10604

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !10606
  call void @llvm.dbg.value(metadata i32 %73, metadata !10534, metadata !DIExpression()), !dbg !10535
  ret i32 %73, !dbg !10607
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10608 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10610
  %2 = and i32 %1, 49152, !dbg !10610
  ret i32 %2, !dbg !10611
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10614, metadata !DIExpression()), !dbg !10615
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10616
  %3 = and i32 %2, -16, !dbg !10616
  %4 = or i32 %3, %0, !dbg !10616
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10616
  ret void, !dbg !10617
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10618 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10619
  %2 = and i32 %1, 15, !dbg !10619
  ret i32 %2, !dbg !10620
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10621 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10639, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10640, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 0, metadata !10641, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 0, metadata !10642, metadata !DIExpression()), !dbg !10643
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10644
  %4 = icmp eq i32 %3, 0, !dbg !10646
  br i1 %4, label %5, label %21, !dbg !10647

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !10648
  call void @llvm.dbg.value(metadata i32 %6, metadata !10642, metadata !DIExpression()), !dbg !10643
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.75() #25, !dbg !10650
  %8 = icmp eq i32 %7, 1, !dbg !10652
  br i1 %8, label %13, label %9, !dbg !10653

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.76() #25, !dbg !10654
  br label %10, !dbg !10656

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.75() #25, !dbg !10657
  %12 = icmp eq i32 %11, 1, !dbg !10658
  br i1 %12, label %13, label %10, !dbg !10656, !llvm.loop !10659

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10661
  %15 = load i32, i32* %14, align 4, !dbg !10661
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10662
  %17 = load i32, i32* %16, align 4, !dbg !10662
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10663
  %19 = load i32, i32* %18, align 4, !dbg !10663
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.77(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !10664
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !10665
  call void @llvm.dbg.value(metadata i32 %20, metadata !10641, metadata !DIExpression()), !dbg !10643
  br label %21, !dbg !10666

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10667
  call void @llvm.dbg.value(metadata i32 %22, metadata !10641, metadata !DIExpression()), !dbg !10643
  ret i32 %22, !dbg !10668
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10669 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10673, metadata !DIExpression()), !dbg !10674
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.79() #25, !dbg !10675
  %2 = icmp ne i32 %1, 0, !dbg !10677
  call void @llvm.dbg.value(metadata i1 %2, metadata !10673, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10674
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #25, !dbg !10678
  %4 = icmp ne i32 %3, 0, !dbg !10680
  call void @llvm.dbg.value(metadata i1 undef, metadata !10673, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10674
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !10681
  %6 = icmp ne i32 %5, 0, !dbg !10683
  %7 = select i1 %6, i1 true, i1 %4, !dbg !10684
  %8 = select i1 %7, i1 true, i1 %2, !dbg !10684
  %9 = zext i1 %8 to i32, !dbg !10684
  call void @llvm.dbg.value(metadata i32 %9, metadata !10673, metadata !DIExpression()), !dbg !10674
  ret i32 %9, !dbg !10685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !10686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10690, metadata !DIExpression()), !dbg !10693
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10691, metadata !DIExpression()), !dbg !10693
  call void @llvm.dbg.value(metadata i32 0, metadata !10692, metadata !DIExpression()), !dbg !10693
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10694
  %4 = load i32, i32* %3, align 4, !dbg !10694
  %5 = and i32 %4, 63, !dbg !10695
  %6 = udiv i32 %0, %5, !dbg !10696
  call void @llvm.dbg.value(metadata i32 %6, metadata !10692, metadata !DIExpression()), !dbg !10693
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10697
  %8 = load i32, i32* %7, align 4, !dbg !10697
  %9 = and i32 %8, 511, !dbg !10698
  %10 = mul i32 %9, %6, !dbg !10699
  call void @llvm.dbg.value(metadata i32 %10, metadata !10692, metadata !DIExpression()), !dbg !10693
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10700
  %12 = load i32, i32* %11, align 4, !dbg !10700
  %13 = lshr i32 %12, 15, !dbg !10701
  %14 = and i32 %13, 131070, !dbg !10701
  %15 = add nuw nsw i32 %14, 2, !dbg !10701
  %16 = udiv i32 %10, %15, !dbg !10702
  call void @llvm.dbg.value(metadata i32 %16, metadata !10692, metadata !DIExpression()), !dbg !10693
  ret i32 %16, !dbg !10703
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.75() unnamed_addr #14 !dbg !10704 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10705
  %2 = lshr i32 %1, 1, !dbg !10706
  %3 = and i32 %2, 1, !dbg !10706
  ret i32 %3, !dbg !10707
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.76() unnamed_addr #13 !dbg !10708 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10709
  %2 = or i32 %1, 1, !dbg !10709
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10709
  ret void, !dbg !10710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.77(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10711 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10713, metadata !DIExpression()), !dbg !10717
  call void @llvm.dbg.value(metadata i32 %1, metadata !10714, metadata !DIExpression()), !dbg !10717
  call void @llvm.dbg.value(metadata i32 %2, metadata !10715, metadata !DIExpression()), !dbg !10717
  call void @llvm.dbg.value(metadata i32 %3, metadata !10716, metadata !DIExpression()), !dbg !10717
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10718
  %6 = and i32 %5, -4227072, !dbg !10718
  %7 = or i32 %1, %0, !dbg !10718
  %8 = shl i32 %2, 6, !dbg !10718
  %9 = or i32 %7, %8, !dbg !10718
  %10 = or i32 %9, %6, !dbg !10718
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10718
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10719
  %12 = and i32 %11, -196609, !dbg !10719
  %13 = or i32 %12, %3, !dbg !10719
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10719
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10720
  %15 = and i32 %14, -1879048193, !dbg !10720
  %16 = or i32 %15, %3, !dbg !10720
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10720
  ret void, !dbg !10721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10726, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10727, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.value(metadata i32 0, metadata !10728, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.value(metadata i32 0, metadata !10729, metadata !DIExpression()), !dbg !10730
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10731
  %4 = load i32, i32* %3, align 4, !dbg !10731
  %5 = lshr i32 %4, 4, !dbg !10731
  %6 = and i32 %5, 15, !dbg !10731
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10731
  %8 = load i8, i8* %7, align 1, !dbg !10731
  %9 = zext i8 %8 to i32, !dbg !10731
  %10 = lshr i32 %0, %9, !dbg !10731
  call void @llvm.dbg.value(metadata i32 %10, metadata !10729, metadata !DIExpression()), !dbg !10730
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10732
  %12 = icmp ult i32 %11, %10, !dbg !10734
  br i1 %12, label %13, label %16, !dbg !10735

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10736
  call void @llvm.dbg.value(metadata i32 %14, metadata !10728, metadata !DIExpression()), !dbg !10730
  %15 = icmp eq i32 %14, 0, !dbg !10738
  br i1 %15, label %16, label %30, !dbg !10740

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.78() #25, !dbg !10741
  br label %17, !dbg !10743

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.79() #25, !dbg !10744
  %19 = icmp eq i32 %18, 1, !dbg !10745
  br i1 %19, label %20, label %17, !dbg !10743, !llvm.loop !10746

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10748
  tail call fastcc void @LL_RCC_SetAHBPrescaler.80(i32 noundef %21) #25, !dbg !10749
  tail call fastcc void @LL_RCC_SetSysClkSource.81() #25, !dbg !10750
  br label %22, !dbg !10751

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.82() #25, !dbg !10752
  %24 = icmp eq i32 %23, 8, !dbg !10753
  br i1 %24, label %25, label %22, !dbg !10751, !llvm.loop !10754

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10756
  %27 = load i32, i32* %26, align 4, !dbg !10756
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.83(i32 noundef %27) #25, !dbg !10757
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10758
  %29 = load i32, i32* %28, align 4, !dbg !10758
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.84(i32 noundef %29) #25, !dbg !10759
  br label %30, !dbg !10760

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10761
  %33 = icmp ugt i32 %32, %10, !dbg !10763
  br i1 %33, label %34, label %36, !dbg !10764

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10765
  call void @llvm.dbg.value(metadata i32 %35, metadata !10728, metadata !DIExpression()), !dbg !10730
  br label %36, !dbg !10767

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10730
  call void @llvm.dbg.value(metadata i32 %37, metadata !10728, metadata !DIExpression()), !dbg !10730
  %38 = icmp eq i32 %37, 0, !dbg !10768
  br i1 %38, label %39, label %40, !dbg !10770

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !10771
  br label %40, !dbg !10773

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.78() unnamed_addr #13 !dbg !10775 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10776
  %2 = or i32 %1, 16777216, !dbg !10776
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10776
  ret void, !dbg !10777
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.79() unnamed_addr #14 !dbg !10778 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10779
  %2 = lshr i32 %1, 25, !dbg !10780
  %3 = and i32 %2, 1, !dbg !10780
  ret i32 %3, !dbg !10781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.80(i32 noundef %0) unnamed_addr #13 !dbg !10782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10784, metadata !DIExpression()), !dbg !10785
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10786
  %3 = and i32 %2, -241, !dbg !10786
  %4 = or i32 %3, %0, !dbg !10786
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10786
  ret void, !dbg !10787
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.81() unnamed_addr #13 !dbg !10788 {
  call void @llvm.dbg.value(metadata i32 2, metadata !10790, metadata !DIExpression()), !dbg !10791
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10792
  %2 = and i32 %1, -4, !dbg !10792
  %3 = or i32 %2, 2, !dbg !10792
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10792
  ret void, !dbg !10793
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.82() unnamed_addr #14 !dbg !10794 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10795
  %2 = and i32 %1, 12, !dbg !10795
  ret i32 %2, !dbg !10796
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.83(i32 noundef %0) unnamed_addr #13 !dbg !10797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10799, metadata !DIExpression()), !dbg !10800
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10801
  %3 = and i32 %2, -7169, !dbg !10801
  %4 = or i32 %3, %0, !dbg !10801
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10801
  ret void, !dbg !10802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.84(i32 noundef %0) unnamed_addr #13 !dbg !10803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10805, metadata !DIExpression()), !dbg !10806
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10807
  %3 = and i32 %2, -57345, !dbg !10807
  %4 = or i32 %3, %0, !dbg !10807
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10807
  ret void, !dbg !10808
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #14 !dbg !10809 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10810
  %2 = lshr i32 %1, 29, !dbg !10811
  %3 = and i32 %2, 1, !dbg !10811
  ret i32 %3, !dbg !10812
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10813 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10814
  %2 = lshr i32 %1, 27, !dbg !10815
  %3 = and i32 %2, 1, !dbg !10815
  ret i32 %3, !dbg !10816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10821, metadata !DIExpression()), !dbg !10827
  call void @llvm.dbg.value(metadata i32 %1, metadata !10822, metadata !DIExpression()), !dbg !10827
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10823, metadata !DIExpression()), !dbg !10827
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10824, metadata !DIExpression()), !dbg !10827
  call void @llvm.dbg.value(metadata i32 0, metadata !10825, metadata !DIExpression()), !dbg !10827
  call void @llvm.dbg.value(metadata i32 0, metadata !10826, metadata !DIExpression()), !dbg !10827
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10828
  %6 = icmp eq i32 %5, 0, !dbg !10830
  br i1 %6, label %7, label %27, !dbg !10831

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !10832
  call void @llvm.dbg.value(metadata i32 %8, metadata !10826, metadata !DIExpression()), !dbg !10827
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.85() #25, !dbg !10834
  %10 = icmp eq i32 %9, 1, !dbg !10836
  br i1 %10, label %19, label %11, !dbg !10837

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10838
  br i1 %12, label %13, label %14, !dbg !10841

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !10842
  br label %15, !dbg !10844

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.86() #25, !dbg !10845
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.87() #25, !dbg !10847
  br label %16, !dbg !10848

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.85() #25, !dbg !10849
  %18 = icmp eq i32 %17, 1, !dbg !10850
  br i1 %18, label %19, label %16, !dbg !10848, !llvm.loop !10851

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10853
  %21 = load i32, i32* %20, align 4, !dbg !10853
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10854
  %23 = load i32, i32* %22, align 4, !dbg !10854
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10855
  %25 = load i32, i32* %24, align 4, !dbg !10855
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.77(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !10856
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !10857
  call void @llvm.dbg.value(metadata i32 %26, metadata !10825, metadata !DIExpression()), !dbg !10827
  br label %27, !dbg !10858

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10859
  call void @llvm.dbg.value(metadata i32 %28, metadata !10825, metadata !DIExpression()), !dbg !10827
  ret i32 %28, !dbg !10860
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.85() unnamed_addr #14 !dbg !10861 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10862
  %2 = lshr i32 %1, 17, !dbg !10863
  %3 = and i32 %2, 1, !dbg !10863
  ret i32 %3, !dbg !10864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10865 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10866
  %2 = or i32 %1, 262144, !dbg !10866
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10866
  ret void, !dbg !10867
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.86() unnamed_addr #13 !dbg !10868 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10869
  %2 = and i32 %1, -262145, !dbg !10869
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10869
  ret void, !dbg !10870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.87() unnamed_addr #13 !dbg !10871 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10872
  %2 = or i32 %1, 65536, !dbg !10872
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10872
  ret void, !dbg !10873
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10874 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10877, metadata !DIExpression()), !dbg !10893
  call void @llvm.dbg.value(metadata i32 undef, metadata !10877, metadata !DIExpression()), !dbg !10893
  call void @llvm.dbg.value(metadata i32 undef, metadata !10877, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10893
  ret void, !dbg !10894
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10895 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10899, metadata !DIExpression()), !dbg !10901
  %2 = icmp eq i8* %0, null, !dbg !10902
  br i1 %2, label %29, label %3, !dbg !10904

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10905
  %5 = icmp eq i8 %4, 0, !dbg !10906
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10907
  br i1 %6, label %29, label %8, !dbg !10907

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10900, metadata !DIExpression()), !dbg !10901
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10908

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10900, metadata !DIExpression()), !dbg !10901
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !10910
  br i1 %10, label %11, label %15, !dbg !10915

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10916
  %13 = load i8*, i8** %12, align 4, !dbg !10916
  %14 = icmp eq i8* %13, %0, !dbg !10917
  br i1 %14, label %29, label %15, !dbg !10918

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10919
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10900, metadata !DIExpression()), !dbg !10901
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10920
  br i1 %17, label %7, label %8, !dbg !10921, !llvm.loop !10922

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10900, metadata !DIExpression()), !dbg !10901
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !10924
  br i1 %20, label %21, label %26, !dbg !10928

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10929
  %23 = load i8*, i8** %22, align 4, !dbg !10929
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !10930
  %25 = icmp eq i32 %24, 0, !dbg !10931
  br i1 %25, label %29, label %26, !dbg !10932

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10933
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10900, metadata !DIExpression()), !dbg !10901
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10934
  br i1 %28, label %29, label %18, !dbg !10908, !llvm.loop !10935

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10901
  ret %struct.device* %30, !dbg !10937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !10938 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10942, metadata !DIExpression()), !dbg !10943
  %2 = icmp eq %struct.device* %0, null, !dbg !10944
  br i1 %2, label %14, label %3, !dbg !10946

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10947
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10947
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10948
  %7 = load i8, i8* %6, align 1, !dbg !10948
  %8 = and i8 %7, 1, !dbg !10948
  %9 = icmp eq i8 %8, 0, !dbg !10948
  br i1 %9, label %14, label %10, !dbg !10949

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10950
  %12 = load i8, i8* %11, align 1, !dbg !10950
  %13 = icmp eq i8 %12, 0, !dbg !10951
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10943
  ret i1 %15, !dbg !10952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !10953 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10958, metadata !DIExpression()), !dbg !10959
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10960
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10961
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10962 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10970, metadata !DIExpression()), !dbg !10975
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10971, metadata !DIExpression()), !dbg !10975
  call void @llvm.dbg.value(metadata i8* %2, metadata !10972, metadata !DIExpression()), !dbg !10975
  %5 = bitcast i32* %4 to i8*, !dbg !10976
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10976
  call void @llvm.dbg.value(metadata i32 0, metadata !10973, metadata !DIExpression()), !dbg !10975
  store i32 0, i32* %4, align 4, !dbg !10977
  call void @llvm.dbg.value(metadata i32* %4, metadata !10973, metadata !DIExpression(DW_OP_deref)), !dbg !10975
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10978
  call void @llvm.dbg.value(metadata i16* %6, metadata !10974, metadata !DIExpression()), !dbg !10975
  %7 = load i32, i32* %4, align 4, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %7, metadata !10973, metadata !DIExpression()), !dbg !10975
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10980
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10981
  ret i32 %8, !dbg !10982
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10983 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10987, metadata !DIExpression()), !dbg !10993
  call void @llvm.dbg.value(metadata i32* %1, metadata !10988, metadata !DIExpression()), !dbg !10993
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10994
  %4 = load i16*, i16** %3, align 4, !dbg !10994
  call void @llvm.dbg.value(metadata i16* %4, metadata !10989, metadata !DIExpression()), !dbg !10993
  %5 = icmp eq i16* %4, null, !dbg !10995
  br i1 %5, label %14, label %6, !dbg !10996

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10997
  call void @llvm.dbg.value(metadata i32 %7, metadata !10990, metadata !DIExpression()), !dbg !10997
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10998
  %9 = load i16, i16* %8, align 2, !dbg !10998
  %10 = add i16 %9, -32767, !dbg !10999
  %11 = icmp ult i16 %10, 2, !dbg !10999
  %12 = add i32 %7, 1, !dbg !11000
  call void @llvm.dbg.value(metadata i32 %12, metadata !10990, metadata !DIExpression()), !dbg !10997
  br i1 %11, label %13, label %6, !dbg !10999, !llvm.loop !11002

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11005
  br label %14, !dbg !11006

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11008 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11012, metadata !DIExpression()), !dbg !11023
  call void @llvm.dbg.value(metadata i32 %1, metadata !11013, metadata !DIExpression()), !dbg !11023
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11014, metadata !DIExpression()), !dbg !11023
  call void @llvm.dbg.value(metadata i8* %3, metadata !11015, metadata !DIExpression()), !dbg !11023
  call void @llvm.dbg.value(metadata i32 0, metadata !11016, metadata !DIExpression()), !dbg !11024
  %5 = icmp eq i32 %1, 0, !dbg !11025
  br i1 %5, label %16, label %8, !dbg !11026

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11016, metadata !DIExpression()), !dbg !11024
  %7 = icmp eq i32 %15, %1, !dbg !11025
  br i1 %7, label %16, label %8, !dbg !11026, !llvm.loop !11027

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11016, metadata !DIExpression()), !dbg !11024
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11029
  %11 = load i16, i16* %10, align 2, !dbg !11029
  call void @llvm.dbg.value(metadata i16 %11, metadata !11018, metadata !DIExpression()), !dbg !11030
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !11031
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11021, metadata !DIExpression()), !dbg !11030
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %13, metadata !11022, metadata !DIExpression()), !dbg !11030
  %14 = icmp slt i32 %13, 0, !dbg !11033
  %15 = add nuw i32 %9, 1, !dbg !11035
  call void @llvm.dbg.value(metadata i32 %15, metadata !11016, metadata !DIExpression()), !dbg !11024
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !11037 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11041, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11042, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11043, metadata !DIExpression()), !dbg !11044
  %2 = sext i16 %0 to i32, !dbg !11045
  %3 = icmp slt i16 %0, 1, !dbg !11047
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11048
  %6 = add nsw i32 %2, -1, !dbg !11048
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11048
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11048
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11042, metadata !DIExpression()), !dbg !11044
  ret %struct.device* %8, !dbg !11049
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11050 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11052, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11053, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i8* %2, metadata !11054, metadata !DIExpression()), !dbg !11057
  %5 = bitcast i32* %4 to i8*, !dbg !11058
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11058
  call void @llvm.dbg.value(metadata i32 0, metadata !11055, metadata !DIExpression()), !dbg !11057
  store i32 0, i32* %4, align 4, !dbg !11059
  call void @llvm.dbg.value(metadata i32* %4, metadata !11055, metadata !DIExpression(DW_OP_deref)), !dbg !11057
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !11060
  call void @llvm.dbg.value(metadata i16* %6, metadata !11056, metadata !DIExpression()), !dbg !11057
  %7 = load i32, i32* %4, align 4, !dbg !11061
  call void @llvm.dbg.value(metadata i32 %7, metadata !11055, metadata !DIExpression()), !dbg !11057
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !11062
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11063
  ret i32 %8, !dbg !11064
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !11065 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11067, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32* %1, metadata !11068, metadata !DIExpression()), !dbg !11072
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11073
  %4 = load i16*, i16** %3, align 4, !dbg !11073
  call void @llvm.dbg.value(metadata i16* %4, metadata !11069, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 0, metadata !11070, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 0, metadata !11071, metadata !DIExpression()), !dbg !11072
  %5 = icmp eq i16* %4, null, !dbg !11074
  br i1 %5, label %22, label %6, !dbg !11076

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11070, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i16* %8, metadata !11069, metadata !DIExpression()), !dbg !11072
  %9 = load i16, i16* %8, align 2, !dbg !11077
  %10 = icmp eq i16 %9, -32768, !dbg !11081
  call void @llvm.dbg.value(metadata i32 undef, metadata !11070, metadata !DIExpression()), !dbg !11072
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11082
  call void @llvm.dbg.value(metadata i16* %11, metadata !11069, metadata !DIExpression()), !dbg !11072
  %12 = zext i1 %10 to i32, !dbg !11083
  %13 = add i32 %7, %12, !dbg !11083
  call void @llvm.dbg.value(metadata i32 %13, metadata !11070, metadata !DIExpression()), !dbg !11072
  %14 = icmp eq i32 %13, 2, !dbg !11084
  br i1 %14, label %15, label %6, !dbg !11085

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11072
  call void @llvm.dbg.value(metadata i32 %16, metadata !11071, metadata !DIExpression()), !dbg !11072
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11086
  %18 = load i16, i16* %17, align 2, !dbg !11086
  %19 = icmp eq i16 %18, 32767, !dbg !11087
  %20 = add i32 %16, 1, !dbg !11088
  call void @llvm.dbg.value(metadata i32 %20, metadata !11071, metadata !DIExpression()), !dbg !11072
  br i1 %19, label %21, label %15, !dbg !11090, !llvm.loop !11091

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11093
  br label %22, !dbg !11094

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11095
  call void @llvm.dbg.value(metadata i16* %23, metadata !11069, metadata !DIExpression()), !dbg !11072
  ret i16* %23, !dbg !11096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !11097 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11100
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11101
  ret i32* %2, !dbg !11102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !11103 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11251, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11252, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11253, metadata !DIExpression()), !dbg !11254
  ret void, !dbg !11255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11260, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.value(metadata i32 %1, metadata !11261, metadata !DIExpression()), !dbg !11262
  ret void, !dbg !11263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11264 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11268, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.value(metadata i32 %1, metadata !11269, metadata !DIExpression()), !dbg !11270
  ret void, !dbg !11271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11276, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata i8* %1, metadata !11277, metadata !DIExpression()), !dbg !11278
  ret i32 -134, !dbg !11279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11284, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i8* %1, metadata !11285, metadata !DIExpression()), !dbg !11286
  ret i32 -134, !dbg !11287
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #3 !dbg !11288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11291, metadata !DIExpression()), !dbg !11292
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11293, !srcloc !11299
  call void @llvm.dbg.value(metadata i32 undef, metadata !11296, metadata !DIExpression()) #23, !dbg !11300
  call void @llvm.dbg.value(metadata i32 undef, metadata !11297, metadata !DIExpression()) #23, !dbg !11300
  br label %3, !dbg !11301

3:                                                ; preds = %3, %1
  br label %3, !dbg !11302, !llvm.loop !11305
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11312, metadata !DIExpression()), !dbg !11314
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11313, metadata !DIExpression()), !dbg !11314
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11315
  unreachable, !dbg !11315
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #3 !dbg !11316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11318, metadata !DIExpression()), !dbg !11319
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11320
  unreachable, !dbg !11320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11323, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11324, metadata !DIExpression()), !dbg !11327
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11328, !srcloc !11299
  call void @llvm.dbg.value(metadata i32 undef, metadata !11296, metadata !DIExpression()) #23, !dbg !11330
  call void @llvm.dbg.value(metadata i32 undef, metadata !11297, metadata !DIExpression()) #23, !dbg !11330
  call void @llvm.dbg.value(metadata i32 undef, metadata !11325, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11326, metadata !DIExpression()), !dbg !11327
  %4 = icmp eq %struct.__esf* %1, null, !dbg !11331
  br i1 %4, label %6, label %5, !dbg !11333

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !11334
  br label %7, !dbg !11335

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !11334
  br label %7, !dbg !11338

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !11328
  call void @llvm.dbg.value(metadata i32 %8, metadata !11296, metadata !DIExpression()) #23, !dbg !11330
  call void @llvm.dbg.value(metadata i32 %8, metadata !11325, metadata !DIExpression()), !dbg !11327
  %9 = tail call fastcc %struct.k_thread* @k_current_get.94() #26, !dbg !11340
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11326, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i32 undef, metadata !11341, metadata !DIExpression()) #23, !dbg !11344
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11346, !srcloc !11347
  tail call fastcc void @k_thread_abort.95(%struct.k_thread* noundef %9) #25, !dbg !11348
  ret void, !dbg !11351
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.94() unnamed_addr #9 !dbg !11352 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.96() #26, !dbg !11356
  ret %struct.k_thread* %1, !dbg !11357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.95(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11358 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11362, metadata !DIExpression()), !dbg !11363
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11364, !srcloc !11366
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !11367
  ret void, !dbg !11368
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.96() unnamed_addr #9 !dbg !11369 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11370, !srcloc !11372
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !11373
  ret %struct.k_thread* %1, !dbg !11374
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11375 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11379, metadata !DIExpression()), !dbg !11382
  call void @llvm.dbg.value(metadata i32 %1, metadata !11380, metadata !DIExpression()), !dbg !11382
  call void @llvm.dbg.value(metadata i32 %2, metadata !11381, metadata !DIExpression()), !dbg !11382
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !11383
  ret void, !dbg !11384
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11385 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11389, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.value(metadata i8* %1, metadata !11390, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.value(metadata i32 %2, metadata !11391, metadata !DIExpression()), !dbg !11392
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !11393
  ret void, !dbg !11394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11395 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !11396
  ret void, !dbg !11397
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11400, metadata !DIExpression()), !dbg !11401
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !11402
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11403
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11404
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11405
  %4 = trunc i32 %0 to i8, !dbg !11406
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11407
  store i8 %4, i8* %5, align 4, !dbg !11408
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11409
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !11410
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11411
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11412
  store i8* %8, i8** %9, align 4, !dbg !11413
  ret void, !dbg !11414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11417, metadata !DIExpression()), !dbg !11423
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11424
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11418, metadata !DIExpression()), !dbg !11423
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11425
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11419, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i8* null, metadata !11422, metadata !DIExpression()), !dbg !11423
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11426
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11427
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !11428
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !11429
  ret void, !dbg !11430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11431 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11435, metadata !DIExpression()), !dbg !11436
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11437
  ret i8* %2, !dbg !11438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !11439 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11444, metadata !DIExpression()), !dbg !11445
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11446
  %3 = load i8, i8* %2, align 1, !dbg !11447
  %4 = and i8 %3, -5, !dbg !11447
  store i8 %4, i8* %2, align 1, !dbg !11447
  ret void, !dbg !11448
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #3 !dbg !11449 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !11452
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !11453
  %3 = ptrtoint i8* %2 to i32, !dbg !11462
  %4 = add i32 %3, 2048, !dbg !11463
  call void @llvm.dbg.value(metadata i32 %4, metadata !11457, metadata !DIExpression()) #23, !dbg !11464
  call void @llvm.dbg.value(metadata i32 %4, metadata !11465, metadata !DIExpression()) #23, !dbg !11468
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !11470, !srcloc !11471
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11472
  %6 = or i32 %5, 512, !dbg !11472
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11472
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -2, i32 noundef 255) #24, !dbg !11473
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -5, i32 noundef 0) #24, !dbg !11476
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -12, i32 noundef 0) #24, !dbg !11477
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -11, i32 noundef 0) #24, !dbg !11478
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -10, i32 noundef 0) #24, !dbg !11479
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -4, i32 noundef 0) #24, !dbg !11480
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11481
  %8 = or i32 %7, 458752, !dbg !11481
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11481
  tail call void @z_arm_fault_init() #24, !dbg !11482
  tail call void @z_arm_cpu_idle_init() #24, !dbg !11483
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11484
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11487
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !11488
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !11489
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !11490
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !11490
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11451, metadata !DIExpression()), !dbg !11491
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !11492
  call void @z_device_state_init() #24, !dbg !11493
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !11494
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !11495
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !11496
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !11497
  unreachable, !dbg !11497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2012, metadata !DIExpression()), !dbg !11498
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11499
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11499
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2013, metadata !DIExpression()), !dbg !11498
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2013, metadata !DIExpression()), !dbg !11498
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11500
  br i1 %7, label %8, label %35, !dbg !11501

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2013, metadata !DIExpression()), !dbg !11498
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11502
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11502
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2023, metadata !DIExpression()), !dbg !11503
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11504
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11504
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !11505
  call void @llvm.dbg.value(metadata i32 %14, metadata !2027, metadata !DIExpression()), !dbg !11503
  %15 = icmp eq %struct.device* %11, null, !dbg !11506
  br i1 %15, label %32, label %16, !dbg !11508

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11509
  br i1 %17, label %26, label %18, !dbg !11512

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11513
  call void @llvm.dbg.value(metadata i32 %19, metadata !2027, metadata !DIExpression()), !dbg !11503
  %20 = icmp ult i32 %19, 255, !dbg !11515
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11515
  call void @llvm.dbg.value(metadata i32 %21, metadata !2027, metadata !DIExpression()), !dbg !11503
  %22 = trunc i32 %21 to i8, !dbg !11516
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11517
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11517
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11518
  store i8 %22, i8* %25, align 1, !dbg !11519
  br label %26, !dbg !11520

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11521
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11521
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11522
  %30 = load i8, i8* %29, align 1, !dbg !11523
  %31 = or i8 %30, 1, !dbg !11523
  store i8 %31, i8* %29, align 1, !dbg !11523
  br label %32, !dbg !11524

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11525
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2013, metadata !DIExpression()), !dbg !11498
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11500
  br i1 %34, label %8, label %35, !dbg !11501, !llvm.loop !11526

35:                                               ; preds = %32, %1
  ret void, !dbg !11528
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.103(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !11529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11531, metadata !DIExpression()), !dbg !11533
  call void @llvm.dbg.value(metadata i32 %1, metadata !11532, metadata !DIExpression()), !dbg !11533
  %3 = trunc i32 %1 to i8, !dbg !11534
  %4 = shl i8 %3, 4, !dbg !11534
  %5 = and i32 %0, 15, !dbg !11537
  %6 = add nsw i32 %5, -4, !dbg !11538
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11539
  store volatile i8 %4, i8* %7, align 1, !dbg !11540
  ret void, !dbg !11541
}

; Function Attrs: optsize
declare !dbg !11542 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !11543 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11546, metadata !DIExpression()), !dbg !11547
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11548
  store i8 1, i8* %2, align 1, !dbg !11549
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11550
  store i8 1, i8* %3, align 4, !dbg !11551
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11552
  store i32 0, i32* %4, align 4, !dbg !11553
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11554
  store i32 0, i32* %5, align 4, !dbg !11555
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11556
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !11557
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11558
  ret void, !dbg !11559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11560 {
  tail call void @z_sched_init() #24, !dbg !11565
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11566
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([2112 x %struct.z_thread_stack_element], [2112 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i32 0, i32 0)) #24, !dbg !11567
  call void @llvm.dbg.value(metadata i8* %1, metadata !11564, metadata !DIExpression()), !dbg !11568
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !11569
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11570
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !11571
  ret i8* %1, !dbg !11572
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #3 !dbg !11573 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11577, metadata !DIExpression()), !dbg !11578
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !11579
  unreachable, !dbg !11580
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11581 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11583, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.value(metadata i8* %1, metadata !11584, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.value(metadata i8* %2, metadata !11585, metadata !DIExpression()), !dbg !11586
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11587
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !11588
  tail call void @boot_banner() #24, !dbg !11589
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !11590
  tail call void @z_init_static_threads() #24, !dbg !11591
  tail call void @main() #24, !dbg !11592
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11593
  %5 = and i8 %4, -2, !dbg !11593
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11593
  ret void, !dbg !11594
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11595 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11605, metadata !DIExpression()), !dbg !11607
  call void @llvm.dbg.value(metadata i8* %1, metadata !11606, metadata !DIExpression()), !dbg !11607
  ret void, !dbg !11608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11609 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11611, metadata !DIExpression()), !dbg !11613
  call void @llvm.dbg.value(metadata i8* %1, metadata !11612, metadata !DIExpression()), !dbg !11613
  ret void, !dbg !11614
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11615 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11616, !srcloc !11623
  call void @llvm.dbg.value(metadata i32 %1, metadata !11619, metadata !DIExpression()) #23, !dbg !11624
  %2 = icmp ne i32 %1, 0, !dbg !11625
  ret i1 %2, !dbg !11626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !11627 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11628
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11629
  %3 = load i8, i8* %2, align 4, !dbg !11630
  %4 = or i8 %3, 1, !dbg !11630
  store i8 %4, i8* %2, align 4, !dbg !11630
  ret void, !dbg !11631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !11632 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11633
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11634
  %3 = load i8, i8* %2, align 4, !dbg !11635
  %4 = and i8 %3, -2, !dbg !11635
  store i8 %4, i8* %2, align 4, !dbg !11635
  ret void, !dbg !11636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !11637 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11638
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11639
  %3 = load i8, i8* %2, align 4, !dbg !11639
  %4 = and i8 %3, 1, !dbg !11640
  %5 = icmp ne i8 %4, 0, !dbg !11641
  ret i1 %5, !dbg !11642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11647, metadata !DIExpression()), !dbg !11649
  call void @llvm.dbg.value(metadata i8* %1, metadata !11648, metadata !DIExpression()), !dbg !11649
  ret i32 -88, !dbg !11650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11651 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11655, metadata !DIExpression()), !dbg !11656
  ret i8* null, !dbg !11657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11658 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11662, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata i8* %1, metadata !11663, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata i32 %2, metadata !11664, metadata !DIExpression()), !dbg !11665
  ret i32 -88, !dbg !11666
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2035 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2149, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata i8* %1, metadata !2150, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata i32 %2, metadata !2151, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata i32 0, metadata !2152, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata i8 undef, metadata !2154, metadata !DIExpression()), !dbg !11667
  %4 = icmp eq i8* %1, null, !dbg !11668
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11670
  br i1 %6, label %46, label %7, !dbg !11670

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11671
  %9 = load i8, i8* %8, align 1, !dbg !11671
  call void @llvm.dbg.value(metadata i8 %9, metadata !2154, metadata !DIExpression()), !dbg !11667
  %10 = add i32 %2, -1, !dbg !11672
  call void @llvm.dbg.value(metadata i32 %10, metadata !2151, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata i8 0, metadata !2155, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i8 %9, metadata !2154, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata i32 0, metadata !2152, metadata !DIExpression()), !dbg !11667
  %11 = icmp eq i8 %9, 0, !dbg !11674
  br i1 %11, label %12, label %15, !dbg !11676

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11677
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11678
  store i8 0, i8* %14, align 1, !dbg !11679
  br label %46, !dbg !11680

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2155, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i8 %17, metadata !2154, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata i32 %18, metadata !2152, metadata !DIExpression()), !dbg !11667
  %19 = zext i8 %17 to i32, !dbg !11681
  %20 = zext i8 %16 to i32, !dbg !11682
  %21 = shl nuw i32 1, %20, !dbg !11682
  call void @llvm.dbg.value(metadata i32 %21, metadata !2153, metadata !DIExpression()), !dbg !11667
  %22 = and i32 %21, %19, !dbg !11684
  %23 = icmp eq i32 %22, 0, !dbg !11686
  br i1 %23, label %42, label %24, !dbg !11687

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11688
  %26 = sub i32 %10, %18, !dbg !11689
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11690
  %28 = load i8*, i8** %27, align 4, !dbg !11690
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11691
  %30 = load i32, i32* %29, align 4, !dbg !11691
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !11692
  %32 = add i32 %31, %18, !dbg !11693
  call void @llvm.dbg.value(metadata i32 %32, metadata !2152, metadata !DIExpression()), !dbg !11667
  %33 = trunc i32 %21 to i8, !dbg !11694
  %34 = xor i8 %33, -1, !dbg !11694
  %35 = and i8 %17, %34, !dbg !11694
  call void @llvm.dbg.value(metadata i8 %35, metadata !2154, metadata !DIExpression()), !dbg !11667
  %36 = icmp eq i8 %35, 0, !dbg !11695
  br i1 %36, label %12, label %37, !dbg !11697

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11698
  %39 = sub i32 %10, %32, !dbg !11700
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #25, !dbg !11701
  %41 = add i32 %40, %32, !dbg !11702
  call void @llvm.dbg.value(metadata i32 %41, metadata !2152, metadata !DIExpression()), !dbg !11667
  br label %42, !dbg !11703

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11667
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11667
  call void @llvm.dbg.value(metadata i8 %44, metadata !2154, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata i32 %43, metadata !2152, metadata !DIExpression()), !dbg !11667
  %45 = add i8 %16, 1, !dbg !11704
  call void @llvm.dbg.value(metadata i8 %45, metadata !2155, metadata !DIExpression()), !dbg !11673
  br label %15, !dbg !11676

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.105, i32 0, i32 0), %3 ], !dbg !11667
  ret i8* %47, !dbg !11705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11706 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11710, metadata !DIExpression()), !dbg !11715
  call void @llvm.dbg.value(metadata i32 %1, metadata !11711, metadata !DIExpression()), !dbg !11715
  call void @llvm.dbg.value(metadata i8* %2, metadata !11712, metadata !DIExpression()), !dbg !11715
  call void @llvm.dbg.value(metadata i32 %3, metadata !11713, metadata !DIExpression()), !dbg !11715
  %5 = icmp ult i32 %1, %3, !dbg !11716
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11716
  call void @llvm.dbg.value(metadata i32 %6, metadata !11714, metadata !DIExpression()), !dbg !11715
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !11717
  ret i32 %6, !dbg !11718
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11719 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11723, metadata !DIExpression()), !dbg !11724
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !11725
  ret void, !dbg !11726
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11727 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11736, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11737, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata i32 %2, metadata !11738, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11739, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata i8* %4, metadata !11740, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata i8* %5, metadata !11741, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata i8* %6, metadata !11742, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata i32 %7, metadata !11743, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata i32 %8, metadata !11744, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata i8* undef, metadata !11745, metadata !DIExpression()), !dbg !11747
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11748
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !11749
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11750
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !11751
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !11752
  call void @llvm.dbg.value(metadata i8* %13, metadata !11746, metadata !DIExpression()), !dbg !11747
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !11753
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11754
  store i8* null, i8** %14, align 4, !dbg !11755
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11756
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11756
  br i1 %16, label %20, label %17, !dbg !11758

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11759
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11759
  br label %20, !dbg !11760

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11747
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11761
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11763
  ret i8* %13, !dbg !11764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !11765 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11770, metadata !DIExpression()), !dbg !11771
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11772
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !11773
  ret void, !dbg !11774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !11775 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11780, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %1, metadata !11781, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %2, metadata !11782, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %3, metadata !11783, metadata !DIExpression()), !dbg !11784
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11785
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11786
  %6 = trunc i32 %3 to i8, !dbg !11787
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11788
  store i8 %6, i8* %7, align 4, !dbg !11789
  %8 = trunc i32 %2 to i8, !dbg !11790
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11791
  store i8 %8, i8* %9, align 1, !dbg !11792
  %10 = trunc i32 %1 to i8, !dbg !11793
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11794
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11794
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11794
  store i8 %10, i8* %13, align 2, !dbg !11795
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11796
  store i8 0, i8* %14, align 1, !dbg !11797
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !11798
  ret void, !dbg !11799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !11800 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11804, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11805, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata i32 %2, metadata !11806, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata i32 0, metadata !11811, metadata !DIExpression()), !dbg !11812
  %4 = add i32 %2, 7, !dbg !11813
  %5 = and i32 %4, -8, !dbg !11813
  %6 = add i32 %5, 64, !dbg !11813
  call void @llvm.dbg.value(metadata i32 %6, metadata !11807, metadata !DIExpression()), !dbg !11812
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.115(%struct.z_thread_stack_element* noundef %1) #25, !dbg !11815
  call void @llvm.dbg.value(metadata i8* %7, metadata !11810, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata i32 %5, metadata !11808, metadata !DIExpression()), !dbg !11812
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11816
  call void @llvm.dbg.value(metadata i8* %8, metadata !11809, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata i32 0, metadata !11811, metadata !DIExpression()), !dbg !11812
  %9 = ptrtoint i8* %7 to i32, !dbg !11817
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11818
  store i32 %9, i32* %10, align 4, !dbg !11819
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11820
  store i32 %5, i32* %11, align 4, !dbg !11821
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11822
  store i32 0, i32* %12, align 4, !dbg !11823
  call void @llvm.dbg.value(metadata i8* %8, metadata !11809, metadata !DIExpression()), !dbg !11812
  ret i8* %8, !dbg !11824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.115(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11825 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11829, metadata !DIExpression()), !dbg !11830
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11831
  ret i8* %2, !dbg !11832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11833 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11838, metadata !DIExpression()), !dbg !11839
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11840
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11841
  ret void, !dbg !11842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11843 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11845, metadata !DIExpression()), !dbg !11846
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11847
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !11848
  ret void, !dbg !11849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11850 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11854, metadata !DIExpression()), !dbg !11855
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11856
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11857
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11858
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11859
  ret void, !dbg !11860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !11861 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11866, metadata !DIExpression()), !dbg !11867
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11868
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11869
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11870
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11871
  ret void, !dbg !11872
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11873 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11890, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11881, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11882, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.value(metadata i32 %2, metadata !11883, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11884, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.value(metadata i8* %4, metadata !11885, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.value(metadata i8* %5, metadata !11886, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.value(metadata i8* %6, metadata !11887, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.value(metadata i32 %7, metadata !11888, metadata !DIExpression()), !dbg !11891
  call void @llvm.dbg.value(metadata i32 %8, metadata !11889, metadata !DIExpression()), !dbg !11891
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !11892
  %13 = icmp eq i64 %11, -1, !dbg !11893
  br i1 %13, label %15, label %14, !dbg !11895

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !11896
  br label %15, !dbg !11898

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11900 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11905, metadata !DIExpression()), !dbg !11906
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11904, metadata !DIExpression()), !dbg !11906
  %4 = icmp eq i64 %3, 0, !dbg !11907
  br i1 %4, label %5, label %6, !dbg !11909

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11910
  br label %7, !dbg !11912

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !11913
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11916 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11920, metadata !DIExpression()), !dbg !11921
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11922, !srcloc !11924
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11925
  ret void, !dbg !11926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11927 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11930, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11929, metadata !DIExpression()), !dbg !11931
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11932
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !11933
  ret void, !dbg !11934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11935 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11937, metadata !DIExpression()), !dbg !11957
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11958

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !11959
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11955, metadata !DIExpression()), !dbg !11960
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11961

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11937, metadata !DIExpression()), !dbg !11957
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11962
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11962
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11965
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !11965
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11966
  %9 = load i32, i32* %8, align 4, !dbg !11966
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11967
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11967
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11968
  %13 = load i8*, i8** %12, align 4, !dbg !11968
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11969
  %15 = load i8*, i8** %14, align 4, !dbg !11969
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11970
  %17 = load i8*, i8** %16, align 4, !dbg !11970
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11971
  %19 = load i32, i32* %18, align 4, !dbg !11971
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11972
  %21 = load i32, i32* %20, align 4, !dbg !11972
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !11973
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11974
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !11975
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !11976
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !11976
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11977
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11937, metadata !DIExpression()), !dbg !11957
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11978
  br i1 %27, label %2, label %1, !dbg !11958, !llvm.loop !11980

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !11959
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11955, metadata !DIExpression()), !dbg !11960
  br label %29, !dbg !11961

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !11982
  ret void, !dbg !11983

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11955, metadata !DIExpression()), !dbg !11960
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !11984
  %33 = load i32, i32* %32, align 4, !dbg !11984
  %34 = icmp eq i32 %33, -1, !dbg !11988
  br i1 %34, label %43, label %35, !dbg !11989

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !11990
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !11990
  %38 = icmp sgt i32 %33, 0, !dbg !11992
  %39 = select i1 %38, i32 %33, i32 0, !dbg !11992
  %40 = zext i32 %39 to i64, !dbg !11992
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !11992
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !11993
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !11993
  br label %43, !dbg !11994

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !11995
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11955, metadata !DIExpression()), !dbg !11960
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11996
  br i1 %45, label %30, label %29, !dbg !11961, !llvm.loop !11998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !12000 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12005, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i64 %0, metadata !12007, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 1000, metadata !12012, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 10000, metadata !12013, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i8 1, metadata !12014, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i8 0, metadata !12015, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i8 1, metadata !12016, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i8 0, metadata !12017, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i8 1, metadata !12018, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i8 0, metadata !12019, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i64 0, metadata !12020, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i64 0, metadata !12020, metadata !DIExpression()), !dbg !12024
  %2 = mul i64 %0, 10, !dbg !12026
  ret i64 %2, !dbg !12032
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #3 !dbg !12033 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12035, metadata !DIExpression()), !dbg !12039
  call void @llvm.dbg.value(metadata i8* %1, metadata !12036, metadata !DIExpression()), !dbg !12039
  call void @llvm.dbg.value(metadata i8* %2, metadata !12037, metadata !DIExpression()), !dbg !12039
  call void @llvm.dbg.value(metadata i8* %3, metadata !12038, metadata !DIExpression()), !dbg !12039
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12040
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12041
  %7 = load i8, i8* %6, align 4, !dbg !12042
  %8 = or i8 %7, 4, !dbg !12042
  store i8 %8, i8* %6, align 4, !dbg !12042
  tail call void @z_thread_essential_clear() #25, !dbg !12043
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !12044
  unreachable, !dbg !12044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !12045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12049, metadata !DIExpression()), !dbg !12050
  ret i32 -134, !dbg !12051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !12052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12056, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i32 %1, metadata !12057, metadata !DIExpression()), !dbg !12058
  ret i32 -134, !dbg !12059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !12060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12067, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12068, metadata !DIExpression()), !dbg !12069
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12070
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12072
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12069
  ret i32 %6, !dbg !12073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !12074 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12078, metadata !DIExpression()), !dbg !12079
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12080
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12079
  ret i32 %3, !dbg !12082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12083 {
  tail call void @sys_clock_idle_exit() #24, !dbg !12085
  ret void, !dbg !12086
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #3 !dbg !12087 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12089, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i8* %1, metadata !12090, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i8* %2, metadata !12091, metadata !DIExpression()), !dbg !12092
  br label %4, !dbg !12093

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12094, !srcloc !12101
  call void @llvm.dbg.value(metadata i32 undef, metadata !12097, metadata !DIExpression()) #23, !dbg !12102
  call void @llvm.dbg.value(metadata i32 undef, metadata !12098, metadata !DIExpression()) #23, !dbg !12102
  tail call fastcc void @k_cpu_idle() #25, !dbg !12103
  br label %4, !dbg !12093, !llvm.loop !12104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12106 {
  tail call void @arch_cpu_idle() #24, !dbg !12107
  ret void, !dbg !12108
}

; Function Attrs: optsize
declare !dbg !12109 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !12110 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12114, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12115, metadata !DIExpression()), !dbg !12118
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12119
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12119
  %5 = load i8, i8* %4, align 2, !dbg !12119
  call void @llvm.dbg.value(metadata i8 %5, metadata !12116, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12118
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12120
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12120
  %8 = load i8, i8* %7, align 2, !dbg !12120
  call void @llvm.dbg.value(metadata i8 %8, metadata !12117, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12118
  %9 = icmp eq i8 %8, %5, !dbg !12121
  %10 = sext i8 %5 to i32, !dbg !12123
  %11 = sext i8 %8 to i32, !dbg !12123
  %12 = sub nsw i32 %11, %10, !dbg !12123
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12123
  ret i32 %13, !dbg !12124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12125 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12129, metadata !DIExpression()), !dbg !12130
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !12131
  %3 = icmp eq i32 %2, 0, !dbg !12133
  br i1 %3, label %8, label %4, !dbg !12134

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !12135
  %6 = add i32 %5, %2, !dbg !12137
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12138
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !12139
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !12140
  br label %8, !dbg !12141

8:                                                ; preds = %4, %1
  ret void, !dbg !12142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !12143 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12147, metadata !DIExpression()), !dbg !12149
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12150
  call void @llvm.dbg.value(metadata i32 %1, metadata !12148, metadata !DIExpression()), !dbg !12149
  ret i32 %1, !dbg !12151
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12156, metadata !DIExpression()), !dbg !12165
  call void @llvm.dbg.value(metadata i32 %1, metadata !12157, metadata !DIExpression()), !dbg !12165
  call void @llvm.dbg.value(metadata i32 0, metadata !12158, metadata !DIExpression()), !dbg !12166
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !12174
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12176, !srcloc !12182
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12176
  call void @llvm.dbg.value(metadata i32 %4, metadata !12179, metadata !DIExpression()) #23, !dbg !12183
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %4, metadata !12173, metadata !DIExpression()) #23, !dbg !12174
  call void @llvm.dbg.value(metadata i32 %4, metadata !12164, metadata !DIExpression()), !dbg !12166
  call void @llvm.dbg.value(metadata i32 undef, metadata !12158, metadata !DIExpression()), !dbg !12166
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12184
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !12187
  %6 = icmp sgt i32 %0, 0, !dbg !12188
  %7 = icmp sgt i32 %5, 2, !dbg !12190
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12190
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12190
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12191
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12192
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12193
  call void @llvm.dbg.value(metadata i32 %4, metadata !12194, metadata !DIExpression()) #23, !dbg !12200
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !12200
  call void @llvm.dbg.value(metadata i32 %4, metadata !12202, metadata !DIExpression()) #23, !dbg !12205
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12207, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !12158, metadata !DIExpression()), !dbg !12166
  call void @llvm.dbg.value(metadata i32 undef, metadata !12158, metadata !DIExpression()), !dbg !12166
  ret void, !dbg !12209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !12210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12212, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.value(metadata i32 %0, metadata !12214, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12229
  call void @llvm.dbg.value(metadata i32 1000, metadata !12217, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i32 10000, metadata !12218, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i8 1, metadata !12219, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i1 true, metadata !12220, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12229
  call void @llvm.dbg.value(metadata i1 true, metadata !12221, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12229
  call void @llvm.dbg.value(metadata i8 0, metadata !12222, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i1 true, metadata !12223, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12229
  call void @llvm.dbg.value(metadata i1 false, metadata !12224, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12229
  call void @llvm.dbg.value(metadata i64 0, metadata !12225, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i64 0, metadata !12225, metadata !DIExpression()), !dbg !12229
  %2 = mul i32 %0, 10, !dbg !12231
  ret i32 %2, !dbg !12237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12240, metadata !DIExpression()), !dbg !12242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !12243
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12245, !srcloc !12182
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12245
  call void @llvm.dbg.value(metadata i32 %3, metadata !12179, metadata !DIExpression()) #23, !dbg !12247
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !12247
  call void @llvm.dbg.value(metadata i32 %3, metadata !12173, metadata !DIExpression()) #23, !dbg !12243
  call void @llvm.dbg.value(metadata i32 %3, metadata !12241, metadata !DIExpression()), !dbg !12242
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12248
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12250
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !12251
  br i1 %6, label %7, label %8, !dbg !12252

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12253
  call void @llvm.dbg.value(metadata i32 %3, metadata !12194, metadata !DIExpression()) #23, !dbg !12255
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !12255
  call void @llvm.dbg.value(metadata i32 %3, metadata !12202, metadata !DIExpression()) #23, !dbg !12257
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12259, !srcloc !12208
  br label %24, !dbg !12260

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12261
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !12262
  %10 = icmp eq i32 %9, 0, !dbg !12262
  br i1 %10, label %21, label %11, !dbg !12264

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !12265
  br i1 %12, label %13, label %21, !dbg !12266

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12267
  %15 = icmp sgt i32 %14, %0, !dbg !12270
  br i1 %15, label %19, label %16, !dbg !12271

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12272
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !12272
  call void @llvm.dbg.value(metadata i32 %18, metadata !12241, metadata !DIExpression()), !dbg !12242
  br label %22, !dbg !12274

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !12275
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12275
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12277
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !12242
  call void @llvm.dbg.value(metadata i32 %23, metadata !12241, metadata !DIExpression()), !dbg !12242
  call void @llvm.dbg.value(metadata i32 %23, metadata !12194, metadata !DIExpression()) #23, !dbg !12279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !12279
  call void @llvm.dbg.value(metadata i32 %23, metadata !12202, metadata !DIExpression()) #23, !dbg !12281
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !12283, !srcloc !12208
  br label %24, !dbg !12284

24:                                               ; preds = %22, %7
  ret void, !dbg !12284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !12285 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12289, metadata !DIExpression()), !dbg !12291
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !12292
  %3 = icmp eq i32 %2, 0, !dbg !12292
  br i1 %3, label %16, label %4, !dbg !12293

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12294
  br i1 %5, label %16, label %6, !dbg !12295

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12296
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12296
  %9 = load i8, i8* %8, align 2, !dbg !12296
  %10 = sext i8 %9 to i32, !dbg !12297
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12298
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !12299
  br i1 %12, label %16, label %13, !dbg !12300

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !12301
  %15 = xor i1 %14, true, !dbg !12302
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12291
  call void @llvm.dbg.value(metadata i1 %17, metadata !12290, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12291
  ret i1 %17, !dbg !12303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12304 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()), !dbg !12310
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12311
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12309, metadata !DIExpression()), !dbg !12310
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !12312
  br i1 %3, label %5, label %4, !dbg !12314

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !12315
  br label %5, !dbg !12317

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12308, metadata !DIExpression()), !dbg !12310
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12318
  ret i32 %6, !dbg !12319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12320 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12322, metadata !DIExpression()), !dbg !12324
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12325
  %3 = load i8, i8* %2, align 1, !dbg !12325
  call void @llvm.dbg.value(metadata i8 %3, metadata !12323, metadata !DIExpression()), !dbg !12324
  %4 = and i8 %3, 31, !dbg !12326
  %5 = icmp ne i8 %4, 0, !dbg !12327
  ret i1 %5, !dbg !12328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12329 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12331, metadata !DIExpression()), !dbg !12332
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12333
  br i1 %2, label %3, label %7, !dbg !12335

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12336, metadata !DIExpression()) #23, !dbg !12339
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12342
  %5 = load i8, i8* %4, align 1, !dbg !12343
  %6 = and i8 %5, 127, !dbg !12343
  store i8 %6, i8* %4, align 1, !dbg !12343
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12344, metadata !DIExpression()) #23, !dbg !12347
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12351
  br label %7, !dbg !12352

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12353, metadata !DIExpression()) #23, !dbg !12356
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12358
  %9 = load i8, i8* %8, align 1, !dbg !12359
  %10 = or i8 %9, -128, !dbg !12359
  store i8 %10, i8* %8, align 1, !dbg !12359
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12360, metadata !DIExpression()) #23, !dbg !12363
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12367, metadata !DIExpression()) #23, !dbg !12375
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12373, metadata !DIExpression()) #23, !dbg !12375
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12377
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !12374, metadata !DIExpression()) #23, !dbg !12375
  %12 = icmp eq %struct._dnode* %11, null, !dbg !12379
  br i1 %12, label %23, label %13, !dbg !12377

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12374, metadata !DIExpression()) #23, !dbg !12375
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !12381
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12374, metadata !DIExpression()) #23, !dbg !12375
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !12382
  %17 = icmp sgt i32 %16, 0, !dbg !12385
  br i1 %17, label %18, label %20, !dbg !12386

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12387
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !12389
  br label %25, !dbg !12390

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !12379
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12374, metadata !DIExpression()) #23, !dbg !12375
  %22 = icmp eq %struct._dnode* %21, null, !dbg !12379
  br i1 %22, label %23, label %13, !dbg !12377, !llvm.loop !12391

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12393
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !12394
  br label %25, !dbg !12395

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12396
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !12397
  %28 = zext i1 %27 to i32, !dbg !12397
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !12398
  ret void, !dbg !12399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12400 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12402, metadata !DIExpression()), !dbg !12403
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !12404
  ret i1 %2, !dbg !12405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !12406 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12408, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12409, metadata !DIExpression()), !dbg !12410
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12411
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !12412
  ret void, !dbg !12413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !12414 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12418, metadata !DIExpression()), !dbg !12419
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !12420
  br i1 %2, label %6, label %3, !dbg !12420

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12421
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12421
  br label %6, !dbg !12420

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12420
  ret %struct._dnode* %7, !dbg !12422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !12423 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12427, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12428, metadata !DIExpression()), !dbg !12431
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12432
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12432
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12429, metadata !DIExpression()), !dbg !12431
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12433
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12434
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12435
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12436
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12437
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12438
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12439
  ret void, !dbg !12440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !12441 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12445, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12446, metadata !DIExpression()), !dbg !12447
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12448
  br i1 %3, label %6, label %4, !dbg !12449

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !12450
  br label %6, !dbg !12449

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12449
  ret %struct._dnode* %7, !dbg !12451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !12452 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12456, metadata !DIExpression()), !dbg !12459
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12457, metadata !DIExpression()), !dbg !12459
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12460
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12460
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12458, metadata !DIExpression()), !dbg !12459
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12461
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12462
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12463
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12464
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12465
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12466
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12467
  ret void, !dbg !12468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12471, metadata !DIExpression()), !dbg !12473
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12474
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12481, metadata !DIExpression()) #23, !dbg !12483
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12484
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12485
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12485
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12472, metadata !DIExpression()), !dbg !12473
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12486, metadata !DIExpression()) #23, !dbg !12492
  call void @llvm.dbg.value(metadata i32 %0, metadata !12491, metadata !DIExpression()) #23, !dbg !12492
  %6 = icmp eq i32 %0, 0, !dbg !12495
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12497
  br i1 %6, label %8, label %15, !dbg !12498

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !12499
  br i1 %9, label %15, label %10, !dbg !12501

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !12502
  br i1 %11, label %15, label %12, !dbg !12504

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !12505
  %14 = icmp eq i32 %13, 0, !dbg !12505
  br i1 %14, label %18, label %15, !dbg !12507

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !12508
  br i1 %16, label %18, label %17, !dbg !12511

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12512
  br label %18, !dbg !12514

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !12497
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12497
  ret void, !dbg !12515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !12516 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12520, metadata !DIExpression()), !dbg !12523
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12521, metadata !DIExpression()), !dbg !12523
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !12524
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12522, metadata !DIExpression()), !dbg !12523
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12521, metadata !DIExpression()), !dbg !12523
  ret %struct.k_thread* %3, !dbg !12525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12526 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12528, metadata !DIExpression()), !dbg !12529
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12530
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12531
  %4 = xor i1 %3, true, !dbg !12532
  ret i1 %4, !dbg !12533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12534 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12536, metadata !DIExpression()), !dbg !12537
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12538
  %3 = load i16, i16* %2, align 2, !dbg !12538
  %4 = icmp ult i16 %3, 128, !dbg !12539
  %5 = zext i1 %4 to i32, !dbg !12539
  ret i32 %5, !dbg !12540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12541 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12547, metadata !DIExpression()), !dbg !12548
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12549
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !12550
  %4 = xor i1 %3, true, !dbg !12551
  ret i1 %4, !dbg !12552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12553 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12559, metadata !DIExpression()), !dbg !12560
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12561
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12561
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12562
  ret i1 %4, !dbg !12563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !12564 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12566, metadata !DIExpression()), !dbg !12568
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12567, metadata !DIExpression()), !dbg !12568
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12569
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12569
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12570
  br i1 %5, label %9, label %6, !dbg !12571

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12572
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12572
  br label %9, !dbg !12571

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12571
  ret %struct._dnode* %10, !dbg !12573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !12574 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12578, metadata !DIExpression()), !dbg !12579
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12580
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12580
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12581
  ret i1 %4, !dbg !12582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !12583 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12587, metadata !DIExpression()), !dbg !12590
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12591
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12591
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12588, metadata !DIExpression()), !dbg !12590
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12592
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12592
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12589, metadata !DIExpression()), !dbg !12590
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12593
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12594
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12595
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12596
  tail call fastcc void @sys_dnode_init.120(%struct._dnode* noundef %0) #25, !dbg !12597
  ret void, !dbg !12598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.120(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12599 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12601, metadata !DIExpression()), !dbg !12602
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12603
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12604
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12605
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12606
  ret void, !dbg !12607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12608 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12612, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.value(metadata i32 128, metadata !12613, metadata !DIExpression()), !dbg !12614
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12615
  %3 = load i8, i8* %2, align 1, !dbg !12615
  %4 = icmp slt i8 %3, 0, !dbg !12616
  ret i1 %4, !dbg !12617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12622, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i32 %1, metadata !12623, metadata !DIExpression()), !dbg !12624
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !12625
  ret i1 %3, !dbg !12626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !12627 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12629, metadata !DIExpression()), !dbg !12630
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12631
  ret i1 %2, !dbg !12632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12635, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i32 %1, metadata !12636, metadata !DIExpression()), !dbg !12637
  %3 = icmp slt i32 %0, %1, !dbg !12638
  ret i1 %3, !dbg !12639
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12640 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12642, metadata !DIExpression()), !dbg !12646
  call void @llvm.dbg.value(metadata i32 0, metadata !12643, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !12648
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12650, !srcloc !12182
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12650
  call void @llvm.dbg.value(metadata i32 %3, metadata !12179, metadata !DIExpression()) #23, !dbg !12652
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !12652
  call void @llvm.dbg.value(metadata i32 %3, metadata !12173, metadata !DIExpression()) #23, !dbg !12648
  call void @llvm.dbg.value(metadata i32 %3, metadata !12645, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12653
  call void @llvm.dbg.value(metadata i32 %3, metadata !12194, metadata !DIExpression()) #23, !dbg !12658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !12658
  call void @llvm.dbg.value(metadata i32 %3, metadata !12202, metadata !DIExpression()) #23, !dbg !12660
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12662, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !12643, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()), !dbg !12647
  ret void, !dbg !12663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12664 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12666, metadata !DIExpression()), !dbg !12667
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12668
  br i1 %2, label %24, label %3, !dbg !12670

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12671
  br i1 %4, label %5, label %24, !dbg !12672

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12353, metadata !DIExpression()) #23, !dbg !12673
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12676
  %7 = load i8, i8* %6, align 1, !dbg !12677
  %8 = or i8 %7, -128, !dbg !12677
  store i8 %8, i8* %6, align 1, !dbg !12677
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12360, metadata !DIExpression()) #23, !dbg !12678
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12367, metadata !DIExpression()) #23, !dbg !12680
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12373, metadata !DIExpression()) #23, !dbg !12680
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12682
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !12374, metadata !DIExpression()) #23, !dbg !12680
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12683
  br i1 %10, label %21, label %11, !dbg !12682

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12374, metadata !DIExpression()) #23, !dbg !12680
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12684
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12374, metadata !DIExpression()) #23, !dbg !12680
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !12685
  %15 = icmp sgt i32 %14, 0, !dbg !12686
  br i1 %15, label %16, label %18, !dbg !12687

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12688
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !12689
  br label %23, !dbg !12690

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !12683
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !12374, metadata !DIExpression()) #23, !dbg !12680
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12683
  br i1 %20, label %21, label %11, !dbg !12682, !llvm.loop !12691

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12693
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !12694
  br label %23, !dbg !12695

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12696
  br label %24, !dbg !12697

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12699 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12701, metadata !DIExpression()), !dbg !12702
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12703
  br i1 %2, label %6, label %3, !dbg !12704

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !12705
  %5 = xor i1 %4, true, !dbg !12704
  br label %6, !dbg !12704

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12707 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12709, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.value(metadata i32 0, metadata !12710, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !12715
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12717, !srcloc !12182
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12717
  call void @llvm.dbg.value(metadata i32 %3, metadata !12179, metadata !DIExpression()) #23, !dbg !12719
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !12719
  call void @llvm.dbg.value(metadata i32 %3, metadata !12173, metadata !DIExpression()) #23, !dbg !12715
  call void @llvm.dbg.value(metadata i32 %3, metadata !12712, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata i32 undef, metadata !12710, metadata !DIExpression()), !dbg !12714
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !12720
  call void @llvm.dbg.value(metadata i32 %3, metadata !12194, metadata !DIExpression()) #23, !dbg !12723
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !12723
  call void @llvm.dbg.value(metadata i32 %3, metadata !12202, metadata !DIExpression()) #23, !dbg !12725
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12727, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !12710, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata i32 undef, metadata !12710, metadata !DIExpression()), !dbg !12714
  ret void, !dbg !12728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12729 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12731, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !12734
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12736, !srcloc !12182
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12736
  call void @llvm.dbg.value(metadata i32 %3, metadata !12179, metadata !DIExpression()) #23, !dbg !12738
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !12738
  call void @llvm.dbg.value(metadata i32 %3, metadata !12173, metadata !DIExpression()) #23, !dbg !12734
  call void @llvm.dbg.value(metadata i32 %3, metadata !12732, metadata !DIExpression()), !dbg !12733
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !12739
  br i1 %4, label %5, label %6, !dbg !12741

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12194, metadata !DIExpression()) #23, !dbg !12742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !12742
  call void @llvm.dbg.value(metadata i32 %3, metadata !12202, metadata !DIExpression()) #23, !dbg !12745
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12747, !srcloc !12208
  br label %8, !dbg !12748

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.125(%struct.k_thread* noundef %0) #25, !dbg !12749
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12750
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12751
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12751
  br label %8, !dbg !12752

8:                                                ; preds = %6, %5
  ret void, !dbg !12752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12753 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12755, metadata !DIExpression()), !dbg !12756
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12757
  %3 = load i8, i8* %2, align 1, !dbg !12757
  %4 = and i8 %3, 4, !dbg !12758
  %5 = icmp eq i8 %4, 0, !dbg !12759
  ret i1 %5, !dbg !12760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.125(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12761 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12763, metadata !DIExpression()), !dbg !12764
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12765
  %3 = load i8, i8* %2, align 1, !dbg !12766
  %4 = and i8 %3, -5, !dbg !12766
  store i8 %4, i8* %2, align 1, !dbg !12766
  ret void, !dbg !12767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12768 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12771, metadata !DIExpression()), !dbg !12772
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12770, metadata !DIExpression()), !dbg !12772
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !12773
  br i1 %4, label %5, label %9, !dbg !12775

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !12776
  br i1 %6, label %7, label %9, !dbg !12777

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12778, metadata !DIExpression()) #23, !dbg !12784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12783, metadata !DIExpression()) #23, !dbg !12784
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !12787
  br label %10, !dbg !12788

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12194, metadata !DIExpression()) #23, !dbg !12789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !12789
  call void @llvm.dbg.value(metadata i32 %3, metadata !12202, metadata !DIExpression()) #23, !dbg !12792
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12794, !srcloc !12208
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12800, metadata !DIExpression()), !dbg !12801
  call void @llvm.dbg.value(metadata i32 %0, metadata !12802, metadata !DIExpression()), !dbg !12807
  %2 = icmp eq i32 %0, 0, !dbg !12809
  br i1 %2, label %3, label %6, !dbg !12810

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12811, !srcloc !12818
  call void @llvm.dbg.value(metadata i32 %4, metadata !12814, metadata !DIExpression()) #23, !dbg !12819
  %5 = icmp eq i32 %4, 0, !dbg !12820
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12801
  ret i1 %7, !dbg !12821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !12822 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12825
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12824, metadata !DIExpression()), !dbg !12826
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12827
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12828
  ret i1 %3, !dbg !12829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12832, metadata !DIExpression()), !dbg !12834
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !12835
  call void @llvm.dbg.value(metadata i32 %2, metadata !12833, metadata !DIExpression()), !dbg !12834
  ret i32 %2, !dbg !12836
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12837 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12839, metadata !DIExpression()), !dbg !12843
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12844
  call void @llvm.dbg.value(metadata i32 0, metadata !12840, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !12846
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12848, !srcloc !12182
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12848
  call void @llvm.dbg.value(metadata i32 %4, metadata !12179, metadata !DIExpression()) #23, !dbg !12850
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !12850
  call void @llvm.dbg.value(metadata i32 %4, metadata !12173, metadata !DIExpression()) #23, !dbg !12846
  call void @llvm.dbg.value(metadata i32 %4, metadata !12842, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.value(metadata i32 undef, metadata !12840, metadata !DIExpression()), !dbg !12845
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12851
  br i1 %5, label %6, label %10, !dbg !12855

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12336, metadata !DIExpression()) #23, !dbg !12856
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12859
  %8 = load i8, i8* %7, align 1, !dbg !12860
  %9 = and i8 %8, 127, !dbg !12860
  store i8 %9, i8* %7, align 1, !dbg !12860
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12344, metadata !DIExpression()) #23, !dbg !12861
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12863
  br label %10, !dbg !12864

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !12865
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12866
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12867
  %13 = zext i1 %12 to i32, !dbg !12867
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !12868
  call void @llvm.dbg.value(metadata i32 %4, metadata !12194, metadata !DIExpression()) #23, !dbg !12869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !12869
  call void @llvm.dbg.value(metadata i32 %4, metadata !12202, metadata !DIExpression()) #23, !dbg !12871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12873, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !12840, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.value(metadata i32 undef, metadata !12840, metadata !DIExpression()), !dbg !12845
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12874
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12876
  br i1 %15, label %16, label %17, !dbg !12877

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12878
  br label %17, !dbg !12880

17:                                               ; preds = %16, %10
  ret void, !dbg !12881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12882 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12884, metadata !DIExpression()), !dbg !12885
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12886
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12887
  ret i32 %3, !dbg !12888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12889 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12891, metadata !DIExpression()), !dbg !12892
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12893
  %3 = load i8, i8* %2, align 1, !dbg !12894
  %4 = or i8 %3, 16, !dbg !12894
  store i8 %4, i8* %2, align 1, !dbg !12894
  ret void, !dbg !12895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12896 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12897, !srcloc !12182
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12897
  call void @llvm.dbg.value(metadata i32 %2, metadata !12179, metadata !DIExpression()) #23, !dbg !12899
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !12899
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !12900
  ret void, !dbg !12901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12904, metadata !DIExpression()), !dbg !12905
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !12906
  br i1 %2, label %3, label %5, !dbg !12908

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12909
  br label %6, !dbg !12911

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12202, metadata !DIExpression()) #23, !dbg !12912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12915, !srcloc !12208
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12917 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12919, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !12922
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12924, !srcloc !12182
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12924
  call void @llvm.dbg.value(metadata i32 %3, metadata !12179, metadata !DIExpression()) #23, !dbg !12926
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !12926
  call void @llvm.dbg.value(metadata i32 %3, metadata !12173, metadata !DIExpression()) #23, !dbg !12922
  call void @llvm.dbg.value(metadata i32 %3, metadata !12920, metadata !DIExpression()), !dbg !12921
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !12927
  br i1 %4, label %6, label %5, !dbg !12929

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12194, metadata !DIExpression()) #23, !dbg !12930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !12930
  call void @llvm.dbg.value(metadata i32 %3, metadata !12202, metadata !DIExpression()) #23, !dbg !12933
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12935, !srcloc !12208
  br label %8, !dbg !12936

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !12937
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12938
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12939
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12939
  br label %8, !dbg !12940

8:                                                ; preds = %6, %5
  ret void, !dbg !12940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12941 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12943, metadata !DIExpression()), !dbg !12944
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12945
  %3 = load i8, i8* %2, align 1, !dbg !12945
  %4 = and i8 %3, 16, !dbg !12946
  %5 = icmp ne i8 %4, 0, !dbg !12947
  ret i1 %5, !dbg !12948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12949 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12951, metadata !DIExpression()), !dbg !12952
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12953
  %3 = load i8, i8* %2, align 1, !dbg !12954
  %4 = and i8 %3, -17, !dbg !12954
  store i8 %4, i8* %2, align 1, !dbg !12954
  ret void, !dbg !12955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12956 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12966, metadata !DIExpression()), !dbg !12970
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12964, metadata !DIExpression()), !dbg !12970
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12965, metadata !DIExpression()), !dbg !12970
  call void @llvm.dbg.value(metadata i32 0, metadata !12967, metadata !DIExpression()), !dbg !12971
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !12972
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12974, !srcloc !12182
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !12974
  call void @llvm.dbg.value(metadata i32 %5, metadata !12179, metadata !DIExpression()) #23, !dbg !12976
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !12976
  call void @llvm.dbg.value(metadata i32 %5, metadata !12173, metadata !DIExpression()) #23, !dbg !12972
  call void @llvm.dbg.value(metadata i32 %5, metadata !12969, metadata !DIExpression()), !dbg !12971
  call void @llvm.dbg.value(metadata i32 undef, metadata !12967, metadata !DIExpression()), !dbg !12971
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12977
  call void @llvm.dbg.value(metadata i32 %5, metadata !12194, metadata !DIExpression()) #23, !dbg !12980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !12980
  call void @llvm.dbg.value(metadata i32 %5, metadata !12202, metadata !DIExpression()) #23, !dbg !12982
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !12984, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !12967, metadata !DIExpression()), !dbg !12971
  call void @llvm.dbg.value(metadata i32 undef, metadata !12967, metadata !DIExpression()), !dbg !12971
  ret void, !dbg !12985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12986 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12990, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12988, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12989, metadata !DIExpression()), !dbg !12991
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !12992
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !12993
  ret void, !dbg !12994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !12995 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12999, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13000, metadata !DIExpression()), !dbg !13001
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !13002
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !13003
  %3 = icmp eq %union.anon* %1, null, !dbg !13004
  br i1 %3, label %21, label %4, !dbg !13006

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13007
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13009
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13010
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12367, metadata !DIExpression()) #23, !dbg !13011
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12373, metadata !DIExpression()) #23, !dbg !13011
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !13013
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12374, metadata !DIExpression()) #23, !dbg !13011
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13014
  br i1 %8, label %19, label %9, !dbg !13013

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12374, metadata !DIExpression()) #23, !dbg !13011
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13015
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !12374, metadata !DIExpression()) #23, !dbg !13011
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !13016
  %13 = icmp sgt i32 %12, 0, !dbg !13017
  br i1 %13, label %14, label %16, !dbg !13018

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13019
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !13020
  br label %21, !dbg !13021

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !13014
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12374, metadata !DIExpression()) #23, !dbg !13011
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13014
  br i1 %18, label %19, label %9, !dbg !13013, !llvm.loop !13022

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13024
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !13025
  br label %21, !dbg !13026

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13028 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13033, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13032, metadata !DIExpression()), !dbg !13034
  %4 = icmp eq i64 %3, -1, !dbg !13035
  br i1 %4, label %6, label %5, !dbg !13037

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.126(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !13038
  br label %6, !dbg !13040

6:                                                ; preds = %5, %2
  ret void, !dbg !13041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.126(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13042 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13045, metadata !DIExpression()), !dbg !13046
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13044, metadata !DIExpression()), !dbg !13046
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13047
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13048
  ret void, !dbg !13049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13050 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13052, metadata !DIExpression()), !dbg !13060
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13061
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13061
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13053, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.value(metadata i32 0, metadata !13054, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13063
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13065, !srcloc !12182
  call void @llvm.dbg.value(metadata i32 undef, metadata !12179, metadata !DIExpression()) #23, !dbg !13067
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13067
  call void @llvm.dbg.value(metadata i32 undef, metadata !12173, metadata !DIExpression()) #23, !dbg !13063
  call void @llvm.dbg.value(metadata i32 undef, metadata !13056, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 undef, metadata !13054, metadata !DIExpression()), !dbg !13062
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13068
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13069
  %7 = load i8, i8* %6, align 1, !dbg !13069
  %8 = and i8 %7, 40, !dbg !13070
  %9 = icmp eq i8 %8, 0, !dbg !13070
  call void @llvm.dbg.value(metadata i1 %9, metadata !13057, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13071
  br i1 %9, label %10, label %17, !dbg !13072

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13073
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !13073
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !13073
  %14 = icmp eq %union.anon* %13, null, !dbg !13077
  br i1 %14, label %16, label %15, !dbg !13078

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !13079
  br label %16, !dbg !13081

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.125(%struct.k_thread* noundef nonnull %3) #25, !dbg !13082
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !13083
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !13084
  br label %17, !dbg !13085

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13065
  call void @llvm.dbg.value(metadata i32 %18, metadata !12179, metadata !DIExpression()) #23, !dbg !13067
  call void @llvm.dbg.value(metadata i32 %18, metadata !12173, metadata !DIExpression()) #23, !dbg !13063
  call void @llvm.dbg.value(metadata i32 %18, metadata !13056, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 undef, metadata !12194, metadata !DIExpression()) #23, !dbg !13086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13086
  call void @llvm.dbg.value(metadata i32 undef, metadata !12202, metadata !DIExpression()) #23, !dbg !13088
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13090, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !13054, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 undef, metadata !13054, metadata !DIExpression()), !dbg !13062
  ret void, !dbg !13091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13092 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13094, metadata !DIExpression()), !dbg !13095
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13096
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !13097
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13098
  store %union.anon* null, %union.anon** %2, align 8, !dbg !13099
  ret void, !dbg !13100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13101 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13103, metadata !DIExpression()), !dbg !13104
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13105
  %3 = load i8, i8* %2, align 1, !dbg !13106
  %4 = and i8 %3, -3, !dbg !13106
  store i8 %4, i8* %2, align 1, !dbg !13106
  ret void, !dbg !13107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13110, metadata !DIExpression()), !dbg !13111
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !13112
  br i1 %2, label %3, label %7, !dbg !13114

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12336, metadata !DIExpression()) #23, !dbg !13115
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13118
  %5 = load i8, i8* %4, align 1, !dbg !13119
  %6 = and i8 %5, 127, !dbg !13119
  store i8 %6, i8* %4, align 1, !dbg !13119
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12344, metadata !DIExpression()) #23, !dbg !13120
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13122
  br label %7, !dbg !13123

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13124
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13125
  %10 = zext i1 %9 to i32, !dbg !13125
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !13126
  ret void, !dbg !13127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13128 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13130, metadata !DIExpression()), !dbg !13131
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13132
  %3 = load i8, i8* %2, align 1, !dbg !13133
  %4 = or i8 %3, 2, !dbg !13133
  store i8 %4, i8* %2, align 1, !dbg !13133
  ret void, !dbg !13134
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !13135 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13137, metadata !DIExpression()), !dbg !13141
  call void @llvm.dbg.value(metadata i32 0, metadata !13138, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13143
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13145, !srcloc !12182
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13145
  call void @llvm.dbg.value(metadata i32 %3, metadata !12179, metadata !DIExpression()) #23, !dbg !13147
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13147
  call void @llvm.dbg.value(metadata i32 %3, metadata !12173, metadata !DIExpression()) #23, !dbg !13143
  call void @llvm.dbg.value(metadata i32 %3, metadata !13140, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13138, metadata !DIExpression()), !dbg !13142
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !13148
  call void @llvm.dbg.value(metadata i32 %3, metadata !12194, metadata !DIExpression()) #23, !dbg !13151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13151
  call void @llvm.dbg.value(metadata i32 %3, metadata !12202, metadata !DIExpression()) #23, !dbg !13153
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13155, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !13138, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13138, metadata !DIExpression()), !dbg !13142
  ret void, !dbg !13156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13157 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13163, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.value(metadata i32 %0, metadata !13161, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13162, metadata !DIExpression()), !dbg !13168
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13169
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !13170
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13171
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13172
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !13173
  call void @llvm.dbg.value(metadata i32 %6, metadata !13164, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.value(metadata i32 0, metadata !13165, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13175
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13177, !srcloc !12182
  call void @llvm.dbg.value(metadata i32 undef, metadata !12179, metadata !DIExpression()) #23, !dbg !13179
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13179
  call void @llvm.dbg.value(metadata i32 undef, metadata !12173, metadata !DIExpression()) #23, !dbg !13175
  call void @llvm.dbg.value(metadata i32 undef, metadata !13167, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.value(metadata i32 undef, metadata !13165, metadata !DIExpression()), !dbg !13174
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13180
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13184
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13185
  br i1 %10, label %11, label %12, !dbg !13186

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13187
  br label %12, !dbg !13189

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13177
  call void @llvm.dbg.value(metadata i32 %13, metadata !12179, metadata !DIExpression()) #23, !dbg !13179
  call void @llvm.dbg.value(metadata i32 %13, metadata !12173, metadata !DIExpression()) #23, !dbg !13175
  call void @llvm.dbg.value(metadata i32 %13, metadata !13167, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.value(metadata i32 undef, metadata !12194, metadata !DIExpression()) #23, !dbg !13190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13190
  call void @llvm.dbg.value(metadata i32 undef, metadata !12202, metadata !DIExpression()) #23, !dbg !13192
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !13194, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !13165, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.value(metadata i32 undef, metadata !13165, metadata !DIExpression()), !dbg !13174
  ret i32 %6, !dbg !13195
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13196 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13201, metadata !DIExpression()), !dbg !13204
  call void @llvm.dbg.value(metadata i64 undef, metadata !13203, metadata !DIExpression()), !dbg !13204
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13200, metadata !DIExpression()), !dbg !13204
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13202, metadata !DIExpression()), !dbg !13204
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13205
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13206
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13207
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13209, !srcloc !12182
  call void @llvm.dbg.value(metadata i32 undef, metadata !12179, metadata !DIExpression()) #23, !dbg !13211
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13211
  call void @llvm.dbg.value(metadata i32 undef, metadata !12173, metadata !DIExpression()) #23, !dbg !13207
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13212
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !13213
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12778, metadata !DIExpression()) #23, !dbg !13214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12783, metadata !DIExpression()) #23, !dbg !13214
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !13216
  ret i32 %9, !dbg !13217
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13218 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13222, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13223, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 0, metadata !13224, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13229
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13231, !srcloc !12182
  call void @llvm.dbg.value(metadata i32 undef, metadata !12179, metadata !DIExpression()) #23, !dbg !13233
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13233
  call void @llvm.dbg.value(metadata i32 undef, metadata !12173, metadata !DIExpression()) #23, !dbg !13229
  call void @llvm.dbg.value(metadata i32 undef, metadata !13226, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13223, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 undef, metadata !13224, metadata !DIExpression()), !dbg !13228
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !13234
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13223, metadata !DIExpression()), !dbg !13227
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13237
  br i1 %5, label %7, label %6, !dbg !13239

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13240
  br label %7, !dbg !13242

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13231
  call void @llvm.dbg.value(metadata i32 %8, metadata !12179, metadata !DIExpression()) #23, !dbg !13233
  call void @llvm.dbg.value(metadata i32 %8, metadata !12173, metadata !DIExpression()) #23, !dbg !13229
  call void @llvm.dbg.value(metadata i32 %8, metadata !13226, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata i32 undef, metadata !12194, metadata !DIExpression()) #23, !dbg !13243
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13243
  call void @llvm.dbg.value(metadata i32 undef, metadata !12202, metadata !DIExpression()) #23, !dbg !13245
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13247, !srcloc !12208
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13223, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 undef, metadata !13224, metadata !DIExpression()), !dbg !13228
  ret %struct.k_thread* %4, !dbg !13248
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13249 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13251, metadata !DIExpression()), !dbg !13256
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13252, metadata !DIExpression()), !dbg !13256
  call void @llvm.dbg.value(metadata i32 0, metadata !13253, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13258
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13260, !srcloc !12182
  call void @llvm.dbg.value(metadata i32 undef, metadata !12179, metadata !DIExpression()) #23, !dbg !13262
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13262
  call void @llvm.dbg.value(metadata i32 undef, metadata !12173, metadata !DIExpression()) #23, !dbg !13258
  call void @llvm.dbg.value(metadata i32 undef, metadata !13255, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13252, metadata !DIExpression()), !dbg !13256
  call void @llvm.dbg.value(metadata i32 undef, metadata !13253, metadata !DIExpression()), !dbg !13257
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !13263
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13252, metadata !DIExpression()), !dbg !13256
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13266
  br i1 %5, label %8, label %6, !dbg !13268

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13269
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13271
  br label %8, !dbg !13272

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13260
  call void @llvm.dbg.value(metadata i32 %9, metadata !12179, metadata !DIExpression()) #23, !dbg !13262
  call void @llvm.dbg.value(metadata i32 %9, metadata !12173, metadata !DIExpression()) #23, !dbg !13258
  call void @llvm.dbg.value(metadata i32 %9, metadata !13255, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata i32 undef, metadata !12194, metadata !DIExpression()) #23, !dbg !13273
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13273
  call void @llvm.dbg.value(metadata i32 undef, metadata !12202, metadata !DIExpression()) #23, !dbg !13275
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13277, !srcloc !12208
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13252, metadata !DIExpression()), !dbg !13256
  call void @llvm.dbg.value(metadata i32 undef, metadata !13253, metadata !DIExpression()), !dbg !13257
  ret %struct.k_thread* %4, !dbg !13278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13281, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13137, metadata !DIExpression()) #23, !dbg !13283
  call void @llvm.dbg.value(metadata i32 0, metadata !13138, metadata !DIExpression()) #23, !dbg !13285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13286
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13288, !srcloc !12182
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13288
  call void @llvm.dbg.value(metadata i32 %3, metadata !12179, metadata !DIExpression()) #23, !dbg !13290
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13290
  call void @llvm.dbg.value(metadata i32 %3, metadata !12173, metadata !DIExpression()) #23, !dbg !13286
  call void @llvm.dbg.value(metadata i32 %3, metadata !13140, metadata !DIExpression()) #23, !dbg !13285
  call void @llvm.dbg.value(metadata i32 undef, metadata !13138, metadata !DIExpression()) #23, !dbg !13285
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13291
  call void @llvm.dbg.value(metadata i32 %3, metadata !12194, metadata !DIExpression()) #23, !dbg !13292
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13292
  call void @llvm.dbg.value(metadata i32 %3, metadata !12202, metadata !DIExpression()) #23, !dbg !13294
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13296, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !13138, metadata !DIExpression()) #23, !dbg !13285
  call void @llvm.dbg.value(metadata i32 undef, metadata !13138, metadata !DIExpression()) #23, !dbg !13285
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13297
  ret void, !dbg !13298
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13301, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i32 %1, metadata !13302, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i8 0, metadata !13303, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i32 0, metadata !13304, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13309
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13311, !srcloc !12182
  call void @llvm.dbg.value(metadata i32 undef, metadata !12179, metadata !DIExpression()) #23, !dbg !13313
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13313
  call void @llvm.dbg.value(metadata i32 undef, metadata !12173, metadata !DIExpression()) #23, !dbg !13309
  call void @llvm.dbg.value(metadata i32 undef, metadata !13306, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i8 poison, metadata !13303, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i32 undef, metadata !13304, metadata !DIExpression()), !dbg !13308
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !13314
  call void @llvm.dbg.value(metadata i1 %6, metadata !13303, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13307
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !13317

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12336, metadata !DIExpression()) #23, !dbg !13318
  %11 = load i8, i8* %4, align 1, !dbg !13324
  %12 = and i8 %11, 127, !dbg !13324
  store i8 %12, i8* %4, align 1, !dbg !13324
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12344, metadata !DIExpression()) #23, !dbg !13325
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13327
  store i8 %9, i8* %8, align 2, !dbg !13328
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12353, metadata !DIExpression()) #23, !dbg !13329
  %13 = load i8, i8* %4, align 1, !dbg !13331
  %14 = or i8 %13, -128, !dbg !13331
  store i8 %14, i8* %4, align 1, !dbg !13331
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12360, metadata !DIExpression()) #23, !dbg !13332
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12367, metadata !DIExpression()) #23, !dbg !13334
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12373, metadata !DIExpression()) #23, !dbg !13334
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13336
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12374, metadata !DIExpression()) #23, !dbg !13334
  %16 = icmp eq %struct._dnode* %15, null, !dbg !13337
  br i1 %16, label %26, label %17, !dbg !13336

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !12374, metadata !DIExpression()) #23, !dbg !13334
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !13338
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !12374, metadata !DIExpression()) #23, !dbg !13334
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !13339
  %21 = icmp sgt i32 %20, 0, !dbg !13340
  br i1 %21, label %22, label %23, !dbg !13341

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !13342
  br label %27, !dbg !13343

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !13337
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12374, metadata !DIExpression()) #23, !dbg !13334
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13337
  br i1 %25, label %26, label %17, !dbg !13336, !llvm.loop !13344

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !13346
  br label %27, !dbg !13347

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13348
  br label %29, !dbg !13349

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !13350
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !13311
  call void @llvm.dbg.value(metadata i32 %30, metadata !12179, metadata !DIExpression()) #23, !dbg !13313
  call void @llvm.dbg.value(metadata i32 %30, metadata !12173, metadata !DIExpression()) #23, !dbg !13309
  call void @llvm.dbg.value(metadata i32 %30, metadata !13306, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 undef, metadata !12194, metadata !DIExpression()) #23, !dbg !13352
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13352
  call void @llvm.dbg.value(metadata i32 undef, metadata !12202, metadata !DIExpression()) #23, !dbg !13354
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !13356, !srcloc !12208
  call void @llvm.dbg.value(metadata i8 poison, metadata !13303, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i32 undef, metadata !13304, metadata !DIExpression()), !dbg !13308
  ret i1 %6, !dbg !13357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13358 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13362, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata i32 %1, metadata !13363, metadata !DIExpression()), !dbg !13365
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13366
  call void @llvm.dbg.value(metadata i1 %3, metadata !13364, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13365
  br i1 %3, label %4, label %12, !dbg !13367

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13369
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13370
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13370
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13370
  %9 = load i8, i8* %8, align 1, !dbg !13370
  %10 = icmp eq i8 %9, 0, !dbg !13371
  br i1 %10, label %11, label %12, !dbg !13372

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13373
  br label %12, !dbg !13375

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13377 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13379, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13383
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13385, !srcloc !12182
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13385
  call void @llvm.dbg.value(metadata i32 %2, metadata !12179, metadata !DIExpression()) #23, !dbg !13387
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13387
  call void @llvm.dbg.value(metadata i32 %2, metadata !12173, metadata !DIExpression()) #23, !dbg !13383
  call void @llvm.dbg.value(metadata i32 %2, metadata !13381, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata i32 undef, metadata !13379, metadata !DIExpression()), !dbg !13382
  tail call fastcc void @z_sched_lock() #25, !dbg !13388
  call void @llvm.dbg.value(metadata i32 %2, metadata !12194, metadata !DIExpression()) #23, !dbg !13391
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13391
  call void @llvm.dbg.value(metadata i32 %2, metadata !12202, metadata !DIExpression()) #23, !dbg !13393
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13395, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !13379, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata i32 undef, metadata !13379, metadata !DIExpression()), !dbg !13382
  ret void, !dbg !13396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13397 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13398
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13399
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !13399
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !13399
  %5 = load i8, i8* %4, align 1, !dbg !13400
  %6 = add i8 %5, -1, !dbg !13400
  store i8 %6, i8* %4, align 1, !dbg !13400
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13401, !srcloc !13403
  ret void, !dbg !13404
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13405 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13407, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13411
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13413, !srcloc !12182
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13413
  call void @llvm.dbg.value(metadata i32 %2, metadata !12179, metadata !DIExpression()) #23, !dbg !13415
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13415
  call void @llvm.dbg.value(metadata i32 %2, metadata !12173, metadata !DIExpression()) #23, !dbg !13411
  call void @llvm.dbg.value(metadata i32 %2, metadata !13409, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i32 undef, metadata !13407, metadata !DIExpression()), !dbg !13410
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13416
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !13419
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !13419
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13419
  %7 = load i8, i8* %6, align 1, !dbg !13420
  %8 = add i8 %7, 1, !dbg !13420
  store i8 %8, i8* %6, align 1, !dbg !13420
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !13421
  call void @llvm.dbg.value(metadata i32 %2, metadata !12194, metadata !DIExpression()) #23, !dbg !13422
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13422
  call void @llvm.dbg.value(metadata i32 %2, metadata !12202, metadata !DIExpression()) #23, !dbg !13424
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13426, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 1, metadata !13407, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i32 undef, metadata !13407, metadata !DIExpression()), !dbg !13410
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13427
  ret void, !dbg !13428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !13429 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13430
  ret %struct.k_thread* %1, !dbg !13431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13432 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13436, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13437, metadata !DIExpression()), !dbg !13441
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13442
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13438, metadata !DIExpression()), !dbg !13441
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13443
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13439, metadata !DIExpression()), !dbg !13441
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !13444
  call void @llvm.dbg.value(metadata i32 %5, metadata !13440, metadata !DIExpression()), !dbg !13441
  %6 = icmp sgt i32 %5, 0, !dbg !13445
  br i1 %6, label %17, label %7, !dbg !13447

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13448
  br i1 %8, label %17, label %9, !dbg !13450

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13451
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13451
  %12 = load i32, i32* %11, align 8, !dbg !13451
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13453
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13453
  %15 = load i32, i32* %14, align 8, !dbg !13453
  %16 = icmp ult i32 %12, %15, !dbg !13454
  br label %17, !dbg !13455

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13456
  ret i1 %18, !dbg !13457
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13458 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13475, metadata !DIExpression()), !dbg !13490
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13476, metadata !DIExpression()), !dbg !13490
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13491
  %5 = load i32, i32* %4, align 4, !dbg !13492
  %6 = add nsw i32 %5, 1, !dbg !13492
  store i32 %6, i32* %4, align 4, !dbg !13492
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13493
  store i32 %5, i32* %7, align 8, !dbg !13494
  %8 = load i32, i32* %4, align 4, !dbg !13495
  %9 = icmp eq i32 %8, 0, !dbg !13496
  br i1 %9, label %10, label %32, !dbg !13497

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13498
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13498
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13478, metadata !DIExpression()), !dbg !13498
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13498
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13498
  %14 = load i32, i32* %13, align 4, !dbg !13498
  %15 = shl i32 %14, 2, !dbg !13498
  %16 = alloca i8, i32 %15, align 8, !dbg !13498
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13498
  store i8* %16, i8** %17, align 4, !dbg !13498
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13498
  %19 = alloca i8, i32 %14, align 8, !dbg !13498
  store i8* %19, i8** %18, align 4, !dbg !13498
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13498
  store i32 -1, i32* %20, align 4, !dbg !13498
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13499
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13487, metadata !DIExpression()), !dbg !13500
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13477, metadata !DIExpression()), !dbg !13490
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !13501
  br i1 %22, label %23, label %24, !dbg !13498

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13501
  br label %32, !dbg !13502

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !13477, metadata !DIExpression()), !dbg !13490
  %26 = load i32, i32* %4, align 4, !dbg !13503
  %27 = add nsw i32 %26, 1, !dbg !13503
  store i32 %27, i32* %4, align 4, !dbg !13503
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !13505
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !13505
  store i32 %26, i32* %29, align 8, !dbg !13506
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13499
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13487, metadata !DIExpression()), !dbg !13500
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13477, metadata !DIExpression()), !dbg !13490
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !13501
  br i1 %31, label %23, label %24, !dbg !13498, !llvm.loop !13507

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13509
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13510
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !13511
  ret void, !dbg !13512
}

; Function Attrs: optsize
declare !dbg !13513 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13518 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13521 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13523, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13524, metadata !DIExpression()), !dbg !13525
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13526
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13527
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !13528
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13529
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !13529
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !13531
  br i1 %7, label %8, label %10, !dbg !13532

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13533
  store i32 0, i32* %9, align 4, !dbg !13535
  br label %10, !dbg !13536

10:                                               ; preds = %8, %2
  ret void, !dbg !13537
}

; Function Attrs: optsize
declare !dbg !13538 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13539 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13543, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13544, metadata !DIExpression()), !dbg !13546
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13547
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !13548
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13545, metadata !DIExpression()), !dbg !13546
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13544, metadata !DIExpression()), !dbg !13546
  ret %struct.k_thread* %4, !dbg !13549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13550 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13554, metadata !DIExpression()), !dbg !13555
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !13556
  ret %struct.rbnode* %2, !dbg !13557
}

; Function Attrs: optsize
declare !dbg !13558 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !13561 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13573, metadata !DIExpression()), !dbg !13577
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13578
  %3 = load i32, i32* %2, align 4, !dbg !13578
  %4 = icmp eq i32 %3, 0, !dbg !13580
  br i1 %4, label %10, label %5, !dbg !13581

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13574, metadata !DIExpression()), !dbg !13577
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13582, !range !5833
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13583
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13575, metadata !DIExpression()), !dbg !13577
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !13584
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13576, metadata !DIExpression()), !dbg !13577
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13574, metadata !DIExpression()), !dbg !13577
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13577
  ret %struct.k_thread* %11, !dbg !13585
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13586 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13590, metadata !DIExpression()), !dbg !13593
  call void @llvm.dbg.value(metadata i32 0, metadata !13591, metadata !DIExpression()), !dbg !13593
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13594
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13592, metadata !DIExpression()), !dbg !13593
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13595
  br i1 %3, label %8, label %4, !dbg !13596

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13597
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13599
  call void @llvm.dbg.value(metadata i32 1, metadata !13591, metadata !DIExpression()), !dbg !13593
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13594
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13592, metadata !DIExpression()), !dbg !13593
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13595
  br i1 %7, label %8, label %4, !dbg !13596, !llvm.loop !13600

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13593
  ret i32 %9, !dbg !13602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !13603 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13605, metadata !DIExpression()), !dbg !13606
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13607
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !13608
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13609
  ret %struct.k_thread* %4, !dbg !13610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !13611 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13620, metadata !DIExpression()), !dbg !13621
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13622
  tail call fastcc void @sys_dlist_init.133(%struct._dnode* noundef nonnull %2) #25, !dbg !13623
  ret void, !dbg !13624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.133(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13625 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13629, metadata !DIExpression()), !dbg !13630
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13631
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13632
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13633
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13634
  ret void, !dbg !13635
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13636 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !13637
  tail call void @k_sched_time_slice_set(i32 noundef 1, i32 noundef 0) #25, !dbg !13638
  ret void, !dbg !13639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !13640 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13645, metadata !DIExpression()), !dbg !13646
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13647
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13647
  %4 = load i8, i8* %3, align 2, !dbg !13647
  %5 = sext i8 %4 to i32, !dbg !13648
  ret i32 %5, !dbg !13649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13654, metadata !DIExpression()), !dbg !13657
  call void @llvm.dbg.value(metadata i32 %1, metadata !13655, metadata !DIExpression()), !dbg !13657
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13656, metadata !DIExpression()), !dbg !13657
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13658
  ret void, !dbg !13659
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13660 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !13661
  br i1 %1, label %8, label %2, !dbg !13662

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !13663
  br i1 %3, label %8, label %4, !dbg !13664

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13665
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !13666
  %7 = xor i1 %6, true, !dbg !13664
  br label %8, !dbg !13664

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !13668 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13669, !range !5253
  %2 = icmp eq i8 %1, 0, !dbg !13669
  ret i1 %2, !dbg !13670
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13671 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13674
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13676, !srcloc !12182
  call void @llvm.dbg.value(metadata i32 undef, metadata !12179, metadata !DIExpression()) #23, !dbg !13678
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13678
  call void @llvm.dbg.value(metadata i32 undef, metadata !12173, metadata !DIExpression()) #23, !dbg !13674
  call void @llvm.dbg.value(metadata i32 undef, metadata !13673, metadata !DIExpression()), !dbg !13679
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13680
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12336, metadata !DIExpression()) #23, !dbg !13683
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13685
  %4 = load i8, i8* %3, align 1, !dbg !13686
  %5 = and i8 %4, 127, !dbg !13686
  store i8 %5, i8* %3, align 1, !dbg !13686
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12344, metadata !DIExpression()) #23, !dbg !13687
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !13689
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13690
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12353, metadata !DIExpression()) #23, !dbg !13691
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13693
  %8 = load i8, i8* %7, align 1, !dbg !13694
  %9 = or i8 %8, -128, !dbg !13694
  store i8 %9, i8* %7, align 1, !dbg !13694
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12360, metadata !DIExpression()) #23, !dbg !13695
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12367, metadata !DIExpression()) #23, !dbg !13697
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12373, metadata !DIExpression()) #23, !dbg !13697
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13699
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12374, metadata !DIExpression()) #23, !dbg !13697
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13700
  br i1 %11, label %22, label %12, !dbg !13699

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12374, metadata !DIExpression()) #23, !dbg !13697
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13701
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12374, metadata !DIExpression()) #23, !dbg !13697
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !13702
  %16 = icmp sgt i32 %15, 0, !dbg !13703
  br i1 %16, label %17, label %19, !dbg !13704

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13705
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !13706
  br label %24, !dbg !13707

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !13700
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12374, metadata !DIExpression()) #23, !dbg !13697
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13700
  br i1 %21, label %22, label %12, !dbg !13699, !llvm.loop !13708

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13710
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !13711
  br label %24, !dbg !13712

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13676
  call void @llvm.dbg.value(metadata i32 %25, metadata !12179, metadata !DIExpression()) #23, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %25, metadata !12173, metadata !DIExpression()) #23, !dbg !13674
  call void @llvm.dbg.value(metadata i32 %25, metadata !13673, metadata !DIExpression()), !dbg !13679
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13713
  call void @llvm.dbg.value(metadata i32 undef, metadata !12778, metadata !DIExpression()) #23, !dbg !13714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12783, metadata !DIExpression()) #23, !dbg !13714
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !13716
  ret void, !dbg !13717
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13718 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13722, metadata !DIExpression()), !dbg !13725
  %3 = icmp eq i64 %2, -1, !dbg !13726
  br i1 %3, label %4, label %6, !dbg !13728

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13729
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !13731
  br label %11, !dbg !13732

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13723, metadata !DIExpression()), !dbg !13725
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !13733
  %8 = sext i32 %7 to i64, !dbg !13733
  call void @llvm.dbg.value(metadata i64 %8, metadata !13723, metadata !DIExpression()), !dbg !13725
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !13734
  %10 = trunc i64 %9 to i32, !dbg !13734
  call void @llvm.dbg.value(metadata i32 %10, metadata !13724, metadata !DIExpression()), !dbg !13725
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13725
  ret i32 %12, !dbg !13735
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13736 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13740, metadata !DIExpression()), !dbg !13741
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13742, !srcloc !13744
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !13745
  ret void, !dbg !13746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13747 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13751, metadata !DIExpression()), !dbg !13755
  %2 = icmp eq i64 %0, 0, !dbg !13756
  br i1 %2, label %3, label %4, !dbg !13758

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !13759
  br label %29, !dbg !13761

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13753, metadata !DIExpression()), !dbg !13755
  %5 = icmp sgt i64 %0, -3, !dbg !13762
  br i1 %5, label %6, label %10, !dbg !13764

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13765
  %8 = trunc i64 %0 to i32, !dbg !13767
  %9 = add i32 %7, %8, !dbg !13767
  call void @llvm.dbg.value(metadata i32 %9, metadata !13752, metadata !DIExpression()), !dbg !13755
  br label %13, !dbg !13768

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13769
  %12 = sub i32 -2, %11, !dbg !13769
  call void @llvm.dbg.value(metadata i32 %12, metadata !13752, metadata !DIExpression()), !dbg !13755
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13771
  call void @llvm.dbg.value(metadata i32 %14, metadata !13752, metadata !DIExpression()), !dbg !13755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13772
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13774, !srcloc !12182
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13774
  call void @llvm.dbg.value(metadata i32 %16, metadata !12179, metadata !DIExpression()) #23, !dbg !13776
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13776
  call void @llvm.dbg.value(metadata i32 %16, metadata !12173, metadata !DIExpression()) #23, !dbg !13772
  call void @llvm.dbg.value(metadata i32 %16, metadata !13754, metadata !DIExpression()), !dbg !13755
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13777
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13778
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !13779
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13780
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13781
  tail call fastcc void @z_add_thread_timeout.126(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !13781
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13782
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !13783
  call void @llvm.dbg.value(metadata i32 %16, metadata !12778, metadata !DIExpression()) #23, !dbg !13784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12783, metadata !DIExpression()) #23, !dbg !13784
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !13786
  %22 = zext i32 %14 to i64, !dbg !13787
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13788
  %24 = zext i32 %23 to i64, !dbg !13788
  %25 = sub nsw i64 %22, %24, !dbg !13789
  call void @llvm.dbg.value(metadata i64 %25, metadata !13751, metadata !DIExpression()), !dbg !13755
  %26 = icmp sgt i64 %25, 0, !dbg !13790
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13790
  %28 = trunc i64 %27 to i32, !dbg !13790
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13755
  ret i32 %30, !dbg !13791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13792 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13794, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i64 %0, metadata !12214, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.value(metadata i32 10000, metadata !12217, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.value(metadata i32 1000, metadata !12218, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.value(metadata i8 1, metadata !12219, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.value(metadata i1 false, metadata !12220, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13796
  call void @llvm.dbg.value(metadata i1 false, metadata !12221, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13796
  call void @llvm.dbg.value(metadata i8 0, metadata !12222, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.value(metadata i1 false, metadata !12223, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13796
  call void @llvm.dbg.value(metadata i1 true, metadata !12224, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13796
  call void @llvm.dbg.value(metadata i64 0, metadata !12225, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.value(metadata i64 0, metadata !12225, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.value(metadata i64 %0, metadata !12214, metadata !DIExpression()), !dbg !13796
  %2 = udiv i64 %0, 10, !dbg !13798
  ret i64 %2, !dbg !13802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13803 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13804, !srcloc !13806
  tail call void @z_impl_k_yield() #25, !dbg !13807
  ret void, !dbg !13808
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13813, metadata !DIExpression()), !dbg !13815
  %2 = sext i32 %0 to i64, !dbg !13816
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !13817
  call void @llvm.dbg.value(metadata i64 %3, metadata !13814, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13815
  %4 = shl i64 %3, 32, !dbg !13818
  %5 = ashr exact i64 %4, 32, !dbg !13818
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !13819
  call void @llvm.dbg.value(metadata i32 %6, metadata !13814, metadata !DIExpression()), !dbg !13815
  %7 = sext i32 %6 to i64, !dbg !13820
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !13821
  %9 = trunc i64 %8 to i32, !dbg !13821
  ret i32 %9, !dbg !13822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !13823 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13825, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata i64 %0, metadata !12214, metadata !DIExpression()), !dbg !13827
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12217, metadata !DIExpression()), !dbg !13827
  call void @llvm.dbg.value(metadata i32 10000, metadata !12218, metadata !DIExpression()), !dbg !13827
  call void @llvm.dbg.value(metadata i8 1, metadata !12219, metadata !DIExpression()), !dbg !13827
  call void @llvm.dbg.value(metadata i1 false, metadata !12220, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13827
  call void @llvm.dbg.value(metadata i1 true, metadata !12221, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13827
  call void @llvm.dbg.value(metadata i8 0, metadata !12222, metadata !DIExpression()), !dbg !13827
  call void @llvm.dbg.value(metadata i1 false, metadata !12223, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13827
  call void @llvm.dbg.value(metadata i1 true, metadata !12224, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13827
  call void @llvm.dbg.value(metadata i64 0, metadata !12225, metadata !DIExpression()), !dbg !13827
  call void @llvm.dbg.value(metadata i64 0, metadata !12225, metadata !DIExpression()), !dbg !13827
  %2 = add i64 %0, 99, !dbg !13829
  call void @llvm.dbg.value(metadata i64 %2, metadata !12214, metadata !DIExpression()), !dbg !13827
  %3 = udiv i64 %2, 100, !dbg !13830
  ret i64 %3, !dbg !13831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13832 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13834, metadata !DIExpression()), !dbg !13835
  call void @llvm.dbg.value(metadata i64 %0, metadata !12214, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i32 10000, metadata !12217, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12218, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i8 1, metadata !12219, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i1 false, metadata !12220, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13836
  call void @llvm.dbg.value(metadata i1 false, metadata !12221, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13836
  call void @llvm.dbg.value(metadata i8 0, metadata !12222, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i1 true, metadata !12223, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13836
  call void @llvm.dbg.value(metadata i1 false, metadata !12224, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13836
  call void @llvm.dbg.value(metadata i64 0, metadata !12225, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i64 0, metadata !12225, metadata !DIExpression()), !dbg !13836
  %2 = mul i64 %0, 100, !dbg !13838
  ret i64 %2, !dbg !13840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13841 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13843, metadata !DIExpression()), !dbg !13844
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !13845
  br i1 %2, label %14, label %3, !dbg !13847

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13848
  %5 = icmp slt i32 %4, 0, !dbg !13850
  br i1 %5, label %6, label %10, !dbg !13851

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13852
  %8 = load i8, i8* %7, align 1, !dbg !13852
  %9 = icmp eq i8 %8, 16, !dbg !13855
  br i1 %9, label %10, label %14, !dbg !13856

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !13857
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !13858
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13859, !srcloc !12818
  call void @llvm.dbg.value(metadata i32 %11, metadata !12814, metadata !DIExpression()) #23, !dbg !13863
  %12 = icmp eq i32 %11, 0, !dbg !13864
  br i1 %12, label %13, label %14, !dbg !13865

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13866
  br label %14, !dbg !13868

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13872, metadata !DIExpression()), !dbg !13873
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13874
  %3 = load i8, i8* %2, align 1, !dbg !13874
  %4 = and i8 %3, 2, !dbg !13875
  %5 = icmp ne i8 %4, 0, !dbg !13876
  ret i1 %5, !dbg !13877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !13878 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13883
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13882, metadata !DIExpression()), !dbg !13884
  ret %struct.k_thread* %1, !dbg !13885
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13886 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13887, !srcloc !12818
  call void @llvm.dbg.value(metadata i32 %1, metadata !12814, metadata !DIExpression()) #23, !dbg !13890
  %2 = icmp eq i32 %1, 0, !dbg !13891
  br i1 %2, label %3, label %8, !dbg !13892

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13893
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !13894
  %6 = icmp ne i32 %5, 0, !dbg !13892
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13895
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13896 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13898, metadata !DIExpression()), !dbg !13900
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !13901
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13903, !srcloc !12182
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13903
  call void @llvm.dbg.value(metadata i32 %3, metadata !12179, metadata !DIExpression()) #23, !dbg !13905
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !13905
  call void @llvm.dbg.value(metadata i32 %3, metadata !12173, metadata !DIExpression()) #23, !dbg !13901
  call void @llvm.dbg.value(metadata i32 %3, metadata !13899, metadata !DIExpression()), !dbg !13900
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13906
  %5 = load i8, i8* %4, align 4, !dbg !13906
  %6 = and i8 %5, 1, !dbg !13908
  %7 = icmp eq i8 %6, 0, !dbg !13909
  br i1 %7, label %9, label %8, !dbg !13910

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12194, metadata !DIExpression()) #23, !dbg !13911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13911
  call void @llvm.dbg.value(metadata i32 %3, metadata !12202, metadata !DIExpression()) #23, !dbg !13914
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13916, !srcloc !12208
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13917, !srcloc !13919
  br label %24, !dbg !13920

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13921
  %11 = load i8, i8* %10, align 1, !dbg !13921
  %12 = and i8 %11, 8, !dbg !13923
  %13 = icmp eq i8 %12, 0, !dbg !13924
  br i1 %13, label %15, label %14, !dbg !13925

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12194, metadata !DIExpression()) #23, !dbg !13926
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13926
  call void @llvm.dbg.value(metadata i32 %3, metadata !12202, metadata !DIExpression()) #23, !dbg !13929
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13931, !srcloc !12208
  br label %24, !dbg !13932

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !13933
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13934
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13936
  br i1 %17, label %18, label %23, !dbg !13937

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13938, !srcloc !12818
  call void @llvm.dbg.value(metadata i32 %19, metadata !12814, metadata !DIExpression()) #23, !dbg !13941
  %20 = icmp eq i32 %19, 0, !dbg !13942
  br i1 %20, label %21, label %23, !dbg !13943

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12778, metadata !DIExpression()) #23, !dbg !13944
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12783, metadata !DIExpression()) #23, !dbg !13944
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !13947
  br label %23, !dbg !13948

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12194, metadata !DIExpression()) #23, !dbg !13949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !13949
  call void @llvm.dbg.value(metadata i32 %3, metadata !12202, metadata !DIExpression()) #23, !dbg !13951
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13953, !srcloc !12208
  br label %24, !dbg !13954

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13954
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13955 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13957, metadata !DIExpression()), !dbg !13958
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13959
  %3 = load i8, i8* %2, align 1, !dbg !13959
  %4 = and i8 %3, 8, !dbg !13961
  %5 = icmp eq i8 %4, 0, !dbg !13962
  br i1 %5, label %6, label %20, !dbg !13963

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13964
  %8 = or i8 %7, 8, !dbg !13964
  store i8 %8, i8* %2, align 1, !dbg !13964
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !13966
  br i1 %9, label %10, label %12, !dbg !13968

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12336, metadata !DIExpression()) #23, !dbg !13969
  %11 = and i8 %8, 95, !dbg !13972
  store i8 %11, i8* %2, align 1, !dbg !13972
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12344, metadata !DIExpression()) #23, !dbg !13973
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !13975
  br label %12, !dbg !13976

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13977
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !13977
  %15 = icmp eq %union.anon* %14, null, !dbg !13979
  br i1 %15, label %17, label %16, !dbg !13980

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13981
  br label %17, !dbg !13983

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13984
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13985
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !13986
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13987
  br label %20, !dbg !13988

20:                                               ; preds = %17, %1
  ret void, !dbg !13989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !13990 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13994, metadata !DIExpression()), !dbg !13996
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13997
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13995, metadata !DIExpression()), !dbg !13996
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13998
  br i1 %3, label %10, label %4, !dbg !13999

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !14000
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !14002
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14003, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i32 0, metadata !14008, metadata !DIExpression()), !dbg !14009
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14011
  store i32 0, i32* %7, align 4, !dbg !14012
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !14013
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13997
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13995, metadata !DIExpression()), !dbg !13996
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13998
  br i1 %9, label %10, label %4, !dbg !13999, !llvm.loop !14014

10:                                               ; preds = %4, %1
  ret void, !dbg !14016
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14017 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14022, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14021, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !14026
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14028, !srcloc !12182
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14028
  call void @llvm.dbg.value(metadata i32 %4, metadata !12179, metadata !DIExpression()) #23, !dbg !14030
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !14030
  call void @llvm.dbg.value(metadata i32 %4, metadata !12173, metadata !DIExpression()) #23, !dbg !14026
  call void @llvm.dbg.value(metadata i32 %4, metadata !14023, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.value(metadata i32 0, metadata !14024, metadata !DIExpression()), !dbg !14025
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14031
  %6 = load i8, i8* %5, align 1, !dbg !14031
  %7 = and i8 %6, 8, !dbg !14033
  %8 = icmp eq i8 %7, 0, !dbg !14034
  br i1 %8, label %9, label %24, !dbg !14035

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14022, metadata !DIExpression()), !dbg !14025
  %11 = icmp eq i64 %10, 0, !dbg !14036
  br i1 %11, label %24, label %12, !dbg !14038

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14039
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14041
  br i1 %14, label %24, label %15, !dbg !14042

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14043
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14043
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14044
  %19 = icmp eq %union.anon* %17, %18, !dbg !14045
  br i1 %19, label %24, label %20, !dbg !14046

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14047
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !14049
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14050
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !14051
  call void @llvm.dbg.value(metadata i32 %4, metadata !12778, metadata !DIExpression()) #23, !dbg !14052
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12783, metadata !DIExpression()) #23, !dbg !14052
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !14054
  call void @llvm.dbg.value(metadata i32 %23, metadata !14024, metadata !DIExpression()), !dbg !14025
  br label %26, !dbg !14055

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14056
  call void @llvm.dbg.value(metadata i32 %25, metadata !14024, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.value(metadata i32 %4, metadata !12194, metadata !DIExpression()) #23, !dbg !14057
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !14057
  call void @llvm.dbg.value(metadata i32 %4, metadata !12202, metadata !DIExpression()) #23, !dbg !14059
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14061, !srcloc !12208
  br label %26, !dbg !14062

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14025
  ret i32 %27, !dbg !14063
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14064 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14068, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i32 %1, metadata !14069, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i8* %2, metadata !14070, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i8 0, metadata !14072, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i32 0, metadata !14073, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12167, metadata !DIExpression()) #23, !dbg !14078
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14080, !srcloc !12182
  call void @llvm.dbg.value(metadata i32 undef, metadata !12179, metadata !DIExpression()) #23, !dbg !14082
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()) #23, !dbg !14082
  call void @llvm.dbg.value(metadata i32 undef, metadata !12173, metadata !DIExpression()) #23, !dbg !14078
  call void @llvm.dbg.value(metadata i32 undef, metadata !14075, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata i8 poison, metadata !14072, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i32 undef, metadata !14073, metadata !DIExpression()), !dbg !14077
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !14083
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14071, metadata !DIExpression()), !dbg !14076
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14086
  br i1 %7, label %12, label %8, !dbg !14088

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14089, metadata !DIExpression()), !dbg !14097
  call void @llvm.dbg.value(metadata i32 %1, metadata !14095, metadata !DIExpression()), !dbg !14097
  call void @llvm.dbg.value(metadata i8* %2, metadata !14096, metadata !DIExpression()), !dbg !14097
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14003, metadata !DIExpression()), !dbg !14100
  call void @llvm.dbg.value(metadata i32 %1, metadata !14008, metadata !DIExpression()), !dbg !14100
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !14102
  store i32 %1, i32* %9, align 4, !dbg !14103
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !14104
  store i8* %2, i8** %10, align 4, !dbg !14105
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !14106
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !14107
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !14108
  call void @llvm.dbg.value(metadata i8 1, metadata !14072, metadata !DIExpression()), !dbg !14076
  br label %12, !dbg !14109

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14080
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14080
  call void @llvm.dbg.value(metadata i32 %14, metadata !12179, metadata !DIExpression()) #23, !dbg !14082
  call void @llvm.dbg.value(metadata i32 %14, metadata !12173, metadata !DIExpression()) #23, !dbg !14078
  call void @llvm.dbg.value(metadata i32 %14, metadata !14075, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata i8 poison, metadata !14072, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i32 undef, metadata !12194, metadata !DIExpression()) #23, !dbg !14110
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12199, metadata !DIExpression()) #23, !dbg !14110
  call void @llvm.dbg.value(metadata i32 undef, metadata !12202, metadata !DIExpression()) #23, !dbg !14112
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14114, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 undef, metadata !14073, metadata !DIExpression()), !dbg !14077
  ret i1 %13, !dbg !14115
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14116 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14122, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i64 undef, metadata !14124, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14121, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14123, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i8** %4, metadata !14125, metadata !DIExpression()), !dbg !14127
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !14128
  call void @llvm.dbg.value(metadata i32 %6, metadata !14126, metadata !DIExpression()), !dbg !14127
  %7 = icmp eq i8** %4, null, !dbg !14129
  br i1 %7, label %12, label %8, !dbg !14131

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14132
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14134
  %11 = load i8*, i8** %10, align 4, !dbg !14134
  store i8* %11, i8** %4, align 4, !dbg !14135
  br label %12, !dbg !14136

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14138 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !14140
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !14141
  ret void, !dbg !14142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14143 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14153, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14151, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14152, metadata !DIExpression()), !dbg !14170
  %5 = icmp eq i64 %4, -1, !dbg !14171
  br i1 %5, label %55, label %6, !dbg !14173

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14174
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14175
  call void @llvm.dbg.value(metadata i32 0, metadata !14154, metadata !DIExpression()), !dbg !14176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14177, metadata !DIExpression()) #23, !dbg !14184
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14186, !srcloc !14192
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14186
  call void @llvm.dbg.value(metadata i32 %9, metadata !14189, metadata !DIExpression()) #23, !dbg !14193
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()) #23, !dbg !14193
  call void @llvm.dbg.value(metadata i32 %9, metadata !14183, metadata !DIExpression()) #23, !dbg !14184
  call void @llvm.dbg.value(metadata i32 %9, metadata !14160, metadata !DIExpression()), !dbg !14176
  call void @llvm.dbg.value(metadata i32 undef, metadata !14154, metadata !DIExpression()), !dbg !14176
  %10 = icmp slt i64 %4, -1, !dbg !14194
  br i1 %10, label %11, label %17, !dbg !14195

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14196
  %13 = add i64 %4, %12, !dbg !14197
  %14 = sub i64 -2, %13, !dbg !14197
  call void @llvm.dbg.value(metadata i64 %14, metadata !14164, metadata !DIExpression()), !dbg !14198
  %15 = icmp sgt i64 %14, 1, !dbg !14199
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14199
  br label %22, !dbg !14200

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14201
  %19 = tail call fastcc i32 @elapsed.144() #25, !dbg !14203
  %20 = sext i32 %19 to i64, !dbg !14203
  %21 = add nsw i64 %18, %20, !dbg !14204
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14205
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14206
  store i64 %23, i64* %24, align 8, !dbg !14207
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !14208
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14161, metadata !DIExpression()), !dbg !14210
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14211
  br i1 %26, label %42, label %27, !dbg !14211

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14212
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14161, metadata !DIExpression()), !dbg !14210
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14216
  %31 = load i64, i64* %30, align 8, !dbg !14216
  %32 = icmp slt i64 %28, %31, !dbg !14217
  br i1 %32, label %33, label %38, !dbg !14218

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14216
  %35 = sub nsw i64 %31, %28, !dbg !14219
  store i64 %35, i64* %34, align 8, !dbg !14219
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !14221
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14222
  tail call fastcc void @sys_dlist_insert.145(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !14223
  br label %44, !dbg !14224

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !14225
  store i64 %39, i64* %24, align 8, !dbg !14225
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !14226
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14161, metadata !DIExpression()), !dbg !14210
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14211
  br i1 %41, label %42, label %27, !dbg !14211, !llvm.loop !14227

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14229
  tail call fastcc void @sys_dlist_append.146(%struct._dnode* noundef %43) #25, !dbg !14232
  br label %44, !dbg !14233

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !14234
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !14235
  br i1 %46, label %47, label %54, !dbg !14236

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !14237
  call void @llvm.dbg.value(metadata i32 %48, metadata !14167, metadata !DIExpression()), !dbg !14238
  %49 = icmp ne i32 %48, 0, !dbg !14239
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !14241
  br i1 %52, label %54, label %53, !dbg !14241

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !14242
  br label %54, !dbg !14244

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !14245, metadata !DIExpression()) #23, !dbg !14251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14251
  call void @llvm.dbg.value(metadata i32 %9, metadata !14253, metadata !DIExpression()) #23, !dbg !14256
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14258, !srcloc !14259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14154, metadata !DIExpression()), !dbg !14176
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !14260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.144() unnamed_addr #1 !dbg !14261 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14264
  %2 = icmp eq i32 %1, 0, !dbg !14265
  br i1 %2, label %3, label %5, !dbg !14264

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !14266
  br label %5, !dbg !14264

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14264
  ret i32 %6, !dbg !14267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !14268 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.149() #25, !dbg !14274
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14272, metadata !DIExpression()), !dbg !14275
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14276
  ret %struct._timeout* %2, !dbg !14277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.145(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14278 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14282, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14283, metadata !DIExpression()), !dbg !14286
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14287
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14287
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14284, metadata !DIExpression()), !dbg !14286
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14288
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14289
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14290
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14291
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14292
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14293
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14294
  ret void, !dbg !14295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !14296 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14300, metadata !DIExpression()), !dbg !14302
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14303
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.147(%struct._dnode* noundef %2) #25, !dbg !14304
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14301, metadata !DIExpression()), !dbg !14302
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14305
  ret %struct._timeout* %4, !dbg !14306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.146(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14307 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14312, metadata !DIExpression()), !dbg !14315
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14313, metadata !DIExpression()), !dbg !14315
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14316
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14314, metadata !DIExpression()), !dbg !14315
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14317
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14318
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14319
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14320
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14321
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14322
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14323
  ret void, !dbg !14324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14325 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !14330
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14327, metadata !DIExpression()), !dbg !14331
  %2 = tail call fastcc i32 @elapsed.144() #25, !dbg !14332
  call void @llvm.dbg.value(metadata i32 %2, metadata !14328, metadata !DIExpression()), !dbg !14331
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14333
  br i1 %3, label %14, label %4, !dbg !14335

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14336
  %6 = load i64, i64* %5, align 8, !dbg !14336
  %7 = sext i32 %2 to i64, !dbg !14337
  %8 = sub nsw i64 %6, %7, !dbg !14338
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14339
  br i1 %9, label %14, label %10, !dbg !14340

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14341
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14341
  %13 = trunc i64 %12 to i32, !dbg !14341
  call void @llvm.dbg.value(metadata i32 %13, metadata !14329, metadata !DIExpression()), !dbg !14331
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14343
  call void @llvm.dbg.value(metadata i32 %15, metadata !14329, metadata !DIExpression()), !dbg !14331
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14344
  %17 = icmp ne i32 %16, 0, !dbg !14346
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14347
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14347
  call void @llvm.dbg.value(metadata i32 %20, metadata !14329, metadata !DIExpression()), !dbg !14331
  ret i32 %20, !dbg !14348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.147(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14349 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14353, metadata !DIExpression()), !dbg !14355
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14354, metadata !DIExpression()), !dbg !14355
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14356
  br i1 %2, label %5, label %3, !dbg !14357

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.148(%struct._dnode* noundef nonnull %0) #25, !dbg !14358
  br label %5, !dbg !14357

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14357
  ret %struct._dnode* %6, !dbg !14359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.148(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14360 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14362, metadata !DIExpression()), !dbg !14364
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14363, metadata !DIExpression()), !dbg !14364
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14365
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14366
  br i1 %3, label %7, label %4, !dbg !14367

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14368
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14368
  br label %7, !dbg !14367

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14367
  ret %struct._dnode* %8, !dbg !14369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.149() unnamed_addr #5 !dbg !14370 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14374, metadata !DIExpression()), !dbg !14375
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.150() #25, !dbg !14376
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14376
  ret %struct._dnode* %3, !dbg !14377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.150() unnamed_addr #5 !dbg !14378 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14382, metadata !DIExpression()), !dbg !14383
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14384
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14385
  ret i1 %2, !dbg !14386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14387 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14391, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i32 -22, metadata !14392, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i32 0, metadata !14393, metadata !DIExpression()), !dbg !14397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14177, metadata !DIExpression()) #23, !dbg !14398
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14400, !srcloc !14192
  call void @llvm.dbg.value(metadata i32 undef, metadata !14189, metadata !DIExpression()) #23, !dbg !14402
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()) #23, !dbg !14402
  call void @llvm.dbg.value(metadata i32 undef, metadata !14183, metadata !DIExpression()) #23, !dbg !14398
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()), !dbg !14397
  call void @llvm.dbg.value(metadata i32 -22, metadata !14392, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i32 undef, metadata !14393, metadata !DIExpression()), !dbg !14397
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14392, metadata !DIExpression()), !dbg !14396
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.153(%struct._dnode* noundef %3) #25, !dbg !14403
  br i1 %4, label %5, label %6, !dbg !14407

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !14408
  call void @llvm.dbg.value(metadata i32 0, metadata !14392, metadata !DIExpression()), !dbg !14396
  br label %6, !dbg !14410

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !14396
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14400
  call void @llvm.dbg.value(metadata i32 %8, metadata !14189, metadata !DIExpression()) #23, !dbg !14402
  call void @llvm.dbg.value(metadata i32 %8, metadata !14183, metadata !DIExpression()) #23, !dbg !14398
  call void @llvm.dbg.value(metadata i32 %8, metadata !14395, metadata !DIExpression()), !dbg !14397
  call void @llvm.dbg.value(metadata i32 %7, metadata !14392, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i32 undef, metadata !14245, metadata !DIExpression()) #23, !dbg !14411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14411
  call void @llvm.dbg.value(metadata i32 undef, metadata !14253, metadata !DIExpression()) #23, !dbg !14413
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14415, !srcloc !14259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14393, metadata !DIExpression()), !dbg !14397
  ret i32 %7, !dbg !14416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.153(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14417 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14423, metadata !DIExpression()), !dbg !14424
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14425
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14425
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14426
  ret i1 %4, !dbg !14427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !14428 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14430, metadata !DIExpression()), !dbg !14431
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !14432
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14434
  br i1 %3, label %10, label %4, !dbg !14435

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14436
  %6 = load i64, i64* %5, align 8, !dbg !14436
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14438
  %8 = load i64, i64* %7, align 8, !dbg !14439
  %9 = add nsw i64 %8, %6, !dbg !14439
  store i64 %9, i64* %7, align 8, !dbg !14439
  br label %10, !dbg !14440

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14441
  tail call fastcc void @sys_dlist_remove.154(%struct._dnode* noundef %11) #25, !dbg !14442
  ret void, !dbg !14443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.154(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !14444 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14448, metadata !DIExpression()), !dbg !14451
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14452
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14452
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14449, metadata !DIExpression()), !dbg !14451
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14453
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14453
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14450, metadata !DIExpression()), !dbg !14451
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14454
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14455
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14456
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14457
  tail call fastcc void @sys_dnode_init.155(%struct._dnode* noundef %0) #25, !dbg !14458
  ret void, !dbg !14459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.155(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14460 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14462, metadata !DIExpression()), !dbg !14463
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14464
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14465
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14466
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14467
  ret void, !dbg !14468
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14469 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14475, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.value(metadata i64 0, metadata !14476, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.value(metadata i32 0, metadata !14477, metadata !DIExpression()), !dbg !14481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14177, metadata !DIExpression()) #23, !dbg !14482
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14484, !srcloc !14192
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14484
  call void @llvm.dbg.value(metadata i32 %3, metadata !14189, metadata !DIExpression()) #23, !dbg !14486
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()) #23, !dbg !14486
  call void @llvm.dbg.value(metadata i32 %3, metadata !14183, metadata !DIExpression()) #23, !dbg !14482
  call void @llvm.dbg.value(metadata i32 %3, metadata !14479, metadata !DIExpression()), !dbg !14481
  call void @llvm.dbg.value(metadata i64 0, metadata !14476, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.value(metadata i32 undef, metadata !14477, metadata !DIExpression()), !dbg !14481
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14487
  call void @llvm.dbg.value(metadata i64 %4, metadata !14476, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.value(metadata i32 %3, metadata !14245, metadata !DIExpression()) #23, !dbg !14490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14490
  call void @llvm.dbg.value(metadata i32 %3, metadata !14253, metadata !DIExpression()) #23, !dbg !14492
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14494, !srcloc !14259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14477, metadata !DIExpression()), !dbg !14481
  ret i64 %4, !dbg !14495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14496 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14498, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i64 0, metadata !14499, metadata !DIExpression()), !dbg !14502
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.156(%struct._timeout* noundef %0) #25, !dbg !14503
  br i1 %2, label %21, label %3, !dbg !14505

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !14506
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14500, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata i64 0, metadata !14499, metadata !DIExpression()), !dbg !14502
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14508
  br i1 %5, label %16, label %6, !dbg !14510

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14500, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata i64 %8, metadata !14499, metadata !DIExpression()), !dbg !14502
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14511
  %10 = load i64, i64* %9, align 8, !dbg !14511
  %11 = add nsw i64 %10, %8, !dbg !14513
  call void @llvm.dbg.value(metadata i64 %11, metadata !14499, metadata !DIExpression()), !dbg !14502
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14514
  br i1 %12, label %16, label %13, !dbg !14516

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !14517
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14500, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata i64 %11, metadata !14499, metadata !DIExpression()), !dbg !14502
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14508
  br i1 %15, label %16, label %6, !dbg !14510, !llvm.loop !14518

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14502
  call void @llvm.dbg.value(metadata i64 %17, metadata !14499, metadata !DIExpression()), !dbg !14502
  %18 = tail call fastcc i32 @elapsed.144() #25, !dbg !14520
  %19 = sext i32 %18 to i64, !dbg !14520
  %20 = sub nsw i64 %17, %19, !dbg !14521
  br label %21, !dbg !14522

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14502
  ret i64 %22, !dbg !14523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.156(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14524 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14528, metadata !DIExpression()), !dbg !14529
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14530
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.153(%struct._dnode* noundef %2) #25, !dbg !14531
  %4 = xor i1 %3, true, !dbg !14532
  ret i1 %4, !dbg !14533
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14534 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14536, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i64 0, metadata !14537, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i32 0, metadata !14538, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14177, metadata !DIExpression()) #23, !dbg !14543
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14545, !srcloc !14192
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14545
  call void @llvm.dbg.value(metadata i32 %3, metadata !14189, metadata !DIExpression()) #23, !dbg !14547
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()) #23, !dbg !14547
  call void @llvm.dbg.value(metadata i32 %3, metadata !14183, metadata !DIExpression()) #23, !dbg !14543
  call void @llvm.dbg.value(metadata i32 %3, metadata !14540, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i64 0, metadata !14537, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i32 undef, metadata !14538, metadata !DIExpression()), !dbg !14542
  %4 = load i64, i64* @curr_tick, align 8, !dbg !14548
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14551
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !14537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14541
  call void @llvm.dbg.value(metadata i32 %3, metadata !14245, metadata !DIExpression()) #23, !dbg !14552
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14552
  call void @llvm.dbg.value(metadata i32 %3, metadata !14253, metadata !DIExpression()) #23, !dbg !14554
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14556, !srcloc !14259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14538, metadata !DIExpression()), !dbg !14542
  %6 = add i64 %5, %4, !dbg !14557
  ret i64 %6, !dbg !14558
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14559 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14561, metadata !DIExpression()), !dbg !14565
  call void @llvm.dbg.value(metadata i32 0, metadata !14562, metadata !DIExpression()), !dbg !14566
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14177, metadata !DIExpression()) #23, !dbg !14567
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14569, !srcloc !14192
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14569
  call void @llvm.dbg.value(metadata i32 %2, metadata !14189, metadata !DIExpression()) #23, !dbg !14571
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()) #23, !dbg !14571
  call void @llvm.dbg.value(metadata i32 %2, metadata !14183, metadata !DIExpression()) #23, !dbg !14567
  call void @llvm.dbg.value(metadata i32 %2, metadata !14564, metadata !DIExpression()), !dbg !14566
  call void @llvm.dbg.value(metadata i32 -1, metadata !14561, metadata !DIExpression()), !dbg !14565
  call void @llvm.dbg.value(metadata i32 undef, metadata !14562, metadata !DIExpression()), !dbg !14566
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !14572
  call void @llvm.dbg.value(metadata i32 %3, metadata !14561, metadata !DIExpression()), !dbg !14565
  call void @llvm.dbg.value(metadata i32 %2, metadata !14245, metadata !DIExpression()) #23, !dbg !14575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14575
  call void @llvm.dbg.value(metadata i32 %2, metadata !14253, metadata !DIExpression()) #23, !dbg !14577
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14579, !srcloc !14259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14562, metadata !DIExpression()), !dbg !14566
  ret i32 %3, !dbg !14580
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14583, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i1 %1, metadata !14584, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14593
  call void @llvm.dbg.value(metadata i32 0, metadata !14585, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14177, metadata !DIExpression()) #23, !dbg !14595
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14597, !srcloc !14192
  call void @llvm.dbg.value(metadata i32 undef, metadata !14189, metadata !DIExpression()) #23, !dbg !14599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()) #23, !dbg !14599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14183, metadata !DIExpression()) #23, !dbg !14595
  call void @llvm.dbg.value(metadata i32 undef, metadata !14587, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata i32 undef, metadata !14585, metadata !DIExpression()), !dbg !14594
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !14600
  call void @llvm.dbg.value(metadata i32 %4, metadata !14588, metadata !DIExpression()), !dbg !14601
  call void @llvm.dbg.value(metadata i1 undef, metadata !14591, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14601
  %5 = icmp slt i32 %4, 2, !dbg !14602
  call void @llvm.dbg.value(metadata i1 %5, metadata !14592, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14601
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14603
  call void @llvm.dbg.value(metadata i1 %6, metadata !14591, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14601
  br i1 %7, label %11, label %8, !dbg !14603

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14605
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14605
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !14607
  br label %11, !dbg !14608

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14597
  call void @llvm.dbg.value(metadata i32 %12, metadata !14189, metadata !DIExpression()) #23, !dbg !14599
  call void @llvm.dbg.value(metadata i32 %12, metadata !14183, metadata !DIExpression()) #23, !dbg !14595
  call void @llvm.dbg.value(metadata i32 %12, metadata !14587, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata i32 undef, metadata !14245, metadata !DIExpression()) #23, !dbg !14609
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14609
  call void @llvm.dbg.value(metadata i32 undef, metadata !14253, metadata !DIExpression()) #23, !dbg !14611
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14613, !srcloc !14259
  call void @llvm.dbg.value(metadata i32 1, metadata !14585, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata i32 undef, metadata !14585, metadata !DIExpression()), !dbg !14594
  ret void, !dbg !14614
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14619, metadata !DIExpression()), !dbg !14624
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !14625
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14177, metadata !DIExpression()) #23, !dbg !14626
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14628, !srcloc !14192
  call void @llvm.dbg.value(metadata i32 undef, metadata !14189, metadata !DIExpression()) #23, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()) #23, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !14183, metadata !DIExpression()) #23, !dbg !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()), !dbg !14624
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14624
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()), !dbg !14624
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !14631
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14632
  br i1 %4, label %28, label %5, !dbg !14633

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14634
  %10 = load i64, i64* %9, align 8, !dbg !14634
  %11 = sext i32 %8 to i64, !dbg !14635
  %12 = icmp sgt i64 %10, %11, !dbg !14636
  br i1 %12, label %26, label %13, !dbg !14637

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14624
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14621, metadata !DIExpression()), !dbg !14638
  %15 = trunc i64 %10 to i32, !dbg !14639
  call void @llvm.dbg.value(metadata i32 %15, metadata !14623, metadata !DIExpression()), !dbg !14638
  %16 = sext i32 %15 to i64, !dbg !14640
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14641
  %18 = add i64 %17, %16, !dbg !14641
  store i64 %18, i64* @curr_tick, align 8, !dbg !14641
  store i64 0, i64* %9, align 8, !dbg !14642
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !14643
  call void @llvm.dbg.value(metadata i32 %14, metadata !14245, metadata !DIExpression()) #23, !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14644
  call void @llvm.dbg.value(metadata i32 %14, metadata !14253, metadata !DIExpression()) #23, !dbg !14646
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14648, !srcloc !14259
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14649
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14649
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !14650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14177, metadata !DIExpression()) #23, !dbg !14651
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14653, !srcloc !14192
  call void @llvm.dbg.value(metadata i32 undef, metadata !14189, metadata !DIExpression()) #23, !dbg !14655
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()) #23, !dbg !14655
  call void @llvm.dbg.value(metadata i32 undef, metadata !14183, metadata !DIExpression()) #23, !dbg !14651
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()), !dbg !14624
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14656
  %23 = sub nsw i32 %22, %15, !dbg !14656
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14624
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()), !dbg !14624
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !14631
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14632
  br i1 %25, label %28, label %5, !dbg !14633, !llvm.loop !14657

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14659
  store i64 %27, i64* %9, align 8, !dbg !14659
  br label %32, !dbg !14662

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14624
  %31 = sext i32 %30 to i64, !dbg !14663
  br label %32, !dbg !14663

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14663
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14624
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14664
  %37 = add i64 %36, %33, !dbg !14664
  store i64 %37, i64* @curr_tick, align 8, !dbg !14664
  store i32 0, i32* @announce_remaining, align 4, !dbg !14665
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !14666
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !14667
  call void @llvm.dbg.value(metadata i32 %35, metadata !14245, metadata !DIExpression()) #23, !dbg !14668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14668
  call void @llvm.dbg.value(metadata i32 %35, metadata !14253, metadata !DIExpression()) #23, !dbg !14670
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14672, !srcloc !14259
  ret void, !dbg !14673
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14674 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14678, metadata !DIExpression()), !dbg !14682
  call void @llvm.dbg.value(metadata i32 0, metadata !14679, metadata !DIExpression()), !dbg !14683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14177, metadata !DIExpression()) #23, !dbg !14684
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14686, !srcloc !14192
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14686
  call void @llvm.dbg.value(metadata i32 %2, metadata !14189, metadata !DIExpression()) #23, !dbg !14688
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()) #23, !dbg !14688
  call void @llvm.dbg.value(metadata i32 %2, metadata !14183, metadata !DIExpression()) #23, !dbg !14684
  call void @llvm.dbg.value(metadata i32 %2, metadata !14681, metadata !DIExpression()), !dbg !14683
  call void @llvm.dbg.value(metadata i64 0, metadata !14678, metadata !DIExpression()), !dbg !14682
  call void @llvm.dbg.value(metadata i32 undef, metadata !14679, metadata !DIExpression()), !dbg !14683
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14689
  %4 = tail call fastcc i32 @elapsed.144() #25, !dbg !14692
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14678, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14682
  call void @llvm.dbg.value(metadata i32 %2, metadata !14245, metadata !DIExpression()) #23, !dbg !14693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14693
  call void @llvm.dbg.value(metadata i32 %2, metadata !14253, metadata !DIExpression()) #23, !dbg !14695
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14697, !srcloc !14259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14679, metadata !DIExpression()), !dbg !14683
  %5 = sext i32 %4 to i64, !dbg !14692
  %6 = add i64 %3, %5, !dbg !14698
  ret i64 %6, !dbg !14699
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14700 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14701
  %2 = trunc i64 %1 to i32, !dbg !14702
  ret i32 %2, !dbg !14703
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14704 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14705
  ret i64 %1, !dbg !14706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14709, metadata !DIExpression()), !dbg !14716
  %2 = icmp eq i32 %0, 0, !dbg !14717
  br i1 %2, label %10, label %3, !dbg !14719

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14720
  call void @llvm.dbg.value(metadata i32 %4, metadata !14710, metadata !DIExpression()), !dbg !14716
  %5 = mul i32 %0, 84, !dbg !14721
  call void @llvm.dbg.value(metadata i32 %5, metadata !14711, metadata !DIExpression()), !dbg !14716
  br label %6, !dbg !14722

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14723
  call void @llvm.dbg.value(metadata i32 %7, metadata !14712, metadata !DIExpression()), !dbg !14724
  %8 = sub i32 %7, %4, !dbg !14725
  %9 = icmp ult i32 %8, %5, !dbg !14727
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14729 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !14730
  ret i32 %1, !dbg !14731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14732 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !14734
  ret i32 %1, !dbg !14735
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14736 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14740, metadata !DIExpression()), !dbg !14742
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14743

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !14744
  br label %14, !dbg !14748

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14741, metadata !DIExpression()), !dbg !14742
  %6 = icmp slt i64 %2, -1, !dbg !14749
  br i1 %6, label %7, label %9, !dbg !14752

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14753
  br label %14, !dbg !14754

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !14756
  %11 = icmp ugt i64 %2, 1, !dbg !14757
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14757
  %13 = add nsw i64 %10, %12, !dbg !14758
  br label %14, !dbg !14759

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14760
  ret i64 %15, !dbg !14761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14762 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.165, i32 0, i32 0)) #24, !dbg !14764
  ret void, !dbg !14765
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!683, !2, !2312, !27, !173, !2314, !2316, !2353, !183, !227, !2355, !2366, !2412, !2414, !2442, !2470, !2513, !2585, !2630, !256, !410, !2658, !446, !456, !481, !721, !2663, !860, !926, !1232, !1511, !2704, !1626, !1716, !2706, !2769, !2836, !1770, !2839, !1777, !2140, !2857, !2160, !2859, !2275, !2862}
!llvm.ident = !{!2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864, !2864}
!llvm.module.flags = !{!2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "gcounter", scope: !27, file: !170, line: 12, type: !103, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !169, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/ipm/ipm_mcux/src/main_master.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !103, !105}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipm_driver_api", file: !108, line: 98, size: 160, elements: !109)
!108 = !DIFile(filename: "zephyr/include/zephyr/drivers/ipm.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!109 = !{!110, !143, !154, !159, !164}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "send", scope: !107, file: !108, line: 99, baseType: !111, size: 32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipm_send_t", file: !108, line: 54, baseType: !112)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!113 = !DISubroutineType(types: !114)
!114 = !{!103, !115, !103, !142, !13, !103}
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120, !124, !125, !126, !135, !136}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !117, file: !118, line: 380, baseType: !121, size: 32)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !117, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !117, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !117, file: !118, line: 386, baseType: !127, size: 32, offset: 96)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !129)
!129 = !{!130, !133}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !128, file: !118, line: 359, baseType: !131, size: 8)
!131 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !132)
!132 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !128, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!134 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !117, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !117, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !139)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !118, line: 43, baseType: !140)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !141)
!141 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "register_callback", scope: !107, file: !108, line: 100, baseType: !144, size: 32, offset: 32)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipm_register_callback_t", file: !108, line: 78, baseType: !145)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!146 = !DISubroutineType(types: !147)
!147 = !{null, !115, !148, !104}
!148 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipm_callback_t", file: !108, line: 45, baseType: !149)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!150 = !DISubroutineType(types: !151)
!151 = !{null, !115, !104, !142, !152}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "max_data_size_get", scope: !107, file: !108, line: 101, baseType: !155, size: 32, offset: 64)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipm_max_data_size_get_t", file: !108, line: 62, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = !DISubroutineType(types: !158)
!158 = !{!103, !115}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "max_id_val_get", scope: !107, file: !108, line: 102, baseType: !160, size: 32, offset: 96)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipm_max_id_val_get_t", file: !108, line: 70, baseType: !161)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DISubroutineType(types: !163)
!163 = !{!142, !115}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "set_enabled", scope: !107, file: !108, line: 103, baseType: !165, size: 32, offset: 128)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipm_set_enabled_t", file: !108, line: 88, baseType: !166)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!167 = !DISubroutineType(types: !168)
!168 = !{!103, !115, !103}
!169 = !{!25}
!170 = !DIFile(filename: "zephyr/samples/drivers/ipm/ipm_mcux/src/main_master.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!171 = !DIGlobalVariableExpression(var: !172, expr: !DIExpression())
!172 = distinct !DIGlobalVariable(name: "_char_out", scope: !173, file: !177, line: 54, type: !178, isLocal: false, isDefinition: true)
!173 = distinct !DICompileUnit(language: DW_LANG_C99, file: !174, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !175, globals: !176, splitDebugInlining: false, nameTableKind: None)
!174 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!175 = !{!104, !103}
!176 = !{!171}
!177 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!179 = !DISubroutineType(types: !180)
!180 = !{!103, !103}
!181 = !DIGlobalVariableExpression(var: !182, expr: !DIExpression())
!182 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !183, file: !200, line: 56, type: !201, isLocal: true, isDefinition: true, align: 32)
!183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !185, globals: !199, splitDebugInlining: false, nameTableKind: None)
!184 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!185 = !{!186}
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 32)
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !188, line: 407, baseType: !189)
!188 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 398, size: 224, elements: !190)
!190 = !{!191, !193, !194, !195, !196, !197, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !189, file: !188, line: 400, baseType: !192, size: 32)
!192 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !142)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !189, file: !188, line: 401, baseType: !192, size: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !189, file: !188, line: 402, baseType: !192, size: 32, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !189, file: !188, line: 403, baseType: !192, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !189, file: !188, line: 404, baseType: !192, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !189, file: !188, line: 405, baseType: !192, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !189, file: !188, line: 406, baseType: !192, size: 32, offset: 192)
!199 = !{!181}
!200 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !203, line: 51, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !224}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !202, file: !203, line: 60, baseType: !206, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DISubroutineType(types: !208)
!208 = !{!103, !209}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !212)
!212 = !{!213, !214, !215, !216, !222, !223}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !211, file: !118, line: 380, baseType: !121, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !211, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !211, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !211, file: !118, line: 386, baseType: !217, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !219)
!219 = !{!220, !221}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !218, file: !118, line: 359, baseType: !131, size: 8)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !218, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !211, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !211, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !202, file: !203, line: 65, baseType: !209, size: 32, offset: 32)
!225 = !DIGlobalVariableExpression(var: !226, expr: !DIExpression())
!226 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !227, file: !230, line: 71, type: !231, isLocal: true, isDefinition: true, align: 32)
!227 = distinct !DICompileUnit(language: DW_LANG_C99, file: !228, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !229, splitDebugInlining: false, nameTableKind: None)
!228 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!229 = !{!225}
!230 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !232)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !203, line: 51, size: 64, elements: !233)
!233 = !{!234, !253}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !232, file: !203, line: 60, baseType: !235, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = !DISubroutineType(types: !237)
!237 = !{!103, !238}
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !241)
!241 = !{!242, !243, !244, !245, !251, !252}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !240, file: !118, line: 380, baseType: !121, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !240, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !240, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !240, file: !118, line: 386, baseType: !246, size: 32, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !248)
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !247, file: !118, line: 359, baseType: !131, size: 8)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !247, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !240, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !240, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !232, file: !203, line: 65, baseType: !238, size: 32, offset: 32)
!254 = !DIGlobalVariableExpression(var: !255, expr: !DIExpression())
!255 = distinct !DIGlobalVariable(name: "static_regions", scope: !256, file: !265, line: 62, type: !406, isLocal: true, isDefinition: true)
!256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !257, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !258, globals: !261, splitDebugInlining: false, nameTableKind: None)
!257 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!258 = !{!259, !103, !142, !104}
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !260, line: 214, baseType: !32)
!260 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!261 = !{!262, !254}
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !264, file: !265, line: 198, type: !392, isLocal: true, isDefinition: true)
!264 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !265, file: !265, line: 175, type: !266, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !256, retainedNodes: !387)
!265 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!266 = !DISubroutineType(types: !267)
!267 = !{null, !268}
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !270, line: 245, size: 1024, elements: !271)
!270 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!271 = !{!272, !341, !354, !355, !356, !357, !363, !382}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !269, file: !270, line: 247, baseType: !273, size: 384)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !270, line: 57, size: 384, elements: !274)
!274 = !{!275, !303, !311, !312, !313, !326, !327, !328}
!275 = !DIDerivedType(tag: DW_TAG_member, scope: !273, file: !270, line: 60, baseType: !276, size: 64)
!276 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !273, file: !270, line: 60, size: 64, elements: !277)
!277 = !{!278, !294}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !276, file: !270, line: 61, baseType: !279, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !280, line: 49, baseType: !281)
!280 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !280, line: 37, size: 64, elements: !282)
!282 = !{!283, !289}
!283 = !DIDerivedType(tag: DW_TAG_member, scope: !281, file: !280, line: 38, baseType: !284, size: 32)
!284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !281, file: !280, line: 38, size: 32, elements: !285)
!285 = !{!286, !288}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !284, file: !280, line: 39, baseType: !287, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !280, line: 40, baseType: !287, size: 32)
!289 = !DIDerivedType(tag: DW_TAG_member, scope: !281, file: !280, line: 42, baseType: !290, size: 32, offset: 32)
!290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !281, file: !280, line: 42, size: 32, elements: !291)
!291 = !{!292, !293}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !290, file: !280, line: 43, baseType: !287, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !290, file: !280, line: 44, baseType: !287, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !276, file: !270, line: 62, baseType: !295, size: 64)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !296, line: 49, size: 64, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !295, file: !296, line: 50, baseType: !299, size: 64)
!299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !300, size: 64, elements: !301)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!301 = !{!302}
!302 = !DISubrange(count: 2)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !273, file: !270, line: 68, baseType: !304, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !306, line: 233, baseType: !307)
!306 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !306, line: 231, size: 64, elements: !308)
!308 = !{!309}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !307, file: !306, line: 232, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !280, line: 48, baseType: !281)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !273, file: !270, line: 71, baseType: !131, size: 8, offset: 96)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !273, file: !270, line: 74, baseType: !131, size: 8, offset: 104)
!313 = !DIDerivedType(tag: DW_TAG_member, scope: !273, file: !270, line: 90, baseType: !314, size: 16, offset: 112)
!314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !273, file: !270, line: 90, size: 16, elements: !315)
!315 = !{!316, !323}
!316 = !DIDerivedType(tag: DW_TAG_member, scope: !314, file: !270, line: 91, baseType: !317, size: 16)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !314, file: !270, line: 91, size: 16, elements: !318)
!318 = !{!319, !322}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !317, file: !270, line: 96, baseType: !320, size: 8)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !321)
!321 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !317, file: !270, line: 97, baseType: !131, size: 8, offset: 8)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !314, file: !270, line: 100, baseType: !324, size: 16)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !325)
!325 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !273, file: !270, line: 107, baseType: !142, size: 32, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !273, file: !270, line: 127, baseType: !104, size: 32, offset: 160)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !273, file: !270, line: 131, baseType: !329, size: 192, offset: 192)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !306, line: 244, size: 192, elements: !330)
!330 = !{!331, !332, !338}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !329, file: !306, line: 245, baseType: !279, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !329, file: !306, line: 246, baseType: !333, size: 32, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !306, line: 242, baseType: !334)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 32)
!335 = !DISubroutineType(types: !336)
!336 = !{null, !337}
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !329, file: !306, line: 249, baseType: !339, size: 64, offset: 128)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !340)
!340 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !269, file: !270, line: 250, baseType: !342, size: 288, offset: 384)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !343, line: 25, size: 288, elements: !344)
!343 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!344 = !{!345, !346, !347, !348, !349, !350, !351, !352, !353}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !342, file: !343, line: 26, baseType: !142, size: 32)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !342, file: !343, line: 27, baseType: !142, size: 32, offset: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !342, file: !343, line: 28, baseType: !142, size: 32, offset: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !342, file: !343, line: 29, baseType: !142, size: 32, offset: 96)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !342, file: !343, line: 30, baseType: !142, size: 32, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !342, file: !343, line: 31, baseType: !142, size: 32, offset: 160)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !342, file: !343, line: 32, baseType: !142, size: 32, offset: 192)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !342, file: !343, line: 33, baseType: !142, size: 32, offset: 224)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !342, file: !343, line: 34, baseType: !142, size: 32, offset: 256)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !269, file: !270, line: 253, baseType: !104, size: 32, offset: 672)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !269, file: !270, line: 256, baseType: !305, size: 64, offset: 704)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !269, file: !270, line: 294, baseType: !103, size: 32, offset: 768)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !269, file: !270, line: 300, baseType: !358, size: 96, offset: 800)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !270, line: 149, size: 96, elements: !359)
!359 = !{!360, !361, !362}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !358, file: !270, line: 153, baseType: !22, size: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !358, file: !270, line: 162, baseType: !259, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !358, file: !270, line: 168, baseType: !259, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !269, file: !270, line: 325, baseType: !364, size: 32, offset: 896)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !366, line: 5073, size: 160, elements: !367)
!366 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!367 = !{!368, !377, !378}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !365, file: !366, line: 5074, baseType: !369, size: 96)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !370, line: 56, size: 96, elements: !371)
!370 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!371 = !{!372, !375, !376}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !369, file: !370, line: 57, baseType: !373, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 32)
!374 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !370, line: 57, flags: DIFlagFwdDecl)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !369, file: !370, line: 58, baseType: !104, size: 32, offset: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !369, file: !370, line: 59, baseType: !259, size: 32, offset: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !365, file: !366, line: 5075, baseType: !305, size: 64, offset: 96)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !365, file: !366, line: 5076, baseType: !379, offset: 160)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !380, line: 43, elements: !381)
!380 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!381 = !{}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !269, file: !270, line: 343, baseType: !383, size: 64, offset: 928)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !343, line: 60, size: 64, elements: !384)
!384 = !{!385, !386}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !383, file: !343, line: 63, baseType: !142, size: 32)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !383, file: !343, line: 66, baseType: !142, size: 32, offset: 32)
!387 = !{!388, !389, !390, !391}
!388 = !DILocalVariable(name: "thread", arg: 1, scope: !264, file: !265, line: 175, type: !268)
!389 = !DILocalVariable(name: "region_num", scope: !264, file: !265, line: 200, type: !131)
!390 = !DILocalVariable(name: "guard_start", scope: !264, file: !265, line: 265, type: !22)
!391 = !DILocalVariable(name: "guard_size", scope: !264, file: !265, line: 266, type: !259)
!392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !393, size: 96, elements: !404)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !394, line: 52, size: 96, elements: !395)
!394 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !{!396, !397, !398}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !393, file: !394, line: 53, baseType: !22, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !393, file: !394, line: 54, baseType: !259, size: 32, offset: 32)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !393, file: !394, line: 55, baseType: !399, size: 32, offset: 64)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !400, line: 151, baseType: !401)
!400 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !400, line: 149, size: 32, elements: !402)
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !401, file: !400, line: 150, baseType: !142, size: 32)
!404 = !{!405}
!405 = !DISubrange(count: 1)
!406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 96, elements: !404)
!407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !393)
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !410, file: !443, line: 39, type: !131, isLocal: true, isDefinition: true)
!410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !411, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !412, globals: !442, splitDebugInlining: false, nameTableKind: None)
!411 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!412 = !{!413, !104, !103, !430, !131}
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !415, line: 1226, baseType: !416)
!415 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 1213, size: 352, elements: !417)
!417 = !{!418, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !416, file: !415, line: 1215, baseType: !419, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !192)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !416, file: !415, line: 1216, baseType: !192, size: 32, offset: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !416, file: !415, line: 1217, baseType: !192, size: 32, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !416, file: !415, line: 1218, baseType: !192, size: 32, offset: 96)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !416, file: !415, line: 1219, baseType: !192, size: 32, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !416, file: !415, line: 1220, baseType: !192, size: 32, offset: 160)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !416, file: !415, line: 1221, baseType: !192, size: 32, offset: 192)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !416, file: !415, line: 1222, baseType: !192, size: 32, offset: 224)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !416, file: !415, line: 1223, baseType: !192, size: 32, offset: 256)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !416, file: !415, line: 1224, baseType: !192, size: 32, offset: 288)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !416, file: !415, line: 1225, baseType: !192, size: 32, offset: 320)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !432)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !433, line: 27, size: 96, elements: !434)
!433 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!434 = !{!435, !436, !437}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !432, file: !433, line: 29, baseType: !142, size: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !432, file: !433, line: 31, baseType: !121, size: 32, offset: 32)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !432, file: !433, line: 37, baseType: !438, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !400, line: 146, baseType: !439)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !400, line: 141, size: 32, elements: !440)
!440 = !{!441}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !439, file: !400, line: 143, baseType: !142, size: 32)
!442 = !{!408}
!443 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !446, file: !453, line: 21, type: !178, isLocal: true, isDefinition: true)
!446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !447, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !448, globals: !452, splitDebugInlining: false, nameTableKind: None)
!447 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!448 = !{!449, !103, !104}
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 32)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !451, line: 22, baseType: !103)
!451 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!452 = !{!444}
!453 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!454 = !DIGlobalVariableExpression(var: !455, expr: !DIExpression())
!455 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !456, file: !461, line: 13, type: !478, isLocal: true, isDefinition: true)
!456 = distinct !DICompileUnit(language: DW_LANG_C99, file: !457, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !458, splitDebugInlining: false, nameTableKind: None)
!457 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!458 = !{!459, !454}
!459 = !DIGlobalVariableExpression(var: !460, expr: !DIExpression())
!460 = distinct !DIGlobalVariable(name: "mpu_config", scope: !456, file: !461, line: 37, type: !462, isLocal: false, isDefinition: true)
!461 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !433, line: 41, size: 64, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !463, file: !433, line: 43, baseType: !142, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !463, file: !433, line: 45, baseType: !467, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !469)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !433, line: 27, size: 96, elements: !470)
!470 = !{!471, !472, !473}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !469, file: !433, line: 29, baseType: !142, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !469, file: !433, line: 31, baseType: !121, size: 32, offset: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !469, file: !433, line: 37, baseType: !474, size: 32, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !400, line: 146, baseType: !475)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !400, line: 141, size: 32, elements: !476)
!476 = !{!477}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !475, file: !400, line: 143, baseType: !142, size: 32)
!478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 192, elements: !301)
!479 = !DIGlobalVariableExpression(var: !480, expr: !DIExpression())
!480 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !481, file: !594, line: 72, type: !678, isLocal: true, isDefinition: true)
!481 = distinct !DICompileUnit(language: DW_LANG_C99, file: !482, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !483, retainedTypes: !580, globals: !591, splitDebugInlining: false, nameTableKind: None)
!482 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!483 = !{!30, !484}
!484 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !188, line: 65, baseType: !103, size: 32, elements: !485)
!485 = !{!486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579}
!486 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!487 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!488 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!489 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!490 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!491 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!492 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!493 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!494 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!495 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!496 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!497 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!498 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!499 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!500 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!501 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!502 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!503 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!504 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!505 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!506 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!507 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!508 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!509 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!510 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!511 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!512 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!513 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!514 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!515 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!516 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!517 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!518 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!519 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!520 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!521 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!522 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!523 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!524 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!525 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!526 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!527 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!528 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!529 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!530 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!531 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!532 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!533 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!534 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!535 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!536 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!537 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!538 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!539 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!540 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!541 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!542 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!543 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!544 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!545 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!546 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!547 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!548 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!549 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!550 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!551 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!552 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!553 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!554 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!555 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!556 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!557 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!558 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!559 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!560 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!561 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!562 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!563 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!564 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!565 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!566 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!567 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!568 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!569 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!570 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!571 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!572 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!573 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!574 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!575 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!576 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!577 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!578 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!579 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!580 = !{!259, !103, !104, !581}
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !188, line: 392, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 384, size: 192, elements: !584)
!584 = !{!585, !586, !587, !588, !589, !590}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !583, file: !188, line: 386, baseType: !192, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !583, file: !188, line: 387, baseType: !192, size: 32, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !583, file: !188, line: 388, baseType: !192, size: 32, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !583, file: !188, line: 389, baseType: !192, size: 32, offset: 96)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !583, file: !188, line: 390, baseType: !192, size: 32, offset: 128)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !583, file: !188, line: 391, baseType: !192, size: 32, offset: 160)
!591 = !{!592, !598, !614, !625, !642, !479, !644, !658, !660, !662, !664, !666, !668, !670, !672, !674, !676}
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !481, file: !594, line: 424, type: !595, isLocal: false, isDefinition: true, align: 16)
!594 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 64, elements: !596)
!596 = !{!597}
!597 = !DISubrange(count: 4)
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !481, file: !594, line: 424, type: !600, isLocal: false, isDefinition: true, align: 32)
!600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !601)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !602)
!602 = !{!603, !604, !605, !606, !612, !613}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !601, file: !118, line: 380, baseType: !121, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !601, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !601, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !601, file: !118, line: 386, baseType: !607, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 32)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !609)
!609 = !{!610, !611}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !608, file: !118, line: 359, baseType: !131, size: 8)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !608, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !601, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !601, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!614 = !DIGlobalVariableExpression(var: !615, expr: !DIExpression())
!615 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !481, file: !594, line: 424, type: !616, isLocal: true, isDefinition: true, align: 32)
!616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !617)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !203, line: 51, size: 64, elements: !618)
!618 = !{!619, !624}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !617, file: !203, line: 60, baseType: !620, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 32)
!621 = !DISubroutineType(types: !622)
!622 = !{!103, !623}
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !617, file: !203, line: 65, baseType: !623, size: 32, offset: 32)
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "exti_data", scope: !481, file: !594, line: 423, type: !627, isLocal: true, isDefinition: true)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !594, line: 107, size: 1472, elements: !628)
!628 = !{!629}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !627, file: !594, line: 109, baseType: !630, size: 1472)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 1472, elements: !640)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !594, line: 101, size: 64, elements: !632)
!632 = !{!633, !639}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !631, file: !594, line: 102, baseType: !634, size: 32)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !635, line: 63, baseType: !636)
!635 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 32)
!637 = !DISubroutineType(types: !638)
!638 = !{null, !103, !104}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !631, file: !594, line: 103, baseType: !104, size: 32, offset: 32)
!640 = !{!641}
!641 = !DISubrange(count: 23)
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !481, file: !594, line: 424, type: !608, isLocal: true, isDefinition: true, align: 8)
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !646, file: !594, line: 493, type: !651, isLocal: true, isDefinition: true, align: 32)
!646 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !594, file: !594, line: 460, type: !647, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !649)
!647 = !DISubroutineType(types: !648)
!648 = !{null, !623}
!649 = !{!650}
!650 = !DILocalVariable(name: "dev", arg: 1, scope: !646, file: !594, line: 460, type: !623)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !652)
!652 = !{!653, !655, !656, !657}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !651, file: !10, line: 55, baseType: !654, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !651, file: !10, line: 57, baseType: !654, size: 32, offset: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !651, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !651, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!658 = !DIGlobalVariableExpression(var: !659, expr: !DIExpression())
!659 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !646, file: !594, line: 497, type: !651, isLocal: true, isDefinition: true, align: 32)
!660 = !DIGlobalVariableExpression(var: !661, expr: !DIExpression())
!661 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !646, file: !594, line: 507, type: !651, isLocal: true, isDefinition: true, align: 32)
!662 = !DIGlobalVariableExpression(var: !663, expr: !DIExpression())
!663 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !646, file: !594, line: 512, type: !651, isLocal: true, isDefinition: true, align: 32)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !646, file: !594, line: 516, type: !651, isLocal: true, isDefinition: true, align: 32)
!666 = !DIGlobalVariableExpression(var: !667, expr: !DIExpression())
!667 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !646, file: !594, line: 523, type: !651, isLocal: true, isDefinition: true, align: 32)
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !646, file: !594, line: 527, type: !651, isLocal: true, isDefinition: true, align: 32)
!670 = !DIGlobalVariableExpression(var: !671, expr: !DIExpression())
!671 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !646, file: !594, line: 581, type: !651, isLocal: true, isDefinition: true, align: 32)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !646, file: !594, line: 586, type: !651, isLocal: true, isDefinition: true, align: 32)
!674 = !DIGlobalVariableExpression(var: !675, expr: !DIExpression())
!675 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !646, file: !594, line: 591, type: !651, isLocal: true, isDefinition: true, align: 32)
!676 = !DIGlobalVariableExpression(var: !677, expr: !DIExpression())
!677 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !646, file: !594, line: 595, type: !651, isLocal: true, isDefinition: true, align: 32)
!678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !679, size: 736, elements: !640)
!679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !680)
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !188, line: 163, baseType: !484)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !683, file: !688, line: 25, type: !716, isLocal: false, isDefinition: true, align: 16)
!683 = distinct !DICompileUnit(language: DW_LANG_C99, file: !684, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !685, splitDebugInlining: false, nameTableKind: None)
!684 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!685 = !{!686, !681, !692, !694, !696, !698, !700, !702, !704, !706, !708, !710, !712, !714}
!686 = !DIGlobalVariableExpression(var: !687, expr: !DIExpression())
!687 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !683, file: !688, line: 20, type: !689, isLocal: false, isDefinition: true, align: 16)
!688 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 240, elements: !690)
!690 = !{!691}
!691 = !DISubrange(count: 15)
!692 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression())
!693 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !683, file: !688, line: 32, type: !595, isLocal: false, isDefinition: true, align: 16)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !683, file: !688, line: 39, type: !595, isLocal: false, isDefinition: true, align: 16)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !683, file: !688, line: 46, type: !595, isLocal: false, isDefinition: true, align: 16)
!698 = !DIGlobalVariableExpression(var: !699, expr: !DIExpression())
!699 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !683, file: !688, line: 53, type: !595, isLocal: false, isDefinition: true, align: 16)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !683, file: !688, line: 60, type: !595, isLocal: false, isDefinition: true, align: 16)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !683, file: !688, line: 67, type: !595, isLocal: false, isDefinition: true, align: 16)
!704 = !DIGlobalVariableExpression(var: !705, expr: !DIExpression())
!705 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !683, file: !688, line: 74, type: !595, isLocal: false, isDefinition: true, align: 16)
!706 = !DIGlobalVariableExpression(var: !707, expr: !DIExpression())
!707 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !683, file: !688, line: 81, type: !595, isLocal: false, isDefinition: true, align: 16)
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !683, file: !688, line: 88, type: !595, isLocal: false, isDefinition: true, align: 16)
!710 = !DIGlobalVariableExpression(var: !711, expr: !DIExpression())
!711 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !683, file: !688, line: 95, type: !595, isLocal: false, isDefinition: true, align: 16)
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !683, file: !688, line: 102, type: !595, isLocal: false, isDefinition: true, align: 16)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !683, file: !688, line: 109, type: !595, isLocal: false, isDefinition: true, align: 16)
!716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 48, elements: !717)
!717 = !{!718}
!718 = !DISubrange(count: 3)
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !721, file: !786, line: 398, type: !819, isLocal: true, isDefinition: true)
!721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !723, retainedTypes: !736, globals: !783, splitDebugInlining: false, nameTableKind: None)
!722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!723 = !{!724, !30, !729}
!724 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !725, line: 197, baseType: !32, size: 32, elements: !726)
!725 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!726 = !{!727, !728}
!727 = !DIEnumerator(name: "SUCCESS", value: 0)
!728 = !DIEnumerator(name: "ERROR", value: 1)
!729 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !730, line: 44, baseType: !32, size: 32, elements: !731)
!730 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!731 = !{!732, !733, !734, !735}
!732 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!733 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!734 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!735 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!736 = !{!104, !103, !142, !737, !776, !782}
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !188, line: 586, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 550, size: 1216, elements: !740)
!740 = !{!741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !739, file: !188, line: 552, baseType: !192, size: 32)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !739, file: !188, line: 553, baseType: !192, size: 32, offset: 32)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !739, file: !188, line: 554, baseType: !192, size: 32, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !739, file: !188, line: 555, baseType: !192, size: 32, offset: 96)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !739, file: !188, line: 556, baseType: !192, size: 32, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !739, file: !188, line: 557, baseType: !192, size: 32, offset: 160)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !739, file: !188, line: 558, baseType: !192, size: 32, offset: 192)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !739, file: !188, line: 559, baseType: !142, size: 32, offset: 224)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !739, file: !188, line: 560, baseType: !192, size: 32, offset: 256)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !739, file: !188, line: 561, baseType: !192, size: 32, offset: 288)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !739, file: !188, line: 562, baseType: !752, size: 64, offset: 320)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 64, elements: !301)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !739, file: !188, line: 563, baseType: !192, size: 32, offset: 384)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !739, file: !188, line: 564, baseType: !192, size: 32, offset: 416)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !739, file: !188, line: 565, baseType: !192, size: 32, offset: 448)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !739, file: !188, line: 566, baseType: !142, size: 32, offset: 480)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !739, file: !188, line: 567, baseType: !192, size: 32, offset: 512)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !739, file: !188, line: 568, baseType: !192, size: 32, offset: 544)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !739, file: !188, line: 569, baseType: !752, size: 64, offset: 576)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !739, file: !188, line: 570, baseType: !192, size: 32, offset: 640)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !739, file: !188, line: 571, baseType: !192, size: 32, offset: 672)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !739, file: !188, line: 572, baseType: !192, size: 32, offset: 704)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !739, file: !188, line: 573, baseType: !142, size: 32, offset: 736)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !739, file: !188, line: 574, baseType: !192, size: 32, offset: 768)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !739, file: !188, line: 575, baseType: !192, size: 32, offset: 800)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !739, file: !188, line: 576, baseType: !752, size: 64, offset: 832)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !739, file: !188, line: 577, baseType: !192, size: 32, offset: 896)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !739, file: !188, line: 578, baseType: !192, size: 32, offset: 928)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !739, file: !188, line: 579, baseType: !752, size: 64, offset: 960)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !739, file: !188, line: 580, baseType: !192, size: 32, offset: 1024)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !739, file: !188, line: 581, baseType: !192, size: 32, offset: 1056)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !739, file: !188, line: 582, baseType: !192, size: 32, offset: 1088)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !739, file: !188, line: 583, baseType: !192, size: 32, offset: 1120)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !739, file: !188, line: 584, baseType: !192, size: 32, offset: 1152)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !739, file: !188, line: 585, baseType: !192, size: 32, offset: 1184)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 32)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !778, line: 343, size: 64, elements: !779)
!778 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!779 = !{!780, !781}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !777, file: !778, line: 344, baseType: !142, size: 32)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !777, file: !778, line: 345, baseType: !142, size: 32, offset: 32)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!783 = !{!784, !790, !806, !817, !719}
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !721, file: !786, line: 752, type: !787, isLocal: false, isDefinition: true, align: 16)
!786 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 800, elements: !788)
!788 = !{!789}
!789 = !DISubrange(count: 50)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !721, file: !786, line: 752, type: !792, isLocal: false, isDefinition: true, align: 32)
!792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !793)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !794)
!794 = !{!795, !796, !797, !798, !804, !805}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !793, file: !118, line: 380, baseType: !121, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !793, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !793, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !793, file: !118, line: 386, baseType: !799, size: 32, offset: 96)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !801)
!801 = !{!802, !803}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !800, file: !118, line: 359, baseType: !131, size: 8)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !800, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !793, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !793, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !721, file: !786, line: 752, type: !808, isLocal: true, isDefinition: true, align: 32)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !203, line: 51, size: 64, elements: !810)
!810 = !{!811, !816}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !809, file: !203, line: 60, baseType: !812, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 32)
!813 = !DISubroutineType(types: !814)
!814 = !{!103, !815}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !809, file: !203, line: 65, baseType: !815, size: 32, offset: 32)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !721, file: !786, line: 752, type: !800, isLocal: true, isDefinition: true, align: 8)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !730, line: 100, size: 224, elements: !820)
!820 = !{!821, !827, !828, !837, !842, !847, !853}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !819, file: !730, line: 101, baseType: !822, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !730, line: 76, baseType: !823)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!824 = !DISubroutineType(types: !825)
!825 = !{!103, !815, !826}
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !730, line: 56, baseType: !104)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !819, file: !730, line: 102, baseType: !822, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !819, file: !730, line: 103, baseType: !829, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !730, line: 83, baseType: !830)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 32)
!831 = !DISubroutineType(types: !832)
!832 = !{!103, !815, !826, !833, !104}
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !730, line: 72, baseType: !834)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 32)
!835 = !DISubroutineType(types: !836)
!836 = !{null, !815, !826, !104}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !819, file: !730, line: 104, baseType: !838, size: 32, offset: 96)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !730, line: 79, baseType: !839)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = !DISubroutineType(types: !841)
!841 = !{!103, !815, !826, !782}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !819, file: !730, line: 105, baseType: !843, size: 32, offset: 128)
!843 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !730, line: 88, baseType: !844)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 32)
!845 = !DISubroutineType(types: !846)
!846 = !{!729, !815, !826}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !819, file: !730, line: 106, baseType: !848, size: 32, offset: 160)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !730, line: 92, baseType: !849)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!850 = !DISubroutineType(types: !851)
!851 = !{!103, !815, !826, !852}
!852 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !730, line: 64, baseType: !104)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !819, file: !730, line: 107, baseType: !854, size: 32, offset: 192)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !730, line: 96, baseType: !855)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!856 = !DISubroutineType(types: !857)
!857 = !{!103, !815, !826, !104}
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !860, file: !917, line: 603, type: !919, isLocal: true, isDefinition: true, align: 32)
!860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !861, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !862, globals: !914, splitDebugInlining: false, nameTableKind: None)
!861 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!862 = !{!104, !103, !863}
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !865)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !866, line: 336, size: 160, elements: !867)
!866 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!867 = !{!868, !888, !892, !896, !909}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !865, file: !866, line: 365, baseType: !869, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = !DISubroutineType(types: !871)
!871 = !{!103, !872, !887}
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !875)
!875 = !{!876, !877, !878, !879, !885, !886}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !874, file: !118, line: 380, baseType: !121, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !874, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !874, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !874, file: !118, line: 386, baseType: !880, size: 32, offset: 96)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !882)
!882 = !{!883, !884}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !881, file: !118, line: 359, baseType: !131, size: 8)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !881, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !874, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !874, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !865, file: !866, line: 366, baseType: !889, size: 32, offset: 32)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 32)
!890 = !DISubroutineType(types: !891)
!891 = !{null, !872, !132}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !865, file: !866, line: 374, baseType: !893, size: 32, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!894 = !DISubroutineType(types: !895)
!895 = !{!103, !872}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !865, file: !866, line: 377, baseType: !897, size: 32, offset: 96)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!898 = !DISubroutineType(types: !899)
!899 = !{!103, !872, !900}
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !866, line: 122, size: 64, elements: !903)
!903 = !{!904, !905, !906, !907, !908}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !902, file: !866, line: 123, baseType: !142, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !902, file: !866, line: 124, baseType: !131, size: 8, offset: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !902, file: !866, line: 125, baseType: !131, size: 8, offset: 40)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !902, file: !866, line: 126, baseType: !131, size: 8, offset: 48)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !902, file: !866, line: 127, baseType: !131, size: 8, offset: 56)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !865, file: !866, line: 379, baseType: !910, size: 32, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!911 = !DISubroutineType(types: !912)
!912 = !{!103, !872, !913}
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!914 = !{!858, !915}
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !860, file: !917, line: 38, type: !918, isLocal: true, isDefinition: true)
!917 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !872)
!919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !203, line: 51, size: 64, elements: !921)
!921 = !{!922, !923}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !920, file: !203, line: 60, baseType: !893, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !920, file: !203, line: 65, baseType: !872, size: 32, offset: 32)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !926, file: !1098, line: 762, type: !1207, isLocal: true, isDefinition: true)
!926 = distinct !DICompileUnit(language: DW_LANG_C99, file: !927, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !928, retainedTypes: !946, globals: !1095, splitDebugInlining: false, nameTableKind: None)
!927 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!928 = !{!30, !929, !935, !940, !729}
!929 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !930, line: 506, baseType: !32, size: 32, elements: !931)
!930 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!931 = !{!932, !933, !934}
!932 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!933 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!934 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!935 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !930, line: 512, baseType: !32, size: 32, elements: !936)
!936 = !{!937, !938, !939}
!937 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!938 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!939 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!940 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !635, line: 43, baseType: !32, size: 32, elements: !941)
!941 = !{!942, !943, !944, !945}
!942 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!943 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!944 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!945 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!946 = !{!104, !103, !947, !1017, !1022, !982, !935, !929, !1027, !1028, !142, !1042, !997, !1054, !1055, !1056}
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !930, line: 523, size: 288, elements: !950)
!950 = !{!951, !972, !978, !983, !987, !988, !989, !993, !1013}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !949, file: !930, line: 524, baseType: !952, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DISubroutineType(types: !954)
!954 = !{!103, !955, !970, !971}
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !958)
!958 = !{!959, !960, !961, !962, !968, !969}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !957, file: !118, line: 380, baseType: !121, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !957, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !957, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !957, file: !118, line: 386, baseType: !963, size: 32, offset: 96)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !965)
!965 = !{!966, !967}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !964, file: !118, line: 359, baseType: !131, size: 8)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !964, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !957, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !957, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !930, line: 237, baseType: !131)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !930, line: 257, baseType: !142)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !949, file: !930, line: 530, baseType: !973, size: 32, offset: 32)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!103, !955, !976}
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !930, line: 229, baseType: !142)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !949, file: !930, line: 532, baseType: !979, size: 32, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 32)
!980 = !DISubroutineType(types: !981)
!981 = !{!103, !955, !982, !977}
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !930, line: 216, baseType: !142)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !949, file: !930, line: 535, baseType: !984, size: 32, offset: 96)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = !DISubroutineType(types: !986)
!986 = !{!103, !955, !982}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !949, file: !930, line: 537, baseType: !984, size: 32, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !949, file: !930, line: 539, baseType: !984, size: 32, offset: 160)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !949, file: !930, line: 541, baseType: !990, size: 32, offset: 192)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{!103, !955, !970, !929, !935}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !949, file: !930, line: 544, baseType: !994, size: 32, offset: 224)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!995 = !DISubroutineType(types: !996)
!996 = !{!103, !955, !997, !134}
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !930, line: 478, size: 96, elements: !999)
!999 = !{!1000, !1007, !1012}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !998, file: !930, line: 482, baseType: !1001, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1002, line: 33, baseType: !1003)
!1002 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1002, line: 29, size: 32, elements: !1004)
!1004 = !{!1005}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1003, file: !1002, line: 30, baseType: !1006, size: 32)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !998, file: !930, line: 485, baseType: !1008, size: 32, offset: 32)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !930, line: 464, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{null, !955, !997, !982}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !998, file: !930, line: 493, baseType: !982, size: 32, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !949, file: !930, line: 547, baseType: !1014, size: 32, offset: 256)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!142, !955}
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1019)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !930, line: 428, size: 32, elements: !1020)
!1020 = !{!1021}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1019, file: !930, line: 434, baseType: !982, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !930, line: 441, size: 32, elements: !1025)
!1025 = !{!1026}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1024, file: !930, line: 447, baseType: !982, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !188, line: 469, baseType: !1030)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 458, size: 320, elements: !1031)
!1031 = !{!1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1030, file: !188, line: 460, baseType: !192, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1030, file: !188, line: 461, baseType: !192, size: 32, offset: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1030, file: !188, line: 462, baseType: !192, size: 32, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1030, file: !188, line: 463, baseType: !192, size: 32, offset: 96)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1030, file: !188, line: 464, baseType: !192, size: 32, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1030, file: !188, line: 465, baseType: !192, size: 32, offset: 160)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1030, file: !188, line: 466, baseType: !192, size: 32, offset: 192)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1030, file: !188, line: 467, baseType: !192, size: 32, offset: 224)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1030, file: !188, line: 468, baseType: !1041, size: 64, offset: 256)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 64, elements: !301)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !188, line: 484, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 475, size: 384, elements: !1045)
!1045 = !{!1046, !1047, !1048, !1050, !1051, !1052, !1053}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1044, file: !188, line: 477, baseType: !192, size: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1044, file: !188, line: 478, baseType: !192, size: 32, offset: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1044, file: !188, line: 479, baseType: !1049, size: 128, offset: 64)
!1049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 128, elements: !596)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1044, file: !188, line: 480, baseType: !752, size: 64, offset: 192)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1044, file: !188, line: 481, baseType: !192, size: 32, offset: 256)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1044, file: !188, line: 482, baseType: !752, size: 64, offset: 288)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1044, file: !188, line: 483, baseType: !192, size: 32, offset: 352)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !730, line: 100, size: 224, elements: !1059)
!1059 = !{!1060, !1065, !1066, !1075, !1080, !1085, !1090}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1058, file: !730, line: 101, baseType: !1061, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !730, line: 76, baseType: !1062)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!103, !955, !826}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1058, file: !730, line: 102, baseType: !1061, size: 32, offset: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1058, file: !730, line: 103, baseType: !1067, size: 32, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !730, line: 83, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!103, !955, !826, !1071, !104}
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !730, line: 72, baseType: !1072)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{null, !955, !826, !104}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1058, file: !730, line: 104, baseType: !1076, size: 32, offset: 96)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !730, line: 79, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!103, !955, !826, !782}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1058, file: !730, line: 105, baseType: !1081, size: 32, offset: 128)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !730, line: 88, baseType: !1082)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!729, !955, !826}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1058, file: !730, line: 106, baseType: !1086, size: 32, offset: 160)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !730, line: 92, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!103, !955, !826, !852}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1058, file: !730, line: 107, baseType: !1091, size: 32, offset: 192)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !730, line: 96, baseType: !1092)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!103, !955, !826, !104}
!1095 = !{!1096, !1102, !1104, !1114, !1116, !1118, !1120, !1122, !1124, !1126, !1131, !1133, !1135, !1137, !1139, !1141, !1143, !1145, !1147, !1149, !1151, !1153, !1155, !1157, !1159, !1173, !1175, !1177, !1179, !1181, !1183, !1185, !1187, !1189, !1191, !1193, !1195, !1197, !1199, !1201, !924, !1203, !1205, !1218, !1220, !1222, !1224, !1226, !1228}
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !926, file: !1098, line: 762, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1098 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 80, elements: !1100)
!1100 = !{!1101}
!1101 = !DISubrange(count: 5)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !926, file: !1098, line: 762, type: !956, isLocal: false, isDefinition: true, align: 32)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !926, file: !1098, line: 762, type: !1106, isLocal: true, isDefinition: true, align: 32)
!1106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !203, line: 51, size: 64, elements: !1108)
!1108 = !{!1109, !1113}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1107, file: !203, line: 60, baseType: !1110, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!103, !955}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1107, file: !203, line: 65, baseType: !955, size: 32, offset: 32)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !926, file: !1098, line: 766, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !926, file: !1098, line: 766, type: !956, isLocal: false, isDefinition: true, align: 32)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !926, file: !1098, line: 766, type: !1106, isLocal: true, isDefinition: true, align: 32)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !926, file: !1098, line: 770, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !926, file: !1098, line: 770, type: !956, isLocal: false, isDefinition: true, align: 32)
!1124 = !DIGlobalVariableExpression(var: !1125, expr: !DIExpression())
!1125 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !926, file: !1098, line: 770, type: !1106, isLocal: true, isDefinition: true, align: 32)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !926, file: !1098, line: 774, type: !1128, isLocal: false, isDefinition: true, align: 16)
!1128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 144, elements: !1129)
!1129 = !{!1130}
!1130 = !DISubrange(count: 9)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !926, file: !1098, line: 774, type: !956, isLocal: false, isDefinition: true, align: 32)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !926, file: !1098, line: 774, type: !1106, isLocal: true, isDefinition: true, align: 32)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !926, file: !1098, line: 778, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !926, file: !1098, line: 778, type: !956, isLocal: false, isDefinition: true, align: 32)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !926, file: !1098, line: 778, type: !1106, isLocal: true, isDefinition: true, align: 32)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !926, file: !1098, line: 782, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !926, file: !1098, line: 782, type: !956, isLocal: false, isDefinition: true, align: 32)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !926, file: !1098, line: 782, type: !1106, isLocal: true, isDefinition: true, align: 32)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !926, file: !1098, line: 786, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !926, file: !1098, line: 786, type: !956, isLocal: false, isDefinition: true, align: 32)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !926, file: !1098, line: 786, type: !1106, isLocal: true, isDefinition: true, align: 32)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !926, file: !1098, line: 790, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !926, file: !1098, line: 790, type: !956, isLocal: false, isDefinition: true, align: 32)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !926, file: !1098, line: 790, type: !1106, isLocal: true, isDefinition: true, align: 32)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !926, file: !1098, line: 762, type: !1161, isLocal: true, isDefinition: true)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1162, line: 237, size: 128, elements: !1163)
!1162 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1163 = !{!1164, !1165, !1166}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1161, file: !1162, line: 239, baseType: !1024, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1161, file: !1162, line: 241, baseType: !955, size: 32, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1161, file: !1162, line: 243, baseType: !1167, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1002, line: 40, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1002, line: 35, size: 64, elements: !1169)
!1169 = !{!1170, !1172}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1168, file: !1002, line: 36, baseType: !1171, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1168, file: !1002, line: 37, baseType: !1171, size: 32, offset: 32)
!1173 = !DIGlobalVariableExpression(var: !1174, expr: !DIExpression())
!1174 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !926, file: !1098, line: 762, type: !964, isLocal: true, isDefinition: true, align: 8)
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !926, file: !1098, line: 766, type: !1161, isLocal: true, isDefinition: true)
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !926, file: !1098, line: 766, type: !964, isLocal: true, isDefinition: true, align: 8)
!1179 = !DIGlobalVariableExpression(var: !1180, expr: !DIExpression())
!1180 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !926, file: !1098, line: 770, type: !1161, isLocal: true, isDefinition: true)
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !926, file: !1098, line: 770, type: !964, isLocal: true, isDefinition: true, align: 8)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !926, file: !1098, line: 774, type: !1161, isLocal: true, isDefinition: true)
!1185 = !DIGlobalVariableExpression(var: !1186, expr: !DIExpression())
!1186 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !926, file: !1098, line: 774, type: !964, isLocal: true, isDefinition: true, align: 8)
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !926, file: !1098, line: 778, type: !1161, isLocal: true, isDefinition: true)
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !926, file: !1098, line: 778, type: !964, isLocal: true, isDefinition: true, align: 8)
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !926, file: !1098, line: 782, type: !1161, isLocal: true, isDefinition: true)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !926, file: !1098, line: 782, type: !964, isLocal: true, isDefinition: true, align: 8)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !926, file: !1098, line: 786, type: !1161, isLocal: true, isDefinition: true)
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !926, file: !1098, line: 786, type: !964, isLocal: true, isDefinition: true, align: 8)
!1199 = !DIGlobalVariableExpression(var: !1200, expr: !DIExpression())
!1200 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !926, file: !1098, line: 790, type: !1161, isLocal: true, isDefinition: true)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !926, file: !1098, line: 790, type: !964, isLocal: true, isDefinition: true, align: 8)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !926, file: !1098, line: 656, type: !948, isLocal: true, isDefinition: true)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !926, file: !1098, line: 766, type: !1207, isLocal: true, isDefinition: true)
!1207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1162, line: 224, size: 160, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1208, file: !1162, line: 226, baseType: !1019, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1208, file: !1162, line: 228, baseType: !782, size: 32, offset: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1208, file: !1162, line: 230, baseType: !103, size: 32, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1208, file: !1162, line: 231, baseType: !1214, size: 64, offset: 96)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !778, line: 343, size: 64, elements: !1215)
!1215 = !{!1216, !1217}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1214, file: !778, line: 344, baseType: !142, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1214, file: !778, line: 345, baseType: !142, size: 32, offset: 32)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !926, file: !1098, line: 770, type: !1207, isLocal: true, isDefinition: true)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !926, file: !1098, line: 774, type: !1207, isLocal: true, isDefinition: true)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !926, file: !1098, line: 778, type: !1207, isLocal: true, isDefinition: true)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !926, file: !1098, line: 782, type: !1207, isLocal: true, isDefinition: true)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !926, file: !1098, line: 786, type: !1207, isLocal: true, isDefinition: true)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !926, file: !1098, line: 790, type: !1207, isLocal: true, isDefinition: true)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1232, file: !1373, line: 1914, type: !1460, isLocal: true, isDefinition: true)
!1232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1233, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1234, retainedTypes: !1267, globals: !1370, splitDebugInlining: false, nameTableKind: None)
!1233 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!1234 = !{!30, !1235, !1242, !1249, !1256, !1262, !729}
!1235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !866, line: 47, baseType: !32, size: 32, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241}
!1237 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1238 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1239 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1240 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1241 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !866, line: 75, baseType: !32, size: 32, elements: !1243)
!1243 = !{!1244, !1245, !1246, !1247, !1248}
!1244 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1245 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1246 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1247 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1248 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1249 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !866, line: 92, baseType: !32, size: 32, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255}
!1251 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1252 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1253 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1254 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1255 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1256 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !866, line: 84, baseType: !32, size: 32, elements: !1257)
!1257 = !{!1258, !1259, !1260, !1261}
!1258 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1259 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1260 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1261 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1262 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !866, line: 107, baseType: !32, size: 32, elements: !1263)
!1263 = !{!1264, !1265, !1266}
!1264 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1265 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1266 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1267 = !{!104, !103, !1268, !132, !131, !1317, !142, !826, !1328, !324, !1367, !1369}
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !866, line: 336, size: 160, elements: !1271)
!1271 = !{!1272, !1291, !1295, !1299, !1312}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1270, file: !866, line: 365, baseType: !1273, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!103, !1276, !887}
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !1279)
!1279 = !{!1280, !1281, !1282, !1283, !1289, !1290}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1278, file: !118, line: 380, baseType: !121, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1278, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1278, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1278, file: !118, line: 386, baseType: !1284, size: 32, offset: 96)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !1286)
!1286 = !{!1287, !1288}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1285, file: !118, line: 359, baseType: !131, size: 8)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1285, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1278, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1278, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1270, file: !866, line: 366, baseType: !1292, size: 32, offset: 32)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{null, !1276, !132}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1270, file: !866, line: 374, baseType: !1296, size: 32, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!103, !1276}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1270, file: !866, line: 377, baseType: !1300, size: 32, offset: 96)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!103, !1276, !1303}
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !866, line: 122, size: 64, elements: !1306)
!1306 = !{!1307, !1308, !1309, !1310, !1311}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1305, file: !866, line: 123, baseType: !142, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1305, file: !866, line: 124, baseType: !131, size: 8, offset: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1305, file: !866, line: 125, baseType: !131, size: 8, offset: 40)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1305, file: !866, line: 126, baseType: !131, size: 8, offset: 48)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1305, file: !866, line: 127, baseType: !131, size: 8, offset: 56)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1270, file: !866, line: 379, baseType: !1313, size: 32, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!103, !1276, !1316}
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !188, line: 783, baseType: !1319)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 774, size: 224, elements: !1320)
!1320 = !{!1321, !1322, !1323, !1324, !1325, !1326, !1327}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1319, file: !188, line: 776, baseType: !192, size: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1319, file: !188, line: 777, baseType: !192, size: 32, offset: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1319, file: !188, line: 778, baseType: !192, size: 32, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1319, file: !188, line: 779, baseType: !192, size: 32, offset: 96)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1319, file: !188, line: 780, baseType: !192, size: 32, offset: 128)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1319, file: !188, line: 781, baseType: !192, size: 32, offset: 160)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1319, file: !188, line: 782, baseType: !192, size: 32, offset: 192)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !730, line: 100, size: 224, elements: !1331)
!1331 = !{!1332, !1337, !1338, !1347, !1352, !1357, !1362}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1330, file: !730, line: 101, baseType: !1333, size: 32)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !730, line: 76, baseType: !1334)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!103, !1276, !826}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1330, file: !730, line: 102, baseType: !1333, size: 32, offset: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1330, file: !730, line: 103, baseType: !1339, size: 32, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !730, line: 83, baseType: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 32)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!103, !1276, !826, !1343, !104}
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !730, line: 72, baseType: !1344)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 32)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{null, !1276, !826, !104}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1330, file: !730, line: 104, baseType: !1348, size: 32, offset: 96)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !730, line: 79, baseType: !1349)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 32)
!1350 = !DISubroutineType(types: !1351)
!1351 = !{!103, !1276, !826, !782}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1330, file: !730, line: 105, baseType: !1353, size: 32, offset: 128)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !730, line: 88, baseType: !1354)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!729, !1276, !826}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1330, file: !730, line: 106, baseType: !1358, size: 32, offset: 160)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !730, line: 92, baseType: !1359)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 32)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!103, !1276, !826, !852}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1330, file: !730, line: 107, baseType: !1363, size: 32, offset: 192)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !730, line: 96, baseType: !1364)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 32)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!103, !1276, !826, !104}
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1368)
!1368 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!1370 = !{!1371, !1377, !1379, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1230, !1412, !1420, !1443, !1446, !1449, !1451, !1458, !1475, !1477, !1479, !1481, !1483, !1485, !1487, !1489, !1491, !1493, !1495, !1497, !1499, !1501, !1503, !1505, !1507}
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1232, file: !1373, line: 1914, type: !1374, isLocal: false, isDefinition: true, align: 16)
!1373 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 128, elements: !1375)
!1375 = !{!1376}
!1376 = !DISubrange(count: 8)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1232, file: !1373, line: 1914, type: !1277, isLocal: false, isDefinition: true, align: 32)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1232, file: !1373, line: 1914, type: !1381, isLocal: true, isDefinition: true, align: 32)
!1381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !203, line: 51, size: 64, elements: !1383)
!1383 = !{!1384, !1385}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1382, file: !203, line: 60, baseType: !1296, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1382, file: !203, line: 65, baseType: !1276, size: 32, offset: 32)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1232, file: !1373, line: 1914, type: !1374, isLocal: false, isDefinition: true, align: 16)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1232, file: !1373, line: 1914, type: !1277, isLocal: false, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1232, file: !1373, line: 1914, type: !1381, isLocal: true, isDefinition: true, align: 32)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1232, file: !1373, line: 1914, type: !1374, isLocal: false, isDefinition: true, align: 16)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1232, file: !1373, line: 1914, type: !1277, isLocal: false, isDefinition: true, align: 32)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1232, file: !1373, line: 1914, type: !1381, isLocal: true, isDefinition: true, align: 32)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1232, file: !1373, line: 1914, type: !1374, isLocal: false, isDefinition: true, align: 16)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1232, file: !1373, line: 1914, type: !1277, isLocal: false, isDefinition: true, align: 32)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1232, file: !1373, line: 1914, type: !1381, isLocal: true, isDefinition: true, align: 32)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1232, file: !1373, line: 1914, type: !1285, isLocal: true, isDefinition: true, align: 8)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1232, file: !1373, line: 1914, type: !1285, isLocal: true, isDefinition: true, align: 8)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1232, file: !1373, line: 1914, type: !1285, isLocal: true, isDefinition: true, align: 8)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1232, file: !1373, line: 1914, type: !1285, isLocal: true, isDefinition: true, align: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1232, file: !1373, line: 1914, type: !1414, isLocal: true, isDefinition: true)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1415, size: 64, elements: !404)
!1415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !778, line: 343, size: 64, elements: !1417)
!1417 = !{!1418, !1419}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1416, file: !778, line: 344, baseType: !142, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1416, file: !778, line: 345, baseType: !142, size: 32, offset: 32)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1232, file: !1373, line: 1914, type: !1422, isLocal: true, isDefinition: true)
!1422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1423)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1424, line: 60, size: 64, elements: !1425)
!1424 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1425 = !{!1426, !1442}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1423, file: !1424, line: 69, baseType: !1427, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1429)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1424, line: 50, size: 64, elements: !1430)
!1430 = !{!1431, !1440, !1441}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1429, file: !1424, line: 52, baseType: !1432, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1435, line: 37, baseType: !1436)
!1435 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1435, line: 32, size: 64, elements: !1437)
!1437 = !{!1438, !1439}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1436, file: !1435, line: 34, baseType: !142, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1436, file: !1435, line: 36, baseType: !142, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1429, file: !1424, line: 54, baseType: !131, size: 8, offset: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1429, file: !1424, line: 56, baseType: !131, size: 8, offset: 40)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1423, file: !1424, line: 71, baseType: !131, size: 8, offset: 32)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1232, file: !1373, line: 1914, type: !1445, isLocal: true, isDefinition: true)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1428, size: 64, elements: !404)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1232, file: !1373, line: 1914, type: !1448, isLocal: true, isDefinition: true)
!1448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 128, elements: !301)
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1232, file: !1373, line: 1539, type: !1269, isLocal: true, isDefinition: true)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1232, file: !1373, line: 1914, type: !1453, isLocal: true, isDefinition: true)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1454, line: 74, size: 64, elements: !1455)
!1454 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1455 = !{!1456, !1457}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1453, file: !1454, line: 76, baseType: !142, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1453, file: !1454, line: 78, baseType: !1276, size: 32, offset: 32)
!1458 = !DIGlobalVariableExpression(var: !1459, expr: !DIExpression())
!1459 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1232, file: !1373, line: 1914, type: !1460, isLocal: true, isDefinition: true)
!1460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1461)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1454, line: 22, size: 224, elements: !1462)
!1462 = !{!1463, !1464, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1461, file: !1454, line: 24, baseType: !1317, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1461, file: !1454, line: 26, baseType: !1465, size: 32, offset: 32)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1461, file: !1454, line: 28, baseType: !259, size: 32, offset: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1461, file: !1454, line: 30, baseType: !134, size: 8, offset: 96)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1461, file: !1454, line: 32, baseType: !103, size: 32, offset: 128)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1461, file: !1454, line: 34, baseType: !134, size: 8, offset: 160)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1461, file: !1454, line: 36, baseType: !134, size: 8, offset: 168)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1461, file: !1454, line: 38, baseType: !134, size: 8, offset: 176)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1461, file: !1454, line: 40, baseType: !134, size: 8, offset: 184)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1461, file: !1454, line: 41, baseType: !1474, size: 32, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1232, file: !1373, line: 1914, type: !1414, isLocal: true, isDefinition: true)
!1477 = !DIGlobalVariableExpression(var: !1478, expr: !DIExpression())
!1478 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1232, file: !1373, line: 1914, type: !1422, isLocal: true, isDefinition: true)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1232, file: !1373, line: 1914, type: !1445, isLocal: true, isDefinition: true)
!1481 = !DIGlobalVariableExpression(var: !1482, expr: !DIExpression())
!1482 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1232, file: !1373, line: 1914, type: !1448, isLocal: true, isDefinition: true)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1232, file: !1373, line: 1914, type: !1453, isLocal: true, isDefinition: true)
!1485 = !DIGlobalVariableExpression(var: !1486, expr: !DIExpression())
!1486 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1232, file: !1373, line: 1914, type: !1460, isLocal: true, isDefinition: true)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1232, file: !1373, line: 1914, type: !1414, isLocal: true, isDefinition: true)
!1489 = !DIGlobalVariableExpression(var: !1490, expr: !DIExpression())
!1490 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1232, file: !1373, line: 1914, type: !1422, isLocal: true, isDefinition: true)
!1491 = !DIGlobalVariableExpression(var: !1492, expr: !DIExpression())
!1492 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1232, file: !1373, line: 1914, type: !1445, isLocal: true, isDefinition: true)
!1493 = !DIGlobalVariableExpression(var: !1494, expr: !DIExpression())
!1494 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1232, file: !1373, line: 1914, type: !1448, isLocal: true, isDefinition: true)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1232, file: !1373, line: 1914, type: !1453, isLocal: true, isDefinition: true)
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1232, file: !1373, line: 1914, type: !1460, isLocal: true, isDefinition: true)
!1499 = !DIGlobalVariableExpression(var: !1500, expr: !DIExpression())
!1500 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1232, file: !1373, line: 1914, type: !1414, isLocal: true, isDefinition: true)
!1501 = !DIGlobalVariableExpression(var: !1502, expr: !DIExpression())
!1502 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1232, file: !1373, line: 1914, type: !1422, isLocal: true, isDefinition: true)
!1503 = !DIGlobalVariableExpression(var: !1504, expr: !DIExpression())
!1504 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1232, file: !1373, line: 1914, type: !1445, isLocal: true, isDefinition: true)
!1505 = !DIGlobalVariableExpression(var: !1506, expr: !DIExpression())
!1506 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1232, file: !1373, line: 1914, type: !1448, isLocal: true, isDefinition: true)
!1507 = !DIGlobalVariableExpression(var: !1508, expr: !DIExpression())
!1508 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1232, file: !1373, line: 1914, type: !1453, isLocal: true, isDefinition: true)
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1511, file: !1591, line: 65, type: !192, isLocal: true, isDefinition: true)
!1511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1512, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1513, retainedTypes: !1514, globals: !1588, splitDebugInlining: false, nameTableKind: None)
!1512 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!1513 = !{!484}
!1514 = !{!1515, !1517, !654, !131, !142, !1525, !1556}
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1516, line: 46, baseType: !339)
!1516 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !415, line: 770, baseType: !1519)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 764, size: 128, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1519, file: !415, line: 766, baseType: !192, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1519, file: !415, line: 767, baseType: !192, size: 32, offset: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1519, file: !415, line: 768, baseType: !192, size: 32, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1519, file: !415, line: 769, baseType: !419, size: 32, offset: 96)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !415, line: 426, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 411, size: 28704, elements: !1528)
!1528 = !{!1529, !1531, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1546, !1551, !1555}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1527, file: !415, line: 413, baseType: !1530, size: 256)
!1530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 256, elements: !1375)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1527, file: !415, line: 414, baseType: !1532, size: 768, offset: 256)
!1532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 768, elements: !1533)
!1533 = !{!1534}
!1534 = !DISubrange(count: 24)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1527, file: !415, line: 415, baseType: !1530, size: 256, offset: 1024)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1527, file: !415, line: 416, baseType: !1532, size: 768, offset: 1280)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1527, file: !415, line: 417, baseType: !1530, size: 256, offset: 2048)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1527, file: !415, line: 418, baseType: !1532, size: 768, offset: 2304)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1527, file: !415, line: 419, baseType: !1530, size: 256, offset: 3072)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1527, file: !415, line: 420, baseType: !1532, size: 768, offset: 3328)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1527, file: !415, line: 421, baseType: !1530, size: 256, offset: 4096)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1527, file: !415, line: 422, baseType: !1543, size: 1792, offset: 4352)
!1543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 1792, elements: !1544)
!1544 = !{!1545}
!1545 = !DISubrange(count: 56)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1527, file: !415, line: 423, baseType: !1547, size: 1920, offset: 6144)
!1547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1548, size: 1920, elements: !1549)
!1548 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !131)
!1549 = !{!1550}
!1550 = !DISubrange(count: 240)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1527, file: !415, line: 424, baseType: !1552, size: 20608, offset: 8064)
!1552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 20608, elements: !1553)
!1553 = !{!1554}
!1554 = !DISubrange(count: 644)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1527, file: !415, line: 425, baseType: !192, size: 32, offset: 28672)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 468, baseType: !1558)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 445, size: 1120, elements: !1559)
!1559 = !{!1560, !1561, !1562, !1563, !1564, !1565, !1566, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1579, !1580, !1581, !1583, !1585, !1587}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1558, file: !415, line: 447, baseType: !419, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1558, file: !415, line: 448, baseType: !192, size: 32, offset: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1558, file: !415, line: 449, baseType: !192, size: 32, offset: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1558, file: !415, line: 450, baseType: !192, size: 32, offset: 96)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1558, file: !415, line: 451, baseType: !192, size: 32, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1558, file: !415, line: 452, baseType: !192, size: 32, offset: 160)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1558, file: !415, line: 453, baseType: !1567, size: 96, offset: 192)
!1567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1548, size: 96, elements: !1568)
!1568 = !{!1569}
!1569 = !DISubrange(count: 12)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1558, file: !415, line: 454, baseType: !192, size: 32, offset: 288)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1558, file: !415, line: 455, baseType: !192, size: 32, offset: 320)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1558, file: !415, line: 456, baseType: !192, size: 32, offset: 352)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1558, file: !415, line: 457, baseType: !192, size: 32, offset: 384)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1558, file: !415, line: 458, baseType: !192, size: 32, offset: 416)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1558, file: !415, line: 459, baseType: !192, size: 32, offset: 448)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1558, file: !415, line: 460, baseType: !192, size: 32, offset: 480)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1558, file: !415, line: 461, baseType: !1578, size: 64, offset: 512)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 64, elements: !301)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1558, file: !415, line: 462, baseType: !419, size: 32, offset: 576)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1558, file: !415, line: 463, baseType: !419, size: 32, offset: 608)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1558, file: !415, line: 464, baseType: !1582, size: 128, offset: 640)
!1582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 128, elements: !596)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1558, file: !415, line: 465, baseType: !1584, size: 160, offset: 768)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 160, elements: !1100)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1558, file: !415, line: 466, baseType: !1586, size: 160, offset: 928)
!1586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 160, elements: !1100)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1558, file: !415, line: 467, baseType: !192, size: 32, offset: 1088)
!1588 = !{!1589, !1615, !1618, !1620, !1622, !1509}
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1511, file: !1591, line: 285, type: !1592, isLocal: true, isDefinition: true, align: 32)
!1591 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !203, line: 51, size: 64, elements: !1594)
!1594 = !{!1595, !1614}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1593, file: !203, line: 60, baseType: !1596, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 32)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!103, !1599}
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1601)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !1602)
!1602 = !{!1603, !1604, !1605, !1606, !1612, !1613}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1601, file: !118, line: 380, baseType: !121, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1601, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1601, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1601, file: !118, line: 386, baseType: !1607, size: 32, offset: 96)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !1609)
!1609 = !{!1610, !1611}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1608, file: !118, line: 359, baseType: !131, size: 8)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1608, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1601, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1601, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1593, file: !203, line: 65, baseType: !1599, size: 32, offset: 32)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "lock", scope: !1511, file: !1591, line: 34, type: !1617, isLocal: true, isDefinition: true)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !380, line: 43, elements: !381)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "last_load", scope: !1511, file: !1591, line: 36, type: !142, isLocal: true, isDefinition: true)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1511, file: !1591, line: 48, type: !142, isLocal: true, isDefinition: true)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1511, file: !1591, line: 54, type: !142, isLocal: true, isDefinition: true)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1626, file: !1708, line: 22, type: !1710, isLocal: true, isDefinition: true)
!1626 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1627, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1628, retainedTypes: !1629, globals: !1705, splitDebugInlining: false, nameTableKind: None)
!1627 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!1628 = !{!929, !935}
!1629 = !{!1630, !1694, !1699, !982, !935, !929, !1704, !104}
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !930, line: 523, size: 288, elements: !1633)
!1633 = !{!1634, !1653, !1657, !1661, !1665, !1666, !1667, !1671, !1690}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1632, file: !930, line: 524, baseType: !1635, size: 32)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!103, !1638, !970, !971}
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645, !1651, !1652}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1640, file: !118, line: 380, baseType: !121, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1640, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1640, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1640, file: !118, line: 386, baseType: !1646, size: 32, offset: 96)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 32)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !1648)
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1647, file: !118, line: 359, baseType: !131, size: 8)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1647, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1640, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1640, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1632, file: !930, line: 530, baseType: !1654, size: 32, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!103, !1638, !976}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1632, file: !930, line: 532, baseType: !1658, size: 32, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 32)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!103, !1638, !982, !977}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1632, file: !930, line: 535, baseType: !1662, size: 32, offset: 96)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!103, !1638, !982}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1632, file: !930, line: 537, baseType: !1662, size: 32, offset: 128)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1632, file: !930, line: 539, baseType: !1662, size: 32, offset: 160)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1632, file: !930, line: 541, baseType: !1668, size: 32, offset: 192)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{!103, !1638, !970, !929, !935}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1632, file: !930, line: 544, baseType: !1672, size: 32, offset: 224)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{!103, !1638, !1675, !134}
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !930, line: 478, size: 96, elements: !1677)
!1677 = !{!1678, !1684, !1689}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1676, file: !930, line: 482, baseType: !1679, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1002, line: 33, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1002, line: 29, size: 32, elements: !1681)
!1681 = !{!1682}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1680, file: !1002, line: 30, baseType: !1683, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1676, file: !930, line: 485, baseType: !1685, size: 32, offset: 32)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !930, line: 464, baseType: !1686)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!1687 = !DISubroutineType(types: !1688)
!1688 = !{null, !1638, !1675, !982}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1676, file: !930, line: 493, baseType: !982, size: 32, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1632, file: !930, line: 547, baseType: !1691, size: 32, offset: 256)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!142, !1638}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !930, line: 428, size: 32, elements: !1697)
!1697 = !{!1698}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1696, file: !930, line: 434, baseType: !982, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1701)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !930, line: 441, size: 32, elements: !1702)
!1702 = !{!1703}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1701, file: !930, line: 447, baseType: !982, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1705 = !{!1706, !1624}
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1707 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1626, file: !1708, line: 37, type: !1709, isLocal: true, isDefinition: true)
!1708 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!1710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1711, size: 352, elements: !1712)
!1711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1638)
!1712 = !{!1713}
!1713 = !DISubrange(count: 11)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1716, file: !1760, line: 139, type: !1767, isLocal: false, isDefinition: true)
!1716 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1717, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1718, globals: !1757, splitDebugInlining: false, nameTableKind: None)
!1717 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!1718 = !{!1719}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !188, line: 586, baseType: !1721)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 550, size: 1216, elements: !1722)
!1722 = !{!1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1721, file: !188, line: 552, baseType: !192, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1721, file: !188, line: 553, baseType: !192, size: 32, offset: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1721, file: !188, line: 554, baseType: !192, size: 32, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1721, file: !188, line: 555, baseType: !192, size: 32, offset: 96)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1721, file: !188, line: 556, baseType: !192, size: 32, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1721, file: !188, line: 557, baseType: !192, size: 32, offset: 160)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1721, file: !188, line: 558, baseType: !192, size: 32, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1721, file: !188, line: 559, baseType: !142, size: 32, offset: 224)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1721, file: !188, line: 560, baseType: !192, size: 32, offset: 256)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1721, file: !188, line: 561, baseType: !192, size: 32, offset: 288)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1721, file: !188, line: 562, baseType: !752, size: 64, offset: 320)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1721, file: !188, line: 563, baseType: !192, size: 32, offset: 384)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1721, file: !188, line: 564, baseType: !192, size: 32, offset: 416)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1721, file: !188, line: 565, baseType: !192, size: 32, offset: 448)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1721, file: !188, line: 566, baseType: !142, size: 32, offset: 480)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1721, file: !188, line: 567, baseType: !192, size: 32, offset: 512)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1721, file: !188, line: 568, baseType: !192, size: 32, offset: 544)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1721, file: !188, line: 569, baseType: !752, size: 64, offset: 576)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1721, file: !188, line: 570, baseType: !192, size: 32, offset: 640)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1721, file: !188, line: 571, baseType: !192, size: 32, offset: 672)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1721, file: !188, line: 572, baseType: !192, size: 32, offset: 704)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1721, file: !188, line: 573, baseType: !142, size: 32, offset: 736)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1721, file: !188, line: 574, baseType: !192, size: 32, offset: 768)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1721, file: !188, line: 575, baseType: !192, size: 32, offset: 800)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1721, file: !188, line: 576, baseType: !752, size: 64, offset: 832)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1721, file: !188, line: 577, baseType: !192, size: 32, offset: 896)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1721, file: !188, line: 578, baseType: !192, size: 32, offset: 928)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1721, file: !188, line: 579, baseType: !752, size: 64, offset: 960)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1721, file: !188, line: 580, baseType: !192, size: 32, offset: 1024)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1721, file: !188, line: 581, baseType: !192, size: 32, offset: 1056)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1721, file: !188, line: 582, baseType: !192, size: 32, offset: 1088)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1721, file: !188, line: 583, baseType: !192, size: 32, offset: 1120)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1721, file: !188, line: 584, baseType: !192, size: 32, offset: 1152)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1721, file: !188, line: 585, baseType: !192, size: 32, offset: 1184)
!1757 = !{!1758, !1761, !1714}
!1758 = !DIGlobalVariableExpression(var: !1759, expr: !DIExpression())
!1759 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1716, file: !1760, line: 137, type: !142, isLocal: false, isDefinition: true)
!1760 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1762 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1716, file: !1760, line: 138, type: !1763, isLocal: false, isDefinition: true)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1764, size: 128, elements: !1765)
!1764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!1765 = !{!1766}
!1766 = !DISubrange(count: 16)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1764, size: 64, elements: !1375)
!1768 = !DIGlobalVariableExpression(var: !1769, expr: !DIExpression())
!1769 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1770, file: !1773, line: 23, type: !1774, isLocal: false, isDefinition: true)
!1770 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1771, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !175, globals: !1772, splitDebugInlining: false, nameTableKind: None)
!1771 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!1772 = !{!1768}
!1773 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1775 = !DIGlobalVariableExpression(var: !1776, expr: !DIExpression())
!1776 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1777, file: !1781, line: 86, type: !2031, isLocal: false, isDefinition: true, align: 512)
!1777 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1778, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1779, retainedTypes: !1788, globals: !1862, splitDebugInlining: false, nameTableKind: None)
!1778 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!1779 = !{!1780, !30, !484}
!1780 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1781, line: 63, baseType: !32, size: 32, elements: !1782)
!1781 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1782 = !{!1783, !1784, !1785, !1786, !1787}
!1783 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1784 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1785 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1786 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1787 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1788 = !{!259, !104, !103, !1789, !1054, !142, !1820, !654, !131, !1845}
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1791)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1792, line: 51, size: 64, elements: !1793)
!1792 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1793 = !{!1794, !1815}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1791, file: !1792, line: 52, baseType: !1795, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1792, line: 38, baseType: !1796)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!103, !1799, !1814, !324}
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !1802)
!1802 = !{!1803, !1804, !1805, !1806, !1812, !1813}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1801, file: !118, line: 380, baseType: !121, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1801, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1801, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1801, file: !118, line: 386, baseType: !1807, size: 32, offset: 96)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !1809)
!1809 = !{!1810, !1811}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1808, file: !118, line: 359, baseType: !131, size: 8)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1808, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1801, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1801, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1791, file: !1792, line: 53, baseType: !1816, size: 32, offset: 32)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1792, line: 47, baseType: !1817)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!103, !1799, !1814, !324, !142}
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 468, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 445, size: 1120, elements: !1823)
!1823 = !{!1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1822, file: !415, line: 447, baseType: !419, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1822, file: !415, line: 448, baseType: !192, size: 32, offset: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1822, file: !415, line: 449, baseType: !192, size: 32, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1822, file: !415, line: 450, baseType: !192, size: 32, offset: 96)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1822, file: !415, line: 451, baseType: !192, size: 32, offset: 128)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1822, file: !415, line: 452, baseType: !192, size: 32, offset: 160)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1822, file: !415, line: 453, baseType: !1567, size: 96, offset: 192)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1822, file: !415, line: 454, baseType: !192, size: 32, offset: 288)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1822, file: !415, line: 455, baseType: !192, size: 32, offset: 320)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1822, file: !415, line: 456, baseType: !192, size: 32, offset: 352)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1822, file: !415, line: 457, baseType: !192, size: 32, offset: 384)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1822, file: !415, line: 458, baseType: !192, size: 32, offset: 416)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1822, file: !415, line: 459, baseType: !192, size: 32, offset: 448)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1822, file: !415, line: 460, baseType: !192, size: 32, offset: 480)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1822, file: !415, line: 461, baseType: !1578, size: 64, offset: 512)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1822, file: !415, line: 462, baseType: !419, size: 32, offset: 576)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1822, file: !415, line: 463, baseType: !419, size: 32, offset: 608)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1822, file: !415, line: 464, baseType: !1582, size: 128, offset: 640)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1822, file: !415, line: 465, baseType: !1584, size: 160, offset: 768)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1822, file: !415, line: 466, baseType: !1586, size: 160, offset: 928)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1822, file: !415, line: 467, baseType: !192, size: 32, offset: 1088)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !415, line: 426, baseType: !1847)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 411, size: 28704, elements: !1848)
!1848 = !{!1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1847, file: !415, line: 413, baseType: !1530, size: 256)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1847, file: !415, line: 414, baseType: !1532, size: 768, offset: 256)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1847, file: !415, line: 415, baseType: !1530, size: 256, offset: 1024)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1847, file: !415, line: 416, baseType: !1532, size: 768, offset: 1280)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1847, file: !415, line: 417, baseType: !1530, size: 256, offset: 2048)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1847, file: !415, line: 418, baseType: !1532, size: 768, offset: 2304)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1847, file: !415, line: 419, baseType: !1530, size: 256, offset: 3072)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1847, file: !415, line: 420, baseType: !1532, size: 768, offset: 3328)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1847, file: !415, line: 421, baseType: !1530, size: 256, offset: 4096)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1847, file: !415, line: 422, baseType: !1543, size: 1792, offset: 4352)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1847, file: !415, line: 423, baseType: !1547, size: 1920, offset: 6144)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1847, file: !415, line: 424, baseType: !1552, size: 20608, offset: 8064)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1847, file: !415, line: 425, baseType: !192, size: 32, offset: 28672)
!1862 = !{!1863, !1985, !1994, !1996, !1775, !1999, !2001, !2006}
!1863 = !DIGlobalVariableExpression(var: !1864, expr: !DIExpression())
!1864 = distinct !DIGlobalVariable(name: "_kernel", scope: !1777, file: !1781, line: 40, type: !1865, isLocal: false, isDefinition: true)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !306, line: 158, size: 288, elements: !1866)
!1866 = !{!1867, !1980}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1865, file: !306, line: 159, baseType: !1868, size: 192)
!1868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1869, size: 192, elements: !404)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !306, line: 100, size: 192, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1974, !1975, !1976, !1977}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1869, file: !306, line: 102, baseType: !142, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1869, file: !306, line: 105, baseType: !1054, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1869, file: !306, line: 108, baseType: !1874, size: 32, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !270, line: 245, size: 1024, elements: !1876)
!1876 = !{!1877, !1935, !1947, !1948, !1949, !1950, !1956, !1969}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1875, file: !270, line: 247, baseType: !1878, size: 384)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !270, line: 57, size: 384, elements: !1879)
!1879 = !{!1880, !1904, !1911, !1912, !1913, !1922, !1923, !1924}
!1880 = !DIDerivedType(tag: DW_TAG_member, scope: !1878, file: !270, line: 60, baseType: !1881, size: 64)
!1881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1878, file: !270, line: 60, size: 64, elements: !1882)
!1882 = !{!1883, !1898}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1881, file: !270, line: 61, baseType: !1884, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !280, line: 49, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !280, line: 37, size: 64, elements: !1886)
!1886 = !{!1887, !1893}
!1887 = !DIDerivedType(tag: DW_TAG_member, scope: !1885, file: !280, line: 38, baseType: !1888, size: 32)
!1888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1885, file: !280, line: 38, size: 32, elements: !1889)
!1889 = !{!1890, !1892}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1888, file: !280, line: 39, baseType: !1891, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1888, file: !280, line: 40, baseType: !1891, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, scope: !1885, file: !280, line: 42, baseType: !1894, size: 32, offset: 32)
!1894 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1885, file: !280, line: 42, size: 32, elements: !1895)
!1895 = !{!1896, !1897}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1894, file: !280, line: 43, baseType: !1891, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1894, file: !280, line: 44, baseType: !1891, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1881, file: !270, line: 62, baseType: !1899, size: 64)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !296, line: 49, size: 64, elements: !1900)
!1900 = !{!1901}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1899, file: !296, line: 50, baseType: !1902, size: 64)
!1902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1903, size: 64, elements: !301)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1878, file: !270, line: 68, baseType: !1905, size: 32, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !306, line: 233, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !306, line: 231, size: 64, elements: !1908)
!1908 = !{!1909}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1907, file: !306, line: 232, baseType: !1910, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !280, line: 48, baseType: !1885)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1878, file: !270, line: 71, baseType: !131, size: 8, offset: 96)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1878, file: !270, line: 74, baseType: !131, size: 8, offset: 104)
!1913 = !DIDerivedType(tag: DW_TAG_member, scope: !1878, file: !270, line: 90, baseType: !1914, size: 16, offset: 112)
!1914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1878, file: !270, line: 90, size: 16, elements: !1915)
!1915 = !{!1916, !1921}
!1916 = !DIDerivedType(tag: DW_TAG_member, scope: !1914, file: !270, line: 91, baseType: !1917, size: 16)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1914, file: !270, line: 91, size: 16, elements: !1918)
!1918 = !{!1919, !1920}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1917, file: !270, line: 96, baseType: !320, size: 8)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1917, file: !270, line: 97, baseType: !131, size: 8, offset: 8)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1914, file: !270, line: 100, baseType: !324, size: 16)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1878, file: !270, line: 107, baseType: !142, size: 32, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1878, file: !270, line: 127, baseType: !104, size: 32, offset: 160)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1878, file: !270, line: 131, baseType: !1925, size: 192, offset: 192)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !306, line: 244, size: 192, elements: !1926)
!1926 = !{!1927, !1928, !1934}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1925, file: !306, line: 245, baseType: !1884, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1925, file: !306, line: 246, baseType: !1929, size: 32, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !306, line: 242, baseType: !1930)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{null, !1933}
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1925, file: !306, line: 249, baseType: !339, size: 64, offset: 128)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1875, file: !270, line: 250, baseType: !1936, size: 288, offset: 384)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !343, line: 25, size: 288, elements: !1937)
!1937 = !{!1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1936, file: !343, line: 26, baseType: !142, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1936, file: !343, line: 27, baseType: !142, size: 32, offset: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1936, file: !343, line: 28, baseType: !142, size: 32, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1936, file: !343, line: 29, baseType: !142, size: 32, offset: 96)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1936, file: !343, line: 30, baseType: !142, size: 32, offset: 128)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1936, file: !343, line: 31, baseType: !142, size: 32, offset: 160)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1936, file: !343, line: 32, baseType: !142, size: 32, offset: 192)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1936, file: !343, line: 33, baseType: !142, size: 32, offset: 224)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1936, file: !343, line: 34, baseType: !142, size: 32, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1875, file: !270, line: 253, baseType: !104, size: 32, offset: 672)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1875, file: !270, line: 256, baseType: !1906, size: 64, offset: 704)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1875, file: !270, line: 294, baseType: !103, size: 32, offset: 768)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1875, file: !270, line: 300, baseType: !1951, size: 96, offset: 800)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !270, line: 149, size: 96, elements: !1952)
!1952 = !{!1953, !1954, !1955}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1951, file: !270, line: 153, baseType: !22, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1951, file: !270, line: 162, baseType: !259, size: 32, offset: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1951, file: !270, line: 168, baseType: !259, size: 32, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1875, file: !270, line: 325, baseType: !1957, size: 32, offset: 896)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 32)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !366, line: 5073, size: 160, elements: !1959)
!1959 = !{!1960, !1966, !1967}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1958, file: !366, line: 5074, baseType: !1961, size: 96)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !370, line: 56, size: 96, elements: !1962)
!1962 = !{!1963, !1964, !1965}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1961, file: !370, line: 57, baseType: !373, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1961, file: !370, line: 58, baseType: !104, size: 32, offset: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1961, file: !370, line: 59, baseType: !259, size: 32, offset: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1958, file: !366, line: 5075, baseType: !1906, size: 64, offset: 96)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1958, file: !366, line: 5076, baseType: !1968, offset: 160)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !380, line: 43, elements: !381)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1875, file: !270, line: 343, baseType: !1970, size: 64, offset: 928)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !343, line: 60, size: 64, elements: !1971)
!1971 = !{!1972, !1973}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1970, file: !343, line: 63, baseType: !142, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1970, file: !343, line: 66, baseType: !142, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1869, file: !306, line: 111, baseType: !1874, size: 32, offset: 96)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1869, file: !306, line: 124, baseType: !103, size: 32, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1869, file: !306, line: 127, baseType: !131, size: 8, offset: 160)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1869, file: !306, line: 153, baseType: !1978, offset: 168)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1979, line: 33, elements: !381)
!1979 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1865, file: !306, line: 170, baseType: !1981, size: 96, offset: 192)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !306, line: 83, size: 96, elements: !1982)
!1982 = !{!1983, !1984}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1981, file: !306, line: 86, baseType: !1874, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1981, file: !306, line: 90, baseType: !1910, size: 64, offset: 32)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1777, file: !1781, line: 43, type: !1987, isLocal: false, isDefinition: true, align: 512)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1988, size: 16896, elements: !1992)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1989, line: 47, size: 8, elements: !1990)
!1989 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1990 = !{!1991}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1988, file: !1989, line: 48, baseType: !123, size: 8)
!1992 = !{!1993}
!1993 = !DISubrange(count: 2112)
!1994 = !DIGlobalVariableExpression(var: !1995, expr: !DIExpression())
!1995 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1777, file: !1781, line: 44, type: !1875, isLocal: false, isDefinition: true)
!1996 = !DIGlobalVariableExpression(var: !1997, expr: !DIExpression())
!1997 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1777, file: !1781, line: 48, type: !1998, isLocal: false, isDefinition: true)
!1998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1875, size: 1024, elements: !404)
!1999 = !DIGlobalVariableExpression(var: !2000, expr: !DIExpression())
!2000 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1777, file: !1781, line: 217, type: !134, isLocal: false, isDefinition: true)
!2001 = !DIGlobalVariableExpression(var: !2002, expr: !DIExpression())
!2002 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1777, file: !1781, line: 50, type: !2003, isLocal: true, isDefinition: true, align: 512)
!2003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1988, size: 3072, elements: !2004)
!2004 = !{!405, !2005}
!2005 = !DISubrange(count: 384)
!2006 = !DIGlobalVariableExpression(var: !2007, expr: !DIExpression())
!2007 = distinct !DIGlobalVariable(name: "levels", scope: !2008, file: !1781, line: 232, type: !2028, isLocal: true, isDefinition: true)
!2008 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1781, file: !1781, line: 230, type: !2009, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !2011)
!2009 = !DISubroutineType(types: !2010)
!2010 = !{null, !1780}
!2011 = !{!2012, !2013, !2023, !2027}
!2012 = !DILocalVariable(name: "level", arg: 1, scope: !2008, file: !1781, line: 230, type: !1780)
!2013 = !DILocalVariable(name: "entry", scope: !2008, file: !1781, line: 244, type: !2014)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2016)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !203, line: 51, size: 64, elements: !2017)
!2017 = !{!2018, !2022}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2016, file: !203, line: 60, baseType: !2019, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 32)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!103, !1799}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2016, file: !203, line: 65, baseType: !1799, size: 32, offset: 32)
!2023 = !DILocalVariable(name: "dev", scope: !2024, file: !1781, line: 247, type: !1799)
!2024 = distinct !DILexicalBlock(scope: !2025, file: !1781, line: 246, column: 64)
!2025 = distinct !DILexicalBlock(scope: !2026, file: !1781, line: 246, column: 2)
!2026 = distinct !DILexicalBlock(scope: !2008, file: !1781, line: 246, column: 2)
!2027 = !DILocalVariable(name: "rc", scope: !2024, file: !1781, line: 248, type: !103)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 192, elements: !2029)
!2029 = !{!2030}
!2030 = !DISubrange(count: 6)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1988, size: 16896, elements: !2032)
!2032 = !{!405, !1993}
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "states_str", scope: !2035, file: !2036, line: 276, type: !2157, isLocal: true, isDefinition: true)
!2035 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2036, file: !2036, line: 271, type: !2037, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !2148)
!2036 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2037 = !DISubroutineType(types: !2038)
!2038 = !{!121, !2039, !1054, !259}
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !270, line: 347, baseType: !2040)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 32)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !270, line: 245, size: 1024, elements: !2042)
!2042 = !{!2043, !2101, !2113, !2114, !2115, !2116, !2122, !2135}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2041, file: !270, line: 247, baseType: !2044, size: 384)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !270, line: 57, size: 384, elements: !2045)
!2045 = !{!2046, !2070, !2077, !2078, !2079, !2088, !2089, !2090}
!2046 = !DIDerivedType(tag: DW_TAG_member, scope: !2044, file: !270, line: 60, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2044, file: !270, line: 60, size: 64, elements: !2048)
!2048 = !{!2049, !2064}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2047, file: !270, line: 61, baseType: !2050, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !280, line: 49, baseType: !2051)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !280, line: 37, size: 64, elements: !2052)
!2052 = !{!2053, !2059}
!2053 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !280, line: 38, baseType: !2054, size: 32)
!2054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !280, line: 38, size: 32, elements: !2055)
!2055 = !{!2056, !2058}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2054, file: !280, line: 39, baseType: !2057, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2054, file: !280, line: 40, baseType: !2057, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !280, line: 42, baseType: !2060, size: 32, offset: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !280, line: 42, size: 32, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2060, file: !280, line: 43, baseType: !2057, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2060, file: !280, line: 44, baseType: !2057, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2047, file: !270, line: 62, baseType: !2065, size: 64)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !296, line: 49, size: 64, elements: !2066)
!2066 = !{!2067}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2065, file: !296, line: 50, baseType: !2068, size: 64)
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2069, size: 64, elements: !301)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2044, file: !270, line: 68, baseType: !2071, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !306, line: 233, baseType: !2073)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !306, line: 231, size: 64, elements: !2074)
!2074 = !{!2075}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2073, file: !306, line: 232, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !280, line: 48, baseType: !2051)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2044, file: !270, line: 71, baseType: !131, size: 8, offset: 96)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2044, file: !270, line: 74, baseType: !131, size: 8, offset: 104)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !2044, file: !270, line: 90, baseType: !2080, size: 16, offset: 112)
!2080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2044, file: !270, line: 90, size: 16, elements: !2081)
!2081 = !{!2082, !2087}
!2082 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !270, line: 91, baseType: !2083, size: 16)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2080, file: !270, line: 91, size: 16, elements: !2084)
!2084 = !{!2085, !2086}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2083, file: !270, line: 96, baseType: !320, size: 8)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2083, file: !270, line: 97, baseType: !131, size: 8, offset: 8)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2080, file: !270, line: 100, baseType: !324, size: 16)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2044, file: !270, line: 107, baseType: !142, size: 32, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2044, file: !270, line: 127, baseType: !104, size: 32, offset: 160)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2044, file: !270, line: 131, baseType: !2091, size: 192, offset: 192)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !306, line: 244, size: 192, elements: !2092)
!2092 = !{!2093, !2094, !2100}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2091, file: !306, line: 245, baseType: !2050, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2091, file: !306, line: 246, baseType: !2095, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !306, line: 242, baseType: !2096)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2097 = !DISubroutineType(types: !2098)
!2098 = !{null, !2099}
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2091, file: !306, line: 249, baseType: !339, size: 64, offset: 128)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2041, file: !270, line: 250, baseType: !2102, size: 288, offset: 384)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !343, line: 25, size: 288, elements: !2103)
!2103 = !{!2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2102, file: !343, line: 26, baseType: !142, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2102, file: !343, line: 27, baseType: !142, size: 32, offset: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2102, file: !343, line: 28, baseType: !142, size: 32, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2102, file: !343, line: 29, baseType: !142, size: 32, offset: 96)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2102, file: !343, line: 30, baseType: !142, size: 32, offset: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2102, file: !343, line: 31, baseType: !142, size: 32, offset: 160)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2102, file: !343, line: 32, baseType: !142, size: 32, offset: 192)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2102, file: !343, line: 33, baseType: !142, size: 32, offset: 224)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2102, file: !343, line: 34, baseType: !142, size: 32, offset: 256)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2041, file: !270, line: 253, baseType: !104, size: 32, offset: 672)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2041, file: !270, line: 256, baseType: !2072, size: 64, offset: 704)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2041, file: !270, line: 294, baseType: !103, size: 32, offset: 768)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2041, file: !270, line: 300, baseType: !2117, size: 96, offset: 800)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !270, line: 149, size: 96, elements: !2118)
!2118 = !{!2119, !2120, !2121}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2117, file: !270, line: 153, baseType: !22, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2117, file: !270, line: 162, baseType: !259, size: 32, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2117, file: !270, line: 168, baseType: !259, size: 32, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2041, file: !270, line: 325, baseType: !2123, size: 32, offset: 896)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !366, line: 5073, size: 160, elements: !2125)
!2125 = !{!2126, !2132, !2133}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2124, file: !366, line: 5074, baseType: !2127, size: 96)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !370, line: 56, size: 96, elements: !2128)
!2128 = !{!2129, !2130, !2131}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2127, file: !370, line: 57, baseType: !373, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2127, file: !370, line: 58, baseType: !104, size: 32, offset: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2127, file: !370, line: 59, baseType: !259, size: 32, offset: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2124, file: !366, line: 5075, baseType: !2072, size: 64, offset: 96)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2124, file: !366, line: 5076, baseType: !2134, offset: 160)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !380, line: 43, elements: !381)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2041, file: !270, line: 343, baseType: !2136, size: 64, offset: 928)
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !343, line: 60, size: 64, elements: !2137)
!2137 = !{!2138, !2139}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2136, file: !343, line: 63, baseType: !142, size: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2136, file: !343, line: 66, baseType: !142, size: 32, offset: 32)
!2140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2141, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2142, globals: !2144, splitDebugInlining: false, nameTableKind: None)
!2141 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2142 = !{!104, !121, !1515, !131, !103, !2143, !24, !259, !1054, !22, !142, !1367}
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2144 = !{!2033, !2145}
!2145 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression())
!2146 = distinct !DIGlobalVariable(name: "states_sz", scope: !2035, file: !2036, line: 279, type: !2147, isLocal: true, isDefinition: true)
!2147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1709, size: 256, elements: !1375)
!2148 = !{!2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2149 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2035, file: !2036, line: 271, type: !2039)
!2150 = !DILocalVariable(name: "buf", arg: 2, scope: !2035, file: !2036, line: 271, type: !1054)
!2151 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2035, file: !2036, line: 271, type: !259)
!2152 = !DILocalVariable(name: "off", scope: !2035, file: !2036, line: 273, type: !259)
!2153 = !DILocalVariable(name: "bit", scope: !2035, file: !2036, line: 274, type: !131)
!2154 = !DILocalVariable(name: "thread_state", scope: !2035, file: !2036, line: 275, type: !131)
!2155 = !DILocalVariable(name: "index", scope: !2156, file: !2036, line: 293, type: !131)
!2156 = distinct !DILexicalBlock(scope: !2035, file: !2036, line: 293, column: 2)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 256, elements: !1375)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2160, file: !2268, line: 56, type: !2257, isLocal: false, isDefinition: true)
!2160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2161, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2162, globals: !2265, splitDebugInlining: false, nameTableKind: None)
!2161 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2162 = !{!2163, !1054, !104, !2263, !1814, !1515, !654, !103, !142, !1367, !2264}
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 32)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !270, line: 245, size: 1024, elements: !2165)
!2165 = !{!2166, !2224, !2236, !2237, !2238, !2239, !2245, !2258}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2164, file: !270, line: 247, baseType: !2167, size: 384)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !270, line: 57, size: 384, elements: !2168)
!2168 = !{!2169, !2193, !2200, !2201, !2202, !2211, !2212, !2213}
!2169 = !DIDerivedType(tag: DW_TAG_member, scope: !2167, file: !270, line: 60, baseType: !2170, size: 64)
!2170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2167, file: !270, line: 60, size: 64, elements: !2171)
!2171 = !{!2172, !2187}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2170, file: !270, line: 61, baseType: !2173, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !280, line: 49, baseType: !2174)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !280, line: 37, size: 64, elements: !2175)
!2175 = !{!2176, !2182}
!2176 = !DIDerivedType(tag: DW_TAG_member, scope: !2174, file: !280, line: 38, baseType: !2177, size: 32)
!2177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2174, file: !280, line: 38, size: 32, elements: !2178)
!2178 = !{!2179, !2181}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2177, file: !280, line: 39, baseType: !2180, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2177, file: !280, line: 40, baseType: !2180, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, scope: !2174, file: !280, line: 42, baseType: !2183, size: 32, offset: 32)
!2183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2174, file: !280, line: 42, size: 32, elements: !2184)
!2184 = !{!2185, !2186}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2183, file: !280, line: 43, baseType: !2180, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2183, file: !280, line: 44, baseType: !2180, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2170, file: !270, line: 62, baseType: !2188, size: 64)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !296, line: 49, size: 64, elements: !2189)
!2189 = !{!2190}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2188, file: !296, line: 50, baseType: !2191, size: 64)
!2191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2192, size: 64, elements: !301)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2167, file: !270, line: 68, baseType: !2194, size: 32, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !306, line: 233, baseType: !2196)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !306, line: 231, size: 64, elements: !2197)
!2197 = !{!2198}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2196, file: !306, line: 232, baseType: !2199, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !280, line: 48, baseType: !2174)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2167, file: !270, line: 71, baseType: !131, size: 8, offset: 96)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2167, file: !270, line: 74, baseType: !131, size: 8, offset: 104)
!2202 = !DIDerivedType(tag: DW_TAG_member, scope: !2167, file: !270, line: 90, baseType: !2203, size: 16, offset: 112)
!2203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2167, file: !270, line: 90, size: 16, elements: !2204)
!2204 = !{!2205, !2210}
!2205 = !DIDerivedType(tag: DW_TAG_member, scope: !2203, file: !270, line: 91, baseType: !2206, size: 16)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2203, file: !270, line: 91, size: 16, elements: !2207)
!2207 = !{!2208, !2209}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2206, file: !270, line: 96, baseType: !320, size: 8)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2206, file: !270, line: 97, baseType: !131, size: 8, offset: 8)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2203, file: !270, line: 100, baseType: !324, size: 16)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2167, file: !270, line: 107, baseType: !142, size: 32, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2167, file: !270, line: 127, baseType: !104, size: 32, offset: 160)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2167, file: !270, line: 131, baseType: !2214, size: 192, offset: 192)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !306, line: 244, size: 192, elements: !2215)
!2215 = !{!2216, !2217, !2223}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2214, file: !306, line: 245, baseType: !2173, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2214, file: !306, line: 246, baseType: !2218, size: 32, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !306, line: 242, baseType: !2219)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 32)
!2220 = !DISubroutineType(types: !2221)
!2221 = !{null, !2222}
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2214, file: !306, line: 249, baseType: !339, size: 64, offset: 128)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2164, file: !270, line: 250, baseType: !2225, size: 288, offset: 384)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !343, line: 25, size: 288, elements: !2226)
!2226 = !{!2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2225, file: !343, line: 26, baseType: !142, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2225, file: !343, line: 27, baseType: !142, size: 32, offset: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2225, file: !343, line: 28, baseType: !142, size: 32, offset: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2225, file: !343, line: 29, baseType: !142, size: 32, offset: 96)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2225, file: !343, line: 30, baseType: !142, size: 32, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2225, file: !343, line: 31, baseType: !142, size: 32, offset: 160)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2225, file: !343, line: 32, baseType: !142, size: 32, offset: 192)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2225, file: !343, line: 33, baseType: !142, size: 32, offset: 224)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2225, file: !343, line: 34, baseType: !142, size: 32, offset: 256)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2164, file: !270, line: 253, baseType: !104, size: 32, offset: 672)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2164, file: !270, line: 256, baseType: !2195, size: 64, offset: 704)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2164, file: !270, line: 294, baseType: !103, size: 32, offset: 768)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2164, file: !270, line: 300, baseType: !2240, size: 96, offset: 800)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !270, line: 149, size: 96, elements: !2241)
!2241 = !{!2242, !2243, !2244}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2240, file: !270, line: 153, baseType: !22, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2240, file: !270, line: 162, baseType: !259, size: 32, offset: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2240, file: !270, line: 168, baseType: !259, size: 32, offset: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2164, file: !270, line: 325, baseType: !2246, size: 32, offset: 896)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !366, line: 5073, size: 160, elements: !2248)
!2248 = !{!2249, !2255, !2256}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2247, file: !366, line: 5074, baseType: !2250, size: 96)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !370, line: 56, size: 96, elements: !2251)
!2251 = !{!2252, !2253, !2254}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2250, file: !370, line: 57, baseType: !373, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2250, file: !370, line: 58, baseType: !104, size: 32, offset: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2250, file: !370, line: 59, baseType: !259, size: 32, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2247, file: !366, line: 5075, baseType: !2195, size: 64, offset: 96)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2247, file: !366, line: 5076, baseType: !2257, offset: 160)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !380, line: 43, elements: !381)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2164, file: !270, line: 343, baseType: !2259, size: 64, offset: 928)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !343, line: 60, size: 64, elements: !2260)
!2260 = !{!2261, !2262}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2259, file: !343, line: 63, baseType: !142, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2259, file: !343, line: 66, baseType: !142, size: 32, offset: 32)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 32)
!2265 = !{!2158, !2266, !2269, !2271}
!2266 = !DIGlobalVariableExpression(var: !2267, expr: !DIExpression())
!2267 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2160, file: !2268, line: 404, type: !103, isLocal: true, isDefinition: true)
!2268 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2269 = !DIGlobalVariableExpression(var: !2270, expr: !DIExpression())
!2270 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2160, file: !2268, line: 405, type: !103, isLocal: true, isDefinition: true)
!2271 = !DIGlobalVariableExpression(var: !2272, expr: !DIExpression())
!2272 = distinct !DIGlobalVariable(name: "pending_current", scope: !2160, file: !2268, line: 425, type: !2163, isLocal: true, isDefinition: true)
!2273 = !DIGlobalVariableExpression(var: !2274, expr: !DIExpression())
!2274 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2275, file: !2305, line: 15, type: !1367, isLocal: true, isDefinition: true)
!2275 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2276, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2277, globals: !2302, splitDebugInlining: false, nameTableKind: None)
!2276 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2277 = !{!1515, !104, !654, !142, !1367, !103, !2278, !1054, !339}
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !306, line: 244, size: 192, elements: !2280)
!2280 = !{!2281, !2296, !2301}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2279, file: !306, line: 245, baseType: !2282, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !280, line: 49, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !280, line: 37, size: 64, elements: !2284)
!2284 = !{!2285, !2291}
!2285 = !DIDerivedType(tag: DW_TAG_member, scope: !2283, file: !280, line: 38, baseType: !2286, size: 32)
!2286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2283, file: !280, line: 38, size: 32, elements: !2287)
!2287 = !{!2288, !2290}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2286, file: !280, line: 39, baseType: !2289, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2286, file: !280, line: 40, baseType: !2289, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, scope: !2283, file: !280, line: 42, baseType: !2292, size: 32, offset: 32)
!2292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2283, file: !280, line: 42, size: 32, elements: !2293)
!2293 = !{!2294, !2295}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2292, file: !280, line: 43, baseType: !2289, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2292, file: !280, line: 44, baseType: !2289, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2279, file: !306, line: 246, baseType: !2297, size: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !306, line: 242, baseType: !2298)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{null, !2278}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2279, file: !306, line: 249, baseType: !339, size: 64, offset: 128)
!2302 = !{!2273, !2303, !2307, !2309}
!2303 = !DIGlobalVariableExpression(var: !2304, expr: !DIExpression())
!2304 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2275, file: !2305, line: 19, type: !2306, isLocal: true, isDefinition: true)
!2305 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !380, line: 43, elements: !381)
!2307 = !DIGlobalVariableExpression(var: !2308, expr: !DIExpression())
!2308 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2275, file: !2305, line: 25, type: !103, isLocal: true, isDefinition: true)
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2275, file: !2305, line: 17, type: !2311, isLocal: true, isDefinition: true)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !280, line: 48, baseType: !2283)
!2312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !175, splitDebugInlining: false, nameTableKind: None)
!2313 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2314 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2315, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !175, splitDebugInlining: false, nameTableKind: None)
!2315 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2316 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2317, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2318, retainedTypes: !2338, splitDebugInlining: false, nameTableKind: None)
!2317 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2318 = !{!2319, !2327}
!2319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2320, line: 69, baseType: !32, size: 32, elements: !2321)
!2320 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2321 = !{!2322, !2323, !2324, !2325, !2326}
!2322 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2323 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2324 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2325 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2326 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2327 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2320, line: 56, baseType: !32, size: 32, elements: !2328)
!2328 = !{!2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337}
!2329 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2330 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2331 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2332 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2333 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2334 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2335 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2336 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2337 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2338 = !{!103, !2319, !2327, !2339, !321, !141, !2341, !2342, !132, !325, !121, !259, !104, !22, !32, !102, !2344, !2345, !2346, !2347, !340, !2348, !2340, !2349, !2350, !2351, !2352}
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2320, line: 31, baseType: !2340)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !340)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !260, line: 329, baseType: !32)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2320, line: 32, baseType: !2343)
!2343 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1368)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!2346 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !260, line: 145, baseType: !103)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2355 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2356, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2357, retainedTypes: !175, splitDebugInlining: false, nameTableKind: None)
!2356 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2357 = !{!2358, !30}
!2358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2359, line: 27, baseType: !32, size: 32, elements: !2360)
!2359 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2360 = !{!2361, !2362, !2363, !2364, !2365}
!2361 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2362 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2363 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2364 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2365 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2368, retainedTypes: !2369, splitDebugInlining: false, nameTableKind: None)
!2367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2368 = !{!484, !2358, !30}
!2369 = !{!680, !2370, !104, !103, !654, !142, !131, !2387}
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !415, line: 426, baseType: !2372)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 411, size: 28704, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2372, file: !415, line: 413, baseType: !1530, size: 256)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2372, file: !415, line: 414, baseType: !1532, size: 768, offset: 256)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2372, file: !415, line: 415, baseType: !1530, size: 256, offset: 1024)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2372, file: !415, line: 416, baseType: !1532, size: 768, offset: 1280)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2372, file: !415, line: 417, baseType: !1530, size: 256, offset: 2048)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2372, file: !415, line: 418, baseType: !1532, size: 768, offset: 2304)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2372, file: !415, line: 419, baseType: !1530, size: 256, offset: 3072)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2372, file: !415, line: 420, baseType: !1532, size: 768, offset: 3328)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2372, file: !415, line: 421, baseType: !1530, size: 256, offset: 4096)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2372, file: !415, line: 422, baseType: !1543, size: 1792, offset: 4352)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2372, file: !415, line: 423, baseType: !1547, size: 1920, offset: 6144)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2372, file: !415, line: 424, baseType: !1552, size: 20608, offset: 8064)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2372, file: !415, line: 425, baseType: !192, size: 32, offset: 28672)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 468, baseType: !2389)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 445, size: 1120, elements: !2390)
!2390 = !{!2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2389, file: !415, line: 447, baseType: !419, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2389, file: !415, line: 448, baseType: !192, size: 32, offset: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2389, file: !415, line: 449, baseType: !192, size: 32, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2389, file: !415, line: 450, baseType: !192, size: 32, offset: 96)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2389, file: !415, line: 451, baseType: !192, size: 32, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2389, file: !415, line: 452, baseType: !192, size: 32, offset: 160)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2389, file: !415, line: 453, baseType: !1567, size: 96, offset: 192)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2389, file: !415, line: 454, baseType: !192, size: 32, offset: 288)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2389, file: !415, line: 455, baseType: !192, size: 32, offset: 320)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2389, file: !415, line: 456, baseType: !192, size: 32, offset: 352)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2389, file: !415, line: 457, baseType: !192, size: 32, offset: 384)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2389, file: !415, line: 458, baseType: !192, size: 32, offset: 416)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2389, file: !415, line: 459, baseType: !192, size: 32, offset: 448)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2389, file: !415, line: 460, baseType: !192, size: 32, offset: 480)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2389, file: !415, line: 461, baseType: !1578, size: 64, offset: 512)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2389, file: !415, line: 462, baseType: !419, size: 32, offset: 576)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2389, file: !415, line: 463, baseType: !419, size: 32, offset: 608)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2389, file: !415, line: 464, baseType: !1582, size: 128, offset: 640)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2389, file: !415, line: 465, baseType: !1584, size: 160, offset: 768)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2389, file: !415, line: 466, baseType: !1586, size: 160, offset: 928)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2389, file: !415, line: 467, baseType: !192, size: 32, offset: 1088)
!2412 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2413, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !175, splitDebugInlining: false, nameTableKind: None)
!2413 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2416, splitDebugInlining: false, nameTableKind: None)
!2415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2416 = !{!104, !103, !22, !2417}
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 468, baseType: !2419)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 445, size: 1120, elements: !2420)
!2420 = !{!2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2419, file: !415, line: 447, baseType: !419, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2419, file: !415, line: 448, baseType: !192, size: 32, offset: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2419, file: !415, line: 449, baseType: !192, size: 32, offset: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2419, file: !415, line: 450, baseType: !192, size: 32, offset: 96)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2419, file: !415, line: 451, baseType: !192, size: 32, offset: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2419, file: !415, line: 452, baseType: !192, size: 32, offset: 160)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2419, file: !415, line: 453, baseType: !1567, size: 96, offset: 192)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2419, file: !415, line: 454, baseType: !192, size: 32, offset: 288)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2419, file: !415, line: 455, baseType: !192, size: 32, offset: 320)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2419, file: !415, line: 456, baseType: !192, size: 32, offset: 352)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2419, file: !415, line: 457, baseType: !192, size: 32, offset: 384)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2419, file: !415, line: 458, baseType: !192, size: 32, offset: 416)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2419, file: !415, line: 459, baseType: !192, size: 32, offset: 448)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2419, file: !415, line: 460, baseType: !192, size: 32, offset: 480)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2419, file: !415, line: 461, baseType: !1578, size: 64, offset: 512)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2419, file: !415, line: 462, baseType: !419, size: 32, offset: 576)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2419, file: !415, line: 463, baseType: !419, size: 32, offset: 608)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2419, file: !415, line: 464, baseType: !1582, size: 128, offset: 640)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2419, file: !415, line: 465, baseType: !1584, size: 160, offset: 768)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2419, file: !415, line: 466, baseType: !1586, size: 160, offset: 928)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2419, file: !415, line: 467, baseType: !192, size: 32, offset: 1088)
!2442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2443, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2444, splitDebugInlining: false, nameTableKind: None)
!2443 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2444 = !{!2445, !104, !103}
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 468, baseType: !2447)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 445, size: 1120, elements: !2448)
!2448 = !{!2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2447, file: !415, line: 447, baseType: !419, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2447, file: !415, line: 448, baseType: !192, size: 32, offset: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2447, file: !415, line: 449, baseType: !192, size: 32, offset: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2447, file: !415, line: 450, baseType: !192, size: 32, offset: 96)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2447, file: !415, line: 451, baseType: !192, size: 32, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2447, file: !415, line: 452, baseType: !192, size: 32, offset: 160)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2447, file: !415, line: 453, baseType: !1567, size: 96, offset: 192)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2447, file: !415, line: 454, baseType: !192, size: 32, offset: 288)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2447, file: !415, line: 455, baseType: !192, size: 32, offset: 320)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2447, file: !415, line: 456, baseType: !192, size: 32, offset: 352)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2447, file: !415, line: 457, baseType: !192, size: 32, offset: 384)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2447, file: !415, line: 458, baseType: !192, size: 32, offset: 416)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2447, file: !415, line: 459, baseType: !192, size: 32, offset: 448)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2447, file: !415, line: 460, baseType: !192, size: 32, offset: 480)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2447, file: !415, line: 461, baseType: !1578, size: 64, offset: 512)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2447, file: !415, line: 462, baseType: !419, size: 32, offset: 576)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2447, file: !415, line: 463, baseType: !419, size: 32, offset: 608)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2447, file: !415, line: 464, baseType: !1582, size: 128, offset: 640)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2447, file: !415, line: 465, baseType: !1584, size: 160, offset: 768)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2447, file: !415, line: 466, baseType: !1586, size: 160, offset: 928)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2447, file: !415, line: 467, baseType: !192, size: 32, offset: 1088)
!2470 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2471, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2472, splitDebugInlining: false, nameTableKind: None)
!2471 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2472 = !{!2473, !142, !104, !103}
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 32)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2475, line: 98, size: 256, elements: !2476)
!2475 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2476 = !{!2477, !2482, !2487, !2492, !2497, !2502, !2507, !2512}
!2477 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2475, line: 99, baseType: !2478, size: 32)
!2478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2475, line: 99, size: 32, elements: !2479)
!2479 = !{!2480, !2481}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2478, file: !2475, line: 99, baseType: !142, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2478, file: !2475, line: 99, baseType: !142, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2475, line: 100, baseType: !2483, size: 32, offset: 32)
!2483 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2475, line: 100, size: 32, elements: !2484)
!2484 = !{!2485, !2486}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2483, file: !2475, line: 100, baseType: !142, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2483, file: !2475, line: 100, baseType: !142, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2475, line: 101, baseType: !2488, size: 32, offset: 64)
!2488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2475, line: 101, size: 32, elements: !2489)
!2489 = !{!2490, !2491}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2488, file: !2475, line: 101, baseType: !142, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2488, file: !2475, line: 101, baseType: !142, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2475, line: 102, baseType: !2493, size: 32, offset: 96)
!2493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2475, line: 102, size: 32, elements: !2494)
!2494 = !{!2495, !2496}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2493, file: !2475, line: 102, baseType: !142, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2493, file: !2475, line: 102, baseType: !142, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2475, line: 103, baseType: !2498, size: 32, offset: 128)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2475, line: 103, size: 32, elements: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2498, file: !2475, line: 103, baseType: !142, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2498, file: !2475, line: 103, baseType: !142, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2475, line: 104, baseType: !2503, size: 32, offset: 160)
!2503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2475, line: 104, size: 32, elements: !2504)
!2504 = !{!2505, !2506}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2503, file: !2475, line: 104, baseType: !142, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2503, file: !2475, line: 104, baseType: !142, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2475, line: 105, baseType: !2508, size: 32, offset: 192)
!2508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2475, line: 105, size: 32, elements: !2509)
!2509 = !{!2510, !2511}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2508, file: !2475, line: 105, baseType: !142, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2508, file: !2475, line: 105, baseType: !142, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2474, file: !2475, line: 106, baseType: !142, size: 32, offset: 224)
!2513 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2514, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2357, retainedTypes: !2515, splitDebugInlining: false, nameTableKind: None)
!2514 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2515 = !{!2516, !104, !103, !2541, !2584, !142}
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 468, baseType: !2518)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 445, size: 1120, elements: !2519)
!2519 = !{!2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2518, file: !415, line: 447, baseType: !419, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2518, file: !415, line: 448, baseType: !192, size: 32, offset: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2518, file: !415, line: 449, baseType: !192, size: 32, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2518, file: !415, line: 450, baseType: !192, size: 32, offset: 96)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2518, file: !415, line: 451, baseType: !192, size: 32, offset: 128)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2518, file: !415, line: 452, baseType: !192, size: 32, offset: 160)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2518, file: !415, line: 453, baseType: !1567, size: 96, offset: 192)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2518, file: !415, line: 454, baseType: !192, size: 32, offset: 288)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2518, file: !415, line: 455, baseType: !192, size: 32, offset: 320)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2518, file: !415, line: 456, baseType: !192, size: 32, offset: 352)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2518, file: !415, line: 457, baseType: !192, size: 32, offset: 384)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2518, file: !415, line: 458, baseType: !192, size: 32, offset: 416)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2518, file: !415, line: 459, baseType: !192, size: 32, offset: 448)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2518, file: !415, line: 460, baseType: !192, size: 32, offset: 480)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2518, file: !415, line: 461, baseType: !1578, size: 64, offset: 512)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2518, file: !415, line: 462, baseType: !419, size: 32, offset: 576)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2518, file: !415, line: 463, baseType: !419, size: 32, offset: 608)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2518, file: !415, line: 464, baseType: !1582, size: 128, offset: 640)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2518, file: !415, line: 465, baseType: !1584, size: 160, offset: 768)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2518, file: !415, line: 466, baseType: !1586, size: 160, offset: 928)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2518, file: !415, line: 467, baseType: !192, size: 32, offset: 1088)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2475, line: 141, baseType: !2543)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2475, line: 97, size: 256, elements: !2544)
!2544 = !{!2545}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2543, file: !2475, line: 107, baseType: !2546, size: 256)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2475, line: 98, size: 256, elements: !2547)
!2547 = !{!2548, !2553, !2558, !2563, !2568, !2573, !2578, !2583}
!2548 = !DIDerivedType(tag: DW_TAG_member, scope: !2546, file: !2475, line: 99, baseType: !2549, size: 32)
!2549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2546, file: !2475, line: 99, size: 32, elements: !2550)
!2550 = !{!2551, !2552}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2549, file: !2475, line: 99, baseType: !142, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2549, file: !2475, line: 99, baseType: !142, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, scope: !2546, file: !2475, line: 100, baseType: !2554, size: 32, offset: 32)
!2554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2546, file: !2475, line: 100, size: 32, elements: !2555)
!2555 = !{!2556, !2557}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2554, file: !2475, line: 100, baseType: !142, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2554, file: !2475, line: 100, baseType: !142, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, scope: !2546, file: !2475, line: 101, baseType: !2559, size: 32, offset: 64)
!2559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2546, file: !2475, line: 101, size: 32, elements: !2560)
!2560 = !{!2561, !2562}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2559, file: !2475, line: 101, baseType: !142, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2559, file: !2475, line: 101, baseType: !142, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, scope: !2546, file: !2475, line: 102, baseType: !2564, size: 32, offset: 96)
!2564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2546, file: !2475, line: 102, size: 32, elements: !2565)
!2565 = !{!2566, !2567}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2564, file: !2475, line: 102, baseType: !142, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2564, file: !2475, line: 102, baseType: !142, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, scope: !2546, file: !2475, line: 103, baseType: !2569, size: 32, offset: 128)
!2569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2546, file: !2475, line: 103, size: 32, elements: !2570)
!2570 = !{!2571, !2572}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2569, file: !2475, line: 103, baseType: !142, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2569, file: !2475, line: 103, baseType: !142, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, scope: !2546, file: !2475, line: 104, baseType: !2574, size: 32, offset: 160)
!2574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2546, file: !2475, line: 104, size: 32, elements: !2575)
!2575 = !{!2576, !2577}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2574, file: !2475, line: 104, baseType: !142, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2574, file: !2475, line: 104, baseType: !142, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, scope: !2546, file: !2475, line: 105, baseType: !2579, size: 32, offset: 192)
!2579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2546, file: !2475, line: 105, size: 32, elements: !2580)
!2580 = !{!2581, !2582}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2579, file: !2475, line: 105, baseType: !142, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2579, file: !2475, line: 105, baseType: !142, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2546, file: !2475, line: 106, baseType: !142, size: 32, offset: 224)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 32)
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1513, retainedTypes: !2587, splitDebugInlining: false, nameTableKind: None)
!2586 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2587 = !{!680, !654, !131, !142, !2588, !2605}
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !415, line: 426, baseType: !2590)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 411, size: 28704, elements: !2591)
!2591 = !{!2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2590, file: !415, line: 413, baseType: !1530, size: 256)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2590, file: !415, line: 414, baseType: !1532, size: 768, offset: 256)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2590, file: !415, line: 415, baseType: !1530, size: 256, offset: 1024)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2590, file: !415, line: 416, baseType: !1532, size: 768, offset: 1280)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2590, file: !415, line: 417, baseType: !1530, size: 256, offset: 2048)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2590, file: !415, line: 418, baseType: !1532, size: 768, offset: 2304)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2590, file: !415, line: 419, baseType: !1530, size: 256, offset: 3072)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2590, file: !415, line: 420, baseType: !1532, size: 768, offset: 3328)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2590, file: !415, line: 421, baseType: !1530, size: 256, offset: 4096)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2590, file: !415, line: 422, baseType: !1543, size: 1792, offset: 4352)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2590, file: !415, line: 423, baseType: !1547, size: 1920, offset: 6144)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2590, file: !415, line: 424, baseType: !1552, size: 20608, offset: 8064)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2590, file: !415, line: 425, baseType: !192, size: 32, offset: 28672)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 468, baseType: !2607)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 445, size: 1120, elements: !2608)
!2608 = !{!2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2607, file: !415, line: 447, baseType: !419, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2607, file: !415, line: 448, baseType: !192, size: 32, offset: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2607, file: !415, line: 449, baseType: !192, size: 32, offset: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2607, file: !415, line: 450, baseType: !192, size: 32, offset: 96)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2607, file: !415, line: 451, baseType: !192, size: 32, offset: 128)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2607, file: !415, line: 452, baseType: !192, size: 32, offset: 160)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2607, file: !415, line: 453, baseType: !1567, size: 96, offset: 192)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2607, file: !415, line: 454, baseType: !192, size: 32, offset: 288)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2607, file: !415, line: 455, baseType: !192, size: 32, offset: 320)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2607, file: !415, line: 456, baseType: !192, size: 32, offset: 352)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2607, file: !415, line: 457, baseType: !192, size: 32, offset: 384)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2607, file: !415, line: 458, baseType: !192, size: 32, offset: 416)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2607, file: !415, line: 459, baseType: !192, size: 32, offset: 448)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2607, file: !415, line: 460, baseType: !192, size: 32, offset: 480)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2607, file: !415, line: 461, baseType: !1578, size: 64, offset: 512)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2607, file: !415, line: 462, baseType: !419, size: 32, offset: 576)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2607, file: !415, line: 463, baseType: !419, size: 32, offset: 608)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2607, file: !415, line: 464, baseType: !1582, size: 128, offset: 640)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2607, file: !415, line: 465, baseType: !1584, size: 160, offset: 768)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2607, file: !415, line: 466, baseType: !1586, size: 160, offset: 928)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2607, file: !415, line: 467, baseType: !192, size: 32, offset: 1088)
!2630 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2631, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2632, splitDebugInlining: false, nameTableKind: None)
!2631 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2632 = !{!2633, !104, !103}
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 468, baseType: !2635)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 445, size: 1120, elements: !2636)
!2636 = !{!2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2635, file: !415, line: 447, baseType: !419, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2635, file: !415, line: 448, baseType: !192, size: 32, offset: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2635, file: !415, line: 449, baseType: !192, size: 32, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2635, file: !415, line: 450, baseType: !192, size: 32, offset: 96)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2635, file: !415, line: 451, baseType: !192, size: 32, offset: 128)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2635, file: !415, line: 452, baseType: !192, size: 32, offset: 160)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2635, file: !415, line: 453, baseType: !1567, size: 96, offset: 192)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2635, file: !415, line: 454, baseType: !192, size: 32, offset: 288)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2635, file: !415, line: 455, baseType: !192, size: 32, offset: 320)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2635, file: !415, line: 456, baseType: !192, size: 32, offset: 352)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2635, file: !415, line: 457, baseType: !192, size: 32, offset: 384)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2635, file: !415, line: 458, baseType: !192, size: 32, offset: 416)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2635, file: !415, line: 459, baseType: !192, size: 32, offset: 448)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2635, file: !415, line: 460, baseType: !192, size: 32, offset: 480)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2635, file: !415, line: 461, baseType: !1578, size: 64, offset: 512)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2635, file: !415, line: 462, baseType: !419, size: 32, offset: 576)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2635, file: !415, line: 463, baseType: !419, size: 32, offset: 608)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2635, file: !415, line: 464, baseType: !1582, size: 128, offset: 640)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2635, file: !415, line: 465, baseType: !1584, size: 160, offset: 768)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2635, file: !415, line: 466, baseType: !1586, size: 160, offset: 928)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2635, file: !415, line: 467, baseType: !192, size: 32, offset: 1088)
!2658 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2659, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2660, splitDebugInlining: false, nameTableKind: None)
!2659 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2660 = !{!123, !1054, !259, !887, !2661, !132, !104}
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!2663 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2664, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2665, splitDebugInlining: false, nameTableKind: None)
!2664 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2665 = !{!2666}
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !188, line: 586, baseType: !2668)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 550, size: 1216, elements: !2669)
!2669 = !{!2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2668, file: !188, line: 552, baseType: !192, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2668, file: !188, line: 553, baseType: !192, size: 32, offset: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2668, file: !188, line: 554, baseType: !192, size: 32, offset: 64)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2668, file: !188, line: 555, baseType: !192, size: 32, offset: 96)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2668, file: !188, line: 556, baseType: !192, size: 32, offset: 128)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2668, file: !188, line: 557, baseType: !192, size: 32, offset: 160)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2668, file: !188, line: 558, baseType: !192, size: 32, offset: 192)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2668, file: !188, line: 559, baseType: !142, size: 32, offset: 224)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2668, file: !188, line: 560, baseType: !192, size: 32, offset: 256)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2668, file: !188, line: 561, baseType: !192, size: 32, offset: 288)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2668, file: !188, line: 562, baseType: !752, size: 64, offset: 320)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2668, file: !188, line: 563, baseType: !192, size: 32, offset: 384)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2668, file: !188, line: 564, baseType: !192, size: 32, offset: 416)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2668, file: !188, line: 565, baseType: !192, size: 32, offset: 448)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2668, file: !188, line: 566, baseType: !142, size: 32, offset: 480)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2668, file: !188, line: 567, baseType: !192, size: 32, offset: 512)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2668, file: !188, line: 568, baseType: !192, size: 32, offset: 544)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2668, file: !188, line: 569, baseType: !752, size: 64, offset: 576)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2668, file: !188, line: 570, baseType: !192, size: 32, offset: 640)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2668, file: !188, line: 571, baseType: !192, size: 32, offset: 672)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2668, file: !188, line: 572, baseType: !192, size: 32, offset: 704)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2668, file: !188, line: 573, baseType: !142, size: 32, offset: 736)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2668, file: !188, line: 574, baseType: !192, size: 32, offset: 768)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2668, file: !188, line: 575, baseType: !192, size: 32, offset: 800)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2668, file: !188, line: 576, baseType: !752, size: 64, offset: 832)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2668, file: !188, line: 577, baseType: !192, size: 32, offset: 896)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2668, file: !188, line: 578, baseType: !192, size: 32, offset: 928)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2668, file: !188, line: 579, baseType: !752, size: 64, offset: 960)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2668, file: !188, line: 580, baseType: !192, size: 32, offset: 1024)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2668, file: !188, line: 581, baseType: !192, size: 32, offset: 1056)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2668, file: !188, line: 582, baseType: !192, size: 32, offset: 1088)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2668, file: !188, line: 583, baseType: !192, size: 32, offset: 1120)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2668, file: !188, line: 584, baseType: !192, size: 32, offset: 1152)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2668, file: !188, line: 585, baseType: !192, size: 32, offset: 1184)
!2704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2705, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2705 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2706 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2707, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2708, retainedTypes: !2724, splitDebugInlining: false, nameTableKind: None)
!2707 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2708 = !{!2709, !2716, !2720}
!2709 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2710, line: 38, baseType: !32, size: 32, elements: !2711)
!2710 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2711 = !{!2712, !2713, !2714, !2715}
!2712 = !DIEnumerator(name: "HAL_OK", value: 0)
!2713 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2714 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2715 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2716 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !725, line: 184, baseType: !32, size: 32, elements: !2717)
!2717 = !{!2718, !2719}
!2718 = !DIEnumerator(name: "RESET", value: 0)
!2719 = !DIEnumerator(name: "SET", value: 1)
!2720 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !725, line: 190, baseType: !32, size: 32, elements: !2721)
!2721 = !{!2722, !2723}
!2722 = !DIEnumerator(name: "DISABLE", value: 0)
!2723 = !DIEnumerator(name: "ENABLE", value: 1)
!2724 = !{!2725, !142, !2763, !1369, !131, !1367, !104}
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !188, line: 586, baseType: !2727)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 550, size: 1216, elements: !2728)
!2728 = !{!2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2727, file: !188, line: 552, baseType: !192, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2727, file: !188, line: 553, baseType: !192, size: 32, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2727, file: !188, line: 554, baseType: !192, size: 32, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2727, file: !188, line: 555, baseType: !192, size: 32, offset: 96)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2727, file: !188, line: 556, baseType: !192, size: 32, offset: 128)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2727, file: !188, line: 557, baseType: !192, size: 32, offset: 160)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2727, file: !188, line: 558, baseType: !192, size: 32, offset: 192)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2727, file: !188, line: 559, baseType: !142, size: 32, offset: 224)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2727, file: !188, line: 560, baseType: !192, size: 32, offset: 256)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2727, file: !188, line: 561, baseType: !192, size: 32, offset: 288)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2727, file: !188, line: 562, baseType: !752, size: 64, offset: 320)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2727, file: !188, line: 563, baseType: !192, size: 32, offset: 384)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2727, file: !188, line: 564, baseType: !192, size: 32, offset: 416)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2727, file: !188, line: 565, baseType: !192, size: 32, offset: 448)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2727, file: !188, line: 566, baseType: !142, size: 32, offset: 480)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2727, file: !188, line: 567, baseType: !192, size: 32, offset: 512)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2727, file: !188, line: 568, baseType: !192, size: 32, offset: 544)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2727, file: !188, line: 569, baseType: !752, size: 64, offset: 576)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2727, file: !188, line: 570, baseType: !192, size: 32, offset: 640)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2727, file: !188, line: 571, baseType: !192, size: 32, offset: 672)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2727, file: !188, line: 572, baseType: !192, size: 32, offset: 704)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2727, file: !188, line: 573, baseType: !142, size: 32, offset: 736)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2727, file: !188, line: 574, baseType: !192, size: 32, offset: 768)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2727, file: !188, line: 575, baseType: !192, size: 32, offset: 800)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2727, file: !188, line: 576, baseType: !752, size: 64, offset: 832)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2727, file: !188, line: 577, baseType: !192, size: 32, offset: 896)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2727, file: !188, line: 578, baseType: !192, size: 32, offset: 928)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2727, file: !188, line: 579, baseType: !752, size: 64, offset: 960)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2727, file: !188, line: 580, baseType: !192, size: 32, offset: 1024)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2727, file: !188, line: 581, baseType: !192, size: 32, offset: 1056)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2727, file: !188, line: 582, baseType: !192, size: 32, offset: 1088)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2727, file: !188, line: 583, baseType: !192, size: 32, offset: 1120)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2727, file: !188, line: 584, baseType: !192, size: 32, offset: 1152)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2727, file: !188, line: 585, baseType: !192, size: 32, offset: 1184)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !188, line: 544, baseType: !2765)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 540, size: 64, elements: !2766)
!2766 = !{!2767, !2768}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2765, file: !188, line: 542, baseType: !192, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2765, file: !188, line: 543, baseType: !192, size: 32, offset: 32)
!2769 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2770, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2771, retainedTypes: !2772, splitDebugInlining: false, nameTableKind: None)
!2770 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2771 = !{!724}
!2772 = !{!2773, !142, !2781, !2787, !2798}
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !415, line: 770, baseType: !2775)
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 764, size: 128, elements: !2776)
!2776 = !{!2777, !2778, !2779, !2780}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2775, file: !415, line: 766, baseType: !192, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2775, file: !415, line: 767, baseType: !192, size: 32, offset: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2775, file: !415, line: 768, baseType: !192, size: 32, offset: 64)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2775, file: !415, line: 769, baseType: !419, size: 32, offset: 96)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !188, line: 544, baseType: !2783)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 540, size: 64, elements: !2784)
!2784 = !{!2785, !2786}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2783, file: !188, line: 542, baseType: !192, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2783, file: !188, line: 543, baseType: !192, size: 32, offset: 32)
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !188, line: 407, baseType: !2789)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 398, size: 224, elements: !2790)
!2790 = !{!2791, !2792, !2793, !2794, !2795, !2796, !2797}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2789, file: !188, line: 400, baseType: !192, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2789, file: !188, line: 401, baseType: !192, size: 32, offset: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2789, file: !188, line: 402, baseType: !192, size: 32, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2789, file: !188, line: 403, baseType: !192, size: 32, offset: 96)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2789, file: !188, line: 404, baseType: !192, size: 32, offset: 128)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2789, file: !188, line: 405, baseType: !192, size: 32, offset: 160)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2789, file: !188, line: 406, baseType: !192, size: 32, offset: 192)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !188, line: 586, baseType: !2800)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 550, size: 1216, elements: !2801)
!2801 = !{!2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2800, file: !188, line: 552, baseType: !192, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2800, file: !188, line: 553, baseType: !192, size: 32, offset: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2800, file: !188, line: 554, baseType: !192, size: 32, offset: 64)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2800, file: !188, line: 555, baseType: !192, size: 32, offset: 96)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2800, file: !188, line: 556, baseType: !192, size: 32, offset: 128)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2800, file: !188, line: 557, baseType: !192, size: 32, offset: 160)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2800, file: !188, line: 558, baseType: !192, size: 32, offset: 192)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2800, file: !188, line: 559, baseType: !142, size: 32, offset: 224)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2800, file: !188, line: 560, baseType: !192, size: 32, offset: 256)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2800, file: !188, line: 561, baseType: !192, size: 32, offset: 288)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2800, file: !188, line: 562, baseType: !752, size: 64, offset: 320)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2800, file: !188, line: 563, baseType: !192, size: 32, offset: 384)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2800, file: !188, line: 564, baseType: !192, size: 32, offset: 416)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2800, file: !188, line: 565, baseType: !192, size: 32, offset: 448)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2800, file: !188, line: 566, baseType: !142, size: 32, offset: 480)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2800, file: !188, line: 567, baseType: !192, size: 32, offset: 512)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2800, file: !188, line: 568, baseType: !192, size: 32, offset: 544)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2800, file: !188, line: 569, baseType: !752, size: 64, offset: 576)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2800, file: !188, line: 570, baseType: !192, size: 32, offset: 640)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2800, file: !188, line: 571, baseType: !192, size: 32, offset: 672)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2800, file: !188, line: 572, baseType: !192, size: 32, offset: 704)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2800, file: !188, line: 573, baseType: !142, size: 32, offset: 736)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2800, file: !188, line: 574, baseType: !192, size: 32, offset: 768)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2800, file: !188, line: 575, baseType: !192, size: 32, offset: 800)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2800, file: !188, line: 576, baseType: !752, size: 64, offset: 832)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2800, file: !188, line: 577, baseType: !192, size: 32, offset: 896)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2800, file: !188, line: 578, baseType: !192, size: 32, offset: 928)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2800, file: !188, line: 579, baseType: !752, size: 64, offset: 960)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2800, file: !188, line: 580, baseType: !192, size: 32, offset: 1024)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2800, file: !188, line: 581, baseType: !192, size: 32, offset: 1056)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2800, file: !188, line: 582, baseType: !192, size: 32, offset: 1088)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2800, file: !188, line: 583, baseType: !192, size: 32, offset: 1120)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2800, file: !188, line: 584, baseType: !192, size: 32, offset: 1152)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2800, file: !188, line: 585, baseType: !192, size: 32, offset: 1184)
!2836 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2837, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2838, splitDebugInlining: false, nameTableKind: None)
!2837 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2838 = !{!104, !259}
!2839 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2840, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2841, retainedTypes: !175, splitDebugInlining: false, nameTableKind: None)
!2840 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2841 = !{!2842, !2849, !30}
!2842 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2843, line: 14, baseType: !32, size: 32, elements: !2844)
!2843 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2844 = !{!2845, !2846, !2847, !2848}
!2845 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2846 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2847 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2848 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2849 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2843, line: 42, baseType: !32, size: 32, elements: !2850)
!2850 = !{!2851, !2852, !2853, !2854, !2855, !2856}
!2851 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2852 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2853 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2854 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2855 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2856 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2857 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2858, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !175, splitDebugInlining: false, nameTableKind: None)
!2858 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2859 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2860, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2861, splitDebugInlining: false, nameTableKind: None)
!2860 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2861 = !{!22, !104, !103}
!2862 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2863, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !175, splitDebugInlining: false, nameTableKind: None)
!2863 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!2864 = !{!"Ubuntu clang version 14.0.6"}
!2865 = !{i32 7, !"Dwarf Version", i32 4}
!2866 = !{i32 2, !"Debug Info Version", i32 3}
!2867 = !{i32 1, !"wchar_size", i32 4}
!2868 = !{i32 1, !"min_enum_size", i32 4}
!2869 = !{i32 1, !"branch-target-enforcement", i32 0}
!2870 = !{i32 1, !"sign-return-address", i32 0}
!2871 = !{i32 1, !"sign-return-address-all", i32 0}
!2872 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2873 = !{i32 7, !"frame-pointer", i32 2}
!2874 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2875, file: !2875, line: 26, type: !2876, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !381)
!2875 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2876 = !DISubroutineType(types: !2877)
!2877 = !{null}
!2878 = !DILocation(line: 28, column: 1, scope: !2874)
!2879 = !{i64 2155360452, i64 2155360472, i64 2155360535}
!2880 = !DILocation(line: 29, column: 1, scope: !2874)
!2881 = !{i64 2155360867, i64 2155360887, i64 2155360950}
!2882 = !DILocation(line: 30, column: 1, scope: !2874)
!2883 = !{i64 2155361286, i64 2155361306, i64 2155361369}
!2884 = !DILocation(line: 31, column: 1, scope: !2874)
!2885 = !{i64 2155361705, i64 2155361725, i64 2155361788}
!2886 = !DILocation(line: 33, column: 1, scope: !2874)
!2887 = !{i64 2155361997, i64 2155362017, i64 2155362080}
!2888 = !DILocation(line: 35, column: 1, scope: !2874)
!2889 = !{i64 2155362322, i64 2155362342, i64 2155362405}
!2890 = !DILocation(line: 50, column: 1, scope: !2874)
!2891 = !{i64 2155362749, i64 2155362769, i64 2155362832}
!2892 = !DILocation(line: 54, column: 1, scope: !2874)
!2893 = !{i64 2155367249, i64 2155367269, i64 2155367332}
!2894 = !DILocation(line: 61, column: 1, scope: !2874)
!2895 = !{i64 2155367566, i64 2155367586, i64 2155367649}
!2896 = !DILocation(line: 63, column: 1, scope: !2874)
!2897 = !{i64 2155367946, i64 2155367966, i64 2155368029}
!2898 = !DILocation(line: 64, column: 1, scope: !2874)
!2899 = !{i64 2155368468, i64 2155368488, i64 2155368551}
!2900 = !DILocation(line: 65, column: 1, scope: !2874)
!2901 = !{i64 2155368966, i64 2155368986, i64 2155369049}
!2902 = !DILocation(line: 66, column: 1, scope: !2874)
!2903 = !{i64 2155369448, i64 2155369468, i64 2155369531}
!2904 = !DILocation(line: 67, column: 1, scope: !2874)
!2905 = !{i64 2155369955, i64 2155369975, i64 2155370038}
!2906 = !DILocation(line: 68, column: 1, scope: !2874)
!2907 = !{i64 2155370443, i64 2155370463, i64 2155370526}
!2908 = !DILocation(line: 70, column: 1, scope: !2874)
!2909 = !{i64 2155370911, i64 2155370931, i64 2155370994}
!2910 = !DILocation(line: 71, column: 1, scope: !2874)
!2911 = !{i64 2155371353, i64 2155371373, i64 2155371436}
!2912 = !DILocation(line: 72, column: 1, scope: !2874)
!2913 = !{i64 2155371811, i64 2155371831, i64 2155371894}
!2914 = !DILocation(line: 79, column: 1, scope: !2874)
!2915 = !{i64 2155372265, i64 2155372285, i64 2155372348}
!2916 = !DILocation(line: 80, column: 1, scope: !2874)
!2917 = !{i64 2155372776, i64 2155372796, i64 2155372859}
!2918 = !DILocation(line: 82, column: 1, scope: !2874)
!2919 = !{i64 2155373267, i64 2155373287, i64 2155373350}
!2920 = !DILocation(line: 97, column: 1, scope: !2874)
!2921 = !{i64 2155373604, i64 2155373624, i64 2155373687}
!2922 = !DILocation(line: 99, column: 1, scope: !2874)
!2923 = !{i64 2155373822, i64 2155373842, i64 2155373905}
!2924 = !DILocation(line: 102, column: 1, scope: !2874)
!2925 = !{i64 2155374079, i64 2155374099, i64 2155374162}
!2926 = !DILocation(line: 105, column: 1, scope: !2874)
!2927 = !{i64 2155374319, i64 2155374339, i64 2155374402}
!2928 = !DILocation(line: 115, column: 1, scope: !2874)
!2929 = !{i64 2155374658, i64 2155374678, i64 2155374741}
!2930 = !DILocation(line: 118, column: 1, scope: !2874)
!2931 = !{i64 2155375002, i64 2155375022, i64 2155375085}
!2932 = !DILocation(line: 32, column: 1, scope: !2933)
!2933 = !DILexicalBlockFile(scope: !2874, file: !2934, discriminator: 0)
!2934 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2935 = !{i64 2155375358, i64 2155375378, i64 2155375441}
!2936 = !DILocation(line: 33, column: 1, scope: !2933)
!2937 = !{i64 2155375870, i64 2155375890, i64 2155375953}
!2938 = !DILocation(line: 53, column: 1, scope: !2933)
!2939 = !{i64 2155376378, i64 2155376398, i64 2155376461}
!2940 = !DILocation(line: 54, column: 1, scope: !2933)
!2941 = !{i64 2155380857, i64 2155380877, i64 2155380940}
!2942 = !DILocation(line: 55, column: 1, scope: !2933)
!2943 = !{i64 2155381275, i64 2155381295, i64 2155381358}
!2944 = !DILocation(line: 56, column: 1, scope: !2933)
!2945 = !{i64 2155381693, i64 2155381713, i64 2155381776}
!2946 = !DILocation(line: 57, column: 1, scope: !2933)
!2947 = !{i64 2155382111, i64 2155382131, i64 2155382194}
!2948 = !DILocation(line: 58, column: 1, scope: !2933)
!2949 = !{i64 2155382529, i64 2155382549, i64 2155382612}
!2950 = !DILocation(line: 59, column: 1, scope: !2933)
!2951 = !{i64 2155382947, i64 2155382967, i64 2155383030}
!2952 = !DILocation(line: 60, column: 1, scope: !2933)
!2953 = !{i64 2155383371, i64 2155383391, i64 2155383454}
!2954 = !DILocation(line: 61, column: 1, scope: !2933)
!2955 = !{i64 2155383688, i64 2155383708, i64 2155383771}
!2956 = !DILocation(line: 70, column: 1, scope: !2933)
!2957 = !{i64 2155383917, i64 2155383937, i64 2155384000}
!2958 = !DILocation(line: 72, column: 1, scope: !2933)
!2959 = !{i64 2155384249, i64 2155384269, i64 2155384332}
!2960 = !DILocation(line: 73, column: 1, scope: !2933)
!2961 = !{i64 2155384699, i64 2155384719, i64 2155384782}
!2962 = !DILocation(line: 74, column: 1, scope: !2933)
!2963 = !{i64 2155385149, i64 2155385169, i64 2155385232}
!2964 = !DILocation(line: 75, column: 1, scope: !2933)
!2965 = !{i64 2155385599, i64 2155385619, i64 2155385682}
!2966 = !DILocation(line: 76, column: 1, scope: !2933)
!2967 = !{i64 2155386049, i64 2155386069, i64 2155386132}
!2968 = !DILocation(line: 77, column: 1, scope: !2933)
!2969 = !{i64 2155386499, i64 2155386519, i64 2155386582}
!2970 = !DILocation(line: 78, column: 1, scope: !2933)
!2971 = !{i64 2155386949, i64 2155386969, i64 2155387032}
!2972 = !DILocation(line: 79, column: 1, scope: !2933)
!2973 = !{i64 2155387399, i64 2155387419, i64 2155387482}
!2974 = !DILocation(line: 80, column: 1, scope: !2933)
!2975 = !{i64 2155387852, i64 2155387872, i64 2155387935}
!2976 = !DILocation(line: 84, column: 1, scope: !2933)
!2977 = !{i64 2155388184, i64 2155388204, i64 2155388267}
!2978 = !DILocation(line: 91, column: 1, scope: !2933)
!2979 = !{i64 2155388581, i64 2155388601, i64 2155388664}
!2980 = !DILocation(line: 93, column: 1, scope: !2933)
!2981 = !{i64 2155388948, i64 2155388968, i64 2155389031}
!2982 = !DILocation(line: 106, column: 1, scope: !2933)
!2983 = !{i64 2155389218, i64 2155389238, i64 2155389301}
!2984 = !DILocation(line: 11, column: 1, scope: !2985)
!2985 = !DILexicalBlockFile(scope: !2874, file: !2986, discriminator: 0)
!2986 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2987 = distinct !DISubprogram(name: "ping_ipm_callback", scope: !170, file: !170, line: 14, type: !150, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2988)
!2988 = !{!2989, !2990, !2991, !2992}
!2989 = !DILocalVariable(name: "dev", arg: 1, scope: !2987, file: !170, line: 14, type: !115)
!2990 = !DILocalVariable(name: "context", arg: 2, scope: !2987, file: !170, line: 14, type: !104)
!2991 = !DILocalVariable(name: "id", arg: 3, scope: !2987, file: !170, line: 15, type: !142)
!2992 = !DILocalVariable(name: "data", arg: 4, scope: !2987, file: !170, line: 15, type: !152)
!2993 = !DILocation(line: 0, scope: !2987)
!2994 = !DILocation(line: 17, column: 14, scope: !2987)
!2995 = !DILocation(line: 17, column: 13, scope: !2987)
!2996 = !DILocation(line: 17, column: 11, scope: !2987)
!2997 = !DILocation(line: 19, column: 2, scope: !2987)
!2998 = !DILocation(line: 21, column: 10, scope: !2987)
!2999 = !DILocation(line: 22, column: 15, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2987, file: !170, line: 22, column: 6)
!3001 = !DILocation(line: 22, column: 6, scope: !2987)
!3002 = !DILocation(line: 24, column: 3, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !3000, file: !170, line: 22, column: 22)
!3004 = !DILocation(line: 25, column: 2, scope: !3003)
!3005 = !DILocation(line: 26, column: 1, scope: !2987)
!3006 = distinct !DISubprogram(name: "ipm_send", scope: !3007, file: !3007, line: 24, type: !113, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3008)
!3007 = !DIFile(filename: "zephyr/include/generated/syscalls/ipm.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!3008 = !{!3009, !3010, !3011, !3012, !3013}
!3009 = !DILocalVariable(name: "ipmdev", arg: 1, scope: !3006, file: !3007, line: 24, type: !115)
!3010 = !DILocalVariable(name: "wait", arg: 2, scope: !3006, file: !3007, line: 24, type: !103)
!3011 = !DILocalVariable(name: "id", arg: 3, scope: !3006, file: !3007, line: 24, type: !142)
!3012 = !DILocalVariable(name: "data", arg: 4, scope: !3006, file: !3007, line: 24, type: !13)
!3013 = !DILocalVariable(name: "size", arg: 5, scope: !3006, file: !3007, line: 24, type: !103)
!3014 = !DILocation(line: 0, scope: !3006)
!3015 = !DILocation(line: 36, column: 2, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3006, file: !3007, line: 36, column: 2)
!3017 = !{i64 2155270965}
!3018 = !DILocation(line: 37, column: 9, scope: !3006)
!3019 = !DILocation(line: 37, column: 2, scope: !3006)
!3020 = distinct !DISubprogram(name: "z_impl_ipm_send", scope: !108, file: !108, line: 147, type: !113, scopeLine: 150, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3021)
!3021 = !{!3022, !3023, !3024, !3025, !3026, !3027}
!3022 = !DILocalVariable(name: "ipmdev", arg: 1, scope: !3020, file: !108, line: 147, type: !115)
!3023 = !DILocalVariable(name: "wait", arg: 2, scope: !3020, file: !108, line: 147, type: !103)
!3024 = !DILocalVariable(name: "id", arg: 3, scope: !3020, file: !108, line: 148, type: !142)
!3025 = !DILocalVariable(name: "data", arg: 4, scope: !3020, file: !108, line: 149, type: !13)
!3026 = !DILocalVariable(name: "size", arg: 5, scope: !3020, file: !108, line: 149, type: !103)
!3027 = !DILocalVariable(name: "api", scope: !3020, file: !108, line: 151, type: !105)
!3028 = !DILocation(line: 0, scope: !3020)
!3029 = !DILocation(line: 152, column: 42, scope: !3020)
!3030 = !DILocation(line: 154, column: 14, scope: !3020)
!3031 = !DILocation(line: 154, column: 9, scope: !3020)
!3032 = !DILocation(line: 154, column: 2, scope: !3020)
!3033 = distinct !DISubprogram(name: "main", scope: !170, file: !170, line: 28, type: !2876, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3034)
!3034 = !{!3035, !3036}
!3035 = !DILocalVariable(name: "first_message", scope: !3033, file: !170, line: 30, type: !103)
!3036 = !DILocalVariable(name: "ipm", scope: !3033, file: !170, line: 33, type: !115)
!3037 = !DILocation(line: 0, scope: !3033)
!3038 = !DILocation(line: 35, column: 2, scope: !3033)
!3039 = !DILocation(line: 40, column: 3, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !170, line: 39, column: 38)
!3041 = distinct !DILexicalBlock(scope: !3033, file: !170, line: 39, column: 6)
!3042 = !DILocation(line: 41, column: 3, scope: !3040)
!3043 = distinct !{!3043, !3042, !3044}
!3044 = !DILocation(line: 42, column: 3, scope: !3040)
!3045 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !177, file: !177, line: 45, type: !179, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !3046)
!3046 = !{!3047}
!3047 = !DILocalVariable(name: "c", arg: 1, scope: !3045, file: !177, line: 45, type: !103)
!3048 = !DILocation(line: 0, scope: !3045)
!3049 = !DILocation(line: 50, column: 2, scope: !3045)
!3050 = distinct !DISubprogram(name: "__printk_hook_install", scope: !177, file: !177, line: 63, type: !3051, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !3053)
!3051 = !DISubroutineType(types: !3052)
!3052 = !{null, !178}
!3053 = !{!3054}
!3054 = !DILocalVariable(name: "fn", arg: 1, scope: !3050, file: !177, line: 63, type: !178)
!3055 = !DILocation(line: 0, scope: !3050)
!3056 = !DILocation(line: 65, column: 12, scope: !3050)
!3057 = !DILocation(line: 66, column: 1, scope: !3050)
!3058 = distinct !DISubprogram(name: "__printk_get_hook", scope: !177, file: !177, line: 76, type: !3059, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !381)
!3059 = !DISubroutineType(types: !3060)
!3060 = !{!104}
!3061 = !DILocation(line: 78, column: 9, scope: !3058)
!3062 = !DILocation(line: 78, column: 2, scope: !3058)
!3063 = distinct !DISubprogram(name: "vprintk", scope: !177, file: !177, line: 113, type: !3064, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !3073)
!3064 = !DISubroutineType(types: !3065)
!3065 = !{null, !121, !3066}
!3066 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3067, line: 99, baseType: !3068)
!3067 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3068 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3067, line: 40, baseType: !3069)
!3069 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !177, baseType: !3070)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3071)
!3071 = !{!3072}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3070, file: !177, line: 79, baseType: !104, size: 32)
!3073 = !{!3074, !3075, !3076}
!3074 = !DILocalVariable(name: "fmt", arg: 1, scope: !3063, file: !177, line: 113, type: !121)
!3075 = !DILocalVariable(name: "ap", arg: 2, scope: !3063, file: !177, line: 113, type: !3066)
!3076 = !DILocalVariable(name: "ctx", scope: !3077, file: !177, line: 121, type: !3079)
!3077 = distinct !DILexicalBlock(scope: !3078, file: !177, line: 120, column: 27)
!3078 = distinct !DILexicalBlock(scope: !3063, file: !177, line: 120, column: 6)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !177, line: 81, size: 32, elements: !3080)
!3080 = !{!3081, !3082}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3079, file: !177, line: 85, baseType: !32, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3079, file: !177, line: 86, baseType: !3083, offset: 32)
!3083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, elements: !3084)
!3084 = !{!3085}
!3085 = !DISubrange(count: 0)
!3086 = !DILocation(line: 0, scope: !3063)
!3087 = !DILocation(line: 148, column: 3, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3078, file: !177, line: 138, column: 9)
!3089 = !DILocation(line: 155, column: 1, scope: !3063)
!3090 = distinct !DISubprogram(name: "char_out", scope: !177, file: !177, line: 107, type: !3091, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !3093)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!103, !103, !104}
!3093 = !{!3094, !3095}
!3094 = !DILocalVariable(name: "c", arg: 1, scope: !3090, file: !177, line: 107, type: !103)
!3095 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3090, file: !177, line: 107, type: !104)
!3096 = !DILocation(line: 0, scope: !3090)
!3097 = !DILocation(line: 110, column: 9, scope: !3090)
!3098 = !DILocation(line: 110, column: 2, scope: !3090)
!3099 = distinct !DISubprogram(name: "cbvprintf", scope: !3100, file: !3100, line: 739, type: !3101, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !3107)
!3100 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3101 = !DISubroutineType(types: !3102)
!3102 = !{!103, !3103, !104, !121, !3066}
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3100, line: 297, baseType: !3104)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 32)
!3105 = !DISubroutineType(types: !3106)
!3106 = !{!103, null}
!3107 = !{!3108, !3109, !3110, !3111}
!3108 = !DILocalVariable(name: "out", arg: 1, scope: !3099, file: !3100, line: 739, type: !3103)
!3109 = !DILocalVariable(name: "ctx", arg: 2, scope: !3099, file: !3100, line: 739, type: !104)
!3110 = !DILocalVariable(name: "format", arg: 3, scope: !3099, file: !3100, line: 739, type: !121)
!3111 = !DILocalVariable(name: "ap", arg: 4, scope: !3099, file: !3100, line: 739, type: !3066)
!3112 = !DILocation(line: 0, scope: !3099)
!3113 = !DILocation(line: 741, column: 9, scope: !3099)
!3114 = !DILocation(line: 741, column: 2, scope: !3099)
!3115 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !177, file: !177, line: 157, type: !3116, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !3118)
!3116 = !DISubroutineType(types: !3117)
!3117 = !{null, !1054, !259}
!3118 = !{!3119, !3120, !3121}
!3119 = !DILocalVariable(name: "c", arg: 1, scope: !3115, file: !177, line: 157, type: !1054)
!3120 = !DILocalVariable(name: "n", arg: 2, scope: !3115, file: !177, line: 157, type: !259)
!3121 = !DILocalVariable(name: "i", scope: !3115, file: !177, line: 159, type: !259)
!3122 = !DILocation(line: 0, scope: !3115)
!3123 = !DILocation(line: 164, column: 16, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !177, line: 164, column: 2)
!3125 = distinct !DILexicalBlock(scope: !3115, file: !177, line: 164, column: 2)
!3126 = !DILocation(line: 164, column: 2, scope: !3125)
!3127 = !DILocation(line: 165, column: 3, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3124, file: !177, line: 164, column: 26)
!3129 = !DILocation(line: 165, column: 13, scope: !3128)
!3130 = !DILocation(line: 164, column: 22, scope: !3124)
!3131 = distinct !{!3131, !3126, !3132}
!3132 = !DILocation(line: 166, column: 2, scope: !3125)
!3133 = !DILocation(line: 171, column: 1, scope: !3115)
!3134 = distinct !DISubprogram(name: "printk", scope: !177, file: !177, line: 203, type: !3135, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !3137)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{null, !121, null}
!3137 = !{!3138, !3139}
!3138 = !DILocalVariable(name: "fmt", arg: 1, scope: !3134, file: !177, line: 203, type: !121)
!3139 = !DILocalVariable(name: "ap", scope: !3134, file: !177, line: 205, type: !3066)
!3140 = !DILocation(line: 0, scope: !3134)
!3141 = !DILocation(line: 205, column: 2, scope: !3134)
!3142 = !DILocation(line: 205, column: 10, scope: !3134)
!3143 = !DILocation(line: 207, column: 2, scope: !3134)
!3144 = !DILocation(line: 209, column: 2, scope: !3134)
!3145 = !DILocation(line: 211, column: 2, scope: !3134)
!3146 = !DILocation(line: 212, column: 1, scope: !3134)
!3147 = distinct !DISubprogram(name: "snprintk", scope: !177, file: !177, line: 239, type: !3148, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !3150)
!3148 = !DISubroutineType(types: !3149)
!3149 = !{!103, !1054, !259, !121, null}
!3150 = !{!3151, !3152, !3153, !3154, !3155}
!3151 = !DILocalVariable(name: "str", arg: 1, scope: !3147, file: !177, line: 239, type: !1054)
!3152 = !DILocalVariable(name: "size", arg: 2, scope: !3147, file: !177, line: 239, type: !259)
!3153 = !DILocalVariable(name: "fmt", arg: 3, scope: !3147, file: !177, line: 239, type: !121)
!3154 = !DILocalVariable(name: "ap", scope: !3147, file: !177, line: 241, type: !3066)
!3155 = !DILocalVariable(name: "ret", scope: !3147, file: !177, line: 242, type: !103)
!3156 = !DILocation(line: 0, scope: !3147)
!3157 = !DILocation(line: 241, column: 2, scope: !3147)
!3158 = !DILocation(line: 241, column: 10, scope: !3147)
!3159 = !DILocation(line: 244, column: 2, scope: !3147)
!3160 = !DILocation(line: 245, column: 8, scope: !3147)
!3161 = !DILocation(line: 246, column: 2, scope: !3147)
!3162 = !DILocation(line: 249, column: 1, scope: !3147)
!3163 = !DILocation(line: 248, column: 2, scope: !3147)
!3164 = distinct !DISubprogram(name: "vsnprintk", scope: !177, file: !177, line: 251, type: !3165, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !3167)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{!103, !1054, !259, !121, !3066}
!3167 = !{!3168, !3169, !3170, !3171, !3172}
!3168 = !DILocalVariable(name: "str", arg: 1, scope: !3164, file: !177, line: 251, type: !1054)
!3169 = !DILocalVariable(name: "size", arg: 2, scope: !3164, file: !177, line: 251, type: !259)
!3170 = !DILocalVariable(name: "fmt", arg: 3, scope: !3164, file: !177, line: 251, type: !121)
!3171 = !DILocalVariable(name: "ap", arg: 4, scope: !3164, file: !177, line: 251, type: !3066)
!3172 = !DILocalVariable(name: "ctx", scope: !3164, file: !177, line: 253, type: !3173)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !177, line: 217, size: 96, elements: !3174)
!3174 = !{!3175, !3176, !3177}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3173, file: !177, line: 218, baseType: !1054, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3173, file: !177, line: 219, baseType: !103, size: 32, offset: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3173, file: !177, line: 220, baseType: !103, size: 32, offset: 64)
!3178 = !DILocation(line: 0, scope: !3164)
!3179 = !DILocation(line: 253, column: 2, scope: !3164)
!3180 = !DILocation(line: 253, column: 21, scope: !3164)
!3181 = !DILocation(line: 253, column: 27, scope: !3164)
!3182 = !DILocation(line: 255, column: 2, scope: !3164)
!3183 = !DILocation(line: 257, column: 10, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3164, file: !177, line: 257, column: 6)
!3185 = !DILocation(line: 257, column: 22, scope: !3184)
!3186 = !DILocation(line: 257, column: 16, scope: !3184)
!3187 = !DILocation(line: 257, column: 6, scope: !3164)
!3188 = !DILocation(line: 258, column: 3, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3184, file: !177, line: 257, column: 27)
!3190 = !DILocation(line: 258, column: 18, scope: !3189)
!3191 = !DILocation(line: 259, column: 2, scope: !3189)
!3192 = !DILocation(line: 262, column: 1, scope: !3164)
!3193 = !DILocation(line: 261, column: 2, scope: !3164)
!3194 = distinct !DISubprogram(name: "str_out", scope: !177, file: !177, line: 223, type: !3195, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !3198)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!103, !103, !3197}
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 32)
!3198 = !{!3199, !3200}
!3199 = !DILocalVariable(name: "c", arg: 1, scope: !3194, file: !177, line: 223, type: !103)
!3200 = !DILocalVariable(name: "ctx", arg: 2, scope: !3194, file: !177, line: 223, type: !3197)
!3201 = !DILocation(line: 0, scope: !3194)
!3202 = !DILocation(line: 225, column: 11, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3194, file: !177, line: 225, column: 6)
!3204 = !DILocation(line: 225, column: 15, scope: !3203)
!3205 = !DILocation(line: 0, scope: !3203)
!3206 = !DILocation(line: 225, column: 23, scope: !3203)
!3207 = !DILocation(line: 225, column: 45, scope: !3203)
!3208 = !DILocation(line: 225, column: 37, scope: !3203)
!3209 = !DILocation(line: 225, column: 6, scope: !3194)
!3210 = !DILocation(line: 226, column: 8, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3203, file: !177, line: 225, column: 50)
!3212 = !DILocation(line: 226, column: 13, scope: !3211)
!3213 = !DILocation(line: 227, column: 3, scope: !3211)
!3214 = !DILocation(line: 230, column: 29, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3194, file: !177, line: 230, column: 6)
!3216 = !DILocation(line: 230, column: 17, scope: !3215)
!3217 = !DILocation(line: 230, column: 6, scope: !3194)
!3218 = !DILocation(line: 231, column: 22, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3215, file: !177, line: 230, column: 34)
!3220 = !DILocation(line: 231, column: 3, scope: !3219)
!3221 = !DILocation(line: 231, column: 26, scope: !3219)
!3222 = !DILocation(line: 232, column: 2, scope: !3219)
!3223 = !DILocation(line: 233, column: 28, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3215, file: !177, line: 232, column: 9)
!3225 = !DILocation(line: 233, column: 22, scope: !3224)
!3226 = !DILocation(line: 233, column: 3, scope: !3224)
!3227 = !DILocation(line: 233, column: 26, scope: !3224)
!3228 = !DILocation(line: 237, column: 1, scope: !3194)
!3229 = distinct !DISubprogram(name: "z_thread_entry", scope: !3230, file: !3230, line: 30, type: !3231, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !3238)
!3230 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3231 = !DISubroutineType(types: !3232)
!3232 = !{null, !3233, !104, !104, !104}
!3233 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3234, line: 46, baseType: !3235)
!3234 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 32)
!3236 = !DISubroutineType(types: !3237)
!3237 = !{null, !104, !104, !104}
!3238 = !{!3239, !3240, !3241, !3242}
!3239 = !DILocalVariable(name: "entry", arg: 1, scope: !3229, file: !3230, line: 30, type: !3233)
!3240 = !DILocalVariable(name: "p1", arg: 2, scope: !3229, file: !3230, line: 31, type: !104)
!3241 = !DILocalVariable(name: "p2", arg: 3, scope: !3229, file: !3230, line: 31, type: !104)
!3242 = !DILocalVariable(name: "p3", arg: 4, scope: !3229, file: !3230, line: 31, type: !104)
!3243 = !DILocation(line: 0, scope: !3229)
!3244 = !DILocation(line: 36, column: 2, scope: !3229)
!3245 = !DILocation(line: 38, column: 17, scope: !3229)
!3246 = !DILocation(line: 38, column: 2, scope: !3229)
!3247 = !DILocation(line: 45, column: 2, scope: !3229)
!3248 = distinct !DISubprogram(name: "k_current_get", scope: !366, file: !366, line: 530, type: !3249, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !381)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{!3251}
!3251 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !270, line: 347, baseType: !3252)
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 32)
!3253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !270, line: 245, size: 1024, elements: !3254)
!3254 = !{!3255, !3313, !3325, !3326, !3327, !3328, !3334, !3347}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3253, file: !270, line: 247, baseType: !3256, size: 384)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !270, line: 57, size: 384, elements: !3257)
!3257 = !{!3258, !3282, !3289, !3290, !3291, !3300, !3301, !3302}
!3258 = !DIDerivedType(tag: DW_TAG_member, scope: !3256, file: !270, line: 60, baseType: !3259, size: 64)
!3259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3256, file: !270, line: 60, size: 64, elements: !3260)
!3260 = !{!3261, !3276}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3259, file: !270, line: 61, baseType: !3262, size: 64)
!3262 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !280, line: 49, baseType: !3263)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !280, line: 37, size: 64, elements: !3264)
!3264 = !{!3265, !3271}
!3265 = !DIDerivedType(tag: DW_TAG_member, scope: !3263, file: !280, line: 38, baseType: !3266, size: 32)
!3266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3263, file: !280, line: 38, size: 32, elements: !3267)
!3267 = !{!3268, !3270}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3266, file: !280, line: 39, baseType: !3269, size: 32)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 32)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3266, file: !280, line: 40, baseType: !3269, size: 32)
!3271 = !DIDerivedType(tag: DW_TAG_member, scope: !3263, file: !280, line: 42, baseType: !3272, size: 32, offset: 32)
!3272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3263, file: !280, line: 42, size: 32, elements: !3273)
!3273 = !{!3274, !3275}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3272, file: !280, line: 43, baseType: !3269, size: 32)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3272, file: !280, line: 44, baseType: !3269, size: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3259, file: !270, line: 62, baseType: !3277, size: 64)
!3277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !296, line: 49, size: 64, elements: !3278)
!3278 = !{!3279}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3277, file: !296, line: 50, baseType: !3280, size: 64)
!3280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3281, size: 64, elements: !301)
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 32)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3256, file: !270, line: 68, baseType: !3283, size: 32, offset: 64)
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !306, line: 233, baseType: !3285)
!3285 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !306, line: 231, size: 64, elements: !3286)
!3286 = !{!3287}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3285, file: !306, line: 232, baseType: !3288, size: 64)
!3288 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !280, line: 48, baseType: !3263)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3256, file: !270, line: 71, baseType: !131, size: 8, offset: 96)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3256, file: !270, line: 74, baseType: !131, size: 8, offset: 104)
!3291 = !DIDerivedType(tag: DW_TAG_member, scope: !3256, file: !270, line: 90, baseType: !3292, size: 16, offset: 112)
!3292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3256, file: !270, line: 90, size: 16, elements: !3293)
!3293 = !{!3294, !3299}
!3294 = !DIDerivedType(tag: DW_TAG_member, scope: !3292, file: !270, line: 91, baseType: !3295, size: 16)
!3295 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3292, file: !270, line: 91, size: 16, elements: !3296)
!3296 = !{!3297, !3298}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3295, file: !270, line: 96, baseType: !320, size: 8)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3295, file: !270, line: 97, baseType: !131, size: 8, offset: 8)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3292, file: !270, line: 100, baseType: !324, size: 16)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3256, file: !270, line: 107, baseType: !142, size: 32, offset: 128)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3256, file: !270, line: 127, baseType: !104, size: 32, offset: 160)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3256, file: !270, line: 131, baseType: !3303, size: 192, offset: 192)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !306, line: 244, size: 192, elements: !3304)
!3304 = !{!3305, !3306, !3312}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3303, file: !306, line: 245, baseType: !3262, size: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3303, file: !306, line: 246, baseType: !3307, size: 32, offset: 64)
!3307 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !306, line: 242, baseType: !3308)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3309, size: 32)
!3309 = !DISubroutineType(types: !3310)
!3310 = !{null, !3311}
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3303, file: !306, line: 249, baseType: !339, size: 64, offset: 128)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3253, file: !270, line: 250, baseType: !3314, size: 288, offset: 384)
!3314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !343, line: 25, size: 288, elements: !3315)
!3315 = !{!3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3314, file: !343, line: 26, baseType: !142, size: 32)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3314, file: !343, line: 27, baseType: !142, size: 32, offset: 32)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3314, file: !343, line: 28, baseType: !142, size: 32, offset: 64)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3314, file: !343, line: 29, baseType: !142, size: 32, offset: 96)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3314, file: !343, line: 30, baseType: !142, size: 32, offset: 128)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3314, file: !343, line: 31, baseType: !142, size: 32, offset: 160)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3314, file: !343, line: 32, baseType: !142, size: 32, offset: 192)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3314, file: !343, line: 33, baseType: !142, size: 32, offset: 224)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3314, file: !343, line: 34, baseType: !142, size: 32, offset: 256)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3253, file: !270, line: 253, baseType: !104, size: 32, offset: 672)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3253, file: !270, line: 256, baseType: !3284, size: 64, offset: 704)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3253, file: !270, line: 294, baseType: !103, size: 32, offset: 768)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3253, file: !270, line: 300, baseType: !3329, size: 96, offset: 800)
!3329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !270, line: 149, size: 96, elements: !3330)
!3330 = !{!3331, !3332, !3333}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3329, file: !270, line: 153, baseType: !22, size: 32)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3329, file: !270, line: 162, baseType: !259, size: 32, offset: 32)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3329, file: !270, line: 168, baseType: !259, size: 32, offset: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3253, file: !270, line: 325, baseType: !3335, size: 32, offset: 896)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 32)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !366, line: 5073, size: 160, elements: !3337)
!3337 = !{!3338, !3344, !3345}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3336, file: !366, line: 5074, baseType: !3339, size: 96)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !370, line: 56, size: 96, elements: !3340)
!3340 = !{!3341, !3342, !3343}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3339, file: !370, line: 57, baseType: !373, size: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3339, file: !370, line: 58, baseType: !104, size: 32, offset: 32)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3339, file: !370, line: 59, baseType: !259, size: 32, offset: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3336, file: !366, line: 5075, baseType: !3284, size: 64, offset: 96)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3336, file: !366, line: 5076, baseType: !3346, offset: 160)
!3346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !380, line: 43, elements: !381)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3253, file: !270, line: 343, baseType: !3348, size: 64, offset: 928)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !343, line: 60, size: 64, elements: !3349)
!3349 = !{!3350, !3351}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3348, file: !343, line: 63, baseType: !142, size: 32)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3348, file: !343, line: 66, baseType: !142, size: 32, offset: 32)
!3352 = !DILocation(line: 535, column: 9, scope: !3248)
!3353 = !DILocation(line: 535, column: 2, scope: !3248)
!3354 = distinct !DISubprogram(name: "k_thread_abort", scope: !3355, file: !3355, line: 188, type: !3356, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !3358)
!3355 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!3356 = !DISubroutineType(types: !3357)
!3357 = !{null, !3251}
!3358 = !{!3359}
!3359 = !DILocalVariable(name: "thread", arg: 1, scope: !3354, file: !3355, line: 188, type: !3251)
!3360 = !DILocation(line: 0, scope: !3354)
!3361 = !DILocation(line: 197, column: 2, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3354, file: !3355, line: 197, column: 2)
!3363 = !{i64 2155057717}
!3364 = !DILocation(line: 198, column: 2, scope: !3354)
!3365 = !DILocation(line: 199, column: 1, scope: !3354)
!3366 = distinct !DISubprogram(name: "z_current_get", scope: !3355, file: !3355, line: 173, type: !3249, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !381)
!3367 = !DILocation(line: 180, column: 2, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3366, file: !3355, line: 180, column: 2)
!3369 = !{i64 2155057649}
!3370 = !DILocation(line: 181, column: 9, scope: !3366)
!3371 = !DILocation(line: 181, column: 2, scope: !3366)
!3372 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2320, file: !2320, line: 1338, type: !3373, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !3381)
!3373 = !DISubroutineType(types: !3374)
!3374 = !{!103, !3103, !104, !121, !3375, !142}
!3375 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3067, line: 99, baseType: !3376)
!3376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3067, line: 40, baseType: !3377)
!3377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2320, baseType: !3378)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3379)
!3379 = !{!3380}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3378, file: !2320, baseType: !104, size: 32)
!3381 = !{!3382, !3383, !3384, !3385, !3386, !3387, !3391, !3392, !3393, !3395, !3400, !3445, !3448, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3460, !3461, !3462, !3466, !3469, !3471, !3474, !3475, !3476, !3481, !3487, !3490, !3494, !3500, !3504, !3507, !3509, !3512}
!3382 = !DILocalVariable(name: "out", arg: 1, scope: !3372, file: !2320, line: 1338, type: !3103)
!3383 = !DILocalVariable(name: "ctx", arg: 2, scope: !3372, file: !2320, line: 1338, type: !104)
!3384 = !DILocalVariable(name: "fp", arg: 3, scope: !3372, file: !2320, line: 1338, type: !121)
!3385 = !DILocalVariable(name: "ap", arg: 4, scope: !3372, file: !2320, line: 1339, type: !3375)
!3386 = !DILocalVariable(name: "flags", arg: 5, scope: !3372, file: !2320, line: 1339, type: !142)
!3387 = !DILocalVariable(name: "buf", scope: !3372, file: !2320, line: 1341, type: !3388)
!3388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 176, elements: !3389)
!3389 = !{!3390}
!3390 = !DISubrange(count: 22)
!3391 = !DILocalVariable(name: "count", scope: !3372, file: !2320, line: 1342, type: !259)
!3392 = !DILocalVariable(name: "sint", scope: !3372, file: !2320, line: 1343, type: !2339)
!3393 = !DILocalVariable(name: "tagged_ap", scope: !3372, file: !2320, line: 1345, type: !3394)
!3394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !134)
!3395 = !DILocalVariable(name: "rc", scope: !3396, file: !2320, line: 1377, type: !103)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !2320, line: 1377, column: 4)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !2320, line: 1376, column: 19)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1376, column: 7)
!3399 = distinct !DILexicalBlock(scope: !3372, file: !2320, line: 1375, column: 19)
!3400 = !DILocalVariable(name: "state", scope: !3399, file: !2320, line: 1395, type: !3401)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3372, file: !2320, line: 1392, size: 192, elements: !3402)
!3402 = !{!3403, !3413}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3401, file: !2320, line: 1393, baseType: !3404, size: 64)
!3404 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2320, line: 166, size: 64, elements: !3405)
!3405 = !{!3406, !3407, !3408, !3410, !3412}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3404, file: !2320, line: 168, baseType: !2339, size: 64)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3404, file: !2320, line: 171, baseType: !2342, size: 64)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3404, file: !2320, line: 174, baseType: !3409, size: 64)
!3409 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3404, file: !2320, line: 177, baseType: !3411, size: 64)
!3411 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3404, file: !2320, line: 180, baseType: !104, size: 32)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3401, file: !2320, line: 1394, baseType: !3414, size: 96, offset: 64)
!3414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2320, line: 189, size: 96, elements: !3415)
!3415 = !{!3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3440}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3414, file: !2320, line: 191, baseType: !134, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3414, file: !2320, line: 194, baseType: !134, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3414, file: !2320, line: 197, baseType: !134, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3414, file: !2320, line: 200, baseType: !134, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3414, file: !2320, line: 203, baseType: !134, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3414, file: !2320, line: 206, baseType: !134, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3414, file: !2320, line: 209, baseType: !134, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3414, file: !2320, line: 212, baseType: !134, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3414, file: !2320, line: 219, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3414, file: !2320, line: 222, baseType: !134, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3414, file: !2320, line: 229, baseType: !134, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3414, file: !2320, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3414, file: !2320, line: 238, baseType: !134, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3414, file: !2320, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3414, file: !2320, line: 244, baseType: !134, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3414, file: !2320, line: 247, baseType: !134, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3414, file: !2320, line: 252, baseType: !134, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3414, file: !2320, line: 257, baseType: !134, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3414, file: !2320, line: 260, baseType: !132, size: 8, offset: 24)
!3435 = !DIDerivedType(tag: DW_TAG_member, scope: !3414, file: !2320, line: 262, baseType: !3436, size: 32, offset: 32)
!3436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3414, file: !2320, line: 262, size: 32, elements: !3437)
!3437 = !{!3438, !3439}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3436, file: !2320, line: 267, baseType: !103, size: 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3436, file: !2320, line: 289, baseType: !103, size: 32)
!3440 = !DIDerivedType(tag: DW_TAG_member, scope: !3414, file: !2320, line: 292, baseType: !3441, size: 32, offset: 64)
!3441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3414, file: !2320, line: 292, size: 32, elements: !3442)
!3442 = !{!3443, !3444}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3441, file: !2320, line: 297, baseType: !103, size: 32)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3441, file: !2320, line: 306, baseType: !103, size: 32)
!3445 = !DILocalVariable(name: "conv", scope: !3399, file: !2320, line: 1400, type: !3446)
!3446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3447)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 32)
!3448 = !DILocalVariable(name: "value", scope: !3399, file: !2320, line: 1401, type: !3449)
!3449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3450)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 32)
!3451 = !DILocalVariable(name: "sp", scope: !3399, file: !2320, line: 1402, type: !121)
!3452 = !DILocalVariable(name: "width", scope: !3399, file: !2320, line: 1403, type: !103)
!3453 = !DILocalVariable(name: "precision", scope: !3399, file: !2320, line: 1404, type: !103)
!3454 = !DILocalVariable(name: "bps", scope: !3399, file: !2320, line: 1405, type: !121)
!3455 = !DILocalVariable(name: "bpe", scope: !3399, file: !2320, line: 1406, type: !121)
!3456 = !DILocalVariable(name: "sign", scope: !3399, file: !2320, line: 1407, type: !123)
!3457 = !DILocalVariable(name: "arg", scope: !3458, file: !2320, line: 1432, type: !103)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !2320, line: 1431, column: 24)
!3459 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1431, column: 7)
!3460 = !DILocalVariable(name: "specifier_cat", scope: !3399, file: !2320, line: 1468, type: !2319)
!3461 = !DILocalVariable(name: "length_mod", scope: !3399, file: !2320, line: 1470, type: !2327)
!3462 = !DILocalVariable(name: "rc", scope: !3463, file: !2320, line: 1575, type: !103)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !2320, line: 1575, column: 4)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !2320, line: 1574, column: 43)
!3465 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1574, column: 7)
!3466 = !DILocalVariable(name: "rc", scope: !3467, file: !2320, line: 1584, type: !103)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !2320, line: 1584, column: 4)
!3468 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1582, column: 28)
!3469 = !DILocalVariable(name: "len", scope: !3470, file: !2320, line: 1589, type: !259)
!3470 = distinct !DILexicalBlock(scope: !3468, file: !2320, line: 1586, column: 13)
!3471 = !DILocalVariable(name: "len", scope: !3472, file: !2320, line: 1641, type: !259)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !2320, line: 1640, column: 24)
!3473 = distinct !DILexicalBlock(scope: !3468, file: !2320, line: 1640, column: 8)
!3474 = !DILocalVariable(name: "nj_len", scope: !3399, file: !2320, line: 1722, type: !259)
!3475 = !DILocalVariable(name: "pad_len", scope: !3399, file: !2320, line: 1723, type: !103)
!3476 = !DILocalVariable(name: "pad", scope: !3477, file: !2320, line: 1751, type: !123)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !2320, line: 1750, column: 26)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !2320, line: 1750, column: 8)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !2320, line: 1747, column: 18)
!3480 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1747, column: 7)
!3481 = !DILocalVariable(name: "rc", scope: !3482, file: !2320, line: 1758, type: !103)
!3482 = distinct !DILexicalBlock(scope: !3483, file: !2320, line: 1758, column: 7)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !2320, line: 1757, column: 21)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !2320, line: 1757, column: 10)
!3485 = distinct !DILexicalBlock(scope: !3486, file: !2320, line: 1756, column: 26)
!3486 = distinct !DILexicalBlock(scope: !3477, file: !2320, line: 1756, column: 9)
!3487 = !DILocalVariable(name: "rc", scope: !3488, file: !2320, line: 1765, type: !103)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !2320, line: 1765, column: 6)
!3489 = distinct !DILexicalBlock(scope: !3477, file: !2320, line: 1764, column: 25)
!3490 = !DILocalVariable(name: "rc", scope: !3491, file: !2320, line: 1774, type: !103)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !2320, line: 1774, column: 4)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !2320, line: 1773, column: 18)
!3493 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1773, column: 7)
!3494 = !DILocalVariable(name: "rc", scope: !3495, file: !2320, line: 1819, type: !103)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !2320, line: 1819, column: 5)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !2320, line: 1818, column: 44)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !2320, line: 1818, column: 8)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !2320, line: 1817, column: 10)
!3499 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1777, column: 7)
!3500 = !DILocalVariable(name: "rc", scope: !3501, file: !2320, line: 1823, type: !103)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !2320, line: 1823, column: 5)
!3502 = distinct !DILexicalBlock(scope: !3503, file: !2320, line: 1822, column: 26)
!3503 = distinct !DILexicalBlock(scope: !3498, file: !2320, line: 1822, column: 8)
!3504 = !DILocalVariable(name: "rc", scope: !3505, file: !2320, line: 1828, type: !103)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !2320, line: 1828, column: 5)
!3506 = distinct !DILexicalBlock(scope: !3498, file: !2320, line: 1827, column: 26)
!3507 = !DILocalVariable(name: "rc", scope: !3508, file: !2320, line: 1831, type: !103)
!3508 = distinct !DILexicalBlock(scope: !3498, file: !2320, line: 1831, column: 4)
!3509 = !DILocalVariable(name: "rc", scope: !3510, file: !2320, line: 1836, type: !103)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !2320, line: 1836, column: 4)
!3511 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1835, column: 21)
!3512 = !DILabel(scope: !3468, name: "prec_int_pad0", file: !2320, line: 1634)
!3513 = !DILocation(line: 0, scope: !3372)
!3514 = !DILocation(line: 1341, column: 2, scope: !3372)
!3515 = !DILocation(line: 1341, column: 7, scope: !3372)
!3516 = !DILocation(line: 1375, column: 2, scope: !3372)
!3517 = !DILocation(line: 1342, column: 9, scope: !3372)
!3518 = !DILocation(line: 1375, column: 9, scope: !3372)
!3519 = !DILocation(line: 1377, column: 4, scope: !3396)
!3520 = !DILocation(line: 0, scope: !3396)
!3521 = !DILocation(line: 1377, column: 4, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3396, file: !2320, line: 1377, column: 4)
!3523 = distinct !{!3523, !3516, !3524}
!3524 = !DILocation(line: 1839, column: 2, scope: !3372)
!3525 = !DILocation(line: 1392, column: 3, scope: !3399)
!3526 = !DILocation(line: 1395, column: 5, scope: !3399)
!3527 = !DILocation(line: 0, scope: !3399)
!3528 = !DILocation(line: 1409, column: 8, scope: !3399)
!3529 = !DILocation(line: 1414, column: 13, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1414, column: 7)
!3531 = !DILocation(line: 1414, column: 7, scope: !3399)
!3532 = !DILocation(line: 1415, column: 12, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3530, file: !2320, line: 1414, column: 25)
!3534 = !DILocation(line: 1417, column: 14, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3533, file: !2320, line: 1417, column: 8)
!3536 = !DILocation(line: 1417, column: 8, scope: !3533)
!3537 = !DILocation(line: 1418, column: 21, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3535, file: !2320, line: 1417, column: 19)
!3539 = !DILocation(line: 1419, column: 13, scope: !3538)
!3540 = !DILocation(line: 1420, column: 4, scope: !3538)
!3541 = !DILocation(line: 1421, column: 20, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3530, file: !2320, line: 1421, column: 14)
!3543 = !DILocation(line: 1421, column: 14, scope: !3530)
!3544 = !DILocation(line: 1431, column: 13, scope: !3459)
!3545 = !DILocation(line: 1431, column: 7, scope: !3399)
!3546 = !DILocation(line: 1432, column: 14, scope: !3458)
!3547 = !DILocation(line: 0, scope: !3458)
!3548 = !DILocation(line: 1434, column: 12, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3458, file: !2320, line: 1434, column: 8)
!3550 = !DILocation(line: 1434, column: 8, scope: !3458)
!3551 = !DILocation(line: 1435, column: 24, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3549, file: !2320, line: 1434, column: 17)
!3553 = !DILocation(line: 1436, column: 4, scope: !3552)
!3554 = !DILocation(line: 1439, column: 20, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3459, file: !2320, line: 1439, column: 14)
!3556 = !DILocation(line: 1439, column: 14, scope: !3459)
!3557 = !DILocation(line: 1469, column: 37, scope: !3399)
!3558 = !DILocation(line: 1448, column: 20, scope: !3399)
!3559 = !DILocation(line: 1449, column: 22, scope: !3399)
!3560 = !DILocation(line: 1471, column: 34, scope: !3399)
!3561 = !DILocation(line: 1478, column: 7, scope: !3399)
!3562 = !DILocation(line: 1479, column: 4, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3564, file: !2320, line: 1478, column: 40)
!3564 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1478, column: 7)
!3565 = !DILocation(line: 1484, column: 19, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3563, file: !2320, line: 1479, column: 24)
!3567 = !DILocation(line: 1484, column: 17, scope: !3566)
!3568 = !DILocation(line: 1485, column: 5, scope: !3566)
!3569 = !DILocation(line: 1492, column: 20, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !2320, line: 1491, column: 12)
!3571 = distinct !DILexicalBlock(scope: !3566, file: !2320, line: 1487, column: 9)
!3572 = !DILocation(line: 1492, column: 18, scope: !3570)
!3573 = !DILocation(line: 1494, column: 5, scope: !3566)
!3574 = !DILocation(line: 1497, column: 23, scope: !3566)
!3575 = !DILocation(line: 1496, column: 17, scope: !3566)
!3576 = !DILocation(line: 1498, column: 5, scope: !3566)
!3577 = !DILocation(line: 1501, column: 23, scope: !3566)
!3578 = !DILocation(line: 1500, column: 17, scope: !3566)
!3579 = !DILocation(line: 1502, column: 5, scope: !3566)
!3580 = !DILocation(line: 1513, column: 23, scope: !3566)
!3581 = !DILocation(line: 1513, column: 6, scope: !3566)
!3582 = !DILocation(line: 1512, column: 17, scope: !3566)
!3583 = !DILocation(line: 1514, column: 5, scope: !3566)
!3584 = !DILocation(line: 0, scope: !3566)
!3585 = !DILocation(line: 1516, column: 8, scope: !3563)
!3586 = !DILocation(line: 1517, column: 19, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !2320, line: 1516, column: 33)
!3588 = distinct !DILexicalBlock(scope: !3563, file: !2320, line: 1516, column: 8)
!3589 = !DILocation(line: 1517, column: 17, scope: !3587)
!3590 = !DILocation(line: 1518, column: 4, scope: !3587)
!3591 = !DILocation(line: 1519, column: 19, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !2320, line: 1518, column: 39)
!3593 = distinct !DILexicalBlock(scope: !3588, file: !2320, line: 1518, column: 15)
!3594 = !DILocation(line: 1519, column: 17, scope: !3592)
!3595 = !DILocation(line: 1520, column: 4, scope: !3592)
!3596 = !DILocation(line: 1522, column: 4, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !2320, line: 1521, column: 47)
!3598 = distinct !DILexicalBlock(scope: !3564, file: !2320, line: 1521, column: 14)
!3599 = !DILocation(line: 1527, column: 19, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3597, file: !2320, line: 1522, column: 24)
!3601 = !DILocation(line: 1527, column: 17, scope: !3600)
!3602 = !DILocation(line: 1528, column: 5, scope: !3600)
!3603 = !DILocation(line: 0, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3600, file: !2320, line: 1530, column: 9)
!3605 = !DILocation(line: 1540, column: 23, scope: !3600)
!3606 = !DILocation(line: 1539, column: 17, scope: !3600)
!3607 = !DILocation(line: 1542, column: 5, scope: !3600)
!3608 = !DILocation(line: 1545, column: 23, scope: !3600)
!3609 = !DILocation(line: 1544, column: 17, scope: !3600)
!3610 = !DILocation(line: 1547, column: 5, scope: !3600)
!3611 = !DILocation(line: 1551, column: 23, scope: !3600)
!3612 = !DILocation(line: 1551, column: 6, scope: !3600)
!3613 = !DILocation(line: 1550, column: 17, scope: !3600)
!3614 = !DILocation(line: 1552, column: 5, scope: !3600)
!3615 = !DILocation(line: 0, scope: !3600)
!3616 = !DILocation(line: 1554, column: 8, scope: !3597)
!3617 = !DILocation(line: 1555, column: 19, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !2320, line: 1554, column: 33)
!3619 = distinct !DILexicalBlock(scope: !3597, file: !2320, line: 1554, column: 8)
!3620 = !DILocation(line: 1555, column: 17, scope: !3618)
!3621 = !DILocation(line: 1556, column: 4, scope: !3618)
!3622 = !DILocation(line: 1557, column: 19, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !2320, line: 1556, column: 39)
!3624 = distinct !DILexicalBlock(scope: !3619, file: !2320, line: 1556, column: 15)
!3625 = !DILocation(line: 1557, column: 17, scope: !3623)
!3626 = !DILocation(line: 1558, column: 4, scope: !3623)
!3627 = !DILocation(line: 0, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !2320, line: 1560, column: 8)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !2320, line: 1559, column: 45)
!3630 = distinct !DILexicalBlock(scope: !3598, file: !2320, line: 1559, column: 14)
!3631 = !DILocation(line: 1566, column: 17, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !2320, line: 1565, column: 46)
!3633 = distinct !DILexicalBlock(scope: !3630, file: !2320, line: 1565, column: 14)
!3634 = !DILocation(line: 1566, column: 15, scope: !3632)
!3635 = !DILocation(line: 1567, column: 3, scope: !3632)
!3636 = !DILocation(line: 1574, column: 21, scope: !3465)
!3637 = !DILocation(line: 1575, column: 4, scope: !3463)
!3638 = !DILocation(line: 0, scope: !3463)
!3639 = !DILocation(line: 1575, column: 4, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3463, file: !2320, line: 1575, column: 4)
!3641 = !DILocation(line: 1582, column: 17, scope: !3399)
!3642 = !DILocation(line: 1582, column: 3, scope: !3399)
!3643 = !DILocation(line: 1584, column: 4, scope: !3467)
!3644 = !DILocation(line: 0, scope: !3467)
!3645 = !DILocation(line: 1584, column: 4, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3467, file: !2320, line: 1584, column: 4)
!3647 = !DILocation(line: 1587, column: 31, scope: !3470)
!3648 = !DILocation(line: 1591, column: 18, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3470, file: !2320, line: 1591, column: 8)
!3650 = !DILocation(line: 1591, column: 8, scope: !3470)
!3651 = !DILocation(line: 1592, column: 11, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3649, file: !2320, line: 1591, column: 24)
!3653 = !DILocation(line: 0, scope: !3470)
!3654 = !DILocation(line: 1593, column: 4, scope: !3652)
!3655 = !DILocation(line: 1594, column: 11, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3649, file: !2320, line: 1593, column: 11)
!3657 = !DILocation(line: 1604, column: 51, scope: !3468)
!3658 = !DILocation(line: 1604, column: 13, scope: !3468)
!3659 = !DILocation(line: 1604, column: 11, scope: !3468)
!3660 = !DILocation(line: 1606, column: 4, scope: !3468)
!3661 = !DILocation(line: 1609, column: 14, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3468, file: !2320, line: 1609, column: 8)
!3663 = !DILocation(line: 1609, column: 8, scope: !3468)
!3664 = !DILocation(line: 1619, column: 18, scope: !3468)
!3665 = !DILocation(line: 1620, column: 13, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3468, file: !2320, line: 1620, column: 8)
!3667 = !DILocation(line: 1620, column: 8, scope: !3468)
!3668 = !DILocation(line: 1622, column: 36, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3666, file: !2320, line: 1620, column: 18)
!3670 = !DILocation(line: 1622, column: 17, scope: !3669)
!3671 = !DILocation(line: 1623, column: 4, scope: !3669)
!3672 = !DILocation(line: 1632, column: 29, scope: !3468)
!3673 = !DILocation(line: 1632, column: 10, scope: !3468)
!3674 = !DILocation(line: 1632, column: 4, scope: !3468)
!3675 = !DILocation(line: 1407, column: 8, scope: !3399)
!3676 = !DILocation(line: 0, scope: !3468)
!3677 = !DILocation(line: 1634, column: 3, scope: !3468)
!3678 = !DILocation(line: 1640, column: 18, scope: !3473)
!3679 = !DILocation(line: 1640, column: 8, scope: !3468)
!3680 = !DILocation(line: 1729, column: 13, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1729, column: 7)
!3682 = !DILocation(line: 1641, column: 22, scope: !3472)
!3683 = !DILocation(line: 0, scope: !3472)
!3684 = !DILocation(line: 1646, column: 21, scope: !3472)
!3685 = !DILocation(line: 1649, column: 13, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3472, file: !2320, line: 1649, column: 9)
!3687 = !DILocation(line: 1649, column: 9, scope: !3472)
!3688 = !DILocation(line: 1650, column: 35, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3686, file: !2320, line: 1649, column: 34)
!3690 = !DILocation(line: 1650, column: 23, scope: !3689)
!3691 = !DILocation(line: 1651, column: 5, scope: !3689)
!3692 = !DILocation(line: 1660, column: 15, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3468, file: !2320, line: 1660, column: 8)
!3694 = !DILocation(line: 1660, column: 19, scope: !3693)
!3695 = !DILocation(line: 1660, column: 8, scope: !3468)
!3696 = !DILocation(line: 1661, column: 23, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3693, file: !2320, line: 1660, column: 28)
!3698 = !DILocation(line: 1661, column: 11, scope: !3697)
!3699 = !DILocation(line: 1665, column: 22, scope: !3697)
!3700 = !DILocation(line: 1666, column: 21, scope: !3697)
!3701 = !DILocation(line: 1668, column: 5, scope: !3697)
!3702 = !DILocation(line: 1677, column: 30, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !2320, line: 1676, column: 49)
!3704 = distinct !DILexicalBlock(scope: !3468, file: !2320, line: 1676, column: 8)
!3705 = !DILocation(line: 1677, column: 5, scope: !3703)
!3706 = !DILocation(line: 1680, column: 4, scope: !3468)
!3707 = !DILocation(line: 0, scope: !3649)
!3708 = !DILocation(line: 1597, column: 14, scope: !3470)
!3709 = !DILocation(line: 1699, column: 11, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1699, column: 7)
!3711 = !DILocation(line: 1699, column: 7, scope: !3399)
!3712 = !DILocation(line: 1725, column: 7, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1725, column: 7)
!3714 = !DILocation(line: 1725, column: 12, scope: !3713)
!3715 = !DILocation(line: 1747, column: 13, scope: !3480)
!3716 = !DILocation(line: 1747, column: 7, scope: !3399)
!3717 = !DILocation(line: 1722, column: 24, scope: !3399)
!3718 = !DILocation(line: 1725, column: 7, scope: !3399)
!3719 = !DILocation(line: 1729, column: 7, scope: !3399)
!3720 = !DILocation(line: 1736, column: 13, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3399, file: !2320, line: 1736, column: 7)
!3722 = !DILocation(line: 1735, column: 19, scope: !3399)
!3723 = !DILocation(line: 1736, column: 7, scope: !3399)
!3724 = !DILocation(line: 1748, column: 10, scope: !3479)
!3725 = !DILocation(line: 1750, column: 15, scope: !3478)
!3726 = !DILocation(line: 1750, column: 8, scope: !3479)
!3727 = !DILocation(line: 0, scope: !3477)
!3728 = !DILocation(line: 1756, column: 15, scope: !3486)
!3729 = !DILocation(line: 1756, column: 9, scope: !3477)
!3730 = !DILocation(line: 1758, column: 7, scope: !3482)
!3731 = !DILocation(line: 0, scope: !3482)
!3732 = !DILocation(line: 1758, column: 7, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3482, file: !2320, line: 1758, column: 7)
!3734 = !DILocation(line: 1764, column: 5, scope: !3477)
!3735 = !DILocation(line: 0, scope: !3479)
!3736 = !DILocation(line: 1764, column: 20, scope: !3477)
!3737 = !DILocation(line: 1764, column: 17, scope: !3477)
!3738 = !DILocation(line: 1765, column: 6, scope: !3488)
!3739 = !DILocation(line: 0, scope: !3488)
!3740 = !DILocation(line: 1765, column: 6, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3488, file: !2320, line: 1765, column: 6)
!3742 = distinct !{!3742, !3734, !3743}
!3743 = !DILocation(line: 1766, column: 5, scope: !3477)
!3744 = !DILocation(line: 1773, column: 12, scope: !3493)
!3745 = !DILocation(line: 1773, column: 7, scope: !3399)
!3746 = !DILocation(line: 1773, column: 7, scope: !3493)
!3747 = !DILocation(line: 1774, column: 4, scope: !3491)
!3748 = !DILocation(line: 0, scope: !3491)
!3749 = !DILocation(line: 1774, column: 4, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3491, file: !2320, line: 1774, column: 4)
!3751 = !DILocation(line: 1818, column: 8, scope: !3497)
!3752 = !DILocation(line: 1818, column: 27, scope: !3497)
!3753 = !DILocation(line: 1818, column: 25, scope: !3497)
!3754 = !DILocation(line: 1818, column: 8, scope: !3498)
!3755 = !DILocation(line: 1819, column: 5, scope: !3495)
!3756 = !DILocation(line: 0, scope: !3495)
!3757 = !DILocation(line: 1819, column: 5, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3495, file: !2320, line: 1819, column: 5)
!3759 = !DILocation(line: 1822, column: 14, scope: !3503)
!3760 = !DILocation(line: 1822, column: 8, scope: !3498)
!3761 = !DILocation(line: 1823, column: 5, scope: !3501)
!3762 = !DILocation(line: 0, scope: !3501)
!3763 = !DILocation(line: 1823, column: 5, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3501, file: !2320, line: 1823, column: 5)
!3765 = !DILocation(line: 1826, column: 20, scope: !3498)
!3766 = !DILocation(line: 1827, column: 4, scope: !3498)
!3767 = !DILocation(line: 0, scope: !3498)
!3768 = !DILocation(line: 1827, column: 21, scope: !3498)
!3769 = !DILocation(line: 1827, column: 18, scope: !3498)
!3770 = !DILocation(line: 1828, column: 5, scope: !3505)
!3771 = !DILocation(line: 0, scope: !3505)
!3772 = !DILocation(line: 1828, column: 5, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3505, file: !2320, line: 1828, column: 5)
!3774 = distinct !{!3774, !3766, !3775}
!3775 = !DILocation(line: 1829, column: 4, scope: !3498)
!3776 = !DILocation(line: 1831, column: 4, scope: !3508)
!3777 = !DILocation(line: 0, scope: !3508)
!3778 = !DILocation(line: 1831, column: 4, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3508, file: !2320, line: 1831, column: 4)
!3780 = !DILocation(line: 1835, column: 16, scope: !3399)
!3781 = !DILocation(line: 1835, column: 3, scope: !3399)
!3782 = !DILocation(line: 1836, column: 4, scope: !3510)
!3783 = !DILocation(line: 0, scope: !3510)
!3784 = !DILocation(line: 1836, column: 4, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3510, file: !2320, line: 1836, column: 4)
!3786 = !DILocation(line: 1837, column: 4, scope: !3511)
!3787 = distinct !{!3787, !3781, !3788}
!3788 = !DILocation(line: 1838, column: 3, scope: !3399)
!3789 = !DILocation(line: 1844, column: 1, scope: !3372)
!3790 = distinct !DISubprogram(name: "extract_conversion", scope: !2320, file: !2320, line: 642, type: !3791, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !3793)
!3791 = !DISubroutineType(types: !3792)
!3792 = !{!121, !3447, !121}
!3793 = !{!3794, !3795}
!3794 = !DILocalVariable(name: "conv", arg: 1, scope: !3790, file: !2320, line: 642, type: !3447)
!3795 = !DILocalVariable(name: "sp", arg: 2, scope: !3790, file: !2320, line: 643, type: !121)
!3796 = !DILocation(line: 0, scope: !3790)
!3797 = !DILocation(line: 645, column: 10, scope: !3790)
!3798 = !DILocation(line: 653, column: 2, scope: !3790)
!3799 = !DILocation(line: 654, column: 6, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3790, file: !2320, line: 654, column: 6)
!3801 = !DILocation(line: 654, column: 10, scope: !3800)
!3802 = !DILocation(line: 654, column: 6, scope: !3790)
!3803 = !DILocation(line: 655, column: 24, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3800, file: !2320, line: 654, column: 18)
!3805 = !DILocation(line: 655, column: 19, scope: !3804)
!3806 = !DILocation(line: 656, column: 3, scope: !3804)
!3807 = !DILocation(line: 659, column: 7, scope: !3790)
!3808 = !DILocation(line: 660, column: 7, scope: !3790)
!3809 = !DILocation(line: 661, column: 7, scope: !3790)
!3810 = !DILocation(line: 662, column: 7, scope: !3790)
!3811 = !DILocation(line: 663, column: 7, scope: !3790)
!3812 = !DILocation(line: 665, column: 2, scope: !3790)
!3813 = !DILocation(line: 666, column: 1, scope: !3790)
!3814 = distinct !DISubprogram(name: "outs", scope: !2320, file: !2320, line: 1319, type: !3815, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !3817)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{!103, !3103, !104, !121, !121}
!3817 = !{!3818, !3819, !3820, !3821, !3822, !3823}
!3818 = !DILocalVariable(name: "out", arg: 1, scope: !3814, file: !2320, line: 1319, type: !3103)
!3819 = !DILocalVariable(name: "ctx", arg: 2, scope: !3814, file: !2320, line: 1320, type: !104)
!3820 = !DILocalVariable(name: "sp", arg: 3, scope: !3814, file: !2320, line: 1321, type: !121)
!3821 = !DILocalVariable(name: "ep", arg: 4, scope: !3814, file: !2320, line: 1322, type: !121)
!3822 = !DILocalVariable(name: "count", scope: !3814, file: !2320, line: 1324, type: !259)
!3823 = !DILocalVariable(name: "rc", scope: !3824, file: !2320, line: 1327, type: !103)
!3824 = distinct !DILexicalBlock(scope: !3814, file: !2320, line: 1326, column: 45)
!3825 = !DILocation(line: 0, scope: !3814)
!3826 = !DILocation(line: 1326, column: 2, scope: !3814)
!3827 = !DILocation(line: 1324, column: 9, scope: !3814)
!3828 = !DILocation(line: 1326, column: 13, scope: !3814)
!3829 = !DILocation(line: 1326, column: 19, scope: !3814)
!3830 = !DILocation(line: 1327, column: 21, scope: !3824)
!3831 = !DILocation(line: 1326, column: 36, scope: !3814)
!3832 = !DILocation(line: 1326, column: 39, scope: !3814)
!3833 = !DILocation(line: 1327, column: 24, scope: !3824)
!3834 = !DILocation(line: 1327, column: 16, scope: !3824)
!3835 = !DILocation(line: 1327, column: 12, scope: !3824)
!3836 = !DILocation(line: 0, scope: !3824)
!3837 = !DILocation(line: 1329, column: 10, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3824, file: !2320, line: 1329, column: 7)
!3839 = !DILocation(line: 1329, column: 7, scope: !3824)
!3840 = distinct !{!3840, !3826, !3841}
!3841 = !DILocation(line: 1333, column: 2, scope: !3814)
!3842 = !DILocation(line: 1336, column: 1, scope: !3814)
!3843 = distinct !DISubprogram(name: "encode_uint", scope: !2320, file: !2320, line: 788, type: !3844, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !3846)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{!1054, !2342, !3447, !1054, !121}
!3846 = !{!3847, !3848, !3849, !3850, !3851, !3852, !3854, !3855}
!3847 = !DILocalVariable(name: "value", arg: 1, scope: !3843, file: !2320, line: 788, type: !2342)
!3848 = !DILocalVariable(name: "conv", arg: 2, scope: !3843, file: !2320, line: 789, type: !3447)
!3849 = !DILocalVariable(name: "bps", arg: 3, scope: !3843, file: !2320, line: 790, type: !1054)
!3850 = !DILocalVariable(name: "bpe", arg: 4, scope: !3843, file: !2320, line: 791, type: !121)
!3851 = !DILocalVariable(name: "upcase", scope: !3843, file: !2320, line: 793, type: !134)
!3852 = !DILocalVariable(name: "radix", scope: !3843, file: !2320, line: 794, type: !3853)
!3853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!3854 = !DILocalVariable(name: "bp", scope: !3843, file: !2320, line: 795, type: !1054)
!3855 = !DILocalVariable(name: "lsv", scope: !3856, file: !2320, line: 798, type: !32)
!3856 = distinct !DILexicalBlock(scope: !3843, file: !2320, line: 797, column: 5)
!3857 = !DILocation(line: 0, scope: !3843)
!3858 = !DILocation(line: 793, column: 35, scope: !3843)
!3859 = !DILocation(line: 793, column: 24, scope: !3843)
!3860 = !DILocation(line: 793, column: 16, scope: !3843)
!3861 = !DILocation(line: 794, column: 29, scope: !3843)
!3862 = !DILocation(line: 795, column: 24, scope: !3843)
!3863 = !DILocation(line: 795, column: 17, scope: !3843)
!3864 = !DILocation(line: 797, column: 2, scope: !3843)
!3865 = !DILocation(line: 802, column: 9, scope: !3856)
!3866 = !DILocation(line: 798, column: 22, scope: !3856)
!3867 = !DILocation(line: 0, scope: !3856)
!3868 = !DILocation(line: 800, column: 16, scope: !3856)
!3869 = !DILocation(line: 800, column: 11, scope: !3856)
!3870 = !DILocation(line: 800, column: 4, scope: !3856)
!3871 = !DILocation(line: 800, column: 9, scope: !3856)
!3872 = !DILocation(line: 803, column: 18, scope: !3843)
!3873 = !DILocation(line: 803, column: 24, scope: !3843)
!3874 = !DILocation(line: 803, column: 2, scope: !3856)
!3875 = distinct !{!3875, !3864, !3876}
!3876 = !DILocation(line: 803, column: 37, scope: !3843)
!3877 = !DILocation(line: 808, column: 12, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3843, file: !2320, line: 808, column: 6)
!3879 = !DILocation(line: 808, column: 6, scope: !3843)
!3880 = !DILocation(line: 809, column: 7, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3878, file: !2320, line: 808, column: 23)
!3882 = !DILocation(line: 813, column: 3, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !2320, line: 811, column: 27)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !2320, line: 811, column: 14)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !2320, line: 809, column: 7)
!3886 = !DILocation(line: 0, scope: !3885)
!3887 = !DILocation(line: 818, column: 2, scope: !3843)
!3888 = distinct !DISubprogram(name: "store_count", scope: !2320, file: !2320, line: 1280, type: !3889, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !3893)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{null, !3891, !104, !103}
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 32)
!3892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3414)
!3893 = !{!3894, !3895, !3896}
!3894 = !DILocalVariable(name: "conv", arg: 1, scope: !3888, file: !2320, line: 1280, type: !3891)
!3895 = !DILocalVariable(name: "dp", arg: 2, scope: !3888, file: !2320, line: 1281, type: !104)
!3896 = !DILocalVariable(name: "count", arg: 3, scope: !3888, file: !2320, line: 1282, type: !103)
!3897 = !DILocation(line: 0, scope: !3888)
!3898 = !DILocation(line: 1284, column: 38, scope: !3888)
!3899 = !DILocation(line: 1284, column: 2, scope: !3888)
!3900 = !DILocation(line: 1286, column: 4, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3888, file: !2320, line: 1284, column: 50)
!3902 = !DILocation(line: 1286, column: 14, scope: !3901)
!3903 = !DILocation(line: 1287, column: 3, scope: !3901)
!3904 = !DILocation(line: 1289, column: 24, scope: !3901)
!3905 = !DILocation(line: 1289, column: 22, scope: !3901)
!3906 = !DILocation(line: 1290, column: 3, scope: !3901)
!3907 = !DILocation(line: 1292, column: 18, scope: !3901)
!3908 = !DILocation(line: 1292, column: 4, scope: !3901)
!3909 = !DILocation(line: 1292, column: 16, scope: !3901)
!3910 = !DILocation(line: 1293, column: 3, scope: !3901)
!3911 = !DILocation(line: 1295, column: 4, scope: !3901)
!3912 = !DILocation(line: 1295, column: 15, scope: !3901)
!3913 = !DILocation(line: 1296, column: 3, scope: !3901)
!3914 = !DILocation(line: 1298, column: 22, scope: !3901)
!3915 = !DILocation(line: 1298, column: 4, scope: !3901)
!3916 = !DILocation(line: 1298, column: 20, scope: !3901)
!3917 = !DILocation(line: 1299, column: 3, scope: !3901)
!3918 = !DILocation(line: 1301, column: 21, scope: !3901)
!3919 = !DILocation(line: 1301, column: 4, scope: !3901)
!3920 = !DILocation(line: 1301, column: 19, scope: !3901)
!3921 = !DILocation(line: 1302, column: 3, scope: !3901)
!3922 = !DILocation(line: 1304, column: 4, scope: !3901)
!3923 = !DILocation(line: 1304, column: 17, scope: !3901)
!3924 = !DILocation(line: 1305, column: 3, scope: !3901)
!3925 = !DILocation(line: 1307, column: 4, scope: !3901)
!3926 = !DILocation(line: 1307, column: 20, scope: !3901)
!3927 = !DILocation(line: 1308, column: 3, scope: !3901)
!3928 = !DILocation(line: 1316, column: 1, scope: !3888)
!3929 = distinct !DISubprogram(name: "isupper", scope: !3930, file: !3930, line: 16, type: !179, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !3931)
!3930 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3931 = !{!3932}
!3932 = !DILocalVariable(name: "a", arg: 1, scope: !3929, file: !3930, line: 16, type: !103)
!3933 = !DILocation(line: 0, scope: !3929)
!3934 = !DILocation(line: 18, column: 29, scope: !3929)
!3935 = !DILocation(line: 18, column: 45, scope: !3929)
!3936 = !DILocation(line: 18, column: 2, scope: !3929)
!3937 = distinct !DISubprogram(name: "conversion_radix", scope: !2320, file: !2320, line: 761, type: !3938, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !3940)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{!259, !123}
!3940 = !{!3941}
!3941 = !DILocalVariable(name: "specifier", arg: 1, scope: !3937, file: !2320, line: 761, type: !123)
!3942 = !DILocation(line: 0, scope: !3937)
!3943 = !DILocation(line: 763, column: 2, scope: !3937)
!3944 = !DILocation(line: 770, column: 3, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3937, file: !2320, line: 763, column: 21)
!3946 = !DILocation(line: 774, column: 3, scope: !3945)
!3947 = !DILocation(line: 0, scope: !3945)
!3948 = !DILocation(line: 776, column: 1, scope: !3937)
!3949 = distinct !DISubprogram(name: "extract_flags", scope: !2320, file: !2320, line: 339, type: !3791, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !3950)
!3950 = !{!3951, !3952, !3953}
!3951 = !DILocalVariable(name: "conv", arg: 1, scope: !3949, file: !2320, line: 339, type: !3447)
!3952 = !DILocalVariable(name: "sp", arg: 2, scope: !3949, file: !2320, line: 340, type: !121)
!3953 = !DILocalVariable(name: "loop", scope: !3949, file: !2320, line: 342, type: !134)
!3954 = !DILocation(line: 0, scope: !3949)
!3955 = !DILocation(line: 344, column: 2, scope: !3949)
!3956 = !DILocation(line: 345, column: 11, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3949, file: !2320, line: 344, column: 5)
!3958 = !DILocation(line: 345, column: 3, scope: !3957)
!3959 = !DILocation(line: 351, column: 4, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3957, file: !2320, line: 345, column: 16)
!3961 = !DILocation(line: 354, column: 4, scope: !3960)
!3962 = !DILocation(line: 357, column: 4, scope: !3960)
!3963 = !DILocation(line: 360, column: 4, scope: !3960)
!3964 = !DILocation(line: 0, scope: !3960)
!3965 = !DILocation(line: 370, column: 12, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3949, file: !2320, line: 370, column: 6)
!3967 = !DILocation(line: 370, column: 22, scope: !3966)
!3968 = !DILocation(line: 371, column: 19, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3966, file: !2320, line: 370, column: 42)
!3970 = !DILocation(line: 372, column: 2, scope: !3969)
!3971 = !DILocation(line: 376, column: 2, scope: !3949)
!3972 = distinct !DISubprogram(name: "extract_width", scope: !2320, file: !2320, line: 388, type: !3791, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !3973)
!3973 = !{!3974, !3975, !3976, !3977}
!3974 = !DILocalVariable(name: "conv", arg: 1, scope: !3972, file: !2320, line: 388, type: !3447)
!3975 = !DILocalVariable(name: "sp", arg: 2, scope: !3972, file: !2320, line: 389, type: !121)
!3976 = !DILocalVariable(name: "wp", scope: !3972, file: !2320, line: 398, type: !121)
!3977 = !DILocalVariable(name: "width", scope: !3972, file: !2320, line: 399, type: !259)
!3978 = !DILocation(line: 0, scope: !3972)
!3979 = !DILocation(line: 391, column: 8, scope: !3972)
!3980 = !DILocation(line: 391, column: 22, scope: !3972)
!3981 = !DILocation(line: 393, column: 6, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3972, file: !2320, line: 393, column: 6)
!3983 = !DILocation(line: 393, column: 10, scope: !3982)
!3984 = !DILocation(line: 393, column: 6, scope: !3972)
!3985 = !DILocation(line: 394, column: 20, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3982, file: !2320, line: 393, column: 18)
!3987 = !DILocation(line: 395, column: 10, scope: !3986)
!3988 = !DILocation(line: 395, column: 3, scope: !3986)
!3989 = !DILocation(line: 399, column: 17, scope: !3972)
!3990 = !DILocation(line: 401, column: 6, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3972, file: !2320, line: 401, column: 6)
!3992 = !DILocation(line: 401, column: 9, scope: !3991)
!3993 = !DILocation(line: 401, column: 6, scope: !3972)
!3994 = !DILocation(line: 402, column: 23, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3991, file: !2320, line: 401, column: 16)
!3996 = !DILocation(line: 403, column: 9, scope: !3995)
!3997 = !DILocation(line: 403, column: 21, scope: !3995)
!3998 = !DILocation(line: 405, column: 11, scope: !3995)
!3999 = !DILocation(line: 404, column: 21, scope: !3995)
!4000 = !DILocation(line: 406, column: 2, scope: !3995)
!4001 = !DILocation(line: 409, column: 1, scope: !3972)
!4002 = distinct !DISubprogram(name: "extract_prec", scope: !2320, file: !2320, line: 420, type: !3791, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !4003)
!4003 = !{!4004, !4005, !4006}
!4004 = !DILocalVariable(name: "conv", arg: 1, scope: !4002, file: !2320, line: 420, type: !3447)
!4005 = !DILocalVariable(name: "sp", arg: 2, scope: !4002, file: !2320, line: 421, type: !121)
!4006 = !DILocalVariable(name: "prec", scope: !4002, file: !2320, line: 435, type: !259)
!4007 = !DILocation(line: 0, scope: !4002)
!4008 = !DILocation(line: 423, column: 24, scope: !4002)
!4009 = !DILocation(line: 423, column: 28, scope: !4002)
!4010 = !DILocation(line: 423, column: 8, scope: !4002)
!4011 = !DILocation(line: 423, column: 21, scope: !4002)
!4012 = !DILocation(line: 425, column: 6, scope: !4002)
!4013 = !DILocation(line: 428, column: 2, scope: !4002)
!4014 = !DILocation(line: 430, column: 6, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4002, file: !2320, line: 430, column: 6)
!4016 = !DILocation(line: 430, column: 10, scope: !4015)
!4017 = !DILocation(line: 430, column: 6, scope: !4002)
!4018 = !DILocation(line: 431, column: 19, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4015, file: !2320, line: 430, column: 18)
!4020 = !DILocation(line: 432, column: 10, scope: !4019)
!4021 = !DILocation(line: 432, column: 3, scope: !4019)
!4022 = !DILocation(line: 435, column: 16, scope: !4002)
!4023 = !DILocation(line: 437, column: 8, scope: !4002)
!4024 = !DILocation(line: 437, column: 19, scope: !4002)
!4025 = !DILocation(line: 439, column: 10, scope: !4002)
!4026 = !DILocation(line: 438, column: 20, scope: !4002)
!4027 = !DILocation(line: 441, column: 9, scope: !4002)
!4028 = !DILocation(line: 442, column: 1, scope: !4002)
!4029 = distinct !DISubprogram(name: "extract_length", scope: !2320, file: !2320, line: 453, type: !3791, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !4030)
!4030 = !{!4031, !4032}
!4031 = !DILocalVariable(name: "conv", arg: 1, scope: !4029, file: !2320, line: 453, type: !3447)
!4032 = !DILocalVariable(name: "sp", arg: 2, scope: !4029, file: !2320, line: 454, type: !121)
!4033 = !DILocation(line: 0, scope: !4029)
!4034 = !DILocation(line: 456, column: 10, scope: !4029)
!4035 = !DILocation(line: 456, column: 2, scope: !4029)
!4036 = !DILocation(line: 458, column: 8, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !2320, line: 458, column: 7)
!4038 = distinct !DILexicalBlock(scope: !4029, file: !2320, line: 456, column: 15)
!4039 = !DILocation(line: 458, column: 7, scope: !4037)
!4040 = !DILocation(line: 458, column: 13, scope: !4037)
!4041 = !DILocation(line: 0, scope: !4037)
!4042 = !DILocation(line: 458, column: 7, scope: !4038)
!4043 = !DILocation(line: 459, column: 21, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4037, file: !2320, line: 458, column: 21)
!4045 = !DILocation(line: 460, column: 4, scope: !4044)
!4046 = !DILocation(line: 461, column: 3, scope: !4044)
!4047 = !DILocation(line: 462, column: 21, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4037, file: !2320, line: 461, column: 10)
!4049 = !DILocation(line: 466, column: 8, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4038, file: !2320, line: 466, column: 7)
!4051 = !DILocation(line: 466, column: 7, scope: !4050)
!4052 = !DILocation(line: 466, column: 13, scope: !4050)
!4053 = !DILocation(line: 0, scope: !4050)
!4054 = !DILocation(line: 466, column: 7, scope: !4038)
!4055 = !DILocation(line: 467, column: 21, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4050, file: !2320, line: 466, column: 21)
!4057 = !DILocation(line: 468, column: 4, scope: !4056)
!4058 = !DILocation(line: 469, column: 3, scope: !4056)
!4059 = !DILocation(line: 470, column: 21, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4050, file: !2320, line: 469, column: 10)
!4061 = !DILocation(line: 474, column: 9, scope: !4038)
!4062 = !DILocation(line: 474, column: 20, scope: !4038)
!4063 = !DILocation(line: 475, column: 3, scope: !4038)
!4064 = !DILocation(line: 476, column: 3, scope: !4038)
!4065 = !DILocation(line: 478, column: 9, scope: !4038)
!4066 = !DILocation(line: 478, column: 20, scope: !4038)
!4067 = !DILocation(line: 479, column: 3, scope: !4038)
!4068 = !DILocation(line: 480, column: 3, scope: !4038)
!4069 = !DILocation(line: 482, column: 9, scope: !4038)
!4070 = !DILocation(line: 482, column: 20, scope: !4038)
!4071 = !DILocation(line: 483, column: 3, scope: !4038)
!4072 = !DILocation(line: 484, column: 3, scope: !4038)
!4073 = !DILocation(line: 486, column: 9, scope: !4038)
!4074 = !DILocation(line: 486, column: 20, scope: !4038)
!4075 = !DILocation(line: 487, column: 3, scope: !4038)
!4076 = !DILocation(line: 492, column: 21, scope: !4038)
!4077 = !DILocation(line: 493, column: 3, scope: !4038)
!4078 = !DILocation(line: 495, column: 9, scope: !4038)
!4079 = !DILocation(line: 495, column: 20, scope: !4038)
!4080 = !DILocation(line: 496, column: 3, scope: !4038)
!4081 = !DILocation(line: 498, column: 2, scope: !4029)
!4082 = distinct !DISubprogram(name: "extract_specifier", scope: !2320, file: !2320, line: 513, type: !3791, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !4083)
!4083 = !{!4084, !4085, !4086, !4087}
!4084 = !DILocalVariable(name: "conv", arg: 1, scope: !4082, file: !2320, line: 513, type: !3447)
!4085 = !DILocalVariable(name: "sp", arg: 2, scope: !4082, file: !2320, line: 514, type: !121)
!4086 = !DILocalVariable(name: "unsupported", scope: !4082, file: !2320, line: 516, type: !134)
!4087 = !DILabel(scope: !4088, name: "int_conv", file: !2320, line: 526)
!4088 = distinct !DILexicalBlock(scope: !4082, file: !2320, line: 520, column: 27)
!4089 = !DILocation(line: 0, scope: !4082)
!4090 = !DILocation(line: 518, column: 20, scope: !4082)
!4091 = !DILocation(line: 518, column: 8, scope: !4082)
!4092 = !DILocation(line: 518, column: 18, scope: !4082)
!4093 = !DILocation(line: 520, column: 2, scope: !4082)
!4094 = !DILocation(line: 525, column: 3, scope: !4088)
!4095 = !DILocation(line: 0, scope: !4088)
!4096 = !DILocation(line: 526, column: 1, scope: !4088)
!4097 = !DILocation(line: 528, column: 24, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4088, file: !2320, line: 528, column: 7)
!4099 = !DILocation(line: 528, column: 7, scope: !4088)
!4100 = !DILocation(line: 535, column: 23, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4088, file: !2320, line: 535, column: 7)
!4102 = !DILocation(line: 535, column: 7, scope: !4088)
!4103 = !DILocation(line: 536, column: 36, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4101, file: !2320, line: 535, column: 31)
!4105 = !DILocation(line: 537, column: 3, scope: !4104)
!4106 = !DILocation(line: 570, column: 9, scope: !4088)
!4107 = !DILocation(line: 570, column: 23, scope: !4088)
!4108 = !DILocation(line: 575, column: 4, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !2320, line: 573, column: 48)
!4110 = distinct !DILexicalBlock(scope: !4088, file: !2320, line: 573, column: 7)
!4111 = !DILocation(line: 603, column: 9, scope: !4088)
!4112 = !DILocation(line: 603, column: 23, scope: !4088)
!4113 = !DILocation(line: 605, column: 24, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4088, file: !2320, line: 605, column: 7)
!4115 = !DILocation(line: 605, column: 7, scope: !4088)
!4116 = !DILocation(line: 612, column: 9, scope: !4088)
!4117 = !DILocation(line: 612, column: 23, scope: !4088)
!4118 = !DILocation(line: 619, column: 24, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4088, file: !2320, line: 619, column: 7)
!4120 = !DILocation(line: 619, column: 7, scope: !4088)
!4121 = !DILocation(line: 625, column: 9, scope: !4088)
!4122 = !DILocation(line: 625, column: 17, scope: !4088)
!4123 = !DILocation(line: 626, column: 3, scope: !4088)
!4124 = !DILocation(line: 629, column: 20, scope: !4082)
!4125 = !DILocation(line: 629, column: 8, scope: !4082)
!4126 = !DILocation(line: 518, column: 23, scope: !4082)
!4127 = !DILocation(line: 631, column: 2, scope: !4082)
!4128 = distinct !DISubprogram(name: "extract_decimal", scope: !2320, file: !2320, line: 318, type: !4129, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !4132)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!259, !4131}
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!4132 = !{!4133, !4134, !4135}
!4133 = !DILocalVariable(name: "str", arg: 1, scope: !4128, file: !2320, line: 318, type: !4131)
!4134 = !DILocalVariable(name: "sp", scope: !4128, file: !2320, line: 320, type: !121)
!4135 = !DILocalVariable(name: "val", scope: !4128, file: !2320, line: 321, type: !259)
!4136 = !DILocation(line: 0, scope: !4128)
!4137 = !DILocation(line: 320, column: 19, scope: !4128)
!4138 = !DILocation(line: 323, column: 37, scope: !4128)
!4139 = !DILocation(line: 323, column: 17, scope: !4128)
!4140 = !DILocation(line: 323, column: 9, scope: !4128)
!4141 = !DILocation(line: 323, column: 2, scope: !4128)
!4142 = !DILocation(line: 324, column: 13, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4128, file: !2320, line: 323, column: 43)
!4144 = !DILocation(line: 324, column: 24, scope: !4143)
!4145 = !DILocation(line: 324, column: 19, scope: !4143)
!4146 = !DILocation(line: 324, column: 27, scope: !4143)
!4147 = distinct !{!4147, !4141, !4148}
!4148 = !DILocation(line: 325, column: 2, scope: !4128)
!4149 = !DILocation(line: 326, column: 7, scope: !4128)
!4150 = !DILocation(line: 327, column: 2, scope: !4128)
!4151 = distinct !DISubprogram(name: "isdigit", scope: !3930, file: !3930, line: 43, type: !179, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2316, retainedNodes: !4152)
!4152 = !{!4153}
!4153 = !DILocalVariable(name: "a", arg: 1, scope: !4151, file: !3930, line: 43, type: !103)
!4154 = !DILocation(line: 0, scope: !4151)
!4155 = !DILocation(line: 45, column: 29, scope: !4151)
!4156 = !DILocation(line: 45, column: 45, scope: !4151)
!4157 = !DILocation(line: 45, column: 2, scope: !4151)
!4158 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4159, file: !4159, line: 9, type: !2876, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !381)
!4159 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!4160 = !DILocation(line: 11, column: 1, scope: !4158)
!4161 = !{i64 2147561633, i64 2147561676, i64 2147561716}
!4162 = !DILocation(line: 12, column: 1, scope: !4158)
!4163 = !{i64 2147565860, i64 2147565903, i64 2147565943}
!4164 = !DILocation(line: 13, column: 1, scope: !4158)
!4165 = !{i64 2147566069, i64 2147566112, i64 2147566152}
!4166 = !DILocation(line: 14, column: 1, scope: !4158)
!4167 = !{i64 2147566238, i64 2147566281, i64 2147566321}
!4168 = !DILocation(line: 15, column: 1, scope: !4158)
!4169 = !{i64 2147566401, i64 2147566444, i64 2147566484}
!4170 = !DILocation(line: 16, column: 1, scope: !4158)
!4171 = !{i64 2147566585, i64 2147566628, i64 2147566668}
!4172 = !DILocation(line: 17, column: 1, scope: !4158)
!4173 = !{i64 2147566764, i64 2147566807, i64 2147566847}
!4174 = !DILocation(line: 18, column: 1, scope: !4158)
!4175 = !{i64 2147567006, i64 2147567049, i64 2147567089}
!4176 = !DILocation(line: 19, column: 1, scope: !4158)
!4177 = !{i64 2147567241, i64 2147567284, i64 2147567324}
!4178 = !DILocation(line: 20, column: 1, scope: !4158)
!4179 = !{i64 2147567427, i64 2147567470, i64 2147567510}
!4180 = !DILocation(line: 21, column: 1, scope: !4158)
!4181 = !{i64 2147567643, i64 2147567686, i64 2147567726}
!4182 = !DILocation(line: 22, column: 1, scope: !4158)
!4183 = !{i64 2147567846, i64 2147567889, i64 2147567929}
!4184 = !DILocation(line: 23, column: 1, scope: !4158)
!4185 = !{i64 2147568049, i64 2147568092, i64 2147568132}
!4186 = !DILocation(line: 24, column: 1, scope: !4158)
!4187 = !{i64 2147568224, i64 2147568267, i64 2147568307}
!4188 = !DILocation(line: 25, column: 1, scope: !4158)
!4189 = !{i64 2147568432, i64 2147568475, i64 2147568515}
!4190 = !DILocation(line: 26, column: 1, scope: !4158)
!4191 = !{i64 2147568636, i64 2147568679, i64 2147568719}
!4192 = !DILocation(line: 27, column: 1, scope: !4158)
!4193 = !{i64 2147568829, i64 2147568872, i64 2147568912}
!4194 = !DILocation(line: 28, column: 1, scope: !4158)
!4195 = !{i64 2147569031, i64 2147569074, i64 2147569114}
!4196 = !DILocation(line: 29, column: 1, scope: !4158)
!4197 = !{i64 2147569258, i64 2147569301, i64 2147569341}
!4198 = !DILocation(line: 30, column: 1, scope: !4158)
!4199 = !{i64 2147569460, i64 2147569503, i64 2147569543}
!4200 = !DILocation(line: 31, column: 1, scope: !4158)
!4201 = !{i64 2147569675, i64 2147569718, i64 2147569758}
!4202 = !DILocation(line: 32, column: 1, scope: !4158)
!4203 = !{i64 2147569847, i64 2147569890, i64 2147569930}
!4204 = !DILocation(line: 33, column: 1, scope: !4158)
!4205 = !{i64 2147570049, i64 2147570092, i64 2147570132}
!4206 = !DILocation(line: 34, column: 1, scope: !4158)
!4207 = !{i64 2147570275, i64 2147570318, i64 2147570358}
!4208 = !DILocation(line: 35, column: 1, scope: !4158)
!4209 = !{i64 2147570474, i64 2147570517, i64 2147570557}
!4210 = !DILocation(line: 36, column: 1, scope: !4158)
!4211 = !{i64 2147570649, i64 2147570692, i64 2147570732}
!4212 = !DILocation(line: 37, column: 1, scope: !4158)
!4213 = !{i64 2147570902, i64 2147570945, i64 2147570985}
!4214 = !DILocation(line: 38, column: 1, scope: !4158)
!4215 = !{i64 2147571143, i64 2147571186, i64 2147571226}
!4216 = !DILocation(line: 39, column: 1, scope: !4158)
!4217 = !{i64 2147571378, i64 2147571421, i64 2147571461}
!4218 = !DILocation(line: 40, column: 1, scope: !4158)
!4219 = !{i64 2147571610, i64 2147571653, i64 2147571693}
!4220 = !DILocation(line: 41, column: 1, scope: !4158)
!4221 = !{i64 2147571836, i64 2147571879, i64 2147571919}
!4222 = !DILocation(line: 42, column: 1, scope: !4158)
!4223 = !{i64 2147572062, i64 2147572105, i64 2147572145}
!4224 = !DILocation(line: 43, column: 1, scope: !4158)
!4225 = !{i64 2147572288, i64 2147572331, i64 2147572371}
!4226 = !DILocation(line: 44, column: 1, scope: !4158)
!4227 = !{i64 2147572523, i64 2147572566, i64 2147572606}
!4228 = !DILocation(line: 45, column: 1, scope: !4158)
!4229 = !{i64 2147572767, i64 2147572810, i64 2147572850}
!4230 = !DILocation(line: 46, column: 1, scope: !4158)
!4231 = !{i64 2147573014, i64 2147573057, i64 2147573097}
!4232 = !DILocation(line: 47, column: 1, scope: !4158)
!4233 = !{i64 2147573246, i64 2147573289, i64 2147573329}
!4234 = !DILocation(line: 48, column: 1, scope: !4158)
!4235 = !{i64 2147573490, i64 2147573533, i64 2147573573}
!4236 = !DILocation(line: 49, column: 1, scope: !4158)
!4237 = !{i64 2147573728, i64 2147573771, i64 2147573811}
!4238 = !DILocation(line: 50, column: 1, scope: !4158)
!4239 = !{i64 2147574002, i64 2147574045, i64 2147574085}
!4240 = !DILocation(line: 51, column: 1, scope: !4158)
!4241 = !{i64 2147574240, i64 2147574283, i64 2147574323}
!4242 = !DILocation(line: 52, column: 1, scope: !4158)
!4243 = !{i64 2147574493, i64 2147574536, i64 2147574576}
!4244 = !DILocation(line: 53, column: 1, scope: !4158)
!4245 = !{i64 2147578798, i64 2147578841, i64 2147578881}
!4246 = !DILocation(line: 54, column: 1, scope: !4158)
!4247 = !{i64 2147579033, i64 2147579076, i64 2147579116}
!4248 = !DILocation(line: 55, column: 1, scope: !4158)
!4249 = !{i64 2147579283, i64 2147579326, i64 2147579366}
!4250 = !DILocation(line: 56, column: 1, scope: !4158)
!4251 = !{i64 2147579530, i64 2147579573, i64 2147579613}
!4252 = !DILocation(line: 57, column: 1, scope: !4158)
!4253 = !{i64 2147579765, i64 2147579808, i64 2147579848}
!4254 = !DILocation(line: 58, column: 1, scope: !4158)
!4255 = !{i64 2147580000, i64 2147580043, i64 2147580083}
!4256 = !DILocation(line: 59, column: 1, scope: !4158)
!4257 = !{i64 2147580235, i64 2147580278, i64 2147580318}
!4258 = !DILocation(line: 60, column: 1, scope: !4158)
!4259 = !{i64 2147580470, i64 2147580513, i64 2147580553}
!4260 = !DILocation(line: 61, column: 1, scope: !4158)
!4261 = !{i64 2147580714, i64 2147580757, i64 2147580797}
!4262 = !DILocation(line: 62, column: 1, scope: !4158)
!4263 = !{i64 2147580952, i64 2147580995, i64 2147581035}
!4264 = !DILocation(line: 63, column: 1, scope: !4158)
!4265 = !{i64 2147581193, i64 2147581236, i64 2147581276}
!4266 = !DILocation(line: 64, column: 1, scope: !4158)
!4267 = !{i64 2147581473, i64 2147581516, i64 2147581556}
!4268 = !DILocation(line: 65, column: 1, scope: !4158)
!4269 = !{i64 2147581732, i64 2147581775, i64 2147581815}
!4270 = !DILocation(line: 66, column: 1, scope: !4158)
!4271 = !{i64 2147581970, i64 2147582013, i64 2147582053}
!4272 = !DILocation(line: 67, column: 1, scope: !4158)
!4273 = !{i64 2147582199, i64 2147582242, i64 2147582282}
!4274 = !DILocation(line: 68, column: 1, scope: !4158)
!4275 = !{i64 2147582407, i64 2147582450, i64 2147582490}
!4276 = !DILocation(line: 69, column: 1, scope: !4158)
!4277 = !{i64 2147582618, i64 2147582661, i64 2147582701}
!4278 = !DILocation(line: 70, column: 1, scope: !4158)
!4279 = !{i64 2147582853, i64 2147582896, i64 2147582936}
!4280 = !DILocation(line: 71, column: 1, scope: !4158)
!4281 = !{i64 2147583082, i64 2147583125, i64 2147583165}
!4282 = !DILocation(line: 72, column: 1, scope: !4158)
!4283 = !{i64 2147583320, i64 2147583363, i64 2147583403}
!4284 = !DILocation(line: 73, column: 1, scope: !4158)
!4285 = !{i64 2147583552, i64 2147583595, i64 2147583635}
!4286 = !DILocation(line: 74, column: 1, scope: !4158)
!4287 = !{i64 2147583778, i64 2147583821, i64 2147583861}
!4288 = !DILocation(line: 75, column: 1, scope: !4158)
!4289 = !{i64 2147583995, i64 2147584038, i64 2147584078}
!4290 = !DILocation(line: 76, column: 1, scope: !4158)
!4291 = !{i64 2147584227, i64 2147584270, i64 2147584310}
!4292 = !DILocation(line: 77, column: 1, scope: !4158)
!4293 = !{i64 2147584453, i64 2147584496, i64 2147584536}
!4294 = !DILocation(line: 78, column: 1, scope: !4158)
!4295 = !{i64 2147584667, i64 2147584710, i64 2147584750}
!4296 = !DILocation(line: 79, column: 1, scope: !4158)
!4297 = !{i64 2147584887, i64 2147584930, i64 2147584970}
!4298 = !DILocation(line: 80, column: 1, scope: !4158)
!4299 = !{i64 2147585119, i64 2147585162, i64 2147585202}
!4300 = !DILocation(line: 81, column: 1, scope: !4158)
!4301 = !{i64 2147585327, i64 2147585370, i64 2147585410}
!4302 = !DILocation(line: 82, column: 1, scope: !4158)
!4303 = !{i64 2147585532, i64 2147585575, i64 2147585615}
!4304 = !DILocation(line: 83, column: 1, scope: !4158)
!4305 = !{i64 2147585749, i64 2147585792, i64 2147585832}
!4306 = !DILocation(line: 84, column: 1, scope: !4158)
!4307 = !{i64 2147585963, i64 2147586006, i64 2147586046}
!4308 = !DILocation(line: 85, column: 1, scope: !4158)
!4309 = !{i64 2147586189, i64 2147586232, i64 2147586272}
!4310 = !DILocation(line: 86, column: 1, scope: !4158)
!4311 = !{i64 2147586409, i64 2147586452, i64 2147586492}
!4312 = !DILocation(line: 87, column: 1, scope: !4158)
!4313 = !{i64 2147586614, i64 2147586657, i64 2147586697}
!4314 = !DILocation(line: 88, column: 1, scope: !4158)
!4315 = !{i64 2147590907, i64 2147590950, i64 2147590990}
!4316 = !DILocation(line: 89, column: 1, scope: !4158)
!4317 = !{i64 2147591142, i64 2147591185, i64 2147591225}
!4318 = !DILocation(line: 90, column: 1, scope: !4158)
!4319 = !{i64 2147591392, i64 2147591435, i64 2147591475}
!4320 = !DILocation(line: 91, column: 1, scope: !4158)
!4321 = !{i64 2147591642, i64 2147591685, i64 2147591725}
!4322 = !DILocation(line: 92, column: 1, scope: !4158)
!4323 = !{i64 2147591880, i64 2147591923, i64 2147591963}
!4324 = !DILocation(line: 93, column: 1, scope: !4158)
!4325 = !{i64 2147592091, i64 2147592134, i64 2147592174}
!4326 = !DILocation(line: 94, column: 1, scope: !4158)
!4327 = !{i64 2147592308, i64 2147592351, i64 2147592391}
!4328 = !DILocation(line: 95, column: 1, scope: !4158)
!4329 = !{i64 2147592504, i64 2147592547, i64 2147592587}
!4330 = !DILocation(line: 96, column: 1, scope: !4158)
!4331 = !{i64 2147592706, i64 2147592749, i64 2147592789}
!4332 = !DILocation(line: 97, column: 1, scope: !4158)
!4333 = !{i64 2147592899, i64 2147592942, i64 2147592982}
!4334 = !DILocation(line: 98, column: 1, scope: !4158)
!4335 = !{i64 2147593107, i64 2147593150, i64 2147593190}
!4336 = !DILocation(line: 99, column: 1, scope: !4158)
!4337 = !{i64 2147593303, i64 2147593346, i64 2147593386}
!4338 = !DILocation(line: 100, column: 1, scope: !4158)
!4339 = !{i64 2147593535, i64 2147593578, i64 2147593618}
!4340 = !DILocation(line: 101, column: 1, scope: !4158)
!4341 = !{i64 2147593746, i64 2147593789, i64 2147593829}
!4342 = !DILocation(line: 102, column: 1, scope: !4158)
!4343 = !{i64 2147593945, i64 2147593988, i64 2147594028}
!4344 = !DILocation(line: 103, column: 1, scope: !4158)
!4345 = !{i64 2147594120, i64 2147594163, i64 2147594203}
!4346 = !DILocation(line: 104, column: 1, scope: !4158)
!4347 = !{i64 2147594304, i64 2147594347, i64 2147594387}
!4348 = !DILocation(line: 105, column: 1, scope: !4158)
!4349 = !{i64 2147594506, i64 2147594549, i64 2147594589}
!4350 = !DILocation(line: 106, column: 1, scope: !4158)
!4351 = !{i64 2147594705, i64 2147594748, i64 2147594788}
!4352 = !DILocation(line: 107, column: 1, scope: !4158)
!4353 = !{i64 2147594871, i64 2147594914, i64 2147594954}
!4354 = !DILocation(line: 108, column: 1, scope: !4158)
!4355 = !{i64 2147595055, i64 2147595098, i64 2147595138}
!4356 = !DILocation(line: 109, column: 1, scope: !4158)
!4357 = !{i64 2147595245, i64 2147595288, i64 2147595328}
!4358 = !DILocation(line: 110, column: 1, scope: !4158)
!4359 = !{i64 2147595429, i64 2147595472, i64 2147595512}
!4360 = !DILocation(line: 111, column: 1, scope: !4158)
!4361 = !{i64 2147595643, i64 2147595686, i64 2147595726}
!4362 = !DILocation(line: 112, column: 1, scope: !4158)
!4363 = !{i64 2147595854, i64 2147595897, i64 2147595937}
!4364 = !DILocation(line: 113, column: 1, scope: !4158)
!4365 = !{i64 2147596077, i64 2147596120, i64 2147596160}
!4366 = !DILocation(line: 114, column: 1, scope: !4158)
!4367 = !{i64 2147596261, i64 2147596304, i64 2147596344}
!4368 = !DILocation(line: 115, column: 1, scope: !4158)
!4369 = !{i64 2147596475, i64 2147596518, i64 2147596558}
!4370 = !DILocation(line: 116, column: 1, scope: !4158)
!4371 = !{i64 2147596641, i64 2147596684, i64 2147596724}
!4372 = !DILocation(line: 117, column: 1, scope: !4158)
!4373 = !{i64 2147596822, i64 2147596865, i64 2147596905}
!4374 = !DILocation(line: 118, column: 1, scope: !4158)
!4375 = !{i64 2147597015, i64 2147597058, i64 2147597098}
!4376 = !DILocation(line: 119, column: 1, scope: !4158)
!4377 = !{i64 2147597241, i64 2147597284, i64 2147597324}
!4378 = !DILocation(line: 120, column: 1, scope: !4158)
!4379 = !{i64 2147597455, i64 2147597498, i64 2147597538}
!4380 = !DILocation(line: 121, column: 1, scope: !4158)
!4381 = !{i64 2147597681, i64 2147597724, i64 2147597764}
!4382 = !DILocation(line: 122, column: 1, scope: !4158)
!4383 = !{i64 2147597898, i64 2147597941, i64 2147597981}
!4384 = !DILocation(line: 123, column: 1, scope: !4158)
!4385 = !{i64 2147598175, i64 2147598218, i64 2147598258}
!4386 = !DILocation(line: 124, column: 1, scope: !4158)
!4387 = !{i64 2147598401, i64 2147598444, i64 2147598484}
!4388 = !DILocation(line: 125, column: 1, scope: !4158)
!4389 = !{i64 2147598609, i64 2147598652, i64 2147598692}
!4390 = !DILocation(line: 126, column: 1, scope: !4158)
!4391 = !{i64 2147598805, i64 2147598848, i64 2147598888}
!4392 = !DILocation(line: 127, column: 1, scope: !4158)
!4393 = !{i64 2147599070, i64 2147599113, i64 2147599153}
!4394 = !DILocation(line: 128, column: 1, scope: !4158)
!4395 = !{i64 2147599284, i64 2147599327, i64 2147599367}
!4396 = !DILocation(line: 129, column: 1, scope: !4158)
!4397 = !{i64 2147599459, i64 2147599502, i64 2147599542}
!4398 = !DILocation(line: 130, column: 1, scope: !4158)
!4399 = !{i64 2147599713, i64 2147599756, i64 2147599796}
!4400 = !DILocation(line: 131, column: 1, scope: !4158)
!4401 = !{i64 2147603973, i64 2147604016, i64 2147604056}
!4402 = !DILocation(line: 132, column: 1, scope: !4158)
!4403 = !{i64 2147604215, i64 2147604258, i64 2147604298}
!4404 = !DILocation(line: 133, column: 1, scope: !4158)
!4405 = !{i64 2147604378, i64 2147604421, i64 2147604461}
!4406 = !DILocation(line: 134, column: 1, scope: !4158)
!4407 = !{i64 2147604565, i64 2147604608, i64 2147604648}
!4408 = !DILocation(line: 135, column: 1, scope: !4158)
!4409 = !{i64 2147604758, i64 2147604801, i64 2147604841}
!4410 = !DILocation(line: 136, column: 1, scope: !4158)
!4411 = !{i64 2147604941, i64 2147604984, i64 2147605024}
!4412 = !DILocation(line: 137, column: 1, scope: !4158)
!4413 = !{i64 2147605155, i64 2147605198, i64 2147605238}
!4414 = !DILocation(line: 138, column: 1, scope: !4158)
!4415 = !{i64 2147605366, i64 2147605409, i64 2147605449}
!4416 = !DILocation(line: 139, column: 1, scope: !4158)
!4417 = !{i64 2147605586, i64 2147605629, i64 2147605669}
!4418 = !DILocation(line: 140, column: 1, scope: !4158)
!4419 = !{i64 2147605793, i64 2147605836, i64 2147605876}
!4420 = !DILocation(line: 141, column: 1, scope: !4158)
!4421 = !{i64 2147606066, i64 2147606109, i64 2147606149}
!4422 = !DILocation(line: 142, column: 1, scope: !4158)
!4423 = !{i64 2147606314, i64 2147606357, i64 2147606397}
!4424 = !DILocation(line: 143, column: 1, scope: !4158)
!4425 = !{i64 2147606513, i64 2147606556, i64 2147606596}
!4426 = !DILocation(line: 144, column: 1, scope: !4158)
!4427 = !{i64 2147606748, i64 2147606791, i64 2147606831}
!4428 = !DILocation(line: 145, column: 1, scope: !4158)
!4429 = !{i64 2147606998, i64 2147607041, i64 2147607081}
!4430 = !DILocation(line: 146, column: 1, scope: !4158)
!4431 = !{i64 2147607200, i64 2147607243, i64 2147607283}
!4432 = !DILocation(line: 147, column: 1, scope: !4158)
!4433 = !{i64 2147607423, i64 2147607466, i64 2147607506}
!4434 = !DILocation(line: 148, column: 1, scope: !4158)
!4435 = !{i64 2147607637, i64 2147607680, i64 2147607720}
!4436 = !DILocation(line: 149, column: 1, scope: !4158)
!4437 = !{i64 2147607881, i64 2147607924, i64 2147607964}
!4438 = !DILocation(line: 150, column: 1, scope: !4158)
!4439 = !{i64 2147608110, i64 2147608153, i64 2147608193}
!4440 = !DILocation(line: 151, column: 1, scope: !4158)
!4441 = !{i64 2147608339, i64 2147608382, i64 2147608422}
!4442 = !DILocation(line: 152, column: 1, scope: !4158)
!4443 = !{i64 2147608547, i64 2147608590, i64 2147608630}
!4444 = !DILocation(line: 153, column: 1, scope: !4158)
!4445 = !{i64 2147608785, i64 2147608828, i64 2147608868}
!4446 = !DILocation(line: 154, column: 1, scope: !4158)
!4447 = !{i64 2147609011, i64 2147609054, i64 2147609094}
!4448 = !DILocation(line: 155, column: 1, scope: !4158)
!4449 = !{i64 2147609270, i64 2147609313, i64 2147609353}
!4450 = !DILocation(line: 156, column: 1, scope: !4158)
!4451 = !{i64 2147609490, i64 2147609533, i64 2147609573}
!4452 = !DILocation(line: 157, column: 1, scope: !4158)
!4453 = !{i64 2147609722, i64 2147609765, i64 2147609805}
!4454 = !DILocation(line: 158, column: 1, scope: !4158)
!4455 = !{i64 2147609963, i64 2147610006, i64 2147610046}
!4456 = !DILocation(line: 159, column: 1, scope: !4158)
!4457 = !{i64 2147610204, i64 2147610247, i64 2147610287}
!4458 = !DILocation(line: 160, column: 1, scope: !4158)
!4459 = !{i64 2147610427, i64 2147610470, i64 2147610510}
!4460 = !DILocation(line: 161, column: 1, scope: !4158)
!4461 = !{i64 2147610644, i64 2147610687, i64 2147610727}
!4462 = !DILocation(line: 162, column: 1, scope: !4158)
!4463 = !{i64 2147610885, i64 2147610928, i64 2147610968}
!4464 = !DILocation(line: 163, column: 1, scope: !4158)
!4465 = !{i64 2147611072, i64 2147611115, i64 2147611155}
!4466 = !DILocation(line: 164, column: 1, scope: !4158)
!4467 = !{i64 2147611259, i64 2147611302, i64 2147611342}
!4468 = !DILocation(line: 165, column: 1, scope: !4158)
!4469 = !{i64 2147611422, i64 2147611465, i64 2147611505}
!4470 = !DILocation(line: 166, column: 1, scope: !4158)
!4471 = !{i64 2147611681, i64 2147611724, i64 2147611764}
!4472 = !DILocation(line: 167, column: 1, scope: !4158)
!4473 = !{i64 2147611904, i64 2147611947, i64 2147611987}
!4474 = !DILocation(line: 168, column: 1, scope: !4158)
!4475 = !{i64 2147612133, i64 2147612176, i64 2147612216}
!4476 = !DILocation(line: 169, column: 1, scope: !4158)
!4477 = !{i64 2147612329, i64 2147612372, i64 2147612412}
!4478 = !DILocation(line: 170, column: 1, scope: !4158)
!4479 = !{i64 2147616602, i64 2147616645, i64 2147616685}
!4480 = !DILocation(line: 171, column: 1, scope: !4158)
!4481 = !{i64 2147616823, i64 2147616866, i64 2147616906}
!4482 = !DILocation(line: 172, column: 1, scope: !4158)
!4483 = !{i64 2147617037, i64 2147617080, i64 2147617120}
!4484 = !DILocation(line: 173, column: 1, scope: !4158)
!4485 = !{i64 2147617227, i64 2147617270, i64 2147617310}
!4486 = !DILocation(line: 174, column: 1, scope: !4158)
!4487 = !{i64 2147617426, i64 2147617469, i64 2147617509}
!4488 = !DILocation(line: 175, column: 1, scope: !4158)
!4489 = !{i64 2147617631, i64 2147617674, i64 2147617714}
!4490 = !DILocation(line: 176, column: 1, scope: !4158)
!4491 = !{i64 2147617851, i64 2147617894, i64 2147617934}
!4492 = !DILocation(line: 177, column: 1, scope: !4158)
!4493 = !{i64 2147618052, i64 2147618095, i64 2147618135}
!4494 = !DILocation(line: 178, column: 1, scope: !4158)
!4495 = !{i64 2147618251, i64 2147618294, i64 2147618334}
!4496 = !DILocation(line: 179, column: 1, scope: !4158)
!4497 = !{i64 2147618456, i64 2147618499, i64 2147618539}
!4498 = !DILocation(line: 180, column: 1, scope: !4158)
!4499 = !{i64 2147618625, i64 2147618668, i64 2147618708}
!4500 = !DILocation(line: 181, column: 1, scope: !4158)
!4501 = !{i64 2147618809, i64 2147618852, i64 2147618892}
!4502 = !DILocation(line: 182, column: 1, scope: !4158)
!4503 = !{i64 2147618993, i64 2147619036, i64 2147619076}
!4504 = !DILocation(line: 183, column: 1, scope: !4158)
!4505 = !{i64 2147619180, i64 2147619223, i64 2147619263}
!4506 = !DILocation(line: 184, column: 1, scope: !4158)
!4507 = !{i64 2147619364, i64 2147619407, i64 2147619447}
!4508 = !DILocation(line: 185, column: 1, scope: !4158)
!4509 = !{i64 2147619602, i64 2147619645, i64 2147619685}
!4510 = !DILocation(line: 186, column: 1, scope: !4158)
!4511 = !{i64 2147619832, i64 2147619875, i64 2147619915}
!4512 = !DILocation(line: 187, column: 1, scope: !4158)
!4513 = !{i64 2147620061, i64 2147620104, i64 2147620144}
!4514 = !DILocation(line: 188, column: 1, scope: !4158)
!4515 = !{i64 2147620248, i64 2147620291, i64 2147620331}
!4516 = !DILocation(line: 189, column: 1, scope: !4158)
!4517 = !{i64 2147620444, i64 2147620487, i64 2147620527}
!4518 = !DILocation(line: 190, column: 1, scope: !4158)
!4519 = !{i64 2147620652, i64 2147620695, i64 2147620735}
!4520 = !DILocation(line: 191, column: 1, scope: !4158)
!4521 = !{i64 2147620864, i64 2147620907, i64 2147620947}
!4522 = !DILocation(line: 192, column: 1, scope: !4158)
!4523 = !{i64 2147621063, i64 2147621106, i64 2147621146}
!4524 = !DILocation(line: 193, column: 1, scope: !4158)
!4525 = !{i64 2147621301, i64 2147621344, i64 2147621384}
!4526 = !DILocation(line: 194, column: 1, scope: !4158)
!4527 = !{i64 2147621497, i64 2147621540, i64 2147621580}
!4528 = !DILocation(line: 195, column: 1, scope: !4158)
!4529 = !{i64 2147621699, i64 2147621742, i64 2147621782}
!4530 = !DILocation(line: 196, column: 1, scope: !4158)
!4531 = !{i64 2147621892, i64 2147621935, i64 2147621975}
!4532 = !DILocation(line: 197, column: 1, scope: !4158)
!4533 = !{i64 2147622126, i64 2147622169, i64 2147622209}
!4534 = !DILocation(line: 198, column: 1, scope: !4158)
!4535 = !{i64 2147622289, i64 2147622332, i64 2147622372}
!4536 = !DILocation(line: 199, column: 1, scope: !4158)
!4537 = !{i64 2147622528, i64 2147622571, i64 2147622611}
!4538 = !DILocation(line: 200, column: 1, scope: !4158)
!4539 = !{i64 2147622767, i64 2147622810, i64 2147622850}
!4540 = !DILocation(line: 201, column: 1, scope: !4158)
!4541 = !{i64 2147623003, i64 2147623046, i64 2147623086}
!4542 = !DILocation(line: 202, column: 1, scope: !4158)
!4543 = !{i64 2147623233, i64 2147623276, i64 2147623316}
!4544 = !DILocation(line: 203, column: 1, scope: !4158)
!4545 = !{i64 2147623420, i64 2147623463, i64 2147623503}
!4546 = !DILocation(line: 204, column: 1, scope: !4158)
!4547 = !{i64 2147623619, i64 2147623662, i64 2147623702}
!4548 = !DILocation(line: 205, column: 1, scope: !4158)
!4549 = !{i64 2147623890, i64 2147623933, i64 2147623973}
!4550 = !DILocation(line: 206, column: 1, scope: !4158)
!4551 = !{i64 2147624065, i64 2147624108, i64 2147624148}
!4552 = !DILocation(line: 207, column: 1, scope: !4158)
!4553 = !{i64 2147624299, i64 2147624342, i64 2147624382}
!4554 = !DILocation(line: 208, column: 1, scope: !4158)
!4555 = !{i64 2147624507, i64 2147624550, i64 2147624590}
!4556 = !DILocation(line: 209, column: 1, scope: !4158)
!4557 = !{i64 2147624725, i64 2147624768, i64 2147624808}
!4558 = !DILocation(line: 210, column: 1, scope: !4158)
!4559 = !{i64 2147624915, i64 2147624958, i64 2147624998}
!4560 = !DILocation(line: 211, column: 1, scope: !4158)
!4561 = !{i64 2147625111, i64 2147625154, i64 2147625194}
!4562 = !DILocation(line: 212, column: 1, scope: !4158)
!4563 = !{i64 2147625317, i64 2147625360, i64 2147625400}
!4564 = !DILocation(line: 213, column: 1, scope: !4158)
!4565 = !{i64 2147625522, i64 2147625565, i64 2147625605}
!4566 = !DILocation(line: 214, column: 1, scope: !4158)
!4567 = !{i64 2147629797, i64 2147629840, i64 2147629880}
!4568 = !DILocation(line: 215, column: 1, scope: !4158)
!4569 = !{i64 2147630023, i64 2147630066, i64 2147630106}
!4570 = !DILocation(line: 216, column: 1, scope: !4158)
!4571 = !{i64 2147630255, i64 2147630298, i64 2147630338}
!4572 = !DILocation(line: 217, column: 1, scope: !4158)
!4573 = !{i64 2147630439, i64 2147630482, i64 2147630522}
!4574 = !DILocation(line: 218, column: 1, scope: !4158)
!4575 = !{i64 2147630648, i64 2147630691, i64 2147630731}
!4576 = !DILocation(line: 219, column: 1, scope: !4158)
!4577 = !{i64 2147630832, i64 2147630875, i64 2147630915}
!4578 = !DILocation(line: 220, column: 1, scope: !4158)
!4579 = !{i64 2147631058, i64 2147631101, i64 2147631141}
!4580 = !DILocation(line: 221, column: 1, scope: !4158)
!4581 = !{i64 2147631284, i64 2147631327, i64 2147631367}
!4582 = !DILocation(line: 222, column: 1, scope: !4158)
!4583 = !{i64 2147631510, i64 2147631553, i64 2147631593}
!4584 = !DILocation(line: 223, column: 1, scope: !4158)
!4585 = !{i64 2147631736, i64 2147631779, i64 2147631819}
!4586 = !DILocation(line: 224, column: 1, scope: !4158)
!4587 = !{i64 2147631962, i64 2147632005, i64 2147632045}
!4588 = !DILocation(line: 225, column: 1, scope: !4158)
!4589 = !{i64 2147632194, i64 2147632237, i64 2147632277}
!4590 = !DILocation(line: 226, column: 1, scope: !4158)
!4591 = !{i64 2147632432, i64 2147632475, i64 2147632515}
!4592 = !DILocation(line: 227, column: 1, scope: !4158)
!4593 = !{i64 2147632652, i64 2147632695, i64 2147632735}
!4594 = !DILocation(line: 228, column: 1, scope: !4158)
!4595 = !{i64 2147632896, i64 2147632939, i64 2147632979}
!4596 = !DILocation(line: 229, column: 1, scope: !4158)
!4597 = !{i64 2147633137, i64 2147633180, i64 2147633220}
!4598 = !DILocation(line: 230, column: 1, scope: !4158)
!4599 = !{i64 2147633372, i64 2147633415, i64 2147633455}
!4600 = !DILocation(line: 231, column: 1, scope: !4158)
!4601 = !{i64 2147633604, i64 2147633647, i64 2147633687}
!4602 = !DILocation(line: 232, column: 1, scope: !4158)
!4603 = !{i64 2147633806, i64 2147633849, i64 2147633889}
!4604 = !DILocation(line: 233, column: 1, scope: !4158)
!4605 = !{i64 2147634056, i64 2147634099, i64 2147634139}
!4606 = !DILocation(line: 234, column: 1, scope: !4158)
!4607 = !{i64 2147634294, i64 2147634337, i64 2147634377}
!4608 = !DILocation(line: 235, column: 1, scope: !4158)
!4609 = !{i64 2147634478, i64 2147634521, i64 2147634561}
!4610 = !DILocation(line: 236, column: 1, scope: !4158)
!4611 = !{i64 2147634702, i64 2147634745, i64 2147634785}
!4612 = !DILocation(line: 237, column: 1, scope: !4158)
!4613 = !{i64 2147634940, i64 2147634983, i64 2147635023}
!4614 = !DILocation(line: 238, column: 1, scope: !4158)
!4615 = !{i64 2147635178, i64 2147635221, i64 2147635261}
!4616 = !DILocation(line: 239, column: 1, scope: !4158)
!4617 = !{i64 2147635341, i64 2147635384, i64 2147635424}
!4618 = !DILocation(line: 240, column: 1, scope: !4158)
!4619 = !{i64 2147635534, i64 2147635577, i64 2147635617}
!4620 = !DILocation(line: 241, column: 1, scope: !4158)
!4621 = !{i64 2147635787, i64 2147635830, i64 2147635870}
!4622 = !DILocation(line: 242, column: 1, scope: !4158)
!4623 = !{i64 2147636001, i64 2147636044, i64 2147636084}
!4624 = !DILocation(line: 243, column: 1, scope: !4158)
!4625 = !{i64 2147636209, i64 2147636252, i64 2147636292}
!4626 = !DILocation(line: 244, column: 1, scope: !4158)
!4627 = !{i64 2147636399, i64 2147636442, i64 2147636482}
!4628 = !DILocation(line: 245, column: 1, scope: !4158)
!4629 = !{i64 2147636613, i64 2147636656, i64 2147636696}
!4630 = !DILocation(line: 246, column: 1, scope: !4158)
!4631 = !{i64 2147636875, i64 2147636918, i64 2147636958}
!4632 = !DILocation(line: 247, column: 1, scope: !4158)
!4633 = !{i64 2147637086, i64 2147637129, i64 2147637169}
!4634 = !DILocation(line: 248, column: 1, scope: !4158)
!4635 = !{i64 2147637330, i64 2147637373, i64 2147637413}
!4636 = !DILocation(line: 249, column: 1, scope: !4158)
!4637 = !{i64 2147637541, i64 2147637584, i64 2147637624}
!4638 = !DILocation(line: 250, column: 1, scope: !4158)
!4639 = !{i64 2147637770, i64 2147637813, i64 2147637853}
!4640 = !DILocation(line: 251, column: 1, scope: !4158)
!4641 = !{i64 2147638035, i64 2147638078, i64 2147638118}
!4642 = !DILocation(line: 252, column: 1, scope: !4158)
!4643 = !{i64 2147642301, i64 2147642344, i64 2147642384}
!4644 = !DILocation(line: 253, column: 1, scope: !4158)
!4645 = !{i64 2147642497, i64 2147642540, i64 2147642580}
!4646 = !DILocation(line: 254, column: 1, scope: !4158)
!4647 = !{i64 2147642720, i64 2147642763, i64 2147642803}
!4648 = !DILocation(line: 255, column: 1, scope: !4158)
!4649 = !{i64 2147642883, i64 2147642926, i64 2147642966}
!4650 = !DILocation(line: 256, column: 1, scope: !4158)
!4651 = !{i64 2147643088, i64 2147643131, i64 2147643171}
!4652 = !DILocation(line: 257, column: 1, scope: !4158)
!4653 = !{i64 2147643308, i64 2147643351, i64 2147643391}
!4654 = !DILocation(line: 258, column: 1, scope: !4158)
!4655 = !{i64 2147643522, i64 2147643565, i64 2147643605}
!4656 = !DILocation(line: 259, column: 1, scope: !4158)
!4657 = !{i64 2147643736, i64 2147643779, i64 2147643819}
!4658 = !DILocation(line: 260, column: 1, scope: !4158)
!4659 = !{i64 2147643947, i64 2147643990, i64 2147644030}
!4660 = !DILocation(line: 261, column: 1, scope: !4158)
!4661 = !{i64 2147644140, i64 2147644183, i64 2147644223}
!4662 = !DILocation(line: 262, column: 1, scope: !4158)
!4663 = !{i64 2147644339, i64 2147644382, i64 2147644422}
!4664 = !DILocation(line: 263, column: 1, scope: !4158)
!4665 = !{i64 2147644511, i64 2147644554, i64 2147644594}
!4666 = !DILocation(line: 264, column: 1, scope: !4158)
!4667 = !{i64 2147644704, i64 2147644747, i64 2147644787}
!4668 = !DILocation(line: 265, column: 1, scope: !4158)
!4669 = !{i64 2147644900, i64 2147644943, i64 2147644983}
!4670 = !DILocation(line: 266, column: 1, scope: !4158)
!4671 = !{i64 2147645127, i64 2147645170, i64 2147645210}
!4672 = !DILocation(line: 267, column: 1, scope: !4158)
!4673 = !{i64 2147645344, i64 2147645387, i64 2147645427}
!4674 = !DILocation(line: 268, column: 1, scope: !4158)
!4675 = !{i64 2147645636, i64 2147645679, i64 2147645719}
!4676 = !DILocation(line: 269, column: 1, scope: !4158)
!4677 = !{i64 2147645868, i64 2147645911, i64 2147645951}
!4678 = !DILocation(line: 270, column: 1, scope: !4158)
!4679 = !{i64 2147646085, i64 2147646128, i64 2147646168}
!4680 = !DILocation(line: 271, column: 1, scope: !4158)
!4681 = !{i64 2147646292, i64 2147646335, i64 2147646375}
!4682 = !DILocation(line: 272, column: 1, scope: !4158)
!4683 = !{i64 2147646493, i64 2147646536, i64 2147646576}
!4684 = !DILocation(line: 273, column: 1, scope: !4158)
!4685 = !{i64 2147646725, i64 2147646768, i64 2147646808}
!4686 = !DILocation(line: 274, column: 1, scope: !4158)
!4687 = !{i64 2147646933, i64 2147646976, i64 2147647016}
!4688 = !DILocation(line: 275, column: 1, scope: !4158)
!4689 = !{i64 2147647123, i64 2147647166, i64 2147647206}
!4690 = !DILocation(line: 276, column: 1, scope: !4158)
!4691 = !{i64 2147647349, i64 2147647392, i64 2147647432}
!4692 = !DILocation(line: 277, column: 1, scope: !4158)
!4693 = !{i64 2147647538, i64 2147647581, i64 2147647621}
!4694 = !DILocation(line: 278, column: 1, scope: !4158)
!4695 = !{i64 2147647809, i64 2147647852, i64 2147647892}
!4696 = !DILocation(line: 279, column: 1, scope: !4158)
!4697 = !{i64 2147648029, i64 2147648072, i64 2147648112}
!4698 = !DILocation(line: 280, column: 1, scope: !4158)
!4699 = !{i64 2147648282, i64 2147648325, i64 2147648365}
!4700 = !DILocation(line: 281, column: 1, scope: !4158)
!4701 = !{i64 2147648490, i64 2147648533, i64 2147648573}
!4702 = !DILocation(line: 282, column: 1, scope: !4158)
!4703 = !{i64 2147648722, i64 2147648765, i64 2147648805}
!4704 = !DILocation(line: 283, column: 1, scope: !4158)
!4705 = !{i64 2147648933, i64 2147648976, i64 2147649016}
!4706 = !DILocation(line: 284, column: 1, scope: !4158)
!4707 = !{i64 2147649123, i64 2147649166, i64 2147649206}
!4708 = !DILocation(line: 285, column: 1, scope: !4158)
!4709 = !{i64 2147649337, i64 2147649380, i64 2147649420}
!4710 = !DILocation(line: 286, column: 1, scope: !4158)
!4711 = !{i64 2147649536, i64 2147649579, i64 2147649619}
!4712 = !DILocation(line: 287, column: 1, scope: !4158)
!4713 = !{i64 2147649723, i64 2147649766, i64 2147649806}
!4714 = !DILocation(line: 288, column: 1, scope: !4158)
!4715 = !{i64 2147649931, i64 2147649974, i64 2147650014}
!4716 = !DILocation(line: 289, column: 1, scope: !4158)
!4717 = !{i64 2147650160, i64 2147650203, i64 2147650243}
!4718 = !DILocation(line: 290, column: 1, scope: !4158)
!4719 = !{i64 2147650362, i64 2147650405, i64 2147650445}
!4720 = !DILocation(line: 291, column: 1, scope: !4158)
!4721 = !{i64 2147650561, i64 2147650604, i64 2147650644}
!4722 = !DILocation(line: 292, column: 1, scope: !4158)
!4723 = !{i64 2147650778, i64 2147650821, i64 2147650861}
!4724 = !DILocation(line: 294, column: 1, scope: !4158)
!4725 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !200, file: !200, line: 30, type: !207, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !4726)
!4726 = !{!4727, !4728}
!4727 = !DILocalVariable(name: "arg", arg: 1, scope: !4725, file: !200, line: 30, type: !209)
!4728 = !DILocalVariable(name: "key", scope: !4725, file: !200, line: 32, type: !142)
!4729 = !DILocation(line: 0, scope: !4725)
!4730 = !DILocation(line: 37, column: 2, scope: !4725)
!4731 = !DILocation(line: 38, column: 2, scope: !4725)
!4732 = !DILocation(line: 55, column: 2, scope: !4733, inlinedAt: !4740)
!4733 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4734, file: !4734, line: 42, type: !4735, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !4737)
!4734 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!32}
!4737 = !{!4738, !4739}
!4738 = !DILocalVariable(name: "key", scope: !4733, file: !4734, line: 44, type: !32)
!4739 = !DILocalVariable(name: "tmp", scope: !4733, file: !4734, line: 53, type: !32)
!4740 = distinct !DILocation(line: 40, column: 8, scope: !4725)
!4741 = !{i64 2184613}
!4742 = !DILocation(line: 0, scope: !4733, inlinedAt: !4740)
!4743 = !DILocalVariable(name: "key", arg: 1, scope: !4744, file: !4734, line: 84, type: !32)
!4744 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4734, file: !4734, line: 84, type: !4745, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !4747)
!4745 = !DISubroutineType(types: !4746)
!4746 = !{null, !32}
!4747 = !{!4743}
!4748 = !DILocation(line: 0, scope: !4744, inlinedAt: !4749)
!4749 = distinct !DILocation(line: 47, column: 2, scope: !4725)
!4750 = !DILocation(line: 95, column: 2, scope: !4744, inlinedAt: !4749)
!4751 = !{i64 2185430}
!4752 = !DILocation(line: 51, column: 18, scope: !4725)
!4753 = !DILocation(line: 53, column: 2, scope: !4725)
!4754 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !4755, file: !4755, line: 1609, type: !2876, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !381)
!4755 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4756 = !DILocation(line: 1611, column: 3, scope: !4754)
!4757 = !DILocation(line: 1612, column: 1, scope: !4754)
!4758 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !4755, file: !4755, line: 1629, type: !2876, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !381)
!4759 = !DILocation(line: 1631, column: 3, scope: !4758)
!4760 = !DILocation(line: 1632, column: 1, scope: !4758)
!4761 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !230, file: !230, line: 26, type: !236, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !227, retainedNodes: !4762)
!4762 = !{!4763}
!4763 = !DILocalVariable(name: "dev", arg: 1, scope: !4761, file: !230, line: 26, type: !238)
!4764 = !DILocation(line: 0, scope: !4761)
!4765 = !DILocation(line: 68, column: 2, scope: !4761)
!4766 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !4767, file: !4767, line: 57, type: !4768, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !4814)
!4767 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4768 = !DISubroutineType(types: !4769)
!4769 = !{null, !32, !4770}
!4770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4771, size: 32)
!4771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4772)
!4772 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2475, line: 141, baseType: !4773)
!4773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2475, line: 97, size: 256, elements: !4774)
!4774 = !{!4775}
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !4773, file: !2475, line: 107, baseType: !4776, size: 256)
!4776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2475, line: 98, size: 256, elements: !4777)
!4777 = !{!4778, !4783, !4788, !4793, !4798, !4803, !4808, !4813}
!4778 = !DIDerivedType(tag: DW_TAG_member, scope: !4776, file: !2475, line: 99, baseType: !4779, size: 32)
!4779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4776, file: !2475, line: 99, size: 32, elements: !4780)
!4780 = !{!4781, !4782}
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !4779, file: !2475, line: 99, baseType: !142, size: 32)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !4779, file: !2475, line: 99, baseType: !142, size: 32)
!4783 = !DIDerivedType(tag: DW_TAG_member, scope: !4776, file: !2475, line: 100, baseType: !4784, size: 32, offset: 32)
!4784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4776, file: !2475, line: 100, size: 32, elements: !4785)
!4785 = !{!4786, !4787}
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !4784, file: !2475, line: 100, baseType: !142, size: 32)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !4784, file: !2475, line: 100, baseType: !142, size: 32)
!4788 = !DIDerivedType(tag: DW_TAG_member, scope: !4776, file: !2475, line: 101, baseType: !4789, size: 32, offset: 64)
!4789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4776, file: !2475, line: 101, size: 32, elements: !4790)
!4790 = !{!4791, !4792}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !4789, file: !2475, line: 101, baseType: !142, size: 32)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !4789, file: !2475, line: 101, baseType: !142, size: 32)
!4793 = !DIDerivedType(tag: DW_TAG_member, scope: !4776, file: !2475, line: 102, baseType: !4794, size: 32, offset: 96)
!4794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4776, file: !2475, line: 102, size: 32, elements: !4795)
!4795 = !{!4796, !4797}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !4794, file: !2475, line: 102, baseType: !142, size: 32)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !4794, file: !2475, line: 102, baseType: !142, size: 32)
!4798 = !DIDerivedType(tag: DW_TAG_member, scope: !4776, file: !2475, line: 103, baseType: !4799, size: 32, offset: 128)
!4799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4776, file: !2475, line: 103, size: 32, elements: !4800)
!4800 = !{!4801, !4802}
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4799, file: !2475, line: 103, baseType: !142, size: 32)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4799, file: !2475, line: 103, baseType: !142, size: 32)
!4803 = !DIDerivedType(tag: DW_TAG_member, scope: !4776, file: !2475, line: 104, baseType: !4804, size: 32, offset: 160)
!4804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4776, file: !2475, line: 104, size: 32, elements: !4805)
!4805 = !{!4806, !4807}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !4804, file: !2475, line: 104, baseType: !142, size: 32)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4804, file: !2475, line: 104, baseType: !142, size: 32)
!4808 = !DIDerivedType(tag: DW_TAG_member, scope: !4776, file: !2475, line: 105, baseType: !4809, size: 32, offset: 192)
!4809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4776, file: !2475, line: 105, size: 32, elements: !4810)
!4810 = !{!4811, !4812}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !4809, file: !2475, line: 105, baseType: !142, size: 32)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4809, file: !2475, line: 105, baseType: !142, size: 32)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !4776, file: !2475, line: 106, baseType: !142, size: 32, offset: 224)
!4814 = !{!4815, !4816}
!4815 = !DILocalVariable(name: "reason", arg: 1, scope: !4766, file: !4767, line: 57, type: !32)
!4816 = !DILocalVariable(name: "esf", arg: 2, scope: !4766, file: !4767, line: 57, type: !4770)
!4817 = !DILocation(line: 0, scope: !4766)
!4818 = !DILocation(line: 63, column: 2, scope: !4766)
!4819 = !DILocation(line: 64, column: 1, scope: !4766)
!4820 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !4767, file: !4767, line: 82, type: !4821, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !4836)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{null, !4770, !4823}
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 32)
!4824 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !343, line: 37, baseType: !4825)
!4825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !343, line: 25, size: 288, elements: !4826)
!4826 = !{!4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835}
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4825, file: !343, line: 26, baseType: !142, size: 32)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4825, file: !343, line: 27, baseType: !142, size: 32, offset: 32)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4825, file: !343, line: 28, baseType: !142, size: 32, offset: 64)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4825, file: !343, line: 29, baseType: !142, size: 32, offset: 96)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4825, file: !343, line: 30, baseType: !142, size: 32, offset: 128)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4825, file: !343, line: 31, baseType: !142, size: 32, offset: 160)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4825, file: !343, line: 32, baseType: !142, size: 32, offset: 192)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4825, file: !343, line: 33, baseType: !142, size: 32, offset: 224)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4825, file: !343, line: 34, baseType: !142, size: 32, offset: 256)
!4836 = !{!4837, !4838, !4839}
!4837 = !DILocalVariable(name: "esf", arg: 1, scope: !4820, file: !4767, line: 82, type: !4770)
!4838 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !4820, file: !4767, line: 82, type: !4823)
!4839 = !DILocalVariable(name: "reason", scope: !4820, file: !4767, line: 88, type: !32)
!4840 = !DILocation(line: 0, scope: !4820)
!4841 = !DILocation(line: 88, column: 35, scope: !4820)
!4842 = !DILocation(line: 108, column: 2, scope: !4820)
!4843 = !DILocation(line: 131, column: 1, scope: !4820)
!4844 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !4767, file: !4767, line: 133, type: !4845, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !4847)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{null, !104}
!4847 = !{!4848, !4849, !4850}
!4848 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !4844, file: !4767, line: 133, type: !104)
!4849 = !DILocalVariable(name: "ssf_contents", scope: !4844, file: !4767, line: 135, type: !782)
!4850 = !DILocalVariable(name: "oops_esf", scope: !4844, file: !4767, line: 136, type: !4772)
!4851 = !DILocation(line: 0, scope: !4844)
!4852 = !DILocation(line: 136, column: 2, scope: !4844)
!4853 = !DILocation(line: 136, column: 15, scope: !4844)
!4854 = !DILocation(line: 139, column: 22, scope: !4844)
!4855 = !DILocation(line: 139, column: 17, scope: !4844)
!4856 = !DILocation(line: 139, column: 20, scope: !4844)
!4857 = !DILocation(line: 141, column: 2, scope: !4844)
!4858 = !DILocation(line: 142, column: 2, scope: !4844)
!4859 = distinct !DISubprogram(name: "arch_irq_enable", scope: !4860, file: !4860, line: 40, type: !4745, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !4861)
!4860 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4861 = !{!4862}
!4862 = !DILocalVariable(name: "irq", arg: 1, scope: !4859, file: !4860, line: 40, type: !32)
!4863 = !DILocation(line: 0, scope: !4859)
!4864 = !DILocation(line: 42, column: 2, scope: !4859)
!4865 = !DILocation(line: 43, column: 1, scope: !4859)
!4866 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !415, file: !415, line: 1684, type: !4867, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !4869)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{null, !680}
!4869 = !{!4870}
!4870 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4866, file: !415, line: 1684, type: !680)
!4871 = !DILocation(line: 0, scope: !4866)
!4872 = !DILocation(line: 1686, column: 23, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4866, file: !415, line: 1686, column: 7)
!4874 = !DILocation(line: 1686, column: 7, scope: !4866)
!4875 = !DILocation(line: 1688, column: 5, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4873, file: !415, line: 1687, column: 3)
!4877 = !{i64 2151254135}
!4878 = !DILocation(line: 1689, column: 81, scope: !4876)
!4879 = !DILocation(line: 1689, column: 60, scope: !4876)
!4880 = !DILocation(line: 1689, column: 34, scope: !4876)
!4881 = !DILocation(line: 1689, column: 5, scope: !4876)
!4882 = !DILocation(line: 1689, column: 43, scope: !4876)
!4883 = !DILocation(line: 1690, column: 5, scope: !4876)
!4884 = !{i64 2151254249}
!4885 = !DILocation(line: 1691, column: 3, scope: !4876)
!4886 = !DILocation(line: 1692, column: 1, scope: !4866)
!4887 = distinct !DISubprogram(name: "arch_irq_disable", scope: !4860, file: !4860, line: 45, type: !4745, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !4888)
!4888 = !{!4889}
!4889 = !DILocalVariable(name: "irq", arg: 1, scope: !4887, file: !4860, line: 45, type: !32)
!4890 = !DILocation(line: 0, scope: !4887)
!4891 = !DILocation(line: 47, column: 2, scope: !4887)
!4892 = !DILocation(line: 48, column: 1, scope: !4887)
!4893 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !415, file: !415, line: 1722, type: !4867, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !4894)
!4894 = !{!4895}
!4895 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4893, file: !415, line: 1722, type: !680)
!4896 = !DILocation(line: 0, scope: !4893)
!4897 = !DILocation(line: 1724, column: 23, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4893, file: !415, line: 1724, column: 7)
!4899 = !DILocation(line: 1724, column: 7, scope: !4893)
!4900 = !DILocation(line: 1726, column: 81, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4898, file: !415, line: 1725, column: 3)
!4902 = !DILocation(line: 1726, column: 60, scope: !4901)
!4903 = !DILocation(line: 1726, column: 34, scope: !4901)
!4904 = !DILocation(line: 1726, column: 5, scope: !4901)
!4905 = !DILocation(line: 1726, column: 43, scope: !4901)
!4906 = !DILocation(line: 271, column: 3, scope: !4907, inlinedAt: !4909)
!4907 = distinct !DISubprogram(name: "__DSB", scope: !4908, file: !4908, line: 269, type: !2876, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !381)
!4908 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4909 = distinct !DILocation(line: 1727, column: 5, scope: !4901)
!4910 = !{i64 3708518}
!4911 = !DILocation(line: 260, column: 3, scope: !4912, inlinedAt: !4913)
!4912 = distinct !DISubprogram(name: "__ISB", scope: !4908, file: !4908, line: 258, type: !2876, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !381)
!4913 = distinct !DILocation(line: 1728, column: 5, scope: !4901)
!4914 = !{i64 3708235}
!4915 = !DILocation(line: 1729, column: 3, scope: !4901)
!4916 = !DILocation(line: 1730, column: 1, scope: !4893)
!4917 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !4860, file: !4860, line: 50, type: !4918, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !4920)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{!103, !32}
!4920 = !{!4921}
!4921 = !DILocalVariable(name: "irq", arg: 1, scope: !4917, file: !4860, line: 50, type: !32)
!4922 = !DILocation(line: 0, scope: !4917)
!4923 = !DILocation(line: 52, column: 20, scope: !4917)
!4924 = !DILocation(line: 52, column: 9, scope: !4917)
!4925 = !DILocation(line: 52, column: 41, scope: !4917)
!4926 = !DILocation(line: 52, column: 39, scope: !4917)
!4927 = !DILocation(line: 52, column: 2, scope: !4917)
!4928 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !4860, file: !4860, line: 64, type: !4929, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !4931)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{null, !32, !32, !142}
!4931 = !{!4932, !4933, !4934}
!4932 = !DILocalVariable(name: "irq", arg: 1, scope: !4928, file: !4860, line: 64, type: !32)
!4933 = !DILocalVariable(name: "prio", arg: 2, scope: !4928, file: !4860, line: 64, type: !32)
!4934 = !DILocalVariable(name: "flags", arg: 3, scope: !4928, file: !4860, line: 64, type: !142)
!4935 = !DILocation(line: 0, scope: !4928)
!4936 = !DILocation(line: 83, column: 8, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !4860, line: 82, column: 9)
!4938 = distinct !DILexicalBlock(scope: !4928, file: !4860, line: 76, column: 6)
!4939 = !DILocation(line: 95, column: 2, scope: !4928)
!4940 = !DILocation(line: 96, column: 1, scope: !4928)
!4941 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !415, file: !415, line: 1814, type: !4942, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !4944)
!4942 = !DISubroutineType(types: !4943)
!4943 = !{null, !680, !142}
!4944 = !{!4945, !4946}
!4945 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4941, file: !415, line: 1814, type: !680)
!4946 = !DILocalVariable(name: "priority", arg: 2, scope: !4941, file: !415, line: 1814, type: !142)
!4947 = !DILocation(line: 0, scope: !4941)
!4948 = !DILocation(line: 0, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4941, file: !415, line: 1816, column: 7)
!4950 = !DILocation(line: 1816, column: 7, scope: !4941)
!4951 = !DILocation(line: 1824, column: 1, scope: !4941)
!4952 = distinct !DISubprogram(name: "z_irq_spurious", scope: !4860, file: !4860, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !4953)
!4953 = !{!4954}
!4954 = !DILocalVariable(name: "unused", arg: 1, scope: !4952, file: !4860, line: 155, type: !13)
!4955 = !DILocation(line: 0, scope: !4952)
!4956 = !DILocation(line: 159, column: 2, scope: !4952)
!4957 = !DILocation(line: 160, column: 1, scope: !4952)
!4958 = distinct !DISubprogram(name: "z_arm_nmi", scope: !4959, file: !4959, line: 87, type: !2876, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !381)
!4959 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4960 = !DILocation(line: 89, column: 2, scope: !4958)
!4961 = !DILocation(line: 90, column: 2, scope: !4958)
!4962 = !DILocation(line: 91, column: 1, scope: !4958)
!4963 = !DISubprogram(name: "z_SysNmiOnReset", scope: !4959, file: !4959, line: 23, type: !2876, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !381)
!4964 = !DISubprogram(name: "z_arm_int_exit", scope: !4965, file: !4965, line: 153, type: !2876, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !381)
!4965 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4966 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !4967, file: !4967, line: 256, type: !2876, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !381)
!4967 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4968 = !DILocation(line: 258, column: 2, scope: !4966)
!4969 = !DILocation(line: 260, column: 2, scope: !4966)
!4970 = !DILocation(line: 262, column: 2, scope: !4966)
!4971 = !DILocation(line: 263, column: 2, scope: !4966)
!4972 = !DILocation(line: 267, column: 2, scope: !4966)
!4973 = !DILocation(line: 268, column: 2, scope: !4966)
!4974 = distinct !DISubprogram(name: "relocate_vector_table", scope: !4967, file: !4967, line: 53, type: !2876, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !381)
!4975 = !DILocation(line: 55, column: 12, scope: !4974)
!4976 = !DILocation(line: 271, column: 3, scope: !4977, inlinedAt: !4978)
!4977 = distinct !DISubprogram(name: "__DSB", scope: !4908, file: !4908, line: 269, type: !2876, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !381)
!4978 = distinct !DILocation(line: 56, column: 2, scope: !4974)
!4979 = !{i64 3707189}
!4980 = !DILocation(line: 260, column: 3, scope: !4981, inlinedAt: !4982)
!4981 = distinct !DISubprogram(name: "__ISB", scope: !4908, file: !4908, line: 258, type: !2876, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !381)
!4982 = distinct !DILocation(line: 57, column: 2, scope: !4974)
!4983 = !{i64 3706906}
!4984 = !DILocation(line: 58, column: 1, scope: !4974)
!4985 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !4967, file: !4967, line: 96, type: !2876, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !381)
!4986 = !DILocation(line: 103, column: 13, scope: !4985)
!4987 = !DILocation(line: 975, column: 3, scope: !4988, inlinedAt: !4993)
!4988 = distinct !DISubprogram(name: "__get_CONTROL", scope: !4908, file: !4908, line: 971, type: !4989, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !4991)
!4989 = !DISubroutineType(types: !4990)
!4990 = !{!142}
!4991 = !{!4992}
!4992 = !DILocalVariable(name: "result", scope: !4988, file: !4908, line: 973, type: !142)
!4993 = distinct !DILocation(line: 189, column: 16, scope: !4985)
!4994 = !{i64 3728019}
!4995 = !DILocation(line: 0, scope: !4988, inlinedAt: !4993)
!4996 = !DILocation(line: 189, column: 32, scope: !4985)
!4997 = !DILocalVariable(name: "control", arg: 1, scope: !4998, file: !4908, line: 1001, type: !142)
!4998 = distinct !DISubprogram(name: "__set_CONTROL", scope: !4908, file: !4908, line: 1001, type: !4999, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2414, retainedNodes: !5001)
!4999 = !DISubroutineType(types: !5000)
!5000 = !{null, !142}
!5001 = !{!4997}
!5002 = !DILocation(line: 0, scope: !4998, inlinedAt: !5003)
!5003 = distinct !DILocation(line: 189, column: 2, scope: !4985)
!5004 = !DILocation(line: 1003, column: 3, scope: !4998, inlinedAt: !5003)
!5005 = !{i64 3728739}
!5006 = !DILocation(line: 260, column: 3, scope: !4981, inlinedAt: !5007)
!5007 = distinct !DILocation(line: 1004, column: 3, scope: !4998, inlinedAt: !5003)
!5008 = !DILocation(line: 191, column: 1, scope: !4985)
!5009 = distinct !DISubprogram(name: "arch_swap", scope: !5010, file: !5010, line: 33, type: !4918, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !5011)
!5010 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5011 = !{!5012}
!5012 = !DILocalVariable(name: "key", arg: 1, scope: !5009, file: !5010, line: 33, type: !32)
!5013 = !DILocation(line: 0, scope: !5009)
!5014 = !DILocation(line: 36, column: 2, scope: !5009)
!5015 = !DILocation(line: 36, column: 17, scope: !5009)
!5016 = !DILocation(line: 36, column: 25, scope: !5009)
!5017 = !DILocation(line: 37, column: 37, scope: !5009)
!5018 = !DILocation(line: 37, column: 17, scope: !5009)
!5019 = !DILocation(line: 37, column: 35, scope: !5009)
!5020 = !DILocation(line: 41, column: 12, scope: !5009)
!5021 = !DILocalVariable(name: "key", arg: 1, scope: !5022, file: !4734, line: 84, type: !32)
!5022 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4734, file: !4734, line: 84, type: !4745, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2442, retainedNodes: !5023)
!5023 = !{!5021}
!5024 = !DILocation(line: 0, scope: !5022, inlinedAt: !5025)
!5025 = distinct !DILocation(line: 44, column: 2, scope: !5009)
!5026 = !DILocation(line: 95, column: 2, scope: !5022, inlinedAt: !5025)
!5027 = !{i64 2277690}
!5028 = !DILocation(line: 53, column: 9, scope: !5009)
!5029 = !DILocation(line: 53, column: 24, scope: !5009)
!5030 = !DILocation(line: 53, column: 2, scope: !5009)
!5031 = distinct !DISubprogram(name: "arch_new_thread", scope: !5032, file: !5032, line: 56, type: !5033, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5140)
!5032 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5033 = !DISubroutineType(types: !5034)
!5034 = !{null, !5035, !5135, !1054, !3233, !104, !104, !104}
!5035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5036, size: 32)
!5036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !270, line: 245, size: 1024, elements: !5037)
!5037 = !{!5038, !5096, !5108, !5109, !5110, !5111, !5117, !5130}
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5036, file: !270, line: 247, baseType: !5039, size: 384)
!5039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !270, line: 57, size: 384, elements: !5040)
!5040 = !{!5041, !5065, !5072, !5073, !5074, !5083, !5084, !5085}
!5041 = !DIDerivedType(tag: DW_TAG_member, scope: !5039, file: !270, line: 60, baseType: !5042, size: 64)
!5042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5039, file: !270, line: 60, size: 64, elements: !5043)
!5043 = !{!5044, !5059}
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5042, file: !270, line: 61, baseType: !5045, size: 64)
!5045 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !280, line: 49, baseType: !5046)
!5046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !280, line: 37, size: 64, elements: !5047)
!5047 = !{!5048, !5054}
!5048 = !DIDerivedType(tag: DW_TAG_member, scope: !5046, file: !280, line: 38, baseType: !5049, size: 32)
!5049 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5046, file: !280, line: 38, size: 32, elements: !5050)
!5050 = !{!5051, !5053}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5049, file: !280, line: 39, baseType: !5052, size: 32)
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5046, size: 32)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5049, file: !280, line: 40, baseType: !5052, size: 32)
!5054 = !DIDerivedType(tag: DW_TAG_member, scope: !5046, file: !280, line: 42, baseType: !5055, size: 32, offset: 32)
!5055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5046, file: !280, line: 42, size: 32, elements: !5056)
!5056 = !{!5057, !5058}
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5055, file: !280, line: 43, baseType: !5052, size: 32)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5055, file: !280, line: 44, baseType: !5052, size: 32)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5042, file: !270, line: 62, baseType: !5060, size: 64)
!5060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !296, line: 49, size: 64, elements: !5061)
!5061 = !{!5062}
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5060, file: !296, line: 50, baseType: !5063, size: 64)
!5063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5064, size: 64, elements: !301)
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5060, size: 32)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5039, file: !270, line: 68, baseType: !5066, size: 32, offset: 64)
!5066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5067, size: 32)
!5067 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !306, line: 233, baseType: !5068)
!5068 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !306, line: 231, size: 64, elements: !5069)
!5069 = !{!5070}
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5068, file: !306, line: 232, baseType: !5071, size: 64)
!5071 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !280, line: 48, baseType: !5046)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5039, file: !270, line: 71, baseType: !131, size: 8, offset: 96)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5039, file: !270, line: 74, baseType: !131, size: 8, offset: 104)
!5074 = !DIDerivedType(tag: DW_TAG_member, scope: !5039, file: !270, line: 90, baseType: !5075, size: 16, offset: 112)
!5075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5039, file: !270, line: 90, size: 16, elements: !5076)
!5076 = !{!5077, !5082}
!5077 = !DIDerivedType(tag: DW_TAG_member, scope: !5075, file: !270, line: 91, baseType: !5078, size: 16)
!5078 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5075, file: !270, line: 91, size: 16, elements: !5079)
!5079 = !{!5080, !5081}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5078, file: !270, line: 96, baseType: !320, size: 8)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5078, file: !270, line: 97, baseType: !131, size: 8, offset: 8)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5075, file: !270, line: 100, baseType: !324, size: 16)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5039, file: !270, line: 107, baseType: !142, size: 32, offset: 128)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5039, file: !270, line: 127, baseType: !104, size: 32, offset: 160)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5039, file: !270, line: 131, baseType: !5086, size: 192, offset: 192)
!5086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !306, line: 244, size: 192, elements: !5087)
!5087 = !{!5088, !5089, !5095}
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5086, file: !306, line: 245, baseType: !5045, size: 64)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5086, file: !306, line: 246, baseType: !5090, size: 32, offset: 64)
!5090 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !306, line: 242, baseType: !5091)
!5091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5092, size: 32)
!5092 = !DISubroutineType(types: !5093)
!5093 = !{null, !5094}
!5094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5086, size: 32)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5086, file: !306, line: 249, baseType: !339, size: 64, offset: 128)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5036, file: !270, line: 250, baseType: !5097, size: 288, offset: 384)
!5097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !343, line: 25, size: 288, elements: !5098)
!5098 = !{!5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5097, file: !343, line: 26, baseType: !142, size: 32)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5097, file: !343, line: 27, baseType: !142, size: 32, offset: 32)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5097, file: !343, line: 28, baseType: !142, size: 32, offset: 64)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5097, file: !343, line: 29, baseType: !142, size: 32, offset: 96)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5097, file: !343, line: 30, baseType: !142, size: 32, offset: 128)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5097, file: !343, line: 31, baseType: !142, size: 32, offset: 160)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5097, file: !343, line: 32, baseType: !142, size: 32, offset: 192)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5097, file: !343, line: 33, baseType: !142, size: 32, offset: 224)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5097, file: !343, line: 34, baseType: !142, size: 32, offset: 256)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5036, file: !270, line: 253, baseType: !104, size: 32, offset: 672)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5036, file: !270, line: 256, baseType: !5067, size: 64, offset: 704)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5036, file: !270, line: 294, baseType: !103, size: 32, offset: 768)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5036, file: !270, line: 300, baseType: !5112, size: 96, offset: 800)
!5112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !270, line: 149, size: 96, elements: !5113)
!5113 = !{!5114, !5115, !5116}
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5112, file: !270, line: 153, baseType: !22, size: 32)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5112, file: !270, line: 162, baseType: !259, size: 32, offset: 32)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5112, file: !270, line: 168, baseType: !259, size: 32, offset: 64)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5036, file: !270, line: 325, baseType: !5118, size: 32, offset: 896)
!5118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5119, size: 32)
!5119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !366, line: 5073, size: 160, elements: !5120)
!5120 = !{!5121, !5127, !5128}
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5119, file: !366, line: 5074, baseType: !5122, size: 96)
!5122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !370, line: 56, size: 96, elements: !5123)
!5123 = !{!5124, !5125, !5126}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5122, file: !370, line: 57, baseType: !373, size: 32)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5122, file: !370, line: 58, baseType: !104, size: 32, offset: 32)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5122, file: !370, line: 59, baseType: !259, size: 32, offset: 64)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5119, file: !366, line: 5075, baseType: !5067, size: 64, offset: 96)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5119, file: !366, line: 5076, baseType: !5129, offset: 160)
!5129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !380, line: 43, elements: !381)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5036, file: !270, line: 343, baseType: !5131, size: 64, offset: 928)
!5131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !343, line: 60, size: 64, elements: !5132)
!5132 = !{!5133, !5134}
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5131, file: !343, line: 63, baseType: !142, size: 32)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5131, file: !343, line: 66, baseType: !142, size: 32, offset: 32)
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 32)
!5136 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3234, line: 44, baseType: !5137)
!5137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1989, line: 47, size: 8, elements: !5138)
!5138 = !{!5139}
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5137, file: !1989, line: 48, baseType: !123, size: 8)
!5140 = !{!5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148}
!5141 = !DILocalVariable(name: "thread", arg: 1, scope: !5031, file: !5032, line: 56, type: !5035)
!5142 = !DILocalVariable(name: "stack", arg: 2, scope: !5031, file: !5032, line: 56, type: !5135)
!5143 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5031, file: !5032, line: 57, type: !1054)
!5144 = !DILocalVariable(name: "entry", arg: 4, scope: !5031, file: !5032, line: 57, type: !3233)
!5145 = !DILocalVariable(name: "p1", arg: 5, scope: !5031, file: !5032, line: 58, type: !104)
!5146 = !DILocalVariable(name: "p2", arg: 6, scope: !5031, file: !5032, line: 58, type: !104)
!5147 = !DILocalVariable(name: "p3", arg: 7, scope: !5031, file: !5032, line: 58, type: !104)
!5148 = !DILocalVariable(name: "iframe", scope: !5031, file: !5032, line: 60, type: !2473)
!5149 = !DILocation(line: 0, scope: !5031)
!5150 = !DILocation(line: 85, column: 11, scope: !5031)
!5151 = !DILocation(line: 93, column: 10, scope: !5031)
!5152 = !DILocation(line: 98, column: 13, scope: !5031)
!5153 = !DILocation(line: 100, column: 15, scope: !5031)
!5154 = !DILocation(line: 100, column: 10, scope: !5031)
!5155 = !DILocation(line: 100, column: 13, scope: !5031)
!5156 = !DILocation(line: 101, column: 15, scope: !5031)
!5157 = !DILocation(line: 101, column: 10, scope: !5031)
!5158 = !DILocation(line: 101, column: 13, scope: !5031)
!5159 = !DILocation(line: 102, column: 15, scope: !5031)
!5160 = !DILocation(line: 102, column: 10, scope: !5031)
!5161 = !DILocation(line: 102, column: 13, scope: !5031)
!5162 = !DILocation(line: 103, column: 15, scope: !5031)
!5163 = !DILocation(line: 103, column: 10, scope: !5031)
!5164 = !DILocation(line: 103, column: 13, scope: !5031)
!5165 = !DILocation(line: 106, column: 10, scope: !5031)
!5166 = !DILocation(line: 106, column: 15, scope: !5031)
!5167 = !DILocation(line: 122, column: 29, scope: !5031)
!5168 = !DILocation(line: 122, column: 23, scope: !5031)
!5169 = !DILocation(line: 122, column: 27, scope: !5031)
!5170 = !DILocation(line: 123, column: 15, scope: !5031)
!5171 = !DILocation(line: 123, column: 23, scope: !5031)
!5172 = !DILocation(line: 143, column: 1, scope: !5031)
!5173 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5032, file: !5032, line: 385, type: !5174, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5177)
!5174 = !DISubroutineType(types: !5175)
!5175 = !{!142, !5176, !5176}
!5176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!5177 = !{!5178, !5179, !5180, !5183}
!5178 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5173, file: !5032, line: 385, type: !5176)
!5179 = !DILocalVariable(name: "psp", arg: 2, scope: !5173, file: !5032, line: 385, type: !5176)
!5180 = !DILocalVariable(name: "thread", scope: !5173, file: !5032, line: 388, type: !5181)
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 32)
!5182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5036)
!5183 = !DILocalVariable(name: "guard_len", scope: !5173, file: !5032, line: 405, type: !142)
!5184 = !DILocation(line: 0, scope: !5173)
!5185 = !DILocation(line: 388, column: 34, scope: !5173)
!5186 = !DILocation(line: 390, column: 13, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5173, file: !5032, line: 390, column: 6)
!5188 = !DILocation(line: 390, column: 6, scope: !5173)
!5189 = !DILocation(line: 438, column: 6, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5173, file: !5032, line: 438, column: 6)
!5191 = !DILocation(line: 438, column: 6, scope: !5173)
!5192 = !DILocation(line: 442, column: 3, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5190, file: !5032, line: 440, column: 22)
!5194 = !DILocation(line: 455, column: 1, scope: !5173)
!5195 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5032, file: !5032, line: 530, type: !5196, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5198)
!5196 = !DISubroutineType(types: !5197)
!5197 = !{null, !5035, !1054, !3233}
!5198 = !{!5199, !5200, !5201}
!5199 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5195, file: !5032, line: 530, type: !5035)
!5200 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5195, file: !5032, line: 530, type: !1054)
!5201 = !DILocalVariable(name: "_main", arg: 3, scope: !5195, file: !5032, line: 531, type: !3233)
!5202 = !DILocation(line: 0, scope: !5195)
!5203 = !DILocation(line: 535, column: 11, scope: !5195)
!5204 = !DILocation(line: 560, column: 2, scope: !5195)
!5205 = !DILocation(line: 576, column: 2, scope: !5195)
!5206 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5207 = !DILocation(line: 603, column: 2, scope: !5195)
!5208 = distinct !DISubprogram(name: "z_arm_fault", scope: !5209, file: !5209, line: 1036, type: !5210, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5225)
!5209 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5210 = !DISubroutineType(types: !5211)
!5211 = !{null, !142, !142, !142, !5212}
!5212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5213, size: 32)
!5213 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !343, line: 37, baseType: !5214)
!5214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !343, line: 25, size: 288, elements: !5215)
!5215 = !{!5216, !5217, !5218, !5219, !5220, !5221, !5222, !5223, !5224}
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5214, file: !343, line: 26, baseType: !142, size: 32)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5214, file: !343, line: 27, baseType: !142, size: 32, offset: 32)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5214, file: !343, line: 28, baseType: !142, size: 32, offset: 64)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5214, file: !343, line: 29, baseType: !142, size: 32, offset: 96)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5214, file: !343, line: 30, baseType: !142, size: 32, offset: 128)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5214, file: !343, line: 31, baseType: !142, size: 32, offset: 160)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5214, file: !343, line: 32, baseType: !142, size: 32, offset: 192)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5214, file: !343, line: 33, baseType: !142, size: 32, offset: 224)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5214, file: !343, line: 34, baseType: !142, size: 32, offset: 256)
!5225 = !{!5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235}
!5226 = !DILocalVariable(name: "msp", arg: 1, scope: !5208, file: !5209, line: 1036, type: !142)
!5227 = !DILocalVariable(name: "psp", arg: 2, scope: !5208, file: !5209, line: 1036, type: !142)
!5228 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5208, file: !5209, line: 1036, type: !142)
!5229 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5208, file: !5209, line: 1037, type: !5212)
!5230 = !DILocalVariable(name: "reason", scope: !5208, file: !5209, line: 1039, type: !142)
!5231 = !DILocalVariable(name: "fault", scope: !5208, file: !5209, line: 1040, type: !103)
!5232 = !DILocalVariable(name: "recoverable", scope: !5208, file: !5209, line: 1041, type: !134)
!5233 = !DILocalVariable(name: "nested_exc", scope: !5208, file: !5209, line: 1041, type: !134)
!5234 = !DILocalVariable(name: "esf", scope: !5208, file: !5209, line: 1042, type: !2541)
!5235 = !DILocalVariable(name: "esf_copy", scope: !5208, file: !5209, line: 1047, type: !2542)
!5236 = !DILocation(line: 0, scope: !5208)
!5237 = !DILocation(line: 1040, column: 19, scope: !5208)
!5238 = !DILocation(line: 1040, column: 24, scope: !5208)
!5239 = !DILocation(line: 1041, column: 2, scope: !5208)
!5240 = !DILocation(line: 1047, column: 2, scope: !5208)
!5241 = !DILocation(line: 1047, column: 15, scope: !5208)
!5242 = !DILocalVariable(name: "key", arg: 1, scope: !5243, file: !4734, line: 84, type: !32)
!5243 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4734, file: !4734, line: 84, type: !4745, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5244)
!5244 = !{!5242}
!5245 = !DILocation(line: 0, scope: !5243, inlinedAt: !5246)
!5246 = distinct !DILocation(line: 1050, column: 2, scope: !5208)
!5247 = !DILocation(line: 95, column: 2, scope: !5243, inlinedAt: !5246)
!5248 = !{i64 2310934}
!5249 = !DILocation(line: 1055, column: 9, scope: !5208)
!5250 = !DILocation(line: 1063, column: 11, scope: !5208)
!5251 = !DILocation(line: 1064, column: 6, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5208, file: !5209, line: 1064, column: 6)
!5253 = !{i8 0, i8 2}
!5254 = !DILocation(line: 1064, column: 6, scope: !5208)
!5255 = !DILocation(line: 1070, column: 20, scope: !5208)
!5256 = !DILocation(line: 1070, column: 2, scope: !5208)
!5257 = !DILocation(line: 1089, column: 6, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5208, file: !5209, line: 1089, column: 6)
!5259 = !DILocation(line: 0, scope: !5258)
!5260 = !DILocation(line: 1089, column: 6, scope: !5208)
!5261 = !DILocation(line: 1090, column: 28, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5263, file: !5209, line: 1090, column: 7)
!5263 = distinct !DILexicalBlock(scope: !5258, file: !5209, line: 1089, column: 18)
!5264 = !DILocation(line: 1090, column: 44, scope: !5262)
!5265 = !DILocation(line: 1090, column: 7, scope: !5263)
!5266 = !DILocation(line: 1091, column: 24, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5262, file: !5209, line: 1090, column: 50)
!5268 = !DILocation(line: 1092, column: 3, scope: !5267)
!5269 = !DILocation(line: 1094, column: 23, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5258, file: !5209, line: 1093, column: 9)
!5271 = !DILocation(line: 1097, column: 2, scope: !5208)
!5272 = !DILocation(line: 1098, column: 1, scope: !5208)
!5273 = distinct !DISubprogram(name: "get_esf", scope: !5209, file: !5209, line: 894, type: !5274, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5277)
!5274 = !DISubroutineType(types: !5275)
!5275 = !{!2541, !142, !142, !142, !5276}
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!5277 = !{!5278, !5279, !5280, !5281, !5282, !5283}
!5278 = !DILocalVariable(name: "msp", arg: 1, scope: !5273, file: !5209, line: 894, type: !142)
!5279 = !DILocalVariable(name: "psp", arg: 2, scope: !5273, file: !5209, line: 894, type: !142)
!5280 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5273, file: !5209, line: 894, type: !142)
!5281 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5273, file: !5209, line: 895, type: !5276)
!5282 = !DILocalVariable(name: "alternative_state_exc", scope: !5273, file: !5209, line: 897, type: !134)
!5283 = !DILocalVariable(name: "ptr_esf", scope: !5273, file: !5209, line: 898, type: !2541)
!5284 = !DILocation(line: 0, scope: !5273)
!5285 = !DILocation(line: 900, column: 14, scope: !5273)
!5286 = !DILocation(line: 902, column: 49, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5273, file: !5209, line: 902, column: 6)
!5288 = !DILocation(line: 902, column: 6, scope: !5273)
!5289 = !DILocation(line: 983, column: 18, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5273, file: !5209, line: 983, column: 6)
!5291 = !DILocation(line: 991, column: 7, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5293, file: !5209, line: 990, column: 30)
!5293 = distinct !DILexicalBlock(scope: !5273, file: !5209, line: 990, column: 6)
!5294 = !DILocation(line: 998, column: 16, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5296, file: !5209, line: 995, column: 10)
!5296 = distinct !DILexicalBlock(scope: !5292, file: !5209, line: 991, column: 7)
!5297 = !DILocation(line: 1002, column: 2, scope: !5273)
!5298 = !DILocation(line: 1003, column: 1, scope: !5273)
!5299 = distinct !DISubprogram(name: "fault_handle", scope: !5209, file: !5209, line: 786, type: !5300, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5302)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{!142, !2541, !103, !5276}
!5302 = !{!5303, !5304, !5305, !5306}
!5303 = !DILocalVariable(name: "esf", arg: 1, scope: !5299, file: !5209, line: 786, type: !2541)
!5304 = !DILocalVariable(name: "fault", arg: 2, scope: !5299, file: !5209, line: 786, type: !103)
!5305 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5299, file: !5209, line: 786, type: !5276)
!5306 = !DILocalVariable(name: "reason", scope: !5299, file: !5209, line: 788, type: !142)
!5307 = !DILocation(line: 0, scope: !5299)
!5308 = !DILocation(line: 790, column: 15, scope: !5299)
!5309 = !DILocation(line: 792, column: 2, scope: !5299)
!5310 = !DILocation(line: 794, column: 12, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5299, file: !5209, line: 792, column: 17)
!5312 = !DILocation(line: 795, column: 3, scope: !5311)
!5313 = !DILocation(line: 800, column: 12, scope: !5311)
!5314 = !DILocation(line: 801, column: 3, scope: !5311)
!5315 = !DILocation(line: 803, column: 12, scope: !5311)
!5316 = !DILocation(line: 804, column: 3, scope: !5311)
!5317 = !DILocation(line: 806, column: 12, scope: !5311)
!5318 = !DILocation(line: 807, column: 3, scope: !5311)
!5319 = !DILocation(line: 814, column: 3, scope: !5311)
!5320 = !DILocation(line: 815, column: 3, scope: !5311)
!5321 = !DILocation(line: 829, column: 2, scope: !5299)
!5322 = distinct !DISubprogram(name: "hard_fault", scope: !5209, file: !5209, line: 709, type: !5323, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5325)
!5323 = !DISubroutineType(types: !5324)
!5324 = !{!142, !2541, !5276}
!5325 = !{!5326, !5327, !5328}
!5326 = !DILocalVariable(name: "esf", arg: 1, scope: !5322, file: !5209, line: 709, type: !2541)
!5327 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5322, file: !5209, line: 709, type: !5276)
!5328 = !DILocalVariable(name: "reason", scope: !5322, file: !5209, line: 711, type: !142)
!5329 = !DILocation(line: 0, scope: !5322)
!5330 = !DILocation(line: 732, column: 15, scope: !5322)
!5331 = !DILocation(line: 734, column: 12, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5322, file: !5209, line: 734, column: 6)
!5333 = !DILocation(line: 734, column: 17, scope: !5332)
!5334 = !DILocation(line: 734, column: 41, scope: !5332)
!5335 = !DILocation(line: 734, column: 6, scope: !5322)
!5336 = !DILocation(line: 736, column: 19, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5332, file: !5209, line: 736, column: 13)
!5338 = !DILocation(line: 736, column: 49, scope: !5337)
!5339 = !DILocation(line: 736, column: 13, scope: !5332)
!5340 = !DILocation(line: 738, column: 19, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5337, file: !5209, line: 738, column: 13)
!5342 = !DILocation(line: 738, column: 24, scope: !5341)
!5343 = !DILocation(line: 738, column: 47, scope: !5341)
!5344 = !DILocation(line: 738, column: 13, scope: !5337)
!5345 = !DILocation(line: 740, column: 7, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5347, file: !5209, line: 740, column: 7)
!5347 = distinct !DILexicalBlock(scope: !5341, file: !5209, line: 738, column: 53)
!5348 = !DILocation(line: 740, column: 7, scope: !5347)
!5349 = !DILocation(line: 742, column: 24, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5346, file: !5209, line: 740, column: 38)
!5351 = !DILocation(line: 743, column: 3, scope: !5350)
!5352 = !DILocation(line: 743, column: 20, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5346, file: !5209, line: 743, column: 14)
!5354 = !DILocation(line: 743, column: 25, scope: !5353)
!5355 = !DILocation(line: 743, column: 52, scope: !5353)
!5356 = !DILocation(line: 743, column: 14, scope: !5346)
!5357 = !DILocation(line: 744, column: 13, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5353, file: !5209, line: 743, column: 58)
!5359 = !DILocation(line: 745, column: 3, scope: !5358)
!5360 = !DILocation(line: 745, column: 20, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5353, file: !5209, line: 745, column: 14)
!5362 = !DILocation(line: 745, column: 25, scope: !5361)
!5363 = !DILocation(line: 745, column: 52, scope: !5361)
!5364 = !DILocation(line: 745, column: 14, scope: !5353)
!5365 = !DILocation(line: 746, column: 13, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5361, file: !5209, line: 745, column: 58)
!5367 = !DILocation(line: 747, column: 3, scope: !5366)
!5368 = !DILocation(line: 747, column: 20, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5361, file: !5209, line: 747, column: 14)
!5370 = !DILocation(line: 747, column: 52, scope: !5369)
!5371 = !DILocation(line: 747, column: 14, scope: !5361)
!5372 = !DILocation(line: 748, column: 13, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5369, file: !5209, line: 747, column: 58)
!5374 = !DILocation(line: 753, column: 3, scope: !5373)
!5375 = !DILocation(line: 766, column: 2, scope: !5322)
!5376 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5209, file: !5209, line: 229, type: !5300, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5377)
!5377 = !{!5378, !5379, !5380, !5381, !5382, !5383, !5386}
!5378 = !DILocalVariable(name: "esf", arg: 1, scope: !5376, file: !5209, line: 229, type: !2541)
!5379 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5376, file: !5209, line: 229, type: !103)
!5380 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5376, file: !5209, line: 230, type: !5276)
!5381 = !DILocalVariable(name: "reason", scope: !5376, file: !5209, line: 232, type: !142)
!5382 = !DILocalVariable(name: "mmfar", scope: !5376, file: !5209, line: 233, type: !142)
!5383 = !DILocalVariable(name: "temp", scope: !5384, file: !5209, line: 254, type: !142)
!5384 = distinct !DILexicalBlock(scope: !5385, file: !5209, line: 244, column: 48)
!5385 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 244, column: 6)
!5386 = !DILocalVariable(name: "min_stack_ptr", scope: !5387, file: !5209, line: 309, type: !142)
!5387 = distinct !DILexicalBlock(scope: !5388, file: !5209, line: 308, column: 43)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !5209, line: 308, column: 7)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !5209, line: 289, column: 40)
!5390 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 288, column: 6)
!5391 = !DILocation(line: 0, scope: !5376)
!5392 = !DILocation(line: 237, column: 12, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 237, column: 6)
!5394 = !DILocation(line: 241, column: 12, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 241, column: 6)
!5396 = !DILocation(line: 244, column: 12, scope: !5385)
!5397 = !DILocation(line: 244, column: 17, scope: !5385)
!5398 = !DILocation(line: 244, column: 42, scope: !5385)
!5399 = !DILocation(line: 244, column: 6, scope: !5376)
!5400 = !DILocation(line: 254, column: 24, scope: !5384)
!5401 = !DILocation(line: 0, scope: !5384)
!5402 = !DILocation(line: 256, column: 13, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5384, file: !5209, line: 256, column: 7)
!5404 = !DILocation(line: 256, column: 18, scope: !5403)
!5405 = !DILocation(line: 256, column: 44, scope: !5403)
!5406 = !DILocation(line: 256, column: 7, scope: !5384)
!5407 = !DILocation(line: 259, column: 24, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5409, file: !5209, line: 259, column: 8)
!5409 = distinct !DILexicalBlock(scope: !5403, file: !5209, line: 256, column: 50)
!5410 = !DILocation(line: 259, column: 8, scope: !5409)
!5411 = !DILocation(line: 261, column: 15, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5408, file: !5209, line: 259, column: 30)
!5413 = !DILocation(line: 262, column: 4, scope: !5412)
!5414 = !DILocation(line: 265, column: 12, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 265, column: 6)
!5416 = !DILocation(line: 269, column: 12, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 269, column: 6)
!5418 = !DILocation(line: 288, column: 12, scope: !5390)
!5419 = !DILocation(line: 288, column: 17, scope: !5390)
!5420 = !DILocation(line: 288, column: 41, scope: !5390)
!5421 = !DILocation(line: 289, column: 9, scope: !5390)
!5422 = !DILocation(line: 289, column: 14, scope: !5390)
!5423 = !DILocation(line: 288, column: 6, scope: !5376)
!5424 = !DILocation(line: 308, column: 12, scope: !5388)
!5425 = !DILocation(line: 308, column: 17, scope: !5388)
!5426 = !DILocation(line: 308, column: 7, scope: !5389)
!5427 = !DILocation(line: 310, column: 6, scope: !5387)
!5428 = !DILocation(line: 309, column: 29, scope: !5387)
!5429 = !DILocation(line: 0, scope: !5387)
!5430 = !DILocation(line: 312, column: 8, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5387, file: !5209, line: 312, column: 8)
!5432 = !DILocation(line: 312, column: 8, scope: !5387)
!5433 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5434, file: !4908, line: 1099, type: !142)
!5434 = distinct !DISubprogram(name: "__set_PSP", scope: !4908, file: !4908, line: 1099, type: !4999, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5435)
!5435 = !{!5433}
!5436 = !DILocation(line: 0, scope: !5434, inlinedAt: !5437)
!5437 = distinct !DILocation(line: 338, column: 5, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5431, file: !5209, line: 312, column: 23)
!5439 = !DILocation(line: 1101, column: 3, scope: !5434, inlinedAt: !5437)
!5440 = !{i64 3758158}
!5441 = !DILocation(line: 341, column: 4, scope: !5438)
!5442 = !DILocation(line: 360, column: 12, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5376, file: !5209, line: 360, column: 6)
!5444 = !DILocation(line: 360, column: 17, scope: !5443)
!5445 = !DILocation(line: 360, column: 41, scope: !5443)
!5446 = !DILocation(line: 360, column: 6, scope: !5376)
!5447 = !DILocation(line: 361, column: 14, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5443, file: !5209, line: 360, column: 47)
!5449 = !DILocation(line: 362, column: 2, scope: !5448)
!5450 = !DILocation(line: 366, column: 12, scope: !5376)
!5451 = !DILocation(line: 369, column: 15, scope: !5376)
!5452 = !DILocation(line: 371, column: 2, scope: !5376)
!5453 = distinct !DISubprogram(name: "bus_fault", scope: !5209, file: !5209, line: 383, type: !5454, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5456)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{!103, !2541, !103, !5276}
!5456 = !{!5457, !5458, !5459, !5460, !5461}
!5457 = !DILocalVariable(name: "esf", arg: 1, scope: !5453, file: !5209, line: 383, type: !2541)
!5458 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5453, file: !5209, line: 383, type: !103)
!5459 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5453, file: !5209, line: 383, type: !5276)
!5460 = !DILocalVariable(name: "reason", scope: !5453, file: !5209, line: 385, type: !142)
!5461 = !DILocalVariable(name: "bfar", scope: !5462, file: !5209, line: 405, type: !142)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !5209, line: 395, column: 42)
!5463 = distinct !DILexicalBlock(scope: !5453, file: !5209, line: 395, column: 6)
!5464 = !DILocation(line: 0, scope: !5453)
!5465 = !DILocation(line: 389, column: 11, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5453, file: !5209, line: 389, column: 6)
!5467 = !DILocation(line: 392, column: 11, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5453, file: !5209, line: 392, column: 6)
!5469 = !DILocation(line: 395, column: 11, scope: !5463)
!5470 = !DILocation(line: 395, column: 16, scope: !5463)
!5471 = !DILocation(line: 395, column: 6, scope: !5453)
!5472 = !DILocation(line: 405, column: 3, scope: !5462)
!5473 = !DILocation(line: 0, scope: !5462)
!5474 = !DILocation(line: 407, column: 13, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5462, file: !5209, line: 407, column: 7)
!5476 = !DILocation(line: 407, column: 18, scope: !5475)
!5477 = !DILocation(line: 407, column: 44, scope: !5475)
!5478 = !DILocation(line: 407, column: 7, scope: !5462)
!5479 = !DILocation(line: 411, column: 15, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !5209, line: 409, column: 30)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !5209, line: 409, column: 8)
!5482 = distinct !DILexicalBlock(scope: !5475, file: !5209, line: 407, column: 50)
!5483 = !DILocation(line: 412, column: 4, scope: !5480)
!5484 = !DILocation(line: 415, column: 11, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5453, file: !5209, line: 415, column: 6)
!5486 = !DILocation(line: 418, column: 12, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5453, file: !5209, line: 418, column: 6)
!5488 = !DILocation(line: 418, column: 17, scope: !5487)
!5489 = !DILocation(line: 418, column: 41, scope: !5487)
!5490 = !DILocation(line: 418, column: 6, scope: !5453)
!5491 = !DILocation(line: 423, column: 18, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5487, file: !5209, line: 423, column: 13)
!5493 = !DILocation(line: 524, column: 12, scope: !5453)
!5494 = !DILocation(line: 526, column: 15, scope: !5453)
!5495 = !DILocation(line: 528, column: 2, scope: !5453)
!5496 = distinct !DISubprogram(name: "usage_fault", scope: !5209, file: !5209, line: 539, type: !5497, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5501)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{!142, !5499}
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5500, size: 32)
!5500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2542)
!5501 = !{!5502, !5503}
!5502 = !DILocalVariable(name: "esf", arg: 1, scope: !5496, file: !5209, line: 539, type: !5499)
!5503 = !DILocalVariable(name: "reason", scope: !5496, file: !5209, line: 541, type: !142)
!5504 = !DILocation(line: 0, scope: !5496)
!5505 = !DILocation(line: 546, column: 12, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 546, column: 6)
!5507 = !DILocation(line: 549, column: 12, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 549, column: 6)
!5509 = !DILocation(line: 567, column: 12, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 567, column: 6)
!5511 = !DILocation(line: 570, column: 12, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 570, column: 6)
!5513 = !DILocation(line: 573, column: 12, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 573, column: 6)
!5515 = !DILocation(line: 576, column: 12, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5496, file: !5209, line: 576, column: 6)
!5517 = !DILocation(line: 581, column: 12, scope: !5496)
!5518 = !DILocation(line: 583, column: 2, scope: !5496)
!5519 = distinct !DISubprogram(name: "debug_monitor", scope: !5209, file: !5209, line: 632, type: !5520, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5522)
!5520 = !DISubroutineType(types: !5521)
!5521 = !{null, !2541, !5276}
!5522 = !{!5523, !5524}
!5523 = !DILocalVariable(name: "esf", arg: 1, scope: !5519, file: !5209, line: 632, type: !2541)
!5524 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5519, file: !5209, line: 632, type: !5276)
!5525 = !DILocation(line: 0, scope: !5519)
!5526 = !DILocation(line: 634, column: 15, scope: !5519)
!5527 = !DILocation(line: 652, column: 1, scope: !5519)
!5528 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5209, file: !5209, line: 658, type: !5529, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !5531)
!5529 = !DISubroutineType(types: !5530)
!5530 = !{!134, !2541}
!5531 = !{!5532, !5533, !5534}
!5532 = !DILocalVariable(name: "esf", arg: 1, scope: !5528, file: !5209, line: 658, type: !2541)
!5533 = !DILocalVariable(name: "ret_addr", scope: !5528, file: !5209, line: 660, type: !2584)
!5534 = !DILocalVariable(name: "fault_insn", scope: !5528, file: !5209, line: 686, type: !324)
!5535 = !DILocation(line: 0, scope: !5528)
!5536 = !DILocation(line: 660, column: 46, scope: !5528)
!5537 = !DILocation(line: 660, column: 23, scope: !5528)
!5538 = !DILocation(line: 682, column: 11, scope: !5528)
!5539 = !DILocation(line: 271, column: 3, scope: !5540, inlinedAt: !5541)
!5540 = distinct !DISubprogram(name: "__DSB", scope: !4908, file: !4908, line: 269, type: !2876, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !381)
!5541 = distinct !DILocation(line: 683, column: 2, scope: !5528)
!5542 = !{i64 3734293}
!5543 = !DILocation(line: 260, column: 3, scope: !5544, inlinedAt: !5545)
!5544 = distinct !DISubprogram(name: "__ISB", scope: !4908, file: !4908, line: 258, type: !2876, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !381)
!5545 = distinct !DILocation(line: 684, column: 2, scope: !5528)
!5546 = !{i64 3734010}
!5547 = !DILocation(line: 686, column: 35, scope: !5528)
!5548 = !DILocation(line: 686, column: 24, scope: !5528)
!5549 = !DILocation(line: 688, column: 11, scope: !5528)
!5550 = !DILocation(line: 271, column: 3, scope: !5540, inlinedAt: !5551)
!5551 = distinct !DILocation(line: 689, column: 2, scope: !5528)
!5552 = !DILocation(line: 260, column: 3, scope: !5544, inlinedAt: !5553)
!5553 = distinct !DILocation(line: 690, column: 2, scope: !5528)
!5554 = !DILocation(line: 693, column: 45, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5528, file: !5209, line: 693, column: 6)
!5556 = !DILocation(line: 699, column: 1, scope: !5528)
!5557 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5209, file: !5209, line: 1107, type: !2876, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !381)
!5558 = !DILocation(line: 1111, column: 11, scope: !5557)
!5559 = !DILocation(line: 1136, column: 1, scope: !5557)
!5560 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5561, file: !5561, line: 26, type: !2876, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !5562)
!5561 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5562 = !{!5563}
!5563 = !DILocalVariable(name: "irq", scope: !5560, file: !5561, line: 28, type: !103)
!5564 = !DILocation(line: 0, scope: !5560)
!5565 = !DILocation(line: 30, column: 2, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5560, file: !5561, line: 30, column: 2)
!5567 = !DILocation(line: 31, column: 3, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !5561, line: 30, column: 39)
!5569 = distinct !DILexicalBlock(scope: !5566, file: !5561, line: 30, column: 2)
!5570 = !DILocation(line: 30, column: 35, scope: !5569)
!5571 = !DILocation(line: 30, column: 13, scope: !5569)
!5572 = distinct !{!5572, !5565, !5573}
!5573 = !DILocation(line: 32, column: 2, scope: !5566)
!5574 = !DILocation(line: 33, column: 1, scope: !5560)
!5575 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !415, file: !415, line: 1814, type: !4942, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !5576)
!5576 = !{!5577, !5578}
!5577 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5575, file: !415, line: 1814, type: !680)
!5578 = !DILocalVariable(name: "priority", arg: 2, scope: !5575, file: !415, line: 1814, type: !142)
!5579 = !DILocation(line: 0, scope: !5575)
!5580 = !DILocation(line: 1816, column: 7, scope: !5575)
!5581 = !DILocation(line: 0, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5575, file: !415, line: 1816, column: 7)
!5583 = !DILocation(line: 1824, column: 1, scope: !5575)
!5584 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5585, file: !5585, line: 27, type: !5586, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !5689)
!5585 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5586 = !DISubroutineType(types: !5587)
!5587 = !{null, !5588}
!5588 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !270, line: 347, baseType: !5589)
!5589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5590, size: 32)
!5590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !270, line: 245, size: 1024, elements: !5591)
!5591 = !{!5592, !5650, !5662, !5663, !5664, !5665, !5671, !5684}
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5590, file: !270, line: 247, baseType: !5593, size: 384)
!5593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !270, line: 57, size: 384, elements: !5594)
!5594 = !{!5595, !5619, !5626, !5627, !5628, !5637, !5638, !5639}
!5595 = !DIDerivedType(tag: DW_TAG_member, scope: !5593, file: !270, line: 60, baseType: !5596, size: 64)
!5596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5593, file: !270, line: 60, size: 64, elements: !5597)
!5597 = !{!5598, !5613}
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5596, file: !270, line: 61, baseType: !5599, size: 64)
!5599 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !280, line: 49, baseType: !5600)
!5600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !280, line: 37, size: 64, elements: !5601)
!5601 = !{!5602, !5608}
!5602 = !DIDerivedType(tag: DW_TAG_member, scope: !5600, file: !280, line: 38, baseType: !5603, size: 32)
!5603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5600, file: !280, line: 38, size: 32, elements: !5604)
!5604 = !{!5605, !5607}
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5603, file: !280, line: 39, baseType: !5606, size: 32)
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5600, size: 32)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5603, file: !280, line: 40, baseType: !5606, size: 32)
!5608 = !DIDerivedType(tag: DW_TAG_member, scope: !5600, file: !280, line: 42, baseType: !5609, size: 32, offset: 32)
!5609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5600, file: !280, line: 42, size: 32, elements: !5610)
!5610 = !{!5611, !5612}
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5609, file: !280, line: 43, baseType: !5606, size: 32)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5609, file: !280, line: 44, baseType: !5606, size: 32)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5596, file: !270, line: 62, baseType: !5614, size: 64)
!5614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !296, line: 49, size: 64, elements: !5615)
!5615 = !{!5616}
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5614, file: !296, line: 50, baseType: !5617, size: 64)
!5617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5618, size: 64, elements: !301)
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5614, size: 32)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5593, file: !270, line: 68, baseType: !5620, size: 32, offset: 64)
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 32)
!5621 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !306, line: 233, baseType: !5622)
!5622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !306, line: 231, size: 64, elements: !5623)
!5623 = !{!5624}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5622, file: !306, line: 232, baseType: !5625, size: 64)
!5625 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !280, line: 48, baseType: !5600)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5593, file: !270, line: 71, baseType: !131, size: 8, offset: 96)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5593, file: !270, line: 74, baseType: !131, size: 8, offset: 104)
!5628 = !DIDerivedType(tag: DW_TAG_member, scope: !5593, file: !270, line: 90, baseType: !5629, size: 16, offset: 112)
!5629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5593, file: !270, line: 90, size: 16, elements: !5630)
!5630 = !{!5631, !5636}
!5631 = !DIDerivedType(tag: DW_TAG_member, scope: !5629, file: !270, line: 91, baseType: !5632, size: 16)
!5632 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5629, file: !270, line: 91, size: 16, elements: !5633)
!5633 = !{!5634, !5635}
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5632, file: !270, line: 96, baseType: !320, size: 8)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5632, file: !270, line: 97, baseType: !131, size: 8, offset: 8)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5629, file: !270, line: 100, baseType: !324, size: 16)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5593, file: !270, line: 107, baseType: !142, size: 32, offset: 128)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5593, file: !270, line: 127, baseType: !104, size: 32, offset: 160)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5593, file: !270, line: 131, baseType: !5640, size: 192, offset: 192)
!5640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !306, line: 244, size: 192, elements: !5641)
!5641 = !{!5642, !5643, !5649}
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5640, file: !306, line: 245, baseType: !5599, size: 64)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5640, file: !306, line: 246, baseType: !5644, size: 32, offset: 64)
!5644 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !306, line: 242, baseType: !5645)
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5646, size: 32)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{null, !5648}
!5648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5640, size: 32)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5640, file: !306, line: 249, baseType: !339, size: 64, offset: 128)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5590, file: !270, line: 250, baseType: !5651, size: 288, offset: 384)
!5651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !343, line: 25, size: 288, elements: !5652)
!5652 = !{!5653, !5654, !5655, !5656, !5657, !5658, !5659, !5660, !5661}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5651, file: !343, line: 26, baseType: !142, size: 32)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5651, file: !343, line: 27, baseType: !142, size: 32, offset: 32)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5651, file: !343, line: 28, baseType: !142, size: 32, offset: 64)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5651, file: !343, line: 29, baseType: !142, size: 32, offset: 96)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5651, file: !343, line: 30, baseType: !142, size: 32, offset: 128)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5651, file: !343, line: 31, baseType: !142, size: 32, offset: 160)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5651, file: !343, line: 32, baseType: !142, size: 32, offset: 192)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5651, file: !343, line: 33, baseType: !142, size: 32, offset: 224)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5651, file: !343, line: 34, baseType: !142, size: 32, offset: 256)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5590, file: !270, line: 253, baseType: !104, size: 32, offset: 672)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5590, file: !270, line: 256, baseType: !5621, size: 64, offset: 704)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5590, file: !270, line: 294, baseType: !103, size: 32, offset: 768)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5590, file: !270, line: 300, baseType: !5666, size: 96, offset: 800)
!5666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !270, line: 149, size: 96, elements: !5667)
!5667 = !{!5668, !5669, !5670}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5666, file: !270, line: 153, baseType: !22, size: 32)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5666, file: !270, line: 162, baseType: !259, size: 32, offset: 32)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5666, file: !270, line: 168, baseType: !259, size: 32, offset: 64)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5590, file: !270, line: 325, baseType: !5672, size: 32, offset: 896)
!5672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5673, size: 32)
!5673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !366, line: 5073, size: 160, elements: !5674)
!5674 = !{!5675, !5681, !5682}
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5673, file: !366, line: 5074, baseType: !5676, size: 96)
!5676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !370, line: 56, size: 96, elements: !5677)
!5677 = !{!5678, !5679, !5680}
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5676, file: !370, line: 57, baseType: !373, size: 32)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5676, file: !370, line: 58, baseType: !104, size: 32, offset: 32)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5676, file: !370, line: 59, baseType: !259, size: 32, offset: 64)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5673, file: !366, line: 5075, baseType: !5621, size: 64, offset: 96)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5673, file: !366, line: 5076, baseType: !5683, offset: 160)
!5683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !380, line: 43, elements: !381)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5590, file: !270, line: 343, baseType: !5685, size: 64, offset: 928)
!5685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !343, line: 60, size: 64, elements: !5686)
!5686 = !{!5687, !5688}
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5685, file: !343, line: 63, baseType: !142, size: 32)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5685, file: !343, line: 66, baseType: !142, size: 32, offset: 32)
!5689 = !{!5690}
!5690 = !DILocalVariable(name: "thread", arg: 1, scope: !5584, file: !5585, line: 27, type: !5588)
!5691 = !DILocation(line: 0, scope: !5584)
!5692 = !DILocation(line: 29, column: 6, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5584, file: !5585, line: 29, column: 6)
!5694 = !DILocation(line: 29, column: 15, scope: !5693)
!5695 = !DILocation(line: 29, column: 6, scope: !5584)
!5696 = !DILocation(line: 1031, column: 3, scope: !5697, inlinedAt: !5700)
!5697 = distinct !DISubprogram(name: "__get_IPSR", scope: !4908, file: !4908, line: 1027, type: !4989, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !5698)
!5698 = !{!5699}
!5699 = !DILocalVariable(name: "result", scope: !5697, file: !4908, line: 1029, type: !142)
!5700 = distinct !DILocation(line: 48, column: 10, scope: !5701, inlinedAt: !5705)
!5701 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5702, file: !5702, line: 46, type: !5703, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !381)
!5702 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5703 = !DISubroutineType(types: !5704)
!5704 = !{!134}
!5705 = distinct !DILocation(line: 30, column: 7, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5707, file: !5585, line: 30, column: 7)
!5707 = distinct !DILexicalBlock(scope: !5693, file: !5585, line: 29, column: 26)
!5708 = !{i64 3723141}
!5709 = !DILocation(line: 0, scope: !5697, inlinedAt: !5700)
!5710 = !DILocation(line: 48, column: 9, scope: !5701, inlinedAt: !5705)
!5711 = !DILocation(line: 30, column: 7, scope: !5707)
!5712 = !DILocation(line: 42, column: 14, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5706, file: !5585, line: 30, column: 25)
!5714 = !DILocation(line: 48, column: 15, scope: !5713)
!5715 = !DILocation(line: 49, column: 3, scope: !5713)
!5716 = !DILocation(line: 52, column: 2, scope: !5584)
!5717 = !DILocation(line: 53, column: 1, scope: !5584)
!5718 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !265, file: !265, line: 127, type: !2876, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !256, retainedNodes: !381)
!5719 = !DILocation(line: 134, column: 2, scope: !5718)
!5720 = !DILocation(line: 156, column: 1, scope: !5718)
!5721 = !DILocation(line: 0, scope: !264)
!5722 = !DILocation(line: 289, column: 36, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !264, file: !265, line: 285, column: 2)
!5724 = !DILocation(line: 289, column: 42, scope: !5723)
!5725 = !DILocation(line: 300, column: 36, scope: !264)
!5726 = !DILocation(line: 301, column: 35, scope: !264)
!5727 = !DILocation(line: 302, column: 37, scope: !264)
!5728 = !DILocation(line: 311, column: 2, scope: !264)
!5729 = !DILocation(line: 316, column: 1, scope: !264)
!5730 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !443, file: !443, line: 180, type: !2876, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !381)
!5731 = !DILocation(line: 188, column: 12, scope: !5730)
!5732 = !DILocation(line: 271, column: 3, scope: !5733, inlinedAt: !5734)
!5733 = distinct !DISubprogram(name: "__DSB", scope: !4908, file: !4908, line: 269, type: !2876, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !381)
!5734 = distinct !DILocation(line: 192, column: 2, scope: !5730)
!5735 = !{i64 3911043}
!5736 = !DILocation(line: 260, column: 3, scope: !5737, inlinedAt: !5738)
!5737 = distinct !DISubprogram(name: "__ISB", scope: !4908, file: !4908, line: 258, type: !2876, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !381)
!5738 = distinct !DILocation(line: 193, column: 2, scope: !5730)
!5739 = !{i64 3910760}
!5740 = !DILocation(line: 194, column: 1, scope: !5730)
!5741 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !443, file: !443, line: 199, type: !2876, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !381)
!5742 = !DILocation(line: 282, column: 3, scope: !5743, inlinedAt: !5744)
!5743 = distinct !DISubprogram(name: "__DMB", scope: !4908, file: !4908, line: 280, type: !2876, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !381)
!5744 = distinct !DILocation(line: 202, column: 2, scope: !5741)
!5745 = !{i64 3911319}
!5746 = !DILocation(line: 205, column: 12, scope: !5741)
!5747 = !DILocation(line: 206, column: 1, scope: !5741)
!5748 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !443, file: !443, line: 275, type: !5749, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5762)
!5749 = !DISubroutineType(types: !5750)
!5750 = !{null, !5751, !1764, !5176, !5176}
!5751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5752, size: 32)
!5752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5753)
!5753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !394, line: 52, size: 96, elements: !5754)
!5754 = !{!5755, !5756, !5757}
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5753, file: !394, line: 53, baseType: !22, size: 32)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5753, file: !394, line: 54, baseType: !259, size: 32, offset: 32)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5753, file: !394, line: 55, baseType: !5758, size: 32, offset: 64)
!5758 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !400, line: 151, baseType: !5759)
!5759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !400, line: 149, size: 32, elements: !5760)
!5760 = !{!5761}
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !5759, file: !400, line: 150, baseType: !142, size: 32)
!5762 = !{!5763, !5764, !5765, !5766}
!5763 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5748, file: !443, line: 276, type: !5751)
!5764 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5748, file: !443, line: 276, type: !1764)
!5765 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !5748, file: !443, line: 277, type: !5176)
!5766 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5748, file: !443, line: 277, type: !5176)
!5767 = !DILocation(line: 0, scope: !5748)
!5768 = !DILocation(line: 279, column: 6, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5748, file: !443, line: 279, column: 6)
!5770 = !DILocation(line: 285, column: 1, scope: !5748)
!5771 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !5772, file: !5772, line: 220, type: !5773, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5775)
!5772 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5773 = !DISubroutineType(types: !5774)
!5774 = !{!103, !5751, !1764, !5176, !5176}
!5775 = !{!5776, !5777, !5778, !5779, !5780}
!5776 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5771, file: !5772, line: 221, type: !5751)
!5777 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5771, file: !5772, line: 221, type: !1764)
!5778 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !5771, file: !5772, line: 222, type: !5176)
!5779 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5771, file: !5772, line: 223, type: !5176)
!5780 = !DILocalVariable(name: "mpu_reg_index", scope: !5771, file: !5772, line: 225, type: !103)
!5781 = !DILocation(line: 0, scope: !5771)
!5782 = !DILocation(line: 225, column: 22, scope: !5771)
!5783 = !DILocation(line: 233, column: 18, scope: !5771)
!5784 = !DILocation(line: 236, column: 23, scope: !5771)
!5785 = !DILocation(line: 236, column: 21, scope: !5771)
!5786 = !DILocation(line: 238, column: 2, scope: !5771)
!5787 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !443, file: !443, line: 105, type: !5788, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5790)
!5788 = !DISubroutineType(types: !5789)
!5789 = !{!103, !5751, !131, !131, !134}
!5790 = !{!5791, !5792, !5793, !5794, !5795, !5796}
!5791 = !DILocalVariable(name: "regions", arg: 1, scope: !5787, file: !443, line: 106, type: !5751)
!5792 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5787, file: !443, line: 106, type: !131)
!5793 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !5787, file: !443, line: 106, type: !131)
!5794 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !5787, file: !443, line: 107, type: !134)
!5795 = !DILocalVariable(name: "i", scope: !5787, file: !443, line: 109, type: !103)
!5796 = !DILocalVariable(name: "reg_index", scope: !5787, file: !443, line: 110, type: !103)
!5797 = !DILocation(line: 0, scope: !5787)
!5798 = !DILocation(line: 110, column: 18, scope: !5787)
!5799 = !DILocation(line: 112, column: 16, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5801, file: !443, line: 112, column: 2)
!5801 = distinct !DILexicalBlock(scope: !5787, file: !443, line: 112, column: 2)
!5802 = !DILocation(line: 112, column: 2, scope: !5801)
!5803 = !DILocation(line: 113, column: 7, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !443, line: 113, column: 7)
!5805 = distinct !DILexicalBlock(scope: !5800, file: !443, line: 112, column: 36)
!5806 = !DILocation(line: 113, column: 18, scope: !5804)
!5807 = !DILocation(line: 113, column: 23, scope: !5804)
!5808 = !DILocation(line: 113, column: 7, scope: !5805)
!5809 = !DILocation(line: 118, column: 23, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !443, line: 118, column: 7)
!5811 = !DILocation(line: 119, column: 7, scope: !5810)
!5812 = !DILocation(line: 118, column: 7, scope: !5805)
!5813 = !DILocation(line: 124, column: 36, scope: !5805)
!5814 = !DILocation(line: 124, column: 15, scope: !5805)
!5815 = !DILocation(line: 126, column: 17, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5805, file: !443, line: 126, column: 7)
!5817 = !DILocation(line: 126, column: 7, scope: !5805)
!5818 = !DILocation(line: 131, column: 12, scope: !5805)
!5819 = !DILocation(line: 132, column: 2, scope: !5805)
!5820 = !DILocation(line: 112, column: 32, scope: !5800)
!5821 = distinct !{!5821, !5802, !5822}
!5822 = !DILocation(line: 132, column: 2, scope: !5801)
!5823 = !DILocation(line: 135, column: 1, scope: !5787)
!5824 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !5772, file: !5772, line: 63, type: !5825, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5827)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!103, !5751}
!5827 = !{!5828, !5829}
!5828 = !DILocalVariable(name: "part", arg: 1, scope: !5824, file: !5772, line: 63, type: !5751)
!5829 = !DILocalVariable(name: "partition_is_valid", scope: !5824, file: !5772, line: 70, type: !103)
!5830 = !DILocation(line: 0, scope: !5824)
!5831 = !DILocation(line: 71, column: 11, scope: !5824)
!5832 = !DILocation(line: 71, column: 37, scope: !5824)
!5833 = !{i32 0, i32 33}
!5834 = !DILocation(line: 72, column: 3, scope: !5824)
!5835 = !DILocation(line: 71, column: 30, scope: !5824)
!5836 = !DILocation(line: 75, column: 11, scope: !5824)
!5837 = !DILocation(line: 75, column: 17, scope: !5824)
!5838 = !DILocation(line: 75, column: 38, scope: !5824)
!5839 = !DILocation(line: 77, column: 2, scope: !5824)
!5840 = distinct !DISubprogram(name: "mpu_configure_region", scope: !443, file: !443, line: 79, type: !5841, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5843)
!5841 = !DISubroutineType(types: !5842)
!5842 = !{!103, !1764, !5751}
!5843 = !{!5844, !5845, !5846}
!5844 = !DILocalVariable(name: "index", arg: 1, scope: !5840, file: !443, line: 79, type: !1764)
!5845 = !DILocalVariable(name: "new_region", arg: 2, scope: !5840, file: !443, line: 80, type: !5751)
!5846 = !DILocalVariable(name: "region_conf", scope: !5840, file: !443, line: 82, type: !432)
!5847 = !DILocation(line: 0, scope: !5840)
!5848 = !DILocation(line: 82, column: 2, scope: !5840)
!5849 = !DILocation(line: 82, column: 24, scope: !5840)
!5850 = !DILocation(line: 87, column: 33, scope: !5840)
!5851 = !DILocation(line: 87, column: 14, scope: !5840)
!5852 = !DILocation(line: 87, column: 19, scope: !5840)
!5853 = !DILocation(line: 91, column: 55, scope: !5840)
!5854 = !DILocation(line: 92, column: 16, scope: !5840)
!5855 = !DILocation(line: 92, column: 53, scope: !5840)
!5856 = !DILocation(line: 91, column: 2, scope: !5840)
!5857 = !DILocation(line: 95, column: 9, scope: !5840)
!5858 = !DILocation(line: 97, column: 1, scope: !5840)
!5859 = !DILocation(line: 95, column: 2, scope: !5840)
!5860 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !5772, file: !5772, line: 113, type: !5861, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5866)
!5861 = !DISubroutineType(types: !5862)
!5862 = !{null, !5863, !5864, !142, !142}
!5863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!5864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5865, size: 32)
!5865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5758)
!5866 = !{!5867, !5868, !5869, !5870}
!5867 = !DILocalVariable(name: "p_attr", arg: 1, scope: !5860, file: !5772, line: 114, type: !5863)
!5868 = !DILocalVariable(name: "attr", arg: 2, scope: !5860, file: !5772, line: 115, type: !5864)
!5869 = !DILocalVariable(name: "base", arg: 3, scope: !5860, file: !5772, line: 115, type: !142)
!5870 = !DILocalVariable(name: "size", arg: 4, scope: !5860, file: !5772, line: 115, type: !142)
!5871 = !DILocation(line: 0, scope: !5860)
!5872 = !DILocation(line: 127, column: 23, scope: !5860)
!5873 = !DILocation(line: 127, column: 35, scope: !5860)
!5874 = !DILocation(line: 127, column: 33, scope: !5860)
!5875 = !DILocation(line: 127, column: 10, scope: !5860)
!5876 = !DILocation(line: 127, column: 15, scope: !5860)
!5877 = !DILocation(line: 129, column: 1, scope: !5860)
!5878 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !443, file: !443, line: 57, type: !5879, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5881)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{!103, !1764, !430}
!5881 = !{!5882, !5883}
!5882 = !DILocalVariable(name: "index", arg: 1, scope: !5878, file: !443, line: 57, type: !1764)
!5883 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5878, file: !443, line: 58, type: !430)
!5884 = !DILocation(line: 0, scope: !5878)
!5885 = !DILocation(line: 61, column: 6, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5878, file: !443, line: 61, column: 6)
!5887 = !DILocation(line: 61, column: 12, scope: !5886)
!5888 = !DILocation(line: 61, column: 6, scope: !5878)
!5889 = !DILocation(line: 71, column: 2, scope: !5878)
!5890 = !DILocation(line: 73, column: 2, scope: !5878)
!5891 = !DILocation(line: 74, column: 1, scope: !5878)
!5892 = distinct !DISubprogram(name: "region_init", scope: !5772, file: !5772, line: 29, type: !5893, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5895)
!5893 = !DISubroutineType(types: !5894)
!5894 = !{null, !5176, !430}
!5895 = !{!5896, !5897}
!5896 = !DILocalVariable(name: "index", arg: 1, scope: !5892, file: !5772, line: 29, type: !5176)
!5897 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5892, file: !5772, line: 30, type: !430)
!5898 = !DILocation(line: 0, scope: !5892)
!5899 = !DILocation(line: 33, column: 2, scope: !5892)
!5900 = !DILocation(line: 47, column: 28, scope: !5892)
!5901 = !DILocation(line: 47, column: 33, scope: !5892)
!5902 = !DILocation(line: 48, column: 26, scope: !5892)
!5903 = !DILocation(line: 47, column: 12, scope: !5892)
!5904 = !DILocation(line: 49, column: 32, scope: !5892)
!5905 = !DILocation(line: 49, column: 37, scope: !5892)
!5906 = !DILocation(line: 49, column: 12, scope: !5892)
!5907 = !DILocation(line: 53, column: 1, scope: !5892)
!5908 = distinct !DISubprogram(name: "set_region_number", scope: !5909, file: !5909, line: 32, type: !4999, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5910)
!5909 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5910 = !{!5911}
!5911 = !DILocalVariable(name: "index", arg: 1, scope: !5908, file: !5909, line: 32, type: !142)
!5912 = !DILocation(line: 0, scope: !5908)
!5913 = !DILocation(line: 34, column: 11, scope: !5908)
!5914 = !DILocation(line: 35, column: 1, scope: !5908)
!5915 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !5772, file: !5772, line: 88, type: !5916, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5918)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{!142, !142}
!5918 = !{!5919}
!5919 = !DILocalVariable(name: "size", arg: 1, scope: !5915, file: !5772, line: 88, type: !142)
!5920 = !DILocation(line: 0, scope: !5915)
!5921 = !DILocation(line: 91, column: 11, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5915, file: !5772, line: 91, column: 6)
!5923 = !DILocation(line: 91, column: 6, scope: !5915)
!5924 = !DILocation(line: 100, column: 11, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5915, file: !5772, line: 100, column: 6)
!5926 = !DILocation(line: 100, column: 6, scope: !5915)
!5927 = !DILocation(line: 104, column: 35, scope: !5915)
!5928 = !DILocation(line: 104, column: 16, scope: !5915)
!5929 = !DILocation(line: 104, column: 50, scope: !5915)
!5930 = !DILocation(line: 104, column: 72, scope: !5915)
!5931 = !DILocation(line: 104, column: 2, scope: !5915)
!5932 = !DILocation(line: 106, column: 1, scope: !5915)
!5933 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !443, file: !443, line: 307, type: !5934, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5936)
!5934 = !DISubroutineType(types: !5935)
!5935 = !{null, !5751, !131}
!5936 = !{!5937, !5938}
!5937 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5933, file: !443, line: 308, type: !5751)
!5938 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5933, file: !443, line: 308, type: !131)
!5939 = !DILocation(line: 0, scope: !5933)
!5940 = !DILocation(line: 310, column: 6, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5933, file: !443, line: 310, column: 6)
!5942 = !DILocation(line: 316, column: 1, scope: !5933)
!5943 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !5772, file: !5772, line: 249, type: !5944, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5946)
!5944 = !DISubroutineType(types: !5945)
!5945 = !{!103, !5751, !131}
!5946 = !{!5947, !5948, !5949, !5950}
!5947 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5943, file: !5772, line: 250, type: !5751)
!5948 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5943, file: !5772, line: 250, type: !131)
!5949 = !DILocalVariable(name: "mpu_reg_index", scope: !5943, file: !5772, line: 252, type: !103)
!5950 = !DILocalVariable(name: "i", scope: !5951, file: !5772, line: 264, type: !103)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !5772, line: 264, column: 3)
!5952 = distinct !DILexicalBlock(scope: !5953, file: !5772, line: 261, column: 32)
!5953 = distinct !DILexicalBlock(scope: !5943, file: !5772, line: 261, column: 6)
!5954 = !DILocation(line: 0, scope: !5943)
!5955 = !DILocation(line: 252, column: 22, scope: !5943)
!5956 = !DILocation(line: 258, column: 18, scope: !5943)
!5957 = !DILocation(line: 261, column: 20, scope: !5953)
!5958 = !DILocation(line: 261, column: 6, scope: !5943)
!5959 = !DILocation(line: 0, scope: !5951)
!5960 = !DILocation(line: 265, column: 4, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5962, file: !5772, line: 264, column: 59)
!5962 = distinct !DILexicalBlock(scope: !5951, file: !5772, line: 264, column: 3)
!5963 = !DILocation(line: 264, column: 55, scope: !5962)
!5964 = !DILocation(line: 264, column: 33, scope: !5962)
!5965 = !DILocation(line: 264, column: 3, scope: !5951)
!5966 = distinct !{!5966, !5965, !5967}
!5967 = !DILocation(line: 266, column: 3, scope: !5951)
!5968 = !DILocation(line: 269, column: 2, scope: !5943)
!5969 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !5970, file: !5970, line: 218, type: !4999, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5971)
!5970 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5971 = !{!5972}
!5972 = !DILocalVariable(name: "rnr", arg: 1, scope: !5969, file: !5970, line: 218, type: !142)
!5973 = !DILocation(line: 0, scope: !5969)
!5974 = !DILocation(line: 220, column: 12, scope: !5969)
!5975 = !DILocation(line: 221, column: 13, scope: !5969)
!5976 = !DILocation(line: 222, column: 1, scope: !5969)
!5977 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !443, file: !443, line: 326, type: !5978, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5980)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!103}
!5980 = !{!5981}
!5981 = !DILocalVariable(name: "r_index", scope: !5977, file: !443, line: 328, type: !142)
!5982 = !DILocation(line: 330, column: 17, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5977, file: !443, line: 330, column: 6)
!5984 = !DILocation(line: 330, column: 29, scope: !5983)
!5985 = !DILocation(line: 330, column: 6, scope: !5977)
!5986 = !DILocation(line: 347, column: 2, scope: !5977)
!5987 = !DILocation(line: 0, scope: !5977)
!5988 = !DILocation(line: 364, column: 29, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !443, line: 364, column: 2)
!5990 = distinct !DILexicalBlock(scope: !5977, file: !443, line: 364, column: 2)
!5991 = !DILocation(line: 364, column: 2, scope: !5990)
!5992 = !DILocation(line: 365, column: 25, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5989, file: !443, line: 364, column: 66)
!5994 = !DILocation(line: 365, column: 3, scope: !5993)
!5995 = !DILocation(line: 364, column: 62, scope: !5989)
!5996 = distinct !{!5996, !5991, !5997}
!5997 = !DILocation(line: 366, column: 2, scope: !5990)
!5998 = !DILocation(line: 369, column: 23, scope: !5977)
!5999 = !DILocation(line: 369, column: 21, scope: !5977)
!6000 = !DILocation(line: 372, column: 2, scope: !5977)
!6001 = !DILocation(line: 443, column: 2, scope: !5977)
!6002 = !DILocation(line: 444, column: 1, scope: !5977)
!6003 = distinct !DISubprogram(name: "strcpy", scope: !6004, file: !6004, line: 20, type: !6005, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6009)
!6004 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6005 = !DISubroutineType(types: !6006)
!6006 = !{!1054, !6007, !6008}
!6007 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1054)
!6008 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !121)
!6009 = !{!6010, !6011, !6012}
!6010 = !DILocalVariable(name: "d", arg: 1, scope: !6003, file: !6004, line: 20, type: !6007)
!6011 = !DILocalVariable(name: "s", arg: 2, scope: !6003, file: !6004, line: 20, type: !6008)
!6012 = !DILocalVariable(name: "dest", scope: !6003, file: !6004, line: 22, type: !1054)
!6013 = !DILocation(line: 0, scope: !6003)
!6014 = !DILocation(line: 24, column: 9, scope: !6003)
!6015 = !DILocation(line: 24, column: 12, scope: !6003)
!6016 = !DILocation(line: 24, column: 2, scope: !6003)
!6017 = !DILocation(line: 25, column: 6, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6003, file: !6004, line: 24, column: 21)
!6019 = !DILocation(line: 26, column: 4, scope: !6018)
!6020 = !DILocation(line: 27, column: 4, scope: !6018)
!6021 = distinct !{!6021, !6016, !6022}
!6022 = !DILocation(line: 28, column: 2, scope: !6003)
!6023 = !DILocation(line: 30, column: 5, scope: !6003)
!6024 = !DILocation(line: 32, column: 2, scope: !6003)
!6025 = distinct !DISubprogram(name: "strncpy", scope: !6004, file: !6004, line: 42, type: !6026, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6028)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{!1054, !6007, !6008, !259}
!6028 = !{!6029, !6030, !6031, !6032}
!6029 = !DILocalVariable(name: "d", arg: 1, scope: !6025, file: !6004, line: 42, type: !6007)
!6030 = !DILocalVariable(name: "s", arg: 2, scope: !6025, file: !6004, line: 42, type: !6008)
!6031 = !DILocalVariable(name: "n", arg: 3, scope: !6025, file: !6004, line: 42, type: !259)
!6032 = !DILocalVariable(name: "dest", scope: !6025, file: !6004, line: 44, type: !1054)
!6033 = !DILocation(line: 0, scope: !6025)
!6034 = !DILocation(line: 46, column: 12, scope: !6025)
!6035 = !DILocation(line: 46, column: 17, scope: !6025)
!6036 = !DILocation(line: 46, column: 20, scope: !6025)
!6037 = !DILocation(line: 46, column: 23, scope: !6025)
!6038 = !DILocation(line: 46, column: 2, scope: !6025)
!6039 = !DILocation(line: 47, column: 6, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6025, file: !6004, line: 46, column: 32)
!6041 = !DILocation(line: 48, column: 4, scope: !6040)
!6042 = !DILocation(line: 49, column: 4, scope: !6040)
!6043 = !DILocation(line: 50, column: 4, scope: !6040)
!6044 = distinct !{!6044, !6038, !6045}
!6045 = !DILocation(line: 51, column: 2, scope: !6025)
!6046 = !DILocation(line: 54, column: 6, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6025, file: !6004, line: 53, column: 16)
!6048 = !DILocation(line: 55, column: 4, scope: !6047)
!6049 = !DILocation(line: 56, column: 4, scope: !6047)
!6050 = !DILocation(line: 53, column: 11, scope: !6025)
!6051 = !DILocation(line: 53, column: 2, scope: !6025)
!6052 = distinct !{!6052, !6051, !6053}
!6053 = !DILocation(line: 57, column: 2, scope: !6025)
!6054 = !DILocation(line: 59, column: 2, scope: !6025)
!6055 = distinct !DISubprogram(name: "strchr", scope: !6004, file: !6004, line: 69, type: !6056, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6058)
!6056 = !DISubroutineType(types: !6057)
!6057 = !{!1054, !121, !103}
!6058 = !{!6059, !6060, !6061}
!6059 = !DILocalVariable(name: "s", arg: 1, scope: !6055, file: !6004, line: 69, type: !121)
!6060 = !DILocalVariable(name: "c", arg: 2, scope: !6055, file: !6004, line: 69, type: !103)
!6061 = !DILocalVariable(name: "tmp", scope: !6055, file: !6004, line: 71, type: !123)
!6062 = !DILocation(line: 0, scope: !6055)
!6063 = !DILocation(line: 73, column: 2, scope: !6055)
!6064 = !DILocation(line: 73, column: 10, scope: !6055)
!6065 = !DILocation(line: 73, column: 13, scope: !6055)
!6066 = !DILocation(line: 73, column: 21, scope: !6055)
!6067 = !DILocation(line: 74, column: 4, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6055, file: !6004, line: 73, column: 38)
!6069 = distinct !{!6069, !6063, !6070}
!6070 = !DILocation(line: 75, column: 2, scope: !6055)
!6071 = !DILocation(line: 77, column: 9, scope: !6055)
!6072 = !DILocation(line: 77, column: 2, scope: !6055)
!6073 = distinct !DISubprogram(name: "strrchr", scope: !6004, file: !6004, line: 87, type: !6056, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6074)
!6074 = !{!6075, !6076, !6077}
!6075 = !DILocalVariable(name: "s", arg: 1, scope: !6073, file: !6004, line: 87, type: !121)
!6076 = !DILocalVariable(name: "c", arg: 2, scope: !6073, file: !6004, line: 87, type: !103)
!6077 = !DILocalVariable(name: "match", scope: !6073, file: !6004, line: 89, type: !1054)
!6078 = !DILocation(line: 0, scope: !6073)
!6079 = !DILocation(line: 91, column: 2, scope: !6073)
!6080 = !DILocation(line: 92, column: 7, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6082, file: !6004, line: 92, column: 7)
!6082 = distinct !DILexicalBlock(scope: !6073, file: !6004, line: 91, column: 5)
!6083 = !DILocation(line: 92, column: 10, scope: !6081)
!6084 = !DILocation(line: 92, column: 7, scope: !6082)
!6085 = !DILocation(line: 95, column: 13, scope: !6073)
!6086 = !DILocation(line: 95, column: 2, scope: !6082)
!6087 = distinct !{!6087, !6079, !6088}
!6088 = !DILocation(line: 95, column: 15, scope: !6073)
!6089 = !DILocation(line: 97, column: 2, scope: !6073)
!6090 = distinct !DISubprogram(name: "strlen", scope: !6004, file: !6004, line: 107, type: !6091, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6093)
!6091 = !DISubroutineType(types: !6092)
!6092 = !{!259, !121}
!6093 = !{!6094, !6095}
!6094 = !DILocalVariable(name: "s", arg: 1, scope: !6090, file: !6004, line: 107, type: !121)
!6095 = !DILocalVariable(name: "n", scope: !6090, file: !6004, line: 109, type: !259)
!6096 = !DILocation(line: 0, scope: !6090)
!6097 = !DILocation(line: 111, column: 9, scope: !6090)
!6098 = !DILocation(line: 111, column: 12, scope: !6090)
!6099 = !DILocation(line: 111, column: 2, scope: !6090)
!6100 = !DILocation(line: 112, column: 4, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6090, file: !6004, line: 111, column: 21)
!6102 = !DILocation(line: 113, column: 4, scope: !6101)
!6103 = distinct !{!6103, !6099, !6104}
!6104 = !DILocation(line: 114, column: 2, scope: !6090)
!6105 = !DILocation(line: 116, column: 2, scope: !6090)
!6106 = distinct !DISubprogram(name: "strnlen", scope: !6004, file: !6004, line: 126, type: !6107, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6109)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!259, !121, !259}
!6109 = !{!6110, !6111, !6112}
!6110 = !DILocalVariable(name: "s", arg: 1, scope: !6106, file: !6004, line: 126, type: !121)
!6111 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6106, file: !6004, line: 126, type: !259)
!6112 = !DILocalVariable(name: "n", scope: !6106, file: !6004, line: 128, type: !259)
!6113 = !DILocation(line: 0, scope: !6106)
!6114 = !DILocation(line: 130, column: 9, scope: !6106)
!6115 = !DILocation(line: 130, column: 12, scope: !6106)
!6116 = !DILocation(line: 130, column: 20, scope: !6106)
!6117 = !DILocation(line: 130, column: 2, scope: !6106)
!6118 = !DILocation(line: 131, column: 4, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6106, file: !6004, line: 130, column: 35)
!6120 = !DILocation(line: 132, column: 4, scope: !6119)
!6121 = distinct !{!6121, !6117, !6122}
!6122 = !DILocation(line: 133, column: 2, scope: !6106)
!6123 = !DILocation(line: 135, column: 2, scope: !6106)
!6124 = distinct !DISubprogram(name: "strcmp", scope: !6004, file: !6004, line: 145, type: !6125, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6127)
!6125 = !DISubroutineType(types: !6126)
!6126 = !{!103, !121, !121}
!6127 = !{!6128, !6129}
!6128 = !DILocalVariable(name: "s1", arg: 1, scope: !6124, file: !6004, line: 145, type: !121)
!6129 = !DILocalVariable(name: "s2", arg: 2, scope: !6124, file: !6004, line: 145, type: !121)
!6130 = !DILocation(line: 0, scope: !6124)
!6131 = !DILocation(line: 147, column: 10, scope: !6124)
!6132 = !DILocation(line: 147, column: 17, scope: !6124)
!6133 = !DILocation(line: 147, column: 14, scope: !6124)
!6134 = !DILocation(line: 147, column: 22, scope: !6124)
!6135 = !DILocation(line: 148, column: 5, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6124, file: !6004, line: 147, column: 40)
!6137 = !DILocation(line: 149, column: 5, scope: !6136)
!6138 = distinct !{!6138, !6139, !6140}
!6139 = !DILocation(line: 147, column: 2, scope: !6124)
!6140 = !DILocation(line: 150, column: 2, scope: !6124)
!6141 = !DILocation(line: 152, column: 9, scope: !6124)
!6142 = !DILocation(line: 152, column: 15, scope: !6124)
!6143 = !DILocation(line: 152, column: 13, scope: !6124)
!6144 = !DILocation(line: 152, column: 2, scope: !6124)
!6145 = distinct !DISubprogram(name: "strncmp", scope: !6004, file: !6004, line: 162, type: !6146, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6148)
!6146 = !DISubroutineType(types: !6147)
!6147 = !{!103, !121, !121, !259}
!6148 = !{!6149, !6150, !6151}
!6149 = !DILocalVariable(name: "s1", arg: 1, scope: !6145, file: !6004, line: 162, type: !121)
!6150 = !DILocalVariable(name: "s2", arg: 2, scope: !6145, file: !6004, line: 162, type: !121)
!6151 = !DILocalVariable(name: "n", arg: 3, scope: !6145, file: !6004, line: 162, type: !259)
!6152 = !DILocation(line: 0, scope: !6145)
!6153 = !DILocation(line: 164, column: 17, scope: !6145)
!6154 = !DILocation(line: 164, column: 21, scope: !6145)
!6155 = !DILocation(line: 164, column: 28, scope: !6145)
!6156 = !DILocation(line: 164, column: 25, scope: !6145)
!6157 = !DILocation(line: 164, column: 33, scope: !6145)
!6158 = !DILocation(line: 165, column: 5, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6145, file: !6004, line: 164, column: 51)
!6160 = !DILocation(line: 166, column: 5, scope: !6159)
!6161 = !DILocation(line: 167, column: 4, scope: !6159)
!6162 = distinct !{!6162, !6163, !6164}
!6163 = !DILocation(line: 164, column: 2, scope: !6145)
!6164 = !DILocation(line: 168, column: 2, scope: !6145)
!6165 = !DILocation(line: 170, column: 25, scope: !6145)
!6166 = !DILocation(line: 170, column: 31, scope: !6145)
!6167 = !DILocation(line: 170, column: 29, scope: !6145)
!6168 = !DILocation(line: 170, column: 9, scope: !6145)
!6169 = !DILocation(line: 170, column: 2, scope: !6145)
!6170 = distinct !DISubprogram(name: "strtok_r", scope: !6004, file: !6004, line: 180, type: !6171, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6174)
!6171 = !DISubroutineType(types: !6172)
!6172 = !{!1054, !1054, !121, !6173}
!6173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!6174 = !{!6175, !6176, !6177, !6178, !6179}
!6175 = !DILocalVariable(name: "str", arg: 1, scope: !6170, file: !6004, line: 180, type: !1054)
!6176 = !DILocalVariable(name: "sep", arg: 2, scope: !6170, file: !6004, line: 180, type: !121)
!6177 = !DILocalVariable(name: "state", arg: 3, scope: !6170, file: !6004, line: 180, type: !6173)
!6178 = !DILocalVariable(name: "start", scope: !6170, file: !6004, line: 182, type: !1054)
!6179 = !DILocalVariable(name: "end", scope: !6170, file: !6004, line: 182, type: !1054)
!6180 = !DILocation(line: 0, scope: !6170)
!6181 = !DILocation(line: 184, column: 10, scope: !6170)
!6182 = !DILocation(line: 184, column: 22, scope: !6170)
!6183 = !DILocation(line: 187, column: 9, scope: !6170)
!6184 = !DILocation(line: 187, column: 16, scope: !6170)
!6185 = !DILocation(line: 187, column: 19, scope: !6170)
!6186 = !DILocation(line: 187, column: 2, scope: !6170)
!6187 = !DILocation(line: 188, column: 8, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6170, file: !6004, line: 187, column: 40)
!6189 = distinct !{!6189, !6186, !6190}
!6190 = !DILocation(line: 189, column: 2, scope: !6170)
!6191 = !DILocation(line: 198, column: 9, scope: !6170)
!6192 = !DILocation(line: 198, column: 18, scope: !6170)
!6193 = !DILocation(line: 198, column: 17, scope: !6170)
!6194 = !DILocation(line: 198, column: 2, scope: !6170)
!6195 = !DILocation(line: 199, column: 6, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6170, file: !6004, line: 198, column: 37)
!6197 = !DILocation(line: 198, column: 14, scope: !6170)
!6198 = distinct !{!6198, !6194, !6199}
!6199 = !DILocation(line: 200, column: 2, scope: !6170)
!6200 = !DILocation(line: 203, column: 8, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6202, file: !6004, line: 202, column: 20)
!6202 = distinct !DILexicalBlock(scope: !6170, file: !6004, line: 202, column: 6)
!6203 = !DILocation(line: 204, column: 16, scope: !6201)
!6204 = !DILocation(line: 205, column: 2, scope: !6201)
!6205 = !DILocation(line: 210, column: 1, scope: !6170)
!6206 = distinct !DISubprogram(name: "strcat", scope: !6004, file: !6004, line: 212, type: !6005, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6207)
!6207 = !{!6208, !6209}
!6208 = !DILocalVariable(name: "dest", arg: 1, scope: !6206, file: !6004, line: 212, type: !6007)
!6209 = !DILocalVariable(name: "src", arg: 2, scope: !6206, file: !6004, line: 212, type: !6008)
!6210 = !DILocation(line: 0, scope: !6206)
!6211 = !DILocation(line: 214, column: 16, scope: !6206)
!6212 = !DILocation(line: 214, column: 14, scope: !6206)
!6213 = !DILocation(line: 214, column: 2, scope: !6206)
!6214 = !DILocation(line: 215, column: 2, scope: !6206)
!6215 = distinct !DISubprogram(name: "strncat", scope: !6004, file: !6004, line: 218, type: !6026, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6216)
!6216 = !{!6217, !6218, !6219, !6220, !6221}
!6217 = !DILocalVariable(name: "dest", arg: 1, scope: !6215, file: !6004, line: 218, type: !6007)
!6218 = !DILocalVariable(name: "src", arg: 2, scope: !6215, file: !6004, line: 218, type: !6008)
!6219 = !DILocalVariable(name: "n", arg: 3, scope: !6215, file: !6004, line: 219, type: !259)
!6220 = !DILocalVariable(name: "orig_dest", scope: !6215, file: !6004, line: 221, type: !1054)
!6221 = !DILocalVariable(name: "len", scope: !6215, file: !6004, line: 222, type: !259)
!6222 = !DILocation(line: 0, scope: !6215)
!6223 = !DILocation(line: 222, column: 15, scope: !6215)
!6224 = !DILocation(line: 224, column: 7, scope: !6215)
!6225 = !DILocation(line: 225, column: 14, scope: !6215)
!6226 = !DILocation(line: 225, column: 19, scope: !6215)
!6227 = !DILocation(line: 225, column: 11, scope: !6215)
!6228 = !DILocation(line: 225, column: 23, scope: !6215)
!6229 = !DILocation(line: 225, column: 28, scope: !6215)
!6230 = !DILocation(line: 225, column: 2, scope: !6215)
!6231 = !DILocation(line: 226, column: 17, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6215, file: !6004, line: 225, column: 38)
!6233 = !DILocation(line: 226, column: 8, scope: !6232)
!6234 = !DILocation(line: 226, column: 11, scope: !6232)
!6235 = distinct !{!6235, !6230, !6236}
!6236 = !DILocation(line: 227, column: 2, scope: !6215)
!6237 = !DILocation(line: 228, column: 8, scope: !6215)
!6238 = !DILocation(line: 230, column: 2, scope: !6215)
!6239 = distinct !DISubprogram(name: "memcmp", scope: !6004, file: !6004, line: 239, type: !6240, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6242)
!6240 = !DISubroutineType(types: !6241)
!6241 = !{!103, !13, !13, !259}
!6242 = !{!6243, !6244, !6245, !6246, !6247}
!6243 = !DILocalVariable(name: "m1", arg: 1, scope: !6239, file: !6004, line: 239, type: !13)
!6244 = !DILocalVariable(name: "m2", arg: 2, scope: !6239, file: !6004, line: 239, type: !13)
!6245 = !DILocalVariable(name: "n", arg: 3, scope: !6239, file: !6004, line: 239, type: !259)
!6246 = !DILocalVariable(name: "c1", scope: !6239, file: !6004, line: 241, type: !121)
!6247 = !DILocalVariable(name: "c2", scope: !6239, file: !6004, line: 242, type: !121)
!6248 = !DILocation(line: 0, scope: !6239)
!6249 = !DILocation(line: 244, column: 7, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6239, file: !6004, line: 244, column: 6)
!6251 = !DILocation(line: 244, column: 6, scope: !6239)
!6252 = !DILocation(line: 248, column: 10, scope: !6239)
!6253 = !DILocation(line: 248, column: 14, scope: !6239)
!6254 = !DILocation(line: 248, column: 19, scope: !6239)
!6255 = !DILocation(line: 248, column: 2, scope: !6239)
!6256 = !DILocation(line: 248, column: 23, scope: !6239)
!6257 = !DILocation(line: 248, column: 30, scope: !6239)
!6258 = !DILocation(line: 248, column: 27, scope: !6239)
!6259 = !DILocation(line: 249, column: 5, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6239, file: !6004, line: 248, column: 36)
!6261 = !DILocation(line: 250, column: 5, scope: !6260)
!6262 = distinct !{!6262, !6255, !6263}
!6263 = !DILocation(line: 251, column: 2, scope: !6239)
!6264 = !DILocation(line: 253, column: 9, scope: !6239)
!6265 = !DILocation(line: 253, column: 15, scope: !6239)
!6266 = !DILocation(line: 253, column: 13, scope: !6239)
!6267 = !DILocation(line: 253, column: 2, scope: !6239)
!6268 = !DILocation(line: 254, column: 1, scope: !6239)
!6269 = distinct !DISubprogram(name: "memmove", scope: !6004, file: !6004, line: 263, type: !6270, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6272)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{!104, !104, !13, !259}
!6272 = !{!6273, !6274, !6275, !6276, !6277}
!6273 = !DILocalVariable(name: "d", arg: 1, scope: !6269, file: !6004, line: 263, type: !104)
!6274 = !DILocalVariable(name: "s", arg: 2, scope: !6269, file: !6004, line: 263, type: !13)
!6275 = !DILocalVariable(name: "n", arg: 3, scope: !6269, file: !6004, line: 263, type: !259)
!6276 = !DILocalVariable(name: "dest", scope: !6269, file: !6004, line: 265, type: !1054)
!6277 = !DILocalVariable(name: "src", scope: !6269, file: !6004, line: 266, type: !121)
!6278 = !DILocation(line: 0, scope: !6269)
!6279 = !DILocation(line: 268, column: 21, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6269, file: !6004, line: 268, column: 6)
!6281 = !DILocation(line: 268, column: 28, scope: !6280)
!6282 = !DILocation(line: 268, column: 6, scope: !6269)
!6283 = !DILocation(line: 280, column: 12, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6280, file: !6004, line: 278, column: 9)
!6285 = !DILocation(line: 280, column: 3, scope: !6284)
!6286 = !DILocation(line: 275, column: 5, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !6004, line: 274, column: 17)
!6288 = distinct !DILexicalBlock(scope: !6280, file: !6004, line: 268, column: 33)
!6289 = !DILocation(line: 276, column: 14, scope: !6287)
!6290 = !DILocation(line: 276, column: 4, scope: !6287)
!6291 = !DILocation(line: 276, column: 12, scope: !6287)
!6292 = !DILocation(line: 274, column: 12, scope: !6288)
!6293 = !DILocation(line: 274, column: 3, scope: !6288)
!6294 = distinct !{!6294, !6293, !6295}
!6295 = !DILocation(line: 277, column: 3, scope: !6288)
!6296 = !DILocation(line: 281, column: 12, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6284, file: !6004, line: 280, column: 17)
!6298 = !DILocation(line: 281, column: 10, scope: !6297)
!6299 = !DILocation(line: 282, column: 8, scope: !6297)
!6300 = !DILocation(line: 283, column: 7, scope: !6297)
!6301 = !DILocation(line: 284, column: 5, scope: !6297)
!6302 = distinct !{!6302, !6285, !6303}
!6303 = !DILocation(line: 285, column: 3, scope: !6284)
!6304 = !DILocation(line: 288, column: 2, scope: !6269)
!6305 = distinct !DISubprogram(name: "memcpy", scope: !6004, file: !6004, line: 298, type: !6306, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6310)
!6306 = !DISubroutineType(types: !6307)
!6307 = !{!104, !6308, !6309, !259}
!6308 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!6309 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6310 = !{!6311, !6312, !6313, !6314, !6315}
!6311 = !DILocalVariable(name: "d", arg: 1, scope: !6305, file: !6004, line: 298, type: !6308)
!6312 = !DILocalVariable(name: "s", arg: 2, scope: !6305, file: !6004, line: 298, type: !6309)
!6313 = !DILocalVariable(name: "n", arg: 3, scope: !6305, file: !6004, line: 298, type: !259)
!6314 = !DILocalVariable(name: "d_byte", scope: !6305, file: !6004, line: 302, type: !887)
!6315 = !DILocalVariable(name: "s_byte", scope: !6305, file: !6004, line: 303, type: !2661)
!6316 = !DILocation(line: 0, scope: !6305)
!6317 = !DILocation(line: 337, column: 11, scope: !6305)
!6318 = !DILocation(line: 337, column: 2, scope: !6305)
!6319 = !DILocation(line: 338, column: 25, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6305, file: !6004, line: 337, column: 16)
!6321 = !DILocation(line: 338, column: 17, scope: !6320)
!6322 = !DILocation(line: 338, column: 11, scope: !6320)
!6323 = !DILocation(line: 338, column: 15, scope: !6320)
!6324 = !DILocation(line: 339, column: 4, scope: !6320)
!6325 = distinct !{!6325, !6318, !6326}
!6326 = !DILocation(line: 340, column: 2, scope: !6305)
!6327 = !DILocation(line: 342, column: 2, scope: !6305)
!6328 = distinct !DISubprogram(name: "memset", scope: !6004, file: !6004, line: 352, type: !6329, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6331)
!6329 = !DISubroutineType(types: !6330)
!6330 = !{!104, !104, !103, !259}
!6331 = !{!6332, !6333, !6334, !6335, !6336}
!6332 = !DILocalVariable(name: "buf", arg: 1, scope: !6328, file: !6004, line: 352, type: !104)
!6333 = !DILocalVariable(name: "c", arg: 2, scope: !6328, file: !6004, line: 352, type: !103)
!6334 = !DILocalVariable(name: "n", arg: 3, scope: !6328, file: !6004, line: 352, type: !259)
!6335 = !DILocalVariable(name: "d_byte", scope: !6328, file: !6004, line: 356, type: !887)
!6336 = !DILocalVariable(name: "c_byte", scope: !6328, file: !6004, line: 357, type: !132)
!6337 = !DILocation(line: 0, scope: !6328)
!6338 = !DILocation(line: 357, column: 25, scope: !6328)
!6339 = !DILocation(line: 389, column: 11, scope: !6328)
!6340 = !DILocation(line: 389, column: 2, scope: !6328)
!6341 = !DILocation(line: 390, column: 11, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6328, file: !6004, line: 389, column: 16)
!6343 = !DILocation(line: 390, column: 15, scope: !6342)
!6344 = !DILocation(line: 391, column: 4, scope: !6342)
!6345 = distinct !{!6345, !6340, !6346}
!6346 = !DILocation(line: 392, column: 2, scope: !6328)
!6347 = !DILocation(line: 394, column: 2, scope: !6328)
!6348 = distinct !DISubprogram(name: "memchr", scope: !6004, file: !6004, line: 404, type: !6349, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6351)
!6349 = !DISubroutineType(types: !6350)
!6350 = !{!104, !13, !103, !259}
!6351 = !{!6352, !6353, !6354, !6355}
!6352 = !DILocalVariable(name: "s", arg: 1, scope: !6348, file: !6004, line: 404, type: !13)
!6353 = !DILocalVariable(name: "c", arg: 2, scope: !6348, file: !6004, line: 404, type: !103)
!6354 = !DILocalVariable(name: "n", arg: 3, scope: !6348, file: !6004, line: 404, type: !259)
!6355 = !DILocalVariable(name: "p", scope: !6356, file: !6004, line: 407, type: !2661)
!6356 = distinct !DILexicalBlock(scope: !6357, file: !6004, line: 406, column: 14)
!6357 = distinct !DILexicalBlock(scope: !6348, file: !6004, line: 406, column: 6)
!6358 = !DILocation(line: 0, scope: !6348)
!6359 = !DILocation(line: 406, column: 8, scope: !6357)
!6360 = !DILocation(line: 406, column: 6, scope: !6348)
!6361 = !DILocation(line: 409, column: 3, scope: !6356)
!6362 = !DILocation(line: 0, scope: !6356)
!6363 = !DILocation(line: 410, column: 8, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !6004, line: 410, column: 8)
!6365 = distinct !DILexicalBlock(scope: !6356, file: !6004, line: 409, column: 6)
!6366 = !DILocation(line: 410, column: 13, scope: !6364)
!6367 = !DILocation(line: 410, column: 8, scope: !6365)
!6368 = distinct !{!6368, !6361, !6369}
!6369 = !DILocation(line: 414, column: 20, scope: !6356)
!6370 = !DILocation(line: 417, column: 2, scope: !6348)
!6371 = !DILocation(line: 418, column: 1, scope: !6348)
!6372 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !453, file: !453, line: 23, type: !3051, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !6373)
!6373 = !{!6374}
!6374 = !DILocalVariable(name: "hook", arg: 1, scope: !6372, file: !453, line: 23, type: !178)
!6375 = !DILocation(line: 0, scope: !6372)
!6376 = !DILocation(line: 25, column: 15, scope: !6372)
!6377 = !DILocation(line: 26, column: 1, scope: !6372)
!6378 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !453, file: !453, line: 14, type: !179, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !6379)
!6379 = !{!6380}
!6380 = !DILocalVariable(name: "c", arg: 1, scope: !6378, file: !453, line: 14, type: !103)
!6381 = !DILocation(line: 0, scope: !6378)
!6382 = !DILocation(line: 18, column: 2, scope: !6378)
!6383 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !453, file: !453, line: 28, type: !6384, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !6386)
!6384 = !DISubroutineType(types: !6385)
!6385 = !{!103, !103, !449}
!6386 = !{!6387, !6388}
!6387 = !DILocalVariable(name: "c", arg: 1, scope: !6383, file: !453, line: 28, type: !103)
!6388 = !DILocalVariable(name: "stream", arg: 2, scope: !6383, file: !453, line: 28, type: !449)
!6389 = !DILocation(line: 0, scope: !6383)
!6390 = !DILocation(line: 30, column: 27, scope: !6383)
!6391 = !DILocation(line: 30, column: 50, scope: !6383)
!6392 = !DILocation(line: 30, column: 9, scope: !6383)
!6393 = !DILocation(line: 30, column: 2, scope: !6383)
!6394 = distinct !DISubprogram(name: "fputc", scope: !453, file: !453, line: 41, type: !6384, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !6395)
!6395 = !{!6396, !6397}
!6396 = !DILocalVariable(name: "c", arg: 1, scope: !6394, file: !453, line: 41, type: !103)
!6397 = !DILocalVariable(name: "stream", arg: 2, scope: !6394, file: !453, line: 41, type: !449)
!6398 = !DILocation(line: 0, scope: !6394)
!6399 = !DILocation(line: 43, column: 9, scope: !6394)
!6400 = !DILocation(line: 43, column: 2, scope: !6394)
!6401 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6402, file: !6402, line: 72, type: !6384, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !6403)
!6402 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!6403 = !{!6404, !6405}
!6404 = !DILocalVariable(name: "c", arg: 1, scope: !6401, file: !6402, line: 72, type: !103)
!6405 = !DILocalVariable(name: "stream", arg: 2, scope: !6401, file: !6402, line: 72, type: !449)
!6406 = !DILocation(line: 0, scope: !6401)
!6407 = !DILocation(line: 81, column: 2, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6401, file: !6402, line: 81, column: 2)
!6409 = !{i64 2155123266}
!6410 = !DILocation(line: 82, column: 9, scope: !6401)
!6411 = !DILocation(line: 82, column: 2, scope: !6401)
!6412 = distinct !DISubprogram(name: "fputs", scope: !453, file: !453, line: 46, type: !6413, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !6416)
!6413 = !DISubroutineType(types: !6414)
!6414 = !{!103, !6008, !6415}
!6415 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !449)
!6416 = !{!6417, !6418, !6419, !6420}
!6417 = !DILocalVariable(name: "s", arg: 1, scope: !6412, file: !453, line: 46, type: !6008)
!6418 = !DILocalVariable(name: "stream", arg: 2, scope: !6412, file: !453, line: 46, type: !6415)
!6419 = !DILocalVariable(name: "len", scope: !6412, file: !453, line: 48, type: !103)
!6420 = !DILocalVariable(name: "ret", scope: !6412, file: !453, line: 49, type: !103)
!6421 = !DILocation(line: 0, scope: !6412)
!6422 = !DILocation(line: 48, column: 12, scope: !6412)
!6423 = !DILocation(line: 51, column: 8, scope: !6412)
!6424 = !DILocation(line: 53, column: 13, scope: !6412)
!6425 = !DILocation(line: 53, column: 9, scope: !6412)
!6426 = !DILocation(line: 53, column: 2, scope: !6412)
!6427 = distinct !DISubprogram(name: "fwrite", scope: !453, file: !453, line: 99, type: !6428, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !6430)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{!259, !6309, !259, !259, !6415}
!6430 = !{!6431, !6432, !6433, !6434}
!6431 = !DILocalVariable(name: "ptr", arg: 1, scope: !6427, file: !453, line: 99, type: !6309)
!6432 = !DILocalVariable(name: "size", arg: 2, scope: !6427, file: !453, line: 99, type: !259)
!6433 = !DILocalVariable(name: "nitems", arg: 3, scope: !6427, file: !453, line: 99, type: !259)
!6434 = !DILocalVariable(name: "stream", arg: 4, scope: !6427, file: !453, line: 100, type: !6415)
!6435 = !DILocation(line: 0, scope: !6427)
!6436 = !DILocation(line: 102, column: 9, scope: !6427)
!6437 = !DILocation(line: 102, column: 2, scope: !6427)
!6438 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6402, file: !6402, line: 96, type: !6428, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !6439)
!6439 = !{!6440, !6441, !6442, !6443}
!6440 = !DILocalVariable(name: "ptr", arg: 1, scope: !6438, file: !6402, line: 96, type: !6309)
!6441 = !DILocalVariable(name: "size", arg: 2, scope: !6438, file: !6402, line: 96, type: !259)
!6442 = !DILocalVariable(name: "nitems", arg: 3, scope: !6438, file: !6402, line: 96, type: !259)
!6443 = !DILocalVariable(name: "stream", arg: 4, scope: !6438, file: !6402, line: 96, type: !6415)
!6444 = !DILocation(line: 0, scope: !6438)
!6445 = !DILocation(line: 107, column: 2, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6438, file: !6402, line: 107, column: 2)
!6447 = !{i64 2155123370}
!6448 = !DILocation(line: 108, column: 9, scope: !6438)
!6449 = !DILocation(line: 108, column: 2, scope: !6438)
!6450 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !453, file: !453, line: 56, type: !6428, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !6451)
!6451 = !{!6452, !6453, !6454, !6455, !6456, !6457, !6458, !6459}
!6452 = !DILocalVariable(name: "ptr", arg: 1, scope: !6450, file: !453, line: 56, type: !6309)
!6453 = !DILocalVariable(name: "size", arg: 2, scope: !6450, file: !453, line: 56, type: !259)
!6454 = !DILocalVariable(name: "nitems", arg: 3, scope: !6450, file: !453, line: 57, type: !259)
!6455 = !DILocalVariable(name: "stream", arg: 4, scope: !6450, file: !453, line: 57, type: !6415)
!6456 = !DILocalVariable(name: "i", scope: !6450, file: !453, line: 59, type: !259)
!6457 = !DILocalVariable(name: "j", scope: !6450, file: !453, line: 60, type: !259)
!6458 = !DILocalVariable(name: "p", scope: !6450, file: !453, line: 61, type: !2661)
!6459 = !DILabel(scope: !6450, name: "done", file: !453, line: 82)
!6460 = !DILocation(line: 0, scope: !6450)
!6461 = !DILocation(line: 63, column: 14, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6450, file: !453, line: 63, column: 6)
!6463 = !DILocation(line: 63, column: 24, scope: !6462)
!6464 = !DILocation(line: 72, column: 3, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6450, file: !453, line: 70, column: 5)
!6466 = !DILocation(line: 0, scope: !6465)
!6467 = !DILocation(line: 73, column: 8, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !453, line: 73, column: 8)
!6469 = distinct !DILexicalBlock(scope: !6465, file: !453, line: 72, column: 6)
!6470 = !DILocation(line: 73, column: 29, scope: !6468)
!6471 = !DILocation(line: 73, column: 27, scope: !6468)
!6472 = !DILocation(line: 73, column: 21, scope: !6468)
!6473 = !DILocation(line: 73, column: 33, scope: !6468)
!6474 = !DILocation(line: 73, column: 8, scope: !6469)
!6475 = !DILocation(line: 76, column: 5, scope: !6469)
!6476 = !DILocation(line: 77, column: 14, scope: !6465)
!6477 = !DILocation(line: 77, column: 3, scope: !6469)
!6478 = distinct !{!6478, !6464, !6479}
!6479 = !DILocation(line: 77, column: 17, scope: !6465)
!6480 = !DILocation(line: 79, column: 4, scope: !6465)
!6481 = !DILocation(line: 80, column: 13, scope: !6450)
!6482 = !DILocation(line: 80, column: 2, scope: !6465)
!6483 = distinct !{!6483, !6484, !6485}
!6484 = !DILocation(line: 70, column: 2, scope: !6450)
!6485 = !DILocation(line: 80, column: 16, scope: !6450)
!6486 = !DILocation(line: 82, column: 1, scope: !6450)
!6487 = !DILocation(line: 83, column: 17, scope: !6450)
!6488 = !DILocation(line: 83, column: 2, scope: !6450)
!6489 = !DILocation(line: 84, column: 1, scope: !6450)
!6490 = distinct !DISubprogram(name: "puts", scope: !453, file: !453, line: 106, type: !6491, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !6493)
!6491 = !DISubroutineType(types: !6492)
!6492 = !{!103, !121}
!6493 = !{!6494}
!6494 = !DILocalVariable(name: "s", arg: 1, scope: !6490, file: !453, line: 106, type: !121)
!6495 = !DILocation(line: 0, scope: !6490)
!6496 = !DILocation(line: 108, column: 6, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6490, file: !453, line: 108, column: 6)
!6498 = !DILocation(line: 108, column: 23, scope: !6497)
!6499 = !DILocation(line: 108, column: 6, scope: !6490)
!6500 = !DILocation(line: 112, column: 9, scope: !6490)
!6501 = !DILocation(line: 112, column: 29, scope: !6490)
!6502 = !DILocation(line: 112, column: 2, scope: !6490)
!6503 = !DILocation(line: 113, column: 1, scope: !6490)
!6504 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !594, file: !594, line: 368, type: !647, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6505)
!6505 = !{!6506}
!6506 = !DILocalVariable(name: "dev", arg: 1, scope: !6504, file: !594, line: 368, type: !623)
!6507 = !DILocation(line: 0, scope: !6504)
!6508 = !DILocation(line: 370, column: 2, scope: !6504)
!6509 = !DILocation(line: 371, column: 1, scope: !6504)
!6510 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !594, file: !594, line: 243, type: !6511, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6513)
!6511 = !DISubroutineType(types: !6512)
!6512 = !{null, !103, !103, !623}
!6513 = !{!6514, !6515, !6516, !6517, !6519}
!6514 = !DILocalVariable(name: "min", arg: 1, scope: !6510, file: !594, line: 243, type: !103)
!6515 = !DILocalVariable(name: "max", arg: 2, scope: !6510, file: !594, line: 243, type: !103)
!6516 = !DILocalVariable(name: "dev", arg: 3, scope: !6510, file: !594, line: 243, type: !623)
!6517 = !DILocalVariable(name: "data", scope: !6510, file: !594, line: 245, type: !6518)
!6518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 32)
!6519 = !DILocalVariable(name: "line", scope: !6510, file: !594, line: 246, type: !103)
!6520 = !DILocation(line: 0, scope: !6510)
!6521 = !DILocation(line: 245, column: 38, scope: !6510)
!6522 = !DILocation(line: 249, column: 24, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6524, file: !594, line: 249, column: 2)
!6524 = distinct !DILexicalBlock(scope: !6510, file: !594, line: 249, column: 2)
!6525 = !DILocation(line: 249, column: 2, scope: !6524)
!6526 = !DILocation(line: 251, column: 7, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6528, file: !594, line: 251, column: 7)
!6528 = distinct !DILexicalBlock(scope: !6523, file: !594, line: 249, column: 39)
!6529 = !DILocation(line: 251, column: 7, scope: !6528)
!6530 = !DILocation(line: 253, column: 4, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6527, file: !594, line: 251, column: 36)
!6532 = !DILocation(line: 256, column: 24, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6531, file: !594, line: 256, column: 8)
!6534 = !DILocation(line: 256, column: 9, scope: !6533)
!6535 = !DILocation(line: 256, column: 8, scope: !6531)
!6536 = !DILocation(line: 260, column: 43, scope: !6531)
!6537 = !DILocation(line: 260, column: 4, scope: !6531)
!6538 = !DILocation(line: 261, column: 3, scope: !6531)
!6539 = !DILocation(line: 249, column: 35, scope: !6523)
!6540 = distinct !{!6540, !6525, !6541}
!6541 = !DILocation(line: 262, column: 2, scope: !6524)
!6542 = !DILocation(line: 263, column: 1, scope: !6510)
!6543 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !594, file: !594, line: 158, type: !179, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6544)
!6544 = !{!6545}
!6545 = !DILocalVariable(name: "line", arg: 1, scope: !6543, file: !594, line: 158, type: !103)
!6546 = !DILocation(line: 0, scope: !6543)
!6547 = !DILocation(line: 170, column: 38, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !594, line: 160, column: 17)
!6549 = distinct !DILexicalBlock(scope: !6543, file: !594, line: 160, column: 6)
!6550 = !DILocation(line: 170, column: 10, scope: !6548)
!6551 = !DILocation(line: 176, column: 1, scope: !6543)
!6552 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !594, file: !594, line: 183, type: !6553, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6555)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{null, !103}
!6555 = !{!6556}
!6556 = !DILocalVariable(name: "line", arg: 1, scope: !6552, file: !594, line: 183, type: !103)
!6557 = !DILocation(line: 0, scope: !6552)
!6558 = !DILocation(line: 195, column: 28, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6560, file: !594, line: 185, column: 17)
!6560 = distinct !DILexicalBlock(scope: !6552, file: !594, line: 185, column: 6)
!6561 = !DILocation(line: 195, column: 3, scope: !6559)
!6562 = !DILocation(line: 200, column: 1, scope: !6552)
!6563 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !6564, file: !6564, line: 910, type: !4999, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6565)
!6564 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6565 = !{!6566}
!6566 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6563, file: !6564, line: 910, type: !142)
!6567 = !DILocation(line: 0, scope: !6563)
!6568 = !DILocation(line: 912, column: 3, scope: !6563)
!6569 = !DILocation(line: 913, column: 1, scope: !6563)
!6570 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !6564, file: !6564, line: 834, type: !5916, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6571)
!6571 = !{!6572}
!6572 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6570, file: !6564, line: 834, type: !142)
!6573 = !DILocation(line: 0, scope: !6570)
!6574 = !DILocation(line: 836, column: 11, scope: !6570)
!6575 = !DILocation(line: 836, column: 40, scope: !6570)
!6576 = !DILocation(line: 836, column: 3, scope: !6570)
!6577 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !594, file: !594, line: 304, type: !647, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6578)
!6578 = !{!6579}
!6579 = !DILocalVariable(name: "dev", arg: 1, scope: !6577, file: !594, line: 304, type: !623)
!6580 = !DILocation(line: 0, scope: !6577)
!6581 = !DILocation(line: 306, column: 2, scope: !6577)
!6582 = !DILocation(line: 307, column: 1, scope: !6577)
!6583 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !594, file: !594, line: 299, type: !647, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6584)
!6584 = !{!6585}
!6585 = !DILocalVariable(name: "dev", arg: 1, scope: !6583, file: !594, line: 299, type: !623)
!6586 = !DILocation(line: 0, scope: !6583)
!6587 = !DILocation(line: 301, column: 2, scope: !6583)
!6588 = !DILocation(line: 302, column: 1, scope: !6583)
!6589 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !594, file: !594, line: 294, type: !647, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6590)
!6590 = !{!6591}
!6591 = !DILocalVariable(name: "dev", arg: 1, scope: !6589, file: !594, line: 294, type: !623)
!6592 = !DILocation(line: 0, scope: !6589)
!6593 = !DILocation(line: 296, column: 2, scope: !6589)
!6594 = !DILocation(line: 297, column: 1, scope: !6589)
!6595 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !594, file: !594, line: 397, type: !647, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6596)
!6596 = !{!6597}
!6597 = !DILocalVariable(name: "dev", arg: 1, scope: !6595, file: !594, line: 397, type: !623)
!6598 = !DILocation(line: 0, scope: !6595)
!6599 = !DILocation(line: 399, column: 2, scope: !6595)
!6600 = !DILocation(line: 400, column: 1, scope: !6595)
!6601 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !594, file: !594, line: 392, type: !647, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6602)
!6602 = !{!6603}
!6603 = !DILocalVariable(name: "dev", arg: 1, scope: !6601, file: !594, line: 392, type: !623)
!6604 = !DILocation(line: 0, scope: !6601)
!6605 = !DILocation(line: 394, column: 2, scope: !6601)
!6606 = !DILocation(line: 395, column: 1, scope: !6601)
!6607 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !594, file: !594, line: 289, type: !647, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6608)
!6608 = !{!6609}
!6609 = !DILocalVariable(name: "dev", arg: 1, scope: !6607, file: !594, line: 289, type: !623)
!6610 = !DILocation(line: 0, scope: !6607)
!6611 = !DILocation(line: 291, column: 2, scope: !6607)
!6612 = !DILocation(line: 292, column: 1, scope: !6607)
!6613 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !594, file: !594, line: 387, type: !647, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6614)
!6614 = !{!6615}
!6615 = !DILocalVariable(name: "dev", arg: 1, scope: !6613, file: !594, line: 387, type: !623)
!6616 = !DILocation(line: 0, scope: !6613)
!6617 = !DILocation(line: 389, column: 2, scope: !6613)
!6618 = !DILocation(line: 390, column: 1, scope: !6613)
!6619 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !594, file: !594, line: 382, type: !647, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6620)
!6620 = !{!6621}
!6621 = !DILocalVariable(name: "dev", arg: 1, scope: !6619, file: !594, line: 382, type: !623)
!6622 = !DILocation(line: 0, scope: !6619)
!6623 = !DILocation(line: 384, column: 2, scope: !6619)
!6624 = !DILocation(line: 385, column: 1, scope: !6619)
!6625 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !594, file: !594, line: 373, type: !647, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6626)
!6626 = !{!6627}
!6627 = !DILocalVariable(name: "dev", arg: 1, scope: !6625, file: !594, line: 373, type: !623)
!6628 = !DILocation(line: 0, scope: !6625)
!6629 = !DILocation(line: 375, column: 2, scope: !6625)
!6630 = !DILocation(line: 376, column: 1, scope: !6625)
!6631 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !594, file: !594, line: 284, type: !647, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6632)
!6632 = !{!6633}
!6633 = !DILocalVariable(name: "dev", arg: 1, scope: !6631, file: !594, line: 284, type: !623)
!6634 = !DILocation(line: 0, scope: !6631)
!6635 = !DILocation(line: 286, column: 2, scope: !6631)
!6636 = !DILocation(line: 287, column: 1, scope: !6631)
!6637 = distinct !DISubprogram(name: "stm32_exti_init", scope: !594, file: !594, line: 416, type: !621, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6638)
!6638 = !{!6639}
!6639 = !DILocalVariable(name: "dev", arg: 1, scope: !6637, file: !594, line: 416, type: !623)
!6640 = !DILocation(line: 0, scope: !6637)
!6641 = !DILocation(line: 418, column: 2, scope: !6637)
!6642 = !DILocation(line: 420, column: 2, scope: !6637)
!6643 = !DILocation(line: 0, scope: !646)
!6644 = !DILocation(line: 493, column: 2, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !646, file: !594, line: 493, column: 2)
!6646 = !DILocation(line: 497, column: 2, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !646, file: !594, line: 497, column: 2)
!6648 = !DILocation(line: 507, column: 2, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !646, file: !594, line: 507, column: 2)
!6650 = !DILocation(line: 512, column: 2, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !646, file: !594, line: 512, column: 2)
!6652 = !DILocation(line: 516, column: 2, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !646, file: !594, line: 516, column: 2)
!6654 = !DILocation(line: 523, column: 2, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !646, file: !594, line: 523, column: 2)
!6656 = !DILocation(line: 527, column: 2, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !646, file: !594, line: 527, column: 2)
!6658 = !DILocation(line: 581, column: 2, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !646, file: !594, line: 581, column: 2)
!6660 = !DILocation(line: 586, column: 2, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !646, file: !594, line: 586, column: 2)
!6662 = !DILocation(line: 591, column: 2, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !646, file: !594, line: 591, column: 2)
!6664 = !DILocation(line: 595, column: 2, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !646, file: !594, line: 595, column: 2)
!6666 = !DILocation(line: 607, column: 1, scope: !646)
!6667 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !594, file: !594, line: 112, type: !6553, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6668)
!6668 = !{!6669, !6670}
!6669 = !DILocalVariable(name: "line", arg: 1, scope: !6667, file: !594, line: 112, type: !103)
!6670 = !DILocalVariable(name: "irqnum", scope: !6667, file: !594, line: 114, type: !103)
!6671 = !DILocation(line: 0, scope: !6667)
!6672 = !DILocation(line: 121, column: 11, scope: !6667)
!6673 = !DILocation(line: 130, column: 26, scope: !6667)
!6674 = !DILocation(line: 130, column: 2, scope: !6667)
!6675 = !DILocation(line: 134, column: 2, scope: !6667)
!6676 = !DILocation(line: 135, column: 1, scope: !6667)
!6677 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !6564, file: !6564, line: 268, type: !4999, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6678)
!6678 = !{!6679}
!6679 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6677, file: !6564, line: 268, type: !142)
!6680 = !DILocation(line: 0, scope: !6677)
!6681 = !DILocation(line: 270, column: 3, scope: !6677)
!6682 = !DILocation(line: 271, column: 1, scope: !6677)
!6683 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !594, file: !594, line: 137, type: !6553, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6684)
!6684 = !{!6685}
!6685 = !DILocalVariable(name: "line", arg: 1, scope: !6683, file: !594, line: 137, type: !103)
!6686 = !DILocation(line: 0, scope: !6683)
!6687 = !DILocation(line: 141, column: 11, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6683, file: !594, line: 141, column: 6)
!6689 = !DILocation(line: 141, column: 6, scope: !6683)
!6690 = !DILocation(line: 145, column: 28, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6688, file: !594, line: 141, column: 17)
!6692 = !DILocation(line: 145, column: 3, scope: !6691)
!6693 = !DILocation(line: 147, column: 2, scope: !6691)
!6694 = !DILocation(line: 151, column: 1, scope: !6683)
!6695 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !6564, file: !6564, line: 309, type: !4999, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6696)
!6696 = !{!6697}
!6697 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6695, file: !6564, line: 309, type: !142)
!6698 = !DILocation(line: 0, scope: !6695)
!6699 = !DILocation(line: 311, column: 3, scope: !6695)
!6700 = !DILocation(line: 312, column: 1, scope: !6695)
!6701 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !594, file: !594, line: 202, type: !6702, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6704)
!6702 = !DISubroutineType(types: !6703)
!6703 = !{null, !103, !103}
!6704 = !{!6705, !6706}
!6705 = !DILocalVariable(name: "line", arg: 1, scope: !6701, file: !594, line: 202, type: !103)
!6706 = !DILocalVariable(name: "trigger", arg: 2, scope: !6701, file: !594, line: 202, type: !103)
!6707 = !DILocation(line: 0, scope: !6701)
!6708 = !DILocation(line: 211, column: 2, scope: !6701)
!6709 = !DILocation(line: 213, column: 36, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6701, file: !594, line: 211, column: 19)
!6711 = !DILocation(line: 213, column: 3, scope: !6710)
!6712 = !DILocation(line: 214, column: 3, scope: !6710)
!6713 = !DILocation(line: 215, column: 3, scope: !6710)
!6714 = !DILocation(line: 217, column: 35, scope: !6710)
!6715 = !DILocation(line: 217, column: 3, scope: !6710)
!6716 = !DILocation(line: 218, column: 3, scope: !6710)
!6717 = !DILocation(line: 219, column: 3, scope: !6710)
!6718 = !DILocation(line: 221, column: 36, scope: !6710)
!6719 = !DILocation(line: 221, column: 3, scope: !6710)
!6720 = !DILocation(line: 222, column: 3, scope: !6710)
!6721 = !DILocation(line: 223, column: 3, scope: !6710)
!6722 = !DILocation(line: 225, column: 35, scope: !6710)
!6723 = !DILocation(line: 225, column: 3, scope: !6710)
!6724 = !DILocation(line: 226, column: 3, scope: !6710)
!6725 = !DILocation(line: 227, column: 3, scope: !6710)
!6726 = !DILocation(line: 232, column: 1, scope: !6701)
!6727 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !6564, file: !6564, line: 573, type: !4999, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6728)
!6728 = !{!6729}
!6729 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6727, file: !6564, line: 573, type: !142)
!6730 = !DILocation(line: 0, scope: !6727)
!6731 = !DILocation(line: 575, column: 3, scope: !6727)
!6732 = !DILocation(line: 577, column: 1, scope: !6727)
!6733 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !6564, file: !6564, line: 703, type: !4999, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6734)
!6734 = !{!6735}
!6735 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6733, file: !6564, line: 703, type: !142)
!6736 = !DILocation(line: 0, scope: !6733)
!6737 = !DILocation(line: 705, column: 3, scope: !6733)
!6738 = !DILocation(line: 706, column: 1, scope: !6733)
!6739 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !6564, file: !6564, line: 529, type: !4999, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6740)
!6740 = !{!6741}
!6741 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6739, file: !6564, line: 529, type: !142)
!6742 = !DILocation(line: 0, scope: !6739)
!6743 = !DILocation(line: 531, column: 3, scope: !6739)
!6744 = !DILocation(line: 533, column: 1, scope: !6739)
!6745 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !6564, file: !6564, line: 661, type: !4999, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6746)
!6746 = !{!6747}
!6747 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6745, file: !6564, line: 661, type: !142)
!6748 = !DILocation(line: 0, scope: !6745)
!6749 = !DILocation(line: 663, column: 3, scope: !6745)
!6750 = !DILocation(line: 664, column: 1, scope: !6745)
!6751 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !594, file: !594, line: 433, type: !6752, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6754)
!6752 = !DISubroutineType(types: !6753)
!6753 = !{!103, !103, !634, !104}
!6754 = !{!6755, !6756, !6757, !6758, !6760}
!6755 = !DILocalVariable(name: "line", arg: 1, scope: !6751, file: !594, line: 433, type: !103)
!6756 = !DILocalVariable(name: "cb", arg: 2, scope: !6751, file: !594, line: 433, type: !634)
!6757 = !DILocalVariable(name: "arg", arg: 3, scope: !6751, file: !594, line: 433, type: !104)
!6758 = !DILocalVariable(name: "dev", scope: !6751, file: !594, line: 435, type: !6759)
!6759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !623)
!6760 = !DILocalVariable(name: "data", scope: !6751, file: !594, line: 436, type: !6518)
!6761 = !DILocation(line: 0, scope: !6751)
!6762 = !DILocation(line: 438, column: 21, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6751, file: !594, line: 438, column: 6)
!6764 = !DILocation(line: 438, column: 6, scope: !6763)
!6765 = !DILocation(line: 438, column: 6, scope: !6751)
!6766 = !DILocation(line: 442, column: 20, scope: !6751)
!6767 = !DILocation(line: 443, column: 17, scope: !6751)
!6768 = !DILocation(line: 443, column: 22, scope: !6751)
!6769 = !DILocation(line: 445, column: 2, scope: !6751)
!6770 = !DILocation(line: 446, column: 1, scope: !6751)
!6771 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !594, file: !594, line: 448, type: !6553, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !6772)
!6772 = !{!6773, !6774, !6775}
!6773 = !DILocalVariable(name: "line", arg: 1, scope: !6771, file: !594, line: 448, type: !103)
!6774 = !DILocalVariable(name: "dev", scope: !6771, file: !594, line: 450, type: !6759)
!6775 = !DILocalVariable(name: "data", scope: !6771, file: !594, line: 451, type: !6518)
!6776 = !DILocation(line: 0, scope: !6771)
!6777 = !DILocation(line: 453, column: 17, scope: !6771)
!6778 = !DILocation(line: 453, column: 20, scope: !6771)
!6779 = !DILocation(line: 454, column: 17, scope: !6771)
!6780 = !DILocation(line: 454, column: 22, scope: !6771)
!6781 = !DILocation(line: 455, column: 1, scope: !6771)
!6782 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !786, file: !786, line: 183, type: !824, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !6783)
!6783 = !{!6784, !6785, !6786, !6787, !6788}
!6784 = !DILocalVariable(name: "dev", arg: 1, scope: !6782, file: !786, line: 183, type: !815)
!6785 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6782, file: !786, line: 184, type: !826)
!6786 = !DILocalVariable(name: "pclken", scope: !6782, file: !786, line: 186, type: !776)
!6787 = !DILocalVariable(name: "reg", scope: !6782, file: !786, line: 187, type: !1369)
!6788 = !DILocalVariable(name: "reg_val", scope: !6782, file: !786, line: 188, type: !142)
!6789 = !DILocation(line: 0, scope: !6782)
!6790 = !DILocation(line: 192, column: 6, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6782, file: !786, line: 192, column: 6)
!6792 = !DILocation(line: 192, column: 6, scope: !6782)
!6793 = !DILocation(line: 197, column: 52, scope: !6782)
!6794 = !DILocation(line: 197, column: 8, scope: !6782)
!6795 = !DILocation(line: 198, column: 12, scope: !6782)
!6796 = !DILocation(line: 199, column: 21, scope: !6782)
!6797 = !DILocation(line: 199, column: 10, scope: !6782)
!6798 = !DILocation(line: 200, column: 7, scope: !6782)
!6799 = !DILocation(line: 202, column: 2, scope: !6782)
!6800 = !DILocation(line: 203, column: 1, scope: !6782)
!6801 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !786, file: !786, line: 205, type: !824, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !6802)
!6802 = !{!6803, !6804, !6805, !6806, !6807}
!6803 = !DILocalVariable(name: "dev", arg: 1, scope: !6801, file: !786, line: 205, type: !815)
!6804 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6801, file: !786, line: 206, type: !826)
!6805 = !DILocalVariable(name: "pclken", scope: !6801, file: !786, line: 208, type: !776)
!6806 = !DILocalVariable(name: "reg", scope: !6801, file: !786, line: 209, type: !1369)
!6807 = !DILocalVariable(name: "reg_val", scope: !6801, file: !786, line: 210, type: !142)
!6808 = !DILocation(line: 0, scope: !6801)
!6809 = !DILocation(line: 214, column: 6, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6801, file: !786, line: 214, column: 6)
!6811 = !DILocation(line: 214, column: 6, scope: !6801)
!6812 = !DILocation(line: 219, column: 52, scope: !6801)
!6813 = !DILocation(line: 219, column: 8, scope: !6801)
!6814 = !DILocation(line: 220, column: 12, scope: !6801)
!6815 = !DILocation(line: 221, column: 22, scope: !6801)
!6816 = !DILocation(line: 221, column: 13, scope: !6801)
!6817 = !DILocation(line: 221, column: 10, scope: !6801)
!6818 = !DILocation(line: 222, column: 7, scope: !6801)
!6819 = !DILocation(line: 224, column: 2, scope: !6801)
!6820 = !DILocation(line: 225, column: 1, scope: !6801)
!6821 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !786, file: !786, line: 262, type: !840, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !6822)
!6822 = !{!6823, !6824, !6825, !6826, !6827, !6828, !6829, !6830}
!6823 = !DILocalVariable(name: "clock", arg: 1, scope: !6821, file: !786, line: 262, type: !815)
!6824 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6821, file: !786, line: 263, type: !826)
!6825 = !DILocalVariable(name: "rate", arg: 3, scope: !6821, file: !786, line: 264, type: !782)
!6826 = !DILocalVariable(name: "pclken", scope: !6821, file: !786, line: 266, type: !776)
!6827 = !DILocalVariable(name: "ahb_clock", scope: !6821, file: !786, line: 273, type: !142)
!6828 = !DILocalVariable(name: "apb1_clock", scope: !6821, file: !786, line: 274, type: !142)
!6829 = !DILocalVariable(name: "apb2_clock", scope: !6821, file: !786, line: 276, type: !142)
!6830 = !DILocalVariable(name: "ahb3_clock", scope: !6821, file: !786, line: 286, type: !142)
!6831 = !DILocation(line: 0, scope: !6821)
!6832 = !DILocation(line: 273, column: 23, scope: !6821)
!6833 = !DILocation(line: 299, column: 18, scope: !6821)
!6834 = !DILocation(line: 299, column: 2, scope: !6821)
!6835 = !DILocation(line: 274, column: 24, scope: !6821)
!6836 = !DILocation(line: 319, column: 3, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6821, file: !786, line: 299, column: 23)
!6838 = !DILocation(line: 276, column: 24, scope: !6821)
!6839 = !DILocation(line: 323, column: 3, scope: !6837)
!6840 = !DILocation(line: 346, column: 33, scope: !6837)
!6841 = !DILocation(line: 346, column: 11, scope: !6837)
!6842 = !DILocation(line: 350, column: 3, scope: !6837)
!6843 = !DILocation(line: 354, column: 33, scope: !6837)
!6844 = !DILocation(line: 354, column: 11, scope: !6837)
!6845 = !DILocation(line: 358, column: 3, scope: !6837)
!6846 = !DILocation(line: 374, column: 3, scope: !6837)
!6847 = !DILocation(line: 379, column: 3, scope: !6837)
!6848 = !DILocation(line: 0, scope: !6837)
!6849 = !DILocation(line: 396, column: 1, scope: !6821)
!6850 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !786, file: !786, line: 227, type: !856, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !6851)
!6851 = !{!6852, !6853, !6854, !6855, !6856, !6857, !6858, !6859}
!6852 = !DILocalVariable(name: "dev", arg: 1, scope: !6850, file: !786, line: 227, type: !815)
!6853 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6850, file: !786, line: 228, type: !826)
!6854 = !DILocalVariable(name: "data", arg: 3, scope: !6850, file: !786, line: 229, type: !104)
!6855 = !DILocalVariable(name: "pclken", scope: !6850, file: !786, line: 233, type: !776)
!6856 = !DILocalVariable(name: "reg", scope: !6850, file: !786, line: 234, type: !1369)
!6857 = !DILocalVariable(name: "reg_val", scope: !6850, file: !786, line: 235, type: !142)
!6858 = !DILocalVariable(name: "dt_val", scope: !6850, file: !786, line: 235, type: !142)
!6859 = !DILocalVariable(name: "err", scope: !6850, file: !786, line: 236, type: !103)
!6860 = !DILocation(line: 0, scope: !6850)
!6861 = !DILocation(line: 241, column: 30, scope: !6850)
!6862 = !DILocation(line: 241, column: 8, scope: !6850)
!6863 = !DILocation(line: 242, column: 10, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6850, file: !786, line: 242, column: 6)
!6865 = !DILocation(line: 242, column: 6, scope: !6850)
!6866 = !DILocation(line: 247, column: 11, scope: !6850)
!6867 = !DILocation(line: 248, column: 6, scope: !6850)
!6868 = !DILocation(line: 247, column: 44, scope: !6850)
!6869 = !DILocation(line: 250, column: 6, scope: !6850)
!6870 = !DILocation(line: 249, column: 52, scope: !6850)
!6871 = !DILocation(line: 249, column: 8, scope: !6850)
!6872 = !DILocation(line: 251, column: 12, scope: !6850)
!6873 = !DILocation(line: 252, column: 10, scope: !6850)
!6874 = !DILocation(line: 253, column: 7, scope: !6850)
!6875 = !DILocation(line: 255, column: 2, scope: !6850)
!6876 = !DILocation(line: 260, column: 1, scope: !6850)
!6877 = distinct !DISubprogram(name: "enabled_clock", scope: !786, file: !786, line: 100, type: !6878, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !6880)
!6878 = !DISubroutineType(types: !6879)
!6879 = !{!103, !142}
!6880 = !{!6881, !6882}
!6881 = !DILocalVariable(name: "src_clk", arg: 1, scope: !6877, file: !786, line: 100, type: !142)
!6882 = !DILocalVariable(name: "r", scope: !6877, file: !786, line: 102, type: !103)
!6883 = !DILocation(line: 0, scope: !6877)
!6884 = !DILocation(line: 104, column: 2, scope: !6877)
!6885 = !DILocation(line: 180, column: 2, scope: !6877)
!6886 = !DILocation(line: 181, column: 1, scope: !6877)
!6887 = distinct !DISubprogram(name: "get_bus_clock", scope: !786, file: !786, line: 79, type: !6888, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !6890)
!6888 = !DISubroutineType(types: !6889)
!6889 = !{!142, !142, !142}
!6890 = !{!6891, !6892}
!6891 = !DILocalVariable(name: "clock", arg: 1, scope: !6887, file: !786, line: 79, type: !142)
!6892 = !DILocalVariable(name: "prescaler", arg: 2, scope: !6887, file: !786, line: 79, type: !142)
!6893 = !DILocation(line: 0, scope: !6887)
!6894 = !DILocation(line: 81, column: 15, scope: !6887)
!6895 = !DILocation(line: 81, column: 2, scope: !6887)
!6896 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !786, file: !786, line: 68, type: !6897, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !6899)
!6897 = !DISubroutineType(types: !6898)
!6898 = !{!142, !142, !103, !103, !103}
!6899 = !{!6900, !6901, !6902, !6903}
!6900 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !6896, file: !786, line: 68, type: !142)
!6901 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !6896, file: !786, line: 69, type: !103)
!6902 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !6896, file: !786, line: 70, type: !103)
!6903 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !6896, file: !786, line: 71, type: !103)
!6904 = !DILocation(line: 0, scope: !6896)
!6905 = !DILocation(line: 75, column: 22, scope: !6896)
!6906 = !DILocation(line: 76, column: 13, scope: !6896)
!6907 = !DILocation(line: 75, column: 34, scope: !6896)
!6908 = !DILocation(line: 75, column: 2, scope: !6896)
!6909 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !786, file: !786, line: 641, type: !813, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !6910)
!6910 = !{!6911, !6912, !6913}
!6911 = !DILocalVariable(name: "dev", arg: 1, scope: !6909, file: !786, line: 641, type: !815)
!6912 = !DILocalVariable(name: "old_flash_freq", scope: !6909, file: !786, line: 664, type: !142)
!6913 = !DILocalVariable(name: "new_flash_freq", scope: !6909, file: !786, line: 665, type: !142)
!6914 = !DILocation(line: 0, scope: !6909)
!6915 = !DILocation(line: 646, column: 2, scope: !6909)
!6916 = !DILocation(line: 667, column: 19, scope: !6909)
!6917 = !DILocation(line: 674, column: 21, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6909, file: !786, line: 674, column: 6)
!6919 = !DILocation(line: 674, column: 6, scope: !6909)
!6920 = !DILocation(line: 675, column: 3, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6918, file: !786, line: 674, column: 59)
!6922 = !DILocation(line: 676, column: 2, scope: !6921)
!6923 = !DILocation(line: 680, column: 2, scope: !6909)
!6924 = !DILocation(line: 683, column: 2, scope: !6909)
!6925 = !DILocation(line: 690, column: 3, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !786, line: 689, column: 9)
!6927 = distinct !DILexicalBlock(scope: !6909, file: !786, line: 685, column: 6)
!6928 = !DILocation(line: 695, column: 2, scope: !6909)
!6929 = !DILocation(line: 696, column: 2, scope: !6909)
!6930 = !DILocation(line: 696, column: 9, scope: !6909)
!6931 = !DILocation(line: 696, column: 34, scope: !6909)
!6932 = distinct !{!6932, !6929, !6933}
!6933 = !DILocation(line: 697, column: 2, scope: !6909)
!6934 = !DILocation(line: 720, column: 21, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6909, file: !786, line: 720, column: 6)
!6936 = !DILocation(line: 720, column: 6, scope: !6909)
!6937 = !DILocation(line: 721, column: 3, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6935, file: !786, line: 720, column: 60)
!6939 = !DILocation(line: 722, column: 2, scope: !6938)
!6940 = !DILocation(line: 725, column: 18, scope: !6909)
!6941 = !DILocation(line: 728, column: 2, scope: !6909)
!6942 = !DILocation(line: 730, column: 2, scope: !6909)
!6943 = !DILocation(line: 745, column: 2, scope: !6909)
!6944 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !6945, file: !6945, line: 3275, type: !4989, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!6945 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6946 = !DILocation(line: 3277, column: 21, scope: !6944)
!6947 = !DILocation(line: 3277, column: 3, scope: !6944)
!6948 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !786, file: !786, line: 507, type: !2876, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!6949 = !DILocation(line: 516, column: 4, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !786, line: 515, column: 10)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !786, line: 513, column: 7)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !786, line: 510, column: 37)
!6953 = distinct !DILexicalBlock(scope: !6948, file: !786, line: 510, column: 6)
!6954 = !DILocation(line: 526, column: 3, scope: !6952)
!6955 = !DILocation(line: 527, column: 3, scope: !6952)
!6956 = !DILocation(line: 527, column: 10, scope: !6952)
!6957 = !DILocation(line: 527, column: 31, scope: !6952)
!6958 = distinct !{!6958, !6955, !6959}
!6959 = !DILocation(line: 529, column: 3, scope: !6952)
!6960 = !DILocation(line: 583, column: 3, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !786, line: 577, column: 37)
!6962 = distinct !DILexicalBlock(scope: !6948, file: !786, line: 577, column: 6)
!6963 = !DILocation(line: 584, column: 3, scope: !6961)
!6964 = !DILocation(line: 584, column: 10, scope: !6961)
!6965 = !DILocation(line: 584, column: 31, scope: !6961)
!6966 = distinct !{!6966, !6963, !6967}
!6967 = !DILocation(line: 585, column: 3, scope: !6961)
!6968 = !DILocation(line: 627, column: 1, scope: !6948)
!6969 = distinct !DISubprogram(name: "set_up_plls", scope: !786, file: !786, line: 448, type: !2876, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!6970 = !DILocation(line: 460, column: 6, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6969, file: !786, line: 460, column: 6)
!6972 = !DILocation(line: 460, column: 31, scope: !6971)
!6973 = !DILocation(line: 460, column: 6, scope: !6969)
!6974 = !DILocation(line: 461, column: 3, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6971, file: !786, line: 460, column: 67)
!6976 = !DILocation(line: 462, column: 3, scope: !6975)
!6977 = !DILocation(line: 463, column: 2, scope: !6975)
!6978 = !DILocation(line: 464, column: 2, scope: !6969)
!6979 = !DILocation(line: 488, column: 2, scope: !6969)
!6980 = !DILocation(line: 492, column: 2, scope: !6969)
!6981 = !DILocation(line: 496, column: 2, scope: !6969)
!6982 = !DILocation(line: 499, column: 2, scope: !6969)
!6983 = !DILocation(line: 500, column: 2, scope: !6969)
!6984 = !DILocation(line: 500, column: 9, scope: !6969)
!6985 = !DILocation(line: 500, column: 30, scope: !6969)
!6986 = distinct !{!6986, !6983, !6987}
!6987 = !DILocation(line: 502, column: 2, scope: !6969)
!6988 = !DILocation(line: 505, column: 1, scope: !6969)
!6989 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6945, file: !6945, line: 3224, type: !4999, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !6990)
!6990 = !{!6991}
!6991 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6989, file: !6945, line: 3224, type: !142)
!6992 = !DILocation(line: 0, scope: !6989)
!6993 = !DILocation(line: 3226, column: 3, scope: !6989)
!6994 = !DILocation(line: 3227, column: 1, scope: !6989)
!6995 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6945, file: !6945, line: 3188, type: !4999, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !6996)
!6996 = !{!6997}
!6997 = !DILocalVariable(name: "Source", arg: 1, scope: !6995, file: !6945, line: 3188, type: !142)
!6998 = !DILocation(line: 0, scope: !6995)
!6999 = !DILocation(line: 3190, column: 3, scope: !6995)
!7000 = !DILocation(line: 3191, column: 1, scope: !6995)
!7001 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6945, file: !6945, line: 3204, type: !4989, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7002 = !DILocation(line: 3206, column: 21, scope: !7001)
!7003 = !DILocation(line: 3206, column: 3, scope: !7001)
!7004 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6945, file: !6945, line: 3240, type: !4999, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !7005)
!7005 = !{!7006}
!7006 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7004, file: !6945, line: 3240, type: !142)
!7007 = !DILocation(line: 0, scope: !7004)
!7008 = !DILocation(line: 3242, column: 3, scope: !7004)
!7009 = !DILocation(line: 3243, column: 1, scope: !7004)
!7010 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6945, file: !6945, line: 3256, type: !4999, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !7011)
!7011 = !{!7012}
!7012 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7010, file: !6945, line: 3256, type: !142)
!7013 = !DILocation(line: 0, scope: !7010)
!7014 = !DILocation(line: 3258, column: 3, scope: !7010)
!7015 = !DILocation(line: 3259, column: 1, scope: !7010)
!7016 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !786, file: !786, line: 409, type: !2876, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7017 = !DILocation(line: 412, column: 6, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7016, file: !786, line: 412, column: 6)
!7019 = !DILocation(line: 412, column: 27, scope: !7018)
!7020 = !DILocation(line: 412, column: 6, scope: !7016)
!7021 = !DILocation(line: 414, column: 3, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7018, file: !786, line: 412, column: 33)
!7023 = !DILocation(line: 415, column: 3, scope: !7022)
!7024 = !DILocation(line: 415, column: 10, scope: !7022)
!7025 = !DILocation(line: 415, column: 31, scope: !7022)
!7026 = distinct !{!7026, !7023, !7027}
!7027 = !DILocation(line: 417, column: 3, scope: !7022)
!7028 = !DILocation(line: 421, column: 2, scope: !7016)
!7029 = !DILocation(line: 422, column: 2, scope: !7016)
!7030 = !DILocation(line: 422, column: 9, scope: !7016)
!7031 = !DILocation(line: 422, column: 34, scope: !7016)
!7032 = distinct !{!7032, !7029, !7033}
!7033 = !DILocation(line: 423, column: 2, scope: !7016)
!7034 = !DILocation(line: 424, column: 1, scope: !7016)
!7035 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !6945, file: !6945, line: 4195, type: !2876, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7036 = !DILocation(line: 4197, column: 3, scope: !7035)
!7037 = !DILocation(line: 4198, column: 1, scope: !7035)
!7038 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6945, file: !6945, line: 4184, type: !2876, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7039 = !DILocation(line: 4186, column: 3, scope: !7038)
!7040 = !DILocation(line: 4187, column: 1, scope: !7038)
!7041 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6945, file: !6945, line: 4205, type: !4989, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7042 = !DILocation(line: 4207, column: 11, scope: !7041)
!7043 = !DILocation(line: 4207, column: 44, scope: !7041)
!7044 = !DILocation(line: 4207, column: 3, scope: !7041)
!7045 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6945, file: !6945, line: 3007, type: !4989, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7046 = !DILocation(line: 3009, column: 11, scope: !7045)
!7047 = !DILocation(line: 3009, column: 44, scope: !7045)
!7048 = !DILocation(line: 3009, column: 3, scope: !7045)
!7049 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6945, file: !6945, line: 2987, type: !2876, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7050 = !DILocation(line: 2989, column: 3, scope: !7049)
!7051 = !DILocation(line: 2990, column: 1, scope: !7049)
!7052 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6945, file: !6945, line: 2939, type: !2876, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7053 = !DILocation(line: 2941, column: 3, scope: !7052)
!7054 = !DILocation(line: 2942, column: 1, scope: !7052)
!7055 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6945, file: !6945, line: 2949, type: !2876, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7056 = !DILocation(line: 2951, column: 3, scope: !7055)
!7057 = !DILocation(line: 2952, column: 1, scope: !7055)
!7058 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6945, file: !6945, line: 2969, type: !4989, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7059 = !DILocation(line: 2971, column: 11, scope: !7058)
!7060 = !DILocation(line: 2971, column: 44, scope: !7058)
!7061 = !DILocation(line: 2971, column: 3, scope: !7058)
!7062 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !6945, file: !6945, line: 3143, type: !2876, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7063 = !DILocation(line: 3145, column: 3, scope: !7062)
!7064 = !DILocation(line: 3146, column: 1, scope: !7062)
!7065 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !6945, file: !6945, line: 3163, type: !4989, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !721, retainedNodes: !381)
!7066 = !DILocation(line: 3165, column: 11, scope: !7065)
!7067 = !DILocation(line: 3165, column: 46, scope: !7065)
!7068 = !DILocation(line: 3165, column: 3, scope: !7065)
!7069 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !7070, file: !7070, line: 40, type: !4989, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !381)
!7070 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7071 = !DILocation(line: 45, column: 3, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !7070, line: 44, column: 44)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !7070, line: 44, column: 13)
!7074 = distinct !DILexicalBlock(scope: !7069, file: !7070, line: 42, column: 6)
!7075 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !7070, file: !7070, line: 56, type: !2876, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !381)
!7076 = !DILocation(line: 58, column: 2, scope: !7075)
!7077 = !DILocation(line: 62, column: 1, scope: !7075)
!7078 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6945, file: !6945, line: 4304, type: !7079, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !7081)
!7079 = !DISubroutineType(types: !7080)
!7080 = !{null, !142, !142, !142, !142}
!7081 = !{!7082, !7083, !7084, !7085}
!7082 = !DILocalVariable(name: "Source", arg: 1, scope: !7078, file: !6945, line: 4304, type: !142)
!7083 = !DILocalVariable(name: "PLLM", arg: 2, scope: !7078, file: !6945, line: 4304, type: !142)
!7084 = !DILocalVariable(name: "PLLN", arg: 3, scope: !7078, file: !6945, line: 4304, type: !142)
!7085 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !7078, file: !6945, line: 4304, type: !142)
!7086 = !DILocation(line: 0, scope: !7078)
!7087 = !DILocation(line: 4306, column: 3, scope: !7078)
!7088 = !DILocation(line: 4308, column: 3, scope: !7078)
!7089 = !DILocation(line: 4310, column: 3, scope: !7078)
!7090 = !DILocation(line: 4312, column: 1, scope: !7078)
!7091 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !7070, file: !7070, line: 69, type: !2876, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !381)
!7092 = !DILocation(line: 72, column: 2, scope: !7091)
!7093 = !DILocation(line: 73, column: 1, scope: !7091)
!7094 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7095, file: !7095, line: 1185, type: !4999, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !7096)
!7095 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7096 = !{!7097, !7098}
!7097 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7094, file: !7095, line: 1185, type: !142)
!7098 = !DILocalVariable(name: "tmpreg", scope: !7094, file: !7095, line: 1187, type: !192)
!7099 = !DILocation(line: 0, scope: !7094)
!7100 = !DILocation(line: 1187, column: 3, scope: !7094)
!7101 = !DILocation(line: 1187, column: 17, scope: !7094)
!7102 = !DILocation(line: 1188, column: 3, scope: !7094)
!7103 = !DILocation(line: 1190, column: 12, scope: !7094)
!7104 = !DILocation(line: 1190, column: 10, scope: !7094)
!7105 = !DILocation(line: 1191, column: 9, scope: !7094)
!7106 = !DILocation(line: 1192, column: 1, scope: !7094)
!7107 = distinct !DISubprogram(name: "uart_console_init", scope: !917, file: !917, line: 588, type: !894, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !7108)
!7108 = !{!7109}
!7109 = !DILocalVariable(name: "arg", arg: 1, scope: !7107, file: !917, line: 588, type: !872)
!7110 = !DILocation(line: 0, scope: !7107)
!7111 = !DILocation(line: 593, column: 7, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7107, file: !917, line: 593, column: 6)
!7113 = !DILocation(line: 593, column: 6, scope: !7107)
!7114 = !DILocation(line: 597, column: 2, scope: !7107)
!7115 = !DILocation(line: 599, column: 2, scope: !7107)
!7116 = !DILocation(line: 600, column: 1, scope: !7107)
!7117 = distinct !DISubprogram(name: "device_is_ready", scope: !7118, file: !7118, line: 47, type: !7119, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !7121)
!7118 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!7119 = !DISubroutineType(types: !7120)
!7120 = !{!134, !872}
!7121 = !{!7122}
!7122 = !DILocalVariable(name: "dev", arg: 1, scope: !7117, file: !7118, line: 47, type: !872)
!7123 = !DILocation(line: 0, scope: !7117)
!7124 = !DILocation(line: 55, column: 2, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7117, file: !7118, line: 55, column: 2)
!7126 = !{i64 2155286359}
!7127 = !DILocation(line: 56, column: 9, scope: !7117)
!7128 = !DILocation(line: 56, column: 2, scope: !7117)
!7129 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !917, file: !917, line: 573, type: !2876, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !381)
!7130 = !DILocation(line: 576, column: 2, scope: !7129)
!7131 = !DILocation(line: 579, column: 2, scope: !7129)
!7132 = !DILocation(line: 581, column: 1, scope: !7129)
!7133 = distinct !DISubprogram(name: "console_out", scope: !917, file: !917, line: 77, type: !179, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !7134)
!7134 = !{!7135}
!7135 = !DILocalVariable(name: "c", arg: 1, scope: !7133, file: !917, line: 77, type: !103)
!7136 = !DILocation(line: 0, scope: !7133)
!7137 = !DILocation(line: 89, column: 11, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7133, file: !917, line: 89, column: 6)
!7139 = !DILocation(line: 89, column: 6, scope: !7133)
!7140 = !DILocation(line: 90, column: 3, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7138, file: !917, line: 89, column: 17)
!7142 = !DILocation(line: 91, column: 2, scope: !7141)
!7143 = !DILocation(line: 92, column: 34, scope: !7133)
!7144 = !DILocation(line: 92, column: 2, scope: !7133)
!7145 = !DILocation(line: 94, column: 2, scope: !7133)
!7146 = distinct !DISubprogram(name: "uart_poll_out", scope: !7147, file: !7147, line: 95, type: !890, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !7148)
!7147 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/ipm_mcux")
!7148 = !{!7149, !7150}
!7149 = !DILocalVariable(name: "dev", arg: 1, scope: !7146, file: !7147, line: 95, type: !872)
!7150 = !DILocalVariable(name: "out_char", arg: 2, scope: !7146, file: !7147, line: 95, type: !132)
!7151 = !DILocation(line: 0, scope: !7146)
!7152 = !DILocation(line: 105, column: 2, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7146, file: !7147, line: 105, column: 2)
!7154 = !{i64 2155369750}
!7155 = !DILocation(line: 106, column: 2, scope: !7146)
!7156 = !DILocation(line: 107, column: 1, scope: !7146)
!7157 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !866, file: !866, line: 574, type: !890, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !7158)
!7158 = !{!7159, !7160, !7161}
!7159 = !DILocalVariable(name: "dev", arg: 1, scope: !7157, file: !866, line: 574, type: !872)
!7160 = !DILocalVariable(name: "out_char", arg: 2, scope: !7157, file: !866, line: 575, type: !132)
!7161 = !DILocalVariable(name: "api", scope: !7157, file: !866, line: 577, type: !863)
!7162 = !DILocation(line: 0, scope: !7157)
!7163 = !DILocation(line: 578, column: 40, scope: !7157)
!7164 = !DILocation(line: 580, column: 7, scope: !7157)
!7165 = !DILocation(line: 580, column: 2, scope: !7157)
!7166 = !DILocation(line: 581, column: 1, scope: !7157)
!7167 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !118, file: !118, line: 730, type: !7119, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !7168)
!7168 = !{!7169}
!7169 = !DILocalVariable(name: "dev", arg: 1, scope: !7167, file: !118, line: 730, type: !872)
!7170 = !DILocation(line: 0, scope: !7167)
!7171 = !DILocation(line: 732, column: 9, scope: !7167)
!7172 = !DILocation(line: 732, column: 2, scope: !7167)
!7173 = distinct !DISubprogram(name: "uart_register_input", scope: !917, file: !917, line: 560, type: !7174, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !7219)
!7174 = !DISubroutineType(types: !7175)
!7175 = !{null, !7176, !7176, !7216}
!7176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7177, size: 32)
!7177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !366, line: 2208, size: 128, elements: !7178)
!7178 = !{!7179}
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7177, file: !366, line: 2209, baseType: !7180, size: 128)
!7180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !366, line: 1709, size: 128, elements: !7181)
!7181 = !{!7182, !7195, !7197}
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7180, file: !366, line: 1710, baseType: !7183, size: 64)
!7183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7184, line: 46, baseType: !7185)
!7184 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7184, line: 41, size: 64, elements: !7186)
!7186 = !{!7187, !7194}
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7185, file: !7184, line: 42, baseType: !7188, size: 32)
!7188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7189, size: 32)
!7189 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7184, line: 39, baseType: !7190)
!7190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7184, line: 35, size: 32, elements: !7191)
!7191 = !{!7192}
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7190, file: !7184, line: 36, baseType: !7193, size: 32)
!7193 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7184, line: 32, baseType: !142)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7185, file: !7184, line: 43, baseType: !7188, size: 32, offset: 32)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7180, file: !366, line: 1711, baseType: !7196, offset: 64)
!7196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !380, line: 43, elements: !381)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7180, file: !366, line: 1712, baseType: !7198, size: 64, offset: 64)
!7198 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !306, line: 233, baseType: !7199)
!7199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !306, line: 231, size: 64, elements: !7200)
!7200 = !{!7201}
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7199, file: !306, line: 232, baseType: !7202, size: 64)
!7202 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !280, line: 48, baseType: !7203)
!7203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !280, line: 37, size: 64, elements: !7204)
!7204 = !{!7205, !7211}
!7205 = !DIDerivedType(tag: DW_TAG_member, scope: !7203, file: !280, line: 38, baseType: !7206, size: 32)
!7206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7203, file: !280, line: 38, size: 32, elements: !7207)
!7207 = !{!7208, !7210}
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7206, file: !280, line: 39, baseType: !7209, size: 32)
!7209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7203, size: 32)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7206, file: !280, line: 40, baseType: !7209, size: 32)
!7211 = !DIDerivedType(tag: DW_TAG_member, scope: !7203, file: !280, line: 42, baseType: !7212, size: 32, offset: 32)
!7212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7203, file: !280, line: 42, size: 32, elements: !7213)
!7213 = !{!7214, !7215}
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7212, file: !280, line: 43, baseType: !7209, size: 32)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7212, file: !280, line: 44, baseType: !7209, size: 32)
!7216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7217, size: 32)
!7217 = !DISubroutineType(types: !7218)
!7218 = !{!131, !1054, !131}
!7219 = !{!7220, !7221, !7222}
!7220 = !DILocalVariable(name: "avail", arg: 1, scope: !7173, file: !917, line: 560, type: !7176)
!7221 = !DILocalVariable(name: "lines", arg: 2, scope: !7173, file: !917, line: 560, type: !7176)
!7222 = !DILocalVariable(name: "completion", arg: 3, scope: !7173, file: !917, line: 561, type: !7216)
!7223 = !DILocation(line: 0, scope: !7173)
!7224 = !DILocation(line: 566, column: 1, scope: !7173)
!7225 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1098, file: !1098, line: 523, type: !953, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7226)
!7226 = !{!7227, !7228, !7229, !7230, !7231}
!7227 = !DILocalVariable(name: "dev", arg: 1, scope: !7225, file: !1098, line: 523, type: !955)
!7228 = !DILocalVariable(name: "pin", arg: 2, scope: !7225, file: !1098, line: 524, type: !970)
!7229 = !DILocalVariable(name: "flags", arg: 3, scope: !7225, file: !1098, line: 524, type: !971)
!7230 = !DILocalVariable(name: "err", scope: !7225, file: !1098, line: 526, type: !103)
!7231 = !DILocalVariable(name: "pincfg", scope: !7225, file: !1098, line: 527, type: !103)
!7232 = !DILocation(line: 0, scope: !7225)
!7233 = !DILocation(line: 527, column: 2, scope: !7225)
!7234 = !DILocation(line: 532, column: 8, scope: !7225)
!7235 = !DILocation(line: 533, column: 10, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7225, file: !1098, line: 533, column: 6)
!7237 = !DILocation(line: 533, column: 6, scope: !7225)
!7238 = !DILocation(line: 543, column: 13, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7225, file: !1098, line: 543, column: 6)
!7240 = !DILocation(line: 543, column: 28, scope: !7239)
!7241 = !DILocation(line: 543, column: 6, scope: !7225)
!7242 = !DILocation(line: 544, column: 14, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7244, file: !1098, line: 544, column: 7)
!7244 = distinct !DILexicalBlock(scope: !7239, file: !1098, line: 543, column: 34)
!7245 = !DILocation(line: 544, column: 39, scope: !7243)
!7246 = !DILocation(line: 544, column: 7, scope: !7244)
!7247 = !DILocation(line: 545, column: 38, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7243, file: !1098, line: 544, column: 45)
!7249 = !DILocation(line: 545, column: 4, scope: !7248)
!7250 = !DILocation(line: 546, column: 3, scope: !7248)
!7251 = !DILocation(line: 546, column: 21, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7243, file: !1098, line: 546, column: 14)
!7253 = !DILocation(line: 546, column: 45, scope: !7252)
!7254 = !DILocation(line: 546, column: 14, scope: !7243)
!7255 = !DILocation(line: 547, column: 40, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7252, file: !1098, line: 546, column: 51)
!7257 = !DILocation(line: 547, column: 4, scope: !7256)
!7258 = !DILocation(line: 548, column: 3, scope: !7256)
!7259 = !DILocation(line: 551, column: 32, scope: !7225)
!7260 = !DILocation(line: 551, column: 37, scope: !7225)
!7261 = !DILocation(line: 551, column: 2, scope: !7225)
!7262 = !DILocation(line: 554, column: 6, scope: !7225)
!7263 = !DILocation(line: 562, column: 1, scope: !7225)
!7264 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1098, file: !1098, line: 410, type: !7265, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7267)
!7265 = !DISubroutineType(types: !7266)
!7266 = !{!103, !955, !782}
!7267 = !{!7268, !7269, !7270, !7272}
!7268 = !DILocalVariable(name: "dev", arg: 1, scope: !7264, file: !1098, line: 410, type: !955)
!7269 = !DILocalVariable(name: "value", arg: 2, scope: !7264, file: !1098, line: 410, type: !782)
!7270 = !DILocalVariable(name: "cfg", scope: !7264, file: !1098, line: 412, type: !7271)
!7271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!7272 = !DILocalVariable(name: "gpio", scope: !7264, file: !1098, line: 413, type: !1028)
!7273 = !DILocation(line: 0, scope: !7264)
!7274 = !DILocation(line: 412, column: 45, scope: !7264)
!7275 = !DILocation(line: 413, column: 44, scope: !7264)
!7276 = !DILocation(line: 415, column: 11, scope: !7264)
!7277 = !DILocation(line: 415, column: 9, scope: !7264)
!7278 = !DILocation(line: 417, column: 2, scope: !7264)
!7279 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1098, file: !1098, line: 420, type: !980, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7280)
!7280 = !{!7281, !7282, !7283, !7284, !7285, !7286}
!7281 = !DILocalVariable(name: "dev", arg: 1, scope: !7279, file: !1098, line: 420, type: !955)
!7282 = !DILocalVariable(name: "mask", arg: 2, scope: !7279, file: !1098, line: 421, type: !982)
!7283 = !DILocalVariable(name: "value", arg: 3, scope: !7279, file: !1098, line: 422, type: !977)
!7284 = !DILocalVariable(name: "cfg", scope: !7279, file: !1098, line: 424, type: !7271)
!7285 = !DILocalVariable(name: "gpio", scope: !7279, file: !1098, line: 425, type: !1028)
!7286 = !DILocalVariable(name: "port_value", scope: !7279, file: !1098, line: 426, type: !142)
!7287 = !DILocation(line: 0, scope: !7279)
!7288 = !DILocation(line: 424, column: 45, scope: !7279)
!7289 = !DILocation(line: 425, column: 44, scope: !7279)
!7290 = !DILocation(line: 430, column: 15, scope: !7279)
!7291 = !DILocation(line: 431, column: 46, scope: !7279)
!7292 = !DILocation(line: 431, column: 44, scope: !7279)
!7293 = !DILocation(line: 431, column: 61, scope: !7279)
!7294 = !DILocation(line: 431, column: 53, scope: !7279)
!7295 = !DILocation(line: 431, column: 2, scope: !7279)
!7296 = !DILocation(line: 435, column: 2, scope: !7279)
!7297 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1098, file: !1098, line: 438, type: !985, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7298)
!7298 = !{!7299, !7300, !7301, !7302}
!7299 = !DILocalVariable(name: "dev", arg: 1, scope: !7297, file: !1098, line: 438, type: !955)
!7300 = !DILocalVariable(name: "pins", arg: 2, scope: !7297, file: !1098, line: 439, type: !982)
!7301 = !DILocalVariable(name: "cfg", scope: !7297, file: !1098, line: 441, type: !7271)
!7302 = !DILocalVariable(name: "gpio", scope: !7297, file: !1098, line: 442, type: !1028)
!7303 = !DILocation(line: 0, scope: !7297)
!7304 = !DILocation(line: 441, column: 45, scope: !7297)
!7305 = !DILocation(line: 442, column: 44, scope: !7297)
!7306 = !DILocation(line: 448, column: 2, scope: !7297)
!7307 = !DILocation(line: 450, column: 2, scope: !7297)
!7308 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1098, file: !1098, line: 453, type: !985, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7309)
!7309 = !{!7310, !7311, !7312, !7313}
!7310 = !DILocalVariable(name: "dev", arg: 1, scope: !7308, file: !1098, line: 453, type: !955)
!7311 = !DILocalVariable(name: "pins", arg: 2, scope: !7308, file: !1098, line: 454, type: !982)
!7312 = !DILocalVariable(name: "cfg", scope: !7308, file: !1098, line: 456, type: !7271)
!7313 = !DILocalVariable(name: "gpio", scope: !7308, file: !1098, line: 457, type: !1028)
!7314 = !DILocation(line: 0, scope: !7308)
!7315 = !DILocation(line: 456, column: 45, scope: !7308)
!7316 = !DILocation(line: 457, column: 44, scope: !7308)
!7317 = !DILocation(line: 467, column: 2, scope: !7308)
!7318 = !DILocation(line: 470, column: 2, scope: !7308)
!7319 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1098, file: !1098, line: 473, type: !985, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7320)
!7320 = !{!7321, !7322, !7323, !7324}
!7321 = !DILocalVariable(name: "dev", arg: 1, scope: !7319, file: !1098, line: 473, type: !955)
!7322 = !DILocalVariable(name: "pins", arg: 2, scope: !7319, file: !1098, line: 474, type: !982)
!7323 = !DILocalVariable(name: "cfg", scope: !7319, file: !1098, line: 476, type: !7271)
!7324 = !DILocalVariable(name: "gpio", scope: !7319, file: !1098, line: 477, type: !1028)
!7325 = !DILocation(line: 0, scope: !7319)
!7326 = !DILocation(line: 476, column: 45, scope: !7319)
!7327 = !DILocation(line: 477, column: 44, scope: !7319)
!7328 = !DILocation(line: 484, column: 2, scope: !7319)
!7329 = !DILocation(line: 487, column: 2, scope: !7319)
!7330 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1098, file: !1098, line: 594, type: !991, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7331)
!7331 = !{!7332, !7333, !7334, !7335, !7336, !7337, !7339, !7340, !7341}
!7332 = !DILocalVariable(name: "dev", arg: 1, scope: !7330, file: !1098, line: 594, type: !955)
!7333 = !DILocalVariable(name: "pin", arg: 2, scope: !7330, file: !1098, line: 595, type: !970)
!7334 = !DILocalVariable(name: "mode", arg: 3, scope: !7330, file: !1098, line: 596, type: !929)
!7335 = !DILocalVariable(name: "trig", arg: 4, scope: !7330, file: !1098, line: 597, type: !935)
!7336 = !DILocalVariable(name: "cfg", scope: !7330, file: !1098, line: 599, type: !7271)
!7337 = !DILocalVariable(name: "data", scope: !7330, file: !1098, line: 600, type: !7338)
!7338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!7339 = !DILocalVariable(name: "edge", scope: !7330, file: !1098, line: 601, type: !103)
!7340 = !DILocalVariable(name: "err", scope: !7330, file: !1098, line: 602, type: !103)
!7341 = !DILabel(scope: !7330, name: "exit", file: !1098, line: 643)
!7342 = !DILocation(line: 0, scope: !7330)
!7343 = !DILocation(line: 599, column: 45, scope: !7330)
!7344 = !DILocation(line: 604, column: 6, scope: !7330)
!7345 = !DILocation(line: 605, column: 34, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !1098, line: 605, column: 7)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !1098, line: 604, column: 38)
!7348 = distinct !DILexicalBlock(scope: !7330, file: !1098, line: 604, column: 6)
!7349 = !DILocation(line: 605, column: 7, scope: !7346)
!7350 = !DILocation(line: 605, column: 47, scope: !7346)
!7351 = !DILocation(line: 605, column: 39, scope: !7346)
!7352 = !DILocation(line: 605, column: 7, scope: !7347)
!7353 = !DILocation(line: 606, column: 4, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7346, file: !1098, line: 605, column: 53)
!7355 = !DILocation(line: 607, column: 4, scope: !7354)
!7356 = !DILocation(line: 608, column: 4, scope: !7354)
!7357 = !DILocation(line: 609, column: 3, scope: !7354)
!7358 = !DILocation(line: 600, column: 38, scope: !7330)
!7359 = !DILocation(line: 620, column: 30, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7330, file: !1098, line: 620, column: 6)
!7361 = !DILocation(line: 620, column: 6, scope: !7360)
!7362 = !DILocation(line: 620, column: 57, scope: !7360)
!7363 = !DILocation(line: 620, column: 6, scope: !7330)
!7364 = !DILocation(line: 625, column: 29, scope: !7330)
!7365 = !DILocation(line: 625, column: 2, scope: !7330)
!7366 = !DILocation(line: 627, column: 2, scope: !7330)
!7367 = !DILocation(line: 630, column: 3, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7330, file: !1098, line: 627, column: 16)
!7369 = !DILocation(line: 633, column: 3, scope: !7368)
!7370 = !DILocation(line: 636, column: 3, scope: !7368)
!7371 = !DILocation(line: 639, column: 2, scope: !7330)
!7372 = !DILocation(line: 641, column: 2, scope: !7330)
!7373 = !DILocation(line: 643, column: 1, scope: !7330)
!7374 = !DILocation(line: 644, column: 2, scope: !7330)
!7375 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1098, file: !1098, line: 647, type: !995, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7376)
!7376 = !{!7377, !7378, !7379, !7380}
!7377 = !DILocalVariable(name: "dev", arg: 1, scope: !7375, file: !1098, line: 647, type: !955)
!7378 = !DILocalVariable(name: "callback", arg: 2, scope: !7375, file: !1098, line: 648, type: !997)
!7379 = !DILocalVariable(name: "set", arg: 3, scope: !7375, file: !1098, line: 649, type: !134)
!7380 = !DILocalVariable(name: "data", scope: !7375, file: !1098, line: 651, type: !7338)
!7381 = !DILocation(line: 0, scope: !7375)
!7382 = !DILocation(line: 651, column: 38, scope: !7375)
!7383 = !DILocation(line: 653, column: 37, scope: !7375)
!7384 = !DILocation(line: 653, column: 9, scope: !7375)
!7385 = !DILocation(line: 653, column: 2, scope: !7375)
!7386 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7387, file: !7387, line: 38, type: !7388, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7391)
!7387 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7388 = !DISubroutineType(types: !7389)
!7389 = !{!103, !7390, !997, !134}
!7390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!7391 = !{!7392, !7393, !7394}
!7392 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7386, file: !7387, line: 38, type: !7390)
!7393 = !DILocalVariable(name: "callback", arg: 2, scope: !7386, file: !7387, line: 39, type: !997)
!7394 = !DILocalVariable(name: "set", arg: 3, scope: !7386, file: !7387, line: 40, type: !134)
!7395 = !DILocation(line: 0, scope: !7386)
!7396 = !DILocation(line: 45, column: 7, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7386, file: !7387, line: 45, column: 6)
!7398 = !DILocation(line: 45, column: 6, scope: !7386)
!7399 = !DILocation(line: 46, column: 56, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !7387, line: 46, column: 7)
!7401 = distinct !DILexicalBlock(scope: !7397, file: !7387, line: 45, column: 38)
!7402 = !DILocation(line: 46, column: 8, scope: !7400)
!7403 = !DILocation(line: 46, column: 7, scope: !7401)
!7404 = !DILocation(line: 51, column: 13, scope: !7397)
!7405 = !DILocation(line: 56, column: 43, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7407, file: !7387, line: 55, column: 11)
!7407 = distinct !DILexicalBlock(scope: !7386, file: !7387, line: 55, column: 6)
!7408 = !DILocation(line: 56, column: 3, scope: !7406)
!7409 = !DILocation(line: 57, column: 2, scope: !7406)
!7410 = !DILocation(line: 60, column: 1, scope: !7386)
!7411 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1002, file: !1002, line: 261, type: !7412, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7414)
!7412 = !DISubroutineType(types: !7413)
!7413 = !{!134, !7390}
!7414 = !{!7415}
!7415 = !DILocalVariable(name: "list", arg: 1, scope: !7411, file: !1002, line: 261, type: !7390)
!7416 = !DILocation(line: 0, scope: !7411)
!7417 = !DILocation(line: 261, column: 1, scope: !7411)
!7418 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1002, file: !1002, line: 417, type: !7419, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7421)
!7419 = !DISubroutineType(types: !7420)
!7420 = !{!134, !7390, !1171}
!7421 = !{!7422, !7423, !7424, !7425}
!7422 = !DILocalVariable(name: "list", arg: 1, scope: !7418, file: !1002, line: 417, type: !7390)
!7423 = !DILocalVariable(name: "node", arg: 2, scope: !7418, file: !1002, line: 417, type: !1171)
!7424 = !DILocalVariable(name: "prev", scope: !7418, file: !1002, line: 417, type: !1171)
!7425 = !DILocalVariable(name: "test", scope: !7418, file: !1002, line: 417, type: !1171)
!7426 = !DILocation(line: 0, scope: !7418)
!7427 = !DILocation(line: 417, column: 1, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7418, file: !1002, line: 417, column: 1)
!7429 = !DILocation(line: 417, column: 1, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7428, file: !1002, line: 417, column: 1)
!7431 = !DILocation(line: 417, column: 1, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7433, file: !1002, line: 417, column: 1)
!7433 = distinct !DILexicalBlock(scope: !7430, file: !1002, line: 417, column: 1)
!7434 = !DILocation(line: 417, column: 1, scope: !7433)
!7435 = distinct !{!7435, !7427, !7427}
!7436 = !DILocation(line: 417, column: 1, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7432, file: !1002, line: 417, column: 1)
!7438 = !DILocation(line: 417, column: 1, scope: !7418)
!7439 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1002, file: !1002, line: 298, type: !7440, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7442)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{null, !7390, !1171}
!7442 = !{!7443, !7444}
!7443 = !DILocalVariable(name: "list", arg: 1, scope: !7439, file: !1002, line: 298, type: !7390)
!7444 = !DILocalVariable(name: "node", arg: 2, scope: !7439, file: !1002, line: 298, type: !1171)
!7445 = !DILocation(line: 0, scope: !7439)
!7446 = !DILocation(line: 298, column: 1, scope: !7439)
!7447 = !DILocation(line: 298, column: 1, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7439, file: !1002, line: 298, column: 1)
!7449 = !DILocation(line: 298, column: 1, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7448, file: !1002, line: 298, column: 1)
!7451 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1002, file: !1002, line: 231, type: !7452, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7454)
!7452 = !DISubroutineType(types: !7453)
!7453 = !{!1171, !7390}
!7454 = !{!7455}
!7455 = !DILocalVariable(name: "list", arg: 1, scope: !7451, file: !1002, line: 231, type: !7390)
!7456 = !DILocation(line: 0, scope: !7451)
!7457 = !DILocation(line: 233, column: 15, scope: !7451)
!7458 = !DILocation(line: 233, column: 2, scope: !7451)
!7459 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1002, file: !1002, line: 209, type: !7460, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7462)
!7460 = !DISubroutineType(types: !7461)
!7461 = !{null, !1171, !1171}
!7462 = !{!7463, !7464}
!7463 = !DILocalVariable(name: "parent", arg: 1, scope: !7459, file: !1002, line: 209, type: !1171)
!7464 = !DILocalVariable(name: "child", arg: 2, scope: !7459, file: !1002, line: 209, type: !1171)
!7465 = !DILocation(line: 0, scope: !7459)
!7466 = !DILocation(line: 211, column: 10, scope: !7459)
!7467 = !DILocation(line: 211, column: 15, scope: !7459)
!7468 = !DILocation(line: 212, column: 1, scope: !7459)
!7469 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1002, file: !1002, line: 214, type: !7440, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7470)
!7470 = !{!7471, !7472}
!7471 = !DILocalVariable(name: "list", arg: 1, scope: !7469, file: !1002, line: 214, type: !7390)
!7472 = !DILocalVariable(name: "node", arg: 2, scope: !7469, file: !1002, line: 214, type: !1171)
!7473 = !DILocation(line: 0, scope: !7469)
!7474 = !DILocation(line: 216, column: 8, scope: !7469)
!7475 = !DILocation(line: 216, column: 13, scope: !7469)
!7476 = !DILocation(line: 217, column: 1, scope: !7469)
!7477 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1002, file: !1002, line: 243, type: !7452, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7478)
!7478 = !{!7479}
!7479 = !DILocalVariable(name: "list", arg: 1, scope: !7477, file: !1002, line: 243, type: !7390)
!7480 = !DILocation(line: 0, scope: !7477)
!7481 = !DILocation(line: 245, column: 15, scope: !7477)
!7482 = !DILocation(line: 245, column: 2, scope: !7477)
!7483 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1002, file: !1002, line: 219, type: !7440, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7484)
!7484 = !{!7485, !7486}
!7485 = !DILocalVariable(name: "list", arg: 1, scope: !7483, file: !1002, line: 219, type: !7390)
!7486 = !DILocalVariable(name: "node", arg: 2, scope: !7483, file: !1002, line: 219, type: !1171)
!7487 = !DILocation(line: 0, scope: !7483)
!7488 = !DILocation(line: 221, column: 8, scope: !7483)
!7489 = !DILocation(line: 221, column: 13, scope: !7483)
!7490 = !DILocation(line: 222, column: 1, scope: !7483)
!7491 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1002, file: !1002, line: 401, type: !7492, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7494)
!7492 = !DISubroutineType(types: !7493)
!7493 = !{null, !7390, !1171, !1171}
!7494 = !{!7495, !7496, !7497}
!7495 = !DILocalVariable(name: "list", arg: 1, scope: !7491, file: !1002, line: 401, type: !7390)
!7496 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7491, file: !1002, line: 401, type: !1171)
!7497 = !DILocalVariable(name: "node", arg: 3, scope: !7491, file: !1002, line: 401, type: !1171)
!7498 = !DILocation(line: 0, scope: !7491)
!7499 = !DILocation(line: 401, column: 1, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7491, file: !1002, line: 401, column: 1)
!7501 = !DILocation(line: 0, scope: !7500)
!7502 = !DILocation(line: 401, column: 1, scope: !7491)
!7503 = !DILocation(line: 401, column: 1, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7500, file: !1002, line: 401, column: 1)
!7505 = !DILocation(line: 401, column: 1, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7504, file: !1002, line: 401, column: 1)
!7507 = !DILocation(line: 401, column: 1, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7506, file: !1002, line: 401, column: 1)
!7509 = !DILocation(line: 401, column: 1, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7500, file: !1002, line: 401, column: 1)
!7511 = !DILocation(line: 401, column: 1, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7510, file: !1002, line: 401, column: 1)
!7513 = !DILocation(line: 401, column: 1, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7512, file: !1002, line: 401, column: 1)
!7515 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1002, file: !1002, line: 285, type: !7516, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7518)
!7516 = !DISubroutineType(types: !7517)
!7517 = !{!1171, !1171}
!7518 = !{!7519}
!7519 = !DILocalVariable(name: "node", arg: 1, scope: !7515, file: !1002, line: 285, type: !1171)
!7520 = !DILocation(line: 0, scope: !7515)
!7521 = !DILocation(line: 285, column: 1, scope: !7515)
!7522 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1002, file: !1002, line: 274, type: !7516, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7523)
!7523 = !{!7524}
!7524 = !DILocalVariable(name: "node", arg: 1, scope: !7522, file: !1002, line: 274, type: !1171)
!7525 = !DILocation(line: 0, scope: !7522)
!7526 = !DILocation(line: 274, column: 1, scope: !7522)
!7527 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1002, file: !1002, line: 204, type: !7516, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7528)
!7528 = !{!7529}
!7529 = !DILocalVariable(name: "node", arg: 1, scope: !7527, file: !1002, line: 204, type: !1171)
!7530 = !DILocation(line: 0, scope: !7527)
!7531 = !DILocation(line: 206, column: 15, scope: !7527)
!7532 = !DILocation(line: 206, column: 2, scope: !7527)
!7533 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1098, file: !1098, line: 342, type: !179, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7534)
!7534 = !{!7535, !7536, !7537}
!7535 = !DILocalVariable(name: "pin", arg: 1, scope: !7533, file: !1098, line: 342, type: !103)
!7536 = !DILocalVariable(name: "line", scope: !7533, file: !1098, line: 344, type: !142)
!7537 = !DILocalVariable(name: "port", scope: !7533, file: !1098, line: 345, type: !103)
!7538 = !DILocation(line: 0, scope: !7533)
!7539 = !DILocation(line: 344, column: 18, scope: !7533)
!7540 = !{i32 983040, i32 0}
!7541 = !DILocation(line: 356, column: 9, scope: !7533)
!7542 = !DILocation(line: 370, column: 2, scope: !7533)
!7543 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1098, file: !1098, line: 37, type: !637, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7544)
!7544 = !{!7545, !7546, !7547}
!7545 = !DILocalVariable(name: "line", arg: 1, scope: !7543, file: !1098, line: 37, type: !103)
!7546 = !DILocalVariable(name: "arg", arg: 2, scope: !7543, file: !1098, line: 37, type: !104)
!7547 = !DILocalVariable(name: "data", scope: !7543, file: !1098, line: 39, type: !7338)
!7548 = !DILocation(line: 0, scope: !7543)
!7549 = !DILocation(line: 41, column: 29, scope: !7543)
!7550 = !DILocation(line: 41, column: 39, scope: !7543)
!7551 = !DILocation(line: 41, column: 44, scope: !7543)
!7552 = !DILocation(line: 41, column: 2, scope: !7543)
!7553 = !DILocation(line: 42, column: 1, scope: !7543)
!7554 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1098, file: !1098, line: 376, type: !7555, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7557)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{!103, !103, !103}
!7557 = !{!7558, !7559, !7560, !7562, !7563}
!7558 = !DILocalVariable(name: "port", arg: 1, scope: !7554, file: !1098, line: 376, type: !103)
!7559 = !DILocalVariable(name: "pin", arg: 2, scope: !7554, file: !1098, line: 376, type: !103)
!7560 = !DILocalVariable(name: "clk", scope: !7554, file: !1098, line: 386, type: !7561)
!7561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!7562 = !DILocalVariable(name: "pclken", scope: !7554, file: !1098, line: 387, type: !1214)
!7563 = !DILocalVariable(name: "ret", scope: !7554, file: !1098, line: 396, type: !103)
!7564 = !DILocation(line: 0, scope: !7554)
!7565 = !DILocation(line: 387, column: 2, scope: !7554)
!7566 = !DILocation(line: 387, column: 22, scope: !7554)
!7567 = !DILocation(line: 399, column: 8, scope: !7554)
!7568 = !DILocation(line: 400, column: 10, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7554, file: !1098, line: 400, column: 6)
!7570 = !DILocation(line: 400, column: 6, scope: !7554)
!7571 = !DILocation(line: 405, column: 2, scope: !7554)
!7572 = !DILocation(line: 407, column: 2, scope: !7554)
!7573 = !DILocation(line: 408, column: 1, scope: !7554)
!7574 = distinct !DISubprogram(name: "clock_control_on", scope: !730, file: !730, line: 123, type: !1063, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7575)
!7575 = !{!7576, !7577, !7578}
!7576 = !DILocalVariable(name: "dev", arg: 1, scope: !7574, file: !730, line: 123, type: !955)
!7577 = !DILocalVariable(name: "sys", arg: 2, scope: !7574, file: !730, line: 124, type: !826)
!7578 = !DILocalVariable(name: "api", scope: !7574, file: !730, line: 126, type: !1056)
!7579 = !DILocation(line: 0, scope: !7574)
!7580 = !DILocation(line: 127, column: 49, scope: !7574)
!7581 = !DILocation(line: 129, column: 14, scope: !7574)
!7582 = !DILocation(line: 129, column: 9, scope: !7574)
!7583 = !DILocation(line: 129, column: 2, scope: !7574)
!7584 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1098, file: !1098, line: 311, type: !6702, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7585)
!7585 = !{!7586, !7587, !7588}
!7586 = !DILocalVariable(name: "port", arg: 1, scope: !7584, file: !1098, line: 311, type: !103)
!7587 = !DILocalVariable(name: "pin", arg: 2, scope: !7584, file: !1098, line: 311, type: !103)
!7588 = !DILocalVariable(name: "line", scope: !7584, file: !1098, line: 313, type: !142)
!7589 = !DILocation(line: 0, scope: !7584)
!7590 = !DILocation(line: 313, column: 18, scope: !7584)
!7591 = !DILocation(line: 337, column: 2, scope: !7584)
!7592 = !DILocation(line: 340, column: 1, scope: !7584)
!7593 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1098, file: !1098, line: 295, type: !7594, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7596)
!7594 = !DISubroutineType(types: !7595)
!7595 = !{!142, !103}
!7596 = !{!7597}
!7597 = !DILocalVariable(name: "pin", arg: 1, scope: !7593, file: !1098, line: 295, type: !103)
!7598 = !DILocation(line: 0, scope: !7593)
!7599 = !DILocation(line: 307, column: 46, scope: !7593)
!7600 = !DILocation(line: 307, column: 27, scope: !7593)
!7601 = !DILocation(line: 307, column: 32, scope: !7593)
!7602 = !DILocation(line: 307, column: 14, scope: !7593)
!7603 = !DILocation(line: 307, column: 39, scope: !7593)
!7604 = !DILocation(line: 307, column: 2, scope: !7593)
!7605 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !4755, file: !4755, line: 671, type: !7606, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7608)
!7606 = !DISubroutineType(types: !7607)
!7607 = !{null, !142, !142}
!7608 = !{!7609, !7610}
!7609 = !DILocalVariable(name: "Port", arg: 1, scope: !7605, file: !4755, line: 671, type: !142)
!7610 = !DILocalVariable(name: "Line", arg: 2, scope: !7605, file: !4755, line: 671, type: !142)
!7611 = !DILocation(line: 0, scope: !7605)
!7612 = !DILocation(line: 673, column: 3, scope: !7605)
!7613 = !DILocalVariable(name: "value", arg: 1, scope: !7614, file: !4908, line: 373, type: !142)
!7614 = distinct !DISubprogram(name: "__RBIT", scope: !4908, file: !4908, line: 373, type: !5916, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7615)
!7615 = !{!7613, !7616}
!7616 = !DILocalVariable(name: "result", scope: !7614, file: !4908, line: 375, type: !142)
!7617 = !DILocation(line: 0, scope: !7614, inlinedAt: !7618)
!7618 = distinct !DILocation(line: 673, column: 3, scope: !7605)
!7619 = !DILocation(line: 380, column: 4, scope: !7614, inlinedAt: !7618)
!7620 = !{i64 3730441}
!7621 = !DILocalVariable(name: "value", arg: 1, scope: !7622, file: !4908, line: 403, type: !142)
!7622 = distinct !DISubprogram(name: "__CLZ", scope: !4908, file: !4908, line: 403, type: !7623, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7625)
!7623 = !DISubroutineType(types: !7624)
!7624 = !{!131, !142}
!7625 = !{!7621}
!7626 = !DILocation(line: 0, scope: !7622, inlinedAt: !7627)
!7627 = distinct !DILocation(line: 673, column: 3, scope: !7605)
!7628 = !DILocation(line: 414, column: 7, scope: !7622, inlinedAt: !7627)
!7629 = !DILocation(line: 674, column: 1, scope: !7605)
!7630 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7387, file: !7387, line: 69, type: !7631, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7633)
!7631 = !DISubroutineType(types: !7632)
!7632 = !{null, !7390, !955, !142}
!7633 = !{!7634, !7635, !7636, !7637, !7638}
!7634 = !DILocalVariable(name: "list", arg: 1, scope: !7630, file: !7387, line: 69, type: !7390)
!7635 = !DILocalVariable(name: "port", arg: 2, scope: !7630, file: !7387, line: 70, type: !955)
!7636 = !DILocalVariable(name: "pins", arg: 3, scope: !7630, file: !7387, line: 71, type: !142)
!7637 = !DILocalVariable(name: "cb", scope: !7630, file: !7387, line: 73, type: !997)
!7638 = !DILocalVariable(name: "tmp", scope: !7630, file: !7387, line: 73, type: !997)
!7639 = !DILocation(line: 0, scope: !7630)
!7640 = !DILocation(line: 75, column: 2, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7630, file: !7387, line: 75, column: 2)
!7642 = !DILocation(line: 0, scope: !7641)
!7643 = !DILocation(line: 76, column: 11, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7645, file: !7387, line: 76, column: 7)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !7387, line: 75, column: 57)
!7646 = distinct !DILexicalBlock(scope: !7641, file: !7387, line: 75, column: 2)
!7647 = !DILocation(line: 76, column: 20, scope: !7644)
!7648 = !DILocation(line: 76, column: 7, scope: !7645)
!7649 = !DILocation(line: 78, column: 8, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7644, file: !7387, line: 76, column: 28)
!7651 = !DILocation(line: 78, column: 4, scope: !7650)
!7652 = !DILocation(line: 79, column: 3, scope: !7650)
!7653 = !DILocation(line: 75, column: 2, scope: !7646)
!7654 = !DILocation(line: 81, column: 1, scope: !7630)
!7655 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !4755, file: !4755, line: 710, type: !5916, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7656)
!7656 = !{!7657}
!7657 = !DILocalVariable(name: "Line", arg: 1, scope: !7655, file: !4755, line: 710, type: !142)
!7658 = !DILocation(line: 0, scope: !7655)
!7659 = !DILocation(line: 712, column: 21, scope: !7655)
!7660 = !DILocation(line: 0, scope: !7614, inlinedAt: !7661)
!7661 = distinct !DILocation(line: 712, column: 76, scope: !7655)
!7662 = !DILocation(line: 380, column: 4, scope: !7614, inlinedAt: !7661)
!7663 = !DILocation(line: 0, scope: !7622, inlinedAt: !7664)
!7664 = distinct !DILocation(line: 712, column: 76, scope: !7655)
!7665 = !DILocation(line: 414, column: 7, scope: !7622, inlinedAt: !7664)
!7666 = !DILocation(line: 712, column: 73, scope: !7655)
!7667 = !DILocation(line: 712, column: 3, scope: !7655)
!7668 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !7669, file: !7669, line: 910, type: !7670, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7672)
!7669 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7670 = !DISubroutineType(types: !7671)
!7671 = !{null, !1028, !142}
!7672 = !{!7673, !7674}
!7673 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7668, file: !7669, line: 910, type: !1028)
!7674 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7668, file: !7669, line: 910, type: !142)
!7675 = !DILocation(line: 0, scope: !7668)
!7676 = !DILocation(line: 912, column: 3, scope: !7668)
!7677 = !DILocation(line: 913, column: 1, scope: !7668)
!7678 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !7669, file: !7669, line: 823, type: !7679, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7681)
!7679 = !DISubroutineType(types: !7680)
!7680 = !{!142, !1028}
!7681 = !{!7682}
!7682 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7678, file: !7669, line: 823, type: !1028)
!7683 = !DILocation(line: 0, scope: !7678)
!7684 = !DILocation(line: 825, column: 21, scope: !7678)
!7685 = !DILocation(line: 825, column: 3, scope: !7678)
!7686 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !7669, file: !7669, line: 812, type: !7670, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7687)
!7687 = !{!7688, !7689}
!7688 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7686, file: !7669, line: 812, type: !1028)
!7689 = !DILocalVariable(name: "PortValue", arg: 2, scope: !7686, file: !7669, line: 812, type: !142)
!7690 = !DILocation(line: 0, scope: !7686)
!7691 = !DILocation(line: 814, column: 3, scope: !7686)
!7692 = !DILocation(line: 815, column: 1, scope: !7686)
!7693 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !7669, file: !7669, line: 771, type: !7679, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7694)
!7694 = !{!7695}
!7695 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7693, file: !7669, line: 771, type: !1028)
!7696 = !DILocation(line: 0, scope: !7693)
!7697 = !DILocation(line: 773, column: 21, scope: !7693)
!7698 = !DILocation(line: 773, column: 3, scope: !7693)
!7699 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1098, file: !1098, line: 47, type: !7700, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7702)
!7700 = !DISubroutineType(types: !7701)
!7701 = !{!103, !971, !102}
!7702 = !{!7703, !7704}
!7703 = !DILocalVariable(name: "flags", arg: 1, scope: !7699, file: !1098, line: 47, type: !971)
!7704 = !DILocalVariable(name: "pincfg", arg: 2, scope: !7699, file: !1098, line: 47, type: !102)
!7705 = !DILocation(line: 0, scope: !7699)
!7706 = !DILocation(line: 50, column: 13, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7699, file: !1098, line: 50, column: 6)
!7708 = !DILocation(line: 50, column: 28, scope: !7707)
!7709 = !DILocation(line: 50, column: 6, scope: !7699)
!7710 = !DILocation(line: 53, column: 11, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7707, file: !1098, line: 50, column: 34)
!7712 = !DILocation(line: 55, column: 14, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7711, file: !1098, line: 55, column: 7)
!7714 = !DILocation(line: 55, column: 35, scope: !7713)
!7715 = !DILocation(line: 55, column: 7, scope: !7711)
!7716 = !DILocation(line: 56, column: 14, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !1098, line: 56, column: 8)
!7718 = distinct !DILexicalBlock(scope: !7713, file: !1098, line: 55, column: 41)
!7719 = !DILocation(line: 56, column: 8, scope: !7718)
!7720 = !DILocation(line: 0, scope: !7713)
!7721 = !DILocation(line: 66, column: 14, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7711, file: !1098, line: 66, column: 7)
!7723 = !DILocation(line: 66, column: 30, scope: !7722)
!7724 = !DILocation(line: 66, column: 7, scope: !7711)
!7725 = !DILocation(line: 67, column: 12, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7722, file: !1098, line: 66, column: 36)
!7727 = !DILocation(line: 68, column: 3, scope: !7726)
!7728 = !DILocation(line: 68, column: 21, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7722, file: !1098, line: 68, column: 14)
!7730 = !DILocation(line: 68, column: 39, scope: !7729)
!7731 = !DILocation(line: 68, column: 14, scope: !7722)
!7732 = !DILocation(line: 69, column: 12, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7729, file: !1098, line: 68, column: 45)
!7734 = !DILocation(line: 70, column: 3, scope: !7733)
!7735 = !DILocation(line: 72, column: 21, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7707, file: !1098, line: 72, column: 14)
!7737 = !DILocation(line: 72, column: 35, scope: !7736)
!7738 = !DILocation(line: 72, column: 14, scope: !7707)
!7739 = !DILocation(line: 77, column: 14, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !1098, line: 77, column: 7)
!7741 = distinct !DILexicalBlock(scope: !7736, file: !1098, line: 72, column: 41)
!7742 = !DILocation(line: 77, column: 30, scope: !7740)
!7743 = !DILocation(line: 77, column: 7, scope: !7741)
!7744 = !DILocation(line: 0, scope: !7707)
!7745 = !DILocation(line: 90, column: 1, scope: !7699)
!7746 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1098, file: !1098, line: 157, type: !7747, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7749)
!7747 = !DISubroutineType(types: !7748)
!7748 = !{null, !955, !103, !103, !103}
!7749 = !{!7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760}
!7750 = !DILocalVariable(name: "dev", arg: 1, scope: !7746, file: !1098, line: 157, type: !955)
!7751 = !DILocalVariable(name: "pin", arg: 2, scope: !7746, file: !1098, line: 157, type: !103)
!7752 = !DILocalVariable(name: "conf", arg: 3, scope: !7746, file: !1098, line: 158, type: !103)
!7753 = !DILocalVariable(name: "func", arg: 4, scope: !7746, file: !1098, line: 158, type: !103)
!7754 = !DILocalVariable(name: "cfg", scope: !7746, file: !1098, line: 160, type: !7271)
!7755 = !DILocalVariable(name: "gpio", scope: !7746, file: !1098, line: 161, type: !1028)
!7756 = !DILocalVariable(name: "pin_ll", scope: !7746, file: !1098, line: 163, type: !103)
!7757 = !DILocalVariable(name: "mode", scope: !7746, file: !1098, line: 227, type: !32)
!7758 = !DILocalVariable(name: "otype", scope: !7746, file: !1098, line: 227, type: !32)
!7759 = !DILocalVariable(name: "ospeed", scope: !7746, file: !1098, line: 227, type: !32)
!7760 = !DILocalVariable(name: "pupd", scope: !7746, file: !1098, line: 227, type: !32)
!7761 = !DILocation(line: 0, scope: !7746)
!7762 = !DILocation(line: 160, column: 45, scope: !7746)
!7763 = !DILocation(line: 161, column: 44, scope: !7746)
!7764 = !DILocation(line: 163, column: 15, scope: !7746)
!7765 = !DILocation(line: 229, column: 14, scope: !7746)
!7766 = !DILocation(line: 246, column: 47, scope: !7746)
!7767 = !DILocation(line: 246, column: 2, scope: !7746)
!7768 = !DILocation(line: 248, column: 43, scope: !7746)
!7769 = !DILocation(line: 248, column: 2, scope: !7746)
!7770 = !DILocation(line: 250, column: 40, scope: !7746)
!7771 = !DILocation(line: 250, column: 2, scope: !7746)
!7772 = !DILocation(line: 252, column: 11, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7746, file: !1098, line: 252, column: 6)
!7774 = !DILocation(line: 252, column: 6, scope: !7746)
!7775 = !DILocation(line: 253, column: 11, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !1098, line: 253, column: 7)
!7777 = distinct !DILexicalBlock(scope: !7773, file: !1098, line: 252, column: 36)
!7778 = !DILocation(line: 253, column: 7, scope: !7777)
!7779 = !DILocation(line: 254, column: 4, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7776, file: !1098, line: 253, column: 16)
!7781 = !DILocation(line: 255, column: 3, scope: !7780)
!7782 = !DILocation(line: 256, column: 4, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7776, file: !1098, line: 255, column: 10)
!7784 = !DILocation(line: 260, column: 40, scope: !7746)
!7785 = !DILocation(line: 260, column: 2, scope: !7746)
!7786 = !DILocation(line: 265, column: 1, scope: !7746)
!7787 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1098, file: !1098, line: 137, type: !7594, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7788)
!7788 = !{!7789, !7790}
!7789 = !DILocalVariable(name: "pin", arg: 1, scope: !7787, file: !1098, line: 137, type: !103)
!7790 = !DILocalVariable(name: "pinval", scope: !7787, file: !1098, line: 139, type: !142)
!7791 = !DILocation(line: 0, scope: !7787)
!7792 = !DILocation(line: 149, column: 13, scope: !7787)
!7793 = !DILocation(line: 151, column: 2, scope: !7787)
!7794 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !7669, file: !7669, line: 342, type: !7795, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7797)
!7795 = !DISubroutineType(types: !7796)
!7796 = !{null, !1028, !142, !142}
!7797 = !{!7798, !7799, !7800}
!7798 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7794, file: !7669, line: 342, type: !1028)
!7799 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7794, file: !7669, line: 342, type: !142)
!7800 = !DILocalVariable(name: "OutputType", arg: 3, scope: !7794, file: !7669, line: 342, type: !142)
!7801 = !DILocation(line: 0, scope: !7794)
!7802 = !DILocation(line: 344, column: 3, scope: !7794)
!7803 = !DILocation(line: 345, column: 1, scope: !7794)
!7804 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !7669, file: !7669, line: 413, type: !7795, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7805)
!7805 = !{!7806, !7807, !7808}
!7806 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7804, file: !7669, line: 413, type: !1028)
!7807 = !DILocalVariable(name: "Pin", arg: 2, scope: !7804, file: !7669, line: 413, type: !142)
!7808 = !DILocalVariable(name: "Speed", arg: 3, scope: !7804, file: !7669, line: 413, type: !142)
!7809 = !DILocation(line: 0, scope: !7804)
!7810 = !DILocation(line: 415, column: 3, scope: !7804)
!7811 = !DILocation(line: 0, scope: !7614, inlinedAt: !7812)
!7812 = distinct !DILocation(line: 415, column: 3, scope: !7804)
!7813 = !DILocation(line: 380, column: 4, scope: !7614, inlinedAt: !7812)
!7814 = !DILocation(line: 0, scope: !7622, inlinedAt: !7815)
!7815 = distinct !DILocation(line: 415, column: 3, scope: !7804)
!7816 = !DILocation(line: 414, column: 7, scope: !7622, inlinedAt: !7815)
!7817 = !DILocation(line: 0, scope: !7614, inlinedAt: !7818)
!7818 = distinct !DILocation(line: 415, column: 3, scope: !7804)
!7819 = !DILocation(line: 0, scope: !7622, inlinedAt: !7820)
!7820 = distinct !DILocation(line: 415, column: 3, scope: !7804)
!7821 = !DILocation(line: 417, column: 1, scope: !7804)
!7822 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !7669, file: !7669, line: 484, type: !7795, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7823)
!7823 = !{!7824, !7825, !7826}
!7824 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7822, file: !7669, line: 484, type: !1028)
!7825 = !DILocalVariable(name: "Pin", arg: 2, scope: !7822, file: !7669, line: 484, type: !142)
!7826 = !DILocalVariable(name: "Pull", arg: 3, scope: !7822, file: !7669, line: 484, type: !142)
!7827 = !DILocation(line: 0, scope: !7822)
!7828 = !DILocation(line: 486, column: 3, scope: !7822)
!7829 = !DILocation(line: 0, scope: !7614, inlinedAt: !7830)
!7830 = distinct !DILocation(line: 486, column: 3, scope: !7822)
!7831 = !DILocation(line: 380, column: 4, scope: !7614, inlinedAt: !7830)
!7832 = !DILocation(line: 0, scope: !7622, inlinedAt: !7833)
!7833 = distinct !DILocation(line: 486, column: 3, scope: !7822)
!7834 = !DILocation(line: 414, column: 7, scope: !7622, inlinedAt: !7833)
!7835 = !DILocation(line: 0, scope: !7614, inlinedAt: !7836)
!7836 = distinct !DILocation(line: 486, column: 3, scope: !7822)
!7837 = !DILocation(line: 0, scope: !7622, inlinedAt: !7838)
!7838 = distinct !DILocation(line: 486, column: 3, scope: !7822)
!7839 = !DILocation(line: 487, column: 1, scope: !7822)
!7840 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !7669, file: !7669, line: 556, type: !7795, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7841)
!7841 = !{!7842, !7843, !7844}
!7842 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7840, file: !7669, line: 556, type: !1028)
!7843 = !DILocalVariable(name: "Pin", arg: 2, scope: !7840, file: !7669, line: 556, type: !142)
!7844 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7840, file: !7669, line: 556, type: !142)
!7845 = !DILocation(line: 0, scope: !7840)
!7846 = !DILocation(line: 558, column: 3, scope: !7840)
!7847 = !DILocation(line: 0, scope: !7614, inlinedAt: !7848)
!7848 = distinct !DILocation(line: 558, column: 3, scope: !7840)
!7849 = !DILocation(line: 380, column: 4, scope: !7614, inlinedAt: !7848)
!7850 = !DILocation(line: 0, scope: !7622, inlinedAt: !7851)
!7851 = distinct !DILocation(line: 558, column: 3, scope: !7840)
!7852 = !DILocation(line: 414, column: 7, scope: !7622, inlinedAt: !7851)
!7853 = !DILocation(line: 0, scope: !7614, inlinedAt: !7854)
!7854 = distinct !DILocation(line: 558, column: 3, scope: !7840)
!7855 = !DILocation(line: 0, scope: !7622, inlinedAt: !7856)
!7856 = distinct !DILocation(line: 558, column: 3, scope: !7840)
!7857 = !DILocation(line: 560, column: 1, scope: !7840)
!7858 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !7669, file: !7669, line: 633, type: !7795, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7859)
!7859 = !{!7860, !7861, !7862}
!7860 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7858, file: !7669, line: 633, type: !1028)
!7861 = !DILocalVariable(name: "Pin", arg: 2, scope: !7858, file: !7669, line: 633, type: !142)
!7862 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7858, file: !7669, line: 633, type: !142)
!7863 = !DILocation(line: 0, scope: !7858)
!7864 = !DILocation(line: 635, column: 3, scope: !7858)
!7865 = !DILocation(line: 0, scope: !7614, inlinedAt: !7866)
!7866 = distinct !DILocation(line: 635, column: 3, scope: !7858)
!7867 = !DILocation(line: 380, column: 4, scope: !7614, inlinedAt: !7866)
!7868 = !DILocation(line: 0, scope: !7622, inlinedAt: !7869)
!7869 = distinct !DILocation(line: 635, column: 3, scope: !7858)
!7870 = !DILocation(line: 414, column: 7, scope: !7622, inlinedAt: !7869)
!7871 = !DILocation(line: 0, scope: !7614, inlinedAt: !7872)
!7872 = distinct !DILocation(line: 635, column: 3, scope: !7858)
!7873 = !DILocation(line: 0, scope: !7622, inlinedAt: !7874)
!7874 = distinct !DILocation(line: 635, column: 3, scope: !7858)
!7875 = !DILocation(line: 637, column: 1, scope: !7858)
!7876 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !7669, file: !7669, line: 273, type: !7795, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7877)
!7877 = !{!7878, !7879, !7880}
!7878 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7876, file: !7669, line: 273, type: !1028)
!7879 = !DILocalVariable(name: "Pin", arg: 2, scope: !7876, file: !7669, line: 273, type: !142)
!7880 = !DILocalVariable(name: "Mode", arg: 3, scope: !7876, file: !7669, line: 273, type: !142)
!7881 = !DILocation(line: 0, scope: !7876)
!7882 = !DILocation(line: 275, column: 3, scope: !7876)
!7883 = !DILocation(line: 0, scope: !7614, inlinedAt: !7884)
!7884 = distinct !DILocation(line: 275, column: 3, scope: !7876)
!7885 = !DILocation(line: 380, column: 4, scope: !7614, inlinedAt: !7884)
!7886 = !DILocation(line: 0, scope: !7622, inlinedAt: !7887)
!7887 = distinct !DILocation(line: 275, column: 3, scope: !7876)
!7888 = !DILocation(line: 414, column: 7, scope: !7622, inlinedAt: !7887)
!7889 = !DILocation(line: 0, scope: !7614, inlinedAt: !7890)
!7890 = distinct !DILocation(line: 275, column: 3, scope: !7876)
!7891 = !DILocation(line: 0, scope: !7622, inlinedAt: !7892)
!7892 = distinct !DILocation(line: 275, column: 3, scope: !7876)
!7893 = !DILocation(line: 276, column: 1, scope: !7876)
!7894 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1098, file: !1098, line: 698, type: !1111, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7895)
!7895 = !{!7896, !7897, !7898}
!7896 = !DILocalVariable(name: "dev", arg: 1, scope: !7894, file: !1098, line: 698, type: !955)
!7897 = !DILocalVariable(name: "data", scope: !7894, file: !1098, line: 700, type: !7338)
!7898 = !DILocalVariable(name: "ret", scope: !7894, file: !1098, line: 701, type: !103)
!7899 = !DILocation(line: 0, scope: !7894)
!7900 = !DILocation(line: 700, column: 38, scope: !7894)
!7901 = !DILocation(line: 703, column: 8, scope: !7894)
!7902 = !DILocation(line: 703, column: 12, scope: !7894)
!7903 = !DILocation(line: 705, column: 7, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7894, file: !1098, line: 705, column: 6)
!7905 = !DILocation(line: 705, column: 6, scope: !7894)
!7906 = !DILocation(line: 722, column: 8, scope: !7894)
!7907 = !DILocation(line: 723, column: 10, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7894, file: !1098, line: 723, column: 6)
!7909 = !DILocation(line: 723, column: 6, scope: !7894)
!7910 = !DILocation(line: 731, column: 1, scope: !7894)
!7911 = distinct !DISubprogram(name: "device_is_ready", scope: !7118, file: !7118, line: 47, type: !7912, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7914)
!7912 = !DISubroutineType(types: !7913)
!7913 = !{!134, !955}
!7914 = !{!7915}
!7915 = !DILocalVariable(name: "dev", arg: 1, scope: !7911, file: !7118, line: 47, type: !955)
!7916 = !DILocation(line: 0, scope: !7911)
!7917 = !DILocation(line: 55, column: 2, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7911, file: !7118, line: 55, column: 2)
!7919 = !{i64 2155277566}
!7920 = !DILocation(line: 56, column: 9, scope: !7911)
!7921 = !DILocation(line: 56, column: 2, scope: !7911)
!7922 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1098, file: !1098, line: 270, type: !7923, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7925)
!7923 = !DISubroutineType(types: !7924)
!7924 = !{!103, !955, !134}
!7925 = !{!7926, !7927, !7928, !7929, !7930}
!7926 = !DILocalVariable(name: "dev", arg: 1, scope: !7922, file: !1098, line: 270, type: !955)
!7927 = !DILocalVariable(name: "on", arg: 2, scope: !7922, file: !1098, line: 270, type: !134)
!7928 = !DILocalVariable(name: "cfg", scope: !7922, file: !1098, line: 272, type: !7271)
!7929 = !DILocalVariable(name: "ret", scope: !7922, file: !1098, line: 273, type: !103)
!7930 = !DILocalVariable(name: "clk", scope: !7922, file: !1098, line: 278, type: !7561)
!7931 = !DILocation(line: 0, scope: !7922)
!7932 = !DILocation(line: 272, column: 45, scope: !7922)
!7933 = !DILocation(line: 282, column: 38, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7935, file: !1098, line: 280, column: 10)
!7935 = distinct !DILexicalBlock(scope: !7922, file: !1098, line: 280, column: 6)
!7936 = !DILocation(line: 282, column: 6, scope: !7934)
!7937 = !DILocation(line: 281, column: 9, scope: !7934)
!7938 = !DILocation(line: 293, column: 1, scope: !7922)
!7939 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !118, file: !118, line: 730, type: !7912, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7940)
!7940 = !{!7941}
!7941 = !DILocalVariable(name: "dev", arg: 1, scope: !7939, file: !118, line: 730, type: !955)
!7942 = !DILocation(line: 0, scope: !7939)
!7943 = !DILocation(line: 732, column: 9, scope: !7939)
!7944 = !DILocation(line: 732, column: 2, scope: !7939)
!7945 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1098, file: !1098, line: 496, type: !7946, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !7948)
!7946 = !DISubroutineType(types: !7947)
!7947 = !{!103, !955, !103, !103, !103}
!7948 = !{!7949, !7950, !7951, !7952, !7953, !7954}
!7949 = !DILocalVariable(name: "dev", arg: 1, scope: !7945, file: !1098, line: 496, type: !955)
!7950 = !DILocalVariable(name: "pin", arg: 2, scope: !7945, file: !1098, line: 496, type: !103)
!7951 = !DILocalVariable(name: "conf", arg: 3, scope: !7945, file: !1098, line: 496, type: !103)
!7952 = !DILocalVariable(name: "func", arg: 4, scope: !7945, file: !1098, line: 496, type: !103)
!7953 = !DILocalVariable(name: "ret", scope: !7945, file: !1098, line: 498, type: !103)
!7954 = !DILocalVariable(name: "gpio_out", scope: !7955, file: !1098, line: 508, type: !142)
!7955 = distinct !DILexicalBlock(scope: !7956, file: !1098, line: 507, column: 27)
!7956 = distinct !DILexicalBlock(scope: !7945, file: !1098, line: 507, column: 6)
!7957 = !DILocation(line: 0, scope: !7945)
!7958 = !DILocation(line: 505, column: 2, scope: !7945)
!7959 = !DILocation(line: 507, column: 11, scope: !7956)
!7960 = !DILocation(line: 507, column: 6, scope: !7945)
!7961 = !DILocation(line: 508, column: 28, scope: !7955)
!7962 = !DILocation(line: 0, scope: !7955)
!7963 = !DILocation(line: 510, column: 16, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7955, file: !1098, line: 510, column: 7)
!7965 = !DILocation(line: 0, scope: !7964)
!7966 = !DILocation(line: 510, column: 7, scope: !7955)
!7967 = !DILocation(line: 511, column: 4, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7964, file: !1098, line: 510, column: 32)
!7969 = !DILocation(line: 512, column: 3, scope: !7968)
!7970 = !DILocation(line: 513, column: 4, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7972, file: !1098, line: 512, column: 39)
!7972 = distinct !DILexicalBlock(scope: !7964, file: !1098, line: 512, column: 14)
!7973 = !DILocation(line: 514, column: 3, scope: !7971)
!7974 = !DILocation(line: 518, column: 1, scope: !7945)
!7975 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1373, file: !1373, line: 526, type: !1274, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !7976)
!7976 = !{!7977, !7978, !7979}
!7977 = !DILocalVariable(name: "dev", arg: 1, scope: !7975, file: !1373, line: 526, type: !1276)
!7978 = !DILocalVariable(name: "c", arg: 2, scope: !7975, file: !1373, line: 526, type: !887)
!7979 = !DILocalVariable(name: "config", scope: !7975, file: !1373, line: 528, type: !7980)
!7980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!7981 = !DILocation(line: 0, scope: !7975)
!7982 = !DILocation(line: 528, column: 48, scope: !7975)
!7983 = !DILocation(line: 531, column: 40, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7975, file: !1373, line: 531, column: 6)
!7985 = !DILocation(line: 531, column: 6, scope: !7984)
!7986 = !DILocation(line: 531, column: 6, scope: !7975)
!7987 = !DILocation(line: 532, column: 34, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7984, file: !1373, line: 531, column: 48)
!7989 = !DILocation(line: 532, column: 3, scope: !7988)
!7990 = !DILocation(line: 533, column: 2, scope: !7988)
!7991 = !DILocation(line: 539, column: 42, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7975, file: !1373, line: 539, column: 6)
!7993 = !DILocation(line: 539, column: 7, scope: !7992)
!7994 = !DILocation(line: 539, column: 6, scope: !7975)
!7995 = !DILocation(line: 543, column: 52, scope: !7975)
!7996 = !DILocation(line: 543, column: 22, scope: !7975)
!7997 = !DILocation(line: 543, column: 5, scope: !7975)
!7998 = !DILocation(line: 545, column: 2, scope: !7975)
!7999 = !DILocation(line: 546, column: 1, scope: !7975)
!8000 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1373, file: !1373, line: 548, type: !1293, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8001)
!8001 = !{!8002, !8003, !8004, !8005}
!8002 = !DILocalVariable(name: "dev", arg: 1, scope: !8000, file: !1373, line: 548, type: !1276)
!8003 = !DILocalVariable(name: "c", arg: 2, scope: !8000, file: !1373, line: 549, type: !132)
!8004 = !DILocalVariable(name: "config", scope: !8000, file: !1373, line: 551, type: !7980)
!8005 = !DILocalVariable(name: "key", scope: !8000, file: !1373, line: 555, type: !32)
!8006 = !DILocation(line: 0, scope: !8000)
!8007 = !DILocation(line: 551, column: 48, scope: !8000)
!8008 = !DILocation(line: 562, column: 2, scope: !8000)
!8009 = !DILocation(line: 563, column: 41, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !1373, line: 563, column: 7)
!8011 = distinct !DILexicalBlock(scope: !8000, file: !1373, line: 562, column: 12)
!8012 = !DILocation(line: 563, column: 7, scope: !8010)
!8013 = !DILocation(line: 563, column: 7, scope: !8011)
!8014 = !DILocation(line: 55, column: 2, scope: !8015, inlinedAt: !8019)
!8015 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4734, file: !4734, line: 42, type: !4735, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8016)
!8016 = !{!8017, !8018}
!8017 = !DILocalVariable(name: "key", scope: !8015, file: !4734, line: 44, type: !32)
!8018 = !DILocalVariable(name: "tmp", scope: !8015, file: !4734, line: 53, type: !32)
!8019 = distinct !DILocation(line: 564, column: 10, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8010, file: !1373, line: 563, column: 49)
!8021 = !{i64 2327291}
!8022 = !DILocation(line: 0, scope: !8015, inlinedAt: !8019)
!8023 = !DILocation(line: 565, column: 42, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8020, file: !1373, line: 565, column: 8)
!8025 = !DILocation(line: 565, column: 8, scope: !8024)
!8026 = !DILocation(line: 565, column: 8, scope: !8020)
!8027 = !DILocalVariable(name: "key", arg: 1, scope: !8028, file: !4734, line: 84, type: !32)
!8028 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4734, file: !4734, line: 84, type: !4745, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8029)
!8029 = !{!8027}
!8030 = !DILocation(line: 0, scope: !8028, inlinedAt: !8031)
!8031 = distinct !DILocation(line: 568, column: 4, scope: !8020)
!8032 = !DILocation(line: 95, column: 2, scope: !8028, inlinedAt: !8031)
!8033 = !{i64 2328108}
!8034 = !DILocation(line: 569, column: 3, scope: !8020)
!8035 = distinct !{!8035, !8008, !8036}
!8036 = !DILocation(line: 570, column: 2, scope: !8000)
!8037 = !DILocation(line: 592, column: 33, scope: !8000)
!8038 = !DILocation(line: 592, column: 2, scope: !8000)
!8039 = !DILocation(line: 0, scope: !8028, inlinedAt: !8040)
!8040 = distinct !DILocation(line: 593, column: 2, scope: !8000)
!8041 = !DILocation(line: 95, column: 2, scope: !8028, inlinedAt: !8040)
!8042 = !DILocation(line: 594, column: 1, scope: !8000)
!8043 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1373, file: !1373, line: 596, type: !1297, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8044)
!8044 = !{!8045, !8046, !8047}
!8045 = !DILocalVariable(name: "dev", arg: 1, scope: !8043, file: !1373, line: 596, type: !1276)
!8046 = !DILocalVariable(name: "config", scope: !8043, file: !1373, line: 598, type: !7980)
!8047 = !DILocalVariable(name: "err", scope: !8043, file: !1373, line: 599, type: !142)
!8048 = !DILocation(line: 0, scope: !8043)
!8049 = !DILocation(line: 598, column: 48, scope: !8043)
!8050 = !DILocation(line: 606, column: 40, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8043, file: !1373, line: 606, column: 6)
!8052 = !DILocation(line: 606, column: 6, scope: !8051)
!8053 = !DILocation(line: 606, column: 6, scope: !8043)
!8054 = !DILocation(line: 610, column: 39, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8043, file: !1373, line: 610, column: 6)
!8056 = !DILocation(line: 610, column: 6, scope: !8055)
!8057 = !DILocation(line: 610, column: 6, scope: !8043)
!8058 = !DILocation(line: 614, column: 39, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8043, file: !1373, line: 614, column: 6)
!8060 = !DILocation(line: 614, column: 6, scope: !8059)
!8061 = !DILocation(line: 614, column: 6, scope: !8043)
!8062 = !DILocation(line: 619, column: 40, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8043, file: !1373, line: 619, column: 6)
!8064 = !DILocation(line: 619, column: 6, scope: !8063)
!8065 = !DILocation(line: 619, column: 6, scope: !8043)
!8066 = !DILocation(line: 623, column: 10, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8043, file: !1373, line: 623, column: 6)
!8068 = !DILocation(line: 623, column: 6, scope: !8043)
!8069 = !DILocation(line: 624, column: 34, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8067, file: !1373, line: 623, column: 24)
!8071 = !DILocation(line: 624, column: 3, scope: !8070)
!8072 = !DILocation(line: 625, column: 2, scope: !8070)
!8073 = !DILocation(line: 632, column: 10, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8043, file: !1373, line: 632, column: 6)
!8075 = !DILocation(line: 632, column: 6, scope: !8043)
!8076 = !DILocation(line: 633, column: 34, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8074, file: !1373, line: 632, column: 32)
!8078 = !DILocation(line: 633, column: 3, scope: !8077)
!8079 = !DILocation(line: 634, column: 2, scope: !8077)
!8080 = !DILocation(line: 636, column: 10, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8043, file: !1373, line: 636, column: 6)
!8082 = !DILocation(line: 636, column: 6, scope: !8043)
!8083 = !DILocation(line: 637, column: 33, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8081, file: !1373, line: 636, column: 31)
!8085 = !DILocation(line: 637, column: 3, scope: !8084)
!8086 = !DILocation(line: 638, column: 2, scope: !8084)
!8087 = !DILocation(line: 640, column: 10, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8043, file: !1373, line: 640, column: 6)
!8089 = !DILocation(line: 640, column: 6, scope: !8043)
!8090 = !DILocation(line: 641, column: 33, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8088, file: !1373, line: 640, column: 32)
!8092 = !DILocation(line: 641, column: 3, scope: !8091)
!8093 = !DILocation(line: 642, column: 2, scope: !8091)
!8094 = !DILocation(line: 646, column: 32, scope: !8043)
!8095 = !DILocation(line: 646, column: 2, scope: !8043)
!8096 = !DILocation(line: 648, column: 2, scope: !8043)
!8097 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1373, file: !1373, line: 419, type: !1301, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8098)
!8098 = !{!8099, !8100, !8101, !8102, !8104, !8105, !8106, !8107}
!8099 = !DILocalVariable(name: "dev", arg: 1, scope: !8097, file: !1373, line: 419, type: !1276)
!8100 = !DILocalVariable(name: "cfg", arg: 2, scope: !8097, file: !1373, line: 420, type: !1303)
!8101 = !DILocalVariable(name: "config", scope: !8097, file: !1373, line: 422, type: !7980)
!8102 = !DILocalVariable(name: "data", scope: !8097, file: !1373, line: 423, type: !8103)
!8103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!8104 = !DILocalVariable(name: "parity", scope: !8097, file: !1373, line: 424, type: !5176)
!8105 = !DILocalVariable(name: "stopbits", scope: !8097, file: !1373, line: 425, type: !5176)
!8106 = !DILocalVariable(name: "databits", scope: !8097, file: !1373, line: 426, type: !5176)
!8107 = !DILocalVariable(name: "flowctrl", scope: !8097, file: !1373, line: 428, type: !5176)
!8108 = !DILocation(line: 0, scope: !8097)
!8109 = !DILocation(line: 422, column: 48, scope: !8097)
!8110 = !DILocation(line: 423, column: 38, scope: !8097)
!8111 = !DILocation(line: 424, column: 56, scope: !8097)
!8112 = !DILocation(line: 424, column: 51, scope: !8097)
!8113 = !DILocation(line: 424, column: 26, scope: !8097)
!8114 = !DILocation(line: 425, column: 60, scope: !8097)
!8115 = !DILocation(line: 425, column: 55, scope: !8097)
!8116 = !DILocation(line: 425, column: 28, scope: !8097)
!8117 = !DILocation(line: 426, column: 60, scope: !8097)
!8118 = !DILocation(line: 426, column: 55, scope: !8097)
!8119 = !DILocation(line: 426, column: 28, scope: !8097)
!8120 = !DILocation(line: 428, column: 58, scope: !8097)
!8121 = !DILocation(line: 428, column: 53, scope: !8097)
!8122 = !DILocation(line: 428, column: 28, scope: !8097)
!8123 = !DILocation(line: 431, column: 44, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8097, file: !1373, line: 431, column: 6)
!8125 = !DILocation(line: 438, column: 22, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8097, file: !1373, line: 437, column: 6)
!8127 = !DILocation(line: 437, column: 6, scope: !8097)
!8128 = !DILocation(line: 448, column: 6, scope: !8097)
!8129 = !DILocation(line: 465, column: 47, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8097, file: !1373, line: 465, column: 6)
!8131 = !DILocation(line: 475, column: 21, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8097, file: !1373, line: 475, column: 6)
!8133 = !DILocation(line: 475, column: 6, scope: !8097)
!8134 = !DILocation(line: 476, column: 8, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !1373, line: 476, column: 7)
!8136 = distinct !DILexicalBlock(scope: !8132, file: !1373, line: 475, column: 49)
!8137 = !DILocation(line: 477, column: 34, scope: !8135)
!8138 = !DILocation(line: 476, column: 7, scope: !8136)
!8139 = !DILocation(line: 482, column: 27, scope: !8097)
!8140 = !DILocation(line: 482, column: 2, scope: !8097)
!8141 = !DILocation(line: 484, column: 16, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8097, file: !1373, line: 484, column: 6)
!8143 = !DILocation(line: 484, column: 13, scope: !8142)
!8144 = !DILocation(line: 484, column: 6, scope: !8097)
!8145 = !DILocation(line: 485, column: 3, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8142, file: !1373, line: 484, column: 44)
!8147 = !DILocation(line: 486, column: 2, scope: !8146)
!8148 = !DILocation(line: 488, column: 18, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8097, file: !1373, line: 488, column: 6)
!8150 = !DILocation(line: 488, column: 15, scope: !8149)
!8151 = !DILocation(line: 488, column: 6, scope: !8097)
!8152 = !DILocation(line: 489, column: 3, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8149, file: !1373, line: 488, column: 48)
!8154 = !DILocation(line: 490, column: 2, scope: !8153)
!8155 = !DILocation(line: 492, column: 18, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8097, file: !1373, line: 492, column: 6)
!8157 = !DILocation(line: 492, column: 15, scope: !8156)
!8158 = !DILocation(line: 492, column: 6, scope: !8097)
!8159 = !DILocation(line: 493, column: 3, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8156, file: !1373, line: 492, column: 48)
!8161 = !DILocation(line: 494, column: 2, scope: !8160)
!8162 = !DILocation(line: 496, column: 18, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8097, file: !1373, line: 496, column: 6)
!8164 = !DILocation(line: 496, column: 15, scope: !8163)
!8165 = !DILocation(line: 496, column: 6, scope: !8097)
!8166 = !DILocation(line: 497, column: 3, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8163, file: !1373, line: 496, column: 46)
!8168 = !DILocation(line: 498, column: 2, scope: !8167)
!8169 = !DILocation(line: 500, column: 11, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8097, file: !1373, line: 500, column: 6)
!8171 = !DILocation(line: 500, column: 29, scope: !8170)
!8172 = !DILocation(line: 500, column: 20, scope: !8170)
!8173 = !DILocation(line: 500, column: 6, scope: !8097)
!8174 = !DILocation(line: 501, column: 3, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8170, file: !1373, line: 500, column: 40)
!8176 = !DILocation(line: 502, column: 26, scope: !8175)
!8177 = !DILocation(line: 502, column: 19, scope: !8175)
!8178 = !DILocation(line: 503, column: 2, scope: !8175)
!8179 = !DILocation(line: 505, column: 26, scope: !8097)
!8180 = !DILocation(line: 505, column: 2, scope: !8097)
!8181 = !DILocation(line: 506, column: 2, scope: !8097)
!8182 = !DILocation(line: 507, column: 1, scope: !8097)
!8183 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1373, file: !1373, line: 509, type: !1314, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8184)
!8184 = !{!8185, !8186, !8187}
!8185 = !DILocalVariable(name: "dev", arg: 1, scope: !8183, file: !1373, line: 509, type: !1276)
!8186 = !DILocalVariable(name: "cfg", arg: 2, scope: !8183, file: !1373, line: 510, type: !1316)
!8187 = !DILocalVariable(name: "data", scope: !8183, file: !1373, line: 512, type: !8103)
!8188 = !DILocation(line: 0, scope: !8183)
!8189 = !DILocation(line: 512, column: 38, scope: !8183)
!8190 = !DILocation(line: 514, column: 24, scope: !8183)
!8191 = !DILocation(line: 514, column: 7, scope: !8183)
!8192 = !DILocation(line: 514, column: 16, scope: !8183)
!8193 = !DILocation(line: 515, column: 41, scope: !8183)
!8194 = !{i32 0, i32 1537}
!8195 = !DILocation(line: 515, column: 16, scope: !8183)
!8196 = !DILocation(line: 515, column: 7, scope: !8183)
!8197 = !DILocation(line: 515, column: 14, scope: !8183)
!8198 = !DILocation(line: 517, column: 3, scope: !8183)
!8199 = !{i32 0, i32 12289}
!8200 = !DILocation(line: 516, column: 19, scope: !8183)
!8201 = !DILocation(line: 516, column: 7, scope: !8183)
!8202 = !DILocation(line: 516, column: 17, scope: !8183)
!8203 = !DILocation(line: 519, column: 3, scope: !8183)
!8204 = !DILocation(line: 519, column: 33, scope: !8183)
!8205 = !DILocation(line: 518, column: 19, scope: !8183)
!8206 = !DILocation(line: 518, column: 7, scope: !8183)
!8207 = !DILocation(line: 518, column: 17, scope: !8183)
!8208 = !DILocation(line: 521, column: 3, scope: !8183)
!8209 = !{i32 0, i32 769}
!8210 = !DILocation(line: 520, column: 19, scope: !8183)
!8211 = !DILocation(line: 520, column: 7, scope: !8183)
!8212 = !DILocation(line: 520, column: 17, scope: !8183)
!8213 = !DILocation(line: 522, column: 2, scope: !8183)
!8214 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1373, file: !1373, line: 205, type: !8215, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8217)
!8215 = !DISubroutineType(types: !8216)
!8216 = !{!142, !1276}
!8217 = !{!8218, !8219}
!8218 = !DILocalVariable(name: "dev", arg: 1, scope: !8214, file: !1373, line: 205, type: !1276)
!8219 = !DILocalVariable(name: "config", scope: !8214, file: !1373, line: 207, type: !7980)
!8220 = !DILocation(line: 0, scope: !8214)
!8221 = !DILocation(line: 207, column: 48, scope: !8214)
!8222 = !DILocation(line: 209, column: 36, scope: !8214)
!8223 = !DILocation(line: 209, column: 9, scope: !8214)
!8224 = !DILocation(line: 209, column: 2, scope: !8214)
!8225 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1373, file: !1373, line: 270, type: !8226, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8228)
!8226 = !DISubroutineType(types: !8227)
!8227 = !{!1242, !142}
!8228 = !{!8229}
!8229 = !DILocalVariable(name: "parity", arg: 1, scope: !8225, file: !1373, line: 270, type: !142)
!8230 = !DILocation(line: 0, scope: !8225)
!8231 = !DILocation(line: 272, column: 2, scope: !8225)
!8232 = !DILocation(line: 281, column: 1, scope: !8225)
!8233 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1373, file: !1373, line: 220, type: !8215, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8234)
!8234 = !{!8235, !8236}
!8235 = !DILocalVariable(name: "dev", arg: 1, scope: !8233, file: !1373, line: 220, type: !1276)
!8236 = !DILocalVariable(name: "config", scope: !8233, file: !1373, line: 222, type: !7980)
!8237 = !DILocation(line: 0, scope: !8233)
!8238 = !DILocation(line: 222, column: 48, scope: !8233)
!8239 = !DILocation(line: 224, column: 44, scope: !8233)
!8240 = !DILocation(line: 224, column: 9, scope: !8233)
!8241 = !DILocation(line: 224, column: 2, scope: !8233)
!8242 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1373, file: !1373, line: 304, type: !8243, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8245)
!8243 = !DISubroutineType(types: !8244)
!8244 = !{!1256, !142}
!8245 = !{!8246}
!8246 = !DILocalVariable(name: "sb", arg: 1, scope: !8242, file: !1373, line: 304, type: !142)
!8247 = !DILocation(line: 0, scope: !8242)
!8248 = !DILocation(line: 306, column: 2, scope: !8242)
!8249 = !DILocation(line: 0, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8242, file: !1373, line: 306, column: 14)
!8251 = !DILocation(line: 323, column: 1, scope: !8242)
!8252 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1373, file: !1373, line: 235, type: !8215, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8253)
!8253 = !{!8254, !8255}
!8254 = !DILocalVariable(name: "dev", arg: 1, scope: !8252, file: !1373, line: 235, type: !1276)
!8255 = !DILocalVariable(name: "config", scope: !8252, file: !1373, line: 237, type: !7980)
!8256 = !DILocation(line: 0, scope: !8252)
!8257 = !DILocation(line: 237, column: 48, scope: !8252)
!8258 = !DILocation(line: 239, column: 39, scope: !8252)
!8259 = !DILocation(line: 239, column: 9, scope: !8252)
!8260 = !DILocation(line: 239, column: 2, scope: !8252)
!8261 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1373, file: !1373, line: 355, type: !8262, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8264)
!8262 = !DISubroutineType(types: !8263)
!8263 = !{!1249, !142, !142}
!8264 = !{!8265, !8266}
!8265 = !DILocalVariable(name: "db", arg: 1, scope: !8261, file: !1373, line: 355, type: !142)
!8266 = !DILocalVariable(name: "p", arg: 2, scope: !8261, file: !1373, line: 356, type: !142)
!8267 = !DILocation(line: 0, scope: !8261)
!8268 = !DILocation(line: 358, column: 2, scope: !8261)
!8269 = !DILocation(line: 384, column: 1, scope: !8261)
!8270 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1373, file: !1373, line: 250, type: !8215, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8271)
!8271 = !{!8272, !8273}
!8272 = !DILocalVariable(name: "dev", arg: 1, scope: !8270, file: !1373, line: 250, type: !1276)
!8273 = !DILocalVariable(name: "config", scope: !8270, file: !1373, line: 252, type: !7980)
!8274 = !DILocation(line: 0, scope: !8270)
!8275 = !DILocation(line: 252, column: 48, scope: !8270)
!8276 = !DILocation(line: 254, column: 40, scope: !8270)
!8277 = !DILocation(line: 254, column: 9, scope: !8270)
!8278 = !DILocation(line: 254, column: 2, scope: !8270)
!8279 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1373, file: !1373, line: 409, type: !8280, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8282)
!8280 = !DISubroutineType(types: !8281)
!8281 = !{!1262, !142}
!8282 = !{!8283}
!8283 = !DILocalVariable(name: "fc", arg: 1, scope: !8279, file: !1373, line: 409, type: !142)
!8284 = !DILocation(line: 0, scope: !8279)
!8285 = !DILocation(line: 411, column: 9, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8279, file: !1373, line: 411, column: 6)
!8287 = !DILocation(line: 416, column: 1, scope: !8279)
!8288 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8289, file: !8289, line: 967, type: !8290, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8292)
!8289 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8290 = !DISubroutineType(types: !8291)
!8291 = !{!142, !1317}
!8292 = !{!8293}
!8293 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8288, file: !8289, line: 967, type: !1317)
!8294 = !DILocation(line: 0, scope: !8288)
!8295 = !DILocation(line: 969, column: 21, scope: !8288)
!8296 = !DILocation(line: 969, column: 3, scope: !8288)
!8297 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8289, file: !8289, line: 601, type: !8290, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8298)
!8298 = !{!8299}
!8299 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8297, file: !8289, line: 601, type: !1317)
!8300 = !DILocation(line: 0, scope: !8297)
!8301 = !DILocation(line: 603, column: 21, scope: !8297)
!8302 = !DILocation(line: 603, column: 3, scope: !8297)
!8303 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8289, file: !8289, line: 820, type: !8290, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8304)
!8304 = !{!8305}
!8305 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8303, file: !8289, line: 820, type: !1317)
!8306 = !DILocation(line: 0, scope: !8303)
!8307 = !DILocation(line: 822, column: 21, scope: !8303)
!8308 = !DILocation(line: 822, column: 3, scope: !8303)
!8309 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8289, file: !8289, line: 547, type: !8290, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8310)
!8310 = !{!8311}
!8311 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8309, file: !8289, line: 547, type: !1317)
!8312 = !DILocation(line: 0, scope: !8309)
!8313 = !DILocation(line: 549, column: 21, scope: !8309)
!8314 = !DILocation(line: 549, column: 3, scope: !8309)
!8315 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1373, file: !1373, line: 257, type: !8316, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8318)
!8316 = !DISubroutineType(types: !8317)
!8317 = !{!142, !1242}
!8318 = !{!8319}
!8319 = !DILocalVariable(name: "parity", arg: 1, scope: !8315, file: !1373, line: 257, type: !1242)
!8320 = !DILocation(line: 0, scope: !8315)
!8321 = !DILocation(line: 259, column: 2, scope: !8315)
!8322 = !DILocation(line: 268, column: 1, scope: !8315)
!8323 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1373, file: !1373, line: 283, type: !8324, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8326)
!8324 = !DISubroutineType(types: !8325)
!8325 = !{!142, !1256}
!8326 = !{!8327}
!8327 = !DILocalVariable(name: "sb", arg: 1, scope: !8323, file: !1373, line: 283, type: !1256)
!8328 = !DILocation(line: 0, scope: !8323)
!8329 = !DILocation(line: 285, column: 2, scope: !8323)
!8330 = !DILocation(line: 0, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8323, file: !1373, line: 285, column: 14)
!8332 = !DILocation(line: 302, column: 1, scope: !8323)
!8333 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1373, file: !1373, line: 325, type: !8334, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8336)
!8334 = !DISubroutineType(types: !8335)
!8335 = !{!142, !1249, !1242}
!8336 = !{!8337, !8338}
!8337 = !DILocalVariable(name: "db", arg: 1, scope: !8333, file: !1373, line: 325, type: !1249)
!8338 = !DILocalVariable(name: "p", arg: 2, scope: !8333, file: !1373, line: 326, type: !1242)
!8339 = !DILocation(line: 0, scope: !8333)
!8340 = !DILocation(line: 328, column: 2, scope: !8333)
!8341 = !DILocation(line: 353, column: 1, scope: !8333)
!8342 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1373, file: !1373, line: 393, type: !8343, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8345)
!8343 = !DISubroutineType(types: !8344)
!8344 = !{!142, !1262}
!8345 = !{!8346}
!8346 = !DILocalVariable(name: "fc", arg: 1, scope: !8342, file: !1373, line: 393, type: !1262)
!8347 = !DILocation(line: 0, scope: !8342)
!8348 = !DILocation(line: 395, column: 9, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8342, file: !1373, line: 395, column: 6)
!8350 = !DILocation(line: 400, column: 1, scope: !8342)
!8351 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8289, file: !8289, line: 424, type: !8352, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8354)
!8352 = !DISubroutineType(types: !8353)
!8353 = !{null, !1317}
!8354 = !{!8355}
!8355 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8351, file: !8289, line: 424, type: !1317)
!8356 = !DILocation(line: 0, scope: !8351)
!8357 = !DILocation(line: 426, column: 3, scope: !8351)
!8358 = !DILocation(line: 427, column: 1, scope: !8351)
!8359 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1373, file: !1373, line: 197, type: !8360, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8362)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{null, !1276, !142}
!8362 = !{!8363, !8364, !8365}
!8363 = !DILocalVariable(name: "dev", arg: 1, scope: !8359, file: !1373, line: 197, type: !1276)
!8364 = !DILocalVariable(name: "parity", arg: 2, scope: !8359, file: !1373, line: 198, type: !142)
!8365 = !DILocalVariable(name: "config", scope: !8359, file: !1373, line: 200, type: !7980)
!8366 = !DILocation(line: 0, scope: !8359)
!8367 = !DILocation(line: 200, column: 48, scope: !8359)
!8368 = !DILocation(line: 202, column: 29, scope: !8359)
!8369 = !DILocation(line: 202, column: 2, scope: !8359)
!8370 = !DILocation(line: 203, column: 1, scope: !8359)
!8371 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1373, file: !1373, line: 212, type: !8360, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8372)
!8372 = !{!8373, !8374, !8375}
!8373 = !DILocalVariable(name: "dev", arg: 1, scope: !8371, file: !1373, line: 212, type: !1276)
!8374 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8371, file: !1373, line: 213, type: !142)
!8375 = !DILocalVariable(name: "config", scope: !8371, file: !1373, line: 215, type: !7980)
!8376 = !DILocation(line: 0, scope: !8371)
!8377 = !DILocation(line: 215, column: 48, scope: !8371)
!8378 = !DILocation(line: 217, column: 37, scope: !8371)
!8379 = !DILocation(line: 217, column: 2, scope: !8371)
!8380 = !DILocation(line: 218, column: 1, scope: !8371)
!8381 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1373, file: !1373, line: 227, type: !8360, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8382)
!8382 = !{!8383, !8384, !8385}
!8383 = !DILocalVariable(name: "dev", arg: 1, scope: !8381, file: !1373, line: 227, type: !1276)
!8384 = !DILocalVariable(name: "databits", arg: 2, scope: !8381, file: !1373, line: 228, type: !142)
!8385 = !DILocalVariable(name: "config", scope: !8381, file: !1373, line: 230, type: !7980)
!8386 = !DILocation(line: 0, scope: !8381)
!8387 = !DILocation(line: 230, column: 48, scope: !8381)
!8388 = !DILocation(line: 232, column: 32, scope: !8381)
!8389 = !DILocation(line: 232, column: 2, scope: !8381)
!8390 = !DILocation(line: 233, column: 1, scope: !8381)
!8391 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1373, file: !1373, line: 242, type: !8360, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8392)
!8392 = !{!8393, !8394, !8395}
!8393 = !DILocalVariable(name: "dev", arg: 1, scope: !8391, file: !1373, line: 242, type: !1276)
!8394 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8391, file: !1373, line: 243, type: !142)
!8395 = !DILocalVariable(name: "config", scope: !8391, file: !1373, line: 245, type: !7980)
!8396 = !DILocation(line: 0, scope: !8391)
!8397 = !DILocation(line: 245, column: 48, scope: !8391)
!8398 = !DILocation(line: 247, column: 33, scope: !8391)
!8399 = !DILocation(line: 247, column: 2, scope: !8391)
!8400 = !DILocation(line: 248, column: 1, scope: !8391)
!8401 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1373, file: !1373, line: 107, type: !8360, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8402)
!8402 = !{!8403, !8404, !8405, !8406, !8407}
!8403 = !DILocalVariable(name: "dev", arg: 1, scope: !8401, file: !1373, line: 107, type: !1276)
!8404 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8401, file: !1373, line: 107, type: !142)
!8405 = !DILocalVariable(name: "config", scope: !8401, file: !1373, line: 109, type: !7980)
!8406 = !DILocalVariable(name: "data", scope: !8401, file: !1373, line: 110, type: !8103)
!8407 = !DILocalVariable(name: "clock_rate", scope: !8401, file: !1373, line: 112, type: !142)
!8408 = !DILocation(line: 0, scope: !8401)
!8409 = !DILocation(line: 109, column: 48, scope: !8401)
!8410 = !DILocation(line: 110, column: 38, scope: !8401)
!8411 = !DILocation(line: 112, column: 2, scope: !8401)
!8412 = !DILocation(line: 123, column: 36, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !1373, line: 123, column: 7)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !1373, line: 122, column: 9)
!8415 = distinct !DILexicalBlock(scope: !8401, file: !1373, line: 115, column: 6)
!8416 = !DILocation(line: 124, column: 42, scope: !8413)
!8417 = !DILocation(line: 123, column: 7, scope: !8413)
!8418 = !DILocation(line: 125, column: 22, scope: !8413)
!8419 = !DILocation(line: 123, column: 7, scope: !8414)
!8420 = !DILocation(line: 176, column: 36, scope: !8401)
!8421 = !DILocation(line: 176, column: 3, scope: !8401)
!8422 = !DILocation(line: 179, column: 32, scope: !8401)
!8423 = !DILocation(line: 180, column: 10, scope: !8401)
!8424 = !DILocation(line: 179, column: 3, scope: !8401)
!8425 = !DILocation(line: 195, column: 1, scope: !8401)
!8426 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8289, file: !8289, line: 410, type: !8352, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8427)
!8427 = !{!8428}
!8428 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8426, file: !8289, line: 410, type: !1317)
!8429 = !DILocation(line: 0, scope: !8426)
!8430 = !DILocation(line: 412, column: 3, scope: !8426)
!8431 = !DILocation(line: 413, column: 1, scope: !8426)
!8432 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !730, file: !730, line: 216, type: !1350, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8433)
!8433 = !{!8434, !8435, !8436, !8437}
!8434 = !DILocalVariable(name: "dev", arg: 1, scope: !8432, file: !730, line: 216, type: !1276)
!8435 = !DILocalVariable(name: "sys", arg: 2, scope: !8432, file: !730, line: 217, type: !826)
!8436 = !DILocalVariable(name: "rate", arg: 3, scope: !8432, file: !730, line: 218, type: !782)
!8437 = !DILocalVariable(name: "api", scope: !8432, file: !730, line: 220, type: !1328)
!8438 = !DILocation(line: 0, scope: !8432)
!8439 = !DILocation(line: 221, column: 49, scope: !8432)
!8440 = !DILocation(line: 223, column: 11, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8432, file: !730, line: 223, column: 6)
!8442 = !DILocation(line: 223, column: 20, scope: !8441)
!8443 = !DILocation(line: 223, column: 6, scope: !8432)
!8444 = !DILocation(line: 227, column: 9, scope: !8432)
!8445 = !DILocation(line: 227, column: 2, scope: !8432)
!8446 = !DILocation(line: 228, column: 1, scope: !8432)
!8447 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8289, file: !8289, line: 615, type: !8448, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8450)
!8448 = !DISubroutineType(types: !8449)
!8449 = !{null, !1317, !142}
!8450 = !{!8451, !8452}
!8451 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8447, file: !8289, line: 615, type: !1317)
!8452 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8447, file: !8289, line: 615, type: !142)
!8453 = !DILocation(line: 0, scope: !8447)
!8454 = !DILocation(line: 617, column: 3, scope: !8447)
!8455 = !DILocation(line: 618, column: 1, scope: !8447)
!8456 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8289, file: !8289, line: 1020, type: !8457, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8459)
!8457 = !DISubroutineType(types: !8458)
!8458 = !{null, !1317, !142, !142, !142}
!8459 = !{!8460, !8461, !8462, !8463}
!8460 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8456, file: !8289, line: 1020, type: !1317)
!8461 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8456, file: !8289, line: 1020, type: !142)
!8462 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8456, file: !8289, line: 1020, type: !142)
!8463 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8456, file: !8289, line: 1021, type: !142)
!8464 = !DILocation(line: 0, scope: !8456)
!8465 = !DILocation(line: 1029, column: 30, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8467, file: !8289, line: 1028, column: 3)
!8467 = distinct !DILexicalBlock(scope: !8456, file: !8289, line: 1023, column: 7)
!8468 = !DILocation(line: 1029, column: 19, scope: !8466)
!8469 = !DILocation(line: 1029, column: 13, scope: !8466)
!8470 = !DILocation(line: 1029, column: 17, scope: !8466)
!8471 = !DILocation(line: 1031, column: 1, scope: !8456)
!8472 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8289, file: !8289, line: 949, type: !8448, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8473)
!8473 = !{!8474, !8475}
!8474 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8472, file: !8289, line: 949, type: !1317)
!8475 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8472, file: !8289, line: 949, type: !142)
!8476 = !DILocation(line: 0, scope: !8472)
!8477 = !DILocation(line: 951, column: 3, scope: !8472)
!8478 = !DILocation(line: 952, column: 1, scope: !8472)
!8479 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8289, file: !8289, line: 588, type: !8448, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8480)
!8480 = !{!8481, !8482}
!8481 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8479, file: !8289, line: 588, type: !1317)
!8482 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8479, file: !8289, line: 588, type: !142)
!8483 = !DILocation(line: 0, scope: !8479)
!8484 = !DILocation(line: 590, column: 3, scope: !8479)
!8485 = !DILocation(line: 591, column: 1, scope: !8479)
!8486 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8289, file: !8289, line: 805, type: !8448, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8487)
!8487 = !{!8488, !8489}
!8488 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8486, file: !8289, line: 805, type: !1317)
!8489 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8486, file: !8289, line: 805, type: !142)
!8490 = !DILocation(line: 0, scope: !8486)
!8491 = !DILocation(line: 807, column: 3, scope: !8486)
!8492 = !DILocation(line: 808, column: 1, scope: !8486)
!8493 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8289, file: !8289, line: 532, type: !8448, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8494)
!8494 = !{!8495, !8496}
!8495 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8493, file: !8289, line: 532, type: !1317)
!8496 = !DILocalVariable(name: "Parity", arg: 2, scope: !8493, file: !8289, line: 532, type: !142)
!8497 = !DILocation(line: 0, scope: !8493)
!8498 = !DILocation(line: 534, column: 3, scope: !8493)
!8499 = !DILocation(line: 535, column: 1, scope: !8493)
!8500 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8289, file: !8289, line: 1770, type: !8290, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8501)
!8501 = !{!8502}
!8502 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8500, file: !8289, line: 1770, type: !1317)
!8503 = !DILocation(line: 0, scope: !8500)
!8504 = !DILocation(line: 1772, column: 11, scope: !8500)
!8505 = !DILocation(line: 1772, column: 46, scope: !8500)
!8506 = !DILocation(line: 1772, column: 3, scope: !8500)
!8507 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8289, file: !8289, line: 1737, type: !8290, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8508)
!8508 = !{!8509}
!8509 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8507, file: !8289, line: 1737, type: !1317)
!8510 = !DILocation(line: 0, scope: !8507)
!8511 = !DILocation(line: 1739, column: 11, scope: !8507)
!8512 = !DILocation(line: 1739, column: 3, scope: !8507)
!8513 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8289, file: !8289, line: 1748, type: !8290, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8514)
!8514 = !{!8515}
!8515 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8513, file: !8289, line: 1748, type: !1317)
!8516 = !DILocation(line: 0, scope: !8513)
!8517 = !DILocation(line: 1750, column: 11, scope: !8513)
!8518 = !DILocation(line: 1750, column: 45, scope: !8513)
!8519 = !DILocation(line: 1750, column: 3, scope: !8513)
!8520 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8289, file: !8289, line: 1827, type: !8290, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8521)
!8521 = !{!8522}
!8522 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8520, file: !8289, line: 1827, type: !1317)
!8523 = !DILocation(line: 0, scope: !8520)
!8524 = !DILocation(line: 1829, column: 11, scope: !8520)
!8525 = !DILocation(line: 1829, column: 46, scope: !8520)
!8526 = !DILocation(line: 1829, column: 3, scope: !8520)
!8527 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8289, file: !8289, line: 1992, type: !8352, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8528)
!8528 = !{!8529}
!8529 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8527, file: !8289, line: 1992, type: !1317)
!8530 = !DILocation(line: 0, scope: !8527)
!8531 = !DILocation(line: 1994, column: 3, scope: !8527)
!8532 = !DILocation(line: 1995, column: 1, scope: !8527)
!8533 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8289, file: !8289, line: 1934, type: !8352, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8534)
!8534 = !{!8535, !8536}
!8535 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8533, file: !8289, line: 1934, type: !1317)
!8536 = !DILocalVariable(name: "tmpreg", scope: !8533, file: !8289, line: 1936, type: !192)
!8537 = !DILocation(line: 0, scope: !8533)
!8538 = !DILocation(line: 1936, column: 3, scope: !8533)
!8539 = !DILocation(line: 1936, column: 17, scope: !8533)
!8540 = !DILocation(line: 1937, column: 20, scope: !8533)
!8541 = !DILocation(line: 1937, column: 10, scope: !8533)
!8542 = !DILocation(line: 1938, column: 10, scope: !8533)
!8543 = !DILocation(line: 1939, column: 20, scope: !8533)
!8544 = !DILocation(line: 1939, column: 10, scope: !8533)
!8545 = !DILocation(line: 1940, column: 10, scope: !8533)
!8546 = !DILocation(line: 1941, column: 1, scope: !8533)
!8547 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8289, file: !8289, line: 1877, type: !8352, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8548)
!8548 = !{!8549, !8550}
!8549 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8547, file: !8289, line: 1877, type: !1317)
!8550 = !DILocalVariable(name: "tmpreg", scope: !8547, file: !8289, line: 1879, type: !192)
!8551 = !DILocation(line: 0, scope: !8547)
!8552 = !DILocation(line: 1879, column: 3, scope: !8547)
!8553 = !DILocation(line: 1879, column: 17, scope: !8547)
!8554 = !DILocation(line: 1880, column: 20, scope: !8547)
!8555 = !DILocation(line: 1880, column: 10, scope: !8547)
!8556 = !DILocation(line: 1881, column: 10, scope: !8547)
!8557 = !DILocation(line: 1882, column: 20, scope: !8547)
!8558 = !DILocation(line: 1882, column: 10, scope: !8547)
!8559 = !DILocation(line: 1883, column: 10, scope: !8547)
!8560 = !DILocation(line: 1884, column: 1, scope: !8547)
!8561 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8289, file: !8289, line: 1896, type: !8352, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8562)
!8562 = !{!8563, !8564}
!8563 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8561, file: !8289, line: 1896, type: !1317)
!8564 = !DILocalVariable(name: "tmpreg", scope: !8561, file: !8289, line: 1898, type: !192)
!8565 = !DILocation(line: 0, scope: !8561)
!8566 = !DILocation(line: 1898, column: 3, scope: !8561)
!8567 = !DILocation(line: 1898, column: 17, scope: !8561)
!8568 = !DILocation(line: 1899, column: 20, scope: !8561)
!8569 = !DILocation(line: 1899, column: 10, scope: !8561)
!8570 = !DILocation(line: 1900, column: 10, scope: !8561)
!8571 = !DILocation(line: 1901, column: 20, scope: !8561)
!8572 = !DILocation(line: 1901, column: 10, scope: !8561)
!8573 = !DILocation(line: 1902, column: 10, scope: !8561)
!8574 = !DILocation(line: 1903, column: 1, scope: !8561)
!8575 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8289, file: !8289, line: 1915, type: !8352, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8576)
!8576 = !{!8577, !8578}
!8577 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8575, file: !8289, line: 1915, type: !1317)
!8578 = !DILocalVariable(name: "tmpreg", scope: !8575, file: !8289, line: 1917, type: !192)
!8579 = !DILocation(line: 0, scope: !8575)
!8580 = !DILocation(line: 1917, column: 3, scope: !8575)
!8581 = !DILocation(line: 1917, column: 17, scope: !8575)
!8582 = !DILocation(line: 1918, column: 20, scope: !8575)
!8583 = !DILocation(line: 1918, column: 10, scope: !8575)
!8584 = !DILocation(line: 1919, column: 10, scope: !8575)
!8585 = !DILocation(line: 1920, column: 20, scope: !8575)
!8586 = !DILocation(line: 1920, column: 10, scope: !8575)
!8587 = !DILocation(line: 1921, column: 10, scope: !8575)
!8588 = !DILocation(line: 1922, column: 1, scope: !8575)
!8589 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8289, file: !8289, line: 1814, type: !8290, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8590)
!8590 = !{!8591}
!8591 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8589, file: !8289, line: 1814, type: !1317)
!8592 = !DILocation(line: 0, scope: !8589)
!8593 = !DILocation(line: 1816, column: 11, scope: !8589)
!8594 = !DILocation(line: 1816, column: 46, scope: !8589)
!8595 = !DILocation(line: 1816, column: 3, scope: !8589)
!8596 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8289, file: !8289, line: 2426, type: !8597, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8599)
!8597 = !DISubroutineType(types: !8598)
!8598 = !{null, !1317, !131}
!8599 = !{!8600, !8601}
!8600 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8596, file: !8289, line: 2426, type: !1317)
!8601 = !DILocalVariable(name: "Value", arg: 2, scope: !8596, file: !8289, line: 2426, type: !131)
!8602 = !DILocation(line: 0, scope: !8596)
!8603 = !DILocation(line: 2428, column: 16, scope: !8596)
!8604 = !DILocation(line: 2428, column: 11, scope: !8596)
!8605 = !DILocation(line: 2428, column: 14, scope: !8596)
!8606 = !DILocation(line: 2429, column: 1, scope: !8596)
!8607 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8289, file: !8289, line: 1792, type: !8290, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8608)
!8608 = !{!8609}
!8609 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8607, file: !8289, line: 1792, type: !1317)
!8610 = !DILocation(line: 0, scope: !8607)
!8611 = !DILocation(line: 1794, column: 11, scope: !8607)
!8612 = !DILocation(line: 1794, column: 47, scope: !8607)
!8613 = !DILocation(line: 1794, column: 3, scope: !8607)
!8614 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8289, file: !8289, line: 2403, type: !8615, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8617)
!8615 = !DISubroutineType(types: !8616)
!8616 = !{!131, !1317}
!8617 = !{!8618}
!8618 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8614, file: !8289, line: 2403, type: !1317)
!8619 = !DILocation(line: 0, scope: !8614)
!8620 = !DILocation(line: 2405, column: 20, scope: !8614)
!8621 = !DILocation(line: 2405, column: 10, scope: !8614)
!8622 = !DILocation(line: 2405, column: 3, scope: !8614)
!8623 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1373, file: !1373, line: 1583, type: !1297, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8624)
!8624 = !{!8625, !8626, !8627, !8628, !8629, !8630}
!8625 = !DILocalVariable(name: "dev", arg: 1, scope: !8623, file: !1373, line: 1583, type: !1276)
!8626 = !DILocalVariable(name: "config", scope: !8623, file: !1373, line: 1585, type: !7980)
!8627 = !DILocalVariable(name: "data", scope: !8623, file: !1373, line: 1586, type: !8103)
!8628 = !DILocalVariable(name: "ll_parity", scope: !8623, file: !1373, line: 1587, type: !142)
!8629 = !DILocalVariable(name: "ll_datawidth", scope: !8623, file: !1373, line: 1588, type: !142)
!8630 = !DILocalVariable(name: "err", scope: !8623, file: !1373, line: 1589, type: !103)
!8631 = !DILocation(line: 0, scope: !8623)
!8632 = !DILocation(line: 1585, column: 48, scope: !8623)
!8633 = !DILocation(line: 1586, column: 38, scope: !8623)
!8634 = !DILocation(line: 1591, column: 2, scope: !8623)
!8635 = !DILocation(line: 1593, column: 29, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8623, file: !1373, line: 1593, column: 6)
!8637 = !DILocation(line: 1593, column: 7, scope: !8636)
!8638 = !DILocation(line: 1593, column: 6, scope: !8623)
!8639 = !DILocation(line: 1599, column: 31, scope: !8623)
!8640 = !DILocation(line: 1599, column: 71, scope: !8623)
!8641 = !DILocation(line: 1599, column: 8, scope: !8623)
!8642 = !DILocation(line: 1600, column: 10, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8623, file: !1373, line: 1600, column: 6)
!8644 = !DILocation(line: 1600, column: 6, scope: !8623)
!8645 = !DILocation(line: 1616, column: 36, scope: !8623)
!8646 = !DILocation(line: 1616, column: 8, scope: !8623)
!8647 = !DILocation(line: 1617, column: 10, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8623, file: !1373, line: 1617, column: 6)
!8649 = !DILocation(line: 1617, column: 6, scope: !8623)
!8650 = !DILocation(line: 1621, column: 27, scope: !8623)
!8651 = !DILocation(line: 1621, column: 2, scope: !8623)
!8652 = !DILocation(line: 1624, column: 40, scope: !8623)
!8653 = !DILocation(line: 1624, column: 2, scope: !8623)
!8654 = !DILocation(line: 1630, column: 14, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8623, file: !1373, line: 1630, column: 6)
!8656 = !DILocation(line: 1630, column: 6, scope: !8623)
!8657 = !DILocation(line: 1638, column: 2, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !1373, line: 1634, column: 34)
!8659 = distinct !DILexicalBlock(scope: !8655, file: !1373, line: 1634, column: 13)
!8660 = !DILocation(line: 0, scope: !8655)
!8661 = !DILocation(line: 1649, column: 35, scope: !8623)
!8662 = !DILocation(line: 1649, column: 2, scope: !8623)
!8663 = !DILocation(line: 1654, column: 14, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8623, file: !1373, line: 1654, column: 6)
!8665 = !DILocation(line: 1654, column: 6, scope: !8623)
!8666 = !DILocation(line: 1655, column: 3, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8664, file: !1373, line: 1654, column: 31)
!8668 = !DILocation(line: 1656, column: 2, scope: !8667)
!8669 = !DILocation(line: 1659, column: 37, scope: !8623)
!8670 = !DILocation(line: 1659, column: 2, scope: !8623)
!8671 = !DILocation(line: 1662, column: 14, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8623, file: !1373, line: 1662, column: 6)
!8673 = !DILocation(line: 1662, column: 6, scope: !8623)
!8674 = !DILocation(line: 1663, column: 37, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8672, file: !1373, line: 1662, column: 27)
!8676 = !DILocation(line: 1663, column: 3, scope: !8675)
!8677 = !DILocation(line: 1664, column: 2, scope: !8675)
!8678 = !DILocation(line: 1684, column: 26, scope: !8623)
!8679 = !DILocation(line: 1684, column: 2, scope: !8623)
!8680 = !DILocation(line: 1722, column: 2, scope: !8623)
!8681 = !DILocation(line: 1724, column: 1, scope: !8623)
!8682 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1373, file: !1373, line: 651, type: !8683, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8685)
!8683 = !DISubroutineType(types: !8684)
!8684 = !{null, !1276}
!8685 = !{!8686, !8687, !8688}
!8686 = !DILocalVariable(name: "dev", arg: 1, scope: !8682, file: !1373, line: 651, type: !1276)
!8687 = !DILocalVariable(name: "data", scope: !8682, file: !1373, line: 653, type: !8103)
!8688 = !DILocalVariable(name: "clk", scope: !8682, file: !1373, line: 654, type: !8689)
!8689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1276)
!8690 = !DILocation(line: 0, scope: !8682)
!8691 = !DILocation(line: 653, column: 38, scope: !8682)
!8692 = !DILocation(line: 656, column: 8, scope: !8682)
!8693 = !DILocation(line: 656, column: 14, scope: !8682)
!8694 = !DILocation(line: 657, column: 1, scope: !8682)
!8695 = distinct !DISubprogram(name: "device_is_ready", scope: !7118, file: !7118, line: 47, type: !8696, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8698)
!8696 = !DISubroutineType(types: !8697)
!8697 = !{!134, !1276}
!8698 = !{!8699}
!8699 = !DILocalVariable(name: "dev", arg: 1, scope: !8695, file: !7118, line: 47, type: !1276)
!8700 = !DILocation(line: 0, scope: !8695)
!8701 = !DILocation(line: 55, column: 2, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8695, file: !7118, line: 55, column: 2)
!8703 = !{i64 2155368729}
!8704 = !DILocation(line: 56, column: 9, scope: !8695)
!8705 = !DILocation(line: 56, column: 2, scope: !8695)
!8706 = distinct !DISubprogram(name: "clock_control_on", scope: !730, file: !730, line: 123, type: !1335, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8707)
!8707 = !{!8708, !8709, !8710}
!8708 = !DILocalVariable(name: "dev", arg: 1, scope: !8706, file: !730, line: 123, type: !1276)
!8709 = !DILocalVariable(name: "sys", arg: 2, scope: !8706, file: !730, line: 124, type: !826)
!8710 = !DILocalVariable(name: "api", scope: !8706, file: !730, line: 126, type: !1328)
!8711 = !DILocation(line: 0, scope: !8706)
!8712 = !DILocation(line: 127, column: 49, scope: !8706)
!8713 = !DILocation(line: 129, column: 14, scope: !8706)
!8714 = !DILocation(line: 129, column: 9, scope: !8706)
!8715 = !DILocation(line: 129, column: 2, scope: !8706)
!8716 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1424, file: !1424, line: 342, type: !8717, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8719)
!8717 = !DISubroutineType(types: !8718)
!8718 = !{!103, !1474, !131}
!8719 = !{!8720, !8721, !8722, !8723}
!8720 = !DILocalVariable(name: "config", arg: 1, scope: !8716, file: !1424, line: 342, type: !1474)
!8721 = !DILocalVariable(name: "id", arg: 2, scope: !8716, file: !1424, line: 343, type: !131)
!8722 = !DILocalVariable(name: "ret", scope: !8716, file: !1424, line: 345, type: !103)
!8723 = !DILocalVariable(name: "state", scope: !8716, file: !1424, line: 346, type: !1427)
!8724 = !DILocation(line: 0, scope: !8716)
!8725 = !DILocation(line: 346, column: 2, scope: !8716)
!8726 = !DILocation(line: 348, column: 8, scope: !8716)
!8727 = !DILocation(line: 349, column: 10, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8716, file: !1424, line: 349, column: 6)
!8729 = !DILocation(line: 349, column: 6, scope: !8716)
!8730 = !DILocation(line: 353, column: 44, scope: !8716)
!8731 = !DILocation(line: 353, column: 9, scope: !8716)
!8732 = !DILocation(line: 353, column: 2, scope: !8716)
!8733 = !DILocation(line: 354, column: 1, scope: !8716)
!8734 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8289, file: !8289, line: 497, type: !8448, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8735)
!8735 = !{!8736, !8737, !8738}
!8736 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8734, file: !8289, line: 497, type: !1317)
!8737 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !8734, file: !8289, line: 497, type: !142)
!8738 = !DILocalVariable(name: "val", scope: !8739, file: !8289, line: 499, type: !142)
!8739 = distinct !DILexicalBlock(scope: !8734, file: !8289, line: 499, column: 3)
!8740 = !DILocation(line: 0, scope: !8734)
!8741 = !DILocation(line: 499, column: 3, scope: !8739)
!8742 = !DILocalVariable(name: "addr", arg: 1, scope: !8743, file: !4908, line: 476, type: !1369)
!8743 = distinct !DISubprogram(name: "__LDREXW", scope: !4908, file: !4908, line: 476, type: !8744, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8746)
!8744 = !DISubroutineType(types: !8745)
!8745 = !{!142, !1369}
!8746 = !{!8742, !8747}
!8747 = !DILocalVariable(name: "result", scope: !8743, file: !4908, line: 478, type: !142)
!8748 = !DILocation(line: 0, scope: !8743, inlinedAt: !8749)
!8749 = distinct !DILocation(line: 499, column: 3, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8739, file: !8289, line: 499, column: 3)
!8751 = !DILocation(line: 480, column: 4, scope: !8743, inlinedAt: !8749)
!8752 = !{i64 3758048}
!8753 = !DILocation(line: 499, column: 3, scope: !8750)
!8754 = !DILocation(line: 0, scope: !8739)
!8755 = !DILocalVariable(name: "value", arg: 1, scope: !8756, file: !4908, line: 527, type: !142)
!8756 = distinct !DISubprogram(name: "__STREXW", scope: !4908, file: !4908, line: 527, type: !8757, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8759)
!8757 = !DISubroutineType(types: !8758)
!8758 = !{!142, !142, !1369}
!8759 = !{!8755, !8760, !8761}
!8760 = !DILocalVariable(name: "addr", arg: 2, scope: !8756, file: !4908, line: 527, type: !1369)
!8761 = !DILocalVariable(name: "result", scope: !8756, file: !4908, line: 529, type: !142)
!8762 = !DILocation(line: 0, scope: !8756, inlinedAt: !8763)
!8763 = distinct !DILocation(line: 499, column: 3, scope: !8739)
!8764 = !DILocation(line: 531, column: 4, scope: !8756, inlinedAt: !8763)
!8765 = !{i64 3759484}
!8766 = distinct !{!8766, !8741, !8741}
!8767 = !DILocation(line: 500, column: 1, scope: !8734)
!8768 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8289, file: !8289, line: 850, type: !8457, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8769)
!8769 = !{!8770, !8771, !8772, !8773}
!8770 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8768, file: !8289, line: 850, type: !1317)
!8771 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8768, file: !8289, line: 850, type: !142)
!8772 = !DILocalVariable(name: "Parity", arg: 3, scope: !8768, file: !8289, line: 850, type: !142)
!8773 = !DILocalVariable(name: "StopBits", arg: 4, scope: !8768, file: !8289, line: 851, type: !142)
!8774 = !DILocation(line: 0, scope: !8768)
!8775 = !DILocation(line: 853, column: 3, scope: !8768)
!8776 = !DILocation(line: 854, column: 3, scope: !8768)
!8777 = !DILocation(line: 855, column: 1, scope: !8768)
!8778 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8289, file: !8289, line: 1337, type: !8352, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8779)
!8779 = !{!8780}
!8780 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8778, file: !8289, line: 1337, type: !1317)
!8781 = !DILocation(line: 0, scope: !8778)
!8782 = !DILocation(line: 1339, column: 3, scope: !8778)
!8783 = !DILocation(line: 1340, column: 1, scope: !8778)
!8784 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1424, file: !1424, line: 316, type: !8785, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8787)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{!103, !1474, !1427}
!8787 = !{!8788, !8789, !8790}
!8788 = !DILocalVariable(name: "config", arg: 1, scope: !8784, file: !1424, line: 317, type: !1474)
!8789 = !DILocalVariable(name: "state", arg: 2, scope: !8784, file: !1424, line: 318, type: !1427)
!8790 = !DILocalVariable(name: "reg", scope: !8784, file: !1424, line: 320, type: !22)
!8791 = !DILocation(line: 0, scope: !8784)
!8792 = !DILocation(line: 329, column: 39, scope: !8784)
!8793 = !DILocation(line: 329, column: 52, scope: !8784)
!8794 = !DILocation(line: 329, column: 9, scope: !8784)
!8795 = !DILocation(line: 329, column: 2, scope: !8784)
!8796 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !118, file: !118, line: 730, type: !8696, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1232, retainedNodes: !8797)
!8797 = !{!8798}
!8798 = !DILocalVariable(name: "dev", arg: 1, scope: !8796, file: !118, line: 730, type: !1276)
!8799 = !DILocation(line: 0, scope: !8796)
!8800 = !DILocation(line: 732, column: 9, scope: !8796)
!8801 = !DILocation(line: 732, column: 2, scope: !8796)
!8802 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1591, file: !1591, line: 270, type: !1597, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !8803)
!8803 = !{!8804}
!8804 = !DILocalVariable(name: "dev", arg: 1, scope: !8802, file: !1591, line: 270, type: !1599)
!8805 = !DILocation(line: 0, scope: !8802)
!8806 = !DILocation(line: 274, column: 2, scope: !8802)
!8807 = !DILocation(line: 275, column: 12, scope: !8802)
!8808 = !DILocation(line: 276, column: 15, scope: !8802)
!8809 = !DILocation(line: 277, column: 16, scope: !8802)
!8810 = !DILocation(line: 278, column: 15, scope: !8802)
!8811 = !DILocation(line: 279, column: 16, scope: !8802)
!8812 = !DILocation(line: 282, column: 2, scope: !8802)
!8813 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !415, file: !415, line: 1814, type: !4942, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !8814)
!8814 = !{!8815, !8816}
!8815 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8813, file: !415, line: 1814, type: !680)
!8816 = !DILocalVariable(name: "priority", arg: 2, scope: !8813, file: !415, line: 1814, type: !142)
!8817 = !DILocation(line: 0, scope: !8813)
!8818 = !DILocation(line: 1822, column: 46, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !415, line: 1821, column: 3)
!8820 = distinct !DILexicalBlock(scope: !8813, file: !415, line: 1816, column: 7)
!8821 = !DILocation(line: 1824, column: 1, scope: !8813)
!8822 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1591, file: !1591, line: 118, type: !4845, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !8823)
!8823 = !{!8824, !8825}
!8824 = !DILocalVariable(name: "arg", arg: 1, scope: !8822, file: !1591, line: 118, type: !104)
!8825 = !DILocalVariable(name: "dticks", scope: !8822, file: !1591, line: 121, type: !142)
!8826 = !DILocation(line: 0, scope: !8822)
!8827 = !DILocation(line: 124, column: 2, scope: !8822)
!8828 = !DILocation(line: 129, column: 17, scope: !8822)
!8829 = !DILocation(line: 129, column: 14, scope: !8822)
!8830 = !DILocation(line: 130, column: 15, scope: !8822)
!8831 = !DILocation(line: 145, column: 27, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !1591, line: 132, column: 16)
!8833 = distinct !DILexicalBlock(scope: !8822, file: !1591, line: 132, column: 6)
!8834 = !DILocation(line: 145, column: 25, scope: !8832)
!8835 = !DILocation(line: 145, column: 45, scope: !8832)
!8836 = !DILocation(line: 146, column: 30, scope: !8832)
!8837 = !DILocation(line: 146, column: 20, scope: !8832)
!8838 = !DILocation(line: 147, column: 3, scope: !8832)
!8839 = !DILocation(line: 151, column: 2, scope: !8822)
!8840 = !DILocation(line: 152, column: 1, scope: !8822)
!8841 = distinct !DISubprogram(name: "elapsed", scope: !1591, file: !1591, line: 85, type: !4989, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !8842)
!8842 = !{!8843, !8844, !8845}
!8843 = !DILocalVariable(name: "val1", scope: !8841, file: !1591, line: 87, type: !142)
!8844 = !DILocalVariable(name: "ctrl", scope: !8841, file: !1591, line: 88, type: !142)
!8845 = !DILocalVariable(name: "val2", scope: !8841, file: !1591, line: 89, type: !142)
!8846 = !DILocation(line: 87, column: 27, scope: !8841)
!8847 = !DILocation(line: 0, scope: !8841)
!8848 = !DILocation(line: 88, column: 27, scope: !8841)
!8849 = !DILocation(line: 89, column: 27, scope: !8841)
!8850 = !DILocation(line: 105, column: 12, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8841, file: !1591, line: 105, column: 6)
!8852 = !DILocation(line: 106, column: 6, scope: !8851)
!8853 = !DILocation(line: 107, column: 16, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8851, file: !1591, line: 106, column: 24)
!8855 = !DILocation(line: 111, column: 18, scope: !8854)
!8856 = !DILocation(line: 112, column: 2, scope: !8854)
!8857 = !DILocation(line: 114, column: 20, scope: !8841)
!8858 = !DILocation(line: 114, column: 30, scope: !8841)
!8859 = !DILocation(line: 114, column: 28, scope: !8841)
!8860 = !DILocation(line: 114, column: 2, scope: !8841)
!8861 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1591, file: !1591, line: 154, type: !8862, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !8864)
!8862 = !DISubroutineType(types: !8863)
!8863 = !{null, !654, !134}
!8864 = !{!8865, !8866, !8867, !8868, !8869, !8870, !8871, !8876, !8877}
!8865 = !DILocalVariable(name: "ticks", arg: 1, scope: !8861, file: !1591, line: 154, type: !654)
!8866 = !DILocalVariable(name: "idle", arg: 2, scope: !8861, file: !1591, line: 154, type: !134)
!8867 = !DILocalVariable(name: "delay", scope: !8861, file: !1591, line: 169, type: !142)
!8868 = !DILocalVariable(name: "val1", scope: !8861, file: !1591, line: 170, type: !142)
!8869 = !DILocalVariable(name: "val2", scope: !8861, file: !1591, line: 170, type: !142)
!8870 = !DILocalVariable(name: "last_load_", scope: !8861, file: !1591, line: 171, type: !142)
!8871 = !DILocalVariable(name: "key", scope: !8861, file: !1591, line: 176, type: !8872)
!8872 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !380, line: 106, baseType: !8873)
!8873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !380, line: 32, size: 32, elements: !8874)
!8874 = !{!8875}
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8873, file: !380, line: 33, baseType: !103, size: 32)
!8876 = !DILocalVariable(name: "pending", scope: !8861, file: !1591, line: 178, type: !142)
!8877 = !DILocalVariable(name: "unannounced", scope: !8861, file: !1591, line: 185, type: !142)
!8878 = !DILocation(line: 0, scope: !8861)
!8879 = !DILocation(line: 162, column: 49, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8861, file: !1591, line: 162, column: 6)
!8881 = !DILocation(line: 163, column: 17, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8880, file: !1591, line: 162, column: 78)
!8883 = !DILocation(line: 164, column: 13, scope: !8882)
!8884 = !DILocation(line: 165, column: 3, scope: !8882)
!8885 = !DILocation(line: 171, column: 24, scope: !8861)
!8886 = !DILocation(line: 173, column: 10, scope: !8861)
!8887 = !DILocation(line: 174, column: 10, scope: !8861)
!8888 = !DILocalVariable(name: "l", arg: 1, scope: !8889, file: !380, line: 136, type: !8892)
!8889 = distinct !DISubprogram(name: "k_spin_lock", scope: !380, file: !380, line: 136, type: !8890, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !8893)
!8890 = !DISubroutineType(types: !8891)
!8891 = !{!8872, !8892}
!8892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!8893 = !{!8888, !8894}
!8894 = !DILocalVariable(name: "k", scope: !8889, file: !380, line: 139, type: !8872)
!8895 = !DILocation(line: 0, scope: !8889, inlinedAt: !8896)
!8896 = distinct !DILocation(line: 176, column: 25, scope: !8861)
!8897 = !DILocation(line: 55, column: 2, scope: !8898, inlinedAt: !8902)
!8898 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4734, file: !4734, line: 42, type: !4735, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !8899)
!8899 = !{!8900, !8901}
!8900 = !DILocalVariable(name: "key", scope: !8898, file: !4734, line: 44, type: !32)
!8901 = !DILocalVariable(name: "tmp", scope: !8898, file: !4734, line: 53, type: !32)
!8902 = distinct !DILocation(line: 145, column: 10, scope: !8889, inlinedAt: !8896)
!8903 = !{i64 2278900}
!8904 = !DILocation(line: 0, scope: !8898, inlinedAt: !8902)
!8905 = !DILocation(line: 178, column: 21, scope: !8861)
!8906 = !DILocation(line: 180, column: 18, scope: !8861)
!8907 = !DILocation(line: 182, column: 14, scope: !8861)
!8908 = !DILocation(line: 183, column: 15, scope: !8861)
!8909 = !DILocation(line: 185, column: 39, scope: !8861)
!8910 = !DILocation(line: 185, column: 37, scope: !8861)
!8911 = !DILocation(line: 187, column: 27, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8861, file: !1591, line: 187, column: 6)
!8913 = !DILocation(line: 187, column: 6, scope: !8861)
!8914 = !DILocation(line: 202, column: 27, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8912, file: !1591, line: 195, column: 9)
!8916 = !DILocation(line: 202, column: 48, scope: !8915)
!8917 = !DILocation(line: 203, column: 9, scope: !8915)
!8918 = !DILocation(line: 204, column: 11, scope: !8915)
!8919 = !DILocation(line: 205, column: 13, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8915, file: !1591, line: 205, column: 7)
!8921 = !DILocation(line: 205, column: 7, scope: !8915)
!8922 = !DILocation(line: 0, scope: !8912)
!8923 = !DILocation(line: 212, column: 18, scope: !8861)
!8924 = !DILocation(line: 214, column: 28, scope: !8861)
!8925 = !DILocation(line: 214, column: 16, scope: !8861)
!8926 = !DILocation(line: 215, column: 15, scope: !8861)
!8927 = !DILocation(line: 227, column: 11, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8861, file: !1591, line: 227, column: 6)
!8929 = !DILocation(line: 227, column: 6, scope: !8861)
!8930 = !DILocation(line: 228, column: 15, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8928, file: !1591, line: 227, column: 19)
!8932 = !DILocation(line: 228, column: 38, scope: !8931)
!8933 = !DILocation(line: 228, column: 24, scope: !8931)
!8934 = !DILocation(line: 229, column: 2, scope: !8931)
!8935 = !DILocation(line: 230, column: 24, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8928, file: !1591, line: 229, column: 9)
!8937 = !DILocation(line: 230, column: 15, scope: !8936)
!8938 = !DILocation(line: 0, scope: !8928)
!8939 = !DILocalVariable(name: "key", arg: 2, scope: !8940, file: !380, line: 190, type: !8872)
!8940 = distinct !DISubprogram(name: "k_spin_unlock", scope: !380, file: !380, line: 189, type: !8941, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !8943)
!8941 = !DISubroutineType(types: !8942)
!8942 = !{null, !8892, !8872}
!8943 = !{!8944, !8939}
!8944 = !DILocalVariable(name: "l", arg: 1, scope: !8940, file: !380, line: 189, type: !8892)
!8945 = !DILocation(line: 0, scope: !8940, inlinedAt: !8946)
!8946 = distinct !DILocation(line: 232, column: 2, scope: !8861)
!8947 = !DILocalVariable(name: "key", arg: 1, scope: !8948, file: !4734, line: 84, type: !32)
!8948 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4734, file: !4734, line: 84, type: !4745, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !8949)
!8949 = !{!8947}
!8950 = !DILocation(line: 0, scope: !8948, inlinedAt: !8951)
!8951 = distinct !DILocation(line: 215, column: 2, scope: !8940, inlinedAt: !8946)
!8952 = !DILocation(line: 95, column: 2, scope: !8948, inlinedAt: !8951)
!8953 = !{i64 2279717}
!8954 = !DILocation(line: 234, column: 1, scope: !8861)
!8955 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1591, file: !1591, line: 236, type: !4989, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !8956)
!8956 = !{!8957, !8958}
!8957 = !DILocalVariable(name: "key", scope: !8955, file: !1591, line: 242, type: !8872)
!8958 = !DILocalVariable(name: "cyc", scope: !8955, file: !1591, line: 243, type: !142)
!8959 = !DILocation(line: 0, scope: !8889, inlinedAt: !8960)
!8960 = distinct !DILocation(line: 242, column: 25, scope: !8955)
!8961 = !DILocation(line: 55, column: 2, scope: !8898, inlinedAt: !8962)
!8962 = distinct !DILocation(line: 145, column: 10, scope: !8889, inlinedAt: !8960)
!8963 = !DILocation(line: 0, scope: !8898, inlinedAt: !8962)
!8964 = !DILocation(line: 0, scope: !8955)
!8965 = !DILocation(line: 243, column: 17, scope: !8955)
!8966 = !DILocation(line: 243, column: 29, scope: !8955)
!8967 = !DILocation(line: 243, column: 27, scope: !8955)
!8968 = !DILocation(line: 243, column: 43, scope: !8955)
!8969 = !DILocation(line: 243, column: 41, scope: !8955)
!8970 = !DILocation(line: 0, scope: !8940, inlinedAt: !8971)
!8971 = distinct !DILocation(line: 245, column: 2, scope: !8955)
!8972 = !DILocation(line: 0, scope: !8948, inlinedAt: !8973)
!8973 = distinct !DILocation(line: 215, column: 2, scope: !8940, inlinedAt: !8971)
!8974 = !DILocation(line: 95, column: 2, scope: !8948, inlinedAt: !8973)
!8975 = !DILocation(line: 246, column: 13, scope: !8955)
!8976 = !DILocation(line: 246, column: 2, scope: !8955)
!8977 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1591, file: !1591, line: 249, type: !4989, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !8978)
!8978 = !{!8979, !8980}
!8979 = !DILocalVariable(name: "key", scope: !8977, file: !1591, line: 251, type: !8872)
!8980 = !DILocalVariable(name: "ret", scope: !8977, file: !1591, line: 252, type: !142)
!8981 = !DILocation(line: 0, scope: !8889, inlinedAt: !8982)
!8982 = distinct !DILocation(line: 251, column: 25, scope: !8977)
!8983 = !DILocation(line: 55, column: 2, scope: !8898, inlinedAt: !8984)
!8984 = distinct !DILocation(line: 145, column: 10, scope: !8889, inlinedAt: !8982)
!8985 = !DILocation(line: 0, scope: !8898, inlinedAt: !8984)
!8986 = !DILocation(line: 0, scope: !8977)
!8987 = !DILocation(line: 252, column: 17, scope: !8977)
!8988 = !DILocation(line: 252, column: 29, scope: !8977)
!8989 = !DILocation(line: 252, column: 27, scope: !8977)
!8990 = !DILocation(line: 0, scope: !8940, inlinedAt: !8991)
!8991 = distinct !DILocation(line: 254, column: 2, scope: !8977)
!8992 = !DILocation(line: 0, scope: !8948, inlinedAt: !8993)
!8993 = distinct !DILocation(line: 215, column: 2, scope: !8940, inlinedAt: !8991)
!8994 = !DILocation(line: 95, column: 2, scope: !8948, inlinedAt: !8993)
!8995 = !DILocation(line: 255, column: 2, scope: !8977)
!8996 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1591, file: !1591, line: 258, type: !2876, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !381)
!8997 = !DILocation(line: 260, column: 6, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8996, file: !1591, line: 260, column: 6)
!8999 = !DILocation(line: 260, column: 16, scope: !8998)
!9000 = !DILocation(line: 260, column: 6, scope: !8996)
!9001 = !DILocation(line: 261, column: 17, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8998, file: !1591, line: 260, column: 34)
!9003 = !DILocation(line: 262, column: 2, scope: !9002)
!9004 = !DILocation(line: 263, column: 1, scope: !8996)
!9005 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1591, file: !1591, line: 265, type: !2876, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1511, retainedNodes: !381)
!9006 = !DILocation(line: 267, column: 16, scope: !9005)
!9007 = !DILocation(line: 268, column: 1, scope: !9005)
!9008 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9009, file: !9009, line: 9, type: !9010, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !9033)
!9009 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9010 = !DISubroutineType(types: !9011)
!9011 = !{!103, !9012, !131, !9032}
!9012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9013, size: 32)
!9013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9014)
!9014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1424, line: 60, size: 64, elements: !9015)
!9015 = !{!9016, !9031}
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9014, file: !1424, line: 69, baseType: !9017, size: 32)
!9017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9018, size: 32)
!9018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9019)
!9019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1424, line: 50, size: 64, elements: !9020)
!9020 = !{!9021, !9029, !9030}
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9019, file: !1424, line: 52, baseType: !9022, size: 32)
!9022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9023, size: 32)
!9023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9024)
!9024 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1435, line: 37, baseType: !9025)
!9025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1435, line: 32, size: 64, elements: !9026)
!9026 = !{!9027, !9028}
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9025, file: !1435, line: 34, baseType: !142, size: 32)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9025, file: !1435, line: 36, baseType: !142, size: 32, offset: 32)
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9019, file: !1424, line: 54, baseType: !131, size: 8, offset: 32)
!9030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9019, file: !1424, line: 56, baseType: !131, size: 8, offset: 40)
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9014, file: !1424, line: 71, baseType: !131, size: 8, offset: 32)
!9032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9017, size: 32)
!9033 = !{!9034, !9035, !9036}
!9034 = !DILocalVariable(name: "config", arg: 1, scope: !9008, file: !9009, line: 9, type: !9012)
!9035 = !DILocalVariable(name: "id", arg: 2, scope: !9008, file: !9009, line: 9, type: !131)
!9036 = !DILocalVariable(name: "state", arg: 3, scope: !9008, file: !9009, line: 10, type: !9032)
!9037 = !DILocation(line: 0, scope: !9008)
!9038 = !DILocation(line: 12, column: 20, scope: !9008)
!9039 = !DILocation(line: 13, column: 27, scope: !9008)
!9040 = !DILocation(line: 13, column: 42, scope: !9008)
!9041 = !DILocation(line: 13, column: 19, scope: !9008)
!9042 = !DILocation(line: 13, column: 16, scope: !9008)
!9043 = !DILocation(line: 13, column: 2, scope: !9008)
!9044 = distinct !{!9044, !9043, !9045}
!9045 = !DILocation(line: 19, column: 2, scope: !9008)
!9046 = !DILocation(line: 14, column: 23, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9048, file: !9009, line: 14, column: 7)
!9048 = distinct !DILexicalBlock(scope: !9008, file: !9009, line: 13, column: 54)
!9049 = !DILocation(line: 14, column: 10, scope: !9047)
!9050 = !DILocation(line: 18, column: 11, scope: !9048)
!9051 = !DILocation(line: 14, column: 7, scope: !9048)
!9052 = !DILocation(line: 22, column: 1, scope: !9008)
!9053 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1708, file: !1708, line: 193, type: !9054, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1626, retainedNodes: !9063)
!9054 = !DISubroutineType(types: !9055)
!9055 = !{!103, !9056, !131, !22}
!9056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9057, size: 32)
!9057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9058)
!9058 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1435, line: 37, baseType: !9059)
!9059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1435, line: 32, size: 64, elements: !9060)
!9060 = !{!9061, !9062}
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9059, file: !1435, line: 34, baseType: !142, size: 32)
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9059, file: !1435, line: 36, baseType: !142, size: 32, offset: 32)
!9063 = !{!9064, !9065, !9066, !9067, !9068, !9069, !9070, !9071, !9073}
!9064 = !DILocalVariable(name: "pins", arg: 1, scope: !9053, file: !1708, line: 193, type: !9056)
!9065 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9053, file: !1708, line: 193, type: !131)
!9066 = !DILocalVariable(name: "reg", arg: 3, scope: !9053, file: !1708, line: 194, type: !22)
!9067 = !DILocalVariable(name: "pin", scope: !9053, file: !1708, line: 196, type: !142)
!9068 = !DILocalVariable(name: "mux", scope: !9053, file: !1708, line: 196, type: !142)
!9069 = !DILocalVariable(name: "pin_cgf", scope: !9053, file: !1708, line: 197, type: !142)
!9070 = !DILocalVariable(name: "ret", scope: !9053, file: !1708, line: 198, type: !103)
!9071 = !DILocalVariable(name: "i", scope: !9072, file: !1708, line: 209, type: !131)
!9072 = distinct !DILexicalBlock(scope: !9053, file: !1708, line: 209, column: 2)
!9073 = !DILocalVariable(name: "gpio_out", scope: !9074, file: !1708, line: 239, type: !142)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !1708, line: 238, column: 55)
!9075 = distinct !DILexicalBlock(scope: !9076, file: !1708, line: 238, column: 14)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !1708, line: 236, column: 14)
!9077 = distinct !DILexicalBlock(scope: !9078, file: !1708, line: 234, column: 7)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !1708, line: 209, column: 41)
!9079 = distinct !DILexicalBlock(scope: !9072, file: !1708, line: 209, column: 2)
!9080 = !DILocation(line: 0, scope: !9053)
!9081 = !DILocation(line: 0, scope: !9072)
!9082 = !DILocation(line: 209, column: 25, scope: !9079)
!9083 = !DILocation(line: 209, column: 2, scope: !9072)
!9084 = distinct !{!9084, !9083, !9085}
!9085 = !DILocation(line: 259, column: 2, scope: !9072)
!9086 = !DILocation(line: 210, column: 17, scope: !9078)
!9087 = !DILocation(line: 234, column: 7, scope: !9077)
!9088 = !DILocation(line: 234, column: 33, scope: !9077)
!9089 = !DILocation(line: 234, column: 7, scope: !9078)
!9090 = !DILocation(line: 235, column: 22, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9077, file: !1708, line: 234, column: 49)
!9092 = !DILocation(line: 235, column: 29, scope: !9091)
!9093 = !DILocation(line: 236, column: 3, scope: !9091)
!9094 = !DILocation(line: 236, column: 14, scope: !9077)
!9095 = !DILocation(line: 239, column: 32, scope: !9074)
!9096 = !DILocation(line: 0, scope: !9074)
!9097 = !DILocation(line: 241, column: 8, scope: !9074)
!9098 = !DILocation(line: 246, column: 3, scope: !9074)
!9099 = !DILocation(line: 252, column: 9, scope: !9078)
!9100 = !DILocation(line: 255, column: 9, scope: !9078)
!9101 = !DILocation(line: 256, column: 11, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9078, file: !1708, line: 256, column: 7)
!9103 = !DILocation(line: 209, column: 37, scope: !9079)
!9104 = !DILocation(line: 256, column: 7, scope: !9078)
!9105 = !DILocation(line: 262, column: 1, scope: !9053)
!9106 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1708, file: !1708, line: 176, type: !9107, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1626, retainedNodes: !9109)
!9107 = !DISubroutineType(types: !9108)
!9108 = !{!103, !142, !142, !142}
!9109 = !{!9110, !9111, !9112, !9113}
!9110 = !DILocalVariable(name: "pin", arg: 1, scope: !9106, file: !1708, line: 176, type: !142)
!9111 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !9106, file: !1708, line: 176, type: !142)
!9112 = !DILocalVariable(name: "pin_func", arg: 3, scope: !9106, file: !1708, line: 176, type: !142)
!9113 = !DILocalVariable(name: "port_device", scope: !9106, file: !1708, line: 178, type: !1638)
!9114 = !DILocation(line: 0, scope: !9106)
!9115 = !DILocation(line: 180, column: 22, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9106, file: !1708, line: 180, column: 6)
!9117 = !DILocation(line: 180, column: 6, scope: !9106)
!9118 = !DILocation(line: 180, column: 6, scope: !9116)
!9119 = !DILocation(line: 184, column: 16, scope: !9106)
!9120 = !DILocation(line: 186, column: 19, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9106, file: !1708, line: 186, column: 6)
!9122 = !DILocation(line: 186, column: 28, scope: !9121)
!9123 = !DILocation(line: 186, column: 33, scope: !9121)
!9124 = !DILocation(line: 186, column: 6, scope: !9106)
!9125 = !DILocation(line: 190, column: 43, scope: !9106)
!9126 = !DILocation(line: 190, column: 9, scope: !9106)
!9127 = !DILocation(line: 190, column: 2, scope: !9106)
!9128 = !DILocation(line: 191, column: 1, scope: !9106)
!9129 = distinct !DISubprogram(name: "device_is_ready", scope: !7118, file: !7118, line: 47, type: !9130, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1626, retainedNodes: !9132)
!9130 = !DISubroutineType(types: !9131)
!9131 = !{!134, !1638}
!9132 = !{!9133}
!9133 = !DILocalVariable(name: "dev", arg: 1, scope: !9129, file: !7118, line: 47, type: !1638)
!9134 = !DILocation(line: 0, scope: !9129)
!9135 = !DILocation(line: 55, column: 2, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9129, file: !7118, line: 55, column: 2)
!9137 = !{i64 2149512909}
!9138 = !DILocation(line: 56, column: 9, scope: !9129)
!9139 = !DILocation(line: 56, column: 2, scope: !9129)
!9140 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !118, file: !118, line: 730, type: !9130, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1626, retainedNodes: !9141)
!9141 = !{!9142}
!9142 = !DILocalVariable(name: "dev", arg: 1, scope: !9140, file: !118, line: 730, type: !1638)
!9143 = !DILocation(line: 0, scope: !9140)
!9144 = !DILocation(line: 732, column: 9, scope: !9140)
!9145 = !DILocation(line: 732, column: 2, scope: !9140)
!9146 = distinct !DISubprogram(name: "SystemInit", scope: !1760, file: !1760, line: 167, type: !2876, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !381)
!9147 = !DILocation(line: 182, column: 1, scope: !9146)
!9148 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1760, file: !1760, line: 220, type: !2876, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !9149)
!9149 = !{!9150, !9151, !9152, !9153, !9154}
!9150 = !DILocalVariable(name: "tmp", scope: !9148, file: !1760, line: 222, type: !142)
!9151 = !DILocalVariable(name: "pllvco", scope: !9148, file: !1760, line: 222, type: !142)
!9152 = !DILocalVariable(name: "pllp", scope: !9148, file: !1760, line: 222, type: !142)
!9153 = !DILocalVariable(name: "pllsource", scope: !9148, file: !1760, line: 222, type: !142)
!9154 = !DILocalVariable(name: "pllm", scope: !9148, file: !1760, line: 222, type: !142)
!9155 = !DILocation(line: 0, scope: !9148)
!9156 = !DILocation(line: 225, column: 14, scope: !9148)
!9157 = !DILocation(line: 225, column: 19, scope: !9148)
!9158 = !DILocation(line: 227, column: 3, scope: !9148)
!9159 = !DILocation(line: 240, column: 25, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9148, file: !1760, line: 228, column: 3)
!9161 = !DILocation(line: 241, column: 19, scope: !9160)
!9162 = !DILocation(line: 241, column: 27, scope: !9160)
!9163 = !DILocation(line: 0, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9160, file: !1760, line: 243, column: 11)
!9165 = !DILocation(line: 254, column: 22, scope: !9160)
!9166 = !DILocation(line: 254, column: 62, scope: !9160)
!9167 = !DILocation(line: 255, column: 31, scope: !9160)
!9168 = !DILocation(line: 256, column: 7, scope: !9160)
!9169 = !DILocation(line: 0, scope: !9160)
!9170 = !DILocation(line: 263, column: 30, scope: !9148)
!9171 = !DILocation(line: 263, column: 52, scope: !9148)
!9172 = !DILocation(line: 263, column: 9, scope: !9148)
!9173 = !DILocation(line: 265, column: 19, scope: !9148)
!9174 = !DILocation(line: 266, column: 1, scope: !9148)
!9175 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !9176, file: !9176, line: 87, type: !9177, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !9216)
!9176 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9177 = !DISubroutineType(types: !9178)
!9178 = !{!9179, !9180}
!9179 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2710, line: 44, baseType: !2709)
!9180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9181, size: 32)
!9181 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !9182, line: 172, baseType: !9183)
!9182 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9182, line: 121, size: 736, elements: !9184)
!9184 = !{!9185, !9186, !9195, !9203, !9204, !9205, !9206, !9207, !9208, !9209, !9210, !9211, !9212, !9213, !9214, !9215}
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !9183, file: !9182, line: 123, baseType: !142, size: 32)
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !9183, file: !9182, line: 126, baseType: !9187, size: 160, offset: 32)
!9187 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !9182, line: 97, baseType: !9188)
!9188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9182, line: 79, size: 160, elements: !9189)
!9189 = !{!9190, !9191, !9192, !9193, !9194}
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !9188, file: !9182, line: 81, baseType: !142, size: 32)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !9188, file: !9182, line: 84, baseType: !142, size: 32, offset: 32)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !9188, file: !9182, line: 87, baseType: !142, size: 32, offset: 64)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !9188, file: !9182, line: 90, baseType: !142, size: 32, offset: 96)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !9188, file: !9182, line: 94, baseType: !142, size: 32, offset: 128)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !9183, file: !9182, line: 129, baseType: !9196, size: 128, offset: 192)
!9196 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !9182, line: 116, baseType: !9197)
!9197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9182, line: 102, size: 128, elements: !9198)
!9198 = !{!9199, !9200, !9201, !9202}
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !9197, file: !9182, line: 104, baseType: !142, size: 32)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !9197, file: !9182, line: 107, baseType: !142, size: 32, offset: 32)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !9197, file: !9182, line: 110, baseType: !142, size: 32, offset: 64)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !9197, file: !9182, line: 113, baseType: !142, size: 32, offset: 96)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !9183, file: !9182, line: 132, baseType: !142, size: 32, offset: 320)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !9183, file: !9182, line: 136, baseType: !142, size: 32, offset: 352)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !9183, file: !9182, line: 140, baseType: !142, size: 32, offset: 384)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !9183, file: !9182, line: 143, baseType: !142, size: 32, offset: 416)
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !9183, file: !9182, line: 146, baseType: !142, size: 32, offset: 448)
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !9183, file: !9182, line: 149, baseType: !142, size: 32, offset: 480)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !9183, file: !9182, line: 152, baseType: !142, size: 32, offset: 512)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !9183, file: !9182, line: 155, baseType: !142, size: 32, offset: 544)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !9183, file: !9182, line: 158, baseType: !142, size: 32, offset: 576)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !9183, file: !9182, line: 161, baseType: !142, size: 32, offset: 608)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !9183, file: !9182, line: 164, baseType: !142, size: 32, offset: 640)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !9183, file: !9182, line: 167, baseType: !142, size: 32, offset: 672)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !9183, file: !9182, line: 170, baseType: !131, size: 8, offset: 704)
!9216 = !{!9217, !9218, !9219, !9220, !9221, !9222, !9223, !9224, !9225, !9226, !9227}
!9217 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9175, file: !9176, line: 87, type: !9180)
!9218 = !DILocalVariable(name: "tickstart", scope: !9175, file: !9176, line: 89, type: !142)
!9219 = !DILocalVariable(name: "tmpreg1", scope: !9175, file: !9176, line: 90, type: !142)
!9220 = !DILocalVariable(name: "plli2sp", scope: !9175, file: !9176, line: 91, type: !142)
!9221 = !DILocalVariable(name: "plli2sq", scope: !9175, file: !9176, line: 92, type: !142)
!9222 = !DILocalVariable(name: "plli2sr", scope: !9175, file: !9176, line: 93, type: !142)
!9223 = !DILocalVariable(name: "pllsaip", scope: !9175, file: !9176, line: 94, type: !142)
!9224 = !DILocalVariable(name: "pllsaiq", scope: !9175, file: !9176, line: 95, type: !142)
!9225 = !DILocalVariable(name: "plli2sused", scope: !9175, file: !9176, line: 96, type: !142)
!9226 = !DILocalVariable(name: "pllsaiused", scope: !9175, file: !9176, line: 97, type: !142)
!9227 = !DILocalVariable(name: "tmpreg", scope: !9228, file: !9176, line: 184, type: !192)
!9228 = distinct !DILexicalBlock(scope: !9229, file: !9176, line: 184, column: 5)
!9229 = distinct !DILexicalBlock(scope: !9230, file: !9176, line: 179, column: 3)
!9230 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 178, column: 6)
!9231 = !DILocation(line: 0, scope: !9175)
!9232 = !DILocation(line: 103, column: 23, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 103, column: 6)
!9234 = !DILocation(line: 103, column: 45, scope: !9233)
!9235 = !DILocation(line: 103, column: 71, scope: !9233)
!9236 = !DILocation(line: 103, column: 6, scope: !9175)
!9237 = !DILocation(line: 109, column: 5, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9233, file: !9176, line: 104, column: 3)
!9239 = !DILocation(line: 111, column: 23, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9238, file: !9176, line: 111, column: 8)
!9241 = !DILocation(line: 111, column: 45, scope: !9240)
!9242 = !DILocation(line: 111, column: 8, scope: !9238)
!9243 = !DILocation(line: 119, column: 23, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 119, column: 6)
!9245 = !DILocation(line: 119, column: 45, scope: !9244)
!9246 = !DILocation(line: 119, column: 71, scope: !9244)
!9247 = !DILocation(line: 119, column: 6, scope: !9175)
!9248 = !DILocation(line: 125, column: 5, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9244, file: !9176, line: 120, column: 3)
!9250 = !DILocation(line: 127, column: 23, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9249, file: !9176, line: 127, column: 8)
!9252 = !DILocation(line: 127, column: 45, scope: !9251)
!9253 = !DILocation(line: 127, column: 8, scope: !9249)
!9254 = !DILocation(line: 135, column: 23, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 135, column: 6)
!9256 = !DILocation(line: 135, column: 45, scope: !9255)
!9257 = !DILocation(line: 135, column: 67, scope: !9255)
!9258 = !DILocation(line: 135, column: 6, scope: !9175)
!9259 = !DILocation(line: 141, column: 5, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9255, file: !9176, line: 136, column: 3)
!9261 = !DILocation(line: 143, column: 23, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9260, file: !9176, line: 143, column: 8)
!9263 = !DILocation(line: 143, column: 42, scope: !9262)
!9264 = !DILocation(line: 143, column: 8, scope: !9260)
!9265 = !DILocation(line: 148, column: 42, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9260, file: !9176, line: 148, column: 8)
!9267 = !DILocation(line: 148, column: 8, scope: !9260)
!9268 = !DILocation(line: 156, column: 23, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 156, column: 6)
!9270 = !DILocation(line: 156, column: 45, scope: !9269)
!9271 = !DILocation(line: 156, column: 67, scope: !9269)
!9272 = !DILocation(line: 156, column: 6, scope: !9175)
!9273 = !DILocation(line: 162, column: 5, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9269, file: !9176, line: 157, column: 3)
!9275 = !DILocation(line: 165, column: 23, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9274, file: !9176, line: 165, column: 8)
!9277 = !DILocation(line: 165, column: 42, scope: !9276)
!9278 = !DILocation(line: 165, column: 8, scope: !9274)
!9279 = !DILocation(line: 170, column: 42, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9274, file: !9176, line: 170, column: 8)
!9281 = !DILocation(line: 170, column: 8, scope: !9274)
!9282 = !DILocation(line: 178, column: 23, scope: !9230)
!9283 = !DILocation(line: 178, column: 45, scope: !9230)
!9284 = !DILocation(line: 178, column: 66, scope: !9230)
!9285 = !DILocation(line: 178, column: 6, scope: !9175)
!9286 = !DILocation(line: 184, column: 5, scope: !9228)
!9287 = !DILocation(line: 184, column: 5, scope: !9229)
!9288 = !DILocation(line: 187, column: 13, scope: !9229)
!9289 = !DILocation(line: 190, column: 17, scope: !9229)
!9290 = !DILocation(line: 192, column: 5, scope: !9229)
!9291 = !DILocation(line: 192, column: 17, scope: !9229)
!9292 = !DILocation(line: 192, column: 20, scope: !9229)
!9293 = !DILocation(line: 192, column: 34, scope: !9229)
!9294 = !DILocation(line: 194, column: 11, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !9176, line: 194, column: 10)
!9296 = distinct !DILexicalBlock(scope: !9229, file: !9176, line: 193, column: 5)
!9297 = !DILocation(line: 194, column: 25, scope: !9295)
!9298 = !DILocation(line: 194, column: 39, scope: !9295)
!9299 = !DILocation(line: 194, column: 10, scope: !9296)
!9300 = distinct !{!9300, !9290, !9301}
!9301 = !DILocation(line: 198, column: 5, scope: !9229)
!9302 = !DILocation(line: 200, column: 21, scope: !9229)
!9303 = !DILocation(line: 200, column: 26, scope: !9229)
!9304 = !DILocation(line: 201, column: 17, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9229, file: !9176, line: 201, column: 8)
!9306 = !DILocation(line: 201, column: 33, scope: !9305)
!9307 = !DILocation(line: 201, column: 66, scope: !9305)
!9308 = !DILocation(line: 201, column: 84, scope: !9305)
!9309 = !DILocation(line: 201, column: 47, scope: !9305)
!9310 = !DILocation(line: 201, column: 8, scope: !9229)
!9311 = !DILocation(line: 204, column: 23, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9305, file: !9176, line: 202, column: 5)
!9313 = !DILocation(line: 204, column: 28, scope: !9312)
!9314 = !DILocation(line: 206, column: 7, scope: !9312)
!9315 = !DILocation(line: 207, column: 7, scope: !9312)
!9316 = !DILocation(line: 209, column: 17, scope: !9312)
!9317 = !DILocation(line: 212, column: 10, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9312, file: !9176, line: 212, column: 10)
!9319 = !DILocation(line: 212, column: 10, scope: !9312)
!9320 = !DILocation(line: 215, column: 21, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9318, file: !9176, line: 213, column: 7)
!9322 = !DILocation(line: 218, column: 9, scope: !9321)
!9323 = !DILocation(line: 218, column: 15, scope: !9321)
!9324 = !DILocation(line: 218, column: 51, scope: !9321)
!9325 = !DILocation(line: 220, column: 15, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9327, file: !9176, line: 220, column: 14)
!9327 = distinct !DILexicalBlock(scope: !9321, file: !9176, line: 219, column: 9)
!9328 = !DILocation(line: 220, column: 29, scope: !9326)
!9329 = !DILocation(line: 220, column: 43, scope: !9326)
!9330 = !DILocation(line: 220, column: 14, scope: !9327)
!9331 = distinct !{!9331, !9322, !9332}
!9332 = !DILocation(line: 224, column: 9, scope: !9321)
!9333 = !DILocation(line: 227, column: 5, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9229, file: !9176, line: 227, column: 5)
!9335 = !DILocation(line: 232, column: 23, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 232, column: 6)
!9337 = !DILocation(line: 228, column: 3, scope: !9229)
!9338 = !DILocation(line: 232, column: 45, scope: !9336)
!9339 = !DILocation(line: 232, column: 66, scope: !9336)
!9340 = !DILocation(line: 232, column: 6, scope: !9175)
!9341 = !DILocation(line: 235, column: 5, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9336, file: !9176, line: 233, column: 3)
!9343 = !DILocation(line: 240, column: 23, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 240, column: 6)
!9345 = !DILocation(line: 236, column: 3, scope: !9342)
!9346 = !DILocation(line: 240, column: 45, scope: !9344)
!9347 = !DILocation(line: 240, column: 70, scope: !9344)
!9348 = !DILocation(line: 240, column: 6, scope: !9175)
!9349 = !DILocation(line: 246, column: 5, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9344, file: !9176, line: 241, column: 3)
!9351 = !DILocation(line: 251, column: 23, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 251, column: 6)
!9353 = !DILocation(line: 247, column: 3, scope: !9350)
!9354 = !DILocation(line: 251, column: 45, scope: !9352)
!9355 = !DILocation(line: 251, column: 66, scope: !9352)
!9356 = !DILocation(line: 251, column: 6, scope: !9175)
!9357 = !DILocation(line: 257, column: 5, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9352, file: !9176, line: 252, column: 3)
!9359 = !DILocation(line: 262, column: 23, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 262, column: 6)
!9361 = !DILocation(line: 258, column: 3, scope: !9358)
!9362 = !DILocation(line: 262, column: 45, scope: !9360)
!9363 = !DILocation(line: 262, column: 68, scope: !9360)
!9364 = !DILocation(line: 262, column: 6, scope: !9175)
!9365 = !DILocation(line: 268, column: 5, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9360, file: !9176, line: 263, column: 3)
!9367 = !DILocation(line: 271, column: 23, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9366, file: !9176, line: 271, column: 8)
!9369 = !DILocation(line: 271, column: 43, scope: !9368)
!9370 = !DILocation(line: 271, column: 8, scope: !9366)
!9371 = !DILocation(line: 279, column: 23, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 279, column: 6)
!9373 = !DILocation(line: 279, column: 45, scope: !9372)
!9374 = !DILocation(line: 279, column: 67, scope: !9372)
!9375 = !DILocation(line: 279, column: 6, scope: !9175)
!9376 = !DILocation(line: 285, column: 5, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9372, file: !9176, line: 280, column: 3)
!9378 = !DILocation(line: 290, column: 23, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 290, column: 6)
!9380 = !DILocation(line: 286, column: 3, scope: !9377)
!9381 = !DILocation(line: 290, column: 45, scope: !9379)
!9382 = !DILocation(line: 290, column: 70, scope: !9379)
!9383 = !DILocation(line: 290, column: 6, scope: !9175)
!9384 = !DILocation(line: 296, column: 5, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9379, file: !9176, line: 291, column: 3)
!9386 = !DILocation(line: 298, column: 23, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9385, file: !9176, line: 298, column: 8)
!9388 = !DILocation(line: 298, column: 43, scope: !9387)
!9389 = !DILocation(line: 298, column: 8, scope: !9385)
!9390 = !DILocation(line: 308, column: 44, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 308, column: 6)
!9392 = !DILocation(line: 308, column: 18, scope: !9391)
!9393 = !DILocation(line: 308, column: 25, scope: !9391)
!9394 = !DILocation(line: 308, column: 65, scope: !9391)
!9395 = !DILocation(line: 308, column: 6, scope: !9175)
!9396 = !DILocation(line: 311, column: 5, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9391, file: !9176, line: 309, column: 3)
!9398 = !DILocation(line: 313, column: 17, scope: !9397)
!9399 = !DILocation(line: 315, column: 5, scope: !9397)
!9400 = !DILocation(line: 315, column: 11, scope: !9397)
!9401 = !DILocation(line: 317, column: 11, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9403, file: !9176, line: 317, column: 10)
!9403 = distinct !DILexicalBlock(scope: !9397, file: !9176, line: 316, column: 5)
!9404 = !DILocation(line: 317, column: 25, scope: !9402)
!9405 = !DILocation(line: 317, column: 39, scope: !9402)
!9406 = !DILocation(line: 317, column: 10, scope: !9403)
!9407 = distinct !{!9407, !9399, !9408}
!9408 = !DILocation(line: 322, column: 5, scope: !9397)
!9409 = !DILocation(line: 329, column: 27, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9397, file: !9176, line: 329, column: 8)
!9411 = !DILocation(line: 329, column: 49, scope: !9410)
!9412 = !DILocation(line: 329, column: 75, scope: !9410)
!9413 = !DILocation(line: 329, column: 102, scope: !9410)
!9414 = !DILocation(line: 329, column: 121, scope: !9410)
!9415 = !DILocation(line: 329, column: 143, scope: !9410)
!9416 = !DILocation(line: 329, column: 176, scope: !9410)
!9417 = !DILocation(line: 330, column: 49, scope: !9410)
!9418 = !DILocation(line: 330, column: 75, scope: !9410)
!9419 = !DILocation(line: 330, column: 102, scope: !9410)
!9420 = !DILocation(line: 330, column: 121, scope: !9410)
!9421 = !DILocation(line: 330, column: 143, scope: !9410)
!9422 = !DILocation(line: 329, column: 8, scope: !9397)
!9423 = !DILocation(line: 336, column: 26, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9410, file: !9176, line: 331, column: 5)
!9425 = !DILocation(line: 336, column: 100, scope: !9424)
!9426 = !DILocation(line: 337, column: 24, scope: !9424)
!9427 = !DILocation(line: 337, column: 61, scope: !9424)
!9428 = !DILocation(line: 341, column: 7, scope: !9424)
!9429 = !DILocation(line: 345, column: 27, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9397, file: !9176, line: 345, column: 8)
!9431 = !DILocation(line: 342, column: 5, scope: !9424)
!9432 = !DILocation(line: 345, column: 49, scope: !9430)
!9433 = !DILocation(line: 345, column: 71, scope: !9430)
!9434 = !DILocation(line: 345, column: 94, scope: !9430)
!9435 = !DILocation(line: 345, column: 113, scope: !9430)
!9436 = !DILocation(line: 345, column: 132, scope: !9430)
!9437 = !DILocation(line: 345, column: 162, scope: !9430)
!9438 = !DILocation(line: 346, column: 49, scope: !9430)
!9439 = !DILocation(line: 346, column: 71, scope: !9430)
!9440 = !DILocation(line: 346, column: 94, scope: !9430)
!9441 = !DILocation(line: 346, column: 113, scope: !9430)
!9442 = !DILocation(line: 346, column: 132, scope: !9430)
!9443 = !DILocation(line: 345, column: 8, scope: !9397)
!9444 = !DILocation(line: 354, column: 26, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9430, file: !9176, line: 347, column: 5)
!9446 = !DILocation(line: 354, column: 100, scope: !9445)
!9447 = !DILocation(line: 355, column: 24, scope: !9445)
!9448 = !DILocation(line: 355, column: 61, scope: !9445)
!9449 = !DILocation(line: 360, column: 7, scope: !9445)
!9450 = !DILocation(line: 363, column: 7, scope: !9445)
!9451 = !DILocation(line: 367, column: 26, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9397, file: !9176, line: 367, column: 8)
!9453 = !DILocation(line: 364, column: 5, scope: !9445)
!9454 = !DILocation(line: 367, column: 48, scope: !9452)
!9455 = !DILocation(line: 367, column: 73, scope: !9452)
!9456 = !DILocation(line: 367, column: 99, scope: !9452)
!9457 = !DILocation(line: 367, column: 118, scope: !9452)
!9458 = !DILocation(line: 367, column: 138, scope: !9452)
!9459 = !DILocation(line: 367, column: 8, scope: !9397)
!9460 = !DILocation(line: 372, column: 26, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9452, file: !9176, line: 368, column: 5)
!9462 = !DILocation(line: 373, column: 24, scope: !9461)
!9463 = !DILocation(line: 373, column: 61, scope: !9461)
!9464 = !DILocation(line: 377, column: 7, scope: !9461)
!9465 = !DILocation(line: 381, column: 24, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9397, file: !9176, line: 381, column: 8)
!9467 = !DILocation(line: 378, column: 5, scope: !9461)
!9468 = !DILocation(line: 381, column: 45, scope: !9466)
!9469 = !DILocation(line: 381, column: 69, scope: !9466)
!9470 = !DILocation(line: 381, column: 8, scope: !9397)
!9471 = !DILocation(line: 390, column: 7, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9466, file: !9176, line: 382, column: 5)
!9473 = !DILocation(line: 391, column: 5, scope: !9472)
!9474 = !DILocation(line: 394, column: 5, scope: !9397)
!9475 = !DILocation(line: 396, column: 17, scope: !9397)
!9476 = !DILocation(line: 398, column: 5, scope: !9397)
!9477 = !DILocation(line: 398, column: 11, scope: !9397)
!9478 = !DILocation(line: 398, column: 51, scope: !9397)
!9479 = !DILocation(line: 400, column: 11, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9481, file: !9176, line: 400, column: 10)
!9481 = distinct !DILexicalBlock(scope: !9397, file: !9176, line: 399, column: 5)
!9482 = !DILocation(line: 400, column: 25, scope: !9480)
!9483 = !DILocation(line: 400, column: 39, scope: !9480)
!9484 = !DILocation(line: 400, column: 10, scope: !9481)
!9485 = distinct !{!9485, !9476, !9486}
!9486 = !DILocation(line: 405, column: 5, scope: !9397)
!9487 = !DILocation(line: 411, column: 17, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9175, file: !9176, line: 411, column: 6)
!9489 = !DILocation(line: 411, column: 6, scope: !9175)
!9490 = !DILocation(line: 414, column: 5, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9488, file: !9176, line: 412, column: 3)
!9492 = !DILocation(line: 416, column: 17, scope: !9491)
!9493 = !DILocation(line: 418, column: 5, scope: !9491)
!9494 = !DILocation(line: 418, column: 11, scope: !9491)
!9495 = !DILocation(line: 420, column: 11, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !9176, line: 420, column: 10)
!9497 = distinct !DILexicalBlock(scope: !9491, file: !9176, line: 419, column: 5)
!9498 = !DILocation(line: 420, column: 25, scope: !9496)
!9499 = !DILocation(line: 420, column: 39, scope: !9496)
!9500 = !DILocation(line: 420, column: 10, scope: !9497)
!9501 = distinct !{!9501, !9493, !9502}
!9502 = !DILocation(line: 425, column: 5, scope: !9491)
!9503 = !DILocation(line: 432, column: 27, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9491, file: !9176, line: 432, column: 8)
!9505 = !DILocation(line: 432, column: 49, scope: !9504)
!9506 = !DILocation(line: 432, column: 71, scope: !9504)
!9507 = !DILocation(line: 432, column: 94, scope: !9504)
!9508 = !DILocation(line: 432, column: 113, scope: !9504)
!9509 = !DILocation(line: 432, column: 132, scope: !9504)
!9510 = !DILocation(line: 432, column: 162, scope: !9504)
!9511 = !DILocation(line: 433, column: 49, scope: !9504)
!9512 = !DILocation(line: 433, column: 71, scope: !9504)
!9513 = !DILocation(line: 433, column: 94, scope: !9504)
!9514 = !DILocation(line: 433, column: 113, scope: !9504)
!9515 = !DILocation(line: 433, column: 132, scope: !9504)
!9516 = !DILocation(line: 432, column: 8, scope: !9491)
!9517 = !DILocation(line: 441, column: 26, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9504, file: !9176, line: 434, column: 5)
!9519 = !DILocation(line: 441, column: 100, scope: !9518)
!9520 = !DILocation(line: 445, column: 7, scope: !9518)
!9521 = !DILocation(line: 448, column: 7, scope: !9518)
!9522 = !DILocation(line: 453, column: 26, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9491, file: !9176, line: 453, column: 8)
!9524 = !DILocation(line: 449, column: 5, scope: !9518)
!9525 = !DILocation(line: 453, column: 48, scope: !9523)
!9526 = !DILocation(line: 453, column: 71, scope: !9523)
!9527 = !DILocation(line: 453, column: 95, scope: !9523)
!9528 = !DILocation(line: 453, column: 114, scope: !9523)
!9529 = !DILocation(line: 453, column: 134, scope: !9523)
!9530 = !DILocation(line: 453, column: 8, scope: !9491)
!9531 = !DILocation(line: 458, column: 24, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9523, file: !9176, line: 454, column: 5)
!9533 = !DILocation(line: 458, column: 61, scope: !9532)
!9534 = !DILocation(line: 462, column: 7, scope: !9532)
!9535 = !DILocation(line: 463, column: 5, scope: !9532)
!9536 = !DILocation(line: 466, column: 5, scope: !9491)
!9537 = !DILocation(line: 468, column: 17, scope: !9491)
!9538 = !DILocation(line: 470, column: 5, scope: !9491)
!9539 = !DILocation(line: 470, column: 11, scope: !9491)
!9540 = !DILocation(line: 470, column: 39, scope: !9491)
!9541 = !DILocation(line: 472, column: 11, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9543, file: !9176, line: 472, column: 10)
!9543 = distinct !DILexicalBlock(scope: !9491, file: !9176, line: 471, column: 5)
!9544 = !DILocation(line: 472, column: 25, scope: !9542)
!9545 = !DILocation(line: 472, column: 39, scope: !9542)
!9546 = !DILocation(line: 472, column: 10, scope: !9543)
!9547 = distinct !{!9547, !9538, !9548}
!9548 = !DILocation(line: 477, column: 5, scope: !9491)
!9549 = !DILocation(line: 480, column: 1, scope: !9175)
!9550 = !DISubprogram(name: "HAL_GetTick", scope: !9551, file: !9551, line: 234, type: !4989, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !381)
!9551 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9552 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !9176, file: !9176, line: 489, type: !9553, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !9555)
!9553 = !DISubroutineType(types: !9554)
!9554 = !{null, !9180}
!9555 = !{!9556, !9557}
!9556 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9552, file: !9176, line: 489, type: !9180)
!9557 = !DILocalVariable(name: "tempreg", scope: !9552, file: !9176, line: 491, type: !142)
!9558 = !DILocation(line: 0, scope: !9552)
!9559 = !DILocation(line: 494, column: 18, scope: !9552)
!9560 = !DILocation(line: 494, column: 39, scope: !9552)
!9561 = !DILocation(line: 502, column: 52, scope: !9552)
!9562 = !DILocation(line: 502, column: 63, scope: !9552)
!9563 = !DILocation(line: 502, column: 25, scope: !9552)
!9564 = !DILocation(line: 502, column: 33, scope: !9552)
!9565 = !DILocation(line: 503, column: 52, scope: !9552)
!9566 = !DILocation(line: 503, column: 89, scope: !9552)
!9567 = !DILocation(line: 503, column: 25, scope: !9552)
!9568 = !DILocation(line: 503, column: 33, scope: !9552)
!9569 = !DILocation(line: 504, column: 54, scope: !9552)
!9570 = !DILocation(line: 504, column: 128, scope: !9552)
!9571 = !DILocation(line: 504, column: 25, scope: !9552)
!9572 = !DILocation(line: 504, column: 33, scope: !9552)
!9573 = !DILocation(line: 505, column: 52, scope: !9552)
!9574 = !DILocation(line: 505, column: 89, scope: !9552)
!9575 = !DILocation(line: 505, column: 25, scope: !9552)
!9576 = !DILocation(line: 505, column: 33, scope: !9552)
!9577 = !DILocation(line: 506, column: 52, scope: !9552)
!9578 = !DILocation(line: 506, column: 89, scope: !9552)
!9579 = !DILocation(line: 506, column: 25, scope: !9552)
!9580 = !DILocation(line: 506, column: 33, scope: !9552)
!9581 = !DILocation(line: 508, column: 52, scope: !9552)
!9582 = !DILocation(line: 508, column: 63, scope: !9552)
!9583 = !DILocation(line: 508, column: 25, scope: !9552)
!9584 = !DILocation(line: 508, column: 33, scope: !9552)
!9585 = !DILocation(line: 509, column: 52, scope: !9552)
!9586 = !DILocation(line: 509, column: 89, scope: !9552)
!9587 = !DILocation(line: 509, column: 25, scope: !9552)
!9588 = !DILocation(line: 509, column: 33, scope: !9552)
!9589 = !DILocation(line: 510, column: 54, scope: !9552)
!9590 = !DILocation(line: 510, column: 128, scope: !9552)
!9591 = !DILocation(line: 510, column: 25, scope: !9552)
!9592 = !DILocation(line: 510, column: 33, scope: !9552)
!9593 = !DILocation(line: 511, column: 52, scope: !9552)
!9594 = !DILocation(line: 511, column: 89, scope: !9552)
!9595 = !DILocation(line: 511, column: 25, scope: !9552)
!9596 = !DILocation(line: 511, column: 33, scope: !9552)
!9597 = !DILocation(line: 513, column: 48, scope: !9552)
!9598 = !DILocation(line: 513, column: 56, scope: !9552)
!9599 = !DILocation(line: 513, column: 18, scope: !9552)
!9600 = !DILocation(line: 513, column: 29, scope: !9552)
!9601 = !DILocation(line: 514, column: 48, scope: !9552)
!9602 = !DILocation(line: 514, column: 82, scope: !9552)
!9603 = !DILocation(line: 514, column: 18, scope: !9552)
!9604 = !DILocation(line: 514, column: 29, scope: !9552)
!9605 = !DILocation(line: 517, column: 39, scope: !9552)
!9606 = !DILocation(line: 517, column: 18, scope: !9552)
!9607 = !DILocation(line: 517, column: 37, scope: !9552)
!9608 = !DILocation(line: 520, column: 39, scope: !9552)
!9609 = !DILocation(line: 520, column: 18, scope: !9552)
!9610 = !DILocation(line: 520, column: 37, scope: !9552)
!9611 = !DILocation(line: 523, column: 42, scope: !9552)
!9612 = !DILocation(line: 523, column: 18, scope: !9552)
!9613 = !DILocation(line: 523, column: 40, scope: !9552)
!9614 = !DILocation(line: 526, column: 42, scope: !9552)
!9615 = !DILocation(line: 526, column: 18, scope: !9552)
!9616 = !DILocation(line: 526, column: 40, scope: !9552)
!9617 = !DILocation(line: 529, column: 19, scope: !9552)
!9618 = !DILocation(line: 529, column: 24, scope: !9552)
!9619 = !DILocation(line: 530, column: 67, scope: !9552)
!9620 = !DILocation(line: 530, column: 72, scope: !9552)
!9621 = !DILocation(line: 530, column: 59, scope: !9552)
!9622 = !DILocation(line: 530, column: 18, scope: !9552)
!9623 = !DILocation(line: 530, column: 36, scope: !9552)
!9624 = !DILocation(line: 533, column: 38, scope: !9552)
!9625 = !DILocation(line: 533, column: 18, scope: !9552)
!9626 = !DILocation(line: 533, column: 36, scope: !9552)
!9627 = !DILocation(line: 536, column: 42, scope: !9552)
!9628 = !DILocation(line: 536, column: 18, scope: !9552)
!9629 = !DILocation(line: 536, column: 40, scope: !9552)
!9630 = !DILocation(line: 539, column: 40, scope: !9552)
!9631 = !DILocation(line: 539, column: 18, scope: !9552)
!9632 = !DILocation(line: 539, column: 38, scope: !9552)
!9633 = !DILocation(line: 542, column: 39, scope: !9552)
!9634 = !DILocation(line: 542, column: 18, scope: !9552)
!9635 = !DILocation(line: 542, column: 37, scope: !9552)
!9636 = !DILocation(line: 545, column: 40, scope: !9552)
!9637 = !DILocation(line: 545, column: 18, scope: !9552)
!9638 = !DILocation(line: 545, column: 38, scope: !9552)
!9639 = !DILocation(line: 548, column: 13, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9552, file: !9176, line: 548, column: 7)
!9641 = !DILocation(line: 548, column: 7, scope: !9552)
!9642 = !DILocation(line: 550, column: 20, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9640, file: !9176, line: 549, column: 3)
!9644 = !DILocation(line: 550, column: 37, scope: !9643)
!9645 = !DILocation(line: 556, column: 1, scope: !9552)
!9646 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !9176, file: !9176, line: 569, type: !5916, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !9647)
!9647 = !{!9648, !9649, !9650, !9651, !9652, !9653, !9654}
!9648 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !9646, file: !9176, line: 569, type: !142)
!9649 = !DILocalVariable(name: "tmpreg1", scope: !9646, file: !9176, line: 571, type: !142)
!9650 = !DILocalVariable(name: "frequency", scope: !9646, file: !9176, line: 573, type: !142)
!9651 = !DILocalVariable(name: "vcoinput", scope: !9646, file: !9176, line: 575, type: !142)
!9652 = !DILocalVariable(name: "saiclocksource", scope: !9646, file: !9176, line: 577, type: !142)
!9653 = !DILocalVariable(name: "srcclk", scope: !9646, file: !9176, line: 578, type: !142)
!9654 = !DILocalVariable(name: "vcooutput", scope: !9646, file: !9176, line: 580, type: !142)
!9655 = !DILocation(line: 0, scope: !9646)
!9656 = !DILocation(line: 581, column: 3, scope: !9646)
!9657 = !DILocation(line: 586, column: 29, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !9176, line: 585, column: 5)
!9659 = distinct !DILexicalBlock(scope: !9646, file: !9176, line: 582, column: 3)
!9660 = !DILocation(line: 588, column: 7, scope: !9658)
!9661 = !DILocation(line: 594, column: 20, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9663, file: !9176, line: 594, column: 14)
!9663 = distinct !DILexicalBlock(scope: !9664, file: !9176, line: 591, column: 9)
!9664 = distinct !DILexicalBlock(scope: !9658, file: !9176, line: 589, column: 7)
!9665 = !DILocation(line: 0, scope: !9662)
!9666 = !DILocation(line: 606, column: 27, scope: !9663)
!9667 = !DILocation(line: 606, column: 64, scope: !9663)
!9668 = !DILocation(line: 607, column: 42, scope: !9663)
!9669 = !DILocation(line: 607, column: 79, scope: !9663)
!9670 = !DILocation(line: 607, column: 33, scope: !9663)
!9671 = !DILocation(line: 607, column: 86, scope: !9663)
!9672 = !DILocation(line: 610, column: 29, scope: !9663)
!9673 = !DILocation(line: 610, column: 63, scope: !9663)
!9674 = !DILocation(line: 610, column: 70, scope: !9663)
!9675 = !DILocation(line: 611, column: 32, scope: !9663)
!9676 = !DILocation(line: 612, column: 11, scope: !9663)
!9677 = !DILocation(line: 619, column: 20, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9679, file: !9176, line: 619, column: 14)
!9679 = distinct !DILexicalBlock(scope: !9664, file: !9176, line: 616, column: 9)
!9680 = !DILocation(line: 0, scope: !9678)
!9681 = !DILocation(line: 632, column: 27, scope: !9679)
!9682 = !DILocation(line: 632, column: 64, scope: !9679)
!9683 = !DILocation(line: 633, column: 42, scope: !9679)
!9684 = !DILocation(line: 633, column: 79, scope: !9679)
!9685 = !DILocation(line: 633, column: 33, scope: !9679)
!9686 = !DILocation(line: 633, column: 86, scope: !9679)
!9687 = !DILocation(line: 636, column: 28, scope: !9679)
!9688 = !DILocation(line: 636, column: 36, scope: !9679)
!9689 = !DILocation(line: 636, column: 62, scope: !9679)
!9690 = !DILocation(line: 637, column: 32, scope: !9679)
!9691 = !DILocation(line: 638, column: 11, scope: !9679)
!9692 = !DILocation(line: 645, column: 20, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9694, file: !9176, line: 645, column: 14)
!9694 = distinct !DILexicalBlock(scope: !9664, file: !9176, line: 642, column: 9)
!9695 = !DILocation(line: 0, scope: !9693)
!9696 = !DILocation(line: 658, column: 27, scope: !9694)
!9697 = !DILocation(line: 658, column: 55, scope: !9694)
!9698 = !DILocation(line: 659, column: 42, scope: !9694)
!9699 = !DILocation(line: 659, column: 70, scope: !9694)
!9700 = !DILocation(line: 659, column: 33, scope: !9694)
!9701 = !DILocation(line: 659, column: 77, scope: !9694)
!9702 = !DILocation(line: 660, column: 11, scope: !9694)
!9703 = !DILocation(line: 665, column: 11, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9664, file: !9176, line: 663, column: 9)
!9705 = !DILocation(line: 669, column: 20, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9707, file: !9176, line: 669, column: 14)
!9707 = distinct !DILexicalBlock(scope: !9664, file: !9176, line: 668, column: 9)
!9708 = !DILocation(line: 691, column: 16, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9659, file: !9176, line: 689, column: 5)
!9710 = !DILocation(line: 692, column: 7, scope: !9709)
!9711 = !DILocation(line: 706, column: 20, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9713, file: !9176, line: 706, column: 14)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !9176, line: 703, column: 9)
!9714 = distinct !DILexicalBlock(scope: !9709, file: !9176, line: 693, column: 7)
!9715 = !DILocation(line: 0, scope: !9712)
!9716 = !DILocation(line: 718, column: 53, scope: !9713)
!9717 = !DILocation(line: 718, column: 90, scope: !9713)
!9718 = !DILocation(line: 718, column: 43, scope: !9713)
!9719 = !DILocation(line: 720, column: 53, scope: !9713)
!9720 = !DILocation(line: 720, column: 90, scope: !9713)
!9721 = !DILocation(line: 720, column: 44, scope: !9713)
!9722 = !DILocation(line: 721, column: 11, scope: !9713)
!9723 = !DILocation(line: 728, column: 20, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9725, file: !9176, line: 728, column: 14)
!9725 = distinct !DILexicalBlock(scope: !9714, file: !9176, line: 725, column: 9)
!9726 = !DILocation(line: 0, scope: !9724)
!9727 = !DILocation(line: 740, column: 53, scope: !9725)
!9728 = !DILocation(line: 740, column: 81, scope: !9725)
!9729 = !DILocation(line: 740, column: 43, scope: !9725)
!9730 = !DILocation(line: 742, column: 53, scope: !9725)
!9731 = !DILocation(line: 742, column: 81, scope: !9725)
!9732 = !DILocation(line: 742, column: 44, scope: !9725)
!9733 = !DILocation(line: 743, column: 11, scope: !9725)
!9734 = !DILocation(line: 748, column: 20, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !9176, line: 748, column: 14)
!9736 = distinct !DILexicalBlock(scope: !9714, file: !9176, line: 747, column: 9)
!9737 = !DILocation(line: 770, column: 16, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9659, file: !9176, line: 768, column: 5)
!9739 = !DILocation(line: 771, column: 7, scope: !9738)
!9740 = !DILocation(line: 785, column: 20, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9742, file: !9176, line: 785, column: 14)
!9742 = distinct !DILexicalBlock(scope: !9743, file: !9176, line: 782, column: 9)
!9743 = distinct !DILexicalBlock(scope: !9738, file: !9176, line: 772, column: 7)
!9744 = !DILocation(line: 0, scope: !9741)
!9745 = !DILocation(line: 797, column: 53, scope: !9742)
!9746 = !DILocation(line: 797, column: 90, scope: !9742)
!9747 = !DILocation(line: 797, column: 43, scope: !9742)
!9748 = !DILocation(line: 799, column: 53, scope: !9742)
!9749 = !DILocation(line: 799, column: 90, scope: !9742)
!9750 = !DILocation(line: 799, column: 44, scope: !9742)
!9751 = !DILocation(line: 800, column: 11, scope: !9742)
!9752 = !DILocation(line: 807, column: 20, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9754, file: !9176, line: 807, column: 14)
!9754 = distinct !DILexicalBlock(scope: !9743, file: !9176, line: 804, column: 9)
!9755 = !DILocation(line: 0, scope: !9753)
!9756 = !DILocation(line: 819, column: 53, scope: !9754)
!9757 = !DILocation(line: 819, column: 81, scope: !9754)
!9758 = !DILocation(line: 819, column: 43, scope: !9754)
!9759 = !DILocation(line: 821, column: 53, scope: !9754)
!9760 = !DILocation(line: 821, column: 81, scope: !9754)
!9761 = !DILocation(line: 821, column: 44, scope: !9754)
!9762 = !DILocation(line: 822, column: 11, scope: !9754)
!9763 = !DILocation(line: 827, column: 20, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !9176, line: 827, column: 14)
!9765 = distinct !DILexicalBlock(scope: !9743, file: !9176, line: 826, column: 9)
!9766 = !DILocation(line: 847, column: 3, scope: !9646)
!9767 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !9176, file: !9176, line: 2766, type: !9768, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !9770)
!9768 = !DISubroutineType(types: !9769)
!9769 = !{null, !131}
!9770 = !{!9771}
!9771 = !DILocalVariable(name: "Mode", arg: 1, scope: !9767, file: !9176, line: 2766, type: !131)
!9772 = !DILocation(line: 0, scope: !9767)
!9773 = !DILocation(line: 2770, column: 11, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9767, file: !9176, line: 2770, column: 6)
!9775 = !DILocation(line: 0, scope: !9774)
!9776 = !DILocation(line: 2770, column: 6, scope: !9767)
!9777 = !DILocation(line: 2778, column: 1, scope: !9767)
!9778 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !9176, file: !9176, line: 2803, type: !9779, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !9782)
!9779 = !DISubroutineType(types: !9780)
!9780 = !{!9179, !9781}
!9781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9187, size: 32)
!9782 = !{!9783, !9784}
!9783 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !9778, file: !9176, line: 2803, type: !9781)
!9784 = !DILocalVariable(name: "tickstart", scope: !9778, file: !9176, line: 2805, type: !142)
!9785 = !DILocation(line: 0, scope: !9778)
!9786 = !DILocation(line: 2821, column: 3, scope: !9778)
!9787 = !DILocation(line: 2824, column: 15, scope: !9778)
!9788 = !DILocation(line: 2825, column: 3, scope: !9778)
!9789 = !DILocation(line: 2825, column: 9, scope: !9778)
!9790 = !DILocation(line: 2827, column: 9, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9792, file: !9176, line: 2827, column: 8)
!9792 = distinct !DILexicalBlock(scope: !9778, file: !9176, line: 2826, column: 3)
!9793 = !DILocation(line: 2827, column: 23, scope: !9791)
!9794 = !DILocation(line: 2827, column: 37, scope: !9791)
!9795 = !DILocation(line: 2827, column: 8, scope: !9792)
!9796 = distinct !{!9796, !9788, !9797}
!9797 = !DILocation(line: 2832, column: 3, scope: !9778)
!9798 = !DILocation(line: 2840, column: 3, scope: !9778)
!9799 = !DILocation(line: 2866, column: 3, scope: !9778)
!9800 = !DILocation(line: 2869, column: 15, scope: !9778)
!9801 = !DILocation(line: 2870, column: 3, scope: !9778)
!9802 = !DILocation(line: 2870, column: 9, scope: !9778)
!9803 = !DILocation(line: 2870, column: 48, scope: !9778)
!9804 = !DILocation(line: 2872, column: 9, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !9176, line: 2872, column: 8)
!9806 = distinct !DILexicalBlock(scope: !9778, file: !9176, line: 2871, column: 3)
!9807 = !DILocation(line: 2872, column: 23, scope: !9805)
!9808 = !DILocation(line: 2872, column: 37, scope: !9805)
!9809 = !DILocation(line: 2872, column: 8, scope: !9806)
!9810 = distinct !{!9810, !9801, !9811}
!9811 = !DILocation(line: 2877, column: 3, scope: !9778)
!9812 = !DILocation(line: 2880, column: 1, scope: !9778)
!9813 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !9176, file: !9176, line: 2886, type: !9814, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !9816)
!9814 = !DISubroutineType(types: !9815)
!9815 = !{!9179}
!9816 = !{!9817}
!9817 = !DILocalVariable(name: "tickstart", scope: !9813, file: !9176, line: 2888, type: !142)
!9818 = !DILocation(line: 2891, column: 3, scope: !9813)
!9819 = !DILocation(line: 2894, column: 15, scope: !9813)
!9820 = !DILocation(line: 0, scope: !9813)
!9821 = !DILocation(line: 2895, column: 3, scope: !9813)
!9822 = !DILocation(line: 2895, column: 9, scope: !9813)
!9823 = !DILocation(line: 2895, column: 45, scope: !9813)
!9824 = !DILocation(line: 2897, column: 9, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9826, file: !9176, line: 2897, column: 8)
!9826 = distinct !DILexicalBlock(scope: !9813, file: !9176, line: 2896, column: 3)
!9827 = !DILocation(line: 2897, column: 23, scope: !9825)
!9828 = !DILocation(line: 2897, column: 36, scope: !9825)
!9829 = !DILocation(line: 2897, column: 8, scope: !9826)
!9830 = distinct !{!9830, !9821, !9831}
!9831 = !DILocation(line: 2902, column: 3, scope: !9813)
!9832 = !DILocation(line: 2905, column: 1, scope: !9813)
!9833 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !9176, file: !9176, line: 2916, type: !9834, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !9837)
!9834 = !DISubroutineType(types: !9835)
!9835 = !{!9179, !9836}
!9836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9196, size: 32)
!9837 = !{!9838, !9839}
!9838 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !9833, file: !9176, line: 2916, type: !9836)
!9839 = !DILocalVariable(name: "tickstart", scope: !9833, file: !9176, line: 2918, type: !142)
!9840 = !DILocation(line: 0, scope: !9833)
!9841 = !DILocation(line: 2934, column: 3, scope: !9833)
!9842 = !DILocation(line: 2937, column: 15, scope: !9833)
!9843 = !DILocation(line: 2938, column: 3, scope: !9833)
!9844 = !DILocation(line: 2938, column: 9, scope: !9833)
!9845 = !DILocation(line: 2940, column: 9, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9847, file: !9176, line: 2940, column: 8)
!9847 = distinct !DILexicalBlock(scope: !9833, file: !9176, line: 2939, column: 3)
!9848 = !DILocation(line: 2940, column: 23, scope: !9846)
!9849 = !DILocation(line: 2940, column: 37, scope: !9846)
!9850 = !DILocation(line: 2940, column: 8, scope: !9847)
!9851 = distinct !{!9851, !9843, !9852}
!9852 = !DILocation(line: 2945, column: 3, scope: !9833)
!9853 = !DILocation(line: 2953, column: 3, scope: !9833)
!9854 = !DILocation(line: 2970, column: 3, scope: !9833)
!9855 = !DILocation(line: 2973, column: 15, scope: !9833)
!9856 = !DILocation(line: 2974, column: 3, scope: !9833)
!9857 = !DILocation(line: 2974, column: 9, scope: !9833)
!9858 = !DILocation(line: 2974, column: 37, scope: !9833)
!9859 = !DILocation(line: 2976, column: 9, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9861, file: !9176, line: 2976, column: 8)
!9861 = distinct !DILexicalBlock(scope: !9833, file: !9176, line: 2975, column: 3)
!9862 = !DILocation(line: 2976, column: 23, scope: !9860)
!9863 = !DILocation(line: 2976, column: 37, scope: !9860)
!9864 = !DILocation(line: 2976, column: 8, scope: !9861)
!9865 = distinct !{!9865, !9856, !9866}
!9866 = !DILocation(line: 2981, column: 3, scope: !9833)
!9867 = !DILocation(line: 2984, column: 1, scope: !9833)
!9868 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !9176, file: !9176, line: 2990, type: !9814, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !9869)
!9869 = !{!9870}
!9870 = !DILocalVariable(name: "tickstart", scope: !9868, file: !9176, line: 2992, type: !142)
!9871 = !DILocation(line: 2995, column: 3, scope: !9868)
!9872 = !DILocation(line: 2998, column: 15, scope: !9868)
!9873 = !DILocation(line: 0, scope: !9868)
!9874 = !DILocation(line: 2999, column: 3, scope: !9868)
!9875 = !DILocation(line: 2999, column: 9, scope: !9868)
!9876 = !DILocation(line: 3001, column: 9, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9878, file: !9176, line: 3001, column: 8)
!9878 = distinct !DILexicalBlock(scope: !9868, file: !9176, line: 3000, column: 3)
!9879 = !DILocation(line: 3001, column: 23, scope: !9877)
!9880 = !DILocation(line: 3001, column: 36, scope: !9877)
!9881 = !DILocation(line: 3001, column: 8, scope: !9878)
!9882 = distinct !{!9882, !9874, !9883}
!9883 = !DILocation(line: 3006, column: 3, scope: !9868)
!9884 = !DILocation(line: 3009, column: 1, scope: !9868)
!9885 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9176, file: !9176, line: 3051, type: !4989, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !9886)
!9886 = !{!9887, !9888, !9889, !9890, !9891}
!9887 = !DILocalVariable(name: "pllm", scope: !9885, file: !9176, line: 3053, type: !142)
!9888 = !DILocalVariable(name: "pllvco", scope: !9885, file: !9176, line: 3054, type: !142)
!9889 = !DILocalVariable(name: "pllp", scope: !9885, file: !9176, line: 3055, type: !142)
!9890 = !DILocalVariable(name: "pllr", scope: !9885, file: !9176, line: 3056, type: !142)
!9891 = !DILocalVariable(name: "sysclockfreq", scope: !9885, file: !9176, line: 3057, type: !142)
!9892 = !DILocation(line: 0, scope: !9885)
!9893 = !DILocation(line: 3060, column: 16, scope: !9885)
!9894 = !DILocation(line: 3060, column: 3, scope: !9885)
!9895 = !DILocation(line: 3076, column: 19, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !9176, line: 3073, column: 5)
!9897 = distinct !DILexicalBlock(scope: !9885, file: !9176, line: 3061, column: 3)
!9898 = !DILocation(line: 3076, column: 27, scope: !9896)
!9899 = !DILocation(line: 3077, column: 10, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9896, file: !9176, line: 3077, column: 10)
!9901 = !DILocation(line: 0, scope: !9900)
!9902 = !DILocation(line: 3087, column: 23, scope: !9896)
!9903 = !DILocation(line: 3087, column: 82, scope: !9896)
!9904 = !DILocation(line: 3089, column: 28, scope: !9896)
!9905 = !DILocation(line: 3090, column: 7, scope: !9896)
!9906 = !DILocation(line: 3096, column: 19, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9897, file: !9176, line: 3093, column: 5)
!9908 = !DILocation(line: 3096, column: 27, scope: !9907)
!9909 = !DILocation(line: 3097, column: 10, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9907, file: !9176, line: 3097, column: 10)
!9911 = !DILocation(line: 0, scope: !9910)
!9912 = !DILocation(line: 3107, column: 21, scope: !9907)
!9913 = !DILocation(line: 3107, column: 49, scope: !9907)
!9914 = !DILocation(line: 3109, column: 28, scope: !9907)
!9915 = !DILocation(line: 3110, column: 7, scope: !9907)
!9916 = !DILocation(line: 0, scope: !9897)
!9917 = !DILocation(line: 3118, column: 3, scope: !9885)
!9918 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9176, file: !9176, line: 3143, type: !9814, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !9919)
!9919 = !{!9920}
!9920 = !DILocalVariable(name: "tickstart", scope: !9918, file: !9176, line: 3145, type: !142)
!9921 = !DILocation(line: 3148, column: 15, scope: !9918)
!9922 = !DILocation(line: 0, scope: !9918)
!9923 = !DILocation(line: 3151, column: 3, scope: !9918)
!9924 = !DILocation(line: 3154, column: 3, scope: !9918)
!9925 = !DILocation(line: 3154, column: 10, scope: !9918)
!9926 = !DILocation(line: 3154, column: 43, scope: !9918)
!9927 = !DILocation(line: 3156, column: 10, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9929, file: !9176, line: 3156, column: 9)
!9929 = distinct !DILexicalBlock(scope: !9918, file: !9176, line: 3155, column: 3)
!9930 = !DILocation(line: 3156, column: 24, scope: !9928)
!9931 = !DILocation(line: 3156, column: 37, scope: !9928)
!9932 = !DILocation(line: 3156, column: 9, scope: !9929)
!9933 = distinct !{!9933, !9924, !9934}
!9934 = !DILocation(line: 3160, column: 3, scope: !9918)
!9935 = !DILocation(line: 3163, column: 3, scope: !9918)
!9936 = !DILocation(line: 3166, column: 15, scope: !9918)
!9937 = !DILocation(line: 3169, column: 3, scope: !9918)
!9938 = !DILocation(line: 3172, column: 3, scope: !9918)
!9939 = !DILocation(line: 3172, column: 10, scope: !9918)
!9940 = !DILocation(line: 3172, column: 44, scope: !9918)
!9941 = !DILocation(line: 3174, column: 24, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9943, file: !9176, line: 3174, column: 9)
!9943 = distinct !DILexicalBlock(scope: !9918, file: !9176, line: 3173, column: 3)
!9944 = !DILocation(line: 3174, column: 37, scope: !9942)
!9945 = !DILocation(line: 3174, column: 9, scope: !9943)
!9946 = distinct !{!9946, !9938, !9947}
!9947 = !DILocation(line: 3178, column: 3, scope: !9918)
!9948 = !DILocation(line: 3184, column: 3, scope: !9918)
!9949 = !DILocation(line: 3187, column: 3, scope: !9918)
!9950 = !DILocation(line: 3187, column: 10, scope: !9918)
!9951 = !DILocation(line: 3187, column: 43, scope: !9918)
!9952 = !DILocation(line: 3189, column: 24, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !9176, line: 3189, column: 9)
!9954 = distinct !DILexicalBlock(scope: !9918, file: !9176, line: 3188, column: 3)
!9955 = !DILocation(line: 3189, column: 37, scope: !9953)
!9956 = !DILocation(line: 3189, column: 9, scope: !9954)
!9957 = distinct !{!9957, !9949, !9958}
!9958 = !DILocation(line: 3193, column: 3, scope: !9918)
!9959 = !DILocation(line: 3199, column: 3, scope: !9918)
!9960 = !DILocation(line: 3202, column: 3, scope: !9918)
!9961 = !DILocation(line: 3202, column: 10, scope: !9918)
!9962 = !DILocation(line: 3202, column: 43, scope: !9918)
!9963 = !DILocation(line: 3204, column: 24, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9965, file: !9176, line: 3204, column: 9)
!9965 = distinct !DILexicalBlock(scope: !9918, file: !9176, line: 3203, column: 3)
!9966 = !DILocation(line: 3204, column: 37, scope: !9964)
!9967 = !DILocation(line: 3204, column: 9, scope: !9965)
!9968 = distinct !{!9968, !9960, !9969}
!9969 = !DILocation(line: 3208, column: 3, scope: !9918)
!9970 = !DILocation(line: 3215, column: 3, scope: !9918)
!9971 = !DILocation(line: 3218, column: 3, scope: !9918)
!9972 = !DILocation(line: 3218, column: 10, scope: !9918)
!9973 = !DILocation(line: 3218, column: 46, scope: !9918)
!9974 = !DILocation(line: 3220, column: 24, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !9176, line: 3220, column: 9)
!9976 = distinct !DILexicalBlock(scope: !9918, file: !9176, line: 3219, column: 3)
!9977 = !DILocation(line: 3220, column: 37, scope: !9975)
!9978 = !DILocation(line: 3220, column: 9, scope: !9976)
!9979 = distinct !{!9979, !9971, !9980}
!9980 = !DILocation(line: 3224, column: 3, scope: !9918)
!9981 = !DILocation(line: 3232, column: 3, scope: !9918)
!9982 = !DILocation(line: 3235, column: 3, scope: !9918)
!9983 = !DILocation(line: 3235, column: 10, scope: !9918)
!9984 = !DILocation(line: 3235, column: 46, scope: !9918)
!9985 = !DILocation(line: 3237, column: 10, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9987, file: !9176, line: 3237, column: 9)
!9987 = distinct !DILexicalBlock(scope: !9918, file: !9176, line: 3236, column: 3)
!9988 = !DILocation(line: 3237, column: 24, scope: !9986)
!9989 = !DILocation(line: 3237, column: 37, scope: !9986)
!9990 = !DILocation(line: 3237, column: 9, scope: !9987)
!9991 = distinct !{!9991, !9982, !9992}
!9992 = !DILocation(line: 3241, column: 3, scope: !9918)
!9993 = !DILocation(line: 3247, column: 16, scope: !9918)
!9994 = !DILocation(line: 3257, column: 19, scope: !9918)
!9995 = !DILocation(line: 3270, column: 19, scope: !9918)
!9996 = !DILocation(line: 3274, column: 3, scope: !9918)
!9997 = !DILocation(line: 3277, column: 3, scope: !9918)
!9998 = !DILocation(line: 3281, column: 3, scope: !9918)
!9999 = !DILocation(line: 3285, column: 3, scope: !9918)
!10000 = !DILocation(line: 3288, column: 3, scope: !9918)
!10001 = !DILocation(line: 3292, column: 3, scope: !9918)
!10002 = !DILocation(line: 3296, column: 3, scope: !9918)
!10003 = !DILocation(line: 3299, column: 3, scope: !9918)
!10004 = !DILocation(line: 3302, column: 19, scope: !9918)
!10005 = !DILocation(line: 3305, column: 19, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9918, file: !9176, line: 3305, column: 6)
!10007 = !DILocation(line: 3305, column: 6, scope: !10006)
!10008 = !DILocation(line: 3305, column: 31, scope: !10006)
!10009 = !DILocation(line: 0, scope: !10006)
!10010 = !DILocation(line: 3313, column: 1, scope: !9918)
!10011 = !DISubprogram(name: "HAL_InitTick", scope: !9551, file: !9551, line: 223, type: !10012, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !381)
!10012 = !DISubroutineType(types: !10013)
!10013 = !{!9179, !142}
!10014 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9176, file: !9176, line: 3333, type: !10015, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !10039)
!10015 = !DISubroutineType(types: !10016)
!10016 = !{!9179, !10017}
!10017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10018, size: 32)
!10018 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10019, line: 70, baseType: !10020)
!10019 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10019, line: 49, size: 416, elements: !10021)
!10021 = !{!10022, !10023, !10024, !10025, !10026, !10027, !10028}
!10022 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10020, file: !10019, line: 51, baseType: !142, size: 32)
!10023 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10020, file: !10019, line: 54, baseType: !142, size: 32, offset: 32)
!10024 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10020, file: !10019, line: 57, baseType: !142, size: 32, offset: 64)
!10025 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10020, file: !10019, line: 60, baseType: !142, size: 32, offset: 96)
!10026 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10020, file: !10019, line: 63, baseType: !142, size: 32, offset: 128)
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10020, file: !10019, line: 66, baseType: !142, size: 32, offset: 160)
!10028 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10020, file: !10019, line: 69, baseType: !10029, size: 224, offset: 192)
!10029 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9182, line: 73, baseType: !10030)
!10030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9182, line: 45, size: 224, elements: !10031)
!10031 = !{!10032, !10033, !10034, !10035, !10036, !10037, !10038}
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10030, file: !9182, line: 47, baseType: !142, size: 32)
!10033 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10030, file: !9182, line: 50, baseType: !142, size: 32, offset: 32)
!10034 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10030, file: !9182, line: 53, baseType: !142, size: 32, offset: 64)
!10035 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10030, file: !9182, line: 56, baseType: !142, size: 32, offset: 96)
!10036 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10030, file: !9182, line: 60, baseType: !142, size: 32, offset: 128)
!10037 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10030, file: !9182, line: 63, baseType: !142, size: 32, offset: 160)
!10038 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !10030, file: !9182, line: 68, baseType: !142, size: 32, offset: 192)
!10039 = !{!10040, !10041, !10042, !10043, !10047}
!10040 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10014, file: !9176, line: 3333, type: !10017)
!10041 = !DILocalVariable(name: "tickstart", scope: !10014, file: !9176, line: 3335, type: !142)
!10042 = !DILocalVariable(name: "pll_config", scope: !10014, file: !9176, line: 3335, type: !142)
!10043 = !DILocalVariable(name: "pwrclkchanged", scope: !10044, file: !9176, line: 3517, type: !10046)
!10044 = distinct !DILexicalBlock(scope: !10045, file: !9176, line: 3516, column: 3)
!10045 = distinct !DILexicalBlock(scope: !10014, file: !9176, line: 3515, column: 6)
!10046 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !725, line: 188, baseType: !2716)
!10047 = !DILocalVariable(name: "tmpreg", scope: !10048, file: !9176, line: 3526, type: !192)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !9176, line: 3526, column: 7)
!10049 = distinct !DILexicalBlock(scope: !10050, file: !9176, line: 3525, column: 5)
!10050 = distinct !DILexicalBlock(scope: !10044, file: !9176, line: 3524, column: 8)
!10051 = !DILocation(line: 0, scope: !10014)
!10052 = !DILocation(line: 3338, column: 24, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10014, file: !9176, line: 3338, column: 6)
!10054 = !DILocation(line: 3338, column: 6, scope: !10014)
!10055 = !DILocation(line: 3346, column: 27, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10014, file: !9176, line: 3346, column: 6)
!10057 = !DILocation(line: 3346, column: 43, scope: !10056)
!10058 = !DILocation(line: 3346, column: 69, scope: !10056)
!10059 = !DILocation(line: 3346, column: 6, scope: !10014)
!10060 = !DILocation(line: 3352, column: 9, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10062, file: !9176, line: 3352, column: 8)
!10062 = distinct !DILexicalBlock(scope: !10056, file: !9176, line: 3347, column: 3)
!10063 = !DILocation(line: 3352, column: 39, scope: !10061)
!10064 = !DILocation(line: 3352, column: 128, scope: !10061)
!10065 = !DILocation(line: 3353, column: 9, scope: !10061)
!10066 = !DILocation(line: 3353, column: 39, scope: !10061)
!10067 = !DILocation(line: 3353, column: 60, scope: !10061)
!10068 = !DILocation(line: 3353, column: 70, scope: !10061)
!10069 = !DILocation(line: 3353, column: 78, scope: !10061)
!10070 = !DILocation(line: 3353, column: 100, scope: !10061)
!10071 = !DILocation(line: 3353, column: 128, scope: !10061)
!10072 = !DILocation(line: 3354, column: 9, scope: !10061)
!10073 = !DILocation(line: 3354, column: 39, scope: !10061)
!10074 = !DILocation(line: 3354, column: 61, scope: !10061)
!10075 = !DILocation(line: 3354, column: 71, scope: !10061)
!10076 = !DILocation(line: 3354, column: 79, scope: !10061)
!10077 = !DILocation(line: 3354, column: 101, scope: !10061)
!10078 = !DILocation(line: 3352, column: 8, scope: !10062)
!10079 = !DILocation(line: 3360, column: 11, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10081, file: !9176, line: 3360, column: 10)
!10081 = distinct !DILexicalBlock(scope: !10061, file: !9176, line: 3359, column: 5)
!10082 = !DILocation(line: 3360, column: 57, scope: !10080)
!10083 = !DILocation(line: 3360, column: 80, scope: !10080)
!10084 = !DILocation(line: 3360, column: 89, scope: !10080)
!10085 = !DILocation(line: 3360, column: 10, scope: !10081)
!10086 = !DILocation(line: 3368, column: 7, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10088, file: !9176, line: 3368, column: 7)
!10088 = distinct !DILexicalBlock(scope: !10089, file: !9176, line: 3368, column: 7)
!10089 = distinct !DILexicalBlock(scope: !10061, file: !9176, line: 3366, column: 5)
!10090 = !DILocation(line: 3368, column: 7, scope: !10088)
!10091 = !DILocation(line: 3368, column: 7, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10087, file: !9176, line: 3368, column: 7)
!10093 = !DILocation(line: 3368, column: 7, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10095, file: !9176, line: 3368, column: 7)
!10095 = distinct !DILexicalBlock(scope: !10087, file: !9176, line: 3368, column: 7)
!10096 = !DILocation(line: 3368, column: 7, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10095, file: !9176, line: 3368, column: 7)
!10098 = !DILocation(line: 0, scope: !10087)
!10099 = !DILocation(line: 3371, column: 30, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10089, file: !9176, line: 3371, column: 10)
!10101 = !DILocation(line: 3371, column: 40, scope: !10100)
!10102 = !DILocation(line: 0, scope: !10100)
!10103 = !DILocation(line: 3371, column: 10, scope: !10089)
!10104 = !DILocation(line: 3377, column: 15, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10100, file: !9176, line: 3372, column: 7)
!10106 = !DILocation(line: 3377, column: 51, scope: !10105)
!10107 = !DILocation(line: 3377, column: 9, scope: !10105)
!10108 = !DILocation(line: 3379, column: 15, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10110, file: !9176, line: 3379, column: 14)
!10110 = distinct !DILexicalBlock(scope: !10105, file: !9176, line: 3378, column: 9)
!10111 = !DILocation(line: 3379, column: 29, scope: !10109)
!10112 = !DILocation(line: 3379, column: 43, scope: !10109)
!10113 = !DILocation(line: 3379, column: 14, scope: !10110)
!10114 = distinct !{!10114, !10107, !10115}
!10115 = !DILocation(line: 3383, column: 9, scope: !10105)
!10116 = !DILocation(line: 3391, column: 15, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10100, file: !9176, line: 3386, column: 7)
!10118 = !DILocation(line: 3391, column: 9, scope: !10117)
!10119 = !DILocation(line: 3393, column: 15, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10121, file: !9176, line: 3393, column: 14)
!10121 = distinct !DILexicalBlock(scope: !10117, file: !9176, line: 3392, column: 9)
!10122 = !DILocation(line: 3393, column: 29, scope: !10120)
!10123 = !DILocation(line: 3393, column: 43, scope: !10120)
!10124 = !DILocation(line: 3393, column: 14, scope: !10121)
!10125 = distinct !{!10125, !10118, !10126}
!10126 = !DILocation(line: 3397, column: 9, scope: !10117)
!10127 = !DILocation(line: 3402, column: 27, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10014, file: !9176, line: 3402, column: 6)
!10129 = !DILocation(line: 3402, column: 43, scope: !10128)
!10130 = !DILocation(line: 3402, column: 69, scope: !10128)
!10131 = !DILocation(line: 3402, column: 6, scope: !10014)
!10132 = !DILocation(line: 3410, column: 9, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10134, file: !9176, line: 3410, column: 8)
!10134 = distinct !DILexicalBlock(scope: !10128, file: !9176, line: 3403, column: 3)
!10135 = !DILocation(line: 3410, column: 39, scope: !10133)
!10136 = !DILocation(line: 3410, column: 128, scope: !10133)
!10137 = !DILocation(line: 3411, column: 9, scope: !10133)
!10138 = !DILocation(line: 3411, column: 39, scope: !10133)
!10139 = !DILocation(line: 3411, column: 60, scope: !10133)
!10140 = !DILocation(line: 3411, column: 70, scope: !10133)
!10141 = !DILocation(line: 3411, column: 78, scope: !10133)
!10142 = !DILocation(line: 3411, column: 100, scope: !10133)
!10143 = !DILocation(line: 3411, column: 128, scope: !10133)
!10144 = !DILocation(line: 3412, column: 9, scope: !10133)
!10145 = !DILocation(line: 3412, column: 39, scope: !10133)
!10146 = !DILocation(line: 3412, column: 61, scope: !10133)
!10147 = !DILocation(line: 3412, column: 71, scope: !10133)
!10148 = !DILocation(line: 3412, column: 79, scope: !10133)
!10149 = !DILocation(line: 3412, column: 101, scope: !10133)
!10150 = !DILocation(line: 3410, column: 8, scope: !10134)
!10151 = !DILocation(line: 3419, column: 11, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10153, file: !9176, line: 3419, column: 10)
!10153 = distinct !DILexicalBlock(scope: !10133, file: !9176, line: 3417, column: 5)
!10154 = !DILocation(line: 3419, column: 57, scope: !10152)
!10155 = !DILocation(line: 3419, column: 80, scope: !10152)
!10156 = !DILocation(line: 3419, column: 89, scope: !10152)
!10157 = !DILocation(line: 3419, column: 10, scope: !10153)
!10158 = !DILocation(line: 3433, column: 30, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10160, file: !9176, line: 3433, column: 10)
!10160 = distinct !DILexicalBlock(scope: !10133, file: !9176, line: 3431, column: 5)
!10161 = !DILocation(line: 3433, column: 39, scope: !10159)
!10162 = !DILocation(line: 3433, column: 10, scope: !10160)
!10163 = !DILocation(line: 3436, column: 9, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10159, file: !9176, line: 3434, column: 7)
!10165 = !DILocation(line: 3439, column: 21, scope: !10164)
!10166 = !DILocation(line: 3442, column: 9, scope: !10164)
!10167 = !DILocation(line: 3442, column: 15, scope: !10164)
!10168 = !DILocation(line: 3442, column: 51, scope: !10164)
!10169 = !DILocation(line: 3444, column: 15, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10171, file: !9176, line: 3444, column: 14)
!10171 = distinct !DILexicalBlock(scope: !10164, file: !9176, line: 3443, column: 9)
!10172 = !DILocation(line: 3444, column: 29, scope: !10170)
!10173 = !DILocation(line: 3444, column: 43, scope: !10170)
!10174 = !DILocation(line: 3444, column: 14, scope: !10171)
!10175 = distinct !{!10175, !10166, !10176}
!10176 = !DILocation(line: 3448, column: 9, scope: !10164)
!10177 = !DILocation(line: 3456, column: 9, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10159, file: !9176, line: 3454, column: 7)
!10179 = !DILocation(line: 3459, column: 21, scope: !10178)
!10180 = !DILocation(line: 3462, column: 9, scope: !10178)
!10181 = !DILocation(line: 3462, column: 15, scope: !10178)
!10182 = !DILocation(line: 3464, column: 15, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10184, file: !9176, line: 3464, column: 14)
!10184 = distinct !DILexicalBlock(scope: !10178, file: !9176, line: 3463, column: 9)
!10185 = !DILocation(line: 3464, column: 29, scope: !10183)
!10186 = !DILocation(line: 3464, column: 43, scope: !10183)
!10187 = !DILocation(line: 3464, column: 14, scope: !10184)
!10188 = distinct !{!10188, !10180, !10189}
!10189 = !DILocation(line: 3468, column: 9, scope: !10178)
!10190 = !DILocation(line: 0, scope: !10133)
!10191 = !DILocation(line: 3473, column: 27, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10014, file: !9176, line: 3473, column: 6)
!10193 = !DILocation(line: 3473, column: 43, scope: !10192)
!10194 = !DILocation(line: 3473, column: 69, scope: !10192)
!10195 = !DILocation(line: 3473, column: 6, scope: !10014)
!10196 = !DILocation(line: 3479, column: 28, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10198, file: !9176, line: 3479, column: 8)
!10198 = distinct !DILexicalBlock(scope: !10192, file: !9176, line: 3474, column: 3)
!10199 = !DILocation(line: 3479, column: 37, scope: !10197)
!10200 = !DILocation(line: 3479, column: 8, scope: !10198)
!10201 = !DILocation(line: 3482, column: 7, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10197, file: !9176, line: 3480, column: 5)
!10203 = !DILocation(line: 3485, column: 19, scope: !10202)
!10204 = !DILocation(line: 3488, column: 7, scope: !10202)
!10205 = !DILocation(line: 3488, column: 13, scope: !10202)
!10206 = !DILocation(line: 3488, column: 49, scope: !10202)
!10207 = !DILocation(line: 3490, column: 13, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10209, file: !9176, line: 3490, column: 12)
!10209 = distinct !DILexicalBlock(scope: !10202, file: !9176, line: 3489, column: 7)
!10210 = !DILocation(line: 3490, column: 27, scope: !10208)
!10211 = !DILocation(line: 3490, column: 41, scope: !10208)
!10212 = !DILocation(line: 3490, column: 12, scope: !10209)
!10213 = distinct !{!10213, !10204, !10214}
!10214 = !DILocation(line: 3494, column: 7, scope: !10202)
!10215 = !DILocation(line: 3499, column: 7, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10197, file: !9176, line: 3497, column: 5)
!10217 = !DILocation(line: 3502, column: 19, scope: !10216)
!10218 = !DILocation(line: 3505, column: 7, scope: !10216)
!10219 = !DILocation(line: 3505, column: 13, scope: !10216)
!10220 = !DILocation(line: 3507, column: 13, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10222, file: !9176, line: 3507, column: 12)
!10222 = distinct !DILexicalBlock(scope: !10216, file: !9176, line: 3506, column: 7)
!10223 = !DILocation(line: 3507, column: 27, scope: !10221)
!10224 = !DILocation(line: 3507, column: 41, scope: !10221)
!10225 = !DILocation(line: 3507, column: 12, scope: !10222)
!10226 = distinct !{!10226, !10218, !10227}
!10227 = !DILocation(line: 3511, column: 7, scope: !10216)
!10228 = !DILocation(line: 3515, column: 27, scope: !10045)
!10229 = !DILocation(line: 3515, column: 43, scope: !10045)
!10230 = !DILocation(line: 3515, column: 69, scope: !10045)
!10231 = !DILocation(line: 3515, column: 6, scope: !10014)
!10232 = !DILocation(line: 0, scope: !10044)
!10233 = !DILocation(line: 3524, column: 8, scope: !10050)
!10234 = !DILocation(line: 3524, column: 8, scope: !10044)
!10235 = !DILocation(line: 3526, column: 7, scope: !10048)
!10236 = !DILocation(line: 3526, column: 7, scope: !10049)
!10237 = !DILocation(line: 3528, column: 5, scope: !10049)
!10238 = !DILocation(line: 3530, column: 8, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10044, file: !9176, line: 3530, column: 8)
!10240 = !DILocation(line: 3530, column: 8, scope: !10044)
!10241 = !DILocation(line: 3533, column: 7, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10239, file: !9176, line: 3531, column: 5)
!10243 = !DILocation(line: 3536, column: 19, scope: !10242)
!10244 = !DILocation(line: 3538, column: 7, scope: !10242)
!10245 = !DILocation(line: 3538, column: 13, scope: !10242)
!10246 = !DILocation(line: 3540, column: 13, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10248, file: !9176, line: 3540, column: 12)
!10248 = distinct !DILexicalBlock(scope: !10242, file: !9176, line: 3539, column: 7)
!10249 = !DILocation(line: 3540, column: 27, scope: !10247)
!10250 = !DILocation(line: 3540, column: 40, scope: !10247)
!10251 = !DILocation(line: 3540, column: 12, scope: !10248)
!10252 = distinct !{!10252, !10244, !10253}
!10253 = !DILocation(line: 3544, column: 7, scope: !10242)
!10254 = !DILocation(line: 3548, column: 5, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !9176, line: 3548, column: 5)
!10256 = distinct !DILexicalBlock(scope: !10044, file: !9176, line: 3548, column: 5)
!10257 = !DILocation(line: 3548, column: 5, scope: !10256)
!10258 = !DILocation(line: 3548, column: 5, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10255, file: !9176, line: 3548, column: 5)
!10260 = !DILocation(line: 3548, column: 5, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10262, file: !9176, line: 3548, column: 5)
!10262 = distinct !DILexicalBlock(scope: !10255, file: !9176, line: 3548, column: 5)
!10263 = !DILocation(line: 3548, column: 5, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10262, file: !9176, line: 3548, column: 5)
!10265 = !DILocation(line: 0, scope: !10255)
!10266 = !DILocation(line: 3550, column: 28, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10044, file: !9176, line: 3550, column: 8)
!10268 = !DILocation(line: 3550, column: 38, scope: !10267)
!10269 = !DILocation(line: 0, scope: !10267)
!10270 = !DILocation(line: 3550, column: 8, scope: !10044)
!10271 = !DILocation(line: 3556, column: 13, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10267, file: !9176, line: 3551, column: 5)
!10273 = !DILocation(line: 3556, column: 49, scope: !10272)
!10274 = !DILocation(line: 3556, column: 7, scope: !10272)
!10275 = !DILocation(line: 3558, column: 13, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10277, file: !9176, line: 3558, column: 12)
!10277 = distinct !DILexicalBlock(scope: !10272, file: !9176, line: 3557, column: 7)
!10278 = !DILocation(line: 3558, column: 27, scope: !10276)
!10279 = !DILocation(line: 3558, column: 41, scope: !10276)
!10280 = !DILocation(line: 3558, column: 12, scope: !10277)
!10281 = distinct !{!10281, !10274, !10282}
!10282 = !DILocation(line: 3562, column: 7, scope: !10272)
!10283 = !DILocation(line: 3570, column: 13, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10267, file: !9176, line: 3565, column: 5)
!10285 = !DILocation(line: 3570, column: 7, scope: !10284)
!10286 = !DILocation(line: 3572, column: 13, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10288, file: !9176, line: 3572, column: 12)
!10288 = distinct !DILexicalBlock(scope: !10284, file: !9176, line: 3571, column: 7)
!10289 = !DILocation(line: 3572, column: 27, scope: !10287)
!10290 = !DILocation(line: 3572, column: 41, scope: !10287)
!10291 = !DILocation(line: 3572, column: 12, scope: !10288)
!10292 = distinct !{!10292, !10285, !10293}
!10293 = !DILocation(line: 3576, column: 7, scope: !10284)
!10294 = !DILocation(line: 3580, column: 8, scope: !10044)
!10295 = !DILocation(line: 3582, column: 7, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10297, file: !9176, line: 3581, column: 5)
!10297 = distinct !DILexicalBlock(scope: !10044, file: !9176, line: 3580, column: 8)
!10298 = !DILocation(line: 3583, column: 5, scope: !10296)
!10299 = !DILocation(line: 3588, column: 31, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10014, file: !9176, line: 3588, column: 7)
!10301 = !DILocation(line: 3588, column: 41, scope: !10300)
!10302 = !DILocation(line: 3588, column: 7, scope: !10014)
!10303 = !DILocation(line: 3591, column: 8, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !9176, line: 3591, column: 8)
!10305 = distinct !DILexicalBlock(scope: !10300, file: !9176, line: 3589, column: 3)
!10306 = !DILocation(line: 3591, column: 38, scope: !10304)
!10307 = !DILocation(line: 3591, column: 8, scope: !10305)
!10308 = !DILocation(line: 3593, column: 44, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10310, file: !9176, line: 3593, column: 10)
!10310 = distinct !DILexicalBlock(scope: !10304, file: !9176, line: 3592, column: 5)
!10311 = !DILocation(line: 0, scope: !10309)
!10312 = !DILocation(line: 3593, column: 10, scope: !10310)
!10313 = !DILocation(line: 3610, column: 15, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10309, file: !9176, line: 3594, column: 7)
!10315 = !DILocation(line: 3610, column: 9, scope: !10314)
!10316 = !DILocation(line: 3612, column: 15, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10318, file: !9176, line: 3612, column: 14)
!10318 = distinct !DILexicalBlock(scope: !10314, file: !9176, line: 3611, column: 9)
!10319 = !DILocation(line: 3612, column: 29, scope: !10317)
!10320 = !DILocation(line: 3612, column: 43, scope: !10317)
!10321 = !DILocation(line: 3612, column: 14, scope: !10318)
!10322 = distinct !{!10322, !10315, !10323}
!10323 = !DILocation(line: 3616, column: 9, scope: !10314)
!10324 = !DILocation(line: 3619, column: 9, scope: !10314)
!10325 = !DILocation(line: 3626, column: 9, scope: !10314)
!10326 = !DILocation(line: 3629, column: 21, scope: !10314)
!10327 = !DILocation(line: 3632, column: 9, scope: !10314)
!10328 = !DILocation(line: 3632, column: 15, scope: !10314)
!10329 = !DILocation(line: 3632, column: 51, scope: !10314)
!10330 = !DILocation(line: 3634, column: 15, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10332, file: !9176, line: 3634, column: 14)
!10332 = distinct !DILexicalBlock(scope: !10314, file: !9176, line: 3633, column: 9)
!10333 = !DILocation(line: 3634, column: 29, scope: !10331)
!10334 = !DILocation(line: 3634, column: 43, scope: !10331)
!10335 = !DILocation(line: 3634, column: 14, scope: !10332)
!10336 = distinct !{!10336, !10327, !10337}
!10337 = !DILocation(line: 3638, column: 9, scope: !10314)
!10338 = !DILocation(line: 3649, column: 15, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10309, file: !9176, line: 3641, column: 7)
!10340 = !DILocation(line: 3649, column: 9, scope: !10339)
!10341 = !DILocation(line: 3651, column: 15, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10343, file: !9176, line: 3651, column: 14)
!10343 = distinct !DILexicalBlock(scope: !10339, file: !9176, line: 3650, column: 9)
!10344 = !DILocation(line: 3651, column: 29, scope: !10342)
!10345 = !DILocation(line: 3651, column: 43, scope: !10342)
!10346 = !DILocation(line: 3651, column: 14, scope: !10343)
!10347 = distinct !{!10347, !10340, !10348}
!10348 = !DILocation(line: 3655, column: 9, scope: !10339)
!10349 = !DILocation(line: 3661, column: 44, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !9176, line: 3661, column: 10)
!10351 = distinct !DILexicalBlock(scope: !10304, file: !9176, line: 3659, column: 5)
!10352 = !DILocation(line: 3661, column: 10, scope: !10351)
!10353 = !DILocation(line: 3668, column: 27, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10350, file: !9176, line: 3666, column: 7)
!10355 = !DILocation(line: 3671, column: 14, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10354, file: !9176, line: 3670, column: 13)
!10357 = !DILocation(line: 3671, column: 81, scope: !10356)
!10358 = !DILocation(line: 3671, column: 55, scope: !10356)
!10359 = !DILocation(line: 3671, column: 92, scope: !10356)
!10360 = !DILocation(line: 3672, column: 14, scope: !10356)
!10361 = !DILocation(line: 3672, column: 80, scope: !10356)
!10362 = !DILocation(line: 3672, column: 53, scope: !10356)
!10363 = !DILocation(line: 3672, column: 111, scope: !10356)
!10364 = !DILocation(line: 3673, column: 14, scope: !10356)
!10365 = !DILocation(line: 3673, column: 80, scope: !10356)
!10366 = !DILocation(line: 3673, column: 86, scope: !10356)
!10367 = !DILocation(line: 3673, column: 53, scope: !10356)
!10368 = !DILocation(line: 3673, column: 111, scope: !10356)
!10369 = !DILocation(line: 3674, column: 14, scope: !10356)
!10370 = !DILocation(line: 3674, column: 82, scope: !10356)
!10371 = !DILocation(line: 3674, column: 101, scope: !10356)
!10372 = !DILocation(line: 3674, column: 53, scope: !10356)
!10373 = !DILocation(line: 3674, column: 126, scope: !10356)
!10374 = !DILocation(line: 3675, column: 14, scope: !10356)
!10375 = !DILocation(line: 3675, column: 80, scope: !10356)
!10376 = !DILocation(line: 3675, column: 85, scope: !10356)
!10377 = !DILocation(line: 3675, column: 53, scope: !10356)
!10378 = !DILocation(line: 3675, column: 111, scope: !10356)
!10379 = !DILocation(line: 3676, column: 14, scope: !10356)
!10380 = !DILocation(line: 3676, column: 80, scope: !10356)
!10381 = !DILocation(line: 3676, column: 85, scope: !10356)
!10382 = !DILocation(line: 3676, column: 53, scope: !10356)
!10383 = !DILocation(line: 3670, column: 13, scope: !10354)
!10384 = !DILocation(line: 3691, column: 3, scope: !10014)
!10385 = !DILocation(line: 3692, column: 1, scope: !10014)
!10386 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9176, file: !9176, line: 3703, type: !10387, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !10389)
!10387 = !DISubroutineType(types: !10388)
!10388 = !{null, !10017}
!10389 = !{!10390}
!10390 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10386, file: !9176, line: 3703, type: !10017)
!10391 = !DILocation(line: 0, scope: !10386)
!10392 = !DILocation(line: 3706, column: 22, scope: !10386)
!10393 = !DILocation(line: 3706, column: 37, scope: !10386)
!10394 = !DILocation(line: 3709, column: 12, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10386, file: !9176, line: 3709, column: 6)
!10396 = !DILocation(line: 3709, column: 15, scope: !10395)
!10397 = !DILocation(line: 3709, column: 31, scope: !10395)
!10398 = !DILocation(line: 3709, column: 6, scope: !10386)
!10399 = !DILocation(line: 3711, column: 24, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10395, file: !9176, line: 3710, column: 3)
!10401 = !DILocation(line: 3711, column: 33, scope: !10400)
!10402 = !DILocation(line: 3712, column: 3, scope: !10400)
!10403 = !DILocation(line: 3713, column: 17, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10395, file: !9176, line: 3713, column: 11)
!10405 = !DILocation(line: 3713, column: 20, scope: !10404)
!10406 = !DILocation(line: 3713, column: 35, scope: !10404)
!10407 = !DILocation(line: 0, scope: !10404)
!10408 = !DILocation(line: 3713, column: 11, scope: !10395)
!10409 = !DILocation(line: 3715, column: 33, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10404, file: !9176, line: 3714, column: 3)
!10411 = !DILocation(line: 3716, column: 3, scope: !10410)
!10412 = !DILocation(line: 3719, column: 33, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10404, file: !9176, line: 3718, column: 3)
!10414 = !DILocation(line: 3723, column: 12, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10386, file: !9176, line: 3723, column: 6)
!10416 = !DILocation(line: 3723, column: 15, scope: !10415)
!10417 = !DILocation(line: 3729, column: 24, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10415, file: !9176, line: 3728, column: 3)
!10419 = !DILocation(line: 3729, column: 33, scope: !10418)
!10420 = !DILocation(line: 3732, column: 61, scope: !10386)
!10421 = !DILocation(line: 3732, column: 81, scope: !10386)
!10422 = !DILocation(line: 3732, column: 22, scope: !10386)
!10423 = !DILocation(line: 3732, column: 42, scope: !10386)
!10424 = !DILocation(line: 3735, column: 12, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10386, file: !9176, line: 3735, column: 6)
!10426 = !DILocation(line: 3735, column: 17, scope: !10425)
!10427 = !DILocation(line: 3735, column: 35, scope: !10425)
!10428 = !DILocation(line: 3735, column: 6, scope: !10386)
!10429 = !DILocation(line: 3737, column: 24, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10425, file: !9176, line: 3736, column: 3)
!10431 = !DILocation(line: 3737, column: 33, scope: !10430)
!10432 = !DILocation(line: 3738, column: 3, scope: !10430)
!10433 = !DILocation(line: 3739, column: 17, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10425, file: !9176, line: 3739, column: 11)
!10435 = !DILocation(line: 3739, column: 22, scope: !10434)
!10436 = !DILocation(line: 3739, column: 39, scope: !10434)
!10437 = !DILocation(line: 0, scope: !10434)
!10438 = !DILocation(line: 3739, column: 11, scope: !10425)
!10439 = !DILocation(line: 3741, column: 33, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10434, file: !9176, line: 3740, column: 3)
!10441 = !DILocation(line: 3742, column: 3, scope: !10440)
!10442 = !DILocation(line: 3745, column: 33, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10434, file: !9176, line: 3744, column: 3)
!10444 = !DILocation(line: 3749, column: 12, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10386, file: !9176, line: 3749, column: 6)
!10446 = !DILocation(line: 3749, column: 16, scope: !10445)
!10447 = !DILocation(line: 3755, column: 24, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10445, file: !9176, line: 3754, column: 3)
!10449 = !DILocation(line: 3755, column: 33, scope: !10448)
!10450 = !DILocation(line: 3759, column: 12, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10386, file: !9176, line: 3759, column: 6)
!10452 = !DILocation(line: 3759, column: 15, scope: !10451)
!10453 = !DILocation(line: 3759, column: 30, scope: !10451)
!10454 = !DILocation(line: 3759, column: 6, scope: !10386)
!10455 = !DILocation(line: 3765, column: 28, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10451, file: !9176, line: 3764, column: 3)
!10457 = !DILocation(line: 3765, column: 37, scope: !10456)
!10458 = !DILocation(line: 3767, column: 54, scope: !10386)
!10459 = !DILocation(line: 3767, column: 62, scope: !10386)
!10460 = !DILocation(line: 3767, column: 26, scope: !10386)
!10461 = !DILocation(line: 3767, column: 36, scope: !10386)
!10462 = !DILocation(line: 3768, column: 49, scope: !10386)
!10463 = !DILocation(line: 3768, column: 57, scope: !10386)
!10464 = !DILocation(line: 3768, column: 26, scope: !10386)
!10465 = !DILocation(line: 3768, column: 31, scope: !10386)
!10466 = !DILocation(line: 3769, column: 50, scope: !10386)
!10467 = !DILocation(line: 3769, column: 78, scope: !10386)
!10468 = !DILocation(line: 3769, column: 26, scope: !10386)
!10469 = !DILocation(line: 3769, column: 31, scope: !10386)
!10470 = !DILocation(line: 3770, column: 52, scope: !10386)
!10471 = !DILocation(line: 3770, column: 102, scope: !10386)
!10472 = !DILocation(line: 3770, column: 109, scope: !10386)
!10473 = !DILocation(line: 3770, column: 26, scope: !10386)
!10474 = !DILocation(line: 3770, column: 31, scope: !10386)
!10475 = !DILocation(line: 3771, column: 50, scope: !10386)
!10476 = !DILocation(line: 3771, column: 78, scope: !10386)
!10477 = !DILocation(line: 3771, column: 26, scope: !10386)
!10478 = !DILocation(line: 3771, column: 31, scope: !10386)
!10479 = !DILocation(line: 3772, column: 50, scope: !10386)
!10480 = !DILocation(line: 3772, column: 78, scope: !10386)
!10481 = !DILocation(line: 3772, column: 26, scope: !10386)
!10482 = !DILocation(line: 3772, column: 31, scope: !10386)
!10483 = !DILocation(line: 3773, column: 1, scope: !10386)
!10484 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !10485, file: !10485, line: 257, type: !4999, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10486)
!10485 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10486 = !{!10487}
!10487 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10484, file: !10485, line: 257, type: !142)
!10488 = !DILocation(line: 0, scope: !10484)
!10489 = !DILocation(line: 260, column: 3, scope: !10484)
!10490 = !DILocation(line: 261, column: 1, scope: !10484)
!10491 = distinct !DISubprogram(name: "LL_InitTick", scope: !10492, file: !10492, line: 260, type: !7606, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10493)
!10492 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10493 = !{!10494, !10495}
!10494 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10491, file: !10492, line: 260, type: !142)
!10495 = !DILocalVariable(name: "Ticks", arg: 2, scope: !10491, file: !10492, line: 260, type: !142)
!10496 = !DILocation(line: 0, scope: !10491)
!10497 = !DILocation(line: 263, column: 46, scope: !10491)
!10498 = !DILocation(line: 263, column: 55, scope: !10491)
!10499 = !DILocation(line: 263, column: 18, scope: !10491)
!10500 = !DILocation(line: 264, column: 18, scope: !10491)
!10501 = !DILocation(line: 265, column: 18, scope: !10491)
!10502 = !DILocation(line: 267, column: 1, scope: !10491)
!10503 = distinct !DISubprogram(name: "LL_mDelay", scope: !10485, file: !10485, line: 273, type: !4999, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10504)
!10504 = !{!10505, !10506}
!10505 = !DILocalVariable(name: "Delay", arg: 1, scope: !10503, file: !10485, line: 273, type: !142)
!10506 = !DILocalVariable(name: "tmp", scope: !10503, file: !10485, line: 275, type: !192)
!10507 = !DILocation(line: 0, scope: !10503)
!10508 = !DILocation(line: 275, column: 3, scope: !10503)
!10509 = !DILocation(line: 275, column: 18, scope: !10503)
!10510 = !DILocation(line: 275, column: 33, scope: !10503)
!10511 = !DILocation(line: 277, column: 10, scope: !10503)
!10512 = !DILocation(line: 280, column: 12, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10503, file: !10485, line: 280, column: 6)
!10514 = !DILocation(line: 285, column: 3, scope: !10503)
!10515 = !DILocation(line: 287, column: 18, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !10485, line: 287, column: 8)
!10517 = distinct !DILexicalBlock(scope: !10503, file: !10485, line: 286, column: 3)
!10518 = !DILocation(line: 292, column: 1, scope: !10503)
!10519 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !10485, file: !10485, line: 323, type: !4999, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10520)
!10520 = !{!10521}
!10521 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10519, file: !10485, line: 323, type: !142)
!10522 = !DILocation(line: 0, scope: !10519)
!10523 = !DILocation(line: 326, column: 19, scope: !10519)
!10524 = !DILocation(line: 327, column: 1, scope: !10519)
!10525 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !10485, file: !10485, line: 338, type: !10526, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10529)
!10526 = !DISubroutineType(types: !10527)
!10527 = !{!10528, !142}
!10528 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !725, line: 201, baseType: !724)
!10529 = !{!10530, !10531, !10532, !10533, !10534}
!10530 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !10525, file: !10485, line: 338, type: !142)
!10531 = !DILocalVariable(name: "timeout", scope: !10525, file: !10485, line: 340, type: !142)
!10532 = !DILocalVariable(name: "getlatency", scope: !10525, file: !10485, line: 341, type: !142)
!10533 = !DILocalVariable(name: "latency", scope: !10525, file: !10485, line: 342, type: !142)
!10534 = !DILocalVariable(name: "status", scope: !10525, file: !10485, line: 343, type: !10528)
!10535 = !DILocation(line: 0, scope: !10525)
!10536 = !DILocation(line: 347, column: 21, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10525, file: !10485, line: 347, column: 6)
!10538 = !DILocation(line: 347, column: 6, scope: !10525)
!10539 = !DILocation(line: 353, column: 8, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10541, file: !10485, line: 353, column: 8)
!10541 = distinct !DILexicalBlock(scope: !10537, file: !10485, line: 352, column: 3)
!10542 = !DILocation(line: 353, column: 40, scope: !10540)
!10543 = !DILocation(line: 353, column: 8, scope: !10541)
!10544 = !DILocation(line: 356, column: 26, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10546, file: !10485, line: 356, column: 10)
!10546 = distinct !DILexicalBlock(scope: !10540, file: !10485, line: 354, column: 5)
!10547 = !DILocation(line: 356, column: 55, scope: !10545)
!10548 = !DILocation(line: 362, column: 55, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10546, file: !10485, line: 362, column: 10)
!10550 = !DILocation(line: 368, column: 55, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10546, file: !10485, line: 368, column: 10)
!10552 = !DILocation(line: 374, column: 26, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10546, file: !10485, line: 374, column: 10)
!10554 = !DILocation(line: 374, column: 55, scope: !10553)
!10555 = !DILocation(line: 380, column: 28, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10557, file: !10485, line: 380, column: 12)
!10557 = distinct !DILexicalBlock(scope: !10553, file: !10485, line: 379, column: 7)
!10558 = !DILocation(line: 380, column: 57, scope: !10556)
!10559 = !DILocation(line: 387, column: 8, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10541, file: !10485, line: 387, column: 8)
!10561 = !DILocation(line: 387, column: 40, scope: !10560)
!10562 = !DILocation(line: 387, column: 8, scope: !10541)
!10563 = !DILocation(line: 390, column: 26, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10565, file: !10485, line: 390, column: 10)
!10565 = distinct !DILexicalBlock(scope: !10560, file: !10485, line: 388, column: 5)
!10566 = !DILocation(line: 390, column: 55, scope: !10564)
!10567 = !DILocation(line: 396, column: 26, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10565, file: !10485, line: 396, column: 10)
!10569 = !DILocation(line: 396, column: 55, scope: !10568)
!10570 = !DILocation(line: 402, column: 26, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10565, file: !10485, line: 402, column: 10)
!10572 = !DILocation(line: 402, column: 55, scope: !10571)
!10573 = !DILocation(line: 407, column: 26, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10565, file: !10485, line: 407, column: 10)
!10575 = !DILocation(line: 407, column: 55, scope: !10574)
!10576 = !DILocation(line: 413, column: 28, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10578, file: !10485, line: 413, column: 12)
!10578 = distinct !DILexicalBlock(scope: !10574, file: !10485, line: 412, column: 7)
!10579 = !DILocation(line: 413, column: 57, scope: !10577)
!10580 = !DILocation(line: 0, scope: !10541)
!10581 = !DILocation(line: 420, column: 8, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10541, file: !10485, line: 420, column: 8)
!10583 = !DILocation(line: 420, column: 40, scope: !10582)
!10584 = !DILocation(line: 420, column: 8, scope: !10541)
!10585 = !DILocation(line: 423, column: 26, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10587, file: !10485, line: 423, column: 10)
!10587 = distinct !DILexicalBlock(scope: !10582, file: !10485, line: 421, column: 5)
!10588 = !DILocation(line: 423, column: 55, scope: !10586)
!10589 = !DILocation(line: 429, column: 26, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10587, file: !10485, line: 429, column: 10)
!10591 = !DILocation(line: 429, column: 55, scope: !10590)
!10592 = !DILocation(line: 435, column: 28, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10594, file: !10485, line: 435, column: 12)
!10594 = distinct !DILexicalBlock(scope: !10590, file: !10485, line: 434, column: 7)
!10595 = !DILocation(line: 435, column: 57, scope: !10593)
!10596 = !DILocation(line: 444, column: 5, scope: !10541)
!10597 = !DILocation(line: 448, column: 5, scope: !10541)
!10598 = !DILocation(line: 451, column: 18, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10541, file: !10485, line: 449, column: 5)
!10600 = !DILocation(line: 452, column: 12, scope: !10599)
!10601 = !DILocation(line: 453, column: 26, scope: !10541)
!10602 = !DILocation(line: 453, column: 38, scope: !10541)
!10603 = !DILocation(line: 453, column: 5, scope: !10599)
!10604 = distinct !{!10604, !10597, !10605}
!10605 = !DILocation(line: 453, column: 54, scope: !10541)
!10606 = !DILocation(line: 0, scope: !10537)
!10607 = !DILocation(line: 464, column: 3, scope: !10525)
!10608 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !10609, file: !10609, line: 519, type: !4989, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10609 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10610 = !DILocation(line: 521, column: 21, scope: !10608)
!10611 = !DILocation(line: 521, column: 3, scope: !10608)
!10612 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !4755, file: !4755, line: 1543, type: !4999, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10613)
!10613 = !{!10614}
!10614 = !DILocalVariable(name: "Latency", arg: 1, scope: !10612, file: !4755, line: 1543, type: !142)
!10615 = !DILocation(line: 0, scope: !10612)
!10616 = !DILocation(line: 1545, column: 3, scope: !10612)
!10617 = !DILocation(line: 1546, column: 1, scope: !10612)
!10618 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !4755, file: !4755, line: 1569, type: !4989, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10619 = !DILocation(line: 1571, column: 21, scope: !10618)
!10620 = !DILocation(line: 1571, column: 3, scope: !10618)
!10621 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !10485, file: !10485, line: 483, type: !10622, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10638)
!10622 = !DISubroutineType(types: !10623)
!10623 = !{!10528, !10624, !10631}
!10624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10625, size: 32)
!10625 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !10492, line: 114, baseType: !10626)
!10626 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10492, line: 94, size: 96, elements: !10627)
!10627 = !{!10628, !10629, !10630}
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10626, file: !10492, line: 96, baseType: !142, size: 32)
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10626, file: !10492, line: 102, baseType: !142, size: 32, offset: 32)
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10626, file: !10492, line: 109, baseType: !142, size: 32, offset: 64)
!10631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10632, size: 32)
!10632 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !10492, line: 139, baseType: !10633)
!10633 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10492, line: 119, size: 96, elements: !10634)
!10634 = !{!10635, !10636, !10637}
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10633, file: !10492, line: 121, baseType: !142, size: 32)
!10636 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10633, file: !10492, line: 127, baseType: !142, size: 32, offset: 32)
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10633, file: !10492, line: 133, baseType: !142, size: 32, offset: 64)
!10638 = !{!10639, !10640, !10641, !10642}
!10639 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10621, file: !10485, line: 483, type: !10624)
!10640 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10621, file: !10485, line: 484, type: !10631)
!10641 = !DILocalVariable(name: "status", scope: !10621, file: !10485, line: 486, type: !10528)
!10642 = !DILocalVariable(name: "pllfreq", scope: !10621, file: !10485, line: 487, type: !142)
!10643 = !DILocation(line: 0, scope: !10621)
!10644 = !DILocation(line: 490, column: 6, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10621, file: !10485, line: 490, column: 6)
!10646 = !DILocation(line: 490, column: 25, scope: !10645)
!10647 = !DILocation(line: 490, column: 6, scope: !10621)
!10648 = !DILocation(line: 493, column: 15, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10645, file: !10485, line: 491, column: 3)
!10650 = !DILocation(line: 496, column: 8, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10649, file: !10485, line: 496, column: 8)
!10652 = !DILocation(line: 496, column: 29, scope: !10651)
!10653 = !DILocation(line: 496, column: 8, scope: !10649)
!10654 = !DILocation(line: 498, column: 7, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10651, file: !10485, line: 497, column: 5)
!10656 = !DILocation(line: 499, column: 7, scope: !10655)
!10657 = !DILocation(line: 499, column: 14, scope: !10655)
!10658 = !DILocation(line: 499, column: 35, scope: !10655)
!10659 = distinct !{!10659, !10656, !10660}
!10660 = !DILocation(line: 502, column: 7, scope: !10655)
!10661 = !DILocation(line: 506, column: 76, scope: !10649)
!10662 = !DILocation(line: 506, column: 103, scope: !10649)
!10663 = !DILocation(line: 507, column: 54, scope: !10649)
!10664 = !DILocation(line: 506, column: 5, scope: !10649)
!10665 = !DILocation(line: 510, column: 14, scope: !10649)
!10666 = !DILocation(line: 511, column: 3, scope: !10649)
!10667 = !DILocation(line: 0, scope: !10645)
!10668 = !DILocation(line: 518, column: 3, scope: !10621)
!10669 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !10485, file: !10485, line: 642, type: !10670, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10672)
!10670 = !DISubroutineType(types: !10671)
!10671 = !{!10528}
!10672 = !{!10673}
!10673 = !DILocalVariable(name: "status", scope: !10669, file: !10485, line: 644, type: !10528)
!10674 = !DILocation(line: 0, scope: !10669)
!10675 = !DILocation(line: 647, column: 6, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10669, file: !10485, line: 647, column: 6)
!10677 = !DILocation(line: 647, column: 27, scope: !10676)
!10678 = !DILocation(line: 655, column: 6, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10669, file: !10485, line: 655, column: 6)
!10680 = !DILocation(line: 655, column: 30, scope: !10679)
!10681 = !DILocation(line: 663, column: 6, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10669, file: !10485, line: 663, column: 6)
!10683 = !DILocation(line: 663, column: 30, scope: !10682)
!10684 = !DILocation(line: 663, column: 6, scope: !10669)
!10685 = !DILocation(line: 669, column: 3, scope: !10669)
!10686 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !10485, file: !10485, line: 611, type: !10687, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10689)
!10687 = !DISubroutineType(types: !10688)
!10688 = !{!142, !142, !10624}
!10689 = !{!10690, !10691, !10692}
!10690 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10686, file: !10485, line: 611, type: !142)
!10691 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10686, file: !10485, line: 611, type: !10624)
!10692 = !DILocalVariable(name: "pllfreq", scope: !10686, file: !10485, line: 613, type: !142)
!10693 = !DILocation(line: 0, scope: !10686)
!10694 = !DILocation(line: 622, column: 56, scope: !10686)
!10695 = !DILocation(line: 622, column: 61, scope: !10686)
!10696 = !DILocation(line: 622, column: 32, scope: !10686)
!10697 = !DILocation(line: 626, column: 45, scope: !10686)
!10698 = !DILocation(line: 626, column: 50, scope: !10686)
!10699 = !DILocation(line: 626, column: 21, scope: !10686)
!10700 = !DILocation(line: 630, column: 47, scope: !10686)
!10701 = !DILocation(line: 630, column: 82, scope: !10686)
!10702 = !DILocation(line: 630, column: 21, scope: !10686)
!10703 = !DILocation(line: 633, column: 3, scope: !10686)
!10704 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6945, file: !6945, line: 3007, type: !4989, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10705 = !DILocation(line: 3009, column: 11, scope: !10704)
!10706 = !DILocation(line: 3009, column: 44, scope: !10704)
!10707 = !DILocation(line: 3009, column: 3, scope: !10704)
!10708 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6945, file: !6945, line: 2987, type: !2876, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10709 = !DILocation(line: 2989, column: 3, scope: !10708)
!10710 = !DILocation(line: 2990, column: 1, scope: !10708)
!10711 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6945, file: !6945, line: 4304, type: !7079, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10712)
!10712 = !{!10713, !10714, !10715, !10716}
!10713 = !DILocalVariable(name: "Source", arg: 1, scope: !10711, file: !6945, line: 4304, type: !142)
!10714 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10711, file: !6945, line: 4304, type: !142)
!10715 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10711, file: !6945, line: 4304, type: !142)
!10716 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10711, file: !6945, line: 4304, type: !142)
!10717 = !DILocation(line: 0, scope: !10711)
!10718 = !DILocation(line: 4306, column: 3, scope: !10711)
!10719 = !DILocation(line: 4308, column: 3, scope: !10711)
!10720 = !DILocation(line: 4310, column: 3, scope: !10711)
!10721 = !DILocation(line: 4312, column: 1, scope: !10711)
!10722 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !10485, file: !10485, line: 681, type: !10723, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10725)
!10723 = !DISubroutineType(types: !10724)
!10724 = !{!10528, !142, !10631}
!10725 = !{!10726, !10727, !10728, !10729}
!10726 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10722, file: !10485, line: 681, type: !142)
!10727 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10722, file: !10485, line: 681, type: !10631)
!10728 = !DILocalVariable(name: "status", scope: !10722, file: !10485, line: 683, type: !10528)
!10729 = !DILocalVariable(name: "hclk_frequency", scope: !10722, file: !10485, line: 684, type: !142)
!10730 = !DILocation(line: 0, scope: !10722)
!10731 = !DILocation(line: 691, column: 20, scope: !10722)
!10732 = !DILocation(line: 694, column: 6, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10722, file: !10485, line: 694, column: 6)
!10734 = !DILocation(line: 694, column: 22, scope: !10733)
!10735 = !DILocation(line: 694, column: 6, scope: !10722)
!10736 = !DILocation(line: 697, column: 14, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10733, file: !10485, line: 695, column: 3)
!10738 = !DILocation(line: 701, column: 13, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10722, file: !10485, line: 701, column: 6)
!10740 = !DILocation(line: 701, column: 6, scope: !10722)
!10741 = !DILocation(line: 704, column: 5, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10739, file: !10485, line: 702, column: 3)
!10743 = !DILocation(line: 705, column: 5, scope: !10742)
!10744 = !DILocation(line: 705, column: 12, scope: !10742)
!10745 = !DILocation(line: 705, column: 33, scope: !10742)
!10746 = distinct !{!10746, !10743, !10747}
!10747 = !DILocation(line: 708, column: 5, scope: !10742)
!10748 = !DILocation(line: 711, column: 49, scope: !10742)
!10749 = !DILocation(line: 711, column: 5, scope: !10742)
!10750 = !DILocation(line: 712, column: 5, scope: !10742)
!10751 = !DILocation(line: 713, column: 5, scope: !10742)
!10752 = !DILocation(line: 713, column: 12, scope: !10742)
!10753 = !DILocation(line: 713, column: 37, scope: !10742)
!10754 = distinct !{!10754, !10751, !10755}
!10755 = !DILocation(line: 716, column: 5, scope: !10742)
!10756 = !DILocation(line: 719, column: 50, scope: !10742)
!10757 = !DILocation(line: 719, column: 5, scope: !10742)
!10758 = !DILocation(line: 720, column: 50, scope: !10742)
!10759 = !DILocation(line: 720, column: 5, scope: !10742)
!10760 = !DILocation(line: 721, column: 3, scope: !10742)
!10761 = !DILocation(line: 724, column: 6, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10722, file: !10485, line: 724, column: 6)
!10763 = !DILocation(line: 724, column: 22, scope: !10762)
!10764 = !DILocation(line: 724, column: 6, scope: !10722)
!10765 = !DILocation(line: 727, column: 14, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10762, file: !10485, line: 725, column: 3)
!10767 = !DILocation(line: 728, column: 3, scope: !10766)
!10768 = !DILocation(line: 731, column: 13, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10722, file: !10485, line: 731, column: 6)
!10770 = !DILocation(line: 731, column: 6, scope: !10722)
!10771 = !DILocation(line: 733, column: 5, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10769, file: !10485, line: 732, column: 3)
!10773 = !DILocation(line: 734, column: 3, scope: !10772)
!10774 = !DILocation(line: 736, column: 3, scope: !10722)
!10775 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6945, file: !6945, line: 4184, type: !2876, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10776 = !DILocation(line: 4186, column: 3, scope: !10775)
!10777 = !DILocation(line: 4187, column: 1, scope: !10775)
!10778 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6945, file: !6945, line: 4205, type: !4989, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10779 = !DILocation(line: 4207, column: 11, scope: !10778)
!10780 = !DILocation(line: 4207, column: 44, scope: !10778)
!10781 = !DILocation(line: 4207, column: 3, scope: !10778)
!10782 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6945, file: !6945, line: 3224, type: !4999, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10783)
!10783 = !{!10784}
!10784 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10782, file: !6945, line: 3224, type: !142)
!10785 = !DILocation(line: 0, scope: !10782)
!10786 = !DILocation(line: 3226, column: 3, scope: !10782)
!10787 = !DILocation(line: 3227, column: 1, scope: !10782)
!10788 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6945, file: !6945, line: 3188, type: !4999, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10789)
!10789 = !{!10790}
!10790 = !DILocalVariable(name: "Source", arg: 1, scope: !10788, file: !6945, line: 3188, type: !142)
!10791 = !DILocation(line: 0, scope: !10788)
!10792 = !DILocation(line: 3190, column: 3, scope: !10788)
!10793 = !DILocation(line: 3191, column: 1, scope: !10788)
!10794 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6945, file: !6945, line: 3204, type: !4989, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10795 = !DILocation(line: 3206, column: 21, scope: !10794)
!10796 = !DILocation(line: 3206, column: 3, scope: !10794)
!10797 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6945, file: !6945, line: 3240, type: !4999, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10798)
!10798 = !{!10799}
!10799 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10797, file: !6945, line: 3240, type: !142)
!10800 = !DILocation(line: 0, scope: !10797)
!10801 = !DILocation(line: 3242, column: 3, scope: !10797)
!10802 = !DILocation(line: 3243, column: 1, scope: !10797)
!10803 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6945, file: !6945, line: 3256, type: !4999, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10804)
!10804 = !{!10805}
!10805 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10803, file: !6945, line: 3256, type: !142)
!10806 = !DILocation(line: 0, scope: !10803)
!10807 = !DILocation(line: 3258, column: 3, scope: !10803)
!10808 = !DILocation(line: 3259, column: 1, scope: !10803)
!10809 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !6945, file: !6945, line: 5969, type: !4989, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10810 = !DILocation(line: 5971, column: 11, scope: !10809)
!10811 = !DILocation(line: 5971, column: 47, scope: !10809)
!10812 = !DILocation(line: 5971, column: 3, scope: !10809)
!10813 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !6945, file: !6945, line: 5153, type: !4989, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10814 = !DILocation(line: 5155, column: 11, scope: !10813)
!10815 = !DILocation(line: 5155, column: 47, scope: !10813)
!10816 = !DILocation(line: 5155, column: 3, scope: !10813)
!10817 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !10485, file: !10485, line: 540, type: !10818, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !10820)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{!10528, !142, !142, !10624, !10631}
!10820 = !{!10821, !10822, !10823, !10824, !10825, !10826}
!10821 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10817, file: !10485, line: 540, type: !142)
!10822 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10817, file: !10485, line: 540, type: !142)
!10823 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10817, file: !10485, line: 541, type: !10624)
!10824 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10817, file: !10485, line: 541, type: !10631)
!10825 = !DILocalVariable(name: "status", scope: !10817, file: !10485, line: 543, type: !10528)
!10826 = !DILocalVariable(name: "pllfreq", scope: !10817, file: !10485, line: 544, type: !142)
!10827 = !DILocation(line: 0, scope: !10817)
!10828 = !DILocation(line: 551, column: 6, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10817, file: !10485, line: 551, column: 6)
!10830 = !DILocation(line: 551, column: 25, scope: !10829)
!10831 = !DILocation(line: 551, column: 6, scope: !10817)
!10832 = !DILocation(line: 554, column: 15, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10829, file: !10485, line: 552, column: 3)
!10834 = !DILocation(line: 557, column: 8, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10833, file: !10485, line: 557, column: 8)
!10836 = !DILocation(line: 557, column: 29, scope: !10835)
!10837 = !DILocation(line: 557, column: 8, scope: !10833)
!10838 = !DILocation(line: 560, column: 20, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10840, file: !10485, line: 560, column: 10)
!10840 = distinct !DILexicalBlock(scope: !10835, file: !10485, line: 558, column: 5)
!10841 = !DILocation(line: 560, column: 10, scope: !10840)
!10842 = !DILocation(line: 562, column: 9, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10839, file: !10485, line: 561, column: 7)
!10844 = !DILocation(line: 563, column: 7, scope: !10843)
!10845 = !DILocation(line: 566, column: 9, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10839, file: !10485, line: 565, column: 7)
!10847 = !DILocation(line: 570, column: 7, scope: !10840)
!10848 = !DILocation(line: 571, column: 7, scope: !10840)
!10849 = !DILocation(line: 571, column: 14, scope: !10840)
!10850 = !DILocation(line: 571, column: 35, scope: !10840)
!10851 = distinct !{!10851, !10848, !10852}
!10852 = !DILocation(line: 574, column: 7, scope: !10840)
!10853 = !DILocation(line: 578, column: 76, scope: !10833)
!10854 = !DILocation(line: 578, column: 103, scope: !10833)
!10855 = !DILocation(line: 579, column: 54, scope: !10833)
!10856 = !DILocation(line: 578, column: 5, scope: !10833)
!10857 = !DILocation(line: 582, column: 14, scope: !10833)
!10858 = !DILocation(line: 583, column: 3, scope: !10833)
!10859 = !DILocation(line: 0, scope: !10829)
!10860 = !DILocation(line: 590, column: 3, scope: !10817)
!10861 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6945, file: !6945, line: 2969, type: !4989, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10862 = !DILocation(line: 2971, column: 11, scope: !10861)
!10863 = !DILocation(line: 2971, column: 44, scope: !10861)
!10864 = !DILocation(line: 2971, column: 3, scope: !10861)
!10865 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !6945, file: !6945, line: 2929, type: !2876, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10866 = !DILocation(line: 2931, column: 3, scope: !10865)
!10867 = !DILocation(line: 2932, column: 1, scope: !10865)
!10868 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6945, file: !6945, line: 2939, type: !2876, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10869 = !DILocation(line: 2941, column: 3, scope: !10868)
!10870 = !DILocation(line: 2942, column: 1, scope: !10868)
!10871 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6945, file: !6945, line: 2949, type: !2876, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !381)
!10872 = !DILocation(line: 2951, column: 3, scope: !10871)
!10873 = !DILocation(line: 2952, column: 1, scope: !10871)
!10874 = distinct !DISubprogram(name: "z_device_state_init", scope: !10875, file: !10875, line: 23, type: !2876, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2836, retainedNodes: !10876)
!10875 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10876 = !{!10877}
!10877 = !DILocalVariable(name: "dev", scope: !10874, file: !10875, line: 25, type: !10878)
!10878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10879, size: 32)
!10879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10880)
!10880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !118, line: 378, size: 192, elements: !10881)
!10881 = !{!10882, !10883, !10884, !10885, !10891, !10892}
!10882 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10880, file: !118, line: 380, baseType: !121, size: 32)
!10883 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10880, file: !118, line: 382, baseType: !13, size: 32, offset: 32)
!10884 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10880, file: !118, line: 384, baseType: !13, size: 32, offset: 64)
!10885 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10880, file: !118, line: 386, baseType: !10886, size: 32, offset: 96)
!10886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10887, size: 32)
!10887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !118, line: 351, size: 16, elements: !10888)
!10888 = !{!10889, !10890}
!10889 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10887, file: !118, line: 359, baseType: !131, size: 8)
!10890 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10887, file: !118, line: 364, baseType: !134, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10891 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10880, file: !118, line: 388, baseType: !104, size: 32, offset: 128)
!10892 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10880, file: !118, line: 396, baseType: !137, size: 32, offset: 160)
!10893 = !DILocation(line: 0, scope: !10874)
!10894 = !DILocation(line: 31, column: 1, scope: !10874)
!10895 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10875, file: !10875, line: 33, type: !10896, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2836, retainedNodes: !10898)
!10896 = !DISubroutineType(types: !10897)
!10897 = !{!10878, !121}
!10898 = !{!10899, !10900}
!10899 = !DILocalVariable(name: "name", arg: 1, scope: !10895, file: !10875, line: 33, type: !121)
!10900 = !DILocalVariable(name: "dev", scope: !10895, file: !10875, line: 35, type: !10878)
!10901 = !DILocation(line: 0, scope: !10895)
!10902 = !DILocation(line: 40, column: 12, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10895, file: !10875, line: 40, column: 6)
!10904 = !DILocation(line: 40, column: 21, scope: !10903)
!10905 = !DILocation(line: 40, column: 25, scope: !10903)
!10906 = !DILocation(line: 40, column: 33, scope: !10903)
!10907 = !DILocation(line: 40, column: 6, scope: !10895)
!10908 = !DILocation(line: 55, column: 2, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10895, file: !10875, line: 55, column: 2)
!10910 = !DILocation(line: 50, column: 7, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10912, file: !10875, line: 50, column: 7)
!10912 = distinct !DILexicalBlock(scope: !10913, file: !10875, line: 49, column: 57)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !10875, line: 49, column: 2)
!10914 = distinct !DILexicalBlock(scope: !10895, file: !10875, line: 49, column: 2)
!10915 = !DILocation(line: 50, column: 30, scope: !10911)
!10916 = !DILocation(line: 50, column: 39, scope: !10911)
!10917 = !DILocation(line: 50, column: 44, scope: !10911)
!10918 = !DILocation(line: 50, column: 7, scope: !10912)
!10919 = !DILocation(line: 49, column: 53, scope: !10913)
!10920 = !DILocation(line: 49, column: 33, scope: !10913)
!10921 = !DILocation(line: 49, column: 2, scope: !10914)
!10922 = distinct !{!10922, !10921, !10923}
!10923 = !DILocation(line: 53, column: 2, scope: !10914)
!10924 = !DILocation(line: 56, column: 7, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !10875, line: 56, column: 7)
!10926 = distinct !DILexicalBlock(scope: !10927, file: !10875, line: 55, column: 57)
!10927 = distinct !DILexicalBlock(scope: !10909, file: !10875, line: 55, column: 2)
!10928 = !DILocation(line: 56, column: 30, scope: !10925)
!10929 = !DILocation(line: 56, column: 52, scope: !10925)
!10930 = !DILocation(line: 56, column: 34, scope: !10925)
!10931 = !DILocation(line: 56, column: 58, scope: !10925)
!10932 = !DILocation(line: 56, column: 7, scope: !10926)
!10933 = !DILocation(line: 55, column: 53, scope: !10927)
!10934 = !DILocation(line: 55, column: 33, scope: !10927)
!10935 = distinct !{!10935, !10908, !10936}
!10936 = !DILocation(line: 59, column: 2, scope: !10909)
!10937 = !DILocation(line: 62, column: 1, scope: !10895)
!10938 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10875, file: !10875, line: 93, type: !10939, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2836, retainedNodes: !10941)
!10939 = !DISubroutineType(types: !10940)
!10940 = !{!134, !10878}
!10941 = !{!10942}
!10942 = !DILocalVariable(name: "dev", arg: 1, scope: !10938, file: !10875, line: 93, type: !10878)
!10943 = !DILocation(line: 0, scope: !10938)
!10944 = !DILocation(line: 99, column: 10, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10938, file: !10875, line: 99, column: 6)
!10946 = !DILocation(line: 99, column: 6, scope: !10938)
!10947 = !DILocation(line: 103, column: 14, scope: !10938)
!10948 = !DILocation(line: 103, column: 21, scope: !10938)
!10949 = !DILocation(line: 103, column: 33, scope: !10938)
!10950 = !DILocation(line: 103, column: 49, scope: !10938)
!10951 = !DILocation(line: 103, column: 58, scope: !10938)
!10952 = !DILocation(line: 104, column: 1, scope: !10938)
!10953 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10875, file: !10875, line: 87, type: !10954, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2836, retainedNodes: !10957)
!10954 = !DISubroutineType(types: !10955)
!10955 = !{!259, !10956}
!10956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10878, size: 32)
!10957 = !{!10958}
!10958 = !DILocalVariable(name: "devices", arg: 1, scope: !10953, file: !10875, line: 87, type: !10956)
!10959 = !DILocation(line: 0, scope: !10953)
!10960 = !DILocation(line: 89, column: 11, scope: !10953)
!10961 = !DILocation(line: 90, column: 2, scope: !10953)
!10962 = distinct !DISubprogram(name: "device_required_foreach", scope: !10875, file: !10875, line: 125, type: !10963, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2836, retainedNodes: !10969)
!10963 = !DISubroutineType(types: !10964)
!10964 = !{!103, !10878, !10965, !104}
!10965 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !118, line: 471, baseType: !10966)
!10966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10967, size: 32)
!10967 = !DISubroutineType(types: !10968)
!10968 = !{!103, !10878, !104}
!10969 = !{!10970, !10971, !10972, !10973, !10974}
!10970 = !DILocalVariable(name: "dev", arg: 1, scope: !10962, file: !10875, line: 125, type: !10878)
!10971 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10962, file: !10875, line: 126, type: !10965)
!10972 = !DILocalVariable(name: "context", arg: 3, scope: !10962, file: !10875, line: 127, type: !104)
!10973 = !DILocalVariable(name: "handle_count", scope: !10962, file: !10875, line: 129, type: !259)
!10974 = !DILocalVariable(name: "handles", scope: !10962, file: !10875, line: 130, type: !137)
!10975 = !DILocation(line: 0, scope: !10962)
!10976 = !DILocation(line: 129, column: 2, scope: !10962)
!10977 = !DILocation(line: 129, column: 9, scope: !10962)
!10978 = !DILocation(line: 130, column: 35, scope: !10962)
!10979 = !DILocation(line: 132, column: 33, scope: !10962)
!10980 = !DILocation(line: 132, column: 9, scope: !10962)
!10981 = !DILocation(line: 133, column: 1, scope: !10962)
!10982 = !DILocation(line: 132, column: 2, scope: !10962)
!10983 = distinct !DISubprogram(name: "device_required_handles_get", scope: !118, file: !118, line: 493, type: !10984, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2836, retainedNodes: !10986)
!10984 = !DISubroutineType(types: !10985)
!10985 = !{!137, !10878, !2350}
!10986 = !{!10987, !10988, !10989, !10990}
!10987 = !DILocalVariable(name: "dev", arg: 1, scope: !10983, file: !118, line: 493, type: !10878)
!10988 = !DILocalVariable(name: "count", arg: 2, scope: !10983, file: !118, line: 493, type: !2350)
!10989 = !DILocalVariable(name: "rv", scope: !10983, file: !118, line: 495, type: !137)
!10990 = !DILocalVariable(name: "i", scope: !10991, file: !118, line: 498, type: !259)
!10991 = distinct !DILexicalBlock(scope: !10992, file: !118, line: 497, column: 18)
!10992 = distinct !DILexicalBlock(scope: !10983, file: !118, line: 497, column: 6)
!10993 = !DILocation(line: 0, scope: !10983)
!10994 = !DILocation(line: 495, column: 35, scope: !10983)
!10995 = !DILocation(line: 497, column: 9, scope: !10992)
!10996 = !DILocation(line: 497, column: 6, scope: !10983)
!10997 = !DILocation(line: 0, scope: !10991)
!10998 = !DILocation(line: 500, column: 11, scope: !10991)
!10999 = !DILocation(line: 500, column: 40, scope: !10991)
!11000 = !DILocation(line: 502, column: 4, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10991, file: !118, line: 501, column: 40)
!11002 = distinct !{!11002, !11003, !11004}
!11003 = !DILocation(line: 500, column: 3, scope: !10991)
!11004 = !DILocation(line: 503, column: 3, scope: !10991)
!11005 = !DILocation(line: 504, column: 10, scope: !10991)
!11006 = !DILocation(line: 505, column: 2, scope: !10991)
!11007 = !DILocation(line: 507, column: 2, scope: !10983)
!11008 = distinct !DISubprogram(name: "device_visitor", scope: !10875, file: !10875, line: 106, type: !11009, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2836, retainedNodes: !11011)
!11009 = !DISubroutineType(types: !11010)
!11010 = !{!103, !137, !259, !10965, !104}
!11011 = !{!11012, !11013, !11014, !11015, !11016, !11018, !11021, !11022}
!11012 = !DILocalVariable(name: "handles", arg: 1, scope: !11008, file: !10875, line: 106, type: !137)
!11013 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11008, file: !10875, line: 107, type: !259)
!11014 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11008, file: !10875, line: 108, type: !10965)
!11015 = !DILocalVariable(name: "context", arg: 4, scope: !11008, file: !10875, line: 109, type: !104)
!11016 = !DILocalVariable(name: "i", scope: !11017, file: !10875, line: 112, type: !259)
!11017 = distinct !DILexicalBlock(scope: !11008, file: !10875, line: 112, column: 2)
!11018 = !DILocalVariable(name: "dh", scope: !11019, file: !10875, line: 113, type: !139)
!11019 = distinct !DILexicalBlock(scope: !11020, file: !10875, line: 112, column: 44)
!11020 = distinct !DILexicalBlock(scope: !11017, file: !10875, line: 112, column: 2)
!11021 = !DILocalVariable(name: "rdev", scope: !11019, file: !10875, line: 114, type: !10878)
!11022 = !DILocalVariable(name: "rc", scope: !11019, file: !10875, line: 115, type: !103)
!11023 = !DILocation(line: 0, scope: !11008)
!11024 = !DILocation(line: 0, scope: !11017)
!11025 = !DILocation(line: 112, column: 23, scope: !11020)
!11026 = !DILocation(line: 112, column: 2, scope: !11017)
!11027 = distinct !{!11027, !11026, !11028}
!11028 = !DILocation(line: 120, column: 2, scope: !11017)
!11029 = !DILocation(line: 113, column: 24, scope: !11019)
!11030 = !DILocation(line: 0, scope: !11019)
!11031 = !DILocation(line: 114, column: 31, scope: !11019)
!11032 = !DILocation(line: 115, column: 12, scope: !11019)
!11033 = !DILocation(line: 117, column: 10, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11019, file: !10875, line: 117, column: 7)
!11035 = !DILocation(line: 112, column: 39, scope: !11020)
!11036 = !DILocation(line: 123, column: 1, scope: !11008)
!11037 = distinct !DISubprogram(name: "device_from_handle", scope: !118, file: !118, line: 439, type: !11038, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2836, retainedNodes: !11040)
!11038 = !DISubroutineType(types: !11039)
!11039 = !{!10878, !139}
!11040 = !{!11041, !11042, !11043}
!11041 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11037, file: !118, line: 439, type: !139)
!11042 = !DILocalVariable(name: "dev", scope: !11037, file: !118, line: 443, type: !10878)
!11043 = !DILocalVariable(name: "numdev", scope: !11037, file: !118, line: 444, type: !259)
!11044 = !DILocation(line: 0, scope: !11037)
!11045 = !DILocation(line: 446, column: 7, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11037, file: !118, line: 446, column: 6)
!11047 = !DILocation(line: 446, column: 18, scope: !11046)
!11048 = !DILocation(line: 446, column: 23, scope: !11046)
!11049 = !DILocation(line: 450, column: 2, scope: !11037)
!11050 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10875, file: !10875, line: 135, type: !10963, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2836, retainedNodes: !11051)
!11051 = !{!11052, !11053, !11054, !11055, !11056}
!11052 = !DILocalVariable(name: "dev", arg: 1, scope: !11050, file: !10875, line: 135, type: !10878)
!11053 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11050, file: !10875, line: 136, type: !10965)
!11054 = !DILocalVariable(name: "context", arg: 3, scope: !11050, file: !10875, line: 137, type: !104)
!11055 = !DILocalVariable(name: "handle_count", scope: !11050, file: !10875, line: 139, type: !259)
!11056 = !DILocalVariable(name: "handles", scope: !11050, file: !10875, line: 140, type: !137)
!11057 = !DILocation(line: 0, scope: !11050)
!11058 = !DILocation(line: 139, column: 2, scope: !11050)
!11059 = !DILocation(line: 139, column: 9, scope: !11050)
!11060 = !DILocation(line: 140, column: 35, scope: !11050)
!11061 = !DILocation(line: 142, column: 33, scope: !11050)
!11062 = !DILocation(line: 142, column: 9, scope: !11050)
!11063 = !DILocation(line: 143, column: 1, scope: !11050)
!11064 = !DILocation(line: 142, column: 2, scope: !11050)
!11065 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !118, file: !118, line: 573, type: !10984, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2836, retainedNodes: !11066)
!11066 = !{!11067, !11068, !11069, !11070, !11071}
!11067 = !DILocalVariable(name: "dev", arg: 1, scope: !11065, file: !118, line: 573, type: !10878)
!11068 = !DILocalVariable(name: "count", arg: 2, scope: !11065, file: !118, line: 573, type: !2350)
!11069 = !DILocalVariable(name: "rv", scope: !11065, file: !118, line: 575, type: !137)
!11070 = !DILocalVariable(name: "region", scope: !11065, file: !118, line: 576, type: !259)
!11071 = !DILocalVariable(name: "i", scope: !11065, file: !118, line: 577, type: !259)
!11072 = !DILocation(line: 0, scope: !11065)
!11073 = !DILocation(line: 575, column: 35, scope: !11065)
!11074 = !DILocation(line: 579, column: 9, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11065, file: !118, line: 579, column: 6)
!11076 = !DILocation(line: 579, column: 6, scope: !11065)
!11077 = !DILocation(line: 582, column: 8, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11079, file: !118, line: 582, column: 8)
!11079 = distinct !DILexicalBlock(scope: !11080, file: !118, line: 581, column: 23)
!11080 = distinct !DILexicalBlock(scope: !11075, file: !118, line: 579, column: 18)
!11081 = !DILocation(line: 582, column: 12, scope: !11078)
!11082 = !DILocation(line: 585, column: 6, scope: !11079)
!11083 = !DILocation(line: 0, scope: !11080)
!11084 = !DILocation(line: 581, column: 17, scope: !11080)
!11085 = !DILocation(line: 581, column: 3, scope: !11080)
!11086 = !DILocation(line: 588, column: 10, scope: !11080)
!11087 = !DILocation(line: 588, column: 16, scope: !11080)
!11088 = !DILocation(line: 589, column: 4, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11080, file: !118, line: 588, column: 39)
!11090 = !DILocation(line: 588, column: 3, scope: !11080)
!11091 = distinct !{!11091, !11090, !11092}
!11092 = !DILocation(line: 590, column: 3, scope: !11080)
!11093 = !DILocation(line: 591, column: 10, scope: !11080)
!11094 = !DILocation(line: 592, column: 2, scope: !11080)
!11095 = !DILocation(line: 575, column: 25, scope: !11065)
!11096 = !DILocation(line: 594, column: 2, scope: !11065)
!11097 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1773, file: !1773, line: 49, type: !11098, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1770, retainedNodes: !381)
!11098 = !DISubroutineType(types: !11099)
!11099 = !{!102}
!11100 = !DILocation(line: 51, column: 10, scope: !11097)
!11101 = !DILocation(line: 51, column: 20, scope: !11097)
!11102 = !DILocation(line: 51, column: 2, scope: !11097)
!11103 = distinct !DISubprogram(name: "coredump", scope: !2843, file: !2843, line: 209, type: !11104, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11250)
!11104 = !DISubroutineType(types: !11105)
!11105 = !{null, !32, !11106, !11150}
!11106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11107, size: 32)
!11107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11108)
!11108 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2475, line: 141, baseType: !11109)
!11109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2475, line: 97, size: 256, elements: !11110)
!11110 = !{!11111}
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11109, file: !2475, line: 107, baseType: !11112, size: 256)
!11112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2475, line: 98, size: 256, elements: !11113)
!11113 = !{!11114, !11119, !11124, !11129, !11134, !11139, !11144, !11149}
!11114 = !DIDerivedType(tag: DW_TAG_member, scope: !11112, file: !2475, line: 99, baseType: !11115, size: 32)
!11115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11112, file: !2475, line: 99, size: 32, elements: !11116)
!11116 = !{!11117, !11118}
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11115, file: !2475, line: 99, baseType: !142, size: 32)
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11115, file: !2475, line: 99, baseType: !142, size: 32)
!11119 = !DIDerivedType(tag: DW_TAG_member, scope: !11112, file: !2475, line: 100, baseType: !11120, size: 32, offset: 32)
!11120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11112, file: !2475, line: 100, size: 32, elements: !11121)
!11121 = !{!11122, !11123}
!11122 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11120, file: !2475, line: 100, baseType: !142, size: 32)
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11120, file: !2475, line: 100, baseType: !142, size: 32)
!11124 = !DIDerivedType(tag: DW_TAG_member, scope: !11112, file: !2475, line: 101, baseType: !11125, size: 32, offset: 64)
!11125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11112, file: !2475, line: 101, size: 32, elements: !11126)
!11126 = !{!11127, !11128}
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11125, file: !2475, line: 101, baseType: !142, size: 32)
!11128 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11125, file: !2475, line: 101, baseType: !142, size: 32)
!11129 = !DIDerivedType(tag: DW_TAG_member, scope: !11112, file: !2475, line: 102, baseType: !11130, size: 32, offset: 96)
!11130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11112, file: !2475, line: 102, size: 32, elements: !11131)
!11131 = !{!11132, !11133}
!11132 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11130, file: !2475, line: 102, baseType: !142, size: 32)
!11133 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11130, file: !2475, line: 102, baseType: !142, size: 32)
!11134 = !DIDerivedType(tag: DW_TAG_member, scope: !11112, file: !2475, line: 103, baseType: !11135, size: 32, offset: 128)
!11135 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11112, file: !2475, line: 103, size: 32, elements: !11136)
!11136 = !{!11137, !11138}
!11137 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11135, file: !2475, line: 103, baseType: !142, size: 32)
!11138 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11135, file: !2475, line: 103, baseType: !142, size: 32)
!11139 = !DIDerivedType(tag: DW_TAG_member, scope: !11112, file: !2475, line: 104, baseType: !11140, size: 32, offset: 160)
!11140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11112, file: !2475, line: 104, size: 32, elements: !11141)
!11141 = !{!11142, !11143}
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11140, file: !2475, line: 104, baseType: !142, size: 32)
!11143 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11140, file: !2475, line: 104, baseType: !142, size: 32)
!11144 = !DIDerivedType(tag: DW_TAG_member, scope: !11112, file: !2475, line: 105, baseType: !11145, size: 32, offset: 192)
!11145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11112, file: !2475, line: 105, size: 32, elements: !11146)
!11146 = !{!11147, !11148}
!11147 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11145, file: !2475, line: 105, baseType: !142, size: 32)
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11145, file: !2475, line: 105, baseType: !142, size: 32)
!11149 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11112, file: !2475, line: 106, baseType: !142, size: 32, offset: 224)
!11150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11151, size: 32)
!11151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !270, line: 245, size: 1024, elements: !11152)
!11152 = !{!11153, !11211, !11223, !11224, !11225, !11226, !11232, !11245}
!11153 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11151, file: !270, line: 247, baseType: !11154, size: 384)
!11154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !270, line: 57, size: 384, elements: !11155)
!11155 = !{!11156, !11180, !11187, !11188, !11189, !11198, !11199, !11200}
!11156 = !DIDerivedType(tag: DW_TAG_member, scope: !11154, file: !270, line: 60, baseType: !11157, size: 64)
!11157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11154, file: !270, line: 60, size: 64, elements: !11158)
!11158 = !{!11159, !11174}
!11159 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11157, file: !270, line: 61, baseType: !11160, size: 64)
!11160 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !280, line: 49, baseType: !11161)
!11161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !280, line: 37, size: 64, elements: !11162)
!11162 = !{!11163, !11169}
!11163 = !DIDerivedType(tag: DW_TAG_member, scope: !11161, file: !280, line: 38, baseType: !11164, size: 32)
!11164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11161, file: !280, line: 38, size: 32, elements: !11165)
!11165 = !{!11166, !11168}
!11166 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11164, file: !280, line: 39, baseType: !11167, size: 32)
!11167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11161, size: 32)
!11168 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11164, file: !280, line: 40, baseType: !11167, size: 32)
!11169 = !DIDerivedType(tag: DW_TAG_member, scope: !11161, file: !280, line: 42, baseType: !11170, size: 32, offset: 32)
!11170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11161, file: !280, line: 42, size: 32, elements: !11171)
!11171 = !{!11172, !11173}
!11172 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11170, file: !280, line: 43, baseType: !11167, size: 32)
!11173 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11170, file: !280, line: 44, baseType: !11167, size: 32)
!11174 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11157, file: !270, line: 62, baseType: !11175, size: 64)
!11175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !296, line: 49, size: 64, elements: !11176)
!11176 = !{!11177}
!11177 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11175, file: !296, line: 50, baseType: !11178, size: 64)
!11178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11179, size: 64, elements: !301)
!11179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11175, size: 32)
!11180 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11154, file: !270, line: 68, baseType: !11181, size: 32, offset: 64)
!11181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11182, size: 32)
!11182 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !306, line: 233, baseType: !11183)
!11183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !306, line: 231, size: 64, elements: !11184)
!11184 = !{!11185}
!11185 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11183, file: !306, line: 232, baseType: !11186, size: 64)
!11186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !280, line: 48, baseType: !11161)
!11187 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11154, file: !270, line: 71, baseType: !131, size: 8, offset: 96)
!11188 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11154, file: !270, line: 74, baseType: !131, size: 8, offset: 104)
!11189 = !DIDerivedType(tag: DW_TAG_member, scope: !11154, file: !270, line: 90, baseType: !11190, size: 16, offset: 112)
!11190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11154, file: !270, line: 90, size: 16, elements: !11191)
!11191 = !{!11192, !11197}
!11192 = !DIDerivedType(tag: DW_TAG_member, scope: !11190, file: !270, line: 91, baseType: !11193, size: 16)
!11193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11190, file: !270, line: 91, size: 16, elements: !11194)
!11194 = !{!11195, !11196}
!11195 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11193, file: !270, line: 96, baseType: !320, size: 8)
!11196 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11193, file: !270, line: 97, baseType: !131, size: 8, offset: 8)
!11197 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11190, file: !270, line: 100, baseType: !324, size: 16)
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11154, file: !270, line: 107, baseType: !142, size: 32, offset: 128)
!11199 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11154, file: !270, line: 127, baseType: !104, size: 32, offset: 160)
!11200 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11154, file: !270, line: 131, baseType: !11201, size: 192, offset: 192)
!11201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !306, line: 244, size: 192, elements: !11202)
!11202 = !{!11203, !11204, !11210}
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11201, file: !306, line: 245, baseType: !11160, size: 64)
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11201, file: !306, line: 246, baseType: !11205, size: 32, offset: 64)
!11205 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !306, line: 242, baseType: !11206)
!11206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11207, size: 32)
!11207 = !DISubroutineType(types: !11208)
!11208 = !{null, !11209}
!11209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11201, size: 32)
!11210 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11201, file: !306, line: 249, baseType: !339, size: 64, offset: 128)
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11151, file: !270, line: 250, baseType: !11212, size: 288, offset: 384)
!11212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !343, line: 25, size: 288, elements: !11213)
!11213 = !{!11214, !11215, !11216, !11217, !11218, !11219, !11220, !11221, !11222}
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11212, file: !343, line: 26, baseType: !142, size: 32)
!11215 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11212, file: !343, line: 27, baseType: !142, size: 32, offset: 32)
!11216 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11212, file: !343, line: 28, baseType: !142, size: 32, offset: 64)
!11217 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11212, file: !343, line: 29, baseType: !142, size: 32, offset: 96)
!11218 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11212, file: !343, line: 30, baseType: !142, size: 32, offset: 128)
!11219 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11212, file: !343, line: 31, baseType: !142, size: 32, offset: 160)
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11212, file: !343, line: 32, baseType: !142, size: 32, offset: 192)
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11212, file: !343, line: 33, baseType: !142, size: 32, offset: 224)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11212, file: !343, line: 34, baseType: !142, size: 32, offset: 256)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11151, file: !270, line: 253, baseType: !104, size: 32, offset: 672)
!11224 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11151, file: !270, line: 256, baseType: !11182, size: 64, offset: 704)
!11225 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11151, file: !270, line: 294, baseType: !103, size: 32, offset: 768)
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11151, file: !270, line: 300, baseType: !11227, size: 96, offset: 800)
!11227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !270, line: 149, size: 96, elements: !11228)
!11228 = !{!11229, !11230, !11231}
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11227, file: !270, line: 153, baseType: !22, size: 32)
!11230 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11227, file: !270, line: 162, baseType: !259, size: 32, offset: 32)
!11231 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11227, file: !270, line: 168, baseType: !259, size: 32, offset: 64)
!11232 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11151, file: !270, line: 325, baseType: !11233, size: 32, offset: 896)
!11233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11234, size: 32)
!11234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !366, line: 5073, size: 160, elements: !11235)
!11235 = !{!11236, !11242, !11243}
!11236 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11234, file: !366, line: 5074, baseType: !11237, size: 96)
!11237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !370, line: 56, size: 96, elements: !11238)
!11238 = !{!11239, !11240, !11241}
!11239 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11237, file: !370, line: 57, baseType: !373, size: 32)
!11240 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11237, file: !370, line: 58, baseType: !104, size: 32, offset: 32)
!11241 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11237, file: !370, line: 59, baseType: !259, size: 32, offset: 64)
!11242 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11234, file: !366, line: 5075, baseType: !11182, size: 64, offset: 96)
!11243 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11234, file: !366, line: 5076, baseType: !11244, offset: 160)
!11244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !380, line: 43, elements: !381)
!11245 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11151, file: !270, line: 343, baseType: !11246, size: 64, offset: 928)
!11246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !343, line: 60, size: 64, elements: !11247)
!11247 = !{!11248, !11249}
!11248 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11246, file: !343, line: 63, baseType: !142, size: 32)
!11249 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11246, file: !343, line: 66, baseType: !142, size: 32, offset: 32)
!11250 = !{!11251, !11252, !11253}
!11251 = !DILocalVariable(name: "reason", arg: 1, scope: !11103, file: !2843, line: 209, type: !32)
!11252 = !DILocalVariable(name: "esf", arg: 2, scope: !11103, file: !2843, line: 209, type: !11106)
!11253 = !DILocalVariable(name: "thread", arg: 3, scope: !11103, file: !2843, line: 210, type: !11150)
!11254 = !DILocation(line: 0, scope: !11103)
!11255 = !DILocation(line: 212, column: 1, scope: !11103)
!11256 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2843, file: !2843, line: 214, type: !11257, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11259)
!11257 = !DISubroutineType(types: !11258)
!11258 = !{null, !22, !22}
!11259 = !{!11260, !11261}
!11260 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11256, file: !2843, line: 214, type: !22)
!11261 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11256, file: !2843, line: 214, type: !22)
!11262 = !DILocation(line: 0, scope: !11256)
!11263 = !DILocation(line: 216, column: 1, scope: !11256)
!11264 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2843, file: !2843, line: 218, type: !11265, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11267)
!11265 = !DISubroutineType(types: !11266)
!11266 = !{null, !1814, !259}
!11267 = !{!11268, !11269}
!11268 = !DILocalVariable(name: "buf", arg: 1, scope: !11264, file: !2843, line: 218, type: !1814)
!11269 = !DILocalVariable(name: "buflen", arg: 2, scope: !11264, file: !2843, line: 218, type: !259)
!11270 = !DILocation(line: 0, scope: !11264)
!11271 = !DILocation(line: 220, column: 1, scope: !11264)
!11272 = distinct !DISubprogram(name: "coredump_query", scope: !2843, file: !2843, line: 222, type: !11273, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11275)
!11273 = !DISubroutineType(types: !11274)
!11274 = !{!103, !2842, !104}
!11275 = !{!11276, !11277}
!11276 = !DILocalVariable(name: "query_id", arg: 1, scope: !11272, file: !2843, line: 222, type: !2842)
!11277 = !DILocalVariable(name: "arg", arg: 2, scope: !11272, file: !2843, line: 222, type: !104)
!11278 = !DILocation(line: 0, scope: !11272)
!11279 = !DILocation(line: 224, column: 2, scope: !11272)
!11280 = distinct !DISubprogram(name: "coredump_cmd", scope: !2843, file: !2843, line: 227, type: !11281, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11283)
!11281 = !DISubroutineType(types: !11282)
!11282 = !{!103, !2849, !104}
!11283 = !{!11284, !11285}
!11284 = !DILocalVariable(name: "query_id", arg: 1, scope: !11280, file: !2843, line: 227, type: !2849)
!11285 = !DILocalVariable(name: "arg", arg: 2, scope: !11280, file: !2843, line: 227, type: !104)
!11286 = !DILocation(line: 0, scope: !11280)
!11287 = !DILocation(line: 229, column: 2, scope: !11280)
!11288 = distinct !DISubprogram(name: "arch_system_halt", scope: !11289, file: !11289, line: 23, type: !4745, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11290)
!11289 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11290 = !{!11291}
!11291 = !DILocalVariable(name: "reason", arg: 1, scope: !11288, file: !11289, line: 23, type: !32)
!11292 = !DILocation(line: 0, scope: !11288)
!11293 = !DILocation(line: 55, column: 2, scope: !11294, inlinedAt: !11298)
!11294 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4734, file: !4734, line: 42, type: !4735, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11295)
!11295 = !{!11296, !11297}
!11296 = !DILocalVariable(name: "key", scope: !11294, file: !4734, line: 44, type: !32)
!11297 = !DILocalVariable(name: "tmp", scope: !11294, file: !4734, line: 53, type: !32)
!11298 = distinct !DILocation(line: 31, column: 8, scope: !11288)
!11299 = !{i64 2279851}
!11300 = !DILocation(line: 0, scope: !11294, inlinedAt: !11298)
!11301 = !DILocation(line: 32, column: 2, scope: !11288)
!11302 = !DILocation(line: 32, column: 2, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !11289, line: 32, column: 2)
!11304 = distinct !DILexicalBlock(scope: !11288, file: !11289, line: 32, column: 2)
!11305 = distinct !{!11305, !11306, !11307}
!11306 = !DILocation(line: 32, column: 2, scope: !11304)
!11307 = !DILocation(line: 34, column: 2, scope: !11304)
!11308 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11289, file: !11289, line: 39, type: !11309, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11311)
!11309 = !DISubroutineType(types: !11310)
!11310 = !{null, !32, !11106}
!11311 = !{!11312, !11313}
!11312 = !DILocalVariable(name: "reason", arg: 1, scope: !11308, file: !11289, line: 39, type: !32)
!11313 = !DILocalVariable(name: "esf", arg: 2, scope: !11308, file: !11289, line: 40, type: !11106)
!11314 = !DILocation(line: 0, scope: !11308)
!11315 = !DILocation(line: 46, column: 2, scope: !11308)
!11316 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11289, file: !11289, line: 81, type: !4745, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11317)
!11317 = !{!11318}
!11318 = !DILocalVariable(name: "reason", arg: 1, scope: !11316, file: !11289, line: 81, type: !32)
!11319 = !DILocation(line: 0, scope: !11316)
!11320 = !DILocation(line: 83, column: 2, scope: !11316)
!11321 = distinct !DISubprogram(name: "z_fatal_error", scope: !11289, file: !11289, line: 96, type: !11309, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11322)
!11322 = !{!11323, !11324, !11325, !11326}
!11323 = !DILocalVariable(name: "reason", arg: 1, scope: !11321, file: !11289, line: 96, type: !32)
!11324 = !DILocalVariable(name: "esf", arg: 2, scope: !11321, file: !11289, line: 96, type: !11106)
!11325 = !DILocalVariable(name: "key", scope: !11321, file: !11289, line: 102, type: !32)
!11326 = !DILocalVariable(name: "thread", scope: !11321, file: !11289, line: 103, type: !11150)
!11327 = !DILocation(line: 0, scope: !11321)
!11328 = !DILocation(line: 55, column: 2, scope: !11294, inlinedAt: !11329)
!11329 = distinct !DILocation(line: 102, column: 21, scope: !11321)
!11330 = !DILocation(line: 0, scope: !11294, inlinedAt: !11329)
!11331 = !DILocation(line: 119, column: 11, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11321, file: !11289, line: 119, column: 6)
!11333 = !DILocation(line: 119, column: 20, scope: !11332)
!11334 = !DILocation(line: 131, column: 2, scope: !11321)
!11335 = !DILocation(line: 151, column: 7, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !11289, line: 146, column: 32)
!11337 = distinct !DILexicalBlock(scope: !11321, file: !11289, line: 146, column: 6)
!11338 = !DILocation(line: 151, column: 21, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11336, file: !11289, line: 151, column: 7)
!11340 = !DILocation(line: 104, column: 4, scope: !11321)
!11341 = !DILocalVariable(name: "key", arg: 1, scope: !11342, file: !4734, line: 84, type: !32)
!11342 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4734, file: !4734, line: 84, type: !4745, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11343)
!11343 = !{!11341}
!11344 = !DILocation(line: 0, scope: !11342, inlinedAt: !11345)
!11345 = distinct !DILocation(line: 186, column: 2, scope: !11321)
!11346 = !DILocation(line: 95, column: 2, scope: !11342, inlinedAt: !11345)
!11347 = !{i64 2280668}
!11348 = !DILocation(line: 189, column: 3, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11350, file: !11289, line: 188, column: 41)
!11350 = distinct !DILexicalBlock(scope: !11321, file: !11289, line: 188, column: 6)
!11351 = !DILocation(line: 191, column: 1, scope: !11321)
!11352 = distinct !DISubprogram(name: "k_current_get", scope: !366, file: !366, line: 530, type: !11353, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !381)
!11353 = !DISubroutineType(types: !11354)
!11354 = !{!11355}
!11355 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !270, line: 347, baseType: !11150)
!11356 = !DILocation(line: 535, column: 9, scope: !11352)
!11357 = !DILocation(line: 535, column: 2, scope: !11352)
!11358 = distinct !DISubprogram(name: "k_thread_abort", scope: !3355, file: !3355, line: 188, type: !11359, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !11361)
!11359 = !DISubroutineType(types: !11360)
!11360 = !{null, !11355}
!11361 = !{!11362}
!11362 = !DILocalVariable(name: "thread", arg: 1, scope: !11358, file: !3355, line: 188, type: !11355)
!11363 = !DILocation(line: 0, scope: !11358)
!11364 = !DILocation(line: 197, column: 2, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11358, file: !3355, line: 197, column: 2)
!11366 = !{i64 2155061422}
!11367 = !DILocation(line: 198, column: 2, scope: !11358)
!11368 = !DILocation(line: 199, column: 1, scope: !11358)
!11369 = distinct !DISubprogram(name: "z_current_get", scope: !3355, file: !3355, line: 173, type: !11353, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !381)
!11370 = !DILocation(line: 180, column: 2, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11369, file: !3355, line: 180, column: 2)
!11372 = !{i64 2155061354}
!11373 = !DILocation(line: 181, column: 9, scope: !11369)
!11374 = !DILocation(line: 181, column: 2, scope: !11369)
!11375 = distinct !DISubprogram(name: "z_early_memset", scope: !1781, file: !1781, line: 108, type: !11376, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11378)
!11376 = !DISubroutineType(types: !11377)
!11377 = !{null, !104, !103, !259}
!11378 = !{!11379, !11380, !11381}
!11379 = !DILocalVariable(name: "dst", arg: 1, scope: !11375, file: !1781, line: 108, type: !104)
!11380 = !DILocalVariable(name: "c", arg: 2, scope: !11375, file: !1781, line: 108, type: !103)
!11381 = !DILocalVariable(name: "n", arg: 3, scope: !11375, file: !1781, line: 108, type: !259)
!11382 = !DILocation(line: 0, scope: !11375)
!11383 = !DILocation(line: 110, column: 9, scope: !11375)
!11384 = !DILocation(line: 111, column: 1, scope: !11375)
!11385 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1781, file: !1781, line: 121, type: !11386, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11388)
!11386 = !DISubroutineType(types: !11387)
!11387 = !{null, !104, !13, !259}
!11388 = !{!11389, !11390, !11391}
!11389 = !DILocalVariable(name: "dst", arg: 1, scope: !11385, file: !1781, line: 121, type: !104)
!11390 = !DILocalVariable(name: "src", arg: 2, scope: !11385, file: !1781, line: 121, type: !13)
!11391 = !DILocalVariable(name: "n", arg: 3, scope: !11385, file: !1781, line: 121, type: !259)
!11392 = !DILocation(line: 0, scope: !11385)
!11393 = !DILocation(line: 123, column: 9, scope: !11385)
!11394 = !DILocation(line: 124, column: 1, scope: !11385)
!11395 = distinct !DISubprogram(name: "z_bss_zero", scope: !1781, file: !1781, line: 132, type: !2876, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !381)
!11396 = !DILocation(line: 143, column: 2, scope: !11395)
!11397 = !DILocation(line: 168, column: 1, scope: !11395)
!11398 = distinct !DISubprogram(name: "z_init_cpu", scope: !1781, file: !1781, line: 372, type: !6553, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11399)
!11399 = !{!11400}
!11400 = !DILocalVariable(name: "id", arg: 1, scope: !11398, file: !1781, line: 372, type: !103)
!11401 = !DILocation(line: 0, scope: !11398)
!11402 = !DILocation(line: 374, column: 2, scope: !11398)
!11403 = !DILocation(line: 375, column: 34, scope: !11398)
!11404 = !DILocation(line: 375, column: 19, scope: !11398)
!11405 = !DILocation(line: 375, column: 31, scope: !11398)
!11406 = !DILocation(line: 376, column: 24, scope: !11398)
!11407 = !DILocation(line: 376, column: 19, scope: !11398)
!11408 = !DILocation(line: 376, column: 22, scope: !11398)
!11409 = !DILocation(line: 378, column: 26, scope: !11398)
!11410 = !DILocation(line: 378, column: 4, scope: !11398)
!11411 = !DILocation(line: 378, column: 50, scope: !11398)
!11412 = !DILocation(line: 377, column: 19, scope: !11398)
!11413 = !DILocation(line: 377, column: 29, scope: !11398)
!11414 = !DILocation(line: 384, column: 1, scope: !11398)
!11415 = distinct !DISubprogram(name: "init_idle_thread", scope: !1781, file: !1781, line: 343, type: !6553, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11416)
!11416 = !{!11417, !11418, !11419, !11422}
!11417 = !DILocalVariable(name: "i", arg: 1, scope: !11415, file: !1781, line: 343, type: !103)
!11418 = !DILocalVariable(name: "thread", scope: !11415, file: !1781, line: 345, type: !1874)
!11419 = !DILocalVariable(name: "stack", scope: !11415, file: !1781, line: 346, type: !11420)
!11420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11421, size: 32)
!11421 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3234, line: 44, baseType: !1988)
!11422 = !DILocalVariable(name: "tname", scope: !11415, file: !1781, line: 358, type: !1054)
!11423 = !DILocation(line: 0, scope: !11415)
!11424 = !DILocation(line: 345, column: 29, scope: !11415)
!11425 = !DILocation(line: 346, column: 28, scope: !11415)
!11426 = !DILocation(line: 362, column: 37, scope: !11415)
!11427 = !DILocation(line: 362, column: 36, scope: !11415)
!11428 = !DILocation(line: 361, column: 2, scope: !11415)
!11429 = !DILocation(line: 365, column: 2, scope: !11415)
!11430 = !DILocation(line: 370, column: 1, scope: !11415)
!11431 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1989, file: !1989, line: 331, type: !11432, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11434)
!11432 = !DISubroutineType(types: !11433)
!11433 = !{!1054, !11420}
!11434 = !{!11435}
!11435 = !DILocalVariable(name: "sym", arg: 1, scope: !11431, file: !1989, line: 331, type: !11420)
!11436 = !DILocation(line: 0, scope: !11431)
!11437 = !DILocation(line: 333, column: 21, scope: !11431)
!11438 = !DILocation(line: 333, column: 2, scope: !11431)
!11439 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11440, file: !11440, line: 155, type: !11441, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11443)
!11440 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11441 = !DISubroutineType(types: !11442)
!11442 = !{null, !1874}
!11443 = !{!11444}
!11444 = !DILocalVariable(name: "thread", arg: 1, scope: !11439, file: !11440, line: 155, type: !1874)
!11445 = !DILocation(line: 0, scope: !11439)
!11446 = !DILocation(line: 157, column: 15, scope: !11439)
!11447 = !DILocation(line: 157, column: 28, scope: !11439)
!11448 = !DILocation(line: 158, column: 1, scope: !11439)
!11449 = distinct !DISubprogram(name: "z_cstart", scope: !1781, file: !1781, line: 501, type: !2876, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11450)
!11450 = !{!11451}
!11451 = !DILocalVariable(name: "dummy_thread", scope: !11449, file: !1781, line: 518, type: !1875)
!11452 = !DILocation(line: 507, column: 2, scope: !11449)
!11453 = !DILocation(line: 43, column: 14, scope: !11454, inlinedAt: !11458)
!11454 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11455, file: !11455, line: 40, type: !2876, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11456)
!11455 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11456 = !{!11457}
!11457 = !DILocalVariable(name: "msp", scope: !11454, file: !11455, line: 42, type: !142)
!11458 = distinct !DILocation(line: 44, column: 2, scope: !11459, inlinedAt: !11461)
!11459 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11460, file: !11460, line: 42, type: !2876, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !381)
!11460 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11461 = distinct !DILocation(line: 510, column: 2, scope: !11449)
!11462 = !DILocation(line: 43, column: 3, scope: !11454, inlinedAt: !11458)
!11463 = !DILocation(line: 43, column: 60, scope: !11454, inlinedAt: !11458)
!11464 = !DILocation(line: 0, scope: !11454, inlinedAt: !11458)
!11465 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11466, file: !4908, line: 1153, type: !142)
!11466 = distinct !DISubprogram(name: "__set_MSP", scope: !4908, file: !4908, line: 1153, type: !4999, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11467)
!11467 = !{!11465}
!11468 = !DILocation(line: 0, scope: !11466, inlinedAt: !11469)
!11469 = distinct !DILocation(line: 46, column: 2, scope: !11454, inlinedAt: !11458)
!11470 = !DILocation(line: 1155, column: 3, scope: !11466, inlinedAt: !11469)
!11471 = !{i64 3745790}
!11472 = !DILocation(line: 62, column: 11, scope: !11454, inlinedAt: !11458)
!11473 = !DILocation(line: 102, column: 2, scope: !11474, inlinedAt: !11475)
!11474 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !5702, file: !5702, line: 97, type: !2876, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !381)
!11475 = distinct !DILocation(line: 45, column: 2, scope: !11459, inlinedAt: !11461)
!11476 = !DILocation(line: 108, column: 2, scope: !11474, inlinedAt: !11475)
!11477 = !DILocation(line: 112, column: 2, scope: !11474, inlinedAt: !11475)
!11478 = !DILocation(line: 113, column: 2, scope: !11474, inlinedAt: !11475)
!11479 = !DILocation(line: 114, column: 2, scope: !11474, inlinedAt: !11475)
!11480 = !DILocation(line: 116, column: 2, scope: !11474, inlinedAt: !11475)
!11481 = !DILocation(line: 123, column: 13, scope: !11474, inlinedAt: !11475)
!11482 = !DILocation(line: 46, column: 2, scope: !11459, inlinedAt: !11461)
!11483 = !DILocation(line: 47, column: 2, scope: !11459, inlinedAt: !11461)
!11484 = !DILocation(line: 174, column: 12, scope: !11485, inlinedAt: !11486)
!11485 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !5702, file: !5702, line: 169, type: !2876, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !381)
!11486 = distinct !DILocation(line: 48, column: 2, scope: !11459, inlinedAt: !11461)
!11487 = !DILocation(line: 179, column: 12, scope: !11485, inlinedAt: !11486)
!11488 = !DILocation(line: 50, column: 2, scope: !11459, inlinedAt: !11461)
!11489 = !DILocation(line: 57, column: 2, scope: !11459, inlinedAt: !11461)
!11490 = !DILocation(line: 518, column: 2, scope: !11449)
!11491 = !DILocation(line: 518, column: 18, scope: !11449)
!11492 = !DILocation(line: 520, column: 2, scope: !11449)
!11493 = !DILocation(line: 523, column: 2, scope: !11449)
!11494 = !DILocation(line: 526, column: 2, scope: !11449)
!11495 = !DILocation(line: 527, column: 2, scope: !11449)
!11496 = !DILocation(line: 543, column: 24, scope: !11449)
!11497 = !DILocation(line: 543, column: 2, scope: !11449)
!11498 = !DILocation(line: 0, scope: !2008)
!11499 = !DILocation(line: 246, column: 15, scope: !2026)
!11500 = !DILocation(line: 246, column: 36, scope: !2025)
!11501 = !DILocation(line: 246, column: 2, scope: !2026)
!11502 = !DILocation(line: 247, column: 37, scope: !2024)
!11503 = !DILocation(line: 0, scope: !2024)
!11504 = !DILocation(line: 248, column: 19, scope: !2024)
!11505 = !DILocation(line: 248, column: 12, scope: !2024)
!11506 = !DILocation(line: 250, column: 11, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !2024, file: !1781, line: 250, column: 7)
!11508 = !DILocation(line: 250, column: 7, scope: !2024)
!11509 = !DILocation(line: 254, column: 11, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !1781, line: 254, column: 8)
!11511 = distinct !DILexicalBlock(scope: !11507, file: !1781, line: 250, column: 20)
!11512 = !DILocation(line: 254, column: 8, scope: !11511)
!11513 = !DILocation(line: 255, column: 9, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11510, file: !1781, line: 254, column: 17)
!11515 = !DILocation(line: 258, column: 9, scope: !11514)
!11516 = !DILocation(line: 261, column: 28, scope: !11514)
!11517 = !DILocation(line: 261, column: 10, scope: !11514)
!11518 = !DILocation(line: 261, column: 17, scope: !11514)
!11519 = !DILocation(line: 261, column: 26, scope: !11514)
!11520 = !DILocation(line: 262, column: 4, scope: !11514)
!11521 = !DILocation(line: 263, column: 9, scope: !11511)
!11522 = !DILocation(line: 263, column: 16, scope: !11511)
!11523 = !DILocation(line: 263, column: 28, scope: !11511)
!11524 = !DILocation(line: 264, column: 3, scope: !11511)
!11525 = !DILocation(line: 246, column: 60, scope: !2025)
!11526 = distinct !{!11526, !11501, !11527}
!11527 = !DILocation(line: 265, column: 2, scope: !2026)
!11528 = !DILocation(line: 266, column: 1, scope: !2008)
!11529 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !415, file: !415, line: 1814, type: !4942, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11530)
!11530 = !{!11531, !11532}
!11531 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11529, file: !415, line: 1814, type: !680)
!11532 = !DILocalVariable(name: "priority", arg: 2, scope: !11529, file: !415, line: 1814, type: !142)
!11533 = !DILocation(line: 0, scope: !11529)
!11534 = !DILocation(line: 1822, column: 48, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11536, file: !415, line: 1821, column: 3)
!11536 = distinct !DILexicalBlock(scope: !11529, file: !415, line: 1816, column: 7)
!11537 = !DILocation(line: 1822, column: 32, scope: !11535)
!11538 = !DILocation(line: 1822, column: 40, scope: !11535)
!11539 = !DILocation(line: 1822, column: 5, scope: !11535)
!11540 = !DILocation(line: 1822, column: 46, scope: !11535)
!11541 = !DILocation(line: 1824, column: 1, scope: !11529)
!11542 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11460, file: !11460, line: 32, type: !2876, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !381)
!11543 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11544, file: !11544, line: 215, type: !11441, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11545)
!11544 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11545 = !{!11546}
!11546 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11543, file: !11544, line: 215, type: !1874)
!11547 = !DILocation(line: 0, scope: !11543)
!11548 = !DILocation(line: 217, column: 21, scope: !11543)
!11549 = !DILocation(line: 217, column: 34, scope: !11543)
!11550 = !DILocation(line: 221, column: 21, scope: !11543)
!11551 = !DILocation(line: 221, column: 34, scope: !11543)
!11552 = !DILocation(line: 223, column: 27, scope: !11543)
!11553 = !DILocation(line: 223, column: 33, scope: !11543)
!11554 = !DILocation(line: 224, column: 27, scope: !11543)
!11555 = !DILocation(line: 224, column: 32, scope: !11543)
!11556 = !DILocation(line: 232, column: 16, scope: !11543)
!11557 = !DILocation(line: 232, column: 30, scope: !11543)
!11558 = !DILocation(line: 239, column: 24, scope: !11543)
!11559 = !DILocation(line: 240, column: 1, scope: !11543)
!11560 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1781, file: !1781, line: 399, type: !11561, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11563)
!11561 = !DISubroutineType(types: !11562)
!11562 = !{!1054}
!11563 = !{!11564}
!11564 = !DILocalVariable(name: "stack_ptr", scope: !11560, file: !1781, line: 401, type: !1054)
!11565 = !DILocation(line: 404, column: 2, scope: !11560)
!11566 = !DILocation(line: 416, column: 24, scope: !11560)
!11567 = !DILocation(line: 418, column: 14, scope: !11560)
!11568 = !DILocation(line: 0, scope: !11560)
!11569 = !DILocation(line: 423, column: 2, scope: !11560)
!11570 = !DILocation(line: 424, column: 2, scope: !11560)
!11571 = !DILocation(line: 426, column: 2, scope: !11560)
!11572 = !DILocation(line: 428, column: 2, scope: !11560)
!11573 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1781, file: !1781, line: 432, type: !11574, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11576)
!11574 = !DISubroutineType(types: !11575)
!11575 = !{null, !1054}
!11576 = !{!11577}
!11577 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11573, file: !1781, line: 432, type: !1054)
!11578 = !DILocation(line: 0, scope: !11573)
!11579 = !DILocation(line: 435, column: 2, scope: !11573)
!11580 = !DILocation(line: 445, column: 2, scope: !11573)
!11581 = distinct !DISubprogram(name: "bg_thread_main", scope: !1781, file: !1781, line: 277, type: !3236, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1777, retainedNodes: !11582)
!11582 = !{!11583, !11584, !11585}
!11583 = !DILocalVariable(name: "unused1", arg: 1, scope: !11581, file: !1781, line: 277, type: !104)
!11584 = !DILocalVariable(name: "unused2", arg: 2, scope: !11581, file: !1781, line: 277, type: !104)
!11585 = !DILocalVariable(name: "unused3", arg: 3, scope: !11581, file: !1781, line: 277, type: !104)
!11586 = !DILocation(line: 0, scope: !11581)
!11587 = !DILocation(line: 291, column: 20, scope: !11581)
!11588 = !DILocation(line: 293, column: 2, scope: !11581)
!11589 = !DILocation(line: 297, column: 2, scope: !11581)
!11590 = !DILocation(line: 305, column: 2, scope: !11581)
!11591 = !DILocation(line: 307, column: 2, scope: !11581)
!11592 = !DILocation(line: 330, column: 8, scope: !11581)
!11593 = !DILocation(line: 333, column: 34, scope: !11581)
!11594 = !DILocation(line: 339, column: 1, scope: !11581)
!11595 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2036, file: !2036, line: 45, type: !11596, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11604)
!11596 = !DISubroutineType(types: !11597)
!11597 = !{null, !11598, !104}
!11598 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !366, line: 103, baseType: !11599)
!11599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11600, size: 32)
!11600 = !DISubroutineType(types: !11601)
!11601 = !{null, !11602, !104}
!11602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11603, size: 32)
!11603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2041)
!11604 = !{!11605, !11606}
!11605 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11595, file: !2036, line: 45, type: !11598)
!11606 = !DILocalVariable(name: "user_data", arg: 2, scope: !11595, file: !2036, line: 45, type: !104)
!11607 = !DILocation(line: 0, scope: !11595)
!11608 = !DILocation(line: 71, column: 1, scope: !11595)
!11609 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2036, file: !2036, line: 73, type: !11596, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11610)
!11610 = !{!11611, !11612}
!11611 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11609, file: !2036, line: 73, type: !11598)
!11612 = !DILocalVariable(name: "user_data", arg: 2, scope: !11609, file: !2036, line: 73, type: !104)
!11613 = !DILocation(line: 0, scope: !11609)
!11614 = !DILocation(line: 95, column: 1, scope: !11609)
!11615 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2036, file: !2036, line: 97, type: !5703, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !381)
!11616 = !DILocation(line: 1031, column: 3, scope: !11617, inlinedAt: !11620)
!11617 = distinct !DISubprogram(name: "__get_IPSR", scope: !4908, file: !4908, line: 1027, type: !4989, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11618)
!11618 = !{!11619}
!11619 = !DILocalVariable(name: "result", scope: !11617, file: !4908, line: 1029, type: !142)
!11620 = distinct !DILocation(line: 48, column: 10, scope: !11621, inlinedAt: !11622)
!11621 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5702, file: !5702, line: 46, type: !5703, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !381)
!11622 = distinct !DILocation(line: 99, column: 9, scope: !11615)
!11623 = !{i64 3751441}
!11624 = !DILocation(line: 0, scope: !11617, inlinedAt: !11620)
!11625 = !DILocation(line: 48, column: 9, scope: !11621, inlinedAt: !11622)
!11626 = !DILocation(line: 99, column: 2, scope: !11615)
!11627 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2036, file: !2036, line: 106, type: !2876, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !381)
!11628 = !DILocation(line: 108, column: 2, scope: !11627)
!11629 = !DILocation(line: 108, column: 17, scope: !11627)
!11630 = !DILocation(line: 108, column: 30, scope: !11627)
!11631 = !DILocation(line: 109, column: 1, scope: !11627)
!11632 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2036, file: !2036, line: 116, type: !2876, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !381)
!11633 = !DILocation(line: 118, column: 2, scope: !11632)
!11634 = !DILocation(line: 118, column: 17, scope: !11632)
!11635 = !DILocation(line: 118, column: 30, scope: !11632)
!11636 = !DILocation(line: 119, column: 1, scope: !11632)
!11637 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2036, file: !2036, line: 126, type: !5703, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !381)
!11638 = !DILocation(line: 128, column: 10, scope: !11637)
!11639 = !DILocation(line: 128, column: 25, scope: !11637)
!11640 = !DILocation(line: 128, column: 38, scope: !11637)
!11641 = !DILocation(line: 128, column: 53, scope: !11637)
!11642 = !DILocation(line: 128, column: 2, scope: !11637)
!11643 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2036, file: !2036, line: 187, type: !11644, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11646)
!11644 = !DISubroutineType(types: !11645)
!11645 = !{!103, !2040, !121}
!11646 = !{!11647, !11648}
!11647 = !DILocalVariable(name: "thread", arg: 1, scope: !11643, file: !2036, line: 187, type: !2040)
!11648 = !DILocalVariable(name: "value", arg: 2, scope: !11643, file: !2036, line: 187, type: !121)
!11649 = !DILocation(line: 0, scope: !11643)
!11650 = !DILocation(line: 206, column: 2, scope: !11643)
!11651 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2036, file: !2036, line: 238, type: !11652, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11654)
!11652 = !DISubroutineType(types: !11653)
!11653 = !{!121, !2040}
!11654 = !{!11655}
!11655 = !DILocalVariable(name: "thread", arg: 1, scope: !11651, file: !2036, line: 238, type: !2040)
!11656 = !DILocation(line: 0, scope: !11651)
!11657 = !DILocation(line: 244, column: 2, scope: !11651)
!11658 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2036, file: !2036, line: 248, type: !11659, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11661)
!11659 = !DISubroutineType(types: !11660)
!11660 = !{!103, !2039, !1054, !259}
!11661 = !{!11662, !11663, !11664}
!11662 = !DILocalVariable(name: "thread", arg: 1, scope: !11658, file: !2036, line: 248, type: !2039)
!11663 = !DILocalVariable(name: "buf", arg: 2, scope: !11658, file: !2036, line: 248, type: !1054)
!11664 = !DILocalVariable(name: "size", arg: 3, scope: !11658, file: !2036, line: 248, type: !259)
!11665 = !DILocation(line: 0, scope: !11658)
!11666 = !DILocation(line: 257, column: 2, scope: !11658)
!11667 = !DILocation(line: 0, scope: !2035)
!11668 = !DILocation(line: 281, column: 11, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !2035, file: !2036, line: 281, column: 6)
!11670 = !DILocation(line: 281, column: 20, scope: !11669)
!11671 = !DILocation(line: 275, column: 45, scope: !2035)
!11672 = !DILocation(line: 285, column: 10, scope: !2035)
!11673 = !DILocation(line: 0, scope: !2156)
!11674 = !DILocation(line: 293, column: 39, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !2156, file: !2036, line: 293, column: 2)
!11676 = !DILocation(line: 293, column: 2, scope: !2156)
!11677 = !DILocation(line: 273, column: 14, scope: !2035)
!11678 = !DILocation(line: 309, column: 2, scope: !2035)
!11679 = !DILocation(line: 309, column: 11, scope: !2035)
!11680 = !DILocation(line: 311, column: 2, scope: !2035)
!11681 = !DILocation(line: 293, column: 26, scope: !11675)
!11682 = !DILocation(line: 294, column: 9, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11675, file: !2036, line: 293, column: 54)
!11684 = !DILocation(line: 295, column: 21, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11683, file: !2036, line: 295, column: 7)
!11686 = !DILocation(line: 295, column: 28, scope: !11685)
!11687 = !DILocation(line: 295, column: 7, scope: !11683)
!11688 = !DILocation(line: 299, column: 25, scope: !11683)
!11689 = !DILocation(line: 299, column: 41, scope: !11683)
!11690 = !DILocation(line: 300, column: 7, scope: !11683)
!11691 = !DILocation(line: 300, column: 26, scope: !11683)
!11692 = !DILocation(line: 299, column: 10, scope: !11683)
!11693 = !DILocation(line: 299, column: 7, scope: !11683)
!11694 = !DILocation(line: 302, column: 16, scope: !11683)
!11695 = !DILocation(line: 304, column: 20, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11683, file: !2036, line: 304, column: 7)
!11697 = !DILocation(line: 304, column: 7, scope: !11683)
!11698 = !DILocation(line: 305, column: 26, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11696, file: !2036, line: 304, column: 26)
!11700 = !DILocation(line: 305, column: 42, scope: !11699)
!11701 = !DILocation(line: 305, column: 11, scope: !11699)
!11702 = !DILocation(line: 305, column: 8, scope: !11699)
!11703 = !DILocation(line: 306, column: 3, scope: !11699)
!11704 = !DILocation(line: 293, column: 50, scope: !11675)
!11705 = !DILocation(line: 312, column: 1, scope: !2035)
!11706 = distinct !DISubprogram(name: "copy_bytes", scope: !2036, file: !2036, line: 261, type: !11707, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11709)
!11707 = !DISubroutineType(types: !11708)
!11708 = !{!259, !1054, !259, !121, !259}
!11709 = !{!11710, !11711, !11712, !11713, !11714}
!11710 = !DILocalVariable(name: "dest", arg: 1, scope: !11706, file: !2036, line: 261, type: !1054)
!11711 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11706, file: !2036, line: 261, type: !259)
!11712 = !DILocalVariable(name: "src", arg: 3, scope: !11706, file: !2036, line: 261, type: !121)
!11713 = !DILocalVariable(name: "src_size", arg: 4, scope: !11706, file: !2036, line: 261, type: !259)
!11714 = !DILocalVariable(name: "bytes_to_copy", scope: !11706, file: !2036, line: 263, type: !259)
!11715 = !DILocation(line: 0, scope: !11706)
!11716 = !DILocation(line: 265, column: 18, scope: !11706)
!11717 = !DILocation(line: 266, column: 2, scope: !11706)
!11718 = !DILocation(line: 268, column: 2, scope: !11706)
!11719 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2036, file: !2036, line: 383, type: !11720, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11722)
!11720 = !DISubroutineType(types: !11721)
!11721 = !{null, !2040}
!11722 = !{!11723}
!11723 = !DILocalVariable(name: "thread", arg: 1, scope: !11719, file: !2036, line: 383, type: !2040)
!11724 = !DILocation(line: 0, scope: !11719)
!11725 = !DILocation(line: 387, column: 2, scope: !11719)
!11726 = !DILocation(line: 388, column: 1, scope: !11719)
!11727 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2036, file: !2036, line: 528, type: !11728, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11735)
!11728 = !DISubroutineType(types: !11729)
!11729 = !{!1054, !2040, !11730, !259, !3233, !104, !104, !104, !103, !142, !121}
!11730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11731, size: 32)
!11731 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3234, line: 44, baseType: !11732)
!11732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1989, line: 47, size: 8, elements: !11733)
!11733 = !{!11734}
!11734 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11732, file: !1989, line: 48, baseType: !123, size: 8)
!11735 = !{!11736, !11737, !11738, !11739, !11740, !11741, !11742, !11743, !11744, !11745, !11746}
!11736 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11727, file: !2036, line: 528, type: !2040)
!11737 = !DILocalVariable(name: "stack", arg: 2, scope: !11727, file: !2036, line: 529, type: !11730)
!11738 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11727, file: !2036, line: 529, type: !259)
!11739 = !DILocalVariable(name: "entry", arg: 4, scope: !11727, file: !2036, line: 530, type: !3233)
!11740 = !DILocalVariable(name: "p1", arg: 5, scope: !11727, file: !2036, line: 531, type: !104)
!11741 = !DILocalVariable(name: "p2", arg: 6, scope: !11727, file: !2036, line: 531, type: !104)
!11742 = !DILocalVariable(name: "p3", arg: 7, scope: !11727, file: !2036, line: 531, type: !104)
!11743 = !DILocalVariable(name: "prio", arg: 8, scope: !11727, file: !2036, line: 532, type: !103)
!11744 = !DILocalVariable(name: "options", arg: 9, scope: !11727, file: !2036, line: 532, type: !142)
!11745 = !DILocalVariable(name: "name", arg: 10, scope: !11727, file: !2036, line: 532, type: !121)
!11746 = !DILocalVariable(name: "stack_ptr", scope: !11727, file: !2036, line: 534, type: !1054)
!11747 = !DILocation(line: 0, scope: !11727)
!11748 = !DILocation(line: 550, column: 28, scope: !11727)
!11749 = !DILocation(line: 550, column: 2, scope: !11727)
!11750 = !DILocation(line: 553, column: 34, scope: !11727)
!11751 = !DILocation(line: 553, column: 2, scope: !11727)
!11752 = !DILocation(line: 554, column: 14, scope: !11727)
!11753 = !DILocation(line: 564, column: 2, scope: !11727)
!11754 = !DILocation(line: 567, column: 14, scope: !11727)
!11755 = !DILocation(line: 567, column: 24, scope: !11727)
!11756 = !DILocation(line: 612, column: 7, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11727, file: !2036, line: 612, column: 6)
!11758 = !DILocation(line: 612, column: 6, scope: !11727)
!11759 = !DILocation(line: 627, column: 40, scope: !11727)
!11760 = !DILocation(line: 637, column: 2, scope: !11727)
!11761 = !DILocation(line: 613, column: 15, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11757, file: !2036, line: 612, column: 17)
!11763 = !DILocation(line: 613, column: 29, scope: !11762)
!11764 = !DILocation(line: 638, column: 1, scope: !11727)
!11765 = distinct !DISubprogram(name: "z_waitq_init", scope: !11766, file: !11766, line: 47, type: !11767, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11769)
!11766 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11767 = !DISubroutineType(types: !11768)
!11768 = !{null, !2071}
!11769 = !{!11770}
!11770 = !DILocalVariable(name: "w", arg: 1, scope: !11765, file: !11766, line: 47, type: !2071)
!11771 = !DILocation(line: 0, scope: !11765)
!11772 = !DILocation(line: 49, column: 21, scope: !11765)
!11773 = !DILocation(line: 49, column: 2, scope: !11765)
!11774 = !DILocation(line: 50, column: 1, scope: !11765)
!11775 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2036, file: !2036, line: 791, type: !11776, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11779)
!11776 = !DISubroutineType(types: !11777)
!11777 = !{null, !11778, !103, !142, !32}
!11778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!11779 = !{!11780, !11781, !11782, !11783}
!11780 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11775, file: !2036, line: 791, type: !11778)
!11781 = !DILocalVariable(name: "priority", arg: 2, scope: !11775, file: !2036, line: 791, type: !103)
!11782 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11775, file: !2036, line: 792, type: !142)
!11783 = !DILocalVariable(name: "options", arg: 4, scope: !11775, file: !2036, line: 792, type: !32)
!11784 = !DILocation(line: 0, scope: !11775)
!11785 = !DILocation(line: 795, column: 15, scope: !11775)
!11786 = !DILocation(line: 795, column: 25, scope: !11775)
!11787 = !DILocation(line: 796, column: 30, scope: !11775)
!11788 = !DILocation(line: 796, column: 15, scope: !11775)
!11789 = !DILocation(line: 796, column: 28, scope: !11775)
!11790 = !DILocation(line: 797, column: 30, scope: !11775)
!11791 = !DILocation(line: 797, column: 15, scope: !11775)
!11792 = !DILocation(line: 797, column: 28, scope: !11775)
!11793 = !DILocation(line: 799, column: 22, scope: !11775)
!11794 = !DILocation(line: 799, column: 15, scope: !11775)
!11795 = !DILocation(line: 799, column: 20, scope: !11775)
!11796 = !DILocation(line: 801, column: 15, scope: !11775)
!11797 = !DILocation(line: 801, column: 28, scope: !11775)
!11798 = !DILocation(line: 814, column: 2, scope: !11775)
!11799 = !DILocation(line: 815, column: 1, scope: !11775)
!11800 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2036, file: !2036, line: 449, type: !11801, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11803)
!11801 = !DISubroutineType(types: !11802)
!11802 = !{!1054, !2040, !11730, !259}
!11803 = !{!11804, !11805, !11806, !11807, !11808, !11809, !11810, !11811}
!11804 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11800, file: !2036, line: 449, type: !2040)
!11805 = !DILocalVariable(name: "stack", arg: 2, scope: !11800, file: !2036, line: 450, type: !11730)
!11806 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11800, file: !2036, line: 450, type: !259)
!11807 = !DILocalVariable(name: "stack_obj_size", scope: !11800, file: !2036, line: 452, type: !259)
!11808 = !DILocalVariable(name: "stack_buf_size", scope: !11800, file: !2036, line: 452, type: !259)
!11809 = !DILocalVariable(name: "stack_ptr", scope: !11800, file: !2036, line: 453, type: !1054)
!11810 = !DILocalVariable(name: "stack_buf_start", scope: !11800, file: !2036, line: 453, type: !1054)
!11811 = !DILocalVariable(name: "delta", scope: !11800, file: !2036, line: 454, type: !259)
!11812 = !DILocation(line: 0, scope: !11800)
!11813 = !DILocation(line: 465, column: 20, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11800, file: !2036, line: 463, column: 2)
!11815 = !DILocation(line: 466, column: 21, scope: !11814)
!11816 = !DILocation(line: 473, column: 28, scope: !11800)
!11817 = !DILocation(line: 514, column: 33, scope: !11800)
!11818 = !DILocation(line: 514, column: 25, scope: !11800)
!11819 = !DILocation(line: 514, column: 31, scope: !11800)
!11820 = !DILocation(line: 515, column: 25, scope: !11800)
!11821 = !DILocation(line: 515, column: 30, scope: !11800)
!11822 = !DILocation(line: 516, column: 25, scope: !11800)
!11823 = !DILocation(line: 516, column: 31, scope: !11800)
!11824 = !DILocation(line: 520, column: 2, scope: !11800)
!11825 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1989, file: !1989, line: 331, type: !11826, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11828)
!11826 = !DISubroutineType(types: !11827)
!11827 = !{!1054, !11730}
!11828 = !{!11829}
!11829 = !DILocalVariable(name: "sym", arg: 1, scope: !11825, file: !1989, line: 331, type: !11730)
!11830 = !DILocation(line: 0, scope: !11825)
!11831 = !DILocation(line: 333, column: 21, scope: !11825)
!11832 = !DILocation(line: 333, column: 2, scope: !11825)
!11833 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11834, file: !11834, line: 40, type: !11835, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11837)
!11834 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11835 = !DISubroutineType(types: !11836)
!11836 = !{null, !11778}
!11837 = !{!11838}
!11838 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11833, file: !11834, line: 40, type: !11778)
!11839 = !DILocation(line: 0, scope: !11833)
!11840 = !DILocation(line: 42, column: 31, scope: !11833)
!11841 = !DILocation(line: 42, column: 2, scope: !11833)
!11842 = !DILocation(line: 43, column: 1, scope: !11833)
!11843 = distinct !DISubprogram(name: "z_init_timeout", scope: !11834, file: !11834, line: 25, type: !2097, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11844)
!11844 = !{!11845}
!11845 = !DILocalVariable(name: "to", arg: 1, scope: !11843, file: !11834, line: 25, type: !2099)
!11846 = !DILocation(line: 0, scope: !11843)
!11847 = !DILocation(line: 27, column: 22, scope: !11843)
!11848 = !DILocation(line: 27, column: 2, scope: !11843)
!11849 = !DILocation(line: 28, column: 1, scope: !11843)
!11850 = distinct !DISubprogram(name: "sys_dnode_init", scope: !280, file: !280, line: 211, type: !11851, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11853)
!11851 = !DISubroutineType(types: !11852)
!11852 = !{null, !2143}
!11853 = !{!11854}
!11854 = !DILocalVariable(name: "node", arg: 1, scope: !11850, file: !280, line: 211, type: !2143)
!11855 = !DILocation(line: 0, scope: !11850)
!11856 = !DILocation(line: 213, column: 8, scope: !11850)
!11857 = !DILocation(line: 213, column: 13, scope: !11850)
!11858 = !DILocation(line: 214, column: 8, scope: !11850)
!11859 = !DILocation(line: 214, column: 13, scope: !11850)
!11860 = !DILocation(line: 215, column: 1, scope: !11850)
!11861 = distinct !DISubprogram(name: "sys_dlist_init", scope: !280, file: !280, line: 197, type: !11862, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11865)
!11862 = !DISubroutineType(types: !11863)
!11863 = !{null, !11864}
!11864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 32)
!11865 = !{!11866}
!11866 = !DILocalVariable(name: "list", arg: 1, scope: !11861, file: !280, line: 197, type: !11864)
!11867 = !DILocation(line: 0, scope: !11861)
!11868 = !DILocation(line: 199, column: 8, scope: !11861)
!11869 = !DILocation(line: 199, column: 13, scope: !11861)
!11870 = !DILocation(line: 200, column: 8, scope: !11861)
!11871 = !DILocation(line: 200, column: 13, scope: !11861)
!11872 = !DILocation(line: 201, column: 1, scope: !11861)
!11873 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2036, file: !2036, line: 641, type: !11874, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11880)
!11874 = !DISubroutineType(types: !11875)
!11875 = !{!2039, !2040, !11730, !259, !3233, !104, !104, !104, !103, !142, !11876}
!11876 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1516, line: 67, baseType: !11877)
!11877 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1516, line: 65, size: 64, elements: !11878)
!11878 = !{!11879}
!11879 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11877, file: !1516, line: 66, baseType: !1515, size: 64)
!11880 = !{!11881, !11882, !11883, !11884, !11885, !11886, !11887, !11888, !11889, !11890}
!11881 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11873, file: !2036, line: 641, type: !2040)
!11882 = !DILocalVariable(name: "stack", arg: 2, scope: !11873, file: !2036, line: 642, type: !11730)
!11883 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11873, file: !2036, line: 643, type: !259)
!11884 = !DILocalVariable(name: "entry", arg: 4, scope: !11873, file: !2036, line: 643, type: !3233)
!11885 = !DILocalVariable(name: "p1", arg: 5, scope: !11873, file: !2036, line: 644, type: !104)
!11886 = !DILocalVariable(name: "p2", arg: 6, scope: !11873, file: !2036, line: 644, type: !104)
!11887 = !DILocalVariable(name: "p3", arg: 7, scope: !11873, file: !2036, line: 644, type: !104)
!11888 = !DILocalVariable(name: "prio", arg: 8, scope: !11873, file: !2036, line: 645, type: !103)
!11889 = !DILocalVariable(name: "options", arg: 9, scope: !11873, file: !2036, line: 645, type: !142)
!11890 = !DILocalVariable(name: "delay", arg: 10, scope: !11873, file: !2036, line: 645, type: !11876)
!11891 = !DILocation(line: 0, scope: !11873)
!11892 = !DILocation(line: 649, column: 2, scope: !11873)
!11893 = !DILocation(line: 652, column: 7, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11873, file: !2036, line: 652, column: 6)
!11895 = !DILocation(line: 652, column: 6, scope: !11873)
!11896 = !DILocation(line: 653, column: 3, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11894, file: !2036, line: 652, column: 39)
!11898 = !DILocation(line: 654, column: 2, scope: !11897)
!11899 = !DILocation(line: 656, column: 2, scope: !11873)
!11900 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2036, file: !2036, line: 401, type: !11901, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11903)
!11901 = !DISubroutineType(types: !11902)
!11902 = !{null, !2040, !11876}
!11903 = !{!11904, !11905}
!11904 = !DILocalVariable(name: "thread", arg: 1, scope: !11900, file: !2036, line: 401, type: !2040)
!11905 = !DILocalVariable(name: "delay", arg: 2, scope: !11900, file: !2036, line: 401, type: !11876)
!11906 = !DILocation(line: 0, scope: !11900)
!11907 = !DILocation(line: 404, column: 6, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11900, file: !2036, line: 404, column: 6)
!11909 = !DILocation(line: 404, column: 6, scope: !11900)
!11910 = !DILocation(line: 405, column: 3, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11908, file: !2036, line: 404, column: 38)
!11912 = !DILocation(line: 406, column: 2, scope: !11911)
!11913 = !DILocation(line: 407, column: 3, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11908, file: !2036, line: 406, column: 9)
!11915 = !DILocation(line: 413, column: 1, scope: !11900)
!11916 = distinct !DISubprogram(name: "k_thread_start", scope: !3355, file: !3355, line: 205, type: !11917, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11919)
!11917 = !DISubroutineType(types: !11918)
!11918 = !{null, !2039}
!11919 = !{!11920}
!11920 = !DILocalVariable(name: "thread", arg: 1, scope: !11916, file: !3355, line: 205, type: !2039)
!11921 = !DILocation(line: 0, scope: !11916)
!11922 = !DILocation(line: 214, column: 2, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11916, file: !3355, line: 214, column: 2)
!11924 = !{i64 2155086646}
!11925 = !DILocation(line: 215, column: 2, scope: !11916)
!11926 = !DILocation(line: 216, column: 1, scope: !11916)
!11927 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11834, file: !11834, line: 47, type: !11901, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11928)
!11928 = !{!11929, !11930}
!11929 = !DILocalVariable(name: "thread", arg: 1, scope: !11927, file: !11834, line: 47, type: !2040)
!11930 = !DILocalVariable(name: "ticks", arg: 2, scope: !11927, file: !11834, line: 47, type: !11876)
!11931 = !DILocation(line: 0, scope: !11927)
!11932 = !DILocation(line: 49, column: 30, scope: !11927)
!11933 = !DILocation(line: 49, column: 2, scope: !11927)
!11934 = !DILocation(line: 50, column: 1, scope: !11927)
!11935 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2036, file: !2036, line: 748, type: !2876, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !11936)
!11936 = !{!11937, !11955}
!11937 = !DILocalVariable(name: "thread_data", scope: !11938, file: !2036, line: 750, type: !11939)
!11938 = distinct !DILexicalBlock(scope: !11935, file: !2036, line: 750, column: 2)
!11939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11940, size: 32)
!11940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !366, line: 620, size: 384, elements: !11941)
!11941 = !{!11942, !11943, !11944, !11945, !11946, !11947, !11948, !11949, !11950, !11951, !11952, !11954}
!11942 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11940, file: !366, line: 621, baseType: !2040, size: 32)
!11943 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11940, file: !366, line: 622, baseType: !11730, size: 32, offset: 32)
!11944 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11940, file: !366, line: 623, baseType: !32, size: 32, offset: 64)
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11940, file: !366, line: 624, baseType: !3233, size: 32, offset: 96)
!11946 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11940, file: !366, line: 625, baseType: !104, size: 32, offset: 128)
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11940, file: !366, line: 626, baseType: !104, size: 32, offset: 160)
!11948 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11940, file: !366, line: 627, baseType: !104, size: 32, offset: 192)
!11949 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11940, file: !366, line: 628, baseType: !103, size: 32, offset: 224)
!11950 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11940, file: !366, line: 629, baseType: !142, size: 32, offset: 256)
!11951 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11940, file: !366, line: 630, baseType: !654, size: 32, offset: 288)
!11952 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11940, file: !366, line: 631, baseType: !11953, size: 32, offset: 320)
!11953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 32)
!11954 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11940, file: !366, line: 632, baseType: !121, size: 32, offset: 352)
!11955 = !DILocalVariable(name: "thread_data", scope: !11956, file: !2036, line: 781, type: !11939)
!11956 = distinct !DILexicalBlock(scope: !11935, file: !2036, line: 781, column: 2)
!11957 = !DILocation(line: 0, scope: !11938)
!11958 = !DILocation(line: 750, column: 2, scope: !11938)
!11959 = !DILocation(line: 780, column: 2, scope: !11935)
!11960 = !DILocation(line: 0, scope: !11956)
!11961 = !DILocation(line: 781, column: 2, scope: !11956)
!11962 = !DILocation(line: 752, column: 17, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11964, file: !2036, line: 750, column: 38)
!11964 = distinct !DILexicalBlock(scope: !11938, file: !2036, line: 750, column: 2)
!11965 = !DILocation(line: 753, column: 17, scope: !11963)
!11966 = !DILocation(line: 754, column: 17, scope: !11963)
!11967 = !DILocation(line: 755, column: 17, scope: !11963)
!11968 = !DILocation(line: 756, column: 17, scope: !11963)
!11969 = !DILocation(line: 757, column: 17, scope: !11963)
!11970 = !DILocation(line: 758, column: 17, scope: !11963)
!11971 = !DILocation(line: 759, column: 17, scope: !11963)
!11972 = !DILocation(line: 760, column: 17, scope: !11963)
!11973 = !DILocation(line: 751, column: 3, scope: !11963)
!11974 = !DILocation(line: 763, column: 16, scope: !11963)
!11975 = !DILocation(line: 763, column: 29, scope: !11963)
!11976 = !DILocation(line: 763, column: 39, scope: !11963)
!11977 = !DILocation(line: 750, column: 2, scope: !11964)
!11978 = !DILocation(line: 750, column: 2, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11964, file: !2036, line: 750, column: 2)
!11980 = distinct !{!11980, !11958, !11981}
!11981 = !DILocation(line: 764, column: 2, scope: !11938)
!11982 = !DILocation(line: 787, column: 2, scope: !11935)
!11983 = !DILocation(line: 788, column: 1, scope: !11935)
!11984 = !DILocation(line: 782, column: 20, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11986, file: !2036, line: 782, column: 7)
!11986 = distinct !DILexicalBlock(scope: !11987, file: !2036, line: 781, column: 38)
!11987 = distinct !DILexicalBlock(scope: !11956, file: !2036, line: 781, column: 2)
!11988 = !DILocation(line: 782, column: 31, scope: !11985)
!11989 = !DILocation(line: 782, column: 7, scope: !11986)
!11990 = !DILocation(line: 783, column: 37, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11985, file: !2036, line: 782, column: 51)
!11992 = !DILocation(line: 784, column: 10, scope: !11991)
!11993 = !DILocation(line: 783, column: 4, scope: !11991)
!11994 = !DILocation(line: 785, column: 3, scope: !11991)
!11995 = !DILocation(line: 781, column: 2, scope: !11987)
!11996 = !DILocation(line: 781, column: 2, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11987, file: !2036, line: 781, column: 2)
!11998 = distinct !{!11998, !11961, !11999}
!11999 = !DILocation(line: 786, column: 2, scope: !11956)
!12000 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12001, file: !12001, line: 403, type: !12002, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !12004)
!12001 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12002 = !DISubroutineType(types: !12003)
!12003 = !{!1367, !1367}
!12004 = !{!12005}
!12005 = !DILocalVariable(name: "t", arg: 1, scope: !12000, file: !12001, line: 403, type: !1367)
!12006 = !DILocation(line: 0, scope: !12000)
!12007 = !DILocalVariable(name: "t", arg: 1, scope: !12008, file: !12001, line: 102, type: !1367)
!12008 = distinct !DISubprogram(name: "z_tmcvt", scope: !12001, file: !12001, line: 102, type: !12009, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !12011)
!12009 = !DISubroutineType(types: !12010)
!12010 = !{!1367, !1367, !142, !142, !134, !134, !134, !134}
!12011 = !{!12007, !12012, !12013, !12014, !12015, !12016, !12017, !12018, !12019, !12020, !12021}
!12012 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12008, file: !12001, line: 102, type: !142)
!12013 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12008, file: !12001, line: 103, type: !142)
!12014 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12008, file: !12001, line: 103, type: !134)
!12015 = !DILocalVariable(name: "result32", arg: 5, scope: !12008, file: !12001, line: 104, type: !134)
!12016 = !DILocalVariable(name: "round_up", arg: 6, scope: !12008, file: !12001, line: 104, type: !134)
!12017 = !DILocalVariable(name: "round_off", arg: 7, scope: !12008, file: !12001, line: 105, type: !134)
!12018 = !DILocalVariable(name: "mul_ratio", scope: !12008, file: !12001, line: 107, type: !134)
!12019 = !DILocalVariable(name: "div_ratio", scope: !12008, file: !12001, line: 109, type: !134)
!12020 = !DILocalVariable(name: "off", scope: !12008, file: !12001, line: 116, type: !1367)
!12021 = !DILocalVariable(name: "rdivisor", scope: !12022, file: !12001, line: 119, type: !142)
!12022 = distinct !DILexicalBlock(scope: !12023, file: !12001, line: 118, column: 18)
!12023 = distinct !DILexicalBlock(scope: !12008, file: !12001, line: 118, column: 6)
!12024 = !DILocation(line: 0, scope: !12008, inlinedAt: !12025)
!12025 = distinct !DILocation(line: 406, column: 9, scope: !12000)
!12026 = !DILocation(line: 145, column: 13, scope: !12027, inlinedAt: !12025)
!12027 = distinct !DILexicalBlock(scope: !12028, file: !12001, line: 144, column: 10)
!12028 = distinct !DILexicalBlock(scope: !12029, file: !12001, line: 142, column: 7)
!12029 = distinct !DILexicalBlock(scope: !12030, file: !12001, line: 141, column: 24)
!12030 = distinct !DILexicalBlock(scope: !12031, file: !12001, line: 141, column: 13)
!12031 = distinct !DILexicalBlock(scope: !12008, file: !12001, line: 134, column: 6)
!12032 = !DILocation(line: 406, column: 2, scope: !12000)
!12033 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2036, file: !2036, line: 817, type: !3231, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !12034)
!12034 = !{!12035, !12036, !12037, !12038}
!12035 = !DILocalVariable(name: "entry", arg: 1, scope: !12033, file: !2036, line: 817, type: !3233)
!12036 = !DILocalVariable(name: "p1", arg: 2, scope: !12033, file: !2036, line: 818, type: !104)
!12037 = !DILocalVariable(name: "p2", arg: 3, scope: !12033, file: !2036, line: 818, type: !104)
!12038 = !DILocalVariable(name: "p3", arg: 4, scope: !12033, file: !2036, line: 818, type: !104)
!12039 = !DILocation(line: 0, scope: !12033)
!12040 = !DILocation(line: 822, column: 2, scope: !12033)
!12041 = !DILocation(line: 822, column: 17, scope: !12033)
!12042 = !DILocation(line: 822, column: 30, scope: !12033)
!12043 = !DILocation(line: 823, column: 2, scope: !12033)
!12044 = !DILocation(line: 845, column: 2, scope: !12033)
!12045 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2036, file: !2036, line: 888, type: !12046, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !12048)
!12046 = !DISubroutineType(types: !12047)
!12047 = !{!103, !2040}
!12048 = !{!12049}
!12049 = !DILocalVariable(name: "thread", arg: 1, scope: !12045, file: !2036, line: 888, type: !2040)
!12050 = !DILocation(line: 0, scope: !12045)
!12051 = !DILocation(line: 893, column: 2, scope: !12045)
!12052 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2036, file: !2036, line: 897, type: !12053, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !12055)
!12053 = !DISubroutineType(types: !12054)
!12054 = !{!103, !2040, !32}
!12055 = !{!12056, !12057}
!12056 = !DILocalVariable(name: "thread", arg: 1, scope: !12052, file: !2036, line: 897, type: !2040)
!12057 = !DILocalVariable(name: "options", arg: 2, scope: !12052, file: !2036, line: 897, type: !32)
!12058 = !DILocation(line: 0, scope: !12052)
!12059 = !DILocation(line: 902, column: 2, scope: !12052)
!12060 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2036, file: !2036, line: 1072, type: !12061, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !12066)
!12061 = !DISubroutineType(types: !12062)
!12062 = !{!103, !2039, !12063}
!12063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12064, size: 32)
!12064 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !270, line: 234, baseType: !12065)
!12065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !270, line: 192, elements: !381)
!12066 = !{!12067, !12068}
!12067 = !DILocalVariable(name: "thread", arg: 1, scope: !12060, file: !2036, line: 1072, type: !2039)
!12068 = !DILocalVariable(name: "stats", arg: 2, scope: !12060, file: !2036, line: 1073, type: !12063)
!12069 = !DILocation(line: 0, scope: !12060)
!12070 = !DILocation(line: 1075, column: 14, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12060, file: !2036, line: 1075, column: 6)
!12072 = !DILocation(line: 1075, column: 23, scope: !12071)
!12073 = !DILocation(line: 1086, column: 1, scope: !12060)
!12074 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2036, file: !2036, line: 1088, type: !12075, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2140, retainedNodes: !12077)
!12075 = !DISubroutineType(types: !12076)
!12076 = !{!103, !12063}
!12077 = !{!12078}
!12078 = !DILocalVariable(name: "stats", arg: 1, scope: !12074, file: !2036, line: 1088, type: !12063)
!12079 = !DILocation(line: 0, scope: !12074)
!12080 = !DILocation(line: 1094, column: 12, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12074, file: !2036, line: 1094, column: 6)
!12082 = !DILocation(line: 1120, column: 1, scope: !12074)
!12083 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12084, file: !12084, line: 20, type: !2876, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !381)
!12084 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12085 = !DILocation(line: 30, column: 2, scope: !12083)
!12086 = !DILocation(line: 31, column: 1, scope: !12083)
!12087 = distinct !DISubprogram(name: "idle", scope: !12084, file: !12084, line: 33, type: !3236, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !12088)
!12088 = !{!12089, !12090, !12091}
!12089 = !DILocalVariable(name: "unused1", arg: 1, scope: !12087, file: !12084, line: 33, type: !104)
!12090 = !DILocalVariable(name: "unused2", arg: 2, scope: !12087, file: !12084, line: 33, type: !104)
!12091 = !DILocalVariable(name: "unused3", arg: 3, scope: !12087, file: !12084, line: 33, type: !104)
!12092 = !DILocation(line: 0, scope: !12087)
!12093 = !DILocation(line: 41, column: 2, scope: !12087)
!12094 = !DILocation(line: 55, column: 2, scope: !12095, inlinedAt: !12099)
!12095 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4734, file: !4734, line: 42, type: !4735, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !12096)
!12096 = !{!12097, !12098}
!12097 = !DILocalVariable(name: "key", scope: !12095, file: !4734, line: 44, type: !32)
!12098 = !DILocalVariable(name: "tmp", scope: !12095, file: !4734, line: 53, type: !32)
!12099 = distinct !DILocation(line: 62, column: 10, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12087, file: !12084, line: 41, column: 15)
!12101 = !{i64 2278193}
!12102 = !DILocation(line: 0, scope: !12095, inlinedAt: !12099)
!12103 = !DILocation(line: 86, column: 3, scope: !12100)
!12104 = distinct !{!12104, !12093, !12105}
!12105 = !DILocation(line: 105, column: 2, scope: !12087)
!12106 = distinct !DISubprogram(name: "k_cpu_idle", scope: !366, file: !366, line: 5627, type: !2876, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !381)
!12107 = !DILocation(line: 5629, column: 2, scope: !12106)
!12108 = !DILocation(line: 5630, column: 1, scope: !12106)
!12109 = !DISubprogram(name: "arch_cpu_idle", scope: !3234, file: !3234, line: 167, type: !2876, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !381)
!12110 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2268, file: !2268, line: 93, type: !12111, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12113)
!12111 = !DISubroutineType(types: !12112)
!12112 = !{!654, !2163, !2163}
!12113 = !{!12114, !12115, !12116, !12117}
!12114 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12110, file: !2268, line: 93, type: !2163)
!12115 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12110, file: !2268, line: 94, type: !2163)
!12116 = !DILocalVariable(name: "b1", scope: !12110, file: !2268, line: 97, type: !654)
!12117 = !DILocalVariable(name: "b2", scope: !12110, file: !2268, line: 98, type: !654)
!12118 = !DILocation(line: 0, scope: !12110)
!12119 = !DILocation(line: 97, column: 30, scope: !12110)
!12120 = !DILocation(line: 98, column: 30, scope: !12110)
!12121 = !DILocation(line: 100, column: 9, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12110, file: !2268, line: 100, column: 6)
!12123 = !DILocation(line: 100, column: 6, scope: !12110)
!12124 = !DILocation(line: 125, column: 1, scope: !12110)
!12125 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2268, file: !2268, line: 428, type: !12126, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12128)
!12126 = !DISubroutineType(types: !12127)
!12127 = !{null, !2163}
!12128 = !{!12129}
!12129 = !DILocalVariable(name: "curr", arg: 1, scope: !12125, file: !2268, line: 428, type: !2163)
!12130 = !DILocation(line: 0, scope: !12125)
!12131 = !DILocation(line: 434, column: 6, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12125, file: !2268, line: 434, column: 6)
!12133 = !DILocation(line: 434, column: 23, scope: !12132)
!12134 = !DILocation(line: 434, column: 6, scope: !12125)
!12135 = !DILocation(line: 435, column: 50, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12132, file: !2268, line: 434, column: 29)
!12137 = !DILocation(line: 435, column: 48, scope: !12136)
!12138 = !DILocation(line: 435, column: 29, scope: !12136)
!12139 = !DILocation(line: 436, column: 24, scope: !12136)
!12140 = !DILocation(line: 436, column: 3, scope: !12136)
!12141 = !DILocation(line: 437, column: 2, scope: !12136)
!12142 = !DILocation(line: 438, column: 1, scope: !12125)
!12143 = distinct !DISubprogram(name: "slice_time", scope: !2268, file: !2268, line: 407, type: !12144, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12146)
!12144 = !DISubroutineType(types: !12145)
!12145 = !{!103, !2163}
!12146 = !{!12147, !12148}
!12147 = !DILocalVariable(name: "curr", arg: 1, scope: !12143, file: !2268, line: 407, type: !2163)
!12148 = !DILocalVariable(name: "ret", scope: !12143, file: !2268, line: 409, type: !103)
!12149 = !DILocation(line: 0, scope: !12143)
!12150 = !DILocation(line: 409, column: 12, scope: !12143)
!12151 = !DILocation(line: 416, column: 2, scope: !12143)
!12152 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2268, file: !2268, line: 440, type: !12153, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12155)
!12153 = !DISubroutineType(types: !12154)
!12154 = !{null, !654, !103}
!12155 = !{!12156, !12157, !12158, !12164}
!12156 = !DILocalVariable(name: "slice", arg: 1, scope: !12152, file: !2268, line: 440, type: !654)
!12157 = !DILocalVariable(name: "prio", arg: 2, scope: !12152, file: !2268, line: 440, type: !103)
!12158 = !DILocalVariable(name: "__i", scope: !12159, file: !2268, line: 442, type: !12160)
!12159 = distinct !DILexicalBlock(scope: !12152, file: !2268, line: 442, column: 2)
!12160 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !380, line: 106, baseType: !12161)
!12161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !380, line: 32, size: 32, elements: !12162)
!12162 = !{!12163}
!12163 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12161, file: !380, line: 33, baseType: !103, size: 32)
!12164 = !DILocalVariable(name: "__key", scope: !12159, file: !2268, line: 442, type: !12160)
!12165 = !DILocation(line: 0, scope: !12152)
!12166 = !DILocation(line: 0, scope: !12159)
!12167 = !DILocalVariable(name: "l", arg: 1, scope: !12168, file: !380, line: 136, type: !12171)
!12168 = distinct !DISubprogram(name: "k_spin_lock", scope: !380, file: !380, line: 136, type: !12169, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12172)
!12169 = !DISubroutineType(types: !12170)
!12170 = !{!12160, !12171}
!12171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!12172 = !{!12167, !12173}
!12173 = !DILocalVariable(name: "k", scope: !12168, file: !380, line: 139, type: !12160)
!12174 = !DILocation(line: 0, scope: !12168, inlinedAt: !12175)
!12175 = distinct !DILocation(line: 442, column: 2, scope: !12159)
!12176 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !12181)
!12177 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4734, file: !4734, line: 42, type: !4735, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12178)
!12178 = !{!12179, !12180}
!12179 = !DILocalVariable(name: "key", scope: !12177, file: !4734, line: 44, type: !32)
!12180 = !DILocalVariable(name: "tmp", scope: !12177, file: !4734, line: 53, type: !32)
!12181 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !12175)
!12182 = !{i64 2322164}
!12183 = !DILocation(line: 0, scope: !12177, inlinedAt: !12181)
!12184 = !DILocation(line: 443, column: 29, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !12186, file: !2268, line: 442, column: 26)
!12186 = distinct !DILexicalBlock(scope: !12159, file: !2268, line: 442, column: 2)
!12187 = !DILocation(line: 444, column: 17, scope: !12185)
!12188 = !DILocation(line: 445, column: 51, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12185, file: !2268, line: 445, column: 7)
!12190 = !DILocation(line: 445, column: 7, scope: !12185)
!12191 = !DILocation(line: 0, scope: !12185)
!12192 = !DILocation(line: 451, column: 18, scope: !12185)
!12193 = !DILocation(line: 452, column: 3, scope: !12185)
!12194 = !DILocalVariable(name: "key", arg: 2, scope: !12195, file: !380, line: 190, type: !12160)
!12195 = distinct !DISubprogram(name: "k_spin_unlock", scope: !380, file: !380, line: 189, type: !12196, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12198)
!12196 = !DISubroutineType(types: !12197)
!12197 = !{null, !12171, !12160}
!12198 = !{!12199, !12194}
!12199 = !DILocalVariable(name: "l", arg: 1, scope: !12195, file: !380, line: 189, type: !12171)
!12200 = !DILocation(line: 0, scope: !12195, inlinedAt: !12201)
!12201 = distinct !DILocation(line: 442, column: 2, scope: !12186)
!12202 = !DILocalVariable(name: "key", arg: 1, scope: !12203, file: !4734, line: 84, type: !32)
!12203 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4734, file: !4734, line: 84, type: !4745, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12204)
!12204 = !{!12202}
!12205 = !DILocation(line: 0, scope: !12203, inlinedAt: !12206)
!12206 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !12201)
!12207 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !12206)
!12208 = !{i64 2322981}
!12209 = !DILocation(line: 454, column: 1, scope: !12152)
!12210 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12001, file: !12001, line: 389, type: !5916, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12211)
!12211 = !{!12212}
!12212 = !DILocalVariable(name: "t", arg: 1, scope: !12210, file: !12001, line: 389, type: !142)
!12213 = !DILocation(line: 0, scope: !12210)
!12214 = !DILocalVariable(name: "t", arg: 1, scope: !12215, file: !12001, line: 102, type: !1367)
!12215 = distinct !DISubprogram(name: "z_tmcvt", scope: !12001, file: !12001, line: 102, type: !12009, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12216)
!12216 = !{!12214, !12217, !12218, !12219, !12220, !12221, !12222, !12223, !12224, !12225, !12226}
!12217 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12215, file: !12001, line: 102, type: !142)
!12218 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12215, file: !12001, line: 103, type: !142)
!12219 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12215, file: !12001, line: 103, type: !134)
!12220 = !DILocalVariable(name: "result32", arg: 5, scope: !12215, file: !12001, line: 104, type: !134)
!12221 = !DILocalVariable(name: "round_up", arg: 6, scope: !12215, file: !12001, line: 104, type: !134)
!12222 = !DILocalVariable(name: "round_off", arg: 7, scope: !12215, file: !12001, line: 105, type: !134)
!12223 = !DILocalVariable(name: "mul_ratio", scope: !12215, file: !12001, line: 107, type: !134)
!12224 = !DILocalVariable(name: "div_ratio", scope: !12215, file: !12001, line: 109, type: !134)
!12225 = !DILocalVariable(name: "off", scope: !12215, file: !12001, line: 116, type: !1367)
!12226 = !DILocalVariable(name: "rdivisor", scope: !12227, file: !12001, line: 119, type: !142)
!12227 = distinct !DILexicalBlock(scope: !12228, file: !12001, line: 118, column: 18)
!12228 = distinct !DILexicalBlock(scope: !12215, file: !12001, line: 118, column: 6)
!12229 = !DILocation(line: 0, scope: !12215, inlinedAt: !12230)
!12230 = distinct !DILocation(line: 392, column: 9, scope: !12210)
!12231 = !DILocation(line: 143, column: 25, scope: !12232, inlinedAt: !12230)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !12001, line: 142, column: 17)
!12233 = distinct !DILexicalBlock(scope: !12234, file: !12001, line: 142, column: 7)
!12234 = distinct !DILexicalBlock(scope: !12235, file: !12001, line: 141, column: 24)
!12235 = distinct !DILexicalBlock(scope: !12236, file: !12001, line: 141, column: 13)
!12236 = distinct !DILexicalBlock(scope: !12215, file: !12001, line: 134, column: 6)
!12237 = !DILocation(line: 392, column: 2, scope: !12210)
!12238 = distinct !DISubprogram(name: "z_time_slice", scope: !2268, file: !2268, line: 502, type: !6553, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12239)
!12239 = !{!12240, !12241}
!12240 = !DILocalVariable(name: "ticks", arg: 1, scope: !12238, file: !2268, line: 502, type: !103)
!12241 = !DILocalVariable(name: "key", scope: !12238, file: !2268, line: 511, type: !12160)
!12242 = !DILocation(line: 0, scope: !12238)
!12243 = !DILocation(line: 0, scope: !12168, inlinedAt: !12244)
!12244 = distinct !DILocation(line: 511, column: 25, scope: !12238)
!12245 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !12246)
!12246 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !12244)
!12247 = !DILocation(line: 0, scope: !12177, inlinedAt: !12246)
!12248 = !DILocation(line: 514, column: 6, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12238, file: !2268, line: 514, column: 6)
!12250 = !DILocation(line: 514, column: 25, scope: !12249)
!12251 = !DILocation(line: 514, column: 22, scope: !12249)
!12252 = !DILocation(line: 514, column: 6, scope: !12238)
!12253 = !DILocation(line: 515, column: 3, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12249, file: !2268, line: 514, column: 35)
!12255 = !DILocation(line: 0, scope: !12195, inlinedAt: !12256)
!12256 = distinct !DILocation(line: 516, column: 3, scope: !12254)
!12257 = !DILocation(line: 0, scope: !12203, inlinedAt: !12258)
!12258 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !12256)
!12259 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !12258)
!12260 = !DILocation(line: 517, column: 3, scope: !12254)
!12261 = !DILocation(line: 519, column: 18, scope: !12238)
!12262 = !DILocation(line: 522, column: 6, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12238, file: !2268, line: 522, column: 6)
!12264 = !DILocation(line: 522, column: 27, scope: !12263)
!12265 = !DILocation(line: 522, column: 30, scope: !12263)
!12266 = !DILocation(line: 522, column: 6, scope: !12238)
!12267 = !DILocation(line: 523, column: 30, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12269, file: !2268, line: 523, column: 7)
!12269 = distinct !DILexicalBlock(scope: !12263, file: !2268, line: 522, column: 51)
!12270 = !DILocation(line: 523, column: 13, scope: !12268)
!12271 = !DILocation(line: 523, column: 7, scope: !12269)
!12272 = !DILocation(line: 530, column: 10, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12268, file: !2268, line: 523, column: 43)
!12274 = !DILocation(line: 531, column: 3, scope: !12273)
!12275 = !DILocation(line: 532, column: 30, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12268, file: !2268, line: 531, column: 10)
!12277 = !DILocation(line: 535, column: 29, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12263, file: !2268, line: 534, column: 9)
!12279 = !DILocation(line: 0, scope: !12195, inlinedAt: !12280)
!12280 = distinct !DILocation(line: 537, column: 2, scope: !12238)
!12281 = !DILocation(line: 0, scope: !12203, inlinedAt: !12282)
!12282 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !12280)
!12283 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !12282)
!12284 = !DILocation(line: 538, column: 1, scope: !12238)
!12285 = distinct !DISubprogram(name: "sliceable", scope: !2268, file: !2268, line: 468, type: !12286, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12288)
!12286 = !DISubroutineType(types: !12287)
!12287 = !{!134, !2163}
!12288 = !{!12289, !12290}
!12289 = !DILocalVariable(name: "thread", arg: 1, scope: !12285, file: !2268, line: 468, type: !2163)
!12290 = !DILocalVariable(name: "ret", scope: !12285, file: !2268, line: 470, type: !134)
!12291 = !DILocation(line: 0, scope: !12285)
!12292 = !DILocation(line: 470, column: 13, scope: !12285)
!12293 = !DILocation(line: 471, column: 3, scope: !12285)
!12294 = !DILocation(line: 471, column: 7, scope: !12285)
!12295 = !DILocation(line: 472, column: 3, scope: !12285)
!12296 = !DILocation(line: 472, column: 37, scope: !12285)
!12297 = !DILocation(line: 472, column: 24, scope: !12285)
!12298 = !DILocation(line: 472, column: 43, scope: !12285)
!12299 = !DILocation(line: 472, column: 7, scope: !12285)
!12300 = !DILocation(line: 473, column: 3, scope: !12285)
!12301 = !DILocation(line: 473, column: 7, scope: !12285)
!12302 = !DILocation(line: 473, column: 6, scope: !12285)
!12303 = !DILocation(line: 479, column: 2, scope: !12285)
!12304 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2268, file: !2268, line: 482, type: !12305, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12307)
!12305 = !DISubroutineType(types: !12306)
!12306 = !{!12160, !12160}
!12307 = !{!12308, !12309}
!12308 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12304, file: !2268, line: 482, type: !12160)
!12309 = !DILocalVariable(name: "curr", scope: !12304, file: !2268, line: 484, type: !2163)
!12310 = !DILocation(line: 0, scope: !12304)
!12311 = !DILocation(line: 484, column: 26, scope: !12304)
!12312 = !DILocation(line: 493, column: 7, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12304, file: !2268, line: 493, column: 6)
!12314 = !DILocation(line: 493, column: 6, scope: !12304)
!12315 = !DILocation(line: 494, column: 3, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12313, file: !2268, line: 493, column: 49)
!12317 = !DILocation(line: 495, column: 2, scope: !12316)
!12318 = !DILocation(line: 496, column: 2, scope: !12304)
!12319 = !DILocation(line: 499, column: 1, scope: !12304)
!12320 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11440, file: !11440, line: 106, type: !12286, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12321)
!12321 = !{!12322, !12323}
!12322 = !DILocalVariable(name: "thread", arg: 1, scope: !12320, file: !11440, line: 106, type: !2163)
!12323 = !DILocalVariable(name: "state", scope: !12320, file: !11440, line: 108, type: !131)
!12324 = !DILocation(line: 0, scope: !12320)
!12325 = !DILocation(line: 108, column: 31, scope: !12320)
!12326 = !DILocation(line: 110, column: 16, scope: !12320)
!12327 = !DILocation(line: 111, column: 41, scope: !12320)
!12328 = !DILocation(line: 110, column: 2, scope: !12320)
!12329 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2268, file: !2268, line: 393, type: !12126, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12330)
!12330 = !{!12331}
!12331 = !DILocalVariable(name: "thread", arg: 1, scope: !12329, file: !2268, line: 393, type: !2163)
!12332 = !DILocation(line: 0, scope: !12329)
!12333 = !DILocation(line: 395, column: 6, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12329, file: !2268, line: 395, column: 6)
!12335 = !DILocation(line: 395, column: 6, scope: !12329)
!12336 = !DILocalVariable(name: "thread", arg: 1, scope: !12337, file: !2268, line: 264, type: !2163)
!12337 = distinct !DISubprogram(name: "dequeue_thread", scope: !2268, file: !2268, line: 264, type: !12126, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12338)
!12338 = !{!12336}
!12339 = !DILocation(line: 0, scope: !12337, inlinedAt: !12340)
!12340 = distinct !DILocation(line: 396, column: 3, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12334, file: !2268, line: 395, column: 34)
!12342 = !DILocation(line: 266, column: 15, scope: !12337, inlinedAt: !12340)
!12343 = !DILocation(line: 266, column: 28, scope: !12337, inlinedAt: !12340)
!12344 = !DILocalVariable(name: "thread", arg: 1, scope: !12345, file: !2268, line: 232, type: !2163)
!12345 = distinct !DISubprogram(name: "runq_remove", scope: !2268, file: !2268, line: 232, type: !12126, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12346)
!12346 = !{!12344}
!12347 = !DILocation(line: 0, scope: !12345, inlinedAt: !12348)
!12348 = distinct !DILocation(line: 268, column: 3, scope: !12349, inlinedAt: !12340)
!12349 = distinct !DILexicalBlock(scope: !12350, file: !2268, line: 267, column: 35)
!12350 = distinct !DILexicalBlock(scope: !12337, file: !2268, line: 267, column: 6)
!12351 = !DILocation(line: 234, column: 2, scope: !12345, inlinedAt: !12348)
!12352 = !DILocation(line: 397, column: 2, scope: !12341)
!12353 = !DILocalVariable(name: "thread", arg: 1, scope: !12354, file: !2268, line: 250, type: !2163)
!12354 = distinct !DISubprogram(name: "queue_thread", scope: !2268, file: !2268, line: 250, type: !12126, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12355)
!12355 = !{!12353}
!12356 = !DILocation(line: 0, scope: !12354, inlinedAt: !12357)
!12357 = distinct !DILocation(line: 398, column: 2, scope: !12329)
!12358 = !DILocation(line: 252, column: 15, scope: !12354, inlinedAt: !12357)
!12359 = !DILocation(line: 252, column: 28, scope: !12354, inlinedAt: !12357)
!12360 = !DILocalVariable(name: "thread", arg: 1, scope: !12361, file: !2268, line: 227, type: !2163)
!12361 = distinct !DISubprogram(name: "runq_add", scope: !2268, file: !2268, line: 227, type: !12126, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12362)
!12362 = !{!12360}
!12363 = !DILocation(line: 0, scope: !12361, inlinedAt: !12364)
!12364 = distinct !DILocation(line: 254, column: 3, scope: !12365, inlinedAt: !12357)
!12365 = distinct !DILexicalBlock(scope: !12366, file: !2268, line: 253, column: 35)
!12366 = distinct !DILexicalBlock(scope: !12354, file: !2268, line: 253, column: 6)
!12367 = !DILocalVariable(name: "pq", arg: 1, scope: !12368, file: !2268, line: 181, type: !12371)
!12368 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2268, file: !2268, line: 181, type: !12369, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12372)
!12369 = !DISubroutineType(types: !12370)
!12370 = !{null, !12371, !2163}
!12371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!12372 = !{!12367, !12373, !12374}
!12373 = !DILocalVariable(name: "thread", arg: 2, scope: !12368, file: !2268, line: 182, type: !2163)
!12374 = !DILocalVariable(name: "t", scope: !12368, file: !2268, line: 184, type: !2163)
!12375 = !DILocation(line: 0, scope: !12368, inlinedAt: !12376)
!12376 = distinct !DILocation(line: 229, column: 2, scope: !12361, inlinedAt: !12364)
!12377 = !DILocation(line: 188, column: 2, scope: !12378, inlinedAt: !12376)
!12378 = distinct !DILexicalBlock(scope: !12368, file: !2268, line: 188, column: 2)
!12379 = !DILocation(line: 188, column: 2, scope: !12380, inlinedAt: !12376)
!12380 = distinct !DILexicalBlock(scope: !12378, file: !2268, line: 188, column: 2)
!12381 = !DILocation(line: 0, scope: !12378, inlinedAt: !12376)
!12382 = !DILocation(line: 189, column: 7, scope: !12383, inlinedAt: !12376)
!12383 = distinct !DILexicalBlock(scope: !12384, file: !2268, line: 189, column: 7)
!12384 = distinct !DILexicalBlock(scope: !12380, file: !2268, line: 188, column: 56)
!12385 = !DILocation(line: 189, column: 35, scope: !12383, inlinedAt: !12376)
!12386 = !DILocation(line: 189, column: 7, scope: !12384, inlinedAt: !12376)
!12387 = !DILocation(line: 191, column: 21, scope: !12388, inlinedAt: !12376)
!12388 = distinct !DILexicalBlock(scope: !12383, file: !2268, line: 189, column: 40)
!12389 = !DILocation(line: 190, column: 4, scope: !12388, inlinedAt: !12376)
!12390 = !DILocation(line: 192, column: 4, scope: !12388, inlinedAt: !12376)
!12391 = distinct !{!12391, !12377, !12392}
!12392 = !DILocation(line: 194, column: 2, scope: !12378, inlinedAt: !12376)
!12393 = !DILocation(line: 196, column: 37, scope: !12368, inlinedAt: !12376)
!12394 = !DILocation(line: 196, column: 2, scope: !12368, inlinedAt: !12376)
!12395 = !DILocation(line: 197, column: 1, scope: !12368, inlinedAt: !12376)
!12396 = !DILocation(line: 399, column: 25, scope: !12329)
!12397 = !DILocation(line: 399, column: 22, scope: !12329)
!12398 = !DILocation(line: 399, column: 2, scope: !12329)
!12399 = !DILocation(line: 400, column: 1, scope: !12329)
!12400 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11440, file: !11440, line: 136, type: !12286, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12401)
!12401 = !{!12402}
!12402 = !DILocalVariable(name: "thread", arg: 1, scope: !12400, file: !11440, line: 136, type: !2163)
!12403 = !DILocation(line: 0, scope: !12400)
!12404 = !DILocation(line: 138, column: 9, scope: !12400)
!12405 = !DILocation(line: 138, column: 2, scope: !12400)
!12406 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2268, file: !2268, line: 1137, type: !12369, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12407)
!12407 = !{!12408, !12409}
!12408 = !DILocalVariable(name: "pq", arg: 1, scope: !12406, file: !2268, line: 1137, type: !12371)
!12409 = !DILocalVariable(name: "thread", arg: 2, scope: !12406, file: !2268, line: 1137, type: !2163)
!12410 = !DILocation(line: 0, scope: !12406)
!12411 = !DILocation(line: 1141, column: 33, scope: !12406)
!12412 = !DILocation(line: 1141, column: 2, scope: !12406)
!12413 = !DILocation(line: 1142, column: 1, scope: !12406)
!12414 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !280, file: !280, line: 294, type: !12415, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12417)
!12415 = !DISubroutineType(types: !12416)
!12416 = !{!2264, !12371}
!12417 = !{!12418}
!12418 = !DILocalVariable(name: "list", arg: 1, scope: !12414, file: !280, line: 294, type: !12371)
!12419 = !DILocation(line: 0, scope: !12414)
!12420 = !DILocation(line: 296, column: 9, scope: !12414)
!12421 = !DILocation(line: 296, column: 49, scope: !12414)
!12422 = !DILocation(line: 296, column: 2, scope: !12414)
!12423 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !280, file: !280, line: 443, type: !12424, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12426)
!12424 = !DISubroutineType(types: !12425)
!12425 = !{null, !2264, !2264}
!12426 = !{!12427, !12428, !12429}
!12427 = !DILocalVariable(name: "successor", arg: 1, scope: !12423, file: !280, line: 443, type: !2264)
!12428 = !DILocalVariable(name: "node", arg: 2, scope: !12423, file: !280, line: 443, type: !2264)
!12429 = !DILocalVariable(name: "prev", scope: !12423, file: !280, line: 445, type: !12430)
!12430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2264)
!12431 = !DILocation(line: 0, scope: !12423)
!12432 = !DILocation(line: 445, column: 39, scope: !12423)
!12433 = !DILocation(line: 447, column: 8, scope: !12423)
!12434 = !DILocation(line: 447, column: 13, scope: !12423)
!12435 = !DILocation(line: 448, column: 8, scope: !12423)
!12436 = !DILocation(line: 448, column: 13, scope: !12423)
!12437 = !DILocation(line: 449, column: 8, scope: !12423)
!12438 = !DILocation(line: 449, column: 13, scope: !12423)
!12439 = !DILocation(line: 450, column: 18, scope: !12423)
!12440 = !DILocation(line: 451, column: 1, scope: !12423)
!12441 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !280, file: !280, line: 341, type: !12442, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12444)
!12442 = !DISubroutineType(types: !12443)
!12443 = !{!2264, !12371, !2264}
!12444 = !{!12445, !12446}
!12445 = !DILocalVariable(name: "list", arg: 1, scope: !12441, file: !280, line: 341, type: !12371)
!12446 = !DILocalVariable(name: "node", arg: 2, scope: !12441, file: !280, line: 342, type: !2264)
!12447 = !DILocation(line: 0, scope: !12441)
!12448 = !DILocation(line: 344, column: 15, scope: !12441)
!12449 = !DILocation(line: 344, column: 9, scope: !12441)
!12450 = !DILocation(line: 344, column: 26, scope: !12441)
!12451 = !DILocation(line: 344, column: 2, scope: !12441)
!12452 = distinct !DISubprogram(name: "sys_dlist_append", scope: !280, file: !280, line: 404, type: !12453, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12455)
!12453 = !DISubroutineType(types: !12454)
!12454 = !{null, !12371, !2264}
!12455 = !{!12456, !12457, !12458}
!12456 = !DILocalVariable(name: "list", arg: 1, scope: !12452, file: !280, line: 404, type: !12371)
!12457 = !DILocalVariable(name: "node", arg: 2, scope: !12452, file: !280, line: 404, type: !2264)
!12458 = !DILocalVariable(name: "tail", scope: !12452, file: !280, line: 406, type: !12430)
!12459 = !DILocation(line: 0, scope: !12452)
!12460 = !DILocation(line: 406, column: 34, scope: !12452)
!12461 = !DILocation(line: 408, column: 8, scope: !12452)
!12462 = !DILocation(line: 408, column: 13, scope: !12452)
!12463 = !DILocation(line: 409, column: 8, scope: !12452)
!12464 = !DILocation(line: 409, column: 13, scope: !12452)
!12465 = !DILocation(line: 411, column: 8, scope: !12452)
!12466 = !DILocation(line: 411, column: 13, scope: !12452)
!12467 = !DILocation(line: 412, column: 13, scope: !12452)
!12468 = !DILocation(line: 413, column: 1, scope: !12452)
!12469 = distinct !DISubprogram(name: "update_cache", scope: !2268, file: !2268, line: 559, type: !6553, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12470)
!12470 = !{!12471, !12472}
!12471 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12469, file: !2268, line: 559, type: !103)
!12472 = !DILocalVariable(name: "thread", scope: !12469, file: !2268, line: 562, type: !2163)
!12473 = !DILocation(line: 0, scope: !12469)
!12474 = !DILocation(line: 239, column: 9, scope: !12475, inlinedAt: !12478)
!12475 = distinct !DISubprogram(name: "runq_best", scope: !2268, file: !2268, line: 237, type: !12476, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !381)
!12476 = !DISubroutineType(types: !12477)
!12477 = !{!2163}
!12478 = distinct !DILocation(line: 314, column: 28, scope: !12479, inlinedAt: !12482)
!12479 = distinct !DISubprogram(name: "next_up", scope: !2268, file: !2268, line: 312, type: !12476, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12480)
!12480 = !{!12481}
!12481 = !DILocalVariable(name: "thread", scope: !12479, file: !2268, line: 314, type: !2163)
!12482 = distinct !DILocation(line: 562, column: 28, scope: !12469)
!12483 = !DILocation(line: 0, scope: !12479, inlinedAt: !12482)
!12484 = !DILocation(line: 340, column: 17, scope: !12479, inlinedAt: !12482)
!12485 = !DILocation(line: 340, column: 9, scope: !12479, inlinedAt: !12482)
!12486 = !DILocalVariable(name: "thread", arg: 1, scope: !12487, file: !2268, line: 127, type: !2163)
!12487 = distinct !DISubprogram(name: "should_preempt", scope: !2268, file: !2268, line: 127, type: !12488, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12490)
!12488 = !DISubroutineType(types: !12489)
!12489 = !{!134, !2163, !103}
!12490 = !{!12486, !12491}
!12491 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12487, file: !2268, line: 128, type: !103)
!12492 = !DILocation(line: 0, scope: !12487, inlinedAt: !12493)
!12493 = distinct !DILocation(line: 564, column: 6, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12469, file: !2268, line: 564, column: 6)
!12495 = !DILocation(line: 133, column: 17, scope: !12496, inlinedAt: !12493)
!12496 = distinct !DILexicalBlock(scope: !12487, file: !2268, line: 133, column: 6)
!12497 = !DILocation(line: 0, scope: !12494)
!12498 = !DILocation(line: 133, column: 6, scope: !12487, inlinedAt: !12493)
!12499 = !DILocation(line: 140, column: 6, scope: !12500, inlinedAt: !12493)
!12500 = distinct !DILexicalBlock(scope: !12487, file: !2268, line: 140, column: 6)
!12501 = !DILocation(line: 140, column: 6, scope: !12487, inlinedAt: !12493)
!12502 = !DILocation(line: 150, column: 9, scope: !12503, inlinedAt: !12493)
!12503 = distinct !DILexicalBlock(scope: !12487, file: !2268, line: 149, column: 6)
!12504 = !DILocation(line: 149, column: 6, scope: !12487, inlinedAt: !12493)
!12505 = !DILocation(line: 157, column: 6, scope: !12506, inlinedAt: !12493)
!12506 = distinct !DILexicalBlock(scope: !12487, file: !2268, line: 157, column: 6)
!12507 = !DILocation(line: 564, column: 6, scope: !12469)
!12508 = !DILocation(line: 566, column: 14, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12510, file: !2268, line: 566, column: 7)
!12510 = distinct !DILexicalBlock(scope: !12494, file: !2268, line: 564, column: 42)
!12511 = !DILocation(line: 566, column: 7, scope: !12510)
!12512 = !DILocation(line: 567, column: 4, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12509, file: !2268, line: 566, column: 27)
!12514 = !DILocation(line: 568, column: 3, scope: !12513)
!12515 = !DILocation(line: 585, column: 1, scope: !12469)
!12516 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2268, file: !2268, line: 1144, type: !12517, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12519)
!12517 = !DISubroutineType(types: !12518)
!12518 = !{!2163, !12371}
!12519 = !{!12520, !12521, !12522}
!12520 = !DILocalVariable(name: "pq", arg: 1, scope: !12516, file: !2268, line: 1144, type: !12371)
!12521 = !DILocalVariable(name: "thread", scope: !12516, file: !2268, line: 1146, type: !2163)
!12522 = !DILocalVariable(name: "n", scope: !12516, file: !2268, line: 1147, type: !2264)
!12523 = !DILocation(line: 0, scope: !12516)
!12524 = !DILocation(line: 1147, column: 19, scope: !12516)
!12525 = !DILocation(line: 1152, column: 2, scope: !12516)
!12526 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11440, file: !11440, line: 115, type: !12286, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12527)
!12527 = !{!12528}
!12528 = !DILocalVariable(name: "thread", arg: 1, scope: !12526, file: !11440, line: 115, type: !2163)
!12529 = !DILocation(line: 0, scope: !12526)
!12530 = !DILocation(line: 117, column: 46, scope: !12526)
!12531 = !DILocation(line: 117, column: 10, scope: !12526)
!12532 = !DILocation(line: 117, column: 9, scope: !12526)
!12533 = !DILocation(line: 117, column: 2, scope: !12526)
!12534 = distinct !DISubprogram(name: "is_preempt", scope: !2268, file: !2268, line: 62, type: !12144, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12535)
!12535 = !{!12536}
!12536 = !DILocalVariable(name: "thread", arg: 1, scope: !12534, file: !2268, line: 62, type: !2163)
!12537 = !DILocation(line: 0, scope: !12534)
!12538 = !DILocation(line: 65, column: 22, scope: !12534)
!12539 = !DILocation(line: 65, column: 30, scope: !12534)
!12540 = !DILocation(line: 65, column: 2, scope: !12534)
!12541 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11834, file: !11834, line: 35, type: !12542, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12546)
!12542 = !DISubroutineType(types: !12543)
!12543 = !{!134, !12544}
!12544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12545, size: 32)
!12545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2214)
!12546 = !{!12547}
!12547 = !DILocalVariable(name: "to", arg: 1, scope: !12541, file: !11834, line: 35, type: !12544)
!12548 = !DILocation(line: 0, scope: !12541)
!12549 = !DILocation(line: 37, column: 35, scope: !12541)
!12550 = !DILocation(line: 37, column: 10, scope: !12541)
!12551 = !DILocation(line: 37, column: 9, scope: !12541)
!12552 = !DILocation(line: 37, column: 2, scope: !12541)
!12553 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !280, file: !280, line: 225, type: !12554, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12558)
!12554 = !DISubroutineType(types: !12555)
!12555 = !{!134, !12556}
!12556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12557, size: 32)
!12557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2173)
!12558 = !{!12559}
!12559 = !DILocalVariable(name: "node", arg: 1, scope: !12553, file: !280, line: 225, type: !12556)
!12560 = !DILocation(line: 0, scope: !12553)
!12561 = !DILocation(line: 227, column: 15, scope: !12553)
!12562 = !DILocation(line: 227, column: 20, scope: !12553)
!12563 = !DILocation(line: 227, column: 2, scope: !12553)
!12564 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !280, file: !280, line: 325, type: !12442, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12565)
!12565 = !{!12566, !12567}
!12566 = !DILocalVariable(name: "list", arg: 1, scope: !12564, file: !280, line: 325, type: !12371)
!12567 = !DILocalVariable(name: "node", arg: 2, scope: !12564, file: !280, line: 326, type: !2264)
!12568 = !DILocation(line: 0, scope: !12564)
!12569 = !DILocation(line: 328, column: 24, scope: !12564)
!12570 = !DILocation(line: 328, column: 15, scope: !12564)
!12571 = !DILocation(line: 328, column: 9, scope: !12564)
!12572 = !DILocation(line: 328, column: 45, scope: !12564)
!12573 = !DILocation(line: 328, column: 2, scope: !12564)
!12574 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !280, file: !280, line: 266, type: !12575, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12577)
!12575 = !DISubroutineType(types: !12576)
!12576 = !{!134, !12371}
!12577 = !{!12578}
!12578 = !DILocalVariable(name: "list", arg: 1, scope: !12574, file: !280, line: 266, type: !12371)
!12579 = !DILocation(line: 0, scope: !12574)
!12580 = !DILocation(line: 268, column: 15, scope: !12574)
!12581 = !DILocation(line: 268, column: 20, scope: !12574)
!12582 = !DILocation(line: 268, column: 2, scope: !12574)
!12583 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !280, file: !280, line: 496, type: !12584, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12586)
!12584 = !DISubroutineType(types: !12585)
!12585 = !{null, !2264}
!12586 = !{!12587, !12588, !12589}
!12587 = !DILocalVariable(name: "node", arg: 1, scope: !12583, file: !280, line: 496, type: !2264)
!12588 = !DILocalVariable(name: "prev", scope: !12583, file: !280, line: 498, type: !12430)
!12589 = !DILocalVariable(name: "next", scope: !12583, file: !280, line: 499, type: !12430)
!12590 = !DILocation(line: 0, scope: !12583)
!12591 = !DILocation(line: 498, column: 34, scope: !12583)
!12592 = !DILocation(line: 499, column: 34, scope: !12583)
!12593 = !DILocation(line: 501, column: 8, scope: !12583)
!12594 = !DILocation(line: 501, column: 13, scope: !12583)
!12595 = !DILocation(line: 502, column: 8, scope: !12583)
!12596 = !DILocation(line: 502, column: 13, scope: !12583)
!12597 = !DILocation(line: 503, column: 2, scope: !12583)
!12598 = !DILocation(line: 504, column: 1, scope: !12583)
!12599 = distinct !DISubprogram(name: "sys_dnode_init", scope: !280, file: !280, line: 211, type: !12584, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12600)
!12600 = !{!12601}
!12601 = !DILocalVariable(name: "node", arg: 1, scope: !12599, file: !280, line: 211, type: !2264)
!12602 = !DILocation(line: 0, scope: !12599)
!12603 = !DILocation(line: 213, column: 8, scope: !12599)
!12604 = !DILocation(line: 213, column: 13, scope: !12599)
!12605 = !DILocation(line: 214, column: 8, scope: !12599)
!12606 = !DILocation(line: 214, column: 13, scope: !12599)
!12607 = !DILocation(line: 215, column: 1, scope: !12599)
!12608 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11440, file: !11440, line: 131, type: !12609, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12611)
!12609 = !DISubroutineType(types: !12610)
!12610 = !{!134, !2163, !142}
!12611 = !{!12612, !12613}
!12612 = !DILocalVariable(name: "thread", arg: 1, scope: !12608, file: !11440, line: 131, type: !2163)
!12613 = !DILocalVariable(name: "state", arg: 2, scope: !12608, file: !11440, line: 131, type: !142)
!12614 = !DILocation(line: 0, scope: !12608)
!12615 = !DILocation(line: 133, column: 23, scope: !12608)
!12616 = !DILocation(line: 133, column: 45, scope: !12608)
!12617 = !DILocation(line: 133, column: 2, scope: !12608)
!12618 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11440, file: !11440, line: 211, type: !12619, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12621)
!12619 = !DISubroutineType(types: !12620)
!12620 = !{!134, !103, !103}
!12621 = !{!12622, !12623}
!12622 = !DILocalVariable(name: "prio", arg: 1, scope: !12618, file: !11440, line: 211, type: !103)
!12623 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12618, file: !11440, line: 211, type: !103)
!12624 = !DILocation(line: 0, scope: !12618)
!12625 = !DILocation(line: 213, column: 9, scope: !12618)
!12626 = !DILocation(line: 213, column: 2, scope: !12618)
!12627 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11440, file: !11440, line: 83, type: !12286, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12628)
!12628 = !{!12629}
!12629 = !DILocalVariable(name: "thread", arg: 1, scope: !12627, file: !11440, line: 83, type: !2163)
!12630 = !DILocation(line: 0, scope: !12627)
!12631 = !DILocation(line: 89, column: 16, scope: !12627)
!12632 = !DILocation(line: 89, column: 2, scope: !12627)
!12633 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11440, file: !11440, line: 206, type: !12619, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12634)
!12634 = !{!12635, !12636}
!12635 = !DILocalVariable(name: "prio1", arg: 1, scope: !12633, file: !11440, line: 206, type: !103)
!12636 = !DILocalVariable(name: "prio2", arg: 2, scope: !12633, file: !11440, line: 206, type: !103)
!12637 = !DILocation(line: 0, scope: !12633)
!12638 = !DILocation(line: 208, column: 15, scope: !12633)
!12639 = !DILocation(line: 208, column: 2, scope: !12633)
!12640 = distinct !DISubprogram(name: "z_ready_thread", scope: !2268, file: !2268, line: 635, type: !12126, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12641)
!12641 = !{!12642, !12643, !12645}
!12642 = !DILocalVariable(name: "thread", arg: 1, scope: !12640, file: !2268, line: 635, type: !2163)
!12643 = !DILocalVariable(name: "__i", scope: !12644, file: !2268, line: 637, type: !12160)
!12644 = distinct !DILexicalBlock(scope: !12640, file: !2268, line: 637, column: 2)
!12645 = !DILocalVariable(name: "__key", scope: !12644, file: !2268, line: 637, type: !12160)
!12646 = !DILocation(line: 0, scope: !12640)
!12647 = !DILocation(line: 0, scope: !12644)
!12648 = !DILocation(line: 0, scope: !12168, inlinedAt: !12649)
!12649 = distinct !DILocation(line: 637, column: 2, scope: !12644)
!12650 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !12651)
!12651 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !12649)
!12652 = !DILocation(line: 0, scope: !12177, inlinedAt: !12651)
!12653 = !DILocation(line: 639, column: 4, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12655, file: !2268, line: 638, column: 41)
!12655 = distinct !DILexicalBlock(scope: !12656, file: !2268, line: 638, column: 7)
!12656 = distinct !DILexicalBlock(scope: !12657, file: !2268, line: 637, column: 26)
!12657 = distinct !DILexicalBlock(scope: !12644, file: !2268, line: 637, column: 2)
!12658 = !DILocation(line: 0, scope: !12195, inlinedAt: !12659)
!12659 = distinct !DILocation(line: 637, column: 2, scope: !12657)
!12660 = !DILocation(line: 0, scope: !12203, inlinedAt: !12661)
!12661 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !12659)
!12662 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !12661)
!12663 = !DILocation(line: 642, column: 1, scope: !12640)
!12664 = distinct !DISubprogram(name: "ready_thread", scope: !2268, file: !2268, line: 617, type: !12126, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12665)
!12665 = !{!12666}
!12666 = !DILocalVariable(name: "thread", arg: 1, scope: !12664, file: !2268, line: 617, type: !2163)
!12667 = !DILocation(line: 0, scope: !12664)
!12668 = !DILocation(line: 626, column: 7, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12664, file: !2268, line: 626, column: 6)
!12670 = !DILocation(line: 626, column: 34, scope: !12669)
!12671 = !DILocation(line: 626, column: 37, scope: !12669)
!12672 = !DILocation(line: 626, column: 6, scope: !12664)
!12673 = !DILocation(line: 0, scope: !12354, inlinedAt: !12674)
!12674 = distinct !DILocation(line: 629, column: 3, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12669, file: !2268, line: 626, column: 64)
!12676 = !DILocation(line: 252, column: 15, scope: !12354, inlinedAt: !12674)
!12677 = !DILocation(line: 252, column: 28, scope: !12354, inlinedAt: !12674)
!12678 = !DILocation(line: 0, scope: !12361, inlinedAt: !12679)
!12679 = distinct !DILocation(line: 254, column: 3, scope: !12365, inlinedAt: !12674)
!12680 = !DILocation(line: 0, scope: !12368, inlinedAt: !12681)
!12681 = distinct !DILocation(line: 229, column: 2, scope: !12361, inlinedAt: !12679)
!12682 = !DILocation(line: 188, column: 2, scope: !12378, inlinedAt: !12681)
!12683 = !DILocation(line: 188, column: 2, scope: !12380, inlinedAt: !12681)
!12684 = !DILocation(line: 0, scope: !12378, inlinedAt: !12681)
!12685 = !DILocation(line: 189, column: 7, scope: !12383, inlinedAt: !12681)
!12686 = !DILocation(line: 189, column: 35, scope: !12383, inlinedAt: !12681)
!12687 = !DILocation(line: 189, column: 7, scope: !12384, inlinedAt: !12681)
!12688 = !DILocation(line: 191, column: 21, scope: !12388, inlinedAt: !12681)
!12689 = !DILocation(line: 190, column: 4, scope: !12388, inlinedAt: !12681)
!12690 = !DILocation(line: 192, column: 4, scope: !12388, inlinedAt: !12681)
!12691 = distinct !{!12691, !12682, !12692}
!12692 = !DILocation(line: 194, column: 2, scope: !12378, inlinedAt: !12681)
!12693 = !DILocation(line: 196, column: 37, scope: !12368, inlinedAt: !12681)
!12694 = !DILocation(line: 196, column: 2, scope: !12368, inlinedAt: !12681)
!12695 = !DILocation(line: 197, column: 1, scope: !12368, inlinedAt: !12681)
!12696 = !DILocation(line: 630, column: 3, scope: !12675)
!12697 = !DILocation(line: 632, column: 2, scope: !12675)
!12698 = !DILocation(line: 633, column: 1, scope: !12664)
!12699 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11440, file: !11440, line: 120, type: !12286, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12700)
!12700 = !{!12701}
!12701 = !DILocalVariable(name: "thread", arg: 1, scope: !12699, file: !11440, line: 120, type: !2163)
!12702 = !DILocation(line: 0, scope: !12699)
!12703 = !DILocation(line: 122, column: 12, scope: !12699)
!12704 = !DILocation(line: 122, column: 62, scope: !12699)
!12705 = !DILocation(line: 123, column: 4, scope: !12699)
!12706 = !DILocation(line: 122, column: 2, scope: !12699)
!12707 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2268, file: !2268, line: 644, type: !12126, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12708)
!12708 = !{!12709, !12710, !12712}
!12709 = !DILocalVariable(name: "thread", arg: 1, scope: !12707, file: !2268, line: 644, type: !2163)
!12710 = !DILocalVariable(name: "__i", scope: !12711, file: !2268, line: 646, type: !12160)
!12711 = distinct !DILexicalBlock(scope: !12707, file: !2268, line: 646, column: 2)
!12712 = !DILocalVariable(name: "__key", scope: !12711, file: !2268, line: 646, type: !12160)
!12713 = !DILocation(line: 0, scope: !12707)
!12714 = !DILocation(line: 0, scope: !12711)
!12715 = !DILocation(line: 0, scope: !12168, inlinedAt: !12716)
!12716 = distinct !DILocation(line: 646, column: 2, scope: !12711)
!12717 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !12718)
!12718 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !12716)
!12719 = !DILocation(line: 0, scope: !12177, inlinedAt: !12718)
!12720 = !DILocation(line: 647, column: 3, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12722, file: !2268, line: 646, column: 26)
!12722 = distinct !DILexicalBlock(scope: !12711, file: !2268, line: 646, column: 2)
!12723 = !DILocation(line: 0, scope: !12195, inlinedAt: !12724)
!12724 = distinct !DILocation(line: 646, column: 2, scope: !12722)
!12725 = !DILocation(line: 0, scope: !12203, inlinedAt: !12726)
!12726 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !12724)
!12727 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !12726)
!12728 = !DILocation(line: 649, column: 1, scope: !12707)
!12729 = distinct !DISubprogram(name: "z_sched_start", scope: !2268, file: !2268, line: 651, type: !12126, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12730)
!12730 = !{!12731, !12732}
!12731 = !DILocalVariable(name: "thread", arg: 1, scope: !12729, file: !2268, line: 651, type: !2163)
!12732 = !DILocalVariable(name: "key", scope: !12729, file: !2268, line: 653, type: !12160)
!12733 = !DILocation(line: 0, scope: !12729)
!12734 = !DILocation(line: 0, scope: !12168, inlinedAt: !12735)
!12735 = distinct !DILocation(line: 653, column: 25, scope: !12729)
!12736 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !12737)
!12737 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !12735)
!12738 = !DILocation(line: 0, scope: !12177, inlinedAt: !12737)
!12739 = !DILocation(line: 655, column: 6, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12729, file: !2268, line: 655, column: 6)
!12741 = !DILocation(line: 655, column: 6, scope: !12729)
!12742 = !DILocation(line: 0, scope: !12195, inlinedAt: !12743)
!12743 = distinct !DILocation(line: 656, column: 3, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12740, file: !2268, line: 655, column: 36)
!12745 = !DILocation(line: 0, scope: !12203, inlinedAt: !12746)
!12746 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !12743)
!12747 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !12746)
!12748 = !DILocation(line: 657, column: 3, scope: !12744)
!12749 = !DILocation(line: 660, column: 2, scope: !12729)
!12750 = !DILocation(line: 661, column: 2, scope: !12729)
!12751 = !DILocation(line: 662, column: 2, scope: !12729)
!12752 = !DILocation(line: 663, column: 1, scope: !12729)
!12753 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11440, file: !11440, line: 126, type: !12286, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12754)
!12754 = !{!12755}
!12755 = !DILocalVariable(name: "thread", arg: 1, scope: !12753, file: !11440, line: 126, type: !2163)
!12756 = !DILocation(line: 0, scope: !12753)
!12757 = !DILocation(line: 128, column: 23, scope: !12753)
!12758 = !DILocation(line: 128, column: 36, scope: !12753)
!12759 = !DILocation(line: 128, column: 56, scope: !12753)
!12760 = !DILocation(line: 128, column: 2, scope: !12753)
!12761 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11440, file: !11440, line: 155, type: !12126, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12762)
!12762 = !{!12763}
!12763 = !DILocalVariable(name: "thread", arg: 1, scope: !12761, file: !11440, line: 155, type: !2163)
!12764 = !DILocation(line: 0, scope: !12761)
!12765 = !DILocation(line: 157, column: 15, scope: !12761)
!12766 = !DILocation(line: 157, column: 28, scope: !12761)
!12767 = !DILocation(line: 158, column: 1, scope: !12761)
!12768 = distinct !DISubprogram(name: "z_reschedule", scope: !2268, file: !2268, line: 967, type: !12196, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12769)
!12769 = !{!12770, !12771}
!12770 = !DILocalVariable(name: "lock", arg: 1, scope: !12768, file: !2268, line: 967, type: !12171)
!12771 = !DILocalVariable(name: "key", arg: 2, scope: !12768, file: !2268, line: 967, type: !12160)
!12772 = !DILocation(line: 0, scope: !12768)
!12773 = !DILocation(line: 969, column: 6, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12768, file: !2268, line: 969, column: 6)
!12775 = !DILocation(line: 969, column: 23, scope: !12774)
!12776 = !DILocation(line: 969, column: 26, scope: !12774)
!12777 = !DILocation(line: 969, column: 6, scope: !12768)
!12778 = !DILocalVariable(name: "key", arg: 2, scope: !12779, file: !11544, line: 193, type: !12160)
!12779 = distinct !DISubprogram(name: "z_swap", scope: !11544, file: !11544, line: 193, type: !12780, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12782)
!12780 = !DISubroutineType(types: !12781)
!12781 = !{!103, !12171, !12160}
!12782 = !{!12783, !12778}
!12783 = !DILocalVariable(name: "lock", arg: 1, scope: !12779, file: !11544, line: 193, type: !12171)
!12784 = !DILocation(line: 0, scope: !12779, inlinedAt: !12785)
!12785 = distinct !DILocation(line: 970, column: 3, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12774, file: !2268, line: 969, column: 39)
!12787 = !DILocation(line: 196, column: 9, scope: !12779, inlinedAt: !12785)
!12788 = !DILocation(line: 971, column: 2, scope: !12786)
!12789 = !DILocation(line: 0, scope: !12195, inlinedAt: !12790)
!12790 = distinct !DILocation(line: 972, column: 3, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12774, file: !2268, line: 971, column: 9)
!12792 = !DILocation(line: 0, scope: !12203, inlinedAt: !12793)
!12793 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !12790)
!12794 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !12793)
!12795 = !DILocation(line: 975, column: 1, scope: !12768)
!12796 = distinct !DISubprogram(name: "resched", scope: !2268, file: !2268, line: 940, type: !12797, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12799)
!12797 = !DISubroutineType(types: !12798)
!12798 = !{!134, !142}
!12799 = !{!12800}
!12800 = !DILocalVariable(name: "key", arg: 1, scope: !12796, file: !2268, line: 940, type: !142)
!12801 = !DILocation(line: 0, scope: !12796)
!12802 = !DILocalVariable(name: "key", arg: 1, scope: !12803, file: !4734, line: 112, type: !32)
!12803 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4734, file: !4734, line: 112, type: !12804, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12806)
!12804 = !DISubroutineType(types: !12805)
!12805 = !{!134, !32}
!12806 = !{!12802}
!12807 = !DILocation(line: 0, scope: !12803, inlinedAt: !12808)
!12808 = distinct !DILocation(line: 946, column: 9, scope: !12796)
!12809 = !DILocation(line: 115, column: 13, scope: !12803, inlinedAt: !12808)
!12810 = !DILocation(line: 946, column: 32, scope: !12796)
!12811 = !DILocation(line: 1031, column: 3, scope: !12812, inlinedAt: !12815)
!12812 = distinct !DISubprogram(name: "__get_IPSR", scope: !4908, file: !4908, line: 1027, type: !4989, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12813)
!12813 = !{!12814}
!12814 = !DILocalVariable(name: "result", scope: !12812, file: !4908, line: 1029, type: !142)
!12815 = distinct !DILocation(line: 48, column: 10, scope: !12816, inlinedAt: !12817)
!12816 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5702, file: !5702, line: 46, type: !5703, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !381)
!12817 = distinct !DILocation(line: 946, column: 36, scope: !12796)
!12818 = !{i64 3768598}
!12819 = !DILocation(line: 0, scope: !12812, inlinedAt: !12815)
!12820 = !DILocation(line: 48, column: 9, scope: !12816, inlinedAt: !12817)
!12821 = !DILocation(line: 946, column: 2, scope: !12796)
!12822 = distinct !DISubprogram(name: "need_swap", scope: !2268, file: !2268, line: 953, type: !5703, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12823)
!12823 = !{!12824}
!12824 = !DILocalVariable(name: "new_thread", scope: !12822, file: !2268, line: 959, type: !2163)
!12825 = !DILocation(line: 962, column: 31, scope: !12822)
!12826 = !DILocation(line: 0, scope: !12822)
!12827 = !DILocation(line: 963, column: 23, scope: !12822)
!12828 = !DILocation(line: 963, column: 20, scope: !12822)
!12829 = !DILocation(line: 963, column: 2, scope: !12822)
!12830 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11544, file: !11544, line: 181, type: !4918, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12831)
!12831 = !{!12832, !12833}
!12832 = !DILocalVariable(name: "key", arg: 1, scope: !12830, file: !11544, line: 181, type: !32)
!12833 = !DILocalVariable(name: "ret", scope: !12830, file: !11544, line: 183, type: !103)
!12834 = !DILocation(line: 0, scope: !12830)
!12835 = !DILocation(line: 185, column: 8, scope: !12830)
!12836 = !DILocation(line: 186, column: 2, scope: !12830)
!12837 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2268, file: !2268, line: 665, type: !12126, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12838)
!12838 = !{!12839, !12840, !12842}
!12839 = !DILocalVariable(name: "thread", arg: 1, scope: !12837, file: !2268, line: 665, type: !2163)
!12840 = !DILocalVariable(name: "__i", scope: !12841, file: !2268, line: 671, type: !12160)
!12841 = distinct !DILexicalBlock(scope: !12837, file: !2268, line: 671, column: 2)
!12842 = !DILocalVariable(name: "__key", scope: !12841, file: !2268, line: 671, type: !12160)
!12843 = !DILocation(line: 0, scope: !12837)
!12844 = !DILocation(line: 669, column: 8, scope: !12837)
!12845 = !DILocation(line: 0, scope: !12841)
!12846 = !DILocation(line: 0, scope: !12168, inlinedAt: !12847)
!12847 = distinct !DILocation(line: 671, column: 2, scope: !12841)
!12848 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !12849)
!12849 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !12847)
!12850 = !DILocation(line: 0, scope: !12177, inlinedAt: !12849)
!12851 = !DILocation(line: 672, column: 7, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12853, file: !2268, line: 672, column: 7)
!12853 = distinct !DILexicalBlock(scope: !12854, file: !2268, line: 671, column: 26)
!12854 = distinct !DILexicalBlock(scope: !12841, file: !2268, line: 671, column: 2)
!12855 = !DILocation(line: 672, column: 7, scope: !12853)
!12856 = !DILocation(line: 0, scope: !12337, inlinedAt: !12857)
!12857 = distinct !DILocation(line: 673, column: 4, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12852, file: !2268, line: 672, column: 35)
!12859 = !DILocation(line: 266, column: 15, scope: !12337, inlinedAt: !12857)
!12860 = !DILocation(line: 266, column: 28, scope: !12337, inlinedAt: !12857)
!12861 = !DILocation(line: 0, scope: !12345, inlinedAt: !12862)
!12862 = distinct !DILocation(line: 268, column: 3, scope: !12349, inlinedAt: !12857)
!12863 = !DILocation(line: 234, column: 2, scope: !12345, inlinedAt: !12862)
!12864 = !DILocation(line: 674, column: 3, scope: !12858)
!12865 = !DILocation(line: 675, column: 3, scope: !12853)
!12866 = !DILocation(line: 676, column: 26, scope: !12853)
!12867 = !DILocation(line: 676, column: 23, scope: !12853)
!12868 = !DILocation(line: 676, column: 3, scope: !12853)
!12869 = !DILocation(line: 0, scope: !12195, inlinedAt: !12870)
!12870 = distinct !DILocation(line: 671, column: 2, scope: !12854)
!12871 = !DILocation(line: 0, scope: !12203, inlinedAt: !12872)
!12872 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !12870)
!12873 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !12872)
!12874 = !DILocation(line: 679, column: 16, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12837, file: !2268, line: 679, column: 6)
!12876 = !DILocation(line: 679, column: 13, scope: !12875)
!12877 = !DILocation(line: 679, column: 6, scope: !12837)
!12878 = !DILocation(line: 680, column: 3, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12875, file: !2268, line: 679, column: 26)
!12880 = !DILocation(line: 681, column: 2, scope: !12879)
!12881 = !DILocation(line: 684, column: 1, scope: !12837)
!12882 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11834, file: !11834, line: 52, type: !12144, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12883)
!12883 = !{!12884}
!12884 = !DILocalVariable(name: "thread", arg: 1, scope: !12882, file: !11834, line: 52, type: !2163)
!12885 = !DILocation(line: 0, scope: !12882)
!12886 = !DILocation(line: 54, column: 39, scope: !12882)
!12887 = !DILocation(line: 54, column: 9, scope: !12882)
!12888 = !DILocation(line: 54, column: 2, scope: !12882)
!12889 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11440, file: !11440, line: 141, type: !12126, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12890)
!12890 = !{!12891}
!12891 = !DILocalVariable(name: "thread", arg: 1, scope: !12889, file: !11440, line: 141, type: !2163)
!12892 = !DILocation(line: 0, scope: !12889)
!12893 = !DILocation(line: 143, column: 15, scope: !12889)
!12894 = !DILocation(line: 143, column: 28, scope: !12889)
!12895 = !DILocation(line: 146, column: 1, scope: !12889)
!12896 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11440, file: !11440, line: 73, type: !2876, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !381)
!12897 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !12898)
!12898 = distinct !DILocation(line: 75, column: 30, scope: !12896)
!12899 = !DILocation(line: 0, scope: !12177, inlinedAt: !12898)
!12900 = !DILocation(line: 75, column: 9, scope: !12896)
!12901 = !DILocation(line: 76, column: 1, scope: !12896)
!12902 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2268, file: !2268, line: 977, type: !4999, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12903)
!12903 = !{!12904}
!12904 = !DILocalVariable(name: "key", arg: 1, scope: !12902, file: !2268, line: 977, type: !142)
!12905 = !DILocation(line: 0, scope: !12902)
!12906 = !DILocation(line: 979, column: 6, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12902, file: !2268, line: 979, column: 6)
!12908 = !DILocation(line: 979, column: 6, scope: !12902)
!12909 = !DILocation(line: 980, column: 3, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !12907, file: !2268, line: 979, column: 20)
!12911 = !DILocation(line: 981, column: 2, scope: !12910)
!12912 = !DILocation(line: 0, scope: !12203, inlinedAt: !12913)
!12913 = distinct !DILocation(line: 982, column: 3, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12907, file: !2268, line: 981, column: 9)
!12915 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !12913)
!12916 = !DILocation(line: 985, column: 1, scope: !12902)
!12917 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2268, file: !2268, line: 695, type: !12126, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12918)
!12918 = !{!12919, !12920}
!12919 = !DILocalVariable(name: "thread", arg: 1, scope: !12917, file: !2268, line: 695, type: !2163)
!12920 = !DILocalVariable(name: "key", scope: !12917, file: !2268, line: 699, type: !12160)
!12921 = !DILocation(line: 0, scope: !12917)
!12922 = !DILocation(line: 0, scope: !12168, inlinedAt: !12923)
!12923 = distinct !DILocation(line: 699, column: 25, scope: !12917)
!12924 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !12925)
!12925 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !12923)
!12926 = !DILocation(line: 0, scope: !12177, inlinedAt: !12925)
!12927 = !DILocation(line: 702, column: 7, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12917, file: !2268, line: 702, column: 6)
!12929 = !DILocation(line: 702, column: 6, scope: !12917)
!12930 = !DILocation(line: 0, scope: !12195, inlinedAt: !12931)
!12931 = distinct !DILocation(line: 703, column: 3, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12928, file: !2268, line: 702, column: 38)
!12933 = !DILocation(line: 0, scope: !12203, inlinedAt: !12934)
!12934 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !12931)
!12935 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !12934)
!12936 = !DILocation(line: 704, column: 3, scope: !12932)
!12937 = !DILocation(line: 707, column: 2, scope: !12917)
!12938 = !DILocation(line: 708, column: 2, scope: !12917)
!12939 = !DILocation(line: 710, column: 2, scope: !12917)
!12940 = !DILocation(line: 713, column: 1, scope: !12917)
!12941 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11440, file: !11440, line: 96, type: !12286, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12942)
!12942 = !{!12943}
!12943 = !DILocalVariable(name: "thread", arg: 1, scope: !12941, file: !11440, line: 96, type: !2163)
!12944 = !DILocation(line: 0, scope: !12941)
!12945 = !DILocation(line: 98, column: 23, scope: !12941)
!12946 = !DILocation(line: 98, column: 36, scope: !12941)
!12947 = !DILocation(line: 98, column: 57, scope: !12941)
!12948 = !DILocation(line: 98, column: 2, scope: !12941)
!12949 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11440, file: !11440, line: 148, type: !12126, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12950)
!12950 = !{!12951}
!12951 = !DILocalVariable(name: "thread", arg: 1, scope: !12949, file: !11440, line: 148, type: !2163)
!12952 = !DILocation(line: 0, scope: !12949)
!12953 = !DILocation(line: 150, column: 15, scope: !12949)
!12954 = !DILocation(line: 150, column: 28, scope: !12949)
!12955 = !DILocation(line: 153, column: 1, scope: !12949)
!12956 = distinct !DISubprogram(name: "z_pend_thread", scope: !2268, file: !2268, line: 770, type: !12957, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12963)
!12957 = !DISubroutineType(types: !12958)
!12958 = !{null, !2163, !2194, !12959}
!12959 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1516, line: 67, baseType: !12960)
!12960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1516, line: 65, size: 64, elements: !12961)
!12961 = !{!12962}
!12962 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12960, file: !1516, line: 66, baseType: !1515, size: 64)
!12963 = !{!12964, !12965, !12966, !12967, !12969}
!12964 = !DILocalVariable(name: "thread", arg: 1, scope: !12956, file: !2268, line: 770, type: !2163)
!12965 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12956, file: !2268, line: 770, type: !2194)
!12966 = !DILocalVariable(name: "timeout", arg: 3, scope: !12956, file: !2268, line: 771, type: !12959)
!12967 = !DILocalVariable(name: "__i", scope: !12968, file: !2268, line: 774, type: !12160)
!12968 = distinct !DILexicalBlock(scope: !12956, file: !2268, line: 774, column: 2)
!12969 = !DILocalVariable(name: "__key", scope: !12968, file: !2268, line: 774, type: !12160)
!12970 = !DILocation(line: 0, scope: !12956)
!12971 = !DILocation(line: 0, scope: !12968)
!12972 = !DILocation(line: 0, scope: !12168, inlinedAt: !12973)
!12973 = distinct !DILocation(line: 774, column: 2, scope: !12968)
!12974 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !12975)
!12975 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !12973)
!12976 = !DILocation(line: 0, scope: !12177, inlinedAt: !12975)
!12977 = !DILocation(line: 775, column: 3, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12979, file: !2268, line: 774, column: 26)
!12979 = distinct !DILexicalBlock(scope: !12968, file: !2268, line: 774, column: 2)
!12980 = !DILocation(line: 0, scope: !12195, inlinedAt: !12981)
!12981 = distinct !DILocation(line: 774, column: 2, scope: !12979)
!12982 = !DILocation(line: 0, scope: !12203, inlinedAt: !12983)
!12983 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !12981)
!12984 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !12983)
!12985 = !DILocation(line: 777, column: 1, scope: !12956)
!12986 = distinct !DISubprogram(name: "pend_locked", scope: !2268, file: !2268, line: 760, type: !12957, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12987)
!12987 = !{!12988, !12989, !12990}
!12988 = !DILocalVariable(name: "thread", arg: 1, scope: !12986, file: !2268, line: 760, type: !2163)
!12989 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12986, file: !2268, line: 760, type: !2194)
!12990 = !DILocalVariable(name: "timeout", arg: 3, scope: !12986, file: !2268, line: 761, type: !12959)
!12991 = !DILocation(line: 0, scope: !12986)
!12992 = !DILocation(line: 766, column: 2, scope: !12986)
!12993 = !DILocation(line: 767, column: 2, scope: !12986)
!12994 = !DILocation(line: 768, column: 1, scope: !12986)
!12995 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2268, file: !2268, line: 740, type: !12996, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12998)
!12996 = !DISubroutineType(types: !12997)
!12997 = !{null, !2163, !2194}
!12998 = !{!12999, !13000}
!12999 = !DILocalVariable(name: "thread", arg: 1, scope: !12995, file: !2268, line: 740, type: !2163)
!13000 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12995, file: !2268, line: 740, type: !2194)
!13001 = !DILocation(line: 0, scope: !12995)
!13002 = !DILocation(line: 742, column: 2, scope: !12995)
!13003 = !DILocation(line: 743, column: 2, scope: !12995)
!13004 = !DILocation(line: 747, column: 13, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12995, file: !2268, line: 747, column: 6)
!13006 = !DILocation(line: 747, column: 6, scope: !12995)
!13007 = !DILocation(line: 748, column: 16, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !13005, file: !2268, line: 747, column: 22)
!13009 = !DILocation(line: 748, column: 26, scope: !13008)
!13010 = !DILocation(line: 749, column: 28, scope: !13008)
!13011 = !DILocation(line: 0, scope: !12368, inlinedAt: !13012)
!13012 = distinct !DILocation(line: 749, column: 3, scope: !13008)
!13013 = !DILocation(line: 188, column: 2, scope: !12378, inlinedAt: !13012)
!13014 = !DILocation(line: 188, column: 2, scope: !12380, inlinedAt: !13012)
!13015 = !DILocation(line: 0, scope: !12378, inlinedAt: !13012)
!13016 = !DILocation(line: 189, column: 7, scope: !12383, inlinedAt: !13012)
!13017 = !DILocation(line: 189, column: 35, scope: !12383, inlinedAt: !13012)
!13018 = !DILocation(line: 189, column: 7, scope: !12384, inlinedAt: !13012)
!13019 = !DILocation(line: 191, column: 21, scope: !12388, inlinedAt: !13012)
!13020 = !DILocation(line: 190, column: 4, scope: !12388, inlinedAt: !13012)
!13021 = !DILocation(line: 192, column: 4, scope: !12388, inlinedAt: !13012)
!13022 = distinct !{!13022, !13013, !13023}
!13023 = !DILocation(line: 194, column: 2, scope: !12378, inlinedAt: !13012)
!13024 = !DILocation(line: 196, column: 37, scope: !12368, inlinedAt: !13012)
!13025 = !DILocation(line: 196, column: 2, scope: !12368, inlinedAt: !13012)
!13026 = !DILocation(line: 197, column: 1, scope: !12368, inlinedAt: !13012)
!13027 = !DILocation(line: 751, column: 1, scope: !12995)
!13028 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2268, file: !2268, line: 753, type: !13029, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13031)
!13029 = !DISubroutineType(types: !13030)
!13030 = !{null, !2163, !12959}
!13031 = !{!13032, !13033}
!13032 = !DILocalVariable(name: "thread", arg: 1, scope: !13028, file: !2268, line: 753, type: !2163)
!13033 = !DILocalVariable(name: "timeout", arg: 2, scope: !13028, file: !2268, line: 753, type: !12959)
!13034 = !DILocation(line: 0, scope: !13028)
!13035 = !DILocation(line: 755, column: 7, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13028, file: !2268, line: 755, column: 6)
!13037 = !DILocation(line: 755, column: 6, scope: !13028)
!13038 = !DILocation(line: 756, column: 3, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13036, file: !2268, line: 755, column: 41)
!13040 = !DILocation(line: 757, column: 2, scope: !13039)
!13041 = !DILocation(line: 758, column: 1, scope: !13028)
!13042 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11834, file: !11834, line: 47, type: !13029, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13043)
!13043 = !{!13044, !13045}
!13044 = !DILocalVariable(name: "thread", arg: 1, scope: !13042, file: !11834, line: 47, type: !2163)
!13045 = !DILocalVariable(name: "ticks", arg: 2, scope: !13042, file: !11834, line: 47, type: !12959)
!13046 = !DILocation(line: 0, scope: !13042)
!13047 = !DILocation(line: 49, column: 30, scope: !13042)
!13048 = !DILocation(line: 49, column: 2, scope: !13042)
!13049 = !DILocation(line: 50, column: 1, scope: !13042)
!13050 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2268, file: !2268, line: 795, type: !2220, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13051)
!13051 = !{!13052, !13053, !13054, !13056, !13057}
!13052 = !DILocalVariable(name: "timeout", arg: 1, scope: !13050, file: !2268, line: 795, type: !2222)
!13053 = !DILocalVariable(name: "thread", scope: !13050, file: !2268, line: 797, type: !2163)
!13054 = !DILocalVariable(name: "__i", scope: !13055, file: !2268, line: 800, type: !12160)
!13055 = distinct !DILexicalBlock(scope: !13050, file: !2268, line: 800, column: 2)
!13056 = !DILocalVariable(name: "__key", scope: !13055, file: !2268, line: 800, type: !12160)
!13057 = !DILocalVariable(name: "killed", scope: !13058, file: !2268, line: 801, type: !134)
!13058 = distinct !DILexicalBlock(scope: !13059, file: !2268, line: 800, column: 26)
!13059 = distinct !DILexicalBlock(scope: !13055, file: !2268, line: 800, column: 2)
!13060 = !DILocation(line: 0, scope: !13050)
!13061 = !DILocation(line: 797, column: 28, scope: !13050)
!13062 = !DILocation(line: 0, scope: !13055)
!13063 = !DILocation(line: 0, scope: !12168, inlinedAt: !13064)
!13064 = distinct !DILocation(line: 800, column: 2, scope: !13055)
!13065 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13066)
!13066 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13064)
!13067 = !DILocation(line: 0, scope: !12177, inlinedAt: !13066)
!13068 = !DILocation(line: 801, column: 27, scope: !13058)
!13069 = !DILocation(line: 801, column: 32, scope: !13058)
!13070 = !DILocation(line: 801, column: 61, scope: !13058)
!13071 = !DILocation(line: 0, scope: !13058)
!13072 = !DILocation(line: 804, column: 7, scope: !13058)
!13073 = !DILocation(line: 805, column: 21, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13075, file: !2268, line: 805, column: 8)
!13075 = distinct !DILexicalBlock(scope: !13076, file: !2268, line: 804, column: 16)
!13076 = distinct !DILexicalBlock(scope: !13058, file: !2268, line: 804, column: 7)
!13077 = !DILocation(line: 805, column: 31, scope: !13074)
!13078 = !DILocation(line: 805, column: 8, scope: !13075)
!13079 = !DILocation(line: 806, column: 5, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13074, file: !2268, line: 805, column: 40)
!13081 = !DILocation(line: 807, column: 4, scope: !13080)
!13082 = !DILocation(line: 808, column: 4, scope: !13075)
!13083 = !DILocation(line: 809, column: 4, scope: !13075)
!13084 = !DILocation(line: 810, column: 4, scope: !13075)
!13085 = !DILocation(line: 811, column: 3, scope: !13075)
!13086 = !DILocation(line: 0, scope: !12195, inlinedAt: !13087)
!13087 = distinct !DILocation(line: 800, column: 2, scope: !13059)
!13088 = !DILocation(line: 0, scope: !12203, inlinedAt: !13089)
!13089 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13087)
!13090 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13089)
!13091 = !DILocation(line: 813, column: 1, scope: !13050)
!13092 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2268, file: !2268, line: 779, type: !12126, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13093)
!13093 = !{!13094}
!13094 = !DILocalVariable(name: "thread", arg: 1, scope: !13092, file: !2268, line: 779, type: !2163)
!13095 = !DILocation(line: 0, scope: !13092)
!13096 = !DILocation(line: 781, column: 2, scope: !13092)
!13097 = !DILocation(line: 782, column: 2, scope: !13092)
!13098 = !DILocation(line: 783, column: 15, scope: !13092)
!13099 = !DILocation(line: 783, column: 25, scope: !13092)
!13100 = !DILocation(line: 784, column: 1, scope: !13092)
!13101 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11440, file: !11440, line: 165, type: !12126, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13102)
!13102 = !{!13103}
!13103 = !DILocalVariable(name: "thread", arg: 1, scope: !13101, file: !11440, line: 165, type: !2163)
!13104 = !DILocation(line: 0, scope: !13101)
!13105 = !DILocation(line: 167, column: 15, scope: !13101)
!13106 = !DILocation(line: 167, column: 28, scope: !13101)
!13107 = !DILocation(line: 168, column: 1, scope: !13101)
!13108 = distinct !DISubprogram(name: "unready_thread", scope: !2268, file: !2268, line: 731, type: !12126, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13109)
!13109 = !{!13110}
!13110 = !DILocalVariable(name: "thread", arg: 1, scope: !13108, file: !2268, line: 731, type: !2163)
!13111 = !DILocation(line: 0, scope: !13108)
!13112 = !DILocation(line: 733, column: 6, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13108, file: !2268, line: 733, column: 6)
!13114 = !DILocation(line: 733, column: 6, scope: !13108)
!13115 = !DILocation(line: 0, scope: !12337, inlinedAt: !13116)
!13116 = distinct !DILocation(line: 734, column: 3, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13113, file: !2268, line: 733, column: 34)
!13118 = !DILocation(line: 266, column: 15, scope: !12337, inlinedAt: !13116)
!13119 = !DILocation(line: 266, column: 28, scope: !12337, inlinedAt: !13116)
!13120 = !DILocation(line: 0, scope: !12345, inlinedAt: !13121)
!13121 = distinct !DILocation(line: 268, column: 3, scope: !12349, inlinedAt: !13116)
!13122 = !DILocation(line: 234, column: 2, scope: !12345, inlinedAt: !13121)
!13123 = !DILocation(line: 735, column: 2, scope: !13117)
!13124 = !DILocation(line: 736, column: 25, scope: !13108)
!13125 = !DILocation(line: 736, column: 22, scope: !13108)
!13126 = !DILocation(line: 736, column: 2, scope: !13108)
!13127 = !DILocation(line: 737, column: 1, scope: !13108)
!13128 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11440, file: !11440, line: 160, type: !12126, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13129)
!13129 = !{!13130}
!13130 = !DILocalVariable(name: "thread", arg: 1, scope: !13128, file: !11440, line: 160, type: !2163)
!13131 = !DILocation(line: 0, scope: !13128)
!13132 = !DILocation(line: 162, column: 15, scope: !13128)
!13133 = !DILocation(line: 162, column: 28, scope: !13128)
!13134 = !DILocation(line: 163, column: 1, scope: !13128)
!13135 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2268, file: !2268, line: 786, type: !12126, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13136)
!13136 = !{!13137, !13138, !13140}
!13137 = !DILocalVariable(name: "thread", arg: 1, scope: !13135, file: !2268, line: 786, type: !2163)
!13138 = !DILocalVariable(name: "__i", scope: !13139, file: !2268, line: 788, type: !12160)
!13139 = distinct !DILexicalBlock(scope: !13135, file: !2268, line: 788, column: 2)
!13140 = !DILocalVariable(name: "__key", scope: !13139, file: !2268, line: 788, type: !12160)
!13141 = !DILocation(line: 0, scope: !13135)
!13142 = !DILocation(line: 0, scope: !13139)
!13143 = !DILocation(line: 0, scope: !12168, inlinedAt: !13144)
!13144 = distinct !DILocation(line: 788, column: 2, scope: !13139)
!13145 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13146)
!13146 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13144)
!13147 = !DILocation(line: 0, scope: !12177, inlinedAt: !13146)
!13148 = !DILocation(line: 789, column: 3, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13150, file: !2268, line: 788, column: 26)
!13150 = distinct !DILexicalBlock(scope: !13139, file: !2268, line: 788, column: 2)
!13151 = !DILocation(line: 0, scope: !12195, inlinedAt: !13152)
!13152 = distinct !DILocation(line: 788, column: 2, scope: !13150)
!13153 = !DILocation(line: 0, scope: !12203, inlinedAt: !13154)
!13154 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13152)
!13155 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13154)
!13156 = !DILocation(line: 791, column: 1, scope: !13135)
!13157 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2268, file: !2268, line: 816, type: !13158, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13160)
!13158 = !DISubroutineType(types: !13159)
!13159 = !{!103, !142, !2194, !12959}
!13160 = !{!13161, !13162, !13163, !13164, !13165, !13167}
!13161 = !DILocalVariable(name: "key", arg: 1, scope: !13157, file: !2268, line: 816, type: !142)
!13162 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13157, file: !2268, line: 816, type: !2194)
!13163 = !DILocalVariable(name: "timeout", arg: 3, scope: !13157, file: !2268, line: 816, type: !12959)
!13164 = !DILocalVariable(name: "ret", scope: !13157, file: !2268, line: 828, type: !103)
!13165 = !DILocalVariable(name: "__i", scope: !13166, file: !2268, line: 829, type: !12160)
!13166 = distinct !DILexicalBlock(scope: !13157, file: !2268, line: 829, column: 2)
!13167 = !DILocalVariable(name: "__key", scope: !13166, file: !2268, line: 829, type: !12160)
!13168 = !DILocation(line: 0, scope: !13157)
!13169 = !DILocation(line: 823, column: 14, scope: !13157)
!13170 = !DILocation(line: 823, column: 2, scope: !13157)
!13171 = !DILocation(line: 826, column: 20, scope: !13157)
!13172 = !DILocation(line: 826, column: 18, scope: !13157)
!13173 = !DILocation(line: 828, column: 12, scope: !13157)
!13174 = !DILocation(line: 0, scope: !13166)
!13175 = !DILocation(line: 0, scope: !12168, inlinedAt: !13176)
!13176 = distinct !DILocation(line: 829, column: 2, scope: !13166)
!13177 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13178)
!13178 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13176)
!13179 = !DILocation(line: 0, scope: !12177, inlinedAt: !13178)
!13180 = !DILocation(line: 830, column: 7, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13182, file: !2268, line: 830, column: 7)
!13182 = distinct !DILexicalBlock(scope: !13183, file: !2268, line: 829, column: 26)
!13183 = distinct !DILexicalBlock(scope: !13166, file: !2268, line: 829, column: 2)
!13184 = !DILocation(line: 830, column: 26, scope: !13181)
!13185 = !DILocation(line: 830, column: 23, scope: !13181)
!13186 = !DILocation(line: 830, column: 7, scope: !13182)
!13187 = !DILocation(line: 831, column: 20, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13181, file: !2268, line: 830, column: 36)
!13189 = !DILocation(line: 832, column: 3, scope: !13188)
!13190 = !DILocation(line: 0, scope: !12195, inlinedAt: !13191)
!13191 = distinct !DILocation(line: 829, column: 2, scope: !13183)
!13192 = !DILocation(line: 0, scope: !12203, inlinedAt: !13193)
!13193 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13191)
!13194 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13193)
!13195 = !DILocation(line: 834, column: 2, scope: !13157)
!13196 = distinct !DISubprogram(name: "z_pend_curr", scope: !2268, file: !2268, line: 840, type: !13197, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13199)
!13197 = !DISubroutineType(types: !13198)
!13198 = !{!103, !12171, !12160, !2194, !12959}
!13199 = !{!13200, !13201, !13202, !13203}
!13200 = !DILocalVariable(name: "lock", arg: 1, scope: !13196, file: !2268, line: 840, type: !12171)
!13201 = !DILocalVariable(name: "key", arg: 2, scope: !13196, file: !2268, line: 840, type: !12160)
!13202 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13196, file: !2268, line: 841, type: !2194)
!13203 = !DILocalVariable(name: "timeout", arg: 4, scope: !13196, file: !2268, line: 841, type: !12959)
!13204 = !DILocation(line: 0, scope: !13196)
!13205 = !DILocation(line: 844, column: 20, scope: !13196)
!13206 = !DILocation(line: 844, column: 18, scope: !13196)
!13207 = !DILocation(line: 0, scope: !12168, inlinedAt: !13208)
!13208 = distinct !DILocation(line: 856, column: 9, scope: !13196)
!13209 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13210)
!13210 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13208)
!13211 = !DILocation(line: 0, scope: !12177, inlinedAt: !13210)
!13212 = !DILocation(line: 857, column: 14, scope: !13196)
!13213 = !DILocation(line: 857, column: 2, scope: !13196)
!13214 = !DILocation(line: 0, scope: !12779, inlinedAt: !13215)
!13215 = distinct !DILocation(line: 859, column: 9, scope: !13196)
!13216 = !DILocation(line: 196, column: 9, scope: !12779, inlinedAt: !13215)
!13217 = !DILocation(line: 859, column: 2, scope: !13196)
!13218 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2268, file: !2268, line: 862, type: !13219, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13221)
!13219 = !DISubroutineType(types: !13220)
!13220 = !{!2163, !2194}
!13221 = !{!13222, !13223, !13224, !13226}
!13222 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13218, file: !2268, line: 862, type: !2194)
!13223 = !DILocalVariable(name: "thread", scope: !13218, file: !2268, line: 864, type: !2163)
!13224 = !DILocalVariable(name: "__i", scope: !13225, file: !2268, line: 866, type: !12160)
!13225 = distinct !DILexicalBlock(scope: !13218, file: !2268, line: 866, column: 2)
!13226 = !DILocalVariable(name: "__key", scope: !13225, file: !2268, line: 866, type: !12160)
!13227 = !DILocation(line: 0, scope: !13218)
!13228 = !DILocation(line: 0, scope: !13225)
!13229 = !DILocation(line: 0, scope: !12168, inlinedAt: !13230)
!13230 = distinct !DILocation(line: 866, column: 2, scope: !13225)
!13231 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13232)
!13232 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13230)
!13233 = !DILocation(line: 0, scope: !12177, inlinedAt: !13232)
!13234 = !DILocation(line: 867, column: 12, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13236, file: !2268, line: 866, column: 26)
!13236 = distinct !DILexicalBlock(scope: !13225, file: !2268, line: 866, column: 2)
!13237 = !DILocation(line: 869, column: 14, scope: !13238)
!13238 = distinct !DILexicalBlock(scope: !13235, file: !2268, line: 869, column: 7)
!13239 = !DILocation(line: 869, column: 7, scope: !13235)
!13240 = !DILocation(line: 870, column: 4, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13238, file: !2268, line: 869, column: 23)
!13242 = !DILocation(line: 871, column: 3, scope: !13241)
!13243 = !DILocation(line: 0, scope: !12195, inlinedAt: !13244)
!13244 = distinct !DILocation(line: 866, column: 2, scope: !13236)
!13245 = !DILocation(line: 0, scope: !12203, inlinedAt: !13246)
!13246 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13244)
!13247 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13246)
!13248 = !DILocation(line: 874, column: 2, scope: !13218)
!13249 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2268, file: !2268, line: 877, type: !13219, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13250)
!13250 = !{!13251, !13252, !13253, !13255}
!13251 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13249, file: !2268, line: 877, type: !2194)
!13252 = !DILocalVariable(name: "thread", scope: !13249, file: !2268, line: 879, type: !2163)
!13253 = !DILocalVariable(name: "__i", scope: !13254, file: !2268, line: 881, type: !12160)
!13254 = distinct !DILexicalBlock(scope: !13249, file: !2268, line: 881, column: 2)
!13255 = !DILocalVariable(name: "__key", scope: !13254, file: !2268, line: 881, type: !12160)
!13256 = !DILocation(line: 0, scope: !13249)
!13257 = !DILocation(line: 0, scope: !13254)
!13258 = !DILocation(line: 0, scope: !12168, inlinedAt: !13259)
!13259 = distinct !DILocation(line: 881, column: 2, scope: !13254)
!13260 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13261)
!13261 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13259)
!13262 = !DILocation(line: 0, scope: !12177, inlinedAt: !13261)
!13263 = !DILocation(line: 882, column: 12, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13265, file: !2268, line: 881, column: 26)
!13265 = distinct !DILexicalBlock(scope: !13254, file: !2268, line: 881, column: 2)
!13266 = !DILocation(line: 884, column: 14, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13264, file: !2268, line: 884, column: 7)
!13268 = !DILocation(line: 884, column: 7, scope: !13264)
!13269 = !DILocation(line: 885, column: 4, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13267, file: !2268, line: 884, column: 23)
!13271 = !DILocation(line: 886, column: 10, scope: !13270)
!13272 = !DILocation(line: 887, column: 3, scope: !13270)
!13273 = !DILocation(line: 0, scope: !12195, inlinedAt: !13274)
!13274 = distinct !DILocation(line: 881, column: 2, scope: !13265)
!13275 = !DILocation(line: 0, scope: !12203, inlinedAt: !13276)
!13276 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13274)
!13277 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13276)
!13278 = !DILocation(line: 890, column: 2, scope: !13249)
!13279 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2268, file: !2268, line: 893, type: !12126, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13280)
!13280 = !{!13281}
!13281 = !DILocalVariable(name: "thread", arg: 1, scope: !13279, file: !2268, line: 893, type: !2163)
!13282 = !DILocation(line: 0, scope: !13279)
!13283 = !DILocation(line: 0, scope: !13135, inlinedAt: !13284)
!13284 = distinct !DILocation(line: 895, column: 2, scope: !13279)
!13285 = !DILocation(line: 0, scope: !13139, inlinedAt: !13284)
!13286 = !DILocation(line: 0, scope: !12168, inlinedAt: !13287)
!13287 = distinct !DILocation(line: 788, column: 2, scope: !13139, inlinedAt: !13284)
!13288 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13289)
!13289 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13287)
!13290 = !DILocation(line: 0, scope: !12177, inlinedAt: !13289)
!13291 = !DILocation(line: 789, column: 3, scope: !13149, inlinedAt: !13284)
!13292 = !DILocation(line: 0, scope: !12195, inlinedAt: !13293)
!13293 = distinct !DILocation(line: 788, column: 2, scope: !13150, inlinedAt: !13284)
!13294 = !DILocation(line: 0, scope: !12203, inlinedAt: !13295)
!13295 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13293)
!13296 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13295)
!13297 = !DILocation(line: 896, column: 8, scope: !13279)
!13298 = !DILocation(line: 897, column: 1, scope: !13279)
!13299 = distinct !DISubprogram(name: "z_set_prio", scope: !2268, file: !2268, line: 902, type: !12488, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13300)
!13300 = !{!13301, !13302, !13303, !13304, !13306}
!13301 = !DILocalVariable(name: "thread", arg: 1, scope: !13299, file: !2268, line: 902, type: !2163)
!13302 = !DILocalVariable(name: "prio", arg: 2, scope: !13299, file: !2268, line: 902, type: !103)
!13303 = !DILocalVariable(name: "need_sched", scope: !13299, file: !2268, line: 904, type: !134)
!13304 = !DILocalVariable(name: "__i", scope: !13305, file: !2268, line: 906, type: !12160)
!13305 = distinct !DILexicalBlock(scope: !13299, file: !2268, line: 906, column: 2)
!13306 = !DILocalVariable(name: "__key", scope: !13305, file: !2268, line: 906, type: !12160)
!13307 = !DILocation(line: 0, scope: !13299)
!13308 = !DILocation(line: 0, scope: !13305)
!13309 = !DILocation(line: 0, scope: !12168, inlinedAt: !13310)
!13310 = distinct !DILocation(line: 906, column: 2, scope: !13305)
!13311 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13312)
!13312 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13310)
!13313 = !DILocation(line: 0, scope: !12177, inlinedAt: !13312)
!13314 = !DILocation(line: 907, column: 16, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13316, file: !2268, line: 906, column: 26)
!13316 = distinct !DILexicalBlock(scope: !13305, file: !2268, line: 906, column: 2)
!13317 = !DILocation(line: 909, column: 7, scope: !13315)
!13318 = !DILocation(line: 0, scope: !12337, inlinedAt: !13319)
!13319 = distinct !DILocation(line: 912, column: 5, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13321, file: !2268, line: 911, column: 63)
!13321 = distinct !DILexicalBlock(scope: !13322, file: !2268, line: 911, column: 8)
!13322 = distinct !DILexicalBlock(scope: !13323, file: !2268, line: 909, column: 19)
!13323 = distinct !DILexicalBlock(scope: !13315, file: !2268, line: 909, column: 7)
!13324 = !DILocation(line: 266, column: 28, scope: !12337, inlinedAt: !13319)
!13325 = !DILocation(line: 0, scope: !12345, inlinedAt: !13326)
!13326 = distinct !DILocation(line: 268, column: 3, scope: !12349, inlinedAt: !13319)
!13327 = !DILocation(line: 234, column: 2, scope: !12345, inlinedAt: !13326)
!13328 = !DILocation(line: 913, column: 23, scope: !13320)
!13329 = !DILocation(line: 0, scope: !12354, inlinedAt: !13330)
!13330 = distinct !DILocation(line: 914, column: 5, scope: !13320)
!13331 = !DILocation(line: 252, column: 28, scope: !12354, inlinedAt: !13330)
!13332 = !DILocation(line: 0, scope: !12361, inlinedAt: !13333)
!13333 = distinct !DILocation(line: 254, column: 3, scope: !12365, inlinedAt: !13330)
!13334 = !DILocation(line: 0, scope: !12368, inlinedAt: !13335)
!13335 = distinct !DILocation(line: 229, column: 2, scope: !12361, inlinedAt: !13333)
!13336 = !DILocation(line: 188, column: 2, scope: !12378, inlinedAt: !13335)
!13337 = !DILocation(line: 188, column: 2, scope: !12380, inlinedAt: !13335)
!13338 = !DILocation(line: 0, scope: !12378, inlinedAt: !13335)
!13339 = !DILocation(line: 189, column: 7, scope: !12383, inlinedAt: !13335)
!13340 = !DILocation(line: 189, column: 35, scope: !12383, inlinedAt: !13335)
!13341 = !DILocation(line: 189, column: 7, scope: !12384, inlinedAt: !13335)
!13342 = !DILocation(line: 190, column: 4, scope: !12388, inlinedAt: !13335)
!13343 = !DILocation(line: 192, column: 4, scope: !12388, inlinedAt: !13335)
!13344 = distinct !{!13344, !13336, !13345}
!13345 = !DILocation(line: 194, column: 2, scope: !12378, inlinedAt: !13335)
!13346 = !DILocation(line: 196, column: 2, scope: !12368, inlinedAt: !13335)
!13347 = !DILocation(line: 197, column: 1, scope: !12368, inlinedAt: !13335)
!13348 = !DILocation(line: 918, column: 4, scope: !13322)
!13349 = !DILocation(line: 919, column: 3, scope: !13322)
!13350 = !DILocation(line: 920, column: 22, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13323, file: !2268, line: 919, column: 10)
!13352 = !DILocation(line: 0, scope: !12195, inlinedAt: !13353)
!13353 = distinct !DILocation(line: 906, column: 2, scope: !13316)
!13354 = !DILocation(line: 0, scope: !12203, inlinedAt: !13355)
!13355 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13353)
!13356 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13355)
!13357 = !DILocation(line: 926, column: 2, scope: !13299)
!13358 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2268, file: !2268, line: 929, type: !13359, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13361)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{null, !2163, !103}
!13361 = !{!13362, !13363, !13364}
!13362 = !DILocalVariable(name: "thread", arg: 1, scope: !13358, file: !2268, line: 929, type: !2163)
!13363 = !DILocalVariable(name: "prio", arg: 2, scope: !13358, file: !2268, line: 929, type: !103)
!13364 = !DILocalVariable(name: "need_sched", scope: !13358, file: !2268, line: 931, type: !134)
!13365 = !DILocation(line: 0, scope: !13358)
!13366 = !DILocation(line: 931, column: 20, scope: !13358)
!13367 = !DILocation(line: 935, column: 17, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13358, file: !2268, line: 935, column: 6)
!13369 = !DILocation(line: 935, column: 20, scope: !13368)
!13370 = !DILocation(line: 935, column: 35, scope: !13368)
!13371 = !DILocation(line: 935, column: 48, scope: !13368)
!13372 = !DILocation(line: 935, column: 6, scope: !13358)
!13373 = !DILocation(line: 936, column: 3, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13368, file: !2268, line: 935, column: 55)
!13375 = !DILocation(line: 937, column: 2, scope: !13374)
!13376 = !DILocation(line: 938, column: 1, scope: !13358)
!13377 = distinct !DISubprogram(name: "k_sched_lock", scope: !2268, file: !2268, line: 987, type: !2876, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13378)
!13378 = !{!13379, !13381}
!13379 = !DILocalVariable(name: "__i", scope: !13380, file: !2268, line: 989, type: !12160)
!13380 = distinct !DILexicalBlock(scope: !13377, file: !2268, line: 989, column: 2)
!13381 = !DILocalVariable(name: "__key", scope: !13380, file: !2268, line: 989, type: !12160)
!13382 = !DILocation(line: 0, scope: !13380)
!13383 = !DILocation(line: 0, scope: !12168, inlinedAt: !13384)
!13384 = distinct !DILocation(line: 989, column: 2, scope: !13380)
!13385 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13386)
!13386 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13384)
!13387 = !DILocation(line: 0, scope: !12177, inlinedAt: !13386)
!13388 = !DILocation(line: 992, column: 3, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13390, file: !2268, line: 989, column: 26)
!13390 = distinct !DILexicalBlock(scope: !13380, file: !2268, line: 989, column: 2)
!13391 = !DILocation(line: 0, scope: !12195, inlinedAt: !13392)
!13392 = distinct !DILocation(line: 989, column: 2, scope: !13390)
!13393 = !DILocation(line: 0, scope: !12203, inlinedAt: !13394)
!13394 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13392)
!13395 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13394)
!13396 = !DILocation(line: 994, column: 1, scope: !13377)
!13397 = distinct !DISubprogram(name: "z_sched_lock", scope: !11440, file: !11440, line: 251, type: !2876, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !381)
!13398 = !DILocation(line: 256, column: 4, scope: !13397)
!13399 = !DILocation(line: 256, column: 19, scope: !13397)
!13400 = !DILocation(line: 256, column: 2, scope: !13397)
!13401 = !DILocation(line: 258, column: 2, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13397, file: !11440, line: 258, column: 2)
!13403 = !{i64 2155185822}
!13404 = !DILocation(line: 259, column: 1, scope: !13397)
!13405 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2268, file: !2268, line: 996, type: !2876, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13406)
!13406 = !{!13407, !13409}
!13407 = !DILocalVariable(name: "__i", scope: !13408, file: !2268, line: 998, type: !12160)
!13408 = distinct !DILexicalBlock(scope: !13405, file: !2268, line: 998, column: 2)
!13409 = !DILocalVariable(name: "__key", scope: !13408, file: !2268, line: 998, type: !12160)
!13410 = !DILocation(line: 0, scope: !13408)
!13411 = !DILocation(line: 0, scope: !12168, inlinedAt: !13412)
!13412 = distinct !DILocation(line: 998, column: 2, scope: !13408)
!13413 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13414)
!13414 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13412)
!13415 = !DILocation(line: 0, scope: !12177, inlinedAt: !13414)
!13416 = !DILocation(line: 1002, column: 5, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13418, file: !2268, line: 998, column: 26)
!13418 = distinct !DILexicalBlock(scope: !13408, file: !2268, line: 998, column: 2)
!13419 = !DILocation(line: 1002, column: 20, scope: !13417)
!13420 = !DILocation(line: 1002, column: 3, scope: !13417)
!13421 = !DILocation(line: 1003, column: 3, scope: !13417)
!13422 = !DILocation(line: 0, scope: !12195, inlinedAt: !13423)
!13423 = distinct !DILocation(line: 998, column: 2, scope: !13418)
!13424 = !DILocation(line: 0, scope: !12203, inlinedAt: !13425)
!13425 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13423)
!13426 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13425)
!13427 = !DILocation(line: 1011, column: 2, scope: !13405)
!13428 = !DILocation(line: 1012, column: 1, scope: !13405)
!13429 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2268, file: !2268, line: 1014, type: !12476, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !381)
!13430 = !DILocation(line: 1028, column: 25, scope: !13429)
!13431 = !DILocation(line: 1028, column: 2, scope: !13429)
!13432 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2268, file: !2268, line: 1155, type: !13433, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13435)
!13433 = !DISubroutineType(types: !13434)
!13434 = !{!134, !2192, !2192}
!13435 = !{!13436, !13437, !13438, !13439, !13440}
!13436 = !DILocalVariable(name: "a", arg: 1, scope: !13432, file: !2268, line: 1155, type: !2192)
!13437 = !DILocalVariable(name: "b", arg: 2, scope: !13432, file: !2268, line: 1155, type: !2192)
!13438 = !DILocalVariable(name: "thread_a", scope: !13432, file: !2268, line: 1157, type: !2163)
!13439 = !DILocalVariable(name: "thread_b", scope: !13432, file: !2268, line: 1157, type: !2163)
!13440 = !DILocalVariable(name: "cmp", scope: !13432, file: !2268, line: 1158, type: !654)
!13441 = !DILocation(line: 0, scope: !13432)
!13442 = !DILocation(line: 1160, column: 13, scope: !13432)
!13443 = !DILocation(line: 1161, column: 13, scope: !13432)
!13444 = !DILocation(line: 1163, column: 8, scope: !13432)
!13445 = !DILocation(line: 1165, column: 10, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13432, file: !2268, line: 1165, column: 6)
!13447 = !DILocation(line: 1165, column: 6, scope: !13432)
!13448 = !DILocation(line: 1167, column: 17, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13446, file: !2268, line: 1167, column: 13)
!13450 = !DILocation(line: 1167, column: 13, scope: !13446)
!13451 = !DILocation(line: 1170, column: 25, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13449, file: !2268, line: 1169, column: 9)
!13453 = !DILocation(line: 1170, column: 52, scope: !13452)
!13454 = !DILocation(line: 1170, column: 35, scope: !13452)
!13455 = !DILocation(line: 1170, column: 3, scope: !13452)
!13456 = !DILocation(line: 0, scope: !13446)
!13457 = !DILocation(line: 1173, column: 1, scope: !13432)
!13458 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2268, file: !2268, line: 1175, type: !13459, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13474)
!13459 = !DISubroutineType(types: !13460)
!13460 = !{null, !13461, !2163}
!13461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13462, size: 32)
!13462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13463, line: 37, size: 128, elements: !13464)
!13463 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13464 = !{!13465, !13473}
!13465 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13462, file: !13463, line: 38, baseType: !13466, size: 96)
!13466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !296, line: 83, size: 96, elements: !13467)
!13467 = !{!13468, !13469, !13472}
!13468 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13466, file: !296, line: 84, baseType: !2192, size: 32)
!13469 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13466, file: !296, line: 85, baseType: !13470, size: 32, offset: 32)
!13470 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !296, line: 81, baseType: !13471)
!13471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13433, size: 32)
!13472 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13466, file: !296, line: 86, baseType: !103, size: 32, offset: 64)
!13473 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13462, file: !13463, line: 39, baseType: !103, size: 32, offset: 96)
!13474 = !{!13475, !13476, !13477, !13478, !13487}
!13475 = !DILocalVariable(name: "pq", arg: 1, scope: !13458, file: !2268, line: 1175, type: !13461)
!13476 = !DILocalVariable(name: "thread", arg: 2, scope: !13458, file: !2268, line: 1175, type: !2163)
!13477 = !DILocalVariable(name: "t", scope: !13458, file: !2268, line: 1177, type: !2163)
!13478 = !DILocalVariable(name: "__f", scope: !13479, file: !2268, line: 1190, type: !13482)
!13479 = distinct !DILexicalBlock(scope: !13480, file: !2268, line: 1190, column: 3)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !2268, line: 1189, column: 27)
!13481 = distinct !DILexicalBlock(scope: !13458, file: !2268, line: 1189, column: 6)
!13482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !296, line: 155, size: 96, elements: !13483)
!13483 = !{!13484, !13485, !13486}
!13484 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13482, file: !296, line: 156, baseType: !2263, size: 32)
!13485 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13482, file: !296, line: 157, baseType: !1814, size: 32, offset: 32)
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13482, file: !296, line: 158, baseType: !654, size: 32, offset: 64)
!13487 = !DILocalVariable(name: "n", scope: !13488, file: !2268, line: 1190, type: !2192)
!13488 = distinct !DILexicalBlock(scope: !13489, file: !2268, line: 1190, column: 3)
!13489 = distinct !DILexicalBlock(scope: !13479, file: !2268, line: 1190, column: 3)
!13490 = !DILocation(line: 0, scope: !13458)
!13491 = !DILocation(line: 1181, column: 31, scope: !13458)
!13492 = !DILocation(line: 1181, column: 45, scope: !13458)
!13493 = !DILocation(line: 1181, column: 15, scope: !13458)
!13494 = !DILocation(line: 1181, column: 25, scope: !13458)
!13495 = !DILocation(line: 1189, column: 11, scope: !13481)
!13496 = !DILocation(line: 1189, column: 7, scope: !13481)
!13497 = !DILocation(line: 1189, column: 6, scope: !13458)
!13498 = !DILocation(line: 1190, column: 3, scope: !13479)
!13499 = !DILocation(line: 1190, column: 3, scope: !13488)
!13500 = !DILocation(line: 0, scope: !13488)
!13501 = !DILocation(line: 1190, column: 3, scope: !13489)
!13502 = !DILocation(line: 1193, column: 2, scope: !13480)
!13503 = !DILocation(line: 1191, column: 42, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13489, file: !2268, line: 1190, column: 54)
!13505 = !DILocation(line: 1191, column: 12, scope: !13504)
!13506 = !DILocation(line: 1191, column: 22, scope: !13504)
!13507 = distinct !{!13507, !13498, !13508}
!13508 = !DILocation(line: 1192, column: 3, scope: !13479)
!13509 = !DILocation(line: 1195, column: 17, scope: !13458)
!13510 = !DILocation(line: 1195, column: 37, scope: !13458)
!13511 = !DILocation(line: 1195, column: 2, scope: !13458)
!13512 = !DILocation(line: 1196, column: 1, scope: !13458)
!13513 = !DISubprogram(name: "z_rb_foreach_next", scope: !296, file: !296, line: 176, type: !13514, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !381)
!13514 = !DISubroutineType(types: !13515)
!13515 = !{!2192, !13516, !13517}
!13516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13466, size: 32)
!13517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13482, size: 32)
!13518 = !DISubprogram(name: "rb_insert", scope: !296, file: !296, line: 105, type: !13519, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !381)
!13519 = !DISubroutineType(types: !13520)
!13520 = !{null, !13516, !2192}
!13521 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2268, file: !2268, line: 1198, type: !13459, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13522)
!13522 = !{!13523, !13524}
!13523 = !DILocalVariable(name: "pq", arg: 1, scope: !13521, file: !2268, line: 1198, type: !13461)
!13524 = !DILocalVariable(name: "thread", arg: 2, scope: !13521, file: !2268, line: 1198, type: !2163)
!13525 = !DILocation(line: 0, scope: !13521)
!13526 = !DILocation(line: 1202, column: 17, scope: !13521)
!13527 = !DILocation(line: 1202, column: 37, scope: !13521)
!13528 = !DILocation(line: 1202, column: 2, scope: !13521)
!13529 = !DILocation(line: 1204, column: 16, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13521, file: !2268, line: 1204, column: 6)
!13531 = !DILocation(line: 1204, column: 7, scope: !13530)
!13532 = !DILocation(line: 1204, column: 6, scope: !13521)
!13533 = !DILocation(line: 1205, column: 7, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13530, file: !2268, line: 1204, column: 22)
!13535 = !DILocation(line: 1205, column: 22, scope: !13534)
!13536 = !DILocation(line: 1206, column: 2, scope: !13534)
!13537 = !DILocation(line: 1207, column: 1, scope: !13521)
!13538 = !DISubprogram(name: "rb_remove", scope: !296, file: !296, line: 110, type: !13519, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !381)
!13539 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2268, file: !2268, line: 1209, type: !13540, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13542)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{!2163, !13461}
!13542 = !{!13543, !13544, !13545}
!13543 = !DILocalVariable(name: "pq", arg: 1, scope: !13539, file: !2268, line: 1209, type: !13461)
!13544 = !DILocalVariable(name: "thread", scope: !13539, file: !2268, line: 1211, type: !2163)
!13545 = !DILocalVariable(name: "n", scope: !13539, file: !2268, line: 1212, type: !2192)
!13546 = !DILocation(line: 0, scope: !13539)
!13547 = !DILocation(line: 1212, column: 37, scope: !13539)
!13548 = !DILocation(line: 1212, column: 21, scope: !13539)
!13549 = !DILocation(line: 1217, column: 2, scope: !13539)
!13550 = distinct !DISubprogram(name: "rb_get_min", scope: !296, file: !296, line: 115, type: !13551, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13553)
!13551 = !DISubroutineType(types: !13552)
!13552 = !{!2192, !13516}
!13553 = !{!13554}
!13554 = !DILocalVariable(name: "tree", arg: 1, scope: !13550, file: !296, line: 115, type: !13516)
!13555 = !DILocation(line: 0, scope: !13550)
!13556 = !DILocation(line: 117, column: 9, scope: !13550)
!13557 = !DILocation(line: 117, column: 2, scope: !13550)
!13558 = !DISubprogram(name: "z_rb_get_minmax", scope: !296, file: !296, line: 100, type: !13559, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !381)
!13559 = !DISubroutineType(types: !13560)
!13560 = !{!2192, !13516, !131}
!13561 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2268, file: !2268, line: 1246, type: !13562, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13572)
!13562 = !DISubroutineType(types: !13563)
!13563 = !{!2163, !13564}
!13564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13565, size: 32)
!13565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13463, line: 53, size: 2080, elements: !13566)
!13566 = !{!13567, !13571}
!13567 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13565, file: !13463, line: 54, baseType: !13568, size: 2048)
!13568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2199, size: 2048, elements: !13569)
!13569 = !{!13570}
!13570 = !DISubrange(count: 32)
!13571 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13565, file: !13463, line: 55, baseType: !32, size: 32, offset: 2048)
!13572 = !{!13573, !13574, !13575, !13576}
!13573 = !DILocalVariable(name: "pq", arg: 1, scope: !13561, file: !2268, line: 1246, type: !13564)
!13574 = !DILocalVariable(name: "thread", scope: !13561, file: !2268, line: 1252, type: !2163)
!13575 = !DILocalVariable(name: "l", scope: !13561, file: !2268, line: 1253, type: !12371)
!13576 = !DILocalVariable(name: "n", scope: !13561, file: !2268, line: 1254, type: !2264)
!13577 = !DILocation(line: 0, scope: !13561)
!13578 = !DILocation(line: 1248, column: 11, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13561, file: !2268, line: 1248, column: 6)
!13580 = !DILocation(line: 1248, column: 7, scope: !13579)
!13581 = !DILocation(line: 1248, column: 6, scope: !13561)
!13582 = !DILocation(line: 1253, column: 31, scope: !13561)
!13583 = !DILocation(line: 1253, column: 20, scope: !13561)
!13584 = !DILocation(line: 1254, column: 19, scope: !13561)
!13585 = !DILocation(line: 1260, column: 1, scope: !13561)
!13586 = distinct !DISubprogram(name: "z_unpend_all", scope: !2268, file: !2268, line: 1262, type: !13587, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13589)
!13587 = !DISubroutineType(types: !13588)
!13588 = !{!103, !2194}
!13589 = !{!13590, !13591, !13592}
!13590 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13586, file: !2268, line: 1262, type: !2194)
!13591 = !DILocalVariable(name: "need_sched", scope: !13586, file: !2268, line: 1264, type: !103)
!13592 = !DILocalVariable(name: "thread", scope: !13586, file: !2268, line: 1265, type: !2163)
!13593 = !DILocation(line: 0, scope: !13586)
!13594 = !DILocation(line: 1267, column: 19, scope: !13586)
!13595 = !DILocation(line: 1267, column: 41, scope: !13586)
!13596 = !DILocation(line: 1267, column: 2, scope: !13586)
!13597 = !DILocation(line: 1268, column: 3, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13586, file: !2268, line: 1267, column: 50)
!13599 = !DILocation(line: 1269, column: 3, scope: !13598)
!13600 = distinct !{!13600, !13596, !13601}
!13601 = !DILocation(line: 1271, column: 2, scope: !13586)
!13602 = !DILocation(line: 1273, column: 2, scope: !13586)
!13603 = distinct !DISubprogram(name: "z_waitq_head", scope: !11766, file: !11766, line: 52, type: !13219, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13604)
!13604 = !{!13605}
!13605 = !DILocalVariable(name: "w", arg: 1, scope: !13603, file: !11766, line: 52, type: !2194)
!13606 = !DILocation(line: 0, scope: !13603)
!13607 = !DILocation(line: 54, column: 52, scope: !13603)
!13608 = !DILocation(line: 54, column: 28, scope: !13603)
!13609 = !DILocation(line: 54, column: 9, scope: !13603)
!13610 = !DILocation(line: 54, column: 2, scope: !13603)
!13611 = distinct !DISubprogram(name: "init_ready_q", scope: !2268, file: !2268, line: 1276, type: !13612, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13619)
!13612 = !DISubroutineType(types: !13613)
!13613 = !{null, !13614}
!13614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13615, size: 32)
!13615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !306, line: 83, size: 96, elements: !13616)
!13616 = !{!13617, !13618}
!13617 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13615, file: !306, line: 86, baseType: !2163, size: 32)
!13618 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13615, file: !306, line: 90, baseType: !2199, size: 64, offset: 32)
!13619 = !{!13620}
!13620 = !DILocalVariable(name: "rq", arg: 1, scope: !13611, file: !2268, line: 1276, type: !13614)
!13621 = !DILocation(line: 0, scope: !13611)
!13622 = !DILocation(line: 1289, column: 22, scope: !13611)
!13623 = !DILocation(line: 1289, column: 2, scope: !13611)
!13624 = !DILocation(line: 1291, column: 1, scope: !13611)
!13625 = distinct !DISubprogram(name: "sys_dlist_init", scope: !280, file: !280, line: 197, type: !13626, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13628)
!13626 = !DISubroutineType(types: !13627)
!13627 = !{null, !12371}
!13628 = !{!13629}
!13629 = !DILocalVariable(name: "list", arg: 1, scope: !13625, file: !280, line: 197, type: !12371)
!13630 = !DILocation(line: 0, scope: !13625)
!13631 = !DILocation(line: 199, column: 8, scope: !13625)
!13632 = !DILocation(line: 199, column: 13, scope: !13625)
!13633 = !DILocation(line: 200, column: 8, scope: !13625)
!13634 = !DILocation(line: 200, column: 13, scope: !13625)
!13635 = !DILocation(line: 201, column: 1, scope: !13625)
!13636 = distinct !DISubprogram(name: "z_sched_init", scope: !2268, file: !2268, line: 1293, type: !2876, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !381)
!13637 = !DILocation(line: 1302, column: 2, scope: !13636)
!13638 = !DILocation(line: 1306, column: 2, scope: !13636)
!13639 = !DILocation(line: 1309, column: 1, scope: !13636)
!13640 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2268, file: !2268, line: 1311, type: !13641, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13644)
!13641 = !DISubroutineType(types: !13642)
!13642 = !{!103, !13643}
!13643 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !270, line: 347, baseType: !2163)
!13644 = !{!13645}
!13645 = !DILocalVariable(name: "thread", arg: 1, scope: !13640, file: !2268, line: 1311, type: !13643)
!13646 = !DILocation(line: 0, scope: !13640)
!13647 = !DILocation(line: 1313, column: 22, scope: !13640)
!13648 = !DILocation(line: 1313, column: 9, scope: !13640)
!13649 = !DILocation(line: 1313, column: 2, scope: !13640)
!13650 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2268, file: !2268, line: 1325, type: !13651, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13653)
!13651 = !DISubroutineType(types: !13652)
!13652 = !{null, !13643, !103}
!13653 = !{!13654, !13655, !13656}
!13654 = !DILocalVariable(name: "thread", arg: 1, scope: !13650, file: !2268, line: 1325, type: !13643)
!13655 = !DILocalVariable(name: "prio", arg: 2, scope: !13650, file: !2268, line: 1325, type: !103)
!13656 = !DILocalVariable(name: "th", scope: !13650, file: !2268, line: 1334, type: !2163)
!13657 = !DILocation(line: 0, scope: !13650)
!13658 = !DILocation(line: 1336, column: 2, scope: !13650)
!13659 = !DILocation(line: 1337, column: 1, scope: !13650)
!13660 = distinct !DISubprogram(name: "k_can_yield", scope: !2268, file: !2268, line: 1384, type: !5703, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !381)
!13661 = !DILocation(line: 1386, column: 11, scope: !13660)
!13662 = !DILocation(line: 1386, column: 29, scope: !13660)
!13663 = !DILocation(line: 1386, column: 32, scope: !13660)
!13664 = !DILocation(line: 1386, column: 46, scope: !13660)
!13665 = !DILocation(line: 1387, column: 28, scope: !13660)
!13666 = !DILocation(line: 1387, column: 4, scope: !13660)
!13667 = !DILocation(line: 1386, column: 2, scope: !13660)
!13668 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !366, file: !366, line: 989, type: !5703, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !381)
!13669 = !DILocation(line: 993, column: 10, scope: !13668)
!13670 = !DILocation(line: 993, column: 2, scope: !13668)
!13671 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2268, file: !2268, line: 1390, type: !2876, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13672)
!13672 = !{!13673}
!13673 = !DILocalVariable(name: "key", scope: !13671, file: !2268, line: 1396, type: !12160)
!13674 = !DILocation(line: 0, scope: !12168, inlinedAt: !13675)
!13675 = distinct !DILocation(line: 1396, column: 25, scope: !13671)
!13676 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13677)
!13677 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13675)
!13678 = !DILocation(line: 0, scope: !12177, inlinedAt: !13677)
!13679 = !DILocation(line: 0, scope: !13671)
!13680 = !DILocation(line: 1400, column: 18, scope: !13681)
!13681 = distinct !DILexicalBlock(scope: !13682, file: !2268, line: 1399, column: 36)
!13682 = distinct !DILexicalBlock(scope: !13671, file: !2268, line: 1398, column: 6)
!13683 = !DILocation(line: 0, scope: !12337, inlinedAt: !13684)
!13684 = distinct !DILocation(line: 1400, column: 3, scope: !13681)
!13685 = !DILocation(line: 266, column: 15, scope: !12337, inlinedAt: !13684)
!13686 = !DILocation(line: 266, column: 28, scope: !12337, inlinedAt: !13684)
!13687 = !DILocation(line: 0, scope: !12345, inlinedAt: !13688)
!13688 = distinct !DILocation(line: 268, column: 3, scope: !12349, inlinedAt: !13684)
!13689 = !DILocation(line: 234, column: 2, scope: !12345, inlinedAt: !13688)
!13690 = !DILocation(line: 1402, column: 15, scope: !13671)
!13691 = !DILocation(line: 0, scope: !12354, inlinedAt: !13692)
!13692 = distinct !DILocation(line: 1402, column: 2, scope: !13671)
!13693 = !DILocation(line: 252, column: 15, scope: !12354, inlinedAt: !13692)
!13694 = !DILocation(line: 252, column: 28, scope: !12354, inlinedAt: !13692)
!13695 = !DILocation(line: 0, scope: !12361, inlinedAt: !13696)
!13696 = distinct !DILocation(line: 254, column: 3, scope: !12365, inlinedAt: !13692)
!13697 = !DILocation(line: 0, scope: !12368, inlinedAt: !13698)
!13698 = distinct !DILocation(line: 229, column: 2, scope: !12361, inlinedAt: !13696)
!13699 = !DILocation(line: 188, column: 2, scope: !12378, inlinedAt: !13698)
!13700 = !DILocation(line: 188, column: 2, scope: !12380, inlinedAt: !13698)
!13701 = !DILocation(line: 0, scope: !12378, inlinedAt: !13698)
!13702 = !DILocation(line: 189, column: 7, scope: !12383, inlinedAt: !13698)
!13703 = !DILocation(line: 189, column: 35, scope: !12383, inlinedAt: !13698)
!13704 = !DILocation(line: 189, column: 7, scope: !12384, inlinedAt: !13698)
!13705 = !DILocation(line: 191, column: 21, scope: !12388, inlinedAt: !13698)
!13706 = !DILocation(line: 190, column: 4, scope: !12388, inlinedAt: !13698)
!13707 = !DILocation(line: 192, column: 4, scope: !12388, inlinedAt: !13698)
!13708 = distinct !{!13708, !13699, !13709}
!13709 = !DILocation(line: 194, column: 2, scope: !12378, inlinedAt: !13698)
!13710 = !DILocation(line: 196, column: 37, scope: !12368, inlinedAt: !13698)
!13711 = !DILocation(line: 196, column: 2, scope: !12368, inlinedAt: !13698)
!13712 = !DILocation(line: 197, column: 1, scope: !12368, inlinedAt: !13698)
!13713 = !DILocation(line: 1403, column: 2, scope: !13671)
!13714 = !DILocation(line: 0, scope: !12779, inlinedAt: !13715)
!13715 = distinct !DILocation(line: 1404, column: 2, scope: !13671)
!13716 = !DILocation(line: 196, column: 9, scope: !12779, inlinedAt: !13715)
!13717 = !DILocation(line: 1405, column: 1, scope: !13671)
!13718 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2268, file: !2268, line: 1459, type: !13719, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13721)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{!654, !12959}
!13721 = !{!13722, !13723, !13724}
!13722 = !DILocalVariable(name: "timeout", arg: 1, scope: !13718, file: !2268, line: 1459, type: !12959)
!13723 = !DILocalVariable(name: "ticks", scope: !13718, file: !2268, line: 1461, type: !1515)
!13724 = !DILocalVariable(name: "ret", scope: !13718, file: !2268, line: 1480, type: !654)
!13725 = !DILocation(line: 0, scope: !13718)
!13726 = !DILocation(line: 1468, column: 6, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13718, file: !2268, line: 1468, column: 6)
!13728 = !DILocation(line: 1468, column: 6, scope: !13718)
!13729 = !DILocation(line: 1469, column: 20, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13727, file: !2268, line: 1468, column: 40)
!13731 = !DILocation(line: 1469, column: 3, scope: !13730)
!13732 = !DILocation(line: 1473, column: 3, scope: !13730)
!13733 = !DILocation(line: 1478, column: 10, scope: !13718)
!13734 = !DILocation(line: 1480, column: 16, scope: !13718)
!13735 = !DILocation(line: 1485, column: 1, scope: !13718)
!13736 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3355, file: !3355, line: 310, type: !13737, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13739)
!13737 = !DISubroutineType(types: !13738)
!13738 = !{null, !13643}
!13739 = !{!13740}
!13740 = !DILocalVariable(name: "thread", arg: 1, scope: !13736, file: !3355, line: 310, type: !13643)
!13741 = !DILocation(line: 0, scope: !13736)
!13742 = !DILocation(line: 319, column: 2, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !13736, file: !3355, line: 319, column: 2)
!13744 = !{i64 2155104211}
!13745 = !DILocation(line: 320, column: 2, scope: !13736)
!13746 = !DILocation(line: 321, column: 1, scope: !13736)
!13747 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2268, file: !2268, line: 1415, type: !13748, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13750)
!13748 = !DISubroutineType(types: !13749)
!13749 = !{!654, !1515}
!13750 = !{!13751, !13752, !13753, !13754}
!13751 = !DILocalVariable(name: "ticks", arg: 1, scope: !13747, file: !2268, line: 1415, type: !1515)
!13752 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13747, file: !2268, line: 1418, type: !142)
!13753 = !DILocalVariable(name: "timeout", scope: !13747, file: !2268, line: 1430, type: !12959)
!13754 = !DILocalVariable(name: "key", scope: !13747, file: !2268, line: 1437, type: !12160)
!13755 = !DILocation(line: 0, scope: !13747)
!13756 = !DILocation(line: 1425, column: 12, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13747, file: !2268, line: 1425, column: 6)
!13758 = !DILocation(line: 1425, column: 6, scope: !13747)
!13759 = !DILocation(line: 1426, column: 3, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13757, file: !2268, line: 1425, column: 18)
!13761 = !DILocation(line: 1427, column: 3, scope: !13760)
!13762 = !DILocation(line: 1431, column: 24, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13747, file: !2268, line: 1431, column: 6)
!13764 = !DILocation(line: 1431, column: 6, scope: !13747)
!13765 = !DILocation(line: 1432, column: 35, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13763, file: !2268, line: 1431, column: 30)
!13767 = !DILocation(line: 1432, column: 27, scope: !13766)
!13768 = !DILocation(line: 1433, column: 2, scope: !13766)
!13769 = !DILocation(line: 1434, column: 27, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13763, file: !2268, line: 1433, column: 9)
!13771 = !DILocation(line: 0, scope: !13763)
!13772 = !DILocation(line: 0, scope: !12168, inlinedAt: !13773)
!13773 = distinct !DILocation(line: 1437, column: 25, scope: !13747)
!13774 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13775)
!13775 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13773)
!13776 = !DILocation(line: 0, scope: !12177, inlinedAt: !13775)
!13777 = !DILocation(line: 1440, column: 20, scope: !13747)
!13778 = !DILocation(line: 1440, column: 18, scope: !13747)
!13779 = !DILocation(line: 1442, column: 2, scope: !13747)
!13780 = !DILocation(line: 1443, column: 23, scope: !13747)
!13781 = !DILocation(line: 1443, column: 2, scope: !13747)
!13782 = !DILocation(line: 1444, column: 29, scope: !13747)
!13783 = !DILocation(line: 1444, column: 2, scope: !13747)
!13784 = !DILocation(line: 0, scope: !12779, inlinedAt: !13785)
!13785 = distinct !DILocation(line: 1446, column: 8, scope: !13747)
!13786 = !DILocation(line: 196, column: 9, scope: !12779, inlinedAt: !13785)
!13787 = !DILocation(line: 1450, column: 10, scope: !13747)
!13788 = !DILocation(line: 1450, column: 45, scope: !13747)
!13789 = !DILocation(line: 1450, column: 43, scope: !13747)
!13790 = !DILocation(line: 1451, column: 6, scope: !13747)
!13791 = !DILocation(line: 1457, column: 1, scope: !13747)
!13792 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12001, file: !12001, line: 1103, type: !12002, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13793)
!13793 = !{!13794}
!13794 = !DILocalVariable(name: "t", arg: 1, scope: !13792, file: !12001, line: 1103, type: !1367)
!13795 = !DILocation(line: 0, scope: !13792)
!13796 = !DILocation(line: 0, scope: !12215, inlinedAt: !13797)
!13797 = distinct !DILocation(line: 1106, column: 9, scope: !13792)
!13798 = !DILocation(line: 139, column: 13, scope: !13799, inlinedAt: !13797)
!13799 = distinct !DILexicalBlock(scope: !13800, file: !12001, line: 138, column: 10)
!13800 = distinct !DILexicalBlock(scope: !13801, file: !12001, line: 136, column: 7)
!13801 = distinct !DILexicalBlock(scope: !12236, file: !12001, line: 134, column: 17)
!13802 = !DILocation(line: 1106, column: 2, scope: !13792)
!13803 = distinct !DISubprogram(name: "k_yield", scope: !3355, file: !3355, line: 140, type: !2876, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !381)
!13804 = !DILocation(line: 148, column: 2, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13803, file: !3355, line: 148, column: 2)
!13806 = !{i64 2155103531}
!13807 = !DILocation(line: 149, column: 2, scope: !13803)
!13808 = !DILocation(line: 150, column: 1, scope: !13803)
!13809 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2268, file: !2268, line: 1495, type: !13810, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13812)
!13810 = !DISubroutineType(types: !13811)
!13811 = !{!654, !103}
!13812 = !{!13813, !13814}
!13813 = !DILocalVariable(name: "us", arg: 1, scope: !13809, file: !2268, line: 1495, type: !103)
!13814 = !DILocalVariable(name: "ticks", scope: !13809, file: !2268, line: 1497, type: !654)
!13815 = !DILocation(line: 0, scope: !13809)
!13816 = !DILocation(line: 1501, column: 31, scope: !13809)
!13817 = !DILocation(line: 1501, column: 10, scope: !13809)
!13818 = !DILocation(line: 1502, column: 23, scope: !13809)
!13819 = !DILocation(line: 1502, column: 10, scope: !13809)
!13820 = !DILocation(line: 1506, column: 31, scope: !13809)
!13821 = !DILocation(line: 1506, column: 9, scope: !13809)
!13822 = !DILocation(line: 1506, column: 2, scope: !13809)
!13823 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12001, file: !12001, line: 571, type: !12002, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13824)
!13824 = !{!13825}
!13825 = !DILocalVariable(name: "t", arg: 1, scope: !13823, file: !12001, line: 571, type: !1367)
!13826 = !DILocation(line: 0, scope: !13823)
!13827 = !DILocation(line: 0, scope: !12215, inlinedAt: !13828)
!13828 = distinct !DILocation(line: 574, column: 9, scope: !13823)
!13829 = !DILocation(line: 135, column: 5, scope: !13801, inlinedAt: !13828)
!13830 = !DILocation(line: 139, column: 13, scope: !13799, inlinedAt: !13828)
!13831 = !DILocation(line: 574, column: 2, scope: !13823)
!13832 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12001, file: !12001, line: 1187, type: !12002, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13833)
!13833 = !{!13834}
!13834 = !DILocalVariable(name: "t", arg: 1, scope: !13832, file: !12001, line: 1187, type: !1367)
!13835 = !DILocation(line: 0, scope: !13832)
!13836 = !DILocation(line: 0, scope: !12215, inlinedAt: !13837)
!13837 = distinct !DILocation(line: 1190, column: 9, scope: !13832)
!13838 = !DILocation(line: 145, column: 13, scope: !13839, inlinedAt: !13837)
!13839 = distinct !DILexicalBlock(scope: !12233, file: !12001, line: 144, column: 10)
!13840 = !DILocation(line: 1190, column: 2, scope: !13832)
!13841 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2268, file: !2268, line: 1517, type: !13737, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13842)
!13842 = !{!13843}
!13843 = !DILocalVariable(name: "thread", arg: 1, scope: !13841, file: !2268, line: 1517, type: !13643)
!13844 = !DILocation(line: 0, scope: !13841)
!13845 = !DILocation(line: 1521, column: 6, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13841, file: !2268, line: 1521, column: 6)
!13847 = !DILocation(line: 1521, column: 6, scope: !13841)
!13848 = !DILocation(line: 1525, column: 6, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13841, file: !2268, line: 1525, column: 6)
!13850 = !DILocation(line: 1525, column: 37, scope: !13849)
!13851 = !DILocation(line: 1525, column: 6, scope: !13841)
!13852 = !DILocation(line: 1527, column: 20, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13854, file: !2268, line: 1527, column: 7)
!13854 = distinct !DILexicalBlock(scope: !13849, file: !2268, line: 1525, column: 42)
!13855 = !DILocation(line: 1527, column: 33, scope: !13853)
!13856 = !DILocation(line: 1527, column: 7, scope: !13854)
!13857 = !DILocation(line: 1532, column: 2, scope: !13841)
!13858 = !DILocation(line: 1533, column: 2, scope: !13841)
!13859 = !DILocation(line: 1031, column: 3, scope: !12812, inlinedAt: !13860)
!13860 = distinct !DILocation(line: 48, column: 10, scope: !12816, inlinedAt: !13861)
!13861 = distinct !DILocation(line: 1537, column: 7, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13841, file: !2268, line: 1537, column: 6)
!13863 = !DILocation(line: 0, scope: !12812, inlinedAt: !13860)
!13864 = !DILocation(line: 48, column: 9, scope: !12816, inlinedAt: !13861)
!13865 = !DILocation(line: 1537, column: 6, scope: !13841)
!13866 = !DILocation(line: 1538, column: 3, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13862, file: !2268, line: 1537, column: 25)
!13868 = !DILocation(line: 1539, column: 2, scope: !13867)
!13869 = !DILocation(line: 1540, column: 1, scope: !13841)
!13870 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11440, file: !11440, line: 101, type: !12286, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13871)
!13871 = !{!13872}
!13872 = !DILocalVariable(name: "thread", arg: 1, scope: !13870, file: !11440, line: 101, type: !2163)
!13873 = !DILocation(line: 0, scope: !13870)
!13874 = !DILocation(line: 103, column: 23, scope: !13870)
!13875 = !DILocation(line: 103, column: 36, scope: !13870)
!13876 = !DILocation(line: 103, column: 55, scope: !13870)
!13877 = !DILocation(line: 103, column: 2, scope: !13870)
!13878 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2268, file: !2268, line: 1567, type: !13879, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13881)
!13879 = !DISubroutineType(types: !13880)
!13880 = !{!13643}
!13881 = !{!13882}
!13882 = !DILocalVariable(name: "ret", scope: !13878, file: !2268, line: 1577, type: !13643)
!13883 = !DILocation(line: 1577, column: 30, scope: !13878)
!13884 = !DILocation(line: 0, scope: !13878)
!13885 = !DILocation(line: 1582, column: 2, scope: !13878)
!13886 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2268, file: !2268, line: 1593, type: !5978, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !381)
!13887 = !DILocation(line: 1031, column: 3, scope: !12812, inlinedAt: !13888)
!13888 = distinct !DILocation(line: 48, column: 10, scope: !12816, inlinedAt: !13889)
!13889 = distinct !DILocation(line: 1595, column: 10, scope: !13886)
!13890 = !DILocation(line: 0, scope: !12812, inlinedAt: !13888)
!13891 = !DILocation(line: 48, column: 9, scope: !12816, inlinedAt: !13889)
!13892 = !DILocation(line: 1595, column: 27, scope: !13886)
!13893 = !DILocation(line: 1595, column: 41, scope: !13886)
!13894 = !DILocation(line: 1595, column: 30, scope: !13886)
!13895 = !DILocation(line: 1595, column: 2, scope: !13886)
!13896 = distinct !DISubprogram(name: "z_thread_abort", scope: !2268, file: !2268, line: 1725, type: !12126, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13897)
!13897 = !{!13898, !13899}
!13898 = !DILocalVariable(name: "thread", arg: 1, scope: !13896, file: !2268, line: 1725, type: !2163)
!13899 = !DILocalVariable(name: "key", scope: !13896, file: !2268, line: 1727, type: !12160)
!13900 = !DILocation(line: 0, scope: !13896)
!13901 = !DILocation(line: 0, scope: !12168, inlinedAt: !13902)
!13902 = distinct !DILocation(line: 1727, column: 25, scope: !13896)
!13903 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !13904)
!13904 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !13902)
!13905 = !DILocation(line: 0, scope: !12177, inlinedAt: !13904)
!13906 = !DILocation(line: 1729, column: 20, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13896, file: !2268, line: 1729, column: 6)
!13908 = !DILocation(line: 1729, column: 33, scope: !13907)
!13909 = !DILocation(line: 1729, column: 48, scope: !13907)
!13910 = !DILocation(line: 1729, column: 6, scope: !13896)
!13911 = !DILocation(line: 0, scope: !12195, inlinedAt: !13912)
!13912 = distinct !DILocation(line: 1730, column: 3, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13907, file: !2268, line: 1729, column: 54)
!13914 = !DILocation(line: 0, scope: !12203, inlinedAt: !13915)
!13915 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13912)
!13916 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13915)
!13917 = !DILocation(line: 1732, column: 3, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13913, file: !2268, line: 1732, column: 3)
!13919 = !{i64 2155840941, i64 2155840957, i64 2155840983, i64 2155841011, i64 2155841031}
!13920 = !DILocation(line: 1733, column: 3, scope: !13913)
!13921 = !DILocation(line: 1736, column: 20, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13896, file: !2268, line: 1736, column: 6)
!13923 = !DILocation(line: 1736, column: 33, scope: !13922)
!13924 = !DILocation(line: 1736, column: 49, scope: !13922)
!13925 = !DILocation(line: 1736, column: 6, scope: !13896)
!13926 = !DILocation(line: 0, scope: !12195, inlinedAt: !13927)
!13927 = distinct !DILocation(line: 1737, column: 3, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13922, file: !2268, line: 1736, column: 56)
!13929 = !DILocation(line: 0, scope: !12203, inlinedAt: !13930)
!13930 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13927)
!13931 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13930)
!13932 = !DILocation(line: 1738, column: 3, scope: !13928)
!13933 = !DILocation(line: 1775, column: 2, scope: !13896)
!13934 = !DILocation(line: 1776, column: 16, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13896, file: !2268, line: 1776, column: 6)
!13936 = !DILocation(line: 1776, column: 13, scope: !13935)
!13937 = !DILocation(line: 1776, column: 25, scope: !13935)
!13938 = !DILocation(line: 1031, column: 3, scope: !12812, inlinedAt: !13939)
!13939 = distinct !DILocation(line: 48, column: 10, scope: !12816, inlinedAt: !13940)
!13940 = distinct !DILocation(line: 1776, column: 29, scope: !13935)
!13941 = !DILocation(line: 0, scope: !12812, inlinedAt: !13939)
!13942 = !DILocation(line: 48, column: 9, scope: !12816, inlinedAt: !13940)
!13943 = !DILocation(line: 1776, column: 6, scope: !13896)
!13944 = !DILocation(line: 0, scope: !12779, inlinedAt: !13945)
!13945 = distinct !DILocation(line: 1777, column: 3, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13935, file: !2268, line: 1776, column: 47)
!13947 = !DILocation(line: 196, column: 9, scope: !12779, inlinedAt: !13945)
!13948 = !DILocation(line: 1779, column: 2, scope: !13946)
!13949 = !DILocation(line: 0, scope: !12195, inlinedAt: !13950)
!13950 = distinct !DILocation(line: 1780, column: 2, scope: !13896)
!13951 = !DILocation(line: 0, scope: !12203, inlinedAt: !13952)
!13952 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !13950)
!13953 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !13952)
!13954 = !DILocation(line: 1781, column: 1, scope: !13896)
!13955 = distinct !DISubprogram(name: "end_thread", scope: !2268, file: !2268, line: 1690, type: !12126, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13956)
!13956 = !{!13957}
!13957 = !DILocalVariable(name: "thread", arg: 1, scope: !13955, file: !2268, line: 1690, type: !2163)
!13958 = !DILocation(line: 0, scope: !13955)
!13959 = !DILocation(line: 1695, column: 20, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13955, file: !2268, line: 1695, column: 6)
!13961 = !DILocation(line: 1695, column: 33, scope: !13960)
!13962 = !DILocation(line: 1695, column: 49, scope: !13960)
!13963 = !DILocation(line: 1695, column: 6, scope: !13955)
!13964 = !DILocation(line: 1697, column: 29, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13960, file: !2268, line: 1695, column: 56)
!13966 = !DILocation(line: 1698, column: 7, scope: !13967)
!13967 = distinct !DILexicalBlock(scope: !13965, file: !2268, line: 1698, column: 7)
!13968 = !DILocation(line: 1698, column: 7, scope: !13965)
!13969 = !DILocation(line: 0, scope: !12337, inlinedAt: !13970)
!13970 = distinct !DILocation(line: 1699, column: 4, scope: !13971)
!13971 = distinct !DILexicalBlock(scope: !13967, file: !2268, line: 1698, column: 35)
!13972 = !DILocation(line: 266, column: 28, scope: !12337, inlinedAt: !13970)
!13973 = !DILocation(line: 0, scope: !12345, inlinedAt: !13974)
!13974 = distinct !DILocation(line: 268, column: 3, scope: !12349, inlinedAt: !13970)
!13975 = !DILocation(line: 234, column: 2, scope: !12345, inlinedAt: !13974)
!13976 = !DILocation(line: 1700, column: 3, scope: !13971)
!13977 = !DILocation(line: 1701, column: 20, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13965, file: !2268, line: 1701, column: 7)
!13979 = !DILocation(line: 1701, column: 30, scope: !13978)
!13980 = !DILocation(line: 1701, column: 7, scope: !13965)
!13981 = !DILocation(line: 1702, column: 4, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13978, file: !2268, line: 1701, column: 39)
!13983 = !DILocation(line: 1703, column: 3, scope: !13982)
!13984 = !DILocation(line: 1704, column: 9, scope: !13965)
!13985 = !DILocation(line: 1705, column: 23, scope: !13965)
!13986 = !DILocation(line: 1705, column: 3, scope: !13965)
!13987 = !DILocation(line: 1706, column: 3, scope: !13965)
!13988 = !DILocation(line: 1722, column: 2, scope: !13965)
!13989 = !DILocation(line: 1723, column: 1, scope: !13955)
!13990 = distinct !DISubprogram(name: "unpend_all", scope: !2268, file: !2268, line: 1674, type: !13991, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !13993)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{null, !2194}
!13993 = !{!13994, !13995}
!13994 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13990, file: !2268, line: 1674, type: !2194)
!13995 = !DILocalVariable(name: "thread", scope: !13990, file: !2268, line: 1676, type: !2163)
!13996 = !DILocation(line: 0, scope: !13990)
!13997 = !DILocation(line: 1678, column: 19, scope: !13990)
!13998 = !DILocation(line: 1678, column: 41, scope: !13990)
!13999 = !DILocation(line: 1678, column: 2, scope: !13990)
!14000 = !DILocation(line: 1679, column: 3, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13990, file: !2268, line: 1678, column: 50)
!14002 = !DILocation(line: 1680, column: 9, scope: !14001)
!14003 = !DILocalVariable(name: "thread", arg: 1, scope: !14004, file: !11460, line: 65, type: !2163)
!14004 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11460, file: !11460, line: 65, type: !14005, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !14007)
!14005 = !DISubroutineType(types: !14006)
!14006 = !{null, !2163, !32}
!14007 = !{!14003, !14008}
!14008 = !DILocalVariable(name: "value", arg: 2, scope: !14004, file: !11460, line: 65, type: !32)
!14009 = !DILocation(line: 0, scope: !14004, inlinedAt: !14010)
!14010 = distinct !DILocation(line: 1681, column: 3, scope: !14001)
!14011 = !DILocation(line: 67, column: 15, scope: !14004, inlinedAt: !14010)
!14012 = !DILocation(line: 67, column: 33, scope: !14004, inlinedAt: !14010)
!14013 = !DILocation(line: 1682, column: 3, scope: !14001)
!14014 = distinct !{!14014, !13999, !14015}
!14015 = !DILocation(line: 1683, column: 2, scope: !13990)
!14016 = !DILocation(line: 1684, column: 1, scope: !13990)
!14017 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2268, file: !2268, line: 1794, type: !14018, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !14020)
!14018 = !DISubroutineType(types: !14019)
!14019 = !{!103, !2163, !12959}
!14020 = !{!14021, !14022, !14023, !14024}
!14021 = !DILocalVariable(name: "thread", arg: 1, scope: !14017, file: !2268, line: 1794, type: !2163)
!14022 = !DILocalVariable(name: "timeout", arg: 2, scope: !14017, file: !2268, line: 1794, type: !12959)
!14023 = !DILocalVariable(name: "key", scope: !14017, file: !2268, line: 1796, type: !12160)
!14024 = !DILocalVariable(name: "ret", scope: !14017, file: !2268, line: 1797, type: !103)
!14025 = !DILocation(line: 0, scope: !14017)
!14026 = !DILocation(line: 0, scope: !12168, inlinedAt: !14027)
!14027 = distinct !DILocation(line: 1796, column: 25, scope: !14017)
!14028 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !14029)
!14029 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !14027)
!14030 = !DILocation(line: 0, scope: !12177, inlinedAt: !14029)
!14031 = !DILocation(line: 1801, column: 20, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !14017, file: !2268, line: 1801, column: 6)
!14033 = !DILocation(line: 1801, column: 33, scope: !14032)
!14034 = !DILocation(line: 1801, column: 49, scope: !14032)
!14035 = !DILocation(line: 1801, column: 6, scope: !14017)
!14036 = !DILocation(line: 1803, column: 13, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14032, file: !2268, line: 1803, column: 13)
!14038 = !DILocation(line: 1803, column: 13, scope: !14032)
!14039 = !DILocation(line: 1805, column: 24, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14037, file: !2268, line: 1805, column: 13)
!14041 = !DILocation(line: 1805, column: 21, scope: !14040)
!14042 = !DILocation(line: 1805, column: 34, scope: !14040)
!14043 = !DILocation(line: 1806, column: 20, scope: !14040)
!14044 = !DILocation(line: 1806, column: 44, scope: !14040)
!14045 = !DILocation(line: 1806, column: 30, scope: !14040)
!14046 = !DILocation(line: 1805, column: 13, scope: !14037)
!14047 = !DILocation(line: 1810, column: 42, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14040, file: !2268, line: 1808, column: 9)
!14049 = !DILocation(line: 1810, column: 3, scope: !14048)
!14050 = !DILocation(line: 1811, column: 22, scope: !14048)
!14051 = !DILocation(line: 1811, column: 3, scope: !14048)
!14052 = !DILocation(line: 0, scope: !12779, inlinedAt: !14053)
!14053 = distinct !DILocation(line: 1814, column: 9, scope: !14048)
!14054 = !DILocation(line: 196, column: 9, scope: !12779, inlinedAt: !14053)
!14055 = !DILocation(line: 1817, column: 3, scope: !14048)
!14056 = !DILocation(line: 0, scope: !14032)
!14057 = !DILocation(line: 0, scope: !12195, inlinedAt: !14058)
!14058 = distinct !DILocation(line: 1822, column: 2, scope: !14017)
!14059 = !DILocation(line: 0, scope: !12203, inlinedAt: !14060)
!14060 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !14058)
!14061 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !14060)
!14062 = !DILocation(line: 1823, column: 2, scope: !14017)
!14063 = !DILocation(line: 1824, column: 1, scope: !14017)
!14064 = distinct !DISubprogram(name: "z_sched_wake", scope: !2268, file: !2268, line: 1882, type: !14065, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !14067)
!14065 = !DISubroutineType(types: !14066)
!14066 = !{!134, !2194, !103, !104}
!14067 = !{!14068, !14069, !14070, !14071, !14072, !14073, !14075}
!14068 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14064, file: !2268, line: 1882, type: !2194)
!14069 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14064, file: !2268, line: 1882, type: !103)
!14070 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14064, file: !2268, line: 1882, type: !104)
!14071 = !DILocalVariable(name: "thread", scope: !14064, file: !2268, line: 1884, type: !2163)
!14072 = !DILocalVariable(name: "ret", scope: !14064, file: !2268, line: 1885, type: !134)
!14073 = !DILocalVariable(name: "__i", scope: !14074, file: !2268, line: 1887, type: !12160)
!14074 = distinct !DILexicalBlock(scope: !14064, file: !2268, line: 1887, column: 2)
!14075 = !DILocalVariable(name: "__key", scope: !14074, file: !2268, line: 1887, type: !12160)
!14076 = !DILocation(line: 0, scope: !14064)
!14077 = !DILocation(line: 0, scope: !14074)
!14078 = !DILocation(line: 0, scope: !12168, inlinedAt: !14079)
!14079 = distinct !DILocation(line: 1887, column: 2, scope: !14074)
!14080 = !DILocation(line: 55, column: 2, scope: !12177, inlinedAt: !14081)
!14081 = distinct !DILocation(line: 145, column: 10, scope: !12168, inlinedAt: !14079)
!14082 = !DILocation(line: 0, scope: !12177, inlinedAt: !14081)
!14083 = !DILocation(line: 1888, column: 12, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14085, file: !2268, line: 1887, column: 26)
!14085 = distinct !DILexicalBlock(scope: !14074, file: !2268, line: 1887, column: 2)
!14086 = !DILocation(line: 1890, column: 14, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14084, file: !2268, line: 1890, column: 7)
!14088 = !DILocation(line: 1890, column: 7, scope: !14084)
!14089 = !DILocalVariable(name: "thread", arg: 1, scope: !14090, file: !14091, line: 134, type: !2163)
!14090 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14091, file: !14091, line: 134, type: !14092, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !14094)
!14091 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14092 = !DISubroutineType(types: !14093)
!14093 = !{null, !2163, !32, !104}
!14094 = !{!14089, !14095, !14096}
!14095 = !DILocalVariable(name: "value", arg: 2, scope: !14090, file: !14091, line: 135, type: !32)
!14096 = !DILocalVariable(name: "data", arg: 3, scope: !14090, file: !14091, line: 136, type: !104)
!14097 = !DILocation(line: 0, scope: !14090, inlinedAt: !14098)
!14098 = distinct !DILocation(line: 1891, column: 4, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14087, file: !2268, line: 1890, column: 23)
!14100 = !DILocation(line: 0, scope: !14004, inlinedAt: !14101)
!14101 = distinct !DILocation(line: 138, column: 2, scope: !14090, inlinedAt: !14098)
!14102 = !DILocation(line: 67, column: 15, scope: !14004, inlinedAt: !14101)
!14103 = !DILocation(line: 67, column: 33, scope: !14004, inlinedAt: !14101)
!14104 = !DILocation(line: 139, column: 15, scope: !14090, inlinedAt: !14098)
!14105 = !DILocation(line: 139, column: 25, scope: !14090, inlinedAt: !14098)
!14106 = !DILocation(line: 1894, column: 4, scope: !14099)
!14107 = !DILocation(line: 1895, column: 10, scope: !14099)
!14108 = !DILocation(line: 1896, column: 4, scope: !14099)
!14109 = !DILocation(line: 1898, column: 3, scope: !14099)
!14110 = !DILocation(line: 0, scope: !12195, inlinedAt: !14111)
!14111 = distinct !DILocation(line: 1887, column: 2, scope: !14085)
!14112 = !DILocation(line: 0, scope: !12203, inlinedAt: !14113)
!14113 = distinct !DILocation(line: 215, column: 2, scope: !12195, inlinedAt: !14111)
!14114 = !DILocation(line: 95, column: 2, scope: !12203, inlinedAt: !14113)
!14115 = !DILocation(line: 1901, column: 2, scope: !14064)
!14116 = distinct !DISubprogram(name: "z_sched_wait", scope: !2268, file: !2268, line: 1904, type: !14117, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !14120)
!14117 = !DISubroutineType(types: !14118)
!14118 = !{!103, !12171, !12160, !2194, !12959, !14119}
!14119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!14120 = !{!14121, !14122, !14123, !14124, !14125, !14126}
!14121 = !DILocalVariable(name: "lock", arg: 1, scope: !14116, file: !2268, line: 1904, type: !12171)
!14122 = !DILocalVariable(name: "key", arg: 2, scope: !14116, file: !2268, line: 1904, type: !12160)
!14123 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14116, file: !2268, line: 1905, type: !2194)
!14124 = !DILocalVariable(name: "timeout", arg: 4, scope: !14116, file: !2268, line: 1905, type: !12959)
!14125 = !DILocalVariable(name: "data", arg: 5, scope: !14116, file: !2268, line: 1905, type: !14119)
!14126 = !DILocalVariable(name: "ret", scope: !14116, file: !2268, line: 1907, type: !103)
!14127 = !DILocation(line: 0, scope: !14116)
!14128 = !DILocation(line: 1907, column: 12, scope: !14116)
!14129 = !DILocation(line: 1909, column: 11, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14116, file: !2268, line: 1909, column: 6)
!14131 = !DILocation(line: 1909, column: 6, scope: !14116)
!14132 = !DILocation(line: 1910, column: 11, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14130, file: !2268, line: 1909, column: 20)
!14134 = !DILocation(line: 1910, column: 26, scope: !14133)
!14135 = !DILocation(line: 1910, column: 9, scope: !14133)
!14136 = !DILocation(line: 1911, column: 2, scope: !14133)
!14137 = !DILocation(line: 1912, column: 2, scope: !14116)
!14138 = distinct !DISubprogram(name: "z_data_copy", scope: !14139, file: !14139, line: 22, type: !2876, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !381)
!14139 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14140 = !DILocation(line: 24, column: 2, scope: !14138)
!14141 = !DILocation(line: 27, column: 2, scope: !14138)
!14142 = !DILocation(line: 71, column: 1, scope: !14138)
!14143 = distinct !DISubprogram(name: "z_add_timeout", scope: !2305, file: !2305, line: 88, type: !14144, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14150)
!14144 = !DISubroutineType(types: !14145)
!14145 = !{null, !2278, !2297, !14146}
!14146 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1516, line: 67, baseType: !14147)
!14147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1516, line: 65, size: 64, elements: !14148)
!14148 = !{!14149}
!14149 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14147, file: !1516, line: 66, baseType: !1515, size: 64)
!14150 = !{!14151, !14152, !14153, !14154, !14160, !14161, !14164, !14167}
!14151 = !DILocalVariable(name: "to", arg: 1, scope: !14143, file: !2305, line: 88, type: !2278)
!14152 = !DILocalVariable(name: "fn", arg: 2, scope: !14143, file: !2305, line: 88, type: !2297)
!14153 = !DILocalVariable(name: "timeout", arg: 3, scope: !14143, file: !2305, line: 89, type: !14146)
!14154 = !DILocalVariable(name: "__i", scope: !14155, file: !2305, line: 102, type: !14156)
!14155 = distinct !DILexicalBlock(scope: !14143, file: !2305, line: 102, column: 2)
!14156 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !380, line: 106, baseType: !14157)
!14157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !380, line: 32, size: 32, elements: !14158)
!14158 = !{!14159}
!14159 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14157, file: !380, line: 33, baseType: !103, size: 32)
!14160 = !DILocalVariable(name: "__key", scope: !14155, file: !2305, line: 102, type: !14156)
!14161 = !DILocalVariable(name: "t", scope: !14162, file: !2305, line: 103, type: !2278)
!14162 = distinct !DILexicalBlock(scope: !14163, file: !2305, line: 102, column: 24)
!14163 = distinct !DILexicalBlock(scope: !14155, file: !2305, line: 102, column: 2)
!14164 = !DILocalVariable(name: "ticks", scope: !14165, file: !2305, line: 107, type: !1515)
!14165 = distinct !DILexicalBlock(scope: !14166, file: !2305, line: 106, column: 39)
!14166 = distinct !DILexicalBlock(scope: !14162, file: !2305, line: 105, column: 7)
!14167 = !DILocalVariable(name: "next_time", scope: !14168, file: !2305, line: 137, type: !654)
!14168 = distinct !DILexicalBlock(scope: !14169, file: !2305, line: 127, column: 22)
!14169 = distinct !DILexicalBlock(scope: !14162, file: !2305, line: 127, column: 7)
!14170 = !DILocation(line: 0, scope: !14143)
!14171 = !DILocation(line: 91, column: 6, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14143, file: !2305, line: 91, column: 6)
!14173 = !DILocation(line: 91, column: 6, scope: !14143)
!14174 = !DILocation(line: 100, column: 6, scope: !14143)
!14175 = !DILocation(line: 100, column: 9, scope: !14143)
!14176 = !DILocation(line: 0, scope: !14155)
!14177 = !DILocalVariable(name: "l", arg: 1, scope: !14178, file: !380, line: 136, type: !14181)
!14178 = distinct !DISubprogram(name: "k_spin_lock", scope: !380, file: !380, line: 136, type: !14179, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14182)
!14179 = !DISubroutineType(types: !14180)
!14180 = !{!14156, !14181}
!14181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 32)
!14182 = !{!14177, !14183}
!14183 = !DILocalVariable(name: "k", scope: !14178, file: !380, line: 139, type: !14156)
!14184 = !DILocation(line: 0, scope: !14178, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 102, column: 2, scope: !14155)
!14186 = !DILocation(line: 55, column: 2, scope: !14187, inlinedAt: !14191)
!14187 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4734, file: !4734, line: 42, type: !4735, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14188)
!14188 = !{!14189, !14190}
!14189 = !DILocalVariable(name: "key", scope: !14187, file: !4734, line: 44, type: !32)
!14190 = !DILocalVariable(name: "tmp", scope: !14187, file: !4734, line: 53, type: !32)
!14191 = distinct !DILocation(line: 145, column: 10, scope: !14178, inlinedAt: !14185)
!14192 = !{i64 2283706}
!14193 = !DILocation(line: 0, scope: !14187, inlinedAt: !14191)
!14194 = !DILocation(line: 106, column: 33, scope: !14166)
!14195 = !DILocation(line: 105, column: 7, scope: !14162)
!14196 = !DILocation(line: 107, column: 50, scope: !14165)
!14197 = !DILocation(line: 107, column: 48, scope: !14165)
!14198 = !DILocation(line: 0, scope: !14165)
!14199 = !DILocation(line: 109, column: 17, scope: !14165)
!14200 = !DILocation(line: 110, column: 3, scope: !14165)
!14201 = !DILocation(line: 111, column: 31, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14166, file: !2305, line: 110, column: 10)
!14203 = !DILocation(line: 111, column: 37, scope: !14202)
!14204 = !DILocation(line: 111, column: 35, scope: !14202)
!14205 = !DILocation(line: 0, scope: !14166)
!14206 = !DILocation(line: 109, column: 8, scope: !14165)
!14207 = !DILocation(line: 109, column: 15, scope: !14165)
!14208 = !DILocation(line: 114, column: 12, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14162, file: !2305, line: 114, column: 3)
!14210 = !DILocation(line: 0, scope: !14162)
!14211 = !DILocation(line: 114, column: 3, scope: !14209)
!14212 = !DILocation(line: 115, column: 24, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14214, file: !2305, line: 115, column: 8)
!14214 = distinct !DILexicalBlock(scope: !14215, file: !2305, line: 114, column: 45)
!14215 = distinct !DILexicalBlock(scope: !14209, file: !2305, line: 114, column: 3)
!14216 = !DILocation(line: 115, column: 11, scope: !14213)
!14217 = !DILocation(line: 115, column: 18, scope: !14213)
!14218 = !DILocation(line: 115, column: 8, scope: !14214)
!14219 = !DILocation(line: 116, column: 15, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14213, file: !2305, line: 115, column: 32)
!14221 = !DILocation(line: 117, column: 26, scope: !14220)
!14222 = !DILocation(line: 117, column: 37, scope: !14220)
!14223 = !DILocation(line: 117, column: 5, scope: !14220)
!14224 = !DILocation(line: 123, column: 7, scope: !14162)
!14225 = !DILocation(line: 120, column: 15, scope: !14214)
!14226 = !DILocation(line: 114, column: 36, scope: !14215)
!14227 = distinct !{!14227, !14211, !14228}
!14228 = !DILocation(line: 121, column: 3, scope: !14209)
!14229 = !DILocation(line: 124, column: 41, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14231, file: !2305, line: 123, column: 18)
!14231 = distinct !DILexicalBlock(scope: !14162, file: !2305, line: 123, column: 7)
!14232 = !DILocation(line: 124, column: 4, scope: !14230)
!14233 = !DILocation(line: 125, column: 3, scope: !14230)
!14234 = !DILocation(line: 127, column: 13, scope: !14169)
!14235 = !DILocation(line: 127, column: 10, scope: !14169)
!14236 = !DILocation(line: 127, column: 7, scope: !14162)
!14237 = !DILocation(line: 137, column: 24, scope: !14168)
!14238 = !DILocation(line: 0, scope: !14168)
!14239 = !DILocation(line: 139, column: 18, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14168, file: !2305, line: 139, column: 8)
!14241 = !DILocation(line: 139, column: 23, scope: !14240)
!14242 = !DILocation(line: 141, column: 5, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14240, file: !2305, line: 140, column: 48)
!14244 = !DILocation(line: 142, column: 4, scope: !14243)
!14245 = !DILocalVariable(name: "key", arg: 2, scope: !14246, file: !380, line: 190, type: !14156)
!14246 = distinct !DISubprogram(name: "k_spin_unlock", scope: !380, file: !380, line: 189, type: !14247, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14249)
!14247 = !DISubroutineType(types: !14248)
!14248 = !{null, !14181, !14156}
!14249 = !{!14250, !14245}
!14250 = !DILocalVariable(name: "l", arg: 1, scope: !14246, file: !380, line: 189, type: !14181)
!14251 = !DILocation(line: 0, scope: !14246, inlinedAt: !14252)
!14252 = distinct !DILocation(line: 102, column: 2, scope: !14163)
!14253 = !DILocalVariable(name: "key", arg: 1, scope: !14254, file: !4734, line: 84, type: !32)
!14254 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4734, file: !4734, line: 84, type: !4745, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14255)
!14255 = !{!14253}
!14256 = !DILocation(line: 0, scope: !14254, inlinedAt: !14257)
!14257 = distinct !DILocation(line: 215, column: 2, scope: !14246, inlinedAt: !14252)
!14258 = !DILocation(line: 95, column: 2, scope: !14254, inlinedAt: !14257)
!14259 = !{i64 2284523}
!14260 = !DILocation(line: 148, column: 1, scope: !14143)
!14261 = distinct !DISubprogram(name: "elapsed", scope: !2305, file: !2305, line: 62, type: !14262, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !381)
!14262 = !DISubroutineType(types: !14263)
!14263 = !{!654}
!14264 = !DILocation(line: 64, column: 9, scope: !14261)
!14265 = !DILocation(line: 64, column: 28, scope: !14261)
!14266 = !DILocation(line: 64, column: 35, scope: !14261)
!14267 = !DILocation(line: 64, column: 2, scope: !14261)
!14268 = distinct !DISubprogram(name: "first", scope: !2305, file: !2305, line: 39, type: !14269, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14271)
!14269 = !DISubroutineType(types: !14270)
!14270 = !{!2278}
!14271 = !{!14272}
!14272 = !DILocalVariable(name: "t", scope: !14268, file: !2305, line: 41, type: !14273)
!14273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 32)
!14274 = !DILocation(line: 41, column: 19, scope: !14268)
!14275 = !DILocation(line: 0, scope: !14268)
!14276 = !DILocation(line: 43, column: 9, scope: !14268)
!14277 = !DILocation(line: 43, column: 2, scope: !14268)
!14278 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !280, file: !280, line: 443, type: !14279, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14281)
!14279 = !DISubroutineType(types: !14280)
!14280 = !{null, !14273, !14273}
!14281 = !{!14282, !14283, !14284}
!14282 = !DILocalVariable(name: "successor", arg: 1, scope: !14278, file: !280, line: 443, type: !14273)
!14283 = !DILocalVariable(name: "node", arg: 2, scope: !14278, file: !280, line: 443, type: !14273)
!14284 = !DILocalVariable(name: "prev", scope: !14278, file: !280, line: 445, type: !14285)
!14285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14273)
!14286 = !DILocation(line: 0, scope: !14278)
!14287 = !DILocation(line: 445, column: 39, scope: !14278)
!14288 = !DILocation(line: 447, column: 8, scope: !14278)
!14289 = !DILocation(line: 447, column: 13, scope: !14278)
!14290 = !DILocation(line: 448, column: 8, scope: !14278)
!14291 = !DILocation(line: 448, column: 13, scope: !14278)
!14292 = !DILocation(line: 449, column: 8, scope: !14278)
!14293 = !DILocation(line: 449, column: 13, scope: !14278)
!14294 = !DILocation(line: 450, column: 18, scope: !14278)
!14295 = !DILocation(line: 451, column: 1, scope: !14278)
!14296 = distinct !DISubprogram(name: "next", scope: !2305, file: !2305, line: 46, type: !14297, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14299)
!14297 = !DISubroutineType(types: !14298)
!14298 = !{!2278, !2278}
!14299 = !{!14300, !14301}
!14300 = !DILocalVariable(name: "t", arg: 1, scope: !14296, file: !2305, line: 46, type: !2278)
!14301 = !DILocalVariable(name: "n", scope: !14296, file: !2305, line: 48, type: !14273)
!14302 = !DILocation(line: 0, scope: !14296)
!14303 = !DILocation(line: 48, column: 58, scope: !14296)
!14304 = !DILocation(line: 48, column: 19, scope: !14296)
!14305 = !DILocation(line: 50, column: 9, scope: !14296)
!14306 = !DILocation(line: 50, column: 2, scope: !14296)
!14307 = distinct !DISubprogram(name: "sys_dlist_append", scope: !280, file: !280, line: 404, type: !14308, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14311)
!14308 = !DISubroutineType(types: !14309)
!14309 = !{null, !14310, !14273}
!14310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!14311 = !{!14312, !14313, !14314}
!14312 = !DILocalVariable(name: "list", arg: 1, scope: !14307, file: !280, line: 404, type: !14310)
!14313 = !DILocalVariable(name: "node", arg: 2, scope: !14307, file: !280, line: 404, type: !14273)
!14314 = !DILocalVariable(name: "tail", scope: !14307, file: !280, line: 406, type: !14285)
!14315 = !DILocation(line: 0, scope: !14307)
!14316 = !DILocation(line: 406, column: 34, scope: !14307)
!14317 = !DILocation(line: 408, column: 8, scope: !14307)
!14318 = !DILocation(line: 408, column: 13, scope: !14307)
!14319 = !DILocation(line: 409, column: 8, scope: !14307)
!14320 = !DILocation(line: 409, column: 13, scope: !14307)
!14321 = !DILocation(line: 411, column: 8, scope: !14307)
!14322 = !DILocation(line: 411, column: 13, scope: !14307)
!14323 = !DILocation(line: 412, column: 13, scope: !14307)
!14324 = !DILocation(line: 413, column: 1, scope: !14307)
!14325 = distinct !DISubprogram(name: "next_timeout", scope: !2305, file: !2305, line: 67, type: !14262, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14326)
!14326 = !{!14327, !14328, !14329}
!14327 = !DILocalVariable(name: "to", scope: !14325, file: !2305, line: 69, type: !2278)
!14328 = !DILocalVariable(name: "ticks_elapsed", scope: !14325, file: !2305, line: 70, type: !654)
!14329 = !DILocalVariable(name: "ret", scope: !14325, file: !2305, line: 71, type: !654)
!14330 = !DILocation(line: 69, column: 24, scope: !14325)
!14331 = !DILocation(line: 0, scope: !14325)
!14332 = !DILocation(line: 70, column: 26, scope: !14325)
!14333 = !DILocation(line: 73, column: 10, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14325, file: !2305, line: 73, column: 6)
!14335 = !DILocation(line: 73, column: 19, scope: !14334)
!14336 = !DILocation(line: 74, column: 21, scope: !14334)
!14337 = !DILocation(line: 74, column: 30, scope: !14334)
!14338 = !DILocation(line: 74, column: 28, scope: !14334)
!14339 = !DILocation(line: 74, column: 45, scope: !14334)
!14340 = !DILocation(line: 73, column: 6, scope: !14325)
!14341 = !DILocation(line: 77, column: 9, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14334, file: !2305, line: 76, column: 9)
!14343 = !DILocation(line: 0, scope: !14334)
!14344 = !DILocation(line: 81, column: 20, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14325, file: !2305, line: 81, column: 6)
!14346 = !DILocation(line: 81, column: 6, scope: !14345)
!14347 = !DILocation(line: 81, column: 32, scope: !14345)
!14348 = !DILocation(line: 85, column: 2, scope: !14325)
!14349 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !280, file: !280, line: 341, type: !14350, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14352)
!14350 = !DISubroutineType(types: !14351)
!14351 = !{!14273, !14310, !14273}
!14352 = !{!14353, !14354}
!14353 = !DILocalVariable(name: "list", arg: 1, scope: !14349, file: !280, line: 341, type: !14310)
!14354 = !DILocalVariable(name: "node", arg: 2, scope: !14349, file: !280, line: 342, type: !14273)
!14355 = !DILocation(line: 0, scope: !14349)
!14356 = !DILocation(line: 344, column: 15, scope: !14349)
!14357 = !DILocation(line: 344, column: 9, scope: !14349)
!14358 = !DILocation(line: 344, column: 26, scope: !14349)
!14359 = !DILocation(line: 344, column: 2, scope: !14349)
!14360 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !280, file: !280, line: 325, type: !14350, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14361)
!14361 = !{!14362, !14363}
!14362 = !DILocalVariable(name: "list", arg: 1, scope: !14360, file: !280, line: 325, type: !14310)
!14363 = !DILocalVariable(name: "node", arg: 2, scope: !14360, file: !280, line: 326, type: !14273)
!14364 = !DILocation(line: 0, scope: !14360)
!14365 = !DILocation(line: 328, column: 24, scope: !14360)
!14366 = !DILocation(line: 328, column: 15, scope: !14360)
!14367 = !DILocation(line: 328, column: 9, scope: !14360)
!14368 = !DILocation(line: 328, column: 45, scope: !14360)
!14369 = !DILocation(line: 328, column: 2, scope: !14360)
!14370 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !280, file: !280, line: 294, type: !14371, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14373)
!14371 = !DISubroutineType(types: !14372)
!14372 = !{!14273, !14310}
!14373 = !{!14374}
!14374 = !DILocalVariable(name: "list", arg: 1, scope: !14370, file: !280, line: 294, type: !14310)
!14375 = !DILocation(line: 0, scope: !14370)
!14376 = !DILocation(line: 296, column: 9, scope: !14370)
!14377 = !DILocation(line: 296, column: 2, scope: !14370)
!14378 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !280, file: !280, line: 266, type: !14379, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14381)
!14379 = !DISubroutineType(types: !14380)
!14380 = !{!134, !14310}
!14381 = !{!14382}
!14382 = !DILocalVariable(name: "list", arg: 1, scope: !14378, file: !280, line: 266, type: !14310)
!14383 = !DILocation(line: 0, scope: !14378)
!14384 = !DILocation(line: 268, column: 15, scope: !14378)
!14385 = !DILocation(line: 268, column: 20, scope: !14378)
!14386 = !DILocation(line: 268, column: 2, scope: !14378)
!14387 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2305, file: !2305, line: 150, type: !14388, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14390)
!14388 = !DISubroutineType(types: !14389)
!14389 = !{!103, !2278}
!14390 = !{!14391, !14392, !14393, !14395}
!14391 = !DILocalVariable(name: "to", arg: 1, scope: !14387, file: !2305, line: 150, type: !2278)
!14392 = !DILocalVariable(name: "ret", scope: !14387, file: !2305, line: 152, type: !103)
!14393 = !DILocalVariable(name: "__i", scope: !14394, file: !2305, line: 154, type: !14156)
!14394 = distinct !DILexicalBlock(scope: !14387, file: !2305, line: 154, column: 2)
!14395 = !DILocalVariable(name: "__key", scope: !14394, file: !2305, line: 154, type: !14156)
!14396 = !DILocation(line: 0, scope: !14387)
!14397 = !DILocation(line: 0, scope: !14394)
!14398 = !DILocation(line: 0, scope: !14178, inlinedAt: !14399)
!14399 = distinct !DILocation(line: 154, column: 2, scope: !14394)
!14400 = !DILocation(line: 55, column: 2, scope: !14187, inlinedAt: !14401)
!14401 = distinct !DILocation(line: 145, column: 10, scope: !14178, inlinedAt: !14399)
!14402 = !DILocation(line: 0, scope: !14187, inlinedAt: !14401)
!14403 = !DILocation(line: 155, column: 7, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14405, file: !2305, line: 155, column: 7)
!14405 = distinct !DILexicalBlock(scope: !14406, file: !2305, line: 154, column: 24)
!14406 = distinct !DILexicalBlock(scope: !14394, file: !2305, line: 154, column: 2)
!14407 = !DILocation(line: 155, column: 7, scope: !14405)
!14408 = !DILocation(line: 156, column: 4, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14404, file: !2305, line: 155, column: 39)
!14410 = !DILocation(line: 158, column: 3, scope: !14409)
!14411 = !DILocation(line: 0, scope: !14246, inlinedAt: !14412)
!14412 = distinct !DILocation(line: 154, column: 2, scope: !14406)
!14413 = !DILocation(line: 0, scope: !14254, inlinedAt: !14414)
!14414 = distinct !DILocation(line: 215, column: 2, scope: !14246, inlinedAt: !14412)
!14415 = !DILocation(line: 95, column: 2, scope: !14254, inlinedAt: !14414)
!14416 = !DILocation(line: 161, column: 2, scope: !14387)
!14417 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !280, file: !280, line: 225, type: !14418, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14422)
!14418 = !DISubroutineType(types: !14419)
!14419 = !{!134, !14420}
!14420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14421, size: 32)
!14421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2282)
!14422 = !{!14423}
!14423 = !DILocalVariable(name: "node", arg: 1, scope: !14417, file: !280, line: 225, type: !14420)
!14424 = !DILocation(line: 0, scope: !14417)
!14425 = !DILocation(line: 227, column: 15, scope: !14417)
!14426 = !DILocation(line: 227, column: 20, scope: !14417)
!14427 = !DILocation(line: 227, column: 2, scope: !14417)
!14428 = distinct !DISubprogram(name: "remove_timeout", scope: !2305, file: !2305, line: 53, type: !2299, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14429)
!14429 = !{!14430}
!14430 = !DILocalVariable(name: "t", arg: 1, scope: !14428, file: !2305, line: 53, type: !2278)
!14431 = !DILocation(line: 0, scope: !14428)
!14432 = !DILocation(line: 55, column: 6, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14428, file: !2305, line: 55, column: 6)
!14434 = !DILocation(line: 55, column: 14, scope: !14433)
!14435 = !DILocation(line: 55, column: 6, scope: !14428)
!14436 = !DILocation(line: 56, column: 25, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14433, file: !2305, line: 55, column: 23)
!14438 = !DILocation(line: 56, column: 12, scope: !14437)
!14439 = !DILocation(line: 56, column: 19, scope: !14437)
!14440 = !DILocation(line: 57, column: 2, scope: !14437)
!14441 = !DILocation(line: 59, column: 23, scope: !14428)
!14442 = !DILocation(line: 59, column: 2, scope: !14428)
!14443 = !DILocation(line: 60, column: 1, scope: !14428)
!14444 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !280, file: !280, line: 496, type: !14445, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14447)
!14445 = !DISubroutineType(types: !14446)
!14446 = !{null, !14273}
!14447 = !{!14448, !14449, !14450}
!14448 = !DILocalVariable(name: "node", arg: 1, scope: !14444, file: !280, line: 496, type: !14273)
!14449 = !DILocalVariable(name: "prev", scope: !14444, file: !280, line: 498, type: !14285)
!14450 = !DILocalVariable(name: "next", scope: !14444, file: !280, line: 499, type: !14285)
!14451 = !DILocation(line: 0, scope: !14444)
!14452 = !DILocation(line: 498, column: 34, scope: !14444)
!14453 = !DILocation(line: 499, column: 34, scope: !14444)
!14454 = !DILocation(line: 501, column: 8, scope: !14444)
!14455 = !DILocation(line: 501, column: 13, scope: !14444)
!14456 = !DILocation(line: 502, column: 8, scope: !14444)
!14457 = !DILocation(line: 502, column: 13, scope: !14444)
!14458 = !DILocation(line: 503, column: 2, scope: !14444)
!14459 = !DILocation(line: 504, column: 1, scope: !14444)
!14460 = distinct !DISubprogram(name: "sys_dnode_init", scope: !280, file: !280, line: 211, type: !14445, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14461)
!14461 = !{!14462}
!14462 = !DILocalVariable(name: "node", arg: 1, scope: !14460, file: !280, line: 211, type: !14273)
!14463 = !DILocation(line: 0, scope: !14460)
!14464 = !DILocation(line: 213, column: 8, scope: !14460)
!14465 = !DILocation(line: 213, column: 13, scope: !14460)
!14466 = !DILocation(line: 214, column: 8, scope: !14460)
!14467 = !DILocation(line: 214, column: 13, scope: !14460)
!14468 = !DILocation(line: 215, column: 1, scope: !14460)
!14469 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2305, file: !2305, line: 183, type: !14470, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14474)
!14470 = !DISubroutineType(types: !14471)
!14471 = !{!1515, !14472}
!14472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14473, size: 32)
!14473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2279)
!14474 = !{!14475, !14476, !14477, !14479}
!14475 = !DILocalVariable(name: "timeout", arg: 1, scope: !14469, file: !2305, line: 183, type: !14472)
!14476 = !DILocalVariable(name: "ticks", scope: !14469, file: !2305, line: 185, type: !1515)
!14477 = !DILocalVariable(name: "__i", scope: !14478, file: !2305, line: 187, type: !14156)
!14478 = distinct !DILexicalBlock(scope: !14469, file: !2305, line: 187, column: 2)
!14479 = !DILocalVariable(name: "__key", scope: !14478, file: !2305, line: 187, type: !14156)
!14480 = !DILocation(line: 0, scope: !14469)
!14481 = !DILocation(line: 0, scope: !14478)
!14482 = !DILocation(line: 0, scope: !14178, inlinedAt: !14483)
!14483 = distinct !DILocation(line: 187, column: 2, scope: !14478)
!14484 = !DILocation(line: 55, column: 2, scope: !14187, inlinedAt: !14485)
!14485 = distinct !DILocation(line: 145, column: 10, scope: !14178, inlinedAt: !14483)
!14486 = !DILocation(line: 0, scope: !14187, inlinedAt: !14485)
!14487 = !DILocation(line: 188, column: 11, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !14489, file: !2305, line: 187, column: 24)
!14489 = distinct !DILexicalBlock(scope: !14478, file: !2305, line: 187, column: 2)
!14490 = !DILocation(line: 0, scope: !14246, inlinedAt: !14491)
!14491 = distinct !DILocation(line: 187, column: 2, scope: !14489)
!14492 = !DILocation(line: 0, scope: !14254, inlinedAt: !14493)
!14493 = distinct !DILocation(line: 215, column: 2, scope: !14246, inlinedAt: !14491)
!14494 = !DILocation(line: 95, column: 2, scope: !14254, inlinedAt: !14493)
!14495 = !DILocation(line: 191, column: 2, scope: !14469)
!14496 = distinct !DISubprogram(name: "timeout_rem", scope: !2305, file: !2305, line: 165, type: !14470, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14497)
!14497 = !{!14498, !14499, !14500}
!14498 = !DILocalVariable(name: "timeout", arg: 1, scope: !14496, file: !2305, line: 165, type: !14472)
!14499 = !DILocalVariable(name: "ticks", scope: !14496, file: !2305, line: 167, type: !1515)
!14500 = !DILocalVariable(name: "t", scope: !14501, file: !2305, line: 173, type: !2278)
!14501 = distinct !DILexicalBlock(scope: !14496, file: !2305, line: 173, column: 2)
!14502 = !DILocation(line: 0, scope: !14496)
!14503 = !DILocation(line: 169, column: 6, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14496, file: !2305, line: 169, column: 6)
!14505 = !DILocation(line: 169, column: 6, scope: !14496)
!14506 = !DILocation(line: 173, column: 28, scope: !14501)
!14507 = !DILocation(line: 0, scope: !14501)
!14508 = !DILocation(line: 173, column: 39, scope: !14509)
!14509 = distinct !DILexicalBlock(scope: !14501, file: !2305, line: 173, column: 2)
!14510 = !DILocation(line: 173, column: 2, scope: !14501)
!14511 = !DILocation(line: 174, column: 15, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14509, file: !2305, line: 173, column: 61)
!14513 = !DILocation(line: 174, column: 9, scope: !14512)
!14514 = !DILocation(line: 175, column: 15, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !14512, file: !2305, line: 175, column: 7)
!14516 = !DILocation(line: 175, column: 7, scope: !14512)
!14517 = !DILocation(line: 173, column: 52, scope: !14509)
!14518 = distinct !{!14518, !14510, !14519}
!14519 = !DILocation(line: 178, column: 2, scope: !14501)
!14520 = !DILocation(line: 180, column: 17, scope: !14496)
!14521 = !DILocation(line: 180, column: 15, scope: !14496)
!14522 = !DILocation(line: 180, column: 2, scope: !14496)
!14523 = !DILocation(line: 181, column: 1, scope: !14496)
!14524 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11834, file: !11834, line: 35, type: !14525, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14527)
!14525 = !DISubroutineType(types: !14526)
!14526 = !{!134, !14472}
!14527 = !{!14528}
!14528 = !DILocalVariable(name: "to", arg: 1, scope: !14524, file: !11834, line: 35, type: !14472)
!14529 = !DILocation(line: 0, scope: !14524)
!14530 = !DILocation(line: 37, column: 35, scope: !14524)
!14531 = !DILocation(line: 37, column: 10, scope: !14524)
!14532 = !DILocation(line: 37, column: 9, scope: !14524)
!14533 = !DILocation(line: 37, column: 2, scope: !14524)
!14534 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2305, file: !2305, line: 194, type: !14470, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14535)
!14535 = !{!14536, !14537, !14538, !14540}
!14536 = !DILocalVariable(name: "timeout", arg: 1, scope: !14534, file: !2305, line: 194, type: !14472)
!14537 = !DILocalVariable(name: "ticks", scope: !14534, file: !2305, line: 196, type: !1515)
!14538 = !DILocalVariable(name: "__i", scope: !14539, file: !2305, line: 198, type: !14156)
!14539 = distinct !DILexicalBlock(scope: !14534, file: !2305, line: 198, column: 2)
!14540 = !DILocalVariable(name: "__key", scope: !14539, file: !2305, line: 198, type: !14156)
!14541 = !DILocation(line: 0, scope: !14534)
!14542 = !DILocation(line: 0, scope: !14539)
!14543 = !DILocation(line: 0, scope: !14178, inlinedAt: !14544)
!14544 = distinct !DILocation(line: 198, column: 2, scope: !14539)
!14545 = !DILocation(line: 55, column: 2, scope: !14187, inlinedAt: !14546)
!14546 = distinct !DILocation(line: 145, column: 10, scope: !14178, inlinedAt: !14544)
!14547 = !DILocation(line: 0, scope: !14187, inlinedAt: !14546)
!14548 = !DILocation(line: 199, column: 11, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !2305, line: 198, column: 24)
!14550 = distinct !DILexicalBlock(scope: !14539, file: !2305, line: 198, column: 2)
!14551 = !DILocation(line: 199, column: 23, scope: !14549)
!14552 = !DILocation(line: 0, scope: !14246, inlinedAt: !14553)
!14553 = distinct !DILocation(line: 198, column: 2, scope: !14550)
!14554 = !DILocation(line: 0, scope: !14254, inlinedAt: !14555)
!14555 = distinct !DILocation(line: 215, column: 2, scope: !14246, inlinedAt: !14553)
!14556 = !DILocation(line: 95, column: 2, scope: !14254, inlinedAt: !14555)
!14557 = !DILocation(line: 199, column: 21, scope: !14549)
!14558 = !DILocation(line: 202, column: 2, scope: !14534)
!14559 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2305, file: !2305, line: 205, type: !14262, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14560)
!14560 = !{!14561, !14562, !14564}
!14561 = !DILocalVariable(name: "ret", scope: !14559, file: !2305, line: 207, type: !654)
!14562 = !DILocalVariable(name: "__i", scope: !14563, file: !2305, line: 209, type: !14156)
!14563 = distinct !DILexicalBlock(scope: !14559, file: !2305, line: 209, column: 2)
!14564 = !DILocalVariable(name: "__key", scope: !14563, file: !2305, line: 209, type: !14156)
!14565 = !DILocation(line: 0, scope: !14559)
!14566 = !DILocation(line: 0, scope: !14563)
!14567 = !DILocation(line: 0, scope: !14178, inlinedAt: !14568)
!14568 = distinct !DILocation(line: 209, column: 2, scope: !14563)
!14569 = !DILocation(line: 55, column: 2, scope: !14187, inlinedAt: !14570)
!14570 = distinct !DILocation(line: 145, column: 10, scope: !14178, inlinedAt: !14568)
!14571 = !DILocation(line: 0, scope: !14187, inlinedAt: !14570)
!14572 = !DILocation(line: 210, column: 9, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14574, file: !2305, line: 209, column: 24)
!14574 = distinct !DILexicalBlock(scope: !14563, file: !2305, line: 209, column: 2)
!14575 = !DILocation(line: 0, scope: !14246, inlinedAt: !14576)
!14576 = distinct !DILocation(line: 209, column: 2, scope: !14574)
!14577 = !DILocation(line: 0, scope: !14254, inlinedAt: !14578)
!14578 = distinct !DILocation(line: 215, column: 2, scope: !14246, inlinedAt: !14576)
!14579 = !DILocation(line: 95, column: 2, scope: !14254, inlinedAt: !14578)
!14580 = !DILocation(line: 212, column: 2, scope: !14559)
!14581 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2305, file: !2305, line: 215, type: !8862, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14582)
!14582 = !{!14583, !14584, !14585, !14587, !14588, !14591, !14592}
!14583 = !DILocalVariable(name: "ticks", arg: 1, scope: !14581, file: !2305, line: 215, type: !654)
!14584 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14581, file: !2305, line: 215, type: !134)
!14585 = !DILocalVariable(name: "__i", scope: !14586, file: !2305, line: 217, type: !14156)
!14586 = distinct !DILexicalBlock(scope: !14581, file: !2305, line: 217, column: 2)
!14587 = !DILocalVariable(name: "__key", scope: !14586, file: !2305, line: 217, type: !14156)
!14588 = !DILocalVariable(name: "next_to", scope: !14589, file: !2305, line: 218, type: !103)
!14589 = distinct !DILexicalBlock(scope: !14590, file: !2305, line: 217, column: 24)
!14590 = distinct !DILexicalBlock(scope: !14586, file: !2305, line: 217, column: 2)
!14591 = !DILocalVariable(name: "sooner", scope: !14589, file: !2305, line: 219, type: !134)
!14592 = !DILocalVariable(name: "imminent", scope: !14589, file: !2305, line: 221, type: !134)
!14593 = !DILocation(line: 0, scope: !14581)
!14594 = !DILocation(line: 0, scope: !14586)
!14595 = !DILocation(line: 0, scope: !14178, inlinedAt: !14596)
!14596 = distinct !DILocation(line: 217, column: 2, scope: !14586)
!14597 = !DILocation(line: 55, column: 2, scope: !14187, inlinedAt: !14598)
!14598 = distinct !DILocation(line: 145, column: 10, scope: !14178, inlinedAt: !14596)
!14599 = !DILocation(line: 0, scope: !14187, inlinedAt: !14598)
!14600 = !DILocation(line: 218, column: 17, scope: !14589)
!14601 = !DILocation(line: 0, scope: !14589)
!14602 = !DILocation(line: 221, column: 27, scope: !14589)
!14603 = !DILocation(line: 233, column: 17, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14589, file: !2305, line: 233, column: 7)
!14605 = !DILocation(line: 234, column: 26, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14604, file: !2305, line: 233, column: 56)
!14607 = !DILocation(line: 234, column: 4, scope: !14606)
!14608 = !DILocation(line: 235, column: 3, scope: !14606)
!14609 = !DILocation(line: 0, scope: !14246, inlinedAt: !14610)
!14610 = distinct !DILocation(line: 217, column: 2, scope: !14590)
!14611 = !DILocation(line: 0, scope: !14254, inlinedAt: !14612)
!14612 = distinct !DILocation(line: 215, column: 2, scope: !14246, inlinedAt: !14610)
!14613 = !DILocation(line: 95, column: 2, scope: !14254, inlinedAt: !14612)
!14614 = !DILocation(line: 237, column: 1, scope: !14581)
!14615 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2305, file: !2305, line: 239, type: !14616, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14618)
!14616 = !DISubroutineType(types: !14617)
!14617 = !{null, !654}
!14618 = !{!14619, !14620, !14621, !14623}
!14619 = !DILocalVariable(name: "ticks", arg: 1, scope: !14615, file: !2305, line: 239, type: !654)
!14620 = !DILocalVariable(name: "key", scope: !14615, file: !2305, line: 245, type: !14156)
!14621 = !DILocalVariable(name: "t", scope: !14622, file: !2305, line: 262, type: !2278)
!14622 = distinct !DILexicalBlock(scope: !14615, file: !2305, line: 261, column: 67)
!14623 = !DILocalVariable(name: "dt", scope: !14622, file: !2305, line: 263, type: !103)
!14624 = !DILocation(line: 0, scope: !14615)
!14625 = !DILocation(line: 242, column: 2, scope: !14615)
!14626 = !DILocation(line: 0, scope: !14178, inlinedAt: !14627)
!14627 = distinct !DILocation(line: 245, column: 25, scope: !14615)
!14628 = !DILocation(line: 55, column: 2, scope: !14187, inlinedAt: !14629)
!14629 = distinct !DILocation(line: 145, column: 10, scope: !14178, inlinedAt: !14627)
!14630 = !DILocation(line: 0, scope: !14187, inlinedAt: !14629)
!14631 = !DILocation(line: 261, column: 9, scope: !14615)
!14632 = !DILocation(line: 261, column: 17, scope: !14615)
!14633 = !DILocation(line: 261, column: 25, scope: !14615)
!14634 = !DILocation(line: 261, column: 37, scope: !14615)
!14635 = !DILocation(line: 261, column: 47, scope: !14615)
!14636 = !DILocation(line: 261, column: 44, scope: !14615)
!14637 = !DILocation(line: 261, column: 2, scope: !14615)
!14638 = !DILocation(line: 0, scope: !14622)
!14639 = !DILocation(line: 263, column: 12, scope: !14622)
!14640 = !DILocation(line: 265, column: 16, scope: !14622)
!14641 = !DILocation(line: 265, column: 13, scope: !14622)
!14642 = !DILocation(line: 266, column: 13, scope: !14622)
!14643 = !DILocation(line: 267, column: 3, scope: !14622)
!14644 = !DILocation(line: 0, scope: !14246, inlinedAt: !14645)
!14645 = distinct !DILocation(line: 269, column: 3, scope: !14622)
!14646 = !DILocation(line: 0, scope: !14254, inlinedAt: !14647)
!14647 = distinct !DILocation(line: 215, column: 2, scope: !14246, inlinedAt: !14645)
!14648 = !DILocation(line: 95, column: 2, scope: !14254, inlinedAt: !14647)
!14649 = !DILocation(line: 270, column: 6, scope: !14622)
!14650 = !DILocation(line: 270, column: 3, scope: !14622)
!14651 = !DILocation(line: 0, scope: !14178, inlinedAt: !14652)
!14652 = distinct !DILocation(line: 271, column: 9, scope: !14622)
!14653 = !DILocation(line: 55, column: 2, scope: !14187, inlinedAt: !14654)
!14654 = distinct !DILocation(line: 145, column: 10, scope: !14178, inlinedAt: !14652)
!14655 = !DILocation(line: 0, scope: !14187, inlinedAt: !14654)
!14656 = !DILocation(line: 272, column: 22, scope: !14622)
!14657 = distinct !{!14657, !14637, !14658}
!14658 = !DILocation(line: 273, column: 2, scope: !14615)
!14659 = !DILocation(line: 276, column: 19, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14661, file: !2305, line: 275, column: 23)
!14661 = distinct !DILexicalBlock(scope: !14615, file: !2305, line: 275, column: 6)
!14662 = !DILocation(line: 277, column: 2, scope: !14660)
!14663 = !DILocation(line: 279, column: 15, scope: !14615)
!14664 = !DILocation(line: 279, column: 12, scope: !14615)
!14665 = !DILocation(line: 280, column: 21, scope: !14615)
!14666 = !DILocation(line: 282, column: 24, scope: !14615)
!14667 = !DILocation(line: 282, column: 2, scope: !14615)
!14668 = !DILocation(line: 0, scope: !14246, inlinedAt: !14669)
!14669 = distinct !DILocation(line: 284, column: 2, scope: !14615)
!14670 = !DILocation(line: 0, scope: !14254, inlinedAt: !14671)
!14671 = distinct !DILocation(line: 215, column: 2, scope: !14246, inlinedAt: !14669)
!14672 = !DILocation(line: 95, column: 2, scope: !14254, inlinedAt: !14671)
!14673 = !DILocation(line: 285, column: 1, scope: !14615)
!14674 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2305, file: !2305, line: 287, type: !14675, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14677)
!14675 = !DISubroutineType(types: !14676)
!14676 = !{!339}
!14677 = !{!14678, !14679, !14681}
!14678 = !DILocalVariable(name: "t", scope: !14674, file: !2305, line: 289, type: !1367)
!14679 = !DILocalVariable(name: "__i", scope: !14680, file: !2305, line: 291, type: !14156)
!14680 = distinct !DILexicalBlock(scope: !14674, file: !2305, line: 291, column: 2)
!14681 = !DILocalVariable(name: "__key", scope: !14680, file: !2305, line: 291, type: !14156)
!14682 = !DILocation(line: 0, scope: !14674)
!14683 = !DILocation(line: 0, scope: !14680)
!14684 = !DILocation(line: 0, scope: !14178, inlinedAt: !14685)
!14685 = distinct !DILocation(line: 291, column: 2, scope: !14680)
!14686 = !DILocation(line: 55, column: 2, scope: !14187, inlinedAt: !14687)
!14687 = distinct !DILocation(line: 145, column: 10, scope: !14178, inlinedAt: !14685)
!14688 = !DILocation(line: 0, scope: !14187, inlinedAt: !14687)
!14689 = !DILocation(line: 292, column: 7, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14691, file: !2305, line: 291, column: 24)
!14691 = distinct !DILexicalBlock(scope: !14680, file: !2305, line: 291, column: 2)
!14692 = !DILocation(line: 292, column: 19, scope: !14690)
!14693 = !DILocation(line: 0, scope: !14246, inlinedAt: !14694)
!14694 = distinct !DILocation(line: 291, column: 2, scope: !14691)
!14695 = !DILocation(line: 0, scope: !14254, inlinedAt: !14696)
!14696 = distinct !DILocation(line: 215, column: 2, scope: !14246, inlinedAt: !14694)
!14697 = !DILocation(line: 95, column: 2, scope: !14254, inlinedAt: !14696)
!14698 = !DILocation(line: 292, column: 17, scope: !14690)
!14699 = !DILocation(line: 294, column: 2, scope: !14674)
!14700 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2305, file: !2305, line: 297, type: !4989, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !381)
!14701 = !DILocation(line: 300, column: 19, scope: !14700)
!14702 = !DILocation(line: 300, column: 9, scope: !14700)
!14703 = !DILocation(line: 300, column: 2, scope: !14700)
!14704 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2305, file: !2305, line: 306, type: !14675, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !381)
!14705 = !DILocation(line: 308, column: 9, scope: !14704)
!14706 = !DILocation(line: 308, column: 2, scope: !14704)
!14707 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2305, file: !2305, line: 319, type: !4999, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14708)
!14708 = !{!14709, !14710, !14711, !14712}
!14709 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14707, file: !2305, line: 319, type: !142)
!14710 = !DILocalVariable(name: "start_cycles", scope: !14707, file: !2305, line: 328, type: !142)
!14711 = !DILocalVariable(name: "cycles_to_wait", scope: !14707, file: !2305, line: 331, type: !142)
!14712 = !DILocalVariable(name: "current_cycles", scope: !14713, file: !2305, line: 338, type: !142)
!14713 = distinct !DILexicalBlock(scope: !14714, file: !2305, line: 337, column: 11)
!14714 = distinct !DILexicalBlock(scope: !14715, file: !2305, line: 337, column: 2)
!14715 = distinct !DILexicalBlock(scope: !14707, file: !2305, line: 337, column: 2)
!14716 = !DILocation(line: 0, scope: !14707)
!14717 = !DILocation(line: 322, column: 19, scope: !14718)
!14718 = distinct !DILexicalBlock(scope: !14707, file: !2305, line: 322, column: 6)
!14719 = !DILocation(line: 322, column: 6, scope: !14707)
!14720 = !DILocation(line: 328, column: 26, scope: !14707)
!14721 = !DILocation(line: 333, column: 43, scope: !14707)
!14722 = !DILocation(line: 337, column: 2, scope: !14707)
!14723 = !DILocation(line: 338, column: 29, scope: !14713)
!14724 = !DILocation(line: 0, scope: !14713)
!14725 = !DILocation(line: 341, column: 23, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14713, file: !2305, line: 341, column: 7)
!14727 = !DILocation(line: 341, column: 39, scope: !14726)
!14728 = !DILocation(line: 349, column: 1, scope: !14707)
!14729 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !366, file: !366, line: 1675, type: !4989, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !381)
!14730 = !DILocation(line: 1677, column: 9, scope: !14729)
!14731 = !DILocation(line: 1677, column: 2, scope: !14729)
!14732 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14733, file: !14733, line: 24, type: !4989, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !381)
!14733 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14734 = !DILocation(line: 26, column: 9, scope: !14732)
!14735 = !DILocation(line: 26, column: 2, scope: !14732)
!14736 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2305, file: !2305, line: 364, type: !14737, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2275, retainedNodes: !14739)
!14737 = !DISubroutineType(types: !14738)
!14738 = !{!1367, !14146}
!14739 = !{!14740, !14741}
!14740 = !DILocalVariable(name: "timeout", arg: 1, scope: !14736, file: !2305, line: 364, type: !14146)
!14741 = !DILocalVariable(name: "dt", scope: !14736, file: !2305, line: 366, type: !1515)
!14742 = !DILocation(line: 0, scope: !14736)
!14743 = !DILocation(line: 368, column: 6, scope: !14736)
!14744 = !DILocation(line: 371, column: 10, scope: !14745)
!14745 = distinct !DILexicalBlock(scope: !14746, file: !2305, line: 370, column: 47)
!14746 = distinct !DILexicalBlock(scope: !14747, file: !2305, line: 370, column: 13)
!14747 = distinct !DILexicalBlock(scope: !14736, file: !2305, line: 368, column: 6)
!14748 = !DILocation(line: 371, column: 3, scope: !14745)
!14749 = !DILocation(line: 376, column: 58, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14751, file: !2305, line: 376, column: 7)
!14751 = distinct !DILexicalBlock(scope: !14746, file: !2305, line: 372, column: 9)
!14752 = !DILocation(line: 376, column: 7, scope: !14751)
!14753 = !DILocation(line: 376, column: 43, scope: !14750)
!14754 = !DILocation(line: 377, column: 4, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14750, file: !2305, line: 376, column: 64)
!14756 = !DILocation(line: 379, column: 10, scope: !14751)
!14757 = !DILocation(line: 379, column: 33, scope: !14751)
!14758 = !DILocation(line: 379, column: 31, scope: !14751)
!14759 = !DILocation(line: 379, column: 3, scope: !14751)
!14760 = !DILocation(line: 0, scope: !14747)
!14761 = !DILocation(line: 381, column: 1, scope: !14736)
!14762 = distinct !DISubprogram(name: "boot_banner", scope: !14763, file: !14763, line: 26, type: !2876, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2862, retainedNodes: !381)
!14763 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14764 = !DILocation(line: 34, column: 2, scope: !14762)
!14765 = !DILocation(line: 36, column: 1, scope: !14762)
