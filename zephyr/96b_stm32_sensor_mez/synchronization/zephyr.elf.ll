; ModuleID = 'build/96b_stm32_sensor_mez/synchronization/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_sem = type { %struct._wait_q_t, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon }
%union.anon = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon, %union.anon }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %union.anon*, %union.anon* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231668 to i8*), void (i8*)* inttoptr (i32 134229643 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231668 to i8*), void (i8*)* inttoptr (i32 134229623 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231668 to i8*), void (i8*)* inttoptr (i32 134229613 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231668 to i8*), void (i8*)* inttoptr (i32 134229713 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231668 to i8*), void (i8*)* inttoptr (i32 134229703 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231668 to i8*), void (i8*)* inttoptr (i32 134229693 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231668 to i8*), void (i8*)* inttoptr (i32 134229683 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231668 to i8*), void (i8*)* inttoptr (i32 134229673 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231668 to i8*), void (i8*)* inttoptr (i32 134229663 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231668 to i8*), void (i8*)* inttoptr (i32 134229653 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231668 to i8*), void (i8*)* inttoptr (i32 134229633 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [45 x i8*] [i8* bitcast (%struct.k_sem* @threadA_sem to i8*), i8* bitcast (%struct.k_sem* @threadB_sem to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [36 x i8] c"%s: Hello World from cpu %d on %s!\0A\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"96b_stm32_sensor_mez\00", align 1
@threadA_sem = dso_local global %struct.k_sem { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @threadA_sem, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @threadA_sem, i32 0, i32 0, i32 0) } } }, i32 1, i32 1 }, section "._k_sem.static.threadA_sem", align 4, !dbg !25
@threadB_sem = dso_local global %struct.k_sem { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @threadB_sem, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @threadB_sem, i32 0, i32 0, i32 0) } } }, i32 0, i32 1 }, section "._k_sem.static.threadB_sem", align 4, !dbg !114
@__func__.threadB = private unnamed_addr constant [8 x i8] c"threadB\00", align 1
@__func__.threadA = private unnamed_addr constant [8 x i8] c"threadA\00", align 1
@threadA_data = internal global %struct.k_thread zeroinitializer, align 8, !dbg !153
@threadA_stack_area = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !143
@.str.2 = private unnamed_addr constant [9 x i8] c"thread_a\00", align 1
@threadB_data = internal global %struct.k_thread zeroinitializer, align 8, !dbg !259
@threadB_stack_area = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !257
@.str.3 = private unnamed_addr constant [9 x i8] c"thread_b\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !261
@.str.7 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !271
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !324
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon { i32 101384192 } }], align 4, !dbg !353
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !359
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !488
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !524
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0), %union.anon { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.32, i32 0, i32 0), %union.anon { i32 285933600 } }], align 4, !dbg !534
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !539
@.str.31 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.32 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !559
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !761
@.str.33 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !722
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !705
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.33, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !678
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !694
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !724
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !738
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !740
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !742
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !744
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !746
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !748
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !750
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !752
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !754
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !756
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !766
@.str.35 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !799
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !897
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !886
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !938
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !786
@.str.44 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1004
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1283
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1253
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1239
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1184
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !784
@.str.1.45 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1285
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1257
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1255
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1198
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !782
@.str.2.46 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1298
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1261
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1259
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1204
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !780
@.str.3.47 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1300
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1265
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1263
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1213
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !778
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1302
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1269
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1267
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1219
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !776
@.str.5 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1304
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1273
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1271
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1225
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !774
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1306
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1277
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1275
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1231
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !772
@.str.7.48 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1308
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1281
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1279
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1237
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !794
@.str.52 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1310
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1527
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1482
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1529
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1455
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1457
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !792
@.str.1.53 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1536
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1484
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1561
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.53, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1466
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1468
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !790
@.str.2.54 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1563
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1486
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1573
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.54, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1472
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1474
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !788
@.str.3.57 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1575
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1488
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1585
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.57, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1478
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1480
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1490
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1498
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1521
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1524
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !870
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1553
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1555
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1557
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1559
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1565
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1567
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1569
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1571
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1577
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1579
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1581
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1583
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1587
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1696
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1698
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1694
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1665
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1700
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1182
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.45, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1196
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.46, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1202
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.47, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1211
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1217
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1223
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1229
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.48, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1235
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1790
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1834
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1837
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1844
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1851
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2063
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2069
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2076
@.str.104 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2081
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.108 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.116, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.117, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.119, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.113, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.120, i32 0, i32 0)], align 4, !dbg !2109
@.str.114 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.115 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.116 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.117 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.118 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.119 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.113 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.120 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2223
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2236
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2259
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2369
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2372
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2374
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2074
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2071
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2376
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2412
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1939
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2410
@.str.194 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2978 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2982, !srcloc !2983
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2984, !srcloc !2985
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2986, !srcloc !2987
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2988, !srcloc !2989
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2990, !srcloc !2991
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2992, !srcloc !2993
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2994, !srcloc !2995
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2996, !srcloc !2997
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2998, !srcloc !2999
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3000, !srcloc !3001
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3002, !srcloc !3003
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3004, !srcloc !3005
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3006, !srcloc !3007
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3008, !srcloc !3009
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -25) #23, !dbg !3010, !srcloc !3011
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3012, !srcloc !3013
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -57) #23, !dbg !3014, !srcloc !3015
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -157) #23, !dbg !3016, !srcloc !3017
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3018, !srcloc !3019
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3020, !srcloc !3021
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -141) #23, !dbg !3022, !srcloc !3023
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -169) #23, !dbg !3024, !srcloc !3025
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3026, !srcloc !3027
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3028, !srcloc !3029
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3030, !srcloc !3031
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3032, !srcloc !3033
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3034, !srcloc !3035
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3036, !srcloc !3039
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3040, !srcloc !3041
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3042, !srcloc !3043
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3044, !srcloc !3045
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3046, !srcloc !3047
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3048, !srcloc !3049
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3050, !srcloc !3051
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3052, !srcloc !3053
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3054, !srcloc !3055
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3056, !srcloc !3057
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3058, !srcloc !3059
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3060, !srcloc !3061
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3062, !srcloc !3063
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3064, !srcloc !3065
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3066, !srcloc !3067
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3068, !srcloc !3069
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3070, !srcloc !3071
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3072, !srcloc !3073
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3074, !srcloc !3075
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3076, !srcloc !3077
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3078, !srcloc !3079
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3080, !srcloc !3081
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3082, !srcloc !3083
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3084, !srcloc !3085
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -169) #23, !dbg !3086, !srcloc !3087
  ret void, !dbg !3088
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @helloLoop(i8* noundef %0, %struct.k_sem* noundef %1, %struct.k_sem* noundef %2) local_unnamed_addr #2 !dbg !3091 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3096, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.value(metadata %struct.k_sem* %1, metadata !3097, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.value(metadata %struct.k_sem* %2, metadata !3098, metadata !DIExpression()), !dbg !3103
  br label %4, !dbg !3104

4:                                                ; preds = %10, %3
  tail call fastcc void @k_sem_take(%struct.k_sem* noundef %1) #24, !dbg !3105
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #25, !dbg !3107
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !3101, metadata !DIExpression()), !dbg !3103
  %6 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef %5) #26, !dbg !3108
  call void @llvm.dbg.value(metadata i8* %6, metadata !3099, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.value(metadata i8 0, metadata !3100, metadata !DIExpression()), !dbg !3103
  %7 = icmp eq i8* %6, null, !dbg !3109
  br i1 %7, label %8, label %9, !dbg !3111

8:                                                ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i32 0, i32 0), i8* noundef %0, i32 noundef 0, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0)) #26, !dbg !3112
  br label %10, !dbg !3114

9:                                                ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i32 0, i32 0), i8* noundef nonnull %6, i32 noundef 0, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0)) #26, !dbg !3115
  br label %10

10:                                               ; preds = %9, %8
  tail call fastcc void @k_busy_wait() #24, !dbg !3117
  tail call fastcc void @k_msleep() #24, !dbg !3118
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef %2) #24, !dbg !3119
  br label %4, !dbg !3104, !llvm.loop !3120
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_take(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !3122 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3132, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !3131, metadata !DIExpression()), !dbg !3133
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3134, !srcloc !3136
  %2 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] [i64 -1]) #26, !dbg !3137
  ret void, !dbg !3138
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #4 !dbg !3139 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #25, !dbg !3143
  ret %struct.k_thread* %1, !dbg !3144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_busy_wait() unnamed_addr #1 !dbg !3145 {
  call void @llvm.dbg.value(metadata i32 100000, metadata !3149, metadata !DIExpression()), !dbg !3150
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3151, !srcloc !3153
  tail call void @z_impl_k_busy_wait(i32 noundef 100000) #26, !dbg !3154
  ret void, !dbg !3155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3156 {
  call void @llvm.dbg.value(metadata i32 500, metadata !3160, metadata !DIExpression()), !dbg !3161
  tail call fastcc void @k_sleep([1 x i64] [i64 5000]) #24, !dbg !3162
  ret void, !dbg !3163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !3164 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !3168, metadata !DIExpression()), !dbg !3169
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3170, !srcloc !3172
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #26, !dbg !3173
  ret void, !dbg !3174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3175 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3179, metadata !DIExpression()), !dbg !3180
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3181, !srcloc !3183
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #26, !dbg !3184
  ret void, !dbg !3185
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #4 !dbg !3186 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3187, !srcloc !3189
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3190
  ret %struct.k_thread* %1, !dbg !3191
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @threadB(i8* nocapture readnone %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #2 !dbg !3192 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !3196, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.value(metadata i8* undef, metadata !3197, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.value(metadata i8* undef, metadata !3198, metadata !DIExpression()), !dbg !3199
  tail call void @helloLoop(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.threadB, i32 0, i32 0), %struct.k_sem* noundef nonnull @threadB_sem, %struct.k_sem* noundef nonnull @threadA_sem) #24, !dbg !3200
  unreachable, !dbg !3201
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @threadA(i8* nocapture readnone %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #2 !dbg !3202 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !3204, metadata !DIExpression()), !dbg !3207
  call void @llvm.dbg.value(metadata i8* undef, metadata !3205, metadata !DIExpression()), !dbg !3207
  call void @llvm.dbg.value(metadata i8* undef, metadata !3206, metadata !DIExpression()), !dbg !3207
  tail call void @helloLoop(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.threadA, i32 0, i32 0), %struct.k_sem* noundef nonnull @threadA_sem, %struct.k_sem* noundef nonnull @threadB_sem) #24, !dbg !3208
  unreachable, !dbg !3209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3210 {
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull @threadA_data, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @threadA_stack_area, i32 0, i32 0), void (i8*, i8*, i8*)* noundef nonnull @threadA) #24, !dbg !3211
  tail call fastcc void @k_thread_name_set(%struct.k_thread* noundef nonnull @threadA_data, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0)) #24, !dbg !3212
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull @threadB_data, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @threadB_stack_area, i32 0, i32 0), void (i8*, i8*, i8*)* noundef nonnull @threadB) #24, !dbg !3213
  tail call fastcc void @k_thread_name_set(%struct.k_thread* noundef nonnull @threadB_data, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0)) #24, !dbg !3214
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef nonnull @threadA_data) #24, !dbg !3215
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef nonnull @threadB_data) #24, !dbg !3216
  ret void, !dbg !3217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, void (i8*, i8*, i8*)* noundef %2) unnamed_addr #1 !dbg !3218 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3236, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3227, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3228, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata i32 1024, metadata !3229, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !3230, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata i8* null, metadata !3231, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata i8* null, metadata !3232, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata i8* null, metadata !3233, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata i32 7, metadata !3234, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata i32 0, metadata !3235, metadata !DIExpression()), !dbg !3237
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3238, !srcloc !3240
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef %2, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 7, i32 noundef 0, [1 x i64] [i64 -1]) #26, !dbg !3241
  ret void, !dbg !3242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3247, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata i8* %1, metadata !3248, metadata !DIExpression()), !dbg !3249
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3250, !srcloc !3252
  %3 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) #26, !dbg !3253
  ret void, !dbg !3254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3255 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3259, metadata !DIExpression()), !dbg !3260
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3261, !srcloc !3263
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !3264
  ret void, !dbg !3265
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3268, metadata !DIExpression()), !dbg !3269
  ret i32 0, !dbg !3270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #5 !dbg !3271 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3275, metadata !DIExpression()), !dbg !3276
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3277
  ret void, !dbg !3278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #6 !dbg !3279 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3282
  ret i8* %1, !dbg !3283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3284 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3296, metadata !DIExpression()), !dbg !3307
  call void @llvm.dbg.value(metadata i8* %0, metadata !3295, metadata !DIExpression()), !dbg !3307
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !3308
  ret void, !dbg !3310
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3315, metadata !DIExpression()), !dbg !3317
  call void @llvm.dbg.value(metadata i8* %1, metadata !3316, metadata !DIExpression()), !dbg !3317
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3318
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3318
  ret i32 %4, !dbg !3319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3320 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3332, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3329, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.value(metadata i8* %1, metadata !3330, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.value(metadata i8* %2, metadata !3331, metadata !DIExpression()), !dbg !3333
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3334
  ret void, !dbg !3335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3336 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3340, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %1, metadata !3341, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 0, metadata !3342, metadata !DIExpression()), !dbg !3343
  %3 = icmp eq i32 %1, 0, !dbg !3344
  br i1 %3, label %13, label %4, !dbg !3347

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3342, metadata !DIExpression()), !dbg !3343
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3348
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3350
  %8 = load i8, i8* %7, align 1, !dbg !3350
  %9 = zext i8 %8 to i32, !dbg !3350
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3348
  %11 = add nuw i32 %5, 1, !dbg !3351
  call void @llvm.dbg.value(metadata i32 %11, metadata !3342, metadata !DIExpression()), !dbg !3343
  %12 = icmp eq i32 %11, %1, !dbg !3344
  br i1 %12, label %13, label %4, !dbg !3347, !llvm.loop !3352

13:                                               ; preds = %4, %2
  ret void, !dbg !3354
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3355 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3359, metadata !DIExpression()), !dbg !3361
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3362
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3362
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3360, metadata !DIExpression()), !dbg !3363
  call void @llvm.va_start(i8* nonnull %3), !dbg !3364
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3365
  %5 = load i32, i32* %4, align 4, !dbg !3365
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3365
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3365
  call void @llvm.va_end(i8* nonnull %3), !dbg !3366
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3367
  ret void, !dbg !3367
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3368 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3372, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i32 %1, metadata !3373, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i8* %2, metadata !3374, metadata !DIExpression()), !dbg !3377
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3378
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3378
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3375, metadata !DIExpression()), !dbg !3379
  call void @llvm.va_start(i8* nonnull %5), !dbg !3380
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3381
  %7 = load i32, i32* %6, align 4, !dbg !3381
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3381
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3381
  call void @llvm.dbg.value(metadata i32 %9, metadata !3376, metadata !DIExpression()), !dbg !3377
  call void @llvm.va_end(i8* nonnull %5), !dbg !3382
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3383
  ret i32 %9, !dbg !3384
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3385 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3392, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.value(metadata i8* %0, metadata !3389, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.value(metadata i32 %1, metadata !3390, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.value(metadata i8* %2, metadata !3391, metadata !DIExpression()), !dbg !3399
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3400
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3400
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3393, metadata !DIExpression()), !dbg !3401
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3402
  store i8* %0, i8** %7, align 4, !dbg !3402
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3402
  store i32 %1, i32* %8, align 4, !dbg !3402
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3402
  store i32 0, i32* %9, align 4, !dbg !3402
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3403
  %10 = load i32, i32* %9, align 4, !dbg !3404
  %11 = load i32, i32* %8, align 4, !dbg !3406
  %12 = icmp slt i32 %10, %11, !dbg !3407
  br i1 %12, label %13, label %15, !dbg !3408

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3409
  store i8 0, i8* %14, align 1, !dbg !3411
  br label %15, !dbg !3412

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3413
  ret i32 %10, !dbg !3414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !3415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3420, metadata !DIExpression()), !dbg !3422
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3421, metadata !DIExpression()), !dbg !3422
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3423
  %4 = load i8*, i8** %3, align 4, !dbg !3423
  %5 = icmp eq i8* %4, null, !dbg !3425
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3426
  br i1 %5, label %12, label %8, !dbg !3427

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3428
  %10 = load i32, i32* %9, align 4, !dbg !3428
  %11 = icmp slt i32 %7, %10, !dbg !3429
  br i1 %11, label %15, label %12, !dbg !3430

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3431
  %14 = add nsw i32 %7, 1, !dbg !3433
  store i32 %14, i32* %13, align 4, !dbg !3433
  br label %25, !dbg !3434

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3435
  %17 = icmp eq i32 %7, %16, !dbg !3437
  br i1 %17, label %18, label %21, !dbg !3438

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3439
  store i32 %19, i32* %6, align 4, !dbg !3439
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3441
  store i8 0, i8* %20, align 1, !dbg !3442
  br label %25, !dbg !3443

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3444
  %23 = add nsw i32 %7, 1, !dbg !3446
  store i32 %23, i32* %6, align 4, !dbg !3446
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3447
  store i8 %22, i8* %24, align 1, !dbg !3448
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3449
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3450 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3455, metadata !DIExpression()), !dbg !3459
  call void @llvm.dbg.value(metadata i8* %1, metadata !3456, metadata !DIExpression()), !dbg !3459
  call void @llvm.dbg.value(metadata i8* %2, metadata !3457, metadata !DIExpression()), !dbg !3459
  call void @llvm.dbg.value(metadata i8* %3, metadata !3458, metadata !DIExpression()), !dbg !3459
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !3460
  %5 = tail call fastcc %struct.k_thread* @k_current_get.3() #25, !dbg !3461
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !3462
  unreachable, !dbg !3463
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.3() unnamed_addr #4 !dbg !3464 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.4() #25, !dbg !3570
  ret %struct.k_thread* %1, !dbg !3571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3572 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3576, metadata !DIExpression()), !dbg !3577
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3578, !srcloc !3580
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !3581
  ret void, !dbg !3582
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.4() unnamed_addr #4 !dbg !3583 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3584, !srcloc !3586
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3587
  ret %struct.k_thread* %1, !dbg !3588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3589 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3602, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3599, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i8* %1, metadata !3600, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i8* %2, metadata !3601, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %4, metadata !3603, metadata !DIExpression()), !dbg !3730
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3731
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3731
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3604, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i32 0, metadata !3608, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i1 undef, metadata !3610, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3730
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3733

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3733

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3734
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3602, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i8* %30, metadata !3601, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %29, metadata !3608, metadata !DIExpression()), !dbg !3730
  %31 = load i8, i8* %30, align 1, !dbg !3735
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3733

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3735
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3736
  call void @llvm.dbg.value(metadata i8* %34, metadata !3601, metadata !DIExpression()), !dbg !3730
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !3736
  call void @llvm.dbg.value(metadata i32 %35, metadata !3612, metadata !DIExpression()), !dbg !3737
  %36 = icmp slt i32 %35, 0, !dbg !3738
  %37 = add i32 %29, 1, !dbg !3736
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3730
  br i1 %36, label %365, label %28, !llvm.loop !3740

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3742
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3617, metadata !DIExpression()), !dbg !3743
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3743
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3662, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3665, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %30, metadata !3668, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 -1, metadata !3669, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 -1, metadata !3670, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* null, metadata !3671, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %14, metadata !3672, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8 0, metadata !3673, metadata !DIExpression()), !dbg !3744
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !3745
  call void @llvm.dbg.value(metadata i8* %39, metadata !3601, metadata !DIExpression()), !dbg !3730
  %40 = load i24, i24* %15, align 8, !dbg !3746
  %41 = and i24 %40, 256, !dbg !3746
  %42 = icmp eq i24 %41, 0, !dbg !3746
  br i1 %42, label %51, label %43, !dbg !3748

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3749
  call void @llvm.dbg.value(metadata i8* %44, metadata !3602, metadata !DIExpression()), !dbg !3730
  %45 = bitcast i8* %27 to i32*, !dbg !3749
  %46 = load i32, i32* %45, align 4, !dbg !3749
  call void @llvm.dbg.value(metadata i32 %46, metadata !3669, metadata !DIExpression()), !dbg !3744
  %47 = icmp slt i32 %46, 0, !dbg !3751
  br i1 %47, label %48, label %56, !dbg !3753

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3754
  store i24 %49, i24* %15, align 8, !dbg !3754
  %50 = sub nsw i32 0, %46, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %50, metadata !3669, metadata !DIExpression()), !dbg !3744
  br label %56, !dbg !3757

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3758
  %53 = icmp eq i24 %52, 0, !dbg !3758
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3760
  br label %56, !dbg !3760

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3761
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3744
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3602, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %58, metadata !3669, metadata !DIExpression()), !dbg !3744
  %60 = and i24 %57, 1024, !dbg !3761
  %61 = icmp eq i24 %60, 0, !dbg !3761
  br i1 %61, label %69, label %62, !dbg !3762

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3763
  call void @llvm.dbg.value(metadata i8* %63, metadata !3602, metadata !DIExpression()), !dbg !3730
  %64 = bitcast i8* %59 to i32*, !dbg !3763
  %65 = load i32, i32* %64, align 4, !dbg !3763
  call void @llvm.dbg.value(metadata i32 %65, metadata !3674, metadata !DIExpression()), !dbg !3764
  %66 = icmp slt i32 %65, 0, !dbg !3765
  br i1 %66, label %67, label %74, !dbg !3767

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3768
  store i24 %68, i24* %15, align 8, !dbg !3768
  br label %74, !dbg !3770

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3771
  %71 = icmp eq i24 %70, 0, !dbg !3771
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3773
  br label %74, !dbg !3773

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3774
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3744
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3744
  call void @llvm.dbg.value(metadata i8* %77, metadata !3602, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %76, metadata !3670, metadata !DIExpression()), !dbg !3744
  store i32 0, i32* %16, align 4, !dbg !3775
  store i32 0, i32* %17, align 8, !dbg !3776
  %78 = lshr i24 %75, 16, !dbg !3774
  call void @llvm.dbg.value(metadata i24 %78, metadata !3677, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3744
  %79 = lshr i24 %75, 11, !dbg !3777
  %80 = and i24 %79, 15, !dbg !3777
  %81 = zext i24 %80 to i32, !dbg !3777
  call void @llvm.dbg.value(metadata i32 %81, metadata !3678, metadata !DIExpression()), !dbg !3744
  %82 = trunc i24 %78 to i3, !dbg !3778
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3778

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3779

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3782
  call void @llvm.dbg.value(metadata i8* %85, metadata !3602, metadata !DIExpression()), !dbg !3730
  %86 = bitcast i8* %77 to i32*, !dbg !3782
  %87 = load i32, i32* %86, align 4, !dbg !3782
  %88 = sext i32 %87 to i64, !dbg !3782
  store i64 %88, i64* %20, align 8, !dbg !3784
  br label %115, !dbg !3785

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3786
  call void @llvm.dbg.value(metadata i8* %90, metadata !3602, metadata !DIExpression()), !dbg !3730
  %91 = bitcast i8* %77 to i32*, !dbg !3786
  %92 = load i32, i32* %91, align 4, !dbg !3786
  %93 = sext i32 %92 to i64, !dbg !3786
  store i64 %93, i64* %20, align 8, !dbg !3789
  br label %115, !dbg !3790

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3791
  %96 = add i32 %95, 7, !dbg !3791
  %97 = and i32 %96, -8, !dbg !3791
  %98 = inttoptr i32 %97 to i8*, !dbg !3791
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3791
  call void @llvm.dbg.value(metadata i8* %99, metadata !3602, metadata !DIExpression()), !dbg !3730
  %100 = inttoptr i32 %97 to i64*, !dbg !3791
  %101 = load i64, i64* %100, align 8, !dbg !3791
  store i64 %101, i64* %20, align 8, !dbg !3792
  br label %115, !dbg !3793

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3794
  %104 = add i32 %103, 7, !dbg !3794
  %105 = and i32 %104, -8, !dbg !3794
  %106 = inttoptr i32 %105 to i8*, !dbg !3794
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3794
  call void @llvm.dbg.value(metadata i8* %107, metadata !3602, metadata !DIExpression()), !dbg !3730
  %108 = inttoptr i32 %105 to i64*, !dbg !3794
  %109 = load i64, i64* %108, align 8, !dbg !3794
  store i64 %109, i64* %20, align 8, !dbg !3795
  br label %115, !dbg !3796

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3797
  call void @llvm.dbg.value(metadata i8* %111, metadata !3602, metadata !DIExpression()), !dbg !3730
  %112 = bitcast i8* %77 to i32*, !dbg !3797
  %113 = load i32, i32* %112, align 4, !dbg !3797
  %114 = sext i32 %113 to i64, !dbg !3798
  store i64 %114, i64* %20, align 8, !dbg !3799
  br label %115, !dbg !3800

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3801
  call void @llvm.dbg.value(metadata i8* %117, metadata !3602, metadata !DIExpression()), !dbg !3730
  %118 = trunc i24 %79 to i4, !dbg !3802
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3802

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3803
  %121 = ashr exact i64 %120, 56, !dbg !3803
  store i64 %121, i64* %20, align 8, !dbg !3806
  br label %177, !dbg !3807

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3808
  %124 = ashr exact i64 %123, 48, !dbg !3808
  store i64 %124, i64* %20, align 8, !dbg !3811
  br label %177, !dbg !3812

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3813

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3816
  call void @llvm.dbg.value(metadata i8* %127, metadata !3602, metadata !DIExpression()), !dbg !3730
  %128 = bitcast i8* %77 to i32*, !dbg !3816
  %129 = load i32, i32* %128, align 4, !dbg !3816
  %130 = zext i32 %129 to i64, !dbg !3816
  store i64 %130, i64* %20, align 8, !dbg !3818
  br label %157, !dbg !3819

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3820
  call void @llvm.dbg.value(metadata i8* %132, metadata !3602, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i8* %132, metadata !3602, metadata !DIExpression()), !dbg !3730
  %133 = bitcast i8* %77 to i32*, !dbg !3820
  %134 = load i32, i32* %133, align 4, !dbg !3820
  %135 = zext i32 %134 to i64, !dbg !3820
  store i64 %135, i64* %20, align 8, !dbg !3820
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3822
  %138 = add i32 %137, 7, !dbg !3822
  %139 = and i32 %138, -8, !dbg !3822
  %140 = inttoptr i32 %139 to i8*, !dbg !3822
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3822
  call void @llvm.dbg.value(metadata i8* %141, metadata !3602, metadata !DIExpression()), !dbg !3730
  %142 = inttoptr i32 %139 to i64*, !dbg !3822
  %143 = load i64, i64* %142, align 8, !dbg !3822
  store i64 %143, i64* %20, align 8, !dbg !3823
  br label %157, !dbg !3824

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3825
  %146 = add i32 %145, 7, !dbg !3825
  %147 = and i32 %146, -8, !dbg !3825
  %148 = inttoptr i32 %147 to i8*, !dbg !3825
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3825
  call void @llvm.dbg.value(metadata i8* %149, metadata !3602, metadata !DIExpression()), !dbg !3730
  %150 = inttoptr i32 %147 to i64*, !dbg !3825
  %151 = load i64, i64* %150, align 8, !dbg !3825
  store i64 %151, i64* %20, align 8, !dbg !3826
  br label %157, !dbg !3827

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3828
  call void @llvm.dbg.value(metadata i8* %153, metadata !3602, metadata !DIExpression()), !dbg !3730
  %154 = bitcast i8* %77 to i32*, !dbg !3828
  %155 = load i32, i32* %154, align 4, !dbg !3828
  %156 = zext i32 %155 to i64, !dbg !3829
  store i64 %156, i64* %20, align 8, !dbg !3830
  br label %157, !dbg !3831

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3832
  call void @llvm.dbg.value(metadata i8* %159, metadata !3602, metadata !DIExpression()), !dbg !3730
  %160 = trunc i24 %79 to i4, !dbg !3833
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3833

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3834
  store i64 %162, i64* %20, align 8, !dbg !3837
  br label %177, !dbg !3838

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3839
  store i64 %164, i64* %20, align 8, !dbg !3842
  br label %177, !dbg !3843

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3844
  %167 = add i32 %166, 7, !dbg !3844
  %168 = and i32 %167, -8, !dbg !3844
  %169 = inttoptr i32 %168 to i8*, !dbg !3844
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3844
  call void @llvm.dbg.value(metadata i8* %170, metadata !3602, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i8* %170, metadata !3602, metadata !DIExpression()), !dbg !3730
  %171 = inttoptr i32 %168 to double*, !dbg !3844
  %172 = load double, double* %171, align 8, !dbg !3844
  store double %172, double* %19, align 8, !dbg !3844
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3848
  call void @llvm.dbg.value(metadata i8* %174, metadata !3602, metadata !DIExpression()), !dbg !3730
  %175 = bitcast i8* %77 to i8**, !dbg !3848
  %176 = load i8*, i8** %175, align 4, !dbg !3848
  store i8* %176, i8** %18, align 8, !dbg !3851
  br label %177, !dbg !3852

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3744
  call void @llvm.dbg.value(metadata i8* %178, metadata !3602, metadata !DIExpression()), !dbg !3730
  %179 = and i24 %75, 3, !dbg !3853
  %180 = icmp eq i24 %179, 0, !dbg !3853
  br i1 %180, label %185, label %181, !dbg !3853

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !3854
  call void @llvm.dbg.value(metadata i32 %182, metadata !3679, metadata !DIExpression()), !dbg !3855
  %183 = icmp slt i32 %182, 0, !dbg !3856
  %184 = add i32 %182, %29, !dbg !3854
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3730
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3858
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3859

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !3860
  call void @llvm.dbg.value(metadata i32 %188, metadata !3683, metadata !DIExpression()), !dbg !3861
  %189 = icmp slt i32 %188, 0, !dbg !3862
  %190 = add i32 %29, 1, !dbg !3860
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3730
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3864
  call void @llvm.dbg.value(metadata i8* %192, metadata !3671, metadata !DIExpression()), !dbg !3744
  %193 = icmp sgt i32 %76, -1, !dbg !3865
  br i1 %193, label %194, label %196, !dbg !3867

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !3868
  call void @llvm.dbg.value(metadata i32 %195, metadata !3686, metadata !DIExpression()), !dbg !3870
  br label %241, !dbg !3871

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %197, metadata !3686, metadata !DIExpression()), !dbg !3870
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3671, metadata !DIExpression()), !dbg !3744
  %199 = load i64, i64* %20, align 8, !dbg !3874
  %200 = trunc i64 %199 to i8, !dbg !3875
  store i8 %200, i8* %10, align 1, !dbg !3876
  call void @llvm.dbg.value(metadata i8* %23, metadata !3672, metadata !DIExpression()), !dbg !3744
  br label %245, !dbg !3877

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3878
  %203 = icmp eq i24 %202, 0, !dbg !3878
  %204 = trunc i24 %75 to i8, !dbg !3880
  %205 = shl i8 %204, 1, !dbg !3880
  %206 = and i8 %205, 32, !dbg !3880
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3880
  call void @llvm.dbg.value(metadata i8 %207, metadata !3673, metadata !DIExpression()), !dbg !3744
  %208 = load i64, i64* %20, align 8, !dbg !3881
  call void @llvm.dbg.value(metadata i64 %208, metadata !3609, metadata !DIExpression()), !dbg !3730
  %209 = icmp slt i64 %208, 0, !dbg !3882
  br i1 %209, label %210, label %212, !dbg !3884

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3673, metadata !DIExpression()), !dbg !3744
  %211 = sub nsw i64 0, %208, !dbg !3885
  store i64 %211, i64* %20, align 8, !dbg !3887
  br label %212, !dbg !3888

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3744
  call void @llvm.dbg.value(metadata i8 %213, metadata !3673, metadata !DIExpression()), !dbg !3744
  %214 = load i64, i64* %20, align 8, !dbg !3889
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !3890
  call void @llvm.dbg.value(metadata i8* %215, metadata !3671, metadata !DIExpression()), !dbg !3744
  br label %216, !dbg !3891

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3892
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3893
  call void @llvm.dbg.value(metadata i8* %218, metadata !3671, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8 %217, metadata !3673, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.label(metadata !3729), !dbg !3894
  %219 = icmp sgt i32 %76, -1, !dbg !3895
  br i1 %219, label %222, label %220, !dbg !3896

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3897
  br label %245, !dbg !3896

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3899
  %224 = sub i32 %22, %223, !dbg !3899
  call void @llvm.dbg.value(metadata i32 %224, metadata !3688, metadata !DIExpression()), !dbg !3900
  %225 = load i24, i24* %15, align 8, !dbg !3901
  %226 = and i24 %225, -65, !dbg !3901
  store i24 %226, i24* %15, align 8, !dbg !3901
  %227 = icmp ugt i32 %76, %224, !dbg !3902
  br i1 %227, label %228, label %245, !dbg !3904

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3905
  store i32 %229, i32* %16, align 4, !dbg !3907
  br label %245, !dbg !3908

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3909
  %232 = icmp eq i8* %231, null, !dbg !3911
  br i1 %232, label %245, label %233, !dbg !3912

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3913
  %235 = zext i32 %234 to i64, !dbg !3913
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !3915
  call void @llvm.dbg.value(metadata i8* %236, metadata !3671, metadata !DIExpression()), !dbg !3744
  %237 = load i24, i24* %15, align 8, !dbg !3916
  %238 = or i24 %237, 1048576, !dbg !3916
  store i24 %238, i24* %15, align 8, !dbg !3916
  store i8 120, i8* %21, align 1, !dbg !3917
  br label %216, !dbg !3918

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3919
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !3922
  br label %363, !dbg !3923

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3924
  call void @llvm.dbg.value(metadata i32 %242, metadata !3686, metadata !DIExpression()), !dbg !3870
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3925
  call void @llvm.dbg.value(metadata i32 -1, metadata !3670, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 %29, metadata !3608, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i8* %192, metadata !3671, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %243, metadata !3672, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8 0, metadata !3673, metadata !DIExpression()), !dbg !3744
  %244 = icmp eq i8* %192, null, !dbg !3926
  br i1 %244, label %363, label %245, !dbg !3928, !llvm.loop !3740

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3897
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3744
  call void @llvm.dbg.value(metadata i32 0, metadata !3692, metadata !DIExpression()), !dbg !3744
  %250 = zext i8 %249 to i32, !dbg !3929
  %251 = icmp eq i8 %249, 0, !dbg !3931
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3744
  call void @llvm.dbg.value(metadata i32 undef, metadata !3691, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3744
  call void @llvm.dbg.value(metadata i32 undef, metadata !3691, metadata !DIExpression()), !dbg !3744
  %252 = icmp sgt i32 %58, 0, !dbg !3932
  br i1 %252, label %253, label %302, !dbg !3933

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3897
  %255 = icmp eq i24 %254, 0, !dbg !3897
  %256 = ptrtoint i8* %248 to i32, !dbg !3934
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3744
  %257 = ptrtoint i8* %247 to i32, !dbg !3934
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3744
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3744
  %258 = xor i1 %251, true, !dbg !3935
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3744
  %259 = sext i1 %258 to i32, !dbg !3935
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3744
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3744
  %260 = lshr i24 %246, 19, !dbg !3936
  %261 = and i24 %260, 1, !dbg !3936
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3936
  %263 = zext i24 %262 to i32, !dbg !3936
  %264 = add i32 %257, %259, !dbg !3936
  %265 = add i32 %256, %263, !dbg !3936
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3744
  %266 = and i24 %246, 4194304, !dbg !3937
  %267 = icmp eq i24 %266, 0, !dbg !3937
  %268 = load i32, i32* %16, align 4, !dbg !3939
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3744
  call void @llvm.dbg.value(metadata i32 undef, metadata !3691, metadata !DIExpression()), !dbg !3744
  %269 = load i32, i32* %17, align 8, !dbg !3940
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3940
  call void @llvm.dbg.value(metadata i32 undef, metadata !3691, metadata !DIExpression()), !dbg !3744
  %271 = add i32 %264, %58, !dbg !3940
  %272 = add i32 %265, %268, !dbg !3940
  %273 = add i32 %272, %270, !dbg !3941
  %274 = sub i32 %271, %273, !dbg !3941
  call void @llvm.dbg.value(metadata i32 %274, metadata !3669, metadata !DIExpression()), !dbg !3744
  %275 = and i24 %246, 4, !dbg !3942
  %276 = icmp eq i24 %275, 0, !dbg !3942
  br i1 %276, label %277, label %302, !dbg !3943

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3693, metadata !DIExpression()), !dbg !3944
  %278 = and i24 %246, 64, !dbg !3945
  %279 = icmp eq i24 %278, 0, !dbg !3945
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3946
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3946
  %282 = select i1 %279, i32 32, i32 48, !dbg !3946
  br i1 %280, label %287, label %283, !dbg !3946

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !3947
  call void @llvm.dbg.value(metadata i32 %284, metadata !3698, metadata !DIExpression()), !dbg !3948
  %285 = icmp slt i32 %284, 0, !dbg !3949
  %286 = add i32 %29, 1, !dbg !3947
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3730
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3744
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3734
  call void @llvm.dbg.value(metadata i32 %290, metadata !3608, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i8 undef, metadata !3693, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.value(metadata i8 %288, metadata !3673, metadata !DIExpression()), !dbg !3744
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3951
  %292 = add i32 %291, -1, !dbg !3951
  br label %293, !dbg !3951

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3952
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3734
  call void @llvm.dbg.value(metadata i32 %295, metadata !3608, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %294, metadata !3669, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 %294, metadata !3669, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3744
  %296 = icmp sgt i32 %294, 0, !dbg !3953
  br i1 %296, label %297, label %302, !dbg !3951

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !3954
  call void @llvm.dbg.value(metadata i32 %298, metadata !3669, metadata !DIExpression()), !dbg !3744
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !3955
  call void @llvm.dbg.value(metadata i32 %299, metadata !3704, metadata !DIExpression()), !dbg !3956
  %300 = icmp slt i32 %299, 0, !dbg !3957
  %301 = add i32 %295, 1, !dbg !3955
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3730
  br i1 %300, label %361, label %293, !llvm.loop !3959

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3744
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3744
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3734
  call void @llvm.dbg.value(metadata i32 %305, metadata !3608, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %304, metadata !3669, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8 %303, metadata !3673, metadata !DIExpression()), !dbg !3744
  %306 = icmp eq i8 %303, 0, !dbg !3961
  br i1 %306, label %312, label %307, !dbg !3962

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !3963
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !3964
  call void @llvm.dbg.value(metadata i32 %309, metadata !3707, metadata !DIExpression()), !dbg !3965
  %310 = icmp slt i32 %309, 0, !dbg !3966
  %311 = add i32 %305, 1, !dbg !3964
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3730
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3734
  call void @llvm.dbg.value(metadata i32 %313, metadata !3608, metadata !DIExpression()), !dbg !3730
  %314 = lshr i24 %246, 20, !dbg !3968
  %315 = lshr i24 %246, 19, !dbg !3969
  %316 = or i24 %314, %315, !dbg !3970
  %317 = and i24 %316, 1, !dbg !3970
  %318 = icmp eq i24 %317, 0, !dbg !3970
  br i1 %318, label %323, label %319, !dbg !3971

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !3972
  call void @llvm.dbg.value(metadata i32 %320, metadata !3711, metadata !DIExpression()), !dbg !3973
  %321 = icmp slt i32 %320, 0, !dbg !3974
  %322 = add i32 %313, 1, !dbg !3972
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3730
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3734
  call void @llvm.dbg.value(metadata i32 %324, metadata !3608, metadata !DIExpression()), !dbg !3730
  %325 = and i24 %246, 1048576, !dbg !3976
  %326 = icmp eq i24 %325, 0, !dbg !3976
  br i1 %326, label %333, label %327, !dbg !3977

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !3978
  %329 = zext i8 %328 to i32, !dbg !3978
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !3978
  call void @llvm.dbg.value(metadata i32 %330, metadata !3717, metadata !DIExpression()), !dbg !3979
  %331 = icmp slt i32 %330, 0, !dbg !3980
  %332 = add i32 %324, 1, !dbg !3978
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3730
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3734
  call void @llvm.dbg.value(metadata i32 %334, metadata !3608, metadata !DIExpression()), !dbg !3730
  %335 = load i32, i32* %16, align 4, !dbg !3982
  call void @llvm.dbg.value(metadata i32 %335, metadata !3692, metadata !DIExpression()), !dbg !3744
  br label %336, !dbg !3983

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !3984
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3734
  call void @llvm.dbg.value(metadata i32 %338, metadata !3608, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %337, metadata !3692, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3744
  %339 = icmp sgt i32 %337, 0, !dbg !3985
  br i1 %339, label %340, label %345, !dbg !3983

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %341, metadata !3692, metadata !DIExpression()), !dbg !3744
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %342, metadata !3721, metadata !DIExpression()), !dbg !3988
  %343 = icmp slt i32 %342, 0, !dbg !3989
  %344 = add i32 %338, 1, !dbg !3987
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3730
  br i1 %343, label %361, label %336, !llvm.loop !3991

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !3993
  call void @llvm.dbg.value(metadata i32 %346, metadata !3724, metadata !DIExpression()), !dbg !3994
  %347 = icmp slt i32 %346, 0, !dbg !3995
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3730
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !3993
  call void @llvm.dbg.value(metadata i32 %349, metadata !3608, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %304, metadata !3669, metadata !DIExpression()), !dbg !3744
  %350 = icmp sgt i32 %304, 0, !dbg !3997
  br i1 %350, label %351, label %363, !dbg !3998

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !3998
  %353 = add i32 %352, %338, !dbg !3998
  br label %354, !dbg !3998

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %355, metadata !3669, metadata !DIExpression()), !dbg !3744
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %356, metadata !3726, metadata !DIExpression()), !dbg !4000
  %357 = icmp slt i32 %356, 0, !dbg !4001
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4003
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %359, metadata !3669, metadata !DIExpression()), !dbg !3744
  %360 = icmp sgt i32 %355, 1, !dbg !3997
  br i1 %360, label %354, label %363, !dbg !3998, !llvm.loop !4004

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3608, metadata !DIExpression()), !dbg !3730
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3741
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3734
  call void @llvm.dbg.value(metadata i32 %364, metadata !3608, metadata !DIExpression()), !dbg !3730
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3741
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3730
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4006
  ret i32 %366, !dbg !4006
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4007 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4011, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i8* %1, metadata !4012, metadata !DIExpression()), !dbg !4013
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4014
  store i24 0, i24* %3, align 4, !dbg !4014
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4014
  store i8 0, i8* %4, align 1, !dbg !4014
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4014
  store i32 0, i32* %5, align 4, !dbg !4014
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4014
  store i32 0, i32* %6, align 4, !dbg !4014
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4015
  call void @llvm.dbg.value(metadata i8* %7, metadata !4012, metadata !DIExpression()), !dbg !4013
  %8 = load i8, i8* %7, align 1, !dbg !4016
  %9 = icmp eq i8 %8, 37, !dbg !4018
  br i1 %9, label %10, label %12, !dbg !4019

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4020
  call void @llvm.dbg.value(metadata i8* %11, metadata !4012, metadata !DIExpression()), !dbg !4013
  store i8 37, i8* %4, align 1, !dbg !4022
  br label %18, !dbg !4023

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4024
  call void @llvm.dbg.value(metadata i8* %13, metadata !4012, metadata !DIExpression()), !dbg !4013
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4025
  call void @llvm.dbg.value(metadata i8* %14, metadata !4012, metadata !DIExpression()), !dbg !4013
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4026
  call void @llvm.dbg.value(metadata i8* %15, metadata !4012, metadata !DIExpression()), !dbg !4013
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4027
  call void @llvm.dbg.value(metadata i8* %16, metadata !4012, metadata !DIExpression()), !dbg !4013
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4028
  call void @llvm.dbg.value(metadata i8* %17, metadata !4012, metadata !DIExpression()), !dbg !4013
  br label %18, !dbg !4029

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4013
  ret i8* %19, !dbg !4030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4031 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4035, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %1, metadata !4036, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %2, metadata !4037, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %3, metadata !4038, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 0, metadata !4039, metadata !DIExpression()), !dbg !4042
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4043

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4044
  call void @llvm.dbg.value(metadata i32 %9, metadata !4039, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %8, metadata !4037, metadata !DIExpression()), !dbg !4042
  %10 = icmp ult i8* %8, %3, !dbg !4045
  br i1 %10, label %11, label %13, !dbg !4046

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4047
  br label %17, !dbg !4046

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4048

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4049
  %16 = icmp eq i8 %15, 0, !dbg !4048
  br i1 %16, label %24, label %17, !dbg !4043

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4047
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4050
  call void @llvm.dbg.value(metadata i8* %19, metadata !4037, metadata !DIExpression()), !dbg !4042
  %20 = zext i8 %18 to i32, !dbg !4051
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !4052
  call void @llvm.dbg.value(metadata i32 %21, metadata !4040, metadata !DIExpression()), !dbg !4053
  %22 = icmp slt i32 %21, 0, !dbg !4054
  %23 = add i32 %9, 1, !dbg !4056
  call void @llvm.dbg.value(metadata i32 undef, metadata !4039, metadata !DIExpression()), !dbg !4042
  br i1 %22, label %24, label %7, !llvm.loop !4057

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4042
  ret i32 %25, !dbg !4059
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !4060 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4064, metadata !DIExpression()), !dbg !4074
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4065, metadata !DIExpression()), !dbg !4074
  call void @llvm.dbg.value(metadata i8* %2, metadata !4066, metadata !DIExpression()), !dbg !4074
  call void @llvm.dbg.value(metadata i8* %3, metadata !4067, metadata !DIExpression()), !dbg !4074
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4075
  %6 = load i8, i8* %5, align 1, !dbg !4075
  %7 = zext i8 %6 to i32, !dbg !4076
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4077
  %9 = icmp eq i32 %8, 0, !dbg !4077
  call void @llvm.dbg.value(metadata i1 %9, metadata !4068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4074
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %10, metadata !4069, metadata !DIExpression()), !dbg !4074
  %11 = ptrtoint i8* %3 to i32, !dbg !4079
  %12 = ptrtoint i8* %2 to i32, !dbg !4079
  %13 = sub i32 %11, %12, !dbg !4079
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4080
  call void @llvm.dbg.value(metadata i8* %14, metadata !4071, metadata !DIExpression()), !dbg !4074
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4081

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4074
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4064, metadata !DIExpression()), !dbg !4074
  call void @llvm.dbg.value(metadata i8* %18, metadata !4071, metadata !DIExpression()), !dbg !4074
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4082
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %25, metadata !4072, metadata !DIExpression()), !dbg !4084
  %26 = icmp ult i32 %25, 10, !dbg !4085
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4086
  %28 = add i32 %27, %25, !dbg !4084
  %29 = trunc i32 %28 to i8, !dbg !4086
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4087
  call void @llvm.dbg.value(metadata i8* %30, metadata !4071, metadata !DIExpression()), !dbg !4074
  store i8 %29, i8* %30, align 1, !dbg !4088
  call void @llvm.dbg.value(metadata i64 %22, metadata !4064, metadata !DIExpression()), !dbg !4074
  %31 = icmp uge i64 %19, %15, !dbg !4089
  %32 = icmp ugt i8* %30, %2, !dbg !4090
  %33 = and i1 %31, %32, !dbg !4090
  br i1 %33, label %17, label %34, !dbg !4091, !llvm.loop !4092

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4094
  %36 = load i24, i24* %35, align 4, !dbg !4094
  %37 = and i24 %36, 32, !dbg !4094
  %38 = icmp eq i24 %37, 0, !dbg !4094
  br i1 %38, label %44, label %39, !dbg !4096

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4097

40:                                               ; preds = %39
  br label %41, !dbg !4099

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4103
  store i24 %43, i24* %35, align 4, !dbg !4103
  br label %44, !dbg !4104

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4104
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4105 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4111, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %1, metadata !4112, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %2, metadata !4113, metadata !DIExpression()), !dbg !4114
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4115
  %5 = load i24, i24* %4, align 4, !dbg !4115
  %6 = lshr i24 %5, 11, !dbg !4115
  %7 = and i24 %6, 15, !dbg !4115
  %8 = zext i24 %7 to i32, !dbg !4115
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4116

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4117
  store i32 %2, i32* %10, align 4, !dbg !4119
  br label %28, !dbg !4120

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4121
  store i8 %12, i8* %1, align 1, !dbg !4122
  br label %28, !dbg !4123

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4124
  %15 = bitcast i8* %1 to i16*, !dbg !4125
  store i16 %14, i16* %15, align 2, !dbg !4126
  br label %28, !dbg !4127

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4128
  store i32 %2, i32* %17, align 4, !dbg !4129
  br label %28, !dbg !4130

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4131
  %20 = bitcast i8* %1 to i64*, !dbg !4132
  store i64 %19, i64* %20, align 8, !dbg !4133
  br label %28, !dbg !4134

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4135
  %23 = bitcast i8* %1 to i64*, !dbg !4136
  store i64 %22, i64* %23, align 8, !dbg !4137
  br label %28, !dbg !4138

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4139
  store i32 %2, i32* %25, align 4, !dbg !4140
  br label %28, !dbg !4141

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4142
  store i32 %2, i32* %27, align 4, !dbg !4143
  br label %28, !dbg !4144

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4145
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !4146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4149, metadata !DIExpression()), !dbg !4150
  %2 = add i32 %0, -65, !dbg !4151
  %3 = icmp ult i32 %2, 26, !dbg !4152
  %4 = zext i1 %3 to i32, !dbg !4152
  ret i32 %4, !dbg !4153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !4154 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4158, metadata !DIExpression()), !dbg !4159
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4160

2:                                                ; preds = %1
  br label %4, !dbg !4161

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4163

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4164
  ret i32 %5, !dbg !4165
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !4166 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4168, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8* %1, metadata !4169, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8 1, metadata !4170, metadata !DIExpression()), !dbg !4171
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4172

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4170, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8* %5, metadata !4169, metadata !DIExpression()), !dbg !4171
  %6 = load i8, i8* %5, align 1, !dbg !4173
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4175

7:                                                ; preds = %4
  br label %11, !dbg !4176

8:                                                ; preds = %4
  br label %11, !dbg !4178

9:                                                ; preds = %4
  br label %11, !dbg !4179

10:                                               ; preds = %4
  br label %11, !dbg !4180

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4181
  %14 = or i24 %13, %12, !dbg !4181
  store i24 %14, i24* %3, align 4, !dbg !4181
  call void @llvm.dbg.value(metadata i8 poison, metadata !4170, metadata !DIExpression()), !dbg !4171
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4169, metadata !DIExpression()), !dbg !4171
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4170, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8* %15, metadata !4169, metadata !DIExpression()), !dbg !4171
  %17 = load i24, i24* %3, align 4, !dbg !4182
  %18 = and i24 %17, 68, !dbg !4184
  %19 = icmp eq i24 %18, 68, !dbg !4184
  br i1 %19, label %20, label %22, !dbg !4184

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4185
  store i24 %21, i24* %3, align 4, !dbg !4185
  br label %22, !dbg !4187

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4188
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4189 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4191, metadata !DIExpression()), !dbg !4195
  call void @llvm.dbg.value(metadata i8* %1, metadata !4192, metadata !DIExpression()), !dbg !4195
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4196
  %5 = load i24, i24* %4, align 4, !dbg !4197
  %6 = or i24 %5, 128, !dbg !4197
  store i24 %6, i24* %4, align 4, !dbg !4197
  call void @llvm.dbg.value(metadata i8* %1, metadata !4192, metadata !DIExpression()), !dbg !4195
  %7 = load i8, i8* %1, align 1, !dbg !4198
  %8 = icmp eq i8 %7, 42, !dbg !4200
  br i1 %8, label %9, label %12, !dbg !4201

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4202
  store i24 %10, i24* %4, align 4, !dbg !4202
  call void @llvm.dbg.value(metadata i8* %1, metadata !4192, metadata !DIExpression()), !dbg !4195
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4204
  call void @llvm.dbg.value(metadata i8* %11, metadata !4192, metadata !DIExpression()), !dbg !4195
  store i8* %11, i8** %3, align 4, !dbg !4204
  br label %29, !dbg !4205

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4193, metadata !DIExpression()), !dbg !4195
  call void @llvm.dbg.value(metadata i8** %3, metadata !4192, metadata !DIExpression(DW_OP_deref)), !dbg !4195
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %13, metadata !4194, metadata !DIExpression()), !dbg !4195
  %14 = load i8*, i8** %3, align 4, !dbg !4207
  call void @llvm.dbg.value(metadata i8* %14, metadata !4192, metadata !DIExpression()), !dbg !4195
  %15 = icmp eq i8* %14, %1, !dbg !4209
  br i1 %15, label %29, label %16, !dbg !4210

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4211
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4213
  store i32 %13, i32* %18, align 4, !dbg !4214
  %19 = lshr i32 %13, 31, !dbg !4215
  %20 = lshr i24 %17, 1, !dbg !4216
  %21 = and i24 %20, 1, !dbg !4216
  %22 = zext i24 %21 to i32, !dbg !4216
  %23 = or i32 %19, %22, !dbg !4216
  %24 = trunc i32 %23 to i24, !dbg !4216
  %25 = shl nuw nsw i24 %24, 1, !dbg !4216
  %26 = and i24 %17, -131, !dbg !4216
  %27 = or i24 %26, 128, !dbg !4216
  %28 = or i24 %25, %27, !dbg !4216
  store i24 %28, i24* %4, align 4, !dbg !4216
  br label %29, !dbg !4217

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4195
  ret i8* %30, !dbg !4218
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4219 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4221, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %1, metadata !4222, metadata !DIExpression()), !dbg !4224
  %4 = load i8, i8* %1, align 1, !dbg !4225
  %5 = icmp eq i8 %4, 46, !dbg !4226
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4227
  %7 = load i24, i24* %6, align 4, !dbg !4228
  %8 = select i1 %5, i24 512, i24 0, !dbg !4228
  %9 = and i24 %7, -513, !dbg !4228
  %10 = or i24 %9, %8, !dbg !4228
  store i24 %10, i24* %6, align 4, !dbg !4228
  br i1 %5, label %11, label %32, !dbg !4229

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4222, metadata !DIExpression()), !dbg !4224
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4230
  call void @llvm.dbg.value(metadata i8* %12, metadata !4222, metadata !DIExpression()), !dbg !4224
  store i8* %12, i8** %3, align 4, !dbg !4230
  %13 = load i8, i8* %12, align 1, !dbg !4231
  %14 = icmp eq i8 %13, 42, !dbg !4233
  br i1 %14, label %15, label %18, !dbg !4234

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4235
  store i24 %16, i24* %6, align 4, !dbg !4235
  call void @llvm.dbg.value(metadata i8* %12, metadata !4222, metadata !DIExpression()), !dbg !4224
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4237
  call void @llvm.dbg.value(metadata i8* %17, metadata !4222, metadata !DIExpression()), !dbg !4224
  store i8* %17, i8** %3, align 4, !dbg !4237
  br label %32, !dbg !4238

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4222, metadata !DIExpression(DW_OP_deref)), !dbg !4224
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4239
  call void @llvm.dbg.value(metadata i32 %19, metadata !4223, metadata !DIExpression()), !dbg !4224
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4240
  store i32 %19, i32* %20, align 4, !dbg !4241
  %21 = lshr i32 %19, 31, !dbg !4242
  %22 = load i24, i24* %6, align 4, !dbg !4243
  %23 = lshr i24 %22, 1, !dbg !4243
  %24 = and i24 %23, 1, !dbg !4243
  %25 = zext i24 %24 to i32, !dbg !4243
  %26 = or i32 %21, %25, !dbg !4243
  %27 = trunc i32 %26 to i24, !dbg !4243
  %28 = shl nuw nsw i24 %27, 1, !dbg !4243
  %29 = and i24 %22, -3, !dbg !4243
  %30 = or i24 %28, %29, !dbg !4243
  store i24 %30, i24* %6, align 4, !dbg !4243
  %31 = load i8*, i8** %3, align 4, !dbg !4244
  call void @llvm.dbg.value(metadata i8* %31, metadata !4222, metadata !DIExpression()), !dbg !4224
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4224
  ret i8* %33, !dbg !4245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !4246 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4248, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata i8* %1, metadata !4249, metadata !DIExpression()), !dbg !4250
  %3 = load i8, i8* %1, align 1, !dbg !4251
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4252

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4253
  call void @llvm.dbg.value(metadata i8* %5, metadata !4249, metadata !DIExpression()), !dbg !4250
  %6 = load i8, i8* %5, align 1, !dbg !4256
  %7 = icmp eq i8 %6, 104, !dbg !4257
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4258
  %9 = load i24, i24* %8, align 4, !dbg !4258
  %10 = and i24 %9, -30721, !dbg !4258
  br i1 %7, label %11, label %14, !dbg !4259

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4260
  store i24 %12, i24* %8, align 4, !dbg !4260
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4262
  call void @llvm.dbg.value(metadata i8* %13, metadata !4249, metadata !DIExpression()), !dbg !4250
  br label %56, !dbg !4263

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4264
  store i24 %15, i24* %8, align 4, !dbg !4264
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4266
  call void @llvm.dbg.value(metadata i8* %17, metadata !4249, metadata !DIExpression()), !dbg !4250
  %18 = load i8, i8* %17, align 1, !dbg !4268
  %19 = icmp eq i8 %18, 108, !dbg !4269
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4270
  %21 = load i24, i24* %20, align 4, !dbg !4270
  %22 = and i24 %21, -30721, !dbg !4270
  br i1 %19, label %23, label %26, !dbg !4271

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4272
  store i24 %24, i24* %20, align 4, !dbg !4272
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4274
  call void @llvm.dbg.value(metadata i8* %25, metadata !4249, metadata !DIExpression()), !dbg !4250
  br label %56, !dbg !4275

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4276
  store i24 %27, i24* %20, align 4, !dbg !4276
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4278
  %30 = load i24, i24* %29, align 4, !dbg !4279
  %31 = and i24 %30, -30721, !dbg !4279
  %32 = or i24 %31, 10240, !dbg !4279
  store i24 %32, i24* %29, align 4, !dbg !4279
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4280
  call void @llvm.dbg.value(metadata i8* %33, metadata !4249, metadata !DIExpression()), !dbg !4250
  br label %56, !dbg !4281

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4282
  %36 = load i24, i24* %35, align 4, !dbg !4283
  %37 = and i24 %36, -30721, !dbg !4283
  %38 = or i24 %37, 12288, !dbg !4283
  store i24 %38, i24* %35, align 4, !dbg !4283
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4284
  call void @llvm.dbg.value(metadata i8* %39, metadata !4249, metadata !DIExpression()), !dbg !4250
  br label %56, !dbg !4285

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4286
  %42 = load i24, i24* %41, align 4, !dbg !4287
  %43 = and i24 %42, -30721, !dbg !4287
  %44 = or i24 %43, 14336, !dbg !4287
  store i24 %44, i24* %41, align 4, !dbg !4287
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4288
  call void @llvm.dbg.value(metadata i8* %45, metadata !4249, metadata !DIExpression()), !dbg !4250
  br label %56, !dbg !4289

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4290
  %48 = load i24, i24* %47, align 4, !dbg !4291
  %49 = and i24 %48, -30723, !dbg !4291
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4292
  call void @llvm.dbg.value(metadata i8* %50, metadata !4249, metadata !DIExpression()), !dbg !4250
  %51 = or i24 %49, 16386, !dbg !4293
  store i24 %51, i24* %47, align 4, !dbg !4293
  br label %56, !dbg !4294

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4295
  %54 = load i24, i24* %53, align 4, !dbg !4296
  %55 = and i24 %54, -30721, !dbg !4296
  store i24 %55, i24* %53, align 4, !dbg !4296
  br label %56, !dbg !4297

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4249, metadata !DIExpression()), !dbg !4250
  ret i8* %57, !dbg !4298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !4299 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4301, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i8* %1, metadata !4302, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i8 0, metadata !4303, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i8* %1, metadata !4302, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4306
  %3 = load i8, i8* %1, align 1, !dbg !4307
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4308
  store i8 %3, i8* %4, align 1, !dbg !4309
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4310

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4311

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4312
  %9 = load i24, i24* %8, align 4, !dbg !4312
  %10 = and i24 %9, -458753, !dbg !4312
  %11 = or i24 %10, %7, !dbg !4312
  call void @llvm.dbg.label(metadata !4304), !dbg !4313
  %12 = and i24 %9, 30720, !dbg !4314
  %13 = icmp eq i24 %12, 16384, !dbg !4314
  %14 = zext i1 %13 to i24, !dbg !4316
  %15 = or i24 %11, %14, !dbg !4316
  %16 = icmp eq i8 %3, 99, !dbg !4317
  br i1 %16, label %17, label %43, !dbg !4319

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4320
  %19 = icmp ne i24 %18, 0, !dbg !4320
  call void @llvm.dbg.value(metadata i1 %19, metadata !4303, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4306
  br label %43, !dbg !4322

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4323
  %22 = load i24, i24* %21, align 4, !dbg !4324
  %23 = and i24 %22, -458753, !dbg !4324
  %24 = or i24 %23, 262144, !dbg !4324
  call void @llvm.dbg.value(metadata i8 1, metadata !4303, metadata !DIExpression()), !dbg !4306
  br label %43, !dbg !4325

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4328
  %27 = load i24, i24* %26, align 4, !dbg !4329
  %28 = and i24 %27, -458753, !dbg !4329
  %29 = or i24 %28, 196608, !dbg !4329
  %30 = and i24 %27, 30720, !dbg !4330
  %31 = icmp eq i24 %30, 16384, !dbg !4330
  br label %43, !dbg !4332

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4333
  %34 = load i24, i24* %33, align 4, !dbg !4334
  %35 = and i24 %34, -458753, !dbg !4334
  %36 = or i24 %35, 196608, !dbg !4334
  %37 = and i24 %34, 30720, !dbg !4335
  %38 = icmp ne i24 %37, 0, !dbg !4335
  br label %43, !dbg !4337

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4338
  %41 = load i24, i24* %40, align 4, !dbg !4339
  %42 = or i24 %41, 1, !dbg !4339
  br label %43, !dbg !4340

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4341
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4342
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4343
  call void @llvm.dbg.value(metadata i8* %48, metadata !4302, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i8 poison, metadata !4303, metadata !DIExpression()), !dbg !4306
  %49 = lshr i24 %44, 1, !dbg !4341
  %50 = and i24 %49, 1, !dbg !4341
  %51 = zext i24 %50 to i32, !dbg !4341
  %52 = or i32 %51, %47, !dbg !4341
  %53 = trunc i32 %52 to i24, !dbg !4341
  %54 = shl nuw nsw i24 %53, 1, !dbg !4341
  %55 = and i24 %44, -3, !dbg !4341
  %56 = or i24 %54, %55, !dbg !4341
  store i24 %56, i24* %46, align 4, !dbg !4341
  ret i8* %48, !dbg !4344
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4345 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4350, metadata !DIExpression()), !dbg !4353
  %2 = load i8*, i8** %0, align 4, !dbg !4354
  call void @llvm.dbg.value(metadata i8* %2, metadata !4351, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata i32 0, metadata !4352, metadata !DIExpression()), !dbg !4353
  %3 = load i8, i8* %2, align 1, !dbg !4355
  %4 = zext i8 %3 to i32, !dbg !4356
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !4357
  %6 = icmp eq i32 %5, 0, !dbg !4358
  br i1 %6, label %19, label %7, !dbg !4358

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4352, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata i8* %10, metadata !4351, metadata !DIExpression()), !dbg !4353
  %11 = mul i32 %9, 10, !dbg !4359
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4361
  call void @llvm.dbg.value(metadata i8* %12, metadata !4351, metadata !DIExpression()), !dbg !4353
  %13 = add i32 %11, -48, !dbg !4362
  %14 = add i32 %13, %8, !dbg !4363
  call void @llvm.dbg.value(metadata i32 %14, metadata !4352, metadata !DIExpression()), !dbg !4353
  %15 = load i8, i8* %12, align 1, !dbg !4355
  %16 = zext i8 %15 to i32, !dbg !4356
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !4357
  %18 = icmp eq i32 %17, 0, !dbg !4358
  br i1 %18, label %19, label %7, !dbg !4358, !llvm.loop !4364

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4353
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4353
  store i8* %20, i8** %0, align 4, !dbg !4366
  ret i32 %21, !dbg !4367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4370, metadata !DIExpression()), !dbg !4371
  %2 = add i32 %0, -48, !dbg !4372
  %3 = icmp ult i32 %2, 10, !dbg !4373
  %4 = zext i1 %3 to i32, !dbg !4373
  ret i32 %4, !dbg !4374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4375 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4377, !srcloc !4378
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4379, !srcloc !4380
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4381, !srcloc !4382
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4383, !srcloc !4384
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4385, !srcloc !4386
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4387, !srcloc !4388
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4389, !srcloc !4390
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4391, !srcloc !4392
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4393, !srcloc !4394
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4395, !srcloc !4396
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4397, !srcloc !4398
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4399, !srcloc !4400
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4401, !srcloc !4402
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4403, !srcloc !4404
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4405, !srcloc !4406
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4407, !srcloc !4408
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4409, !srcloc !4410
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4411, !srcloc !4412
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4413, !srcloc !4414
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4415, !srcloc !4416
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4417, !srcloc !4418
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4419, !srcloc !4420
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4421, !srcloc !4422
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4423, !srcloc !4424
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4425, !srcloc !4426
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4427, !srcloc !4428
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4429, !srcloc !4430
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4431, !srcloc !4432
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4433, !srcloc !4434
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !4435, !srcloc !4436
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4437, !srcloc !4438
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4439, !srcloc !4440
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4441, !srcloc !4442
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !4443, !srcloc !4444
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !4445, !srcloc !4446
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !4447, !srcloc !4448
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !4449, !srcloc !4450
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4451, !srcloc !4452
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4453, !srcloc !4454
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4455, !srcloc !4456
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !4457, !srcloc !4458
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4459, !srcloc !4460
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !4461, !srcloc !4462
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4463, !srcloc !4464
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4465, !srcloc !4466
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !4467, !srcloc !4468
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4469, !srcloc !4470
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4471, !srcloc !4472
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4473, !srcloc !4474
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !4475, !srcloc !4476
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4477, !srcloc !4478
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4479, !srcloc !4480
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4481, !srcloc !4482
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4483, !srcloc !4484
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4485, !srcloc !4486
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4487, !srcloc !4488
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4489, !srcloc !4490
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4491, !srcloc !4492
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4493, !srcloc !4494
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4495, !srcloc !4496
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4497, !srcloc !4498
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4499, !srcloc !4500
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4501, !srcloc !4502
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4503, !srcloc !4504
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4505, !srcloc !4506
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4507, !srcloc !4508
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4509, !srcloc !4510
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4511, !srcloc !4512
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4513, !srcloc !4514
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4515, !srcloc !4516
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4517, !srcloc !4518
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4519, !srcloc !4520
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4521, !srcloc !4522
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4523, !srcloc !4524
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4525, !srcloc !4526
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4527, !srcloc !4528
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4529, !srcloc !4530
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4531, !srcloc !4532
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4533, !srcloc !4534
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4535, !srcloc !4536
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4537, !srcloc !4538
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4539, !srcloc !4540
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4541, !srcloc !4542
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4543, !srcloc !4544
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4545, !srcloc !4546
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4547, !srcloc !4548
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4549, !srcloc !4550
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4551, !srcloc !4552
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !4553, !srcloc !4554
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4555, !srcloc !4556
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4557, !srcloc !4558
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4559, !srcloc !4560
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4561, !srcloc !4562
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4563, !srcloc !4564
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !4565, !srcloc !4566
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4567, !srcloc !4568
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4569, !srcloc !4570
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4571, !srcloc !4572
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4573, !srcloc !4574
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4575, !srcloc !4576
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4577, !srcloc !4578
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4579, !srcloc !4580
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4581, !srcloc !4582
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4583, !srcloc !4584
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4585, !srcloc !4586
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4587, !srcloc !4588
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4589, !srcloc !4590
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4591, !srcloc !4592
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4593, !srcloc !4594
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4595, !srcloc !4596
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4597, !srcloc !4598
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4599, !srcloc !4600
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4601, !srcloc !4602
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4603, !srcloc !4604
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4605, !srcloc !4606
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4607, !srcloc !4608
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4609, !srcloc !4610
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4611, !srcloc !4612
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4613, !srcloc !4614
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4615, !srcloc !4616
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4617, !srcloc !4618
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4619, !srcloc !4620
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4621, !srcloc !4622
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4623, !srcloc !4624
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4625, !srcloc !4626
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4627, !srcloc !4628
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4629, !srcloc !4630
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4631, !srcloc !4632
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4633, !srcloc !4634
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4635, !srcloc !4636
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4637, !srcloc !4638
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4639, !srcloc !4640
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4641, !srcloc !4642
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4643, !srcloc !4644
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4645, !srcloc !4646
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4647, !srcloc !4648
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4649, !srcloc !4650
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4651, !srcloc !4652
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4653, !srcloc !4654
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4655, !srcloc !4656
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4657, !srcloc !4658
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4659, !srcloc !4660
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4661, !srcloc !4662
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4663, !srcloc !4664
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4665, !srcloc !4666
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4667, !srcloc !4668
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4669, !srcloc !4670
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4671, !srcloc !4672
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4673, !srcloc !4674
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4675, !srcloc !4676
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4677, !srcloc !4678
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !4679, !srcloc !4680
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4681, !srcloc !4682
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4683, !srcloc !4684
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4685, !srcloc !4686
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4687, !srcloc !4688
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4689, !srcloc !4690
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4691, !srcloc !4692
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4693, !srcloc !4694
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4695, !srcloc !4696
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4697, !srcloc !4698
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4699, !srcloc !4700
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4701, !srcloc !4702
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4703, !srcloc !4704
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4705, !srcloc !4706
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_CPU_MASK\0A\09.equ\09CONFIG_SCHED_CPU_MASK,1\0A\09.type\09CONFIG_SCHED_CPU_MASK,%object", ""() #23, !dbg !4707, !srcloc !4708
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4709, !srcloc !4710
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4711, !srcloc !4712
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4713, !srcloc !4714
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4715, !srcloc !4716
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4717, !srcloc !4718
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4719, !srcloc !4720
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4721, !srcloc !4722
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4723, !srcloc !4724
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !4725, !srcloc !4726
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !4727, !srcloc !4728
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4729, !srcloc !4730
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4731, !srcloc !4732
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4733, !srcloc !4734
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4735, !srcloc !4736
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4737, !srcloc !4738
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4739, !srcloc !4740
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4741, !srcloc !4742
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4743, !srcloc !4744
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4745, !srcloc !4746
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4747, !srcloc !4748
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4749, !srcloc !4750
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4751, !srcloc !4752
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4753, !srcloc !4754
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4755, !srcloc !4756
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4757, !srcloc !4758
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4759, !srcloc !4760
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4761, !srcloc !4762
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4763, !srcloc !4764
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4765, !srcloc !4766
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4767, !srcloc !4768
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4769, !srcloc !4770
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4771, !srcloc !4772
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4773, !srcloc !4774
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4775, !srcloc !4776
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4777, !srcloc !4778
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4779, !srcloc !4780
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4781, !srcloc !4782
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4783, !srcloc !4784
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4785, !srcloc !4786
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !4787, !srcloc !4788
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4789, !srcloc !4790
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4791, !srcloc !4792
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4793, !srcloc !4794
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4795, !srcloc !4796
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4797, !srcloc !4798
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4799, !srcloc !4800
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4801, !srcloc !4802
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4803, !srcloc !4804
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4805, !srcloc !4806
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4807, !srcloc !4808
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4809, !srcloc !4810
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4811, !srcloc !4812
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !4813, !srcloc !4814
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4815, !srcloc !4816
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !4817, !srcloc !4818
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4819, !srcloc !4820
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4821, !srcloc !4822
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4823, !srcloc !4824
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4825, !srcloc !4826
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4827, !srcloc !4828
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4829, !srcloc !4830
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4831, !srcloc !4832
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4833, !srcloc !4834
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4835, !srcloc !4836
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4837, !srcloc !4838
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4839, !srcloc !4840
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4841, !srcloc !4842
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4843, !srcloc !4844
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4845, !srcloc !4846
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4847, !srcloc !4848
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4849, !srcloc !4850
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4851, !srcloc !4852
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4853, !srcloc !4854
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4855, !srcloc !4856
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4857, !srcloc !4858
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4859, !srcloc !4860
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4861, !srcloc !4862
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4863, !srcloc !4864
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4865, !srcloc !4866
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4867, !srcloc !4868
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4869, !srcloc !4870
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4871, !srcloc !4872
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4873, !srcloc !4874
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4875, !srcloc !4876
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4877, !srcloc !4878
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4879, !srcloc !4880
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4881, !srcloc !4882
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4883, !srcloc !4884
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4885, !srcloc !4886
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4887, !srcloc !4888
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4889, !srcloc !4890
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4891, !srcloc !4892
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4893, !srcloc !4894
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4895, !srcloc !4896
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4897, !srcloc !4898
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4899, !srcloc !4900
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4901, !srcloc !4902
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !4903, !srcloc !4904
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !4905, !srcloc !4906
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !4907, !srcloc !4908
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !4909, !srcloc !4910
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !4911, !srcloc !4912
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !4913, !srcloc !4914
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !4915, !srcloc !4916
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !4917, !srcloc !4918
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !4919, !srcloc !4920
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !4921, !srcloc !4922
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !4923, !srcloc !4924
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !4925, !srcloc !4926
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !4927, !srcloc !4928
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !4929, !srcloc !4930
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !4931, !srcloc !4932
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !4933, !srcloc !4934
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !4935, !srcloc !4936
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !4937, !srcloc !4938
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !4939, !srcloc !4940
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !4941, !srcloc !4942
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !4943, !srcloc !4944
  ret void, !dbg !4945
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4946 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4948, metadata !DIExpression()), !dbg !4950
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !4951
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !4952
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4953, !srcloc !4962
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4953
  call void @llvm.dbg.value(metadata i32 %3, metadata !4959, metadata !DIExpression()) #23, !dbg !4963
  call void @llvm.dbg.value(metadata i32 undef, metadata !4960, metadata !DIExpression()) #23, !dbg !4963
  call void @llvm.dbg.value(metadata i32 %3, metadata !4949, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata i32 %3, metadata !4964, metadata !DIExpression()) #23, !dbg !4969
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !4971, !srcloc !4972
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !4973
  ret i32 0, !dbg !4974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !4975 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4977
  %2 = or i32 %1, 512, !dbg !4977
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4977
  ret void, !dbg !4978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !4979 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4980
  %2 = or i32 %1, 1024, !dbg !4980
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4980
  ret void, !dbg !4981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !4982 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4984, metadata !DIExpression()), !dbg !4985
  ret i32 0, !dbg !4986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !4987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5036, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5037, metadata !DIExpression()), !dbg !5038
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !5039
  ret void, !dbg !5040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5041 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5058, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5059, metadata !DIExpression()), !dbg !5061
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5062
  %4 = load i32, i32* %3, align 4, !dbg !5062
  call void @llvm.dbg.value(metadata i32 %4, metadata !5060, metadata !DIExpression()), !dbg !5061
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !5063
  ret void, !dbg !5064
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5065 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5069, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.value(metadata i8* %0, metadata !5070, metadata !DIExpression()), !dbg !5072
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5073
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !5073
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5071, metadata !DIExpression()), !dbg !5074
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5074
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5075
  %5 = bitcast i8* %4 to i32*, !dbg !5075
  %6 = load i32, i32* %5, align 4, !dbg !5075
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5076
  store i32 %6, i32* %7, align 4, !dbg !5077
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !5078
  unreachable, !dbg !5079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5083, metadata !DIExpression()), !dbg !5084
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !5085
  ret void, !dbg !5086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5087 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5091, metadata !DIExpression()), !dbg !5092
  %2 = icmp sgt i32 %0, -1, !dbg !5093
  br i1 %2, label %3, label %8, !dbg !5095

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5096, !srcloc !5098
  %4 = and i32 %0, 31, !dbg !5099
  %5 = shl nuw i32 1, %4, !dbg !5100
  %6 = lshr i32 %0, 5, !dbg !5101
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5102
  store volatile i32 %5, i32* %7, align 4, !dbg !5103
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5104, !srcloc !5105
  br label %8, !dbg !5106

8:                                                ; preds = %3, %1
  ret void, !dbg !5107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5110, metadata !DIExpression()), !dbg !5111
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !5112
  ret void, !dbg !5113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5116, metadata !DIExpression()), !dbg !5117
  %2 = icmp sgt i32 %0, -1, !dbg !5118
  br i1 %2, label %3, label %8, !dbg !5120

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5121
  %5 = shl nuw i32 1, %4, !dbg !5123
  %6 = lshr i32 %0, 5, !dbg !5124
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5125
  store volatile i32 %5, i32* %7, align 4, !dbg !5126
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5127, !srcloc !5131
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5132, !srcloc !5135
  br label %8, !dbg !5136

8:                                                ; preds = %3, %1
  ret void, !dbg !5137
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !5138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5142, metadata !DIExpression()), !dbg !5143
  %2 = lshr i32 %0, 5, !dbg !5144
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5145
  %4 = load volatile i32, i32* %3, align 4, !dbg !5145
  %5 = and i32 %0, 31, !dbg !5146
  %6 = shl nuw i32 1, %5, !dbg !5146
  %7 = and i32 %4, %6, !dbg !5147
  ret i32 %7, !dbg !5148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5153, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.value(metadata i32 %1, metadata !5154, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.value(metadata i32 %2, metadata !5155, metadata !DIExpression()), !dbg !5156
  %4 = add i32 %1, 1, !dbg !5157
  call void @llvm.dbg.value(metadata i32 %4, metadata !5154, metadata !DIExpression()), !dbg !5156
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !5160
  ret void, !dbg !5161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5166, metadata !DIExpression()), !dbg !5168
  call void @llvm.dbg.value(metadata i32 %1, metadata !5167, metadata !DIExpression()), !dbg !5168
  %3 = trunc i32 %1 to i8, !dbg !5169
  %4 = shl i8 %3, 4, !dbg !5169
  %5 = and i32 %0, 15, !dbg !5171
  %6 = add nsw i32 %5, -4, !dbg !5171
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5171
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5171
  %9 = icmp slt i32 %0, 0, !dbg !5171
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5171
  store volatile i8 %4, i8* %10, align 1, !dbg !5169
  ret void, !dbg !5172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5173 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5175, metadata !DIExpression()), !dbg !5176
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !5177
  ret void, !dbg !5178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5179 {
  tail call void @z_SysNmiOnReset() #26, !dbg !5181
  tail call void @z_arm_int_exit() #26, !dbg !5182
  ret void, !dbg !5183
}

; Function Attrs: optsize
declare !dbg !5184 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5185 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !5187 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !5189
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !5190
  tail call void @z_bss_zero() #26, !dbg !5191
  tail call void @z_data_copy() #26, !dbg !5192
  tail call void @z_arm_interrupt_init() #26, !dbg !5193
  tail call void @z_cstart() #27, !dbg !5194
  unreachable, !dbg !5194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5195 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5196
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5197, !srcloc !5200
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5201, !srcloc !5204
  ret void, !dbg !5205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !5206 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5207
  %2 = and i32 %1, -15728641, !dbg !5207
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5207
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !5208, !srcloc !5215
  call void @llvm.dbg.value(metadata i32 %3, metadata !5213, metadata !DIExpression()) #23, !dbg !5216
  %4 = and i32 %3, -5, !dbg !5217
  call void @llvm.dbg.value(metadata i32 %4, metadata !5218, metadata !DIExpression()) #23, !dbg !5221
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !5223, !srcloc !5224
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5225, !srcloc !5204
  ret void, !dbg !5227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5231, metadata !DIExpression()), !dbg !5232
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5233
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !5234
  store i32 %0, i32* %3, align 4, !dbg !5235
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5236
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !5237
  store i32 %4, i32* %5, align 4, !dbg !5238
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5239
  %7 = or i32 %6, 268435456, !dbg !5239
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5239
  call void @llvm.dbg.value(metadata i32 0, metadata !5240, metadata !DIExpression()) #23, !dbg !5243
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5245, !srcloc !5246
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5247
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !5248
  %10 = load i32, i32* %9, align 4, !dbg !5248
  ret i32 %10, !dbg !5249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #5 !dbg !5250 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5362, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5363, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i8* %2, metadata !5364, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5365, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i8* %4, metadata !5366, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i8* %5, metadata !5367, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i8* %6, metadata !5368, metadata !DIExpression()), !dbg !5370
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5371
  call void @llvm.dbg.value(metadata i8* %8, metadata !5369, metadata !DIExpression()), !dbg !5370
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5372
  %10 = bitcast i8* %9 to i32*, !dbg !5372
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5373
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5374
  %12 = bitcast i8* %8 to i32*, !dbg !5375
  store i32 %11, i32* %12, align 4, !dbg !5376
  %13 = ptrtoint i8* %4 to i32, !dbg !5377
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5378
  %15 = bitcast i8* %14 to i32*, !dbg !5378
  store i32 %13, i32* %15, align 4, !dbg !5379
  %16 = ptrtoint i8* %5 to i32, !dbg !5380
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5381
  %18 = bitcast i8* %17 to i32*, !dbg !5381
  store i32 %16, i32* %18, align 4, !dbg !5382
  %19 = ptrtoint i8* %6 to i32, !dbg !5383
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5384
  %21 = bitcast i8* %20 to i32*, !dbg !5384
  store i32 %19, i32* %21, align 4, !dbg !5385
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5386
  %23 = bitcast i8* %22 to i32*, !dbg !5386
  store i32 16777216, i32* %23, align 4, !dbg !5387
  %24 = ptrtoint i8* %8 to i32, !dbg !5388
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5389
  store i32 %24, i32* %25, align 8, !dbg !5390
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !5391
  store i32 0, i32* %26, align 4, !dbg !5392
  ret void, !dbg !5393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !5394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5399, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata i32 %1, metadata !5400, metadata !DIExpression()), !dbg !5405
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5406
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5401, metadata !DIExpression()), !dbg !5405
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5407
  br i1 %4, label %19, label %5, !dbg !5409

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5404, metadata !DIExpression()), !dbg !5405
  %6 = icmp eq i32 %0, -22, !dbg !5410
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !5410
  %8 = load i32, i32* %7, align 4, !dbg !5410
  br i1 %6, label %16, label %9, !dbg !5412

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5410
  %11 = icmp ule i32 %10, %0, !dbg !5410
  %12 = icmp ugt i32 %8, %0, !dbg !5410
  %13 = and i1 %12, %11, !dbg !5410
  %14 = icmp ugt i32 %8, %1, !dbg !5410
  %15 = and i1 %14, %13, !dbg !5410
  br i1 %15, label %18, label %19, !dbg !5410

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5410
  br i1 %17, label %18, label %19, !dbg !5412

18:                                               ; preds = %9, %16
  br label %19, !dbg !5413

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5405
  ret i32 %20, !dbg !5415
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !5416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5420, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i8* %1, metadata !5421, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5422, metadata !DIExpression()), !dbg !5423
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5424
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !5425
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5426, !srcloc !5427
  unreachable, !dbg !5428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5429 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5447, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata i32 %1, metadata !5448, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata i32 %2, metadata !5449, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5450, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata i32 0, metadata !5451, metadata !DIExpression()), !dbg !5457
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5458
  %9 = and i32 %8, 511, !dbg !5459
  call void @llvm.dbg.value(metadata i32 %9, metadata !5452, metadata !DIExpression()), !dbg !5457
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5460
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5460
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5461
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5461
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5456, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.value(metadata i32 0, metadata !5463, metadata !DIExpression()) #23, !dbg !5466
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5468, !srcloc !5469
  call void @llvm.dbg.value(metadata i8* %6, metadata !5454, metadata !DIExpression(DW_OP_deref)), !dbg !5457
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !5470
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5455, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata i8* %5, metadata !5453, metadata !DIExpression(DW_OP_deref)), !dbg !5457
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !5471
  call void @llvm.dbg.value(metadata i32 %12, metadata !5451, metadata !DIExpression()), !dbg !5457
  %13 = load i8, i8* %5, align 1, !dbg !5472, !range !5474
  call void @llvm.dbg.value(metadata i8 %13, metadata !5453, metadata !DIExpression()), !dbg !5457
  %14 = icmp eq i8 %13, 0, !dbg !5472
  br i1 %14, label %15, label %32, !dbg !5475

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5476
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #26, !dbg !5477
  %18 = load i8, i8* %6, align 1, !dbg !5478, !range !5474
  call void @llvm.dbg.value(metadata i8 %18, metadata !5454, metadata !DIExpression()), !dbg !5457
  %19 = icmp eq i8 %18, 0, !dbg !5478
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5480
  %21 = load i32, i32* %20, align 4, !dbg !5480
  br i1 %19, label %27, label %22, !dbg !5481

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5482
  %24 = icmp eq i32 %23, 0, !dbg !5485
  br i1 %24, label %25, label %31, !dbg !5486

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5487
  br label %29, !dbg !5489

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5490
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5480
  br label %31, !dbg !5492

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #26, !dbg !5492
  br label %32, !dbg !5493

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5493
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5493
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5493
  ret void, !dbg !5493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #5 !dbg !5494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5499, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.value(metadata i32 %1, metadata !5500, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.value(metadata i32 %2, metadata !5501, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.value(metadata i8* %3, metadata !5502, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.value(metadata i8 0, metadata !5503, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5504, metadata !DIExpression()), !dbg !5505
  store i8 0, i8* %3, align 1, !dbg !5506
  %5 = icmp ult i32 %2, -16777216, !dbg !5507
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5509
  br i1 %8, label %16, label %9, !dbg !5509

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5510
  %11 = icmp eq i32 %10, 0, !dbg !5510
  br i1 %11, label %12, label %13, !dbg !5512

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5504, metadata !DIExpression()), !dbg !5505
  store i8 1, i8* %3, align 1, !dbg !5515
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5505
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5504, metadata !DIExpression()), !dbg !5505
  br label %16, !dbg !5518

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5505
  ret %struct.__esf* %17, !dbg !5519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5520 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5524, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %1, metadata !5525, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i8* %2, metadata !5526, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 0, metadata !5527, metadata !DIExpression()), !dbg !5528
  store i8 0, i8* %2, align 1, !dbg !5529
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5530

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !5531
  call void @llvm.dbg.value(metadata i32 %5, metadata !5527, metadata !DIExpression()), !dbg !5528
  br label %11, !dbg !5533

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5534
  call void @llvm.dbg.value(metadata i32 %7, metadata !5527, metadata !DIExpression()), !dbg !5528
  br label %11, !dbg !5535

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5536
  call void @llvm.dbg.value(metadata i32 0, metadata !5527, metadata !DIExpression()), !dbg !5528
  br label %11, !dbg !5537

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !5538
  call void @llvm.dbg.value(metadata i32 0, metadata !5527, metadata !DIExpression()), !dbg !5528
  br label %11, !dbg !5539

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !5540
  br label %11, !dbg !5541

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5542
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5543 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5547, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata i8* %1, metadata !5548, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata i32 0, metadata !5549, metadata !DIExpression()), !dbg !5550
  store i8 0, i8* %1, align 1, !dbg !5551
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5552
  %4 = and i32 %3, 2, !dbg !5554
  %5 = icmp eq i32 %4, 0, !dbg !5555
  br i1 %5, label %6, label %33, !dbg !5556

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5557
  %8 = icmp sgt i32 %7, -1, !dbg !5559
  br i1 %8, label %9, label %33, !dbg !5560

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5561
  %11 = and i32 %10, 1073741824, !dbg !5563
  %12 = icmp eq i32 %11, 0, !dbg !5564
  br i1 %12, label %33, label %13, !dbg !5565

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !5566
  br i1 %14, label %15, label %18, !dbg !5569

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5570
  %17 = load i32, i32* %16, align 4, !dbg !5570
  call void @llvm.dbg.value(metadata i32 %17, metadata !5549, metadata !DIExpression()), !dbg !5550
  br label %33, !dbg !5572

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5573
  %20 = and i32 %19, 255, !dbg !5575
  %21 = icmp eq i32 %20, 0, !dbg !5576
  br i1 %21, label %24, label %22, !dbg !5577

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5578
  call void @llvm.dbg.value(metadata i32 %23, metadata !5549, metadata !DIExpression()), !dbg !5550
  br label %33, !dbg !5580

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5581
  %26 = and i32 %25, 65280, !dbg !5583
  %27 = icmp eq i32 %26, 0, !dbg !5584
  br i1 %27, label %29, label %28, !dbg !5585

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5586
  call void @llvm.dbg.value(metadata i32 0, metadata !5549, metadata !DIExpression()), !dbg !5550
  br label %33, !dbg !5588

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5589
  %31 = icmp ult i32 %30, 65536, !dbg !5591
  br i1 %31, label %33, label %32, !dbg !5592

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #24, !dbg !5593
  call void @llvm.dbg.value(metadata i32 0, metadata !5549, metadata !DIExpression()), !dbg !5550
  br label %33, !dbg !5595

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5550
  call void @llvm.dbg.value(metadata i32 %34, metadata !5549, metadata !DIExpression()), !dbg !5550
  ret i32 %34, !dbg !5596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5597 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5599, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.value(metadata i32 %1, metadata !5600, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.value(metadata i8* %2, metadata !5601, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.value(metadata i32 0, metadata !5602, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.value(metadata i32 -22, metadata !5603, metadata !DIExpression()), !dbg !5612
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5613
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5615
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5617
  %7 = and i32 %6, 2, !dbg !5618
  %8 = icmp eq i32 %7, 0, !dbg !5619
  br i1 %8, label %19, label %9, !dbg !5620

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5621
  call void @llvm.dbg.value(metadata i32 %10, metadata !5604, metadata !DIExpression()), !dbg !5622
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5623
  %12 = and i32 %11, 128, !dbg !5625
  %13 = icmp eq i32 %12, 0, !dbg !5626
  br i1 %13, label %19, label %14, !dbg !5627

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5603, metadata !DIExpression()), !dbg !5612
  %15 = icmp eq i32 %1, 0, !dbg !5628
  br i1 %15, label %19, label %16, !dbg !5631

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5632
  %18 = and i32 %17, -129, !dbg !5632
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5632
  br label %19, !dbg !5634

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5612
  call void @llvm.dbg.value(metadata i32 %20, metadata !5603, metadata !DIExpression()), !dbg !5612
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5635
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5637
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5639
  %24 = and i32 %23, 16, !dbg !5640
  %25 = icmp eq i32 %24, 0, !dbg !5640
  br i1 %25, label %26, label %30, !dbg !5641

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5642
  %28 = and i32 %27, 2, !dbg !5643
  %29 = icmp eq i32 %28, 0, !dbg !5643
  br i1 %29, label %39, label %30, !dbg !5644

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5645
  %32 = and i32 %31, 2048, !dbg !5646
  %33 = icmp eq i32 %32, 0, !dbg !5646
  br i1 %33, label %39, label %34, !dbg !5647

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5648
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #26, !dbg !5649
  call void @llvm.dbg.value(metadata i32 %36, metadata !5607, metadata !DIExpression()), !dbg !5650
  %37 = icmp eq i32 %36, 0, !dbg !5651
  br i1 %37, label %39, label %38, !dbg !5653

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5654, metadata !DIExpression()) #23, !dbg !5657
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5660, !srcloc !5661
  call void @llvm.dbg.value(metadata i32 2, metadata !5602, metadata !DIExpression()), !dbg !5612
  br label %39, !dbg !5662

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5612
  call void @llvm.dbg.value(metadata i32 %40, metadata !5602, metadata !DIExpression()), !dbg !5612
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5663
  %42 = and i32 %41, 32, !dbg !5665
  %43 = icmp eq i32 %42, 0, !dbg !5666
  br i1 %43, label %47, label %44, !dbg !5667

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5668
  %46 = and i32 %45, -8193, !dbg !5668
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5668
  br label %47, !dbg !5670

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5671
  %49 = or i32 %48, 255, !dbg !5671
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5671
  store i8 0, i8* %2, align 1, !dbg !5672
  ret i32 %40, !dbg !5673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !5674 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5678, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %0, metadata !5679, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8* %1, metadata !5680, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 0, metadata !5681, metadata !DIExpression()), !dbg !5685
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5686
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5688
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5690
  %6 = and i32 %5, 512, !dbg !5691
  %7 = icmp eq i32 %6, 0, !dbg !5691
  br i1 %7, label %18, label %8, !dbg !5692

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5693
  call void @llvm.dbg.value(metadata i32 %9, metadata !5682, metadata !DIExpression()), !dbg !5694
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5695
  %11 = and i32 %10, 32768, !dbg !5697
  %12 = icmp ne i32 %11, 0, !dbg !5698
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5699
  br i1 %14, label %15, label %18, !dbg !5699

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5700
  %17 = and i32 %16, -32769, !dbg !5700
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5700
  br label %18, !dbg !5704

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5705
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5707
  %21 = and i32 %20, 256, !dbg !5709
  %22 = icmp eq i32 %21, 0, !dbg !5710
  br i1 %22, label %23, label %25, !dbg !5711

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5712
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5714
  %27 = or i32 %26, 65280, !dbg !5714
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5714
  store i8 0, i8* %1, align 1, !dbg !5715
  ret void, !dbg !5716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !5717 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5723, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.value(metadata i32 0, metadata !5724, metadata !DIExpression()), !dbg !5725
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5726
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5728
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5730
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5732
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5734
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5736
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5738
  %8 = or i32 %7, -65536, !dbg !5738
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5738
  ret void, !dbg !5739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !5740 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5744, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.value(metadata i8* %0, metadata !5745, metadata !DIExpression()), !dbg !5746
  store i8 0, i8* %0, align 1, !dbg !5747
  ret void, !dbg !5748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5749 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5753, metadata !DIExpression()), !dbg !5756
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5757
  %3 = load i32, i32* %2, align 4, !dbg !5757
  %4 = inttoptr i32 %3 to i16*, !dbg !5758
  call void @llvm.dbg.value(metadata i16* %4, metadata !5754, metadata !DIExpression()), !dbg !5756
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5759
  %6 = or i32 %5, 256, !dbg !5759
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5759
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5760, !srcloc !5763
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5764, !srcloc !5767
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5768
  %8 = load i16, i16* %7, align 2, !dbg !5769
  call void @llvm.dbg.value(metadata i16 %8, metadata !5755, metadata !DIExpression()), !dbg !5756
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5770
  %10 = and i32 %9, -257, !dbg !5770
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5770
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5771, !srcloc !5763
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5773, !srcloc !5767
  %11 = icmp eq i16 %8, -8446, !dbg !5775
  ret i1 %11, !dbg !5777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !5778 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5779
  %2 = or i32 %1, 16, !dbg !5779
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5779
  ret void, !dbg !5780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !5781 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5784, metadata !DIExpression()), !dbg !5785
  br label %1, !dbg !5786

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5784, metadata !DIExpression()), !dbg !5785
  tail call fastcc void @__NVIC_SetPriority.14(i32 noundef %2) #24, !dbg !5788
  %3 = add nuw nsw i32 %2, 1, !dbg !5791
  call void @llvm.dbg.value(metadata i32 %3, metadata !5784, metadata !DIExpression()), !dbg !5785
  %4 = icmp eq i32 %3, 97, !dbg !5792
  br i1 %4, label %5, label %1, !dbg !5786, !llvm.loop !5793

5:                                                ; preds = %1
  ret void, !dbg !5795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.14(i32 noundef %0) unnamed_addr #13 !dbg !5796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5798, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata i32 1, metadata !5799, metadata !DIExpression()), !dbg !5800
  %2 = and i32 %0, 15, !dbg !5801
  %3 = add nsw i32 %2, -4, !dbg !5801
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5801
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5801
  %6 = icmp slt i32 %0, 0, !dbg !5801
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5801
  store volatile i8 16, i8* %7, align 1, !dbg !5802
  ret void, !dbg !5804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5805 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5913, metadata !DIExpression()), !dbg !5914
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5915
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !5917
  br i1 %3, label %4, label %12, !dbg !5918

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !5919, !srcloc !5931
  call void @llvm.dbg.value(metadata i32 %5, metadata !5922, metadata !DIExpression()) #23, !dbg !5932
  %6 = icmp eq i32 %5, 0, !dbg !5933
  br i1 %6, label %12, label %7, !dbg !5934

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5935
  %9 = or i32 %8, 268435456, !dbg !5935
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5935
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5937
  %11 = and i32 %10, -32769, !dbg !5937
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5937
  br label %12, !dbg !5938

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !5939
  ret void, !dbg !5940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !5941 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !5942
  ret void, !dbg !5943
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !468, metadata !DIExpression()), !dbg !5944
  call void @llvm.dbg.value(metadata i8 0, metadata !469, metadata !DIExpression()), !dbg !5944
  call void @llvm.dbg.value(metadata i32 64, metadata !471, metadata !DIExpression()), !dbg !5944
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !5945
  %3 = load i32, i32* %2, align 4, !dbg !5945
  %4 = add i32 %3, -64, !dbg !5947
  call void @llvm.dbg.value(metadata i32 %4, metadata !470, metadata !DIExpression()), !dbg !5944
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !5948
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !5949
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !5950
  call void @llvm.dbg.value(metadata i8 1, metadata !469, metadata !DIExpression()), !dbg !5944
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !5951
  ret void, !dbg !5952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !5953 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5954
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5955, !srcloc !5958
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5959, !srcloc !5962
  ret void, !dbg !5963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !5964 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !5965, !srcloc !5968
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5969
  ret void, !dbg !5970
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !5971 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5986, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.value(metadata i8 %1, metadata !5987, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.value(metadata i32 %2, metadata !5988, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.value(metadata i32 %3, metadata !5989, metadata !DIExpression()), !dbg !5990
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !5991
  ret void, !dbg !5993
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5994 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5999, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i8 %1, metadata !6000, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i32 undef, metadata !6001, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i32 undef, metadata !6002, metadata !DIExpression()), !dbg !6004
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6005
  call void @llvm.dbg.value(metadata i8 %3, metadata !6003, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6004
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !6006
  call void @llvm.dbg.value(metadata i32 %4, metadata !6003, metadata !DIExpression()), !dbg !6004
  %5 = trunc i32 %4 to i8, !dbg !6007
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6008
  ret void, !dbg !6009
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !6010 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6014, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8 %1, metadata !6015, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8 %2, metadata !6016, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i1 %3, metadata !6017, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6020
  %5 = zext i8 %2 to i32, !dbg !6021
  call void @llvm.dbg.value(metadata i32 %5, metadata !6019, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i32 0, metadata !6018, metadata !DIExpression()), !dbg !6020
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6019, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i32 0, metadata !6018, metadata !DIExpression()), !dbg !6020
  %7 = icmp eq i8 %1, 0, !dbg !6022
  br i1 %7, label %29, label %8, !dbg !6025

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6019, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i32 %10, metadata !6018, metadata !DIExpression()), !dbg !6020
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6026
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6029
  %13 = load i32, i32* %12, align 4, !dbg !6029
  %14 = icmp eq i32 %13, 0, !dbg !6030
  br i1 %14, label %25, label %15, !dbg !6031

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6032

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !6034
  %18 = icmp eq i32 %17, 0, !dbg !6034
  br i1 %18, label %29, label %19, !dbg !6035

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6036
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !6037
  call void @llvm.dbg.value(metadata i32 %21, metadata !6019, metadata !DIExpression()), !dbg !6020
  %22 = icmp eq i32 %21, -22, !dbg !6038
  br i1 %22, label %29, label %23, !dbg !6040

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6041
  call void @llvm.dbg.value(metadata i32 %24, metadata !6019, metadata !DIExpression()), !dbg !6020
  br label %25, !dbg !6042

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6020
  call void @llvm.dbg.value(metadata i32 %26, metadata !6019, metadata !DIExpression()), !dbg !6020
  %27 = add nuw nsw i32 %10, 1, !dbg !6043
  call void @llvm.dbg.value(metadata i32 %27, metadata !6018, metadata !DIExpression()), !dbg !6020
  %28 = icmp eq i32 %27, %6, !dbg !6022
  br i1 %28, label %29, label %8, !dbg !6025, !llvm.loop !6044

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6020
  ret i32 %30, !dbg !6046
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !6047 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6051, metadata !DIExpression()), !dbg !6053
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6054
  %3 = load i32, i32* %2, align 4, !dbg !6054
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6055, !range !6056
  %5 = icmp ult i32 %4, 2, !dbg !6055
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6057
  br i1 %7, label %8, label %15, !dbg !6057

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6058
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6059
  %11 = load i32, i32* %10, align 4, !dbg !6059
  %12 = and i32 %11, %9, !dbg !6060
  %13 = icmp eq i32 %12, 0, !dbg !6061
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6052, metadata !DIExpression()), !dbg !6053
  ret i32 %16, !dbg !6062
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6063 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6067, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6068, metadata !DIExpression()), !dbg !6070
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6071
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6071
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6069, metadata !DIExpression()), !dbg !6072
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6073
  %6 = load i32, i32* %5, align 4, !dbg !6073
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6074
  store i32 %6, i32* %7, align 4, !dbg !6075
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6076
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6077
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6078
  %11 = load i32, i32* %10, align 4, !dbg !6078
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* noundef nonnull %8, %union.anon* noundef nonnull %9, i32 noundef %11) #24, !dbg !6079
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !6080
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6081
  ret i32 %12, !dbg !6082
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* nocapture noundef writeonly %0, %union.anon* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !6083 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !6090, metadata !DIExpression()), !dbg !6094
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !6091, metadata !DIExpression()), !dbg !6094
  call void @llvm.dbg.value(metadata i32 undef, metadata !6092, metadata !DIExpression()), !dbg !6094
  call void @llvm.dbg.value(metadata i32 %2, metadata !6093, metadata !DIExpression()), !dbg !6094
  %4 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !6095
  %5 = load i32, i32* %4, align 4, !dbg !6095
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !6096
  %7 = or i32 %6, %5, !dbg !6097
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !6098
  store i32 %7, i32* %8, align 4, !dbg !6099
  ret void, !dbg !6100
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !6101 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6105, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6106, metadata !DIExpression()), !dbg !6107
  %3 = zext i8 %0 to i32, !dbg !6108
  %4 = icmp ugt i8 %0, 7, !dbg !6110
  br i1 %4, label %6, label %5, !dbg !6111

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !6112
  br label %6, !dbg !6113

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6107
  ret i32 %7, !dbg !6114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !6115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6119, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6120, metadata !DIExpression()), !dbg !6121
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !6122
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6123
  %4 = load i32, i32* %3, align 4, !dbg !6123
  %5 = and i32 %4, -32, !dbg !6124
  %6 = or i32 %5, %0, !dbg !6125
  %7 = or i32 %6, 16, !dbg !6125
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6126
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6127
  %9 = load i32, i32* %8, align 4, !dbg !6127
  %10 = or i32 %9, 1, !dbg !6128
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6129
  ret void, !dbg !6130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !6131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6134, metadata !DIExpression()), !dbg !6135
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6136
  ret void, !dbg !6137
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #4 !dbg !6138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6142, metadata !DIExpression()), !dbg !6143
  %2 = icmp ult i32 %0, 33, !dbg !6144
  br i1 %2, label %11, label %3, !dbg !6146

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6147
  br i1 %4, label %11, label %5, !dbg !6149

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6150
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6151, !range !6056
  %8 = mul nsw i32 %7, -2, !dbg !6152
  %9 = add nsw i32 %8, 62, !dbg !6152
  %10 = and i32 %9, 62, !dbg !6153
  br label %11, !dbg !6154

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6143
  ret i32 %12, !dbg !6155
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !6156 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6160, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata i8 %1, metadata !6161, metadata !DIExpression()), !dbg !6162
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !6163
  ret void, !dbg !6165
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6166 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6170, metadata !DIExpression()), !dbg !6177
  call void @llvm.dbg.value(metadata i8 %1, metadata !6171, metadata !DIExpression()), !dbg !6177
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6178
  call void @llvm.dbg.value(metadata i8 %3, metadata !6172, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6177
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !6179
  call void @llvm.dbg.value(metadata i32 %4, metadata !6172, metadata !DIExpression()), !dbg !6177
  %5 = icmp ne i32 %4, -22, !dbg !6180
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6181
  call void @llvm.dbg.value(metadata i32 %4, metadata !6173, metadata !DIExpression()), !dbg !6182
  br i1 %7, label %8, label %12, !dbg !6181

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6173, metadata !DIExpression()), !dbg !6182
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !6183
  %10 = add i32 %9, 1, !dbg !6186
  call void @llvm.dbg.value(metadata i32 %10, metadata !6173, metadata !DIExpression()), !dbg !6182
  %11 = icmp eq i32 %10, 8, !dbg !6187
  br i1 %11, label %12, label %8, !dbg !6188, !llvm.loop !6189

12:                                               ; preds = %8, %2
  ret void, !dbg !6191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !6192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6195, metadata !DIExpression()), !dbg !6196
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6197
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6198
  ret void, !dbg !6199
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6200 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6205
  %2 = icmp ugt i32 %1, 8, !dbg !6207
  br i1 %2, label %14, label %3, !dbg !6208

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !6209
  call void @llvm.dbg.value(metadata i32 0, metadata !6204, metadata !DIExpression()), !dbg !6210
  %4 = icmp eq i32 %1, 0, !dbg !6211
  br i1 %4, label %12, label %5, !dbg !6214

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6214

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6204, metadata !DIExpression()), !dbg !6210
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6215
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !6217
  %10 = add nuw i32 %8, 1, !dbg !6218
  call void @llvm.dbg.value(metadata i32 %10, metadata !6204, metadata !DIExpression()), !dbg !6210
  %11 = icmp eq i32 %10, %1, !dbg !6211
  br i1 %11, label %12, label %7, !dbg !6214, !llvm.loop !6219

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6221
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6222
  tail call void @arm_core_mpu_enable() #24, !dbg !6223
  br label %14, !dbg !6224

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6210
  ret i32 %15, !dbg !6225
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6226 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6233, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.value(metadata i8* %1, metadata !6234, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.value(metadata i8* %0, metadata !6235, metadata !DIExpression()), !dbg !6236
  %3 = load i8, i8* %1, align 1, !dbg !6237
  %4 = icmp eq i8 %3, 0, !dbg !6238
  br i1 %4, label %13, label %5, !dbg !6239

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6233, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.value(metadata i8* %8, metadata !6234, metadata !DIExpression()), !dbg !6236
  store i8 %6, i8* %7, align 1, !dbg !6240
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6242
  call void @llvm.dbg.value(metadata i8* %9, metadata !6233, metadata !DIExpression()), !dbg !6236
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6243
  call void @llvm.dbg.value(metadata i8* %10, metadata !6234, metadata !DIExpression()), !dbg !6236
  %11 = load i8, i8* %10, align 1, !dbg !6237
  %12 = icmp eq i8 %11, 0, !dbg !6238
  br i1 %12, label %13, label %5, !dbg !6239, !llvm.loop !6244

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6246
  ret i8* %0, !dbg !6247
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6248 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6252, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i8* %1, metadata !6253, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i32 %2, metadata !6254, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i8* %0, metadata !6255, metadata !DIExpression()), !dbg !6256
  %4 = icmp eq i32 %2, 0, !dbg !6257
  br i1 %4, label %22, label %5, !dbg !6258

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6252, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i32 %7, metadata !6254, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i8* %8, metadata !6253, metadata !DIExpression()), !dbg !6256
  %9 = load i8, i8* %8, align 1, !dbg !6259
  %10 = icmp eq i8 %9, 0, !dbg !6260
  br i1 %10, label %16, label %11, !dbg !6261

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6262
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6264
  call void @llvm.dbg.value(metadata i8* %12, metadata !6253, metadata !DIExpression()), !dbg !6256
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6265
  call void @llvm.dbg.value(metadata i8* %13, metadata !6252, metadata !DIExpression()), !dbg !6256
  %14 = add i32 %7, -1, !dbg !6266
  call void @llvm.dbg.value(metadata i32 %14, metadata !6254, metadata !DIExpression()), !dbg !6256
  %15 = icmp eq i32 %14, 0, !dbg !6257
  br i1 %15, label %22, label %5, !dbg !6258, !llvm.loop !6267

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6252, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i32 %18, metadata !6254, metadata !DIExpression()), !dbg !6256
  store i8 0, i8* %17, align 1, !dbg !6269
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6271
  call void @llvm.dbg.value(metadata i8* %19, metadata !6252, metadata !DIExpression()), !dbg !6256
  %20 = add i32 %18, -1, !dbg !6272
  call void @llvm.dbg.value(metadata i32 %20, metadata !6254, metadata !DIExpression()), !dbg !6256
  %21 = icmp eq i32 %20, 0, !dbg !6273
  br i1 %21, label %22, label %16, !dbg !6274, !llvm.loop !6275

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6277
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6278 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6282, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i32 %1, metadata !6283, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i32 %1, metadata !6284, metadata !DIExpression()), !dbg !6285
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6286

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6282, metadata !DIExpression()), !dbg !6285
  %6 = load i8, i8* %5, align 1, !dbg !6287
  %7 = icmp eq i8 %6, %3, !dbg !6288
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6289
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6290
  call void @llvm.dbg.value(metadata i8* %10, metadata !6282, metadata !DIExpression()), !dbg !6285
  br i1 %9, label %11, label %4, !dbg !6289, !llvm.loop !6292

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6294
  ret i8* %12, !dbg !6295
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6296 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6298, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i32 %1, metadata !6299, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i8* null, metadata !6300, metadata !DIExpression()), !dbg !6301
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6302

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6301
  call void @llvm.dbg.value(metadata i8* %6, metadata !6300, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i8* %5, metadata !6298, metadata !DIExpression()), !dbg !6301
  %7 = load i8, i8* %5, align 1, !dbg !6303
  %8 = icmp eq i8 %7, %3, !dbg !6306
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6307
  call void @llvm.dbg.value(metadata i8* %9, metadata !6300, metadata !DIExpression()), !dbg !6301
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6308
  call void @llvm.dbg.value(metadata i8* %10, metadata !6298, metadata !DIExpression()), !dbg !6301
  %11 = icmp eq i8 %7, 0, !dbg !6309
  br i1 %11, label %12, label %4, !dbg !6309, !llvm.loop !6310

12:                                               ; preds = %4
  ret i8* %9, !dbg !6312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !6313 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6317, metadata !DIExpression()), !dbg !6319
  call void @llvm.dbg.value(metadata i32 0, metadata !6318, metadata !DIExpression()), !dbg !6319
  %2 = load i8, i8* %0, align 1, !dbg !6320
  %3 = icmp eq i8 %2, 0, !dbg !6321
  br i1 %3, label %11, label %4, !dbg !6322

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6318, metadata !DIExpression()), !dbg !6319
  call void @llvm.dbg.value(metadata i8* %6, metadata !6317, metadata !DIExpression()), !dbg !6319
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6323
  call void @llvm.dbg.value(metadata i8* %7, metadata !6317, metadata !DIExpression()), !dbg !6319
  %8 = add i32 %5, 1, !dbg !6325
  call void @llvm.dbg.value(metadata i32 %8, metadata !6318, metadata !DIExpression()), !dbg !6319
  %9 = load i8, i8* %7, align 1, !dbg !6320
  %10 = icmp eq i8 %9, 0, !dbg !6321
  br i1 %10, label %11, label %4, !dbg !6322, !llvm.loop !6326

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6319
  ret i32 %12, !dbg !6328
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6329 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6333, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.value(metadata i32 %1, metadata !6334, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.value(metadata i32 0, metadata !6335, metadata !DIExpression()), !dbg !6336
  %3 = load i8, i8* %0, align 1, !dbg !6337
  %4 = icmp ne i8 %3, 0, !dbg !6338
  %5 = icmp ne i32 %1, 0, !dbg !6339
  %6 = and i1 %4, %5, !dbg !6339
  br i1 %6, label %7, label %16, !dbg !6340

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6335, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.value(metadata i8* %9, metadata !6333, metadata !DIExpression()), !dbg !6336
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6341
  call void @llvm.dbg.value(metadata i8* %10, metadata !6333, metadata !DIExpression()), !dbg !6336
  %11 = add nuw i32 %8, 1, !dbg !6343
  call void @llvm.dbg.value(metadata i32 %11, metadata !6335, metadata !DIExpression()), !dbg !6336
  %12 = load i8, i8* %10, align 1, !dbg !6337
  %13 = icmp ne i8 %12, 0, !dbg !6338
  %14 = icmp ult i32 %11, %1, !dbg !6339
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6339
  br i1 %15, label %7, label %16, !dbg !6340, !llvm.loop !6344

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6336
  ret i32 %17, !dbg !6346
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6347 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6351, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i8* %1, metadata !6352, metadata !DIExpression()), !dbg !6353
  %3 = load i8, i8* %0, align 1, !dbg !6354
  %4 = load i8, i8* %1, align 1, !dbg !6355
  %5 = icmp ne i8 %3, %4, !dbg !6356
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6357
  br i1 %7, label %18, label %8, !dbg !6357

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6352, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i8* %10, metadata !6351, metadata !DIExpression()), !dbg !6353
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6358
  call void @llvm.dbg.value(metadata i8* %11, metadata !6351, metadata !DIExpression()), !dbg !6353
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6360
  call void @llvm.dbg.value(metadata i8* %12, metadata !6352, metadata !DIExpression()), !dbg !6353
  %13 = load i8, i8* %11, align 1, !dbg !6354
  %14 = load i8, i8* %12, align 1, !dbg !6355
  %15 = icmp ne i8 %13, %14, !dbg !6356
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6357
  br i1 %17, label %18, label %8, !dbg !6357, !llvm.loop !6361

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6354
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6355
  %21 = zext i8 %19 to i32, !dbg !6364
  %22 = zext i8 %20 to i32, !dbg !6365
  %23 = sub nsw i32 %21, %22, !dbg !6366
  ret i32 %23, !dbg !6367
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6368 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6372, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata i8* %1, metadata !6373, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata i32 %2, metadata !6374, metadata !DIExpression()), !dbg !6375
  %4 = icmp eq i32 %2, 0, !dbg !6376
  br i1 %4, label %23, label %5, !dbg !6376

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6374, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata i8* %7, metadata !6373, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata i8* %8, metadata !6372, metadata !DIExpression()), !dbg !6375
  %9 = load i8, i8* %8, align 1, !dbg !6377
  %10 = load i8, i8* %7, align 1, !dbg !6378
  %11 = icmp ne i8 %9, %10, !dbg !6379
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6380
  br i1 %13, label %19, label %14, !dbg !6380

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6381
  call void @llvm.dbg.value(metadata i8* %15, metadata !6372, metadata !DIExpression()), !dbg !6375
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6383
  call void @llvm.dbg.value(metadata i8* %16, metadata !6373, metadata !DIExpression()), !dbg !6375
  %17 = add i32 %6, -1, !dbg !6384
  call void @llvm.dbg.value(metadata i32 %17, metadata !6374, metadata !DIExpression()), !dbg !6375
  %18 = icmp eq i32 %17, 0, !dbg !6376
  br i1 %18, label %23, label %5, !dbg !6376, !llvm.loop !6385

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6388
  %21 = zext i8 %10 to i32, !dbg !6389
  %22 = sub nsw i32 %20, %21, !dbg !6390
  br label %23, !dbg !6391

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6391
  ret i32 %24, !dbg !6392
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6393 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6398, metadata !DIExpression()), !dbg !6403
  call void @llvm.dbg.value(metadata i8* %1, metadata !6399, metadata !DIExpression()), !dbg !6403
  call void @llvm.dbg.value(metadata i8** %2, metadata !6400, metadata !DIExpression()), !dbg !6403
  %4 = icmp eq i8* %0, null, !dbg !6404
  br i1 %4, label %5, label %7, !dbg !6404

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6405
  br label %7, !dbg !6404

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6404
  call void @llvm.dbg.value(metadata i8* %8, metadata !6401, metadata !DIExpression()), !dbg !6403
  %9 = load i8, i8* %8, align 1, !dbg !6406
  %10 = icmp eq i8 %9, 0, !dbg !6406
  br i1 %10, label %33, label %11, !dbg !6407

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6401, metadata !DIExpression()), !dbg !6403
  %14 = zext i8 %12 to i32, !dbg !6406
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !6408
  %16 = icmp eq i8* %15, null, !dbg !6407
  br i1 %16, label %21, label %17, !dbg !6409

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6410
  call void @llvm.dbg.value(metadata i8* %18, metadata !6401, metadata !DIExpression()), !dbg !6403
  %19 = load i8, i8* %18, align 1, !dbg !6406
  %20 = icmp eq i8 %19, 0, !dbg !6406
  br i1 %20, label %33, label %11, !dbg !6407, !llvm.loop !6412

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6402, metadata !DIExpression()), !dbg !6403
  %24 = zext i8 %22 to i32, !dbg !6414
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !6415
  %26 = icmp eq i8* %25, null, !dbg !6416
  br i1 %26, label %27, label %31, !dbg !6417

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6418
  call void @llvm.dbg.value(metadata i8* %28, metadata !6402, metadata !DIExpression()), !dbg !6403
  %29 = load i8, i8* %28, align 1, !dbg !6414
  %30 = icmp eq i8 %29, 0, !dbg !6414
  br i1 %30, label %33, label %21, !dbg !6420, !llvm.loop !6421

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6423
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6426
  br label %33, !dbg !6427

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6403
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6403
  store i8* %34, i8** %2, align 4, !dbg !6403
  ret i8* %35, !dbg !6428
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6429 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6431, metadata !DIExpression()), !dbg !6433
  call void @llvm.dbg.value(metadata i8* %1, metadata !6432, metadata !DIExpression()), !dbg !6433
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6434
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6435
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !6436
  ret i8* %0, !dbg !6437
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6438 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6440, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i8* %1, metadata !6441, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i32 %2, metadata !6442, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i8* %0, metadata !6443, metadata !DIExpression()), !dbg !6445
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6446
  call void @llvm.dbg.value(metadata i32 %4, metadata !6444, metadata !DIExpression()), !dbg !6445
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6447
  call void @llvm.dbg.value(metadata i8* %5, metadata !6440, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i8* %1, metadata !6441, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i32 %2, metadata !6442, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i32 %2, metadata !6442, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6445
  %6 = icmp eq i32 %2, 0, !dbg !6448
  br i1 %6, label %18, label %7, !dbg !6449

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6450
  call void @llvm.dbg.value(metadata i8* %9, metadata !6440, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i8* %10, metadata !6441, metadata !DIExpression()), !dbg !6445
  %12 = load i8, i8* %10, align 1, !dbg !6451
  %13 = icmp eq i8 %12, 0, !dbg !6452
  br i1 %13, label %18, label %14, !dbg !6453

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6454
  call void @llvm.dbg.value(metadata i8* %15, metadata !6441, metadata !DIExpression()), !dbg !6445
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6456
  call void @llvm.dbg.value(metadata i8* %16, metadata !6440, metadata !DIExpression()), !dbg !6445
  store i8 %12, i8* %9, align 1, !dbg !6457
  call void @llvm.dbg.value(metadata i32 %11, metadata !6442, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i32 %11, metadata !6442, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6445
  %17 = icmp eq i32 %11, 0, !dbg !6448
  br i1 %17, label %18, label %7, !dbg !6449, !llvm.loop !6458

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6445
  store i8 0, i8* %19, align 1, !dbg !6460
  ret i8* %0, !dbg !6461
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6462 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6466, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8* %1, metadata !6467, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 %2, metadata !6468, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8* %0, metadata !6469, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8* %1, metadata !6470, metadata !DIExpression()), !dbg !6471
  %4 = icmp eq i32 %2, 0, !dbg !6472
  br i1 %4, label %31, label %5, !dbg !6474

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8* %0, metadata !6469, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 %2, metadata !6468, metadata !DIExpression()), !dbg !6471
  %6 = add i32 %2, -1, !dbg !6475
  call void @llvm.dbg.value(metadata i32 %6, metadata !6468, metadata !DIExpression()), !dbg !6471
  %7 = icmp eq i32 %6, 0, !dbg !6476
  br i1 %7, label %23, label %8, !dbg !6477

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6478
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6478
  br label %11, !dbg !6478

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8* %14, metadata !6469, metadata !DIExpression()), !dbg !6471
  %15 = load i8, i8* %14, align 1, !dbg !6479
  %16 = load i8, i8* %13, align 1, !dbg !6480
  %17 = icmp eq i8 %15, %16, !dbg !6481
  br i1 %17, label %18, label %23, !dbg !6478

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6482
  call void @llvm.dbg.value(metadata i8* %19, metadata !6469, metadata !DIExpression()), !dbg !6471
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6484
  call void @llvm.dbg.value(metadata i8* %20, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 %12, metadata !6468, metadata !DIExpression()), !dbg !6471
  %21 = add i32 %12, -1, !dbg !6475
  call void @llvm.dbg.value(metadata i32 %21, metadata !6468, metadata !DIExpression()), !dbg !6471
  %22 = icmp eq i32 %21, 0, !dbg !6476
  br i1 %22, label %23, label %11, !dbg !6477, !llvm.loop !6485

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6471
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6471
  %26 = load i8, i8* %24, align 1, !dbg !6487
  %27 = zext i8 %26 to i32, !dbg !6487
  %28 = load i8, i8* %25, align 1, !dbg !6488
  %29 = zext i8 %28 to i32, !dbg !6488
  %30 = sub nsw i32 %27, %29, !dbg !6489
  br label %31, !dbg !6490

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6471
  ret i32 %32, !dbg !6491
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6492 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6496, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i8* %1, metadata !6497, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i32 %2, metadata !6498, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i8* %0, metadata !6499, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i8* %1, metadata !6500, metadata !DIExpression()), !dbg !6501
  %4 = ptrtoint i8* %0 to i32, !dbg !6502
  %5 = ptrtoint i8* %1 to i32, !dbg !6502
  %6 = sub i32 %4, %5, !dbg !6502
  %7 = icmp ult i32 %6, %2, !dbg !6504
  br i1 %7, label %10, label %8, !dbg !6505

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6500, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i8* %0, metadata !6499, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i32 %2, metadata !6498, metadata !DIExpression()), !dbg !6501
  %9 = icmp eq i32 %2, 0, !dbg !6506
  br i1 %9, label %26, label %17, !dbg !6508

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6498, metadata !DIExpression()), !dbg !6501
  %12 = add i32 %11, -1, !dbg !6509
  call void @llvm.dbg.value(metadata i32 %12, metadata !6498, metadata !DIExpression()), !dbg !6501
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6512
  %14 = load i8, i8* %13, align 1, !dbg !6512
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6513
  store i8 %14, i8* %15, align 1, !dbg !6514
  %16 = icmp eq i32 %12, 0, !dbg !6515
  br i1 %16, label %26, label %10, !dbg !6516, !llvm.loop !6517

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6500, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i8* %19, metadata !6499, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i32 %20, metadata !6498, metadata !DIExpression()), !dbg !6501
  %21 = load i8, i8* %18, align 1, !dbg !6519
  store i8 %21, i8* %19, align 1, !dbg !6521
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6522
  call void @llvm.dbg.value(metadata i8* %22, metadata !6499, metadata !DIExpression()), !dbg !6501
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6523
  call void @llvm.dbg.value(metadata i8* %23, metadata !6500, metadata !DIExpression()), !dbg !6501
  %24 = add i32 %20, -1, !dbg !6524
  call void @llvm.dbg.value(metadata i32 %24, metadata !6498, metadata !DIExpression()), !dbg !6501
  %25 = icmp eq i32 %24, 0, !dbg !6506
  br i1 %25, label %26, label %17, !dbg !6508, !llvm.loop !6525

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6527
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6528 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6534, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i8* %1, metadata !6535, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i32 %2, metadata !6536, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i8* %0, metadata !6537, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i8* %1, metadata !6538, metadata !DIExpression()), !dbg !6539
  %4 = icmp eq i32 %2, 0, !dbg !6540
  br i1 %4, label %14, label %5, !dbg !6541

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6538, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i8* %7, metadata !6537, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i32 %8, metadata !6536, metadata !DIExpression()), !dbg !6539
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6542
  call void @llvm.dbg.value(metadata i8* %9, metadata !6538, metadata !DIExpression()), !dbg !6539
  %10 = load i8, i8* %6, align 1, !dbg !6544
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6545
  call void @llvm.dbg.value(metadata i8* %11, metadata !6537, metadata !DIExpression()), !dbg !6539
  store i8 %10, i8* %7, align 1, !dbg !6546
  %12 = add i32 %8, -1, !dbg !6547
  call void @llvm.dbg.value(metadata i32 %12, metadata !6536, metadata !DIExpression()), !dbg !6539
  %13 = icmp eq i32 %12, 0, !dbg !6540
  br i1 %13, label %14, label %5, !dbg !6541, !llvm.loop !6548

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6550
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6551 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6555, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i32 %1, metadata !6556, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i32 %2, metadata !6557, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i8* %0, metadata !6558, metadata !DIExpression()), !dbg !6560
  %4 = trunc i32 %1 to i8, !dbg !6561
  call void @llvm.dbg.value(metadata i8 %4, metadata !6559, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i32 %2, metadata !6557, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i8* %0, metadata !6558, metadata !DIExpression()), !dbg !6560
  %5 = icmp eq i32 %2, 0, !dbg !6562
  br i1 %5, label %12, label %6, !dbg !6563

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6557, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i8* %8, metadata !6558, metadata !DIExpression()), !dbg !6560
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6564
  call void @llvm.dbg.value(metadata i8* %9, metadata !6558, metadata !DIExpression()), !dbg !6560
  store i8 %4, i8* %8, align 1, !dbg !6566
  %10 = add i32 %7, -1, !dbg !6567
  call void @llvm.dbg.value(metadata i32 %10, metadata !6557, metadata !DIExpression()), !dbg !6560
  %11 = icmp eq i32 %10, 0, !dbg !6562
  br i1 %11, label %12, label %6, !dbg !6563, !llvm.loop !6568

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6570
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6571 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6575, metadata !DIExpression()), !dbg !6581
  call void @llvm.dbg.value(metadata i32 %1, metadata !6576, metadata !DIExpression()), !dbg !6581
  call void @llvm.dbg.value(metadata i32 %2, metadata !6577, metadata !DIExpression()), !dbg !6581
  %4 = icmp eq i32 %2, 0, !dbg !6582
  br i1 %4, label %17, label %5, !dbg !6583

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6584

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6585
  call void @llvm.dbg.value(metadata i8* %9, metadata !6578, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i32 %8, metadata !6577, metadata !DIExpression()), !dbg !6581
  call void @llvm.dbg.value(metadata i8* %9, metadata !6578, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6585
  %10 = load i8, i8* %9, align 1, !dbg !6586
  %11 = icmp eq i8 %10, %6, !dbg !6589
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6590
  call void @llvm.dbg.value(metadata i8* %12, metadata !6578, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i32 %13, metadata !6577, metadata !DIExpression()), !dbg !6581
  br i1 %15, label %16, label %7, !dbg !6590, !llvm.loop !6591

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6593

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6581
  ret i8* %19, !dbg !6594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #5 !dbg !6595 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6597, metadata !DIExpression()), !dbg !6598
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6599
  ret void, !dbg !6600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6603, metadata !DIExpression()), !dbg !6604
  ret i32 -1, !dbg !6605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6610, metadata !DIExpression()), !dbg !6612
  call void @llvm.dbg.value(metadata i32* %1, metadata !6611, metadata !DIExpression()), !dbg !6612
  %3 = ptrtoint i32* %1 to i32, !dbg !6613
  %4 = and i32 %3, -2, !dbg !6613
  %5 = icmp eq i32 %4, 2, !dbg !6613
  br i1 %5, label %6, label %9, !dbg !6613

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6614
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !6614
  br label %9, !dbg !6615

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6615
  ret i32 %10, !dbg !6616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6619, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.value(metadata i32* %1, metadata !6620, metadata !DIExpression()), !dbg !6621
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6622
  ret i32 %3, !dbg !6623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6627, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.value(metadata i32* %1, metadata !6628, metadata !DIExpression()), !dbg !6629
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6630, !srcloc !6632
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6633
  ret i32 %3, !dbg !6634
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6635 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6640, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i32* %1, metadata !6641, metadata !DIExpression()), !dbg !6644
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !6645
  call void @llvm.dbg.value(metadata i32 %3, metadata !6642, metadata !DIExpression()), !dbg !6644
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !6646
  call void @llvm.dbg.value(metadata i32 %4, metadata !6643, metadata !DIExpression()), !dbg !6644
  %5 = icmp ne i32 %3, %4, !dbg !6647
  %6 = sext i1 %5 to i32, !dbg !6648
  ret i32 %6, !dbg !6649
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6650 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6654, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.value(metadata i32 %1, metadata !6655, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.value(metadata i32 %2, metadata !6656, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.value(metadata i32* %3, metadata !6657, metadata !DIExpression()), !dbg !6658
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6659
  ret i32 %5, !dbg !6660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6661 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6663, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i32 %1, metadata !6664, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i32 %2, metadata !6665, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i32* %3, metadata !6666, metadata !DIExpression()), !dbg !6667
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6668, !srcloc !6670
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6671
  ret i32 %5, !dbg !6672
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6673 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6675, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata i32 %1, metadata !6676, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata i32 %2, metadata !6677, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata i32* %3, metadata !6678, metadata !DIExpression()), !dbg !6683
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6684
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6686
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6686
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6686
  br i1 %11, label %33, label %12, !dbg !6686

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6683
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6683
  call void @llvm.dbg.value(metadata i8* %14, metadata !6681, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata i32 %13, metadata !6679, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata i32 %1, metadata !6680, metadata !DIExpression()), !dbg !6683
  br label %15, !dbg !6687

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6689
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6683
  call void @llvm.dbg.value(metadata i8* %17, metadata !6681, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata i32 %16, metadata !6680, metadata !DIExpression()), !dbg !6683
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6690
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6693
  call void @llvm.dbg.value(metadata i8* %19, metadata !6681, metadata !DIExpression()), !dbg !6683
  %20 = load i8, i8* %17, align 1, !dbg !6694
  %21 = zext i8 %20 to i32, !dbg !6695
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !6690
  %23 = icmp eq i32 %22, -1, !dbg !6696
  br i1 %23, label %30, label %24, !dbg !6697

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6698
  call void @llvm.dbg.value(metadata i32 %25, metadata !6680, metadata !DIExpression()), !dbg !6683
  %26 = icmp eq i32 %25, 0, !dbg !6699
  br i1 %26, label %27, label %15, !dbg !6700, !llvm.loop !6701

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6703
  call void @llvm.dbg.value(metadata i32 %28, metadata !6679, metadata !DIExpression()), !dbg !6683
  %29 = icmp eq i32 %28, 0, !dbg !6704
  br i1 %29, label %30, label %12, !dbg !6705, !llvm.loop !6706

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6683
  call void @llvm.dbg.value(metadata i32 %31, metadata !6679, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.label(metadata !6682), !dbg !6709
  %32 = sub i32 %2, %31, !dbg !6710
  br label %33, !dbg !6711

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6683
  ret i32 %34, !dbg !6712
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6713 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6717, metadata !DIExpression()), !dbg !6718
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6719
  %3 = icmp eq i32 %2, -1, !dbg !6721
  br i1 %3, label %8, label %4, !dbg !6722

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6723
  %6 = icmp eq i32 %5, -1, !dbg !6724
  %7 = sext i1 %6 to i32, !dbg !6723
  br label %8, !dbg !6725

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6718
  ret i32 %9, !dbg !6726
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6727 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6729, metadata !DIExpression()), !dbg !6730
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !6731
  ret void, !dbg !6732
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6737, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.value(metadata i32 %1, metadata !6738, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6739, metadata !DIExpression()), !dbg !6743
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6744
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6744
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6744
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6740, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.value(metadata i32 %0, metadata !6742, metadata !DIExpression()), !dbg !6743
  %7 = icmp slt i32 %0, %1, !dbg !6745
  br i1 %7, label %8, label %22, !dbg !6748

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6742, metadata !DIExpression()), !dbg !6743
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !6749
  %11 = icmp eq i32 %10, 0, !dbg !6749
  br i1 %11, label %19, label %12, !dbg !6752

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !6753
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !6755
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !6755
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !6757
  br i1 %15, label %19, label %16, !dbg !6758

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !6759
  %18 = load i8*, i8** %17, align 4, !dbg !6759
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !6760
  br label %19, !dbg !6761

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !6762
  call void @llvm.dbg.value(metadata i32 %20, metadata !6742, metadata !DIExpression()), !dbg !6743
  %21 = icmp eq i32 %20, %1, !dbg !6745
  br i1 %21, label %22, label %8, !dbg !6748, !llvm.loop !6763

22:                                               ; preds = %19, %3
  ret void, !dbg !6765
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !6766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6768, metadata !DIExpression()), !dbg !6769
  %2 = shl nuw i32 1, %0, !dbg !6770
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !6773
  ret i32 %3, !dbg !6774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !6775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6779, metadata !DIExpression()), !dbg !6780
  %2 = shl nuw i32 1, %0, !dbg !6781
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !6784
  ret void, !dbg !6785
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6789, metadata !DIExpression()), !dbg !6790
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6791
  ret void, !dbg !6792
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6795, metadata !DIExpression()), !dbg !6796
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6797
  %3 = and i32 %2, %0, !dbg !6797
  %4 = icmp eq i32 %3, %0, !dbg !6798
  %5 = zext i1 %4 to i32, !dbg !6798
  ret i32 %5, !dbg !6799
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !6800 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6802, metadata !DIExpression()), !dbg !6803
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !6804
  ret void, !dbg !6805
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !6806 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6808, metadata !DIExpression()), !dbg !6809
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !6810
  ret void, !dbg !6811
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !6812 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6814, metadata !DIExpression()), !dbg !6815
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !6816
  ret void, !dbg !6817
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !6818 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6820, metadata !DIExpression()), !dbg !6821
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !6822
  ret void, !dbg !6823
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !6824 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6826, metadata !DIExpression()), !dbg !6827
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !6828
  ret void, !dbg !6829
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !6830 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6832, metadata !DIExpression()), !dbg !6833
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !6834
  ret void, !dbg !6835
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !6836 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6838, metadata !DIExpression()), !dbg !6839
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !6840
  ret void, !dbg !6841
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !6842 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6844, metadata !DIExpression()), !dbg !6845
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !6846
  ret void, !dbg !6847
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !6848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6850, metadata !DIExpression()), !dbg !6851
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !6852
  ret void, !dbg !6853
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !6854 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6856, metadata !DIExpression()), !dbg !6857
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !6858
  ret void, !dbg !6859
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6860 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6862, metadata !DIExpression()), !dbg !6863
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !6864
  ret i32 0, !dbg !6865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !726 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !730, metadata !DIExpression()), !dbg !6866
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !6867
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !6869
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !6871
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !6873
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !6875
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !6877
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !6879
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !6881
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !6883
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !6885
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !6887
  ret void, !dbg !6889
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6892, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.value(metadata i32 0, metadata !6893, metadata !DIExpression()), !dbg !6894
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !6895
  %3 = load i32, i32* %2, align 4, !dbg !6895
  call void @llvm.dbg.value(metadata i32 %3, metadata !6893, metadata !DIExpression()), !dbg !6894
  %4 = shl nuw i32 1, %0, !dbg !6896
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !6897
  tail call void @arch_irq_enable(i32 noundef %3) #26, !dbg !6898
  ret void, !dbg !6899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6902, metadata !DIExpression()), !dbg !6903
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6904
  %3 = or i32 %2, %0, !dbg !6904
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6904
  ret void, !dbg !6905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !6906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6908, metadata !DIExpression()), !dbg !6909
  %2 = icmp slt i32 %0, 32, !dbg !6910
  br i1 %2, label %3, label %5, !dbg !6912

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !6913
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !6915
  br label %5, !dbg !6916

5:                                                ; preds = %1, %3
  ret void, !dbg !6917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6920, metadata !DIExpression()), !dbg !6921
  %2 = xor i32 %0, -1, !dbg !6922
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6922
  %4 = and i32 %3, %2, !dbg !6922
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6922
  ret void, !dbg !6923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !6924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6928, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 %1, metadata !6929, metadata !DIExpression()), !dbg !6930
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !6931

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !6932
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !6934
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !6935
  br label %11, !dbg !6936

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !6937
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !6938
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !6939
  br label %11, !dbg !6940

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !6941
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !6942
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !6943
  br label %11, !dbg !6944

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !6945
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !6946
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !6947
  br label %11, !dbg !6948

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !6949
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6952, metadata !DIExpression()), !dbg !6953
  %2 = xor i32 %0, -1, !dbg !6954
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6954
  %4 = and i32 %3, %2, !dbg !6954
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6954
  ret void, !dbg !6955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6956 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6958, metadata !DIExpression()), !dbg !6959
  %2 = xor i32 %0, -1, !dbg !6960
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6960
  %4 = and i32 %3, %2, !dbg !6960
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6960
  ret void, !dbg !6961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6964, metadata !DIExpression()), !dbg !6965
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6966
  %3 = or i32 %2, %0, !dbg !6966
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6966
  ret void, !dbg !6967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6970, metadata !DIExpression()), !dbg !6971
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6972
  %3 = or i32 %2, %0, !dbg !6972
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6972
  ret void, !dbg !6973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !6974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6978, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6979, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i8* %2, metadata !6980, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6981, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6983, metadata !DIExpression()), !dbg !6984
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6985
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !6985
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !6987
  br i1 %6, label %7, label %9, !dbg !6988

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !6989
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6990
  store i8* %2, i8** %8, align 4, !dbg !6991
  br label %9, !dbg !6992

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !6984
  ret i32 %10, !dbg !6993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #5 !dbg !6994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6996, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6997, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6998, metadata !DIExpression()), !dbg !6999
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7000
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7001
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7002
  store i8* null, i8** %3, align 4, !dbg !7003
  ret void, !dbg !7004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !7005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7007, metadata !DIExpression()), !dbg !7012
  call void @llvm.dbg.value(metadata i8* %1, metadata !7008, metadata !DIExpression()), !dbg !7012
  call void @llvm.dbg.value(metadata i8* %1, metadata !7009, metadata !DIExpression()), !dbg !7012
  %3 = bitcast i8* %1 to i32*, !dbg !7013
  %4 = load i32, i32* %3, align 4, !dbg !7013
  %5 = add i32 %4, -169, !dbg !7013
  %6 = icmp ult i32 %5, -121, !dbg !7013
  br i1 %6, label %15, label %7, !dbg !7015

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7016
  %9 = inttoptr i32 %8 to i32*, !dbg !7017
  call void @llvm.dbg.value(metadata i32* %9, metadata !7010, metadata !DIExpression()), !dbg !7012
  %10 = load volatile i32, i32* %9, align 4, !dbg !7018
  call void @llvm.dbg.value(metadata i32 %10, metadata !7011, metadata !DIExpression()), !dbg !7012
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7019
  %12 = bitcast i8* %11 to i32*, !dbg !7019
  %13 = load i32, i32* %12, align 4, !dbg !7019
  %14 = or i32 %13, %10, !dbg !7020
  call void @llvm.dbg.value(metadata i32 %14, metadata !7011, metadata !DIExpression()), !dbg !7012
  store volatile i32 %14, i32* %9, align 4, !dbg !7021
  br label %15, !dbg !7022

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7012
  ret i32 %16, !dbg !7023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !7024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7026, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.value(metadata i8* %1, metadata !7027, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.value(metadata i8* %1, metadata !7028, metadata !DIExpression()), !dbg !7031
  %3 = bitcast i8* %1 to i32*, !dbg !7032
  %4 = load i32, i32* %3, align 4, !dbg !7032
  %5 = add i32 %4, -169, !dbg !7032
  %6 = icmp ult i32 %5, -121, !dbg !7032
  br i1 %6, label %16, label %7, !dbg !7034

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7035
  %9 = inttoptr i32 %8 to i32*, !dbg !7036
  call void @llvm.dbg.value(metadata i32* %9, metadata !7029, metadata !DIExpression()), !dbg !7031
  %10 = load volatile i32, i32* %9, align 4, !dbg !7037
  call void @llvm.dbg.value(metadata i32 %10, metadata !7030, metadata !DIExpression()), !dbg !7031
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7038
  %12 = bitcast i8* %11 to i32*, !dbg !7038
  %13 = load i32, i32* %12, align 4, !dbg !7038
  %14 = xor i32 %13, -1, !dbg !7039
  %15 = and i32 %10, %14, !dbg !7040
  call void @llvm.dbg.value(metadata i32 %15, metadata !7030, metadata !DIExpression()), !dbg !7031
  store volatile i32 %15, i32* %9, align 4, !dbg !7041
  br label %16, !dbg !7042

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7031
  ret i32 %17, !dbg !7043
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !7044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7046, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i8* %1, metadata !7047, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32* %2, metadata !7048, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i8* %1, metadata !7049, metadata !DIExpression()), !dbg !7054
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7055
  call void @llvm.dbg.value(metadata i32 %4, metadata !7050, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 undef, metadata !7051, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 undef, metadata !7052, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %4, metadata !7053, metadata !DIExpression()), !dbg !7054
  %5 = bitcast i8* %1 to i32*, !dbg !7056
  %6 = load i32, i32* %5, align 4, !dbg !7056
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !7057

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !7058
  call void @llvm.dbg.value(metadata i32 %8, metadata !7051, metadata !DIExpression()), !dbg !7054
  br label %19, !dbg !7059

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !7061
  call void @llvm.dbg.value(metadata i32 %10, metadata !7052, metadata !DIExpression()), !dbg !7054
  br label %19, !dbg !7062

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #26, !dbg !7063
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !7064
  br label %19, !dbg !7065

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #26, !dbg !7066
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #24, !dbg !7067
  br label %19, !dbg !7068

17:                                               ; preds = %3
  br label %19, !dbg !7069

18:                                               ; preds = %3
  br label %19, !dbg !7070

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !7071
  br label %21, !dbg !7072

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !7054
  ret i32 %22, !dbg !7072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !7073 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7075, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.value(metadata i8* %1, metadata !7076, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.value(metadata i8* %2, metadata !7077, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.value(metadata i8* %1, metadata !7078, metadata !DIExpression()), !dbg !7083
  %4 = bitcast i8* %1 to i32*, !dbg !7084
  %5 = load i32, i32* %4, align 4, !dbg !7084
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !7085
  call void @llvm.dbg.value(metadata i32 %6, metadata !7082, metadata !DIExpression()), !dbg !7083
  %7 = icmp slt i32 %6, 0, !dbg !7086
  br i1 %7, label %22, label %8, !dbg !7088

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7078, metadata !DIExpression()), !dbg !7083
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7089
  %10 = bitcast i8* %9 to i32*, !dbg !7089
  %11 = load i32, i32* %10, align 4, !dbg !7089
  %12 = lshr i32 %11, 16, !dbg !7089
  %13 = and i32 %12, 7, !dbg !7089
  %14 = lshr i32 %11, 8, !dbg !7090
  %15 = and i32 %14, 31, !dbg !7090
  %16 = shl i32 %13, %15, !dbg !7091
  call void @llvm.dbg.value(metadata i32 %16, metadata !7081, metadata !DIExpression()), !dbg !7083
  %17 = and i32 %11, 255, !dbg !7092
  %18 = or i32 %17, 1073887232, !dbg !7093
  %19 = inttoptr i32 %18 to i32*, !dbg !7094
  call void @llvm.dbg.value(metadata i32* %19, metadata !7079, metadata !DIExpression()), !dbg !7083
  %20 = load volatile i32, i32* %19, align 4, !dbg !7095
  call void @llvm.dbg.value(metadata i32 %20, metadata !7080, metadata !DIExpression()), !dbg !7083
  %21 = or i32 %16, %20, !dbg !7096
  call void @llvm.dbg.value(metadata i32 %21, metadata !7080, metadata !DIExpression()), !dbg !7083
  store volatile i32 %21, i32* %19, align 4, !dbg !7097
  br label %22, !dbg !7098

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !7083
  ret i32 %23, !dbg !7099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !7100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7104, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.value(metadata i32 0, metadata !7105, metadata !DIExpression()), !dbg !7106
  %2 = add i32 %0, -1, !dbg !7107
  %3 = icmp ult i32 %2, 6, !dbg !7107
  br i1 %3, label %4, label %7, !dbg !7107

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !7107
  %6 = load i32, i32* %5, align 4, !dbg !7107
  call void @llvm.dbg.value(metadata i32 %6, metadata !7105, metadata !DIExpression()), !dbg !7106
  br label %7, !dbg !7108

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !7106
  ret i32 %8, !dbg !7109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !7110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7114, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.value(metadata i32 %1, metadata !7115, metadata !DIExpression()), !dbg !7116
  %3 = udiv i32 %0, %1, !dbg !7117
  ret i32 %3, !dbg !7118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !7119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7123, metadata !DIExpression()), !dbg !7127
  call void @llvm.dbg.value(metadata i32 8, metadata !7124, metadata !DIExpression()), !dbg !7127
  call void @llvm.dbg.value(metadata i32 84, metadata !7125, metadata !DIExpression()), !dbg !7127
  call void @llvm.dbg.value(metadata i32 %1, metadata !7126, metadata !DIExpression()), !dbg !7127
  %3 = mul i32 %0, 84, !dbg !7128
  %4 = shl nsw i32 %1, 3, !dbg !7129
  %5 = udiv i32 %3, %4, !dbg !7130
  ret i32 %5, !dbg !7131
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !7132 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !7134, metadata !DIExpression()), !dbg !7137
  tail call void @config_enable_default_clocks() #26, !dbg !7138
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !7139
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !7139
  %4 = lshr i32 %3, 4, !dbg !7139
  %5 = and i32 %4, 15, !dbg !7139
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !7139
  %7 = load i8, i8* %6, align 1, !dbg !7139
  %8 = zext i8 %7 to i32, !dbg !7139
  %9 = lshr i32 %2, %8, !dbg !7139
  call void @llvm.dbg.value(metadata i32 %9, metadata !7135, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !7136, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !7137
  %10 = icmp ult i32 %9, 84000000, !dbg !7140
  br i1 %10, label %11, label %13, !dbg !7142

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !7143
  br label %13, !dbg !7145

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !7146
  tail call fastcc void @set_up_plls() #24, !dbg !7147
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !7148
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !7151
  br label %14, !dbg !7152

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7153
  %16 = icmp eq i32 %15, 8, !dbg !7154
  br i1 %16, label %17, label %14, !dbg !7152, !llvm.loop !7155

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !7157
  br i1 %18, label %19, label %21, !dbg !7159

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !7160
  br label %21, !dbg !7162

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !7163
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !7164
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !7165
  ret i32 0, !dbg !7166
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !7167 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7169
  %2 = and i32 %1, 240, !dbg !7169
  ret i32 %2, !dbg !7170
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !7171 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !7172
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !7177
  br label %1, !dbg !7178

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !7179
  %3 = icmp eq i32 %2, 1, !dbg !7180
  br i1 %3, label %4, label %1, !dbg !7178, !llvm.loop !7181

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !7183
  br label %5, !dbg !7186

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !7187
  %7 = icmp eq i32 %6, 1, !dbg !7188
  br i1 %7, label %8, label %5, !dbg !7186, !llvm.loop !7189

8:                                                ; preds = %5
  ret void, !dbg !7191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !7192 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7193
  %2 = icmp eq i32 %1, 8, !dbg !7195
  br i1 %2, label %3, label %4, !dbg !7196

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !7197
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !7199
  br label %4, !dbg !7200

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !7201
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7202
  %6 = and i32 %5, -196609, !dbg !7202
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7202
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7203
  %8 = and i32 %7, -251658241, !dbg !7203
  %9 = or i32 %8, 134217728, !dbg !7203
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7203
  tail call void @config_pll_sysclock() #26, !dbg !7204
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !7205
  br label %10, !dbg !7206

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !7207
  %12 = icmp eq i32 %11, 1, !dbg !7208
  br i1 %12, label %13, label %10, !dbg !7206, !llvm.loop !7209

13:                                               ; preds = %10
  ret void, !dbg !7211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !7212 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7214, metadata !DIExpression()), !dbg !7215
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7216
  %2 = and i32 %1, -241, !dbg !7216
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7216
  ret void, !dbg !7217
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !7218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7220, metadata !DIExpression()), !dbg !7221
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7222
  %3 = and i32 %2, -4, !dbg !7222
  %4 = or i32 %3, %0, !dbg !7222
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7222
  ret void, !dbg !7223
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !7224 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7225
  %2 = and i32 %1, 12, !dbg !7225
  ret i32 %2, !dbg !7226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !7227 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !7229, metadata !DIExpression()), !dbg !7230
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7231
  %2 = and i32 %1, -7169, !dbg !7231
  %3 = or i32 %2, 4096, !dbg !7231
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7231
  ret void, !dbg !7232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !7233 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7235, metadata !DIExpression()), !dbg !7236
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7237
  %2 = and i32 %1, -57345, !dbg !7237
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7237
  ret void, !dbg !7238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !7239 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7240
  %2 = icmp eq i32 %1, 1, !dbg !7242
  br i1 %2, label %7, label %3, !dbg !7243

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !7244
  br label %4, !dbg !7246

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7247
  %6 = icmp eq i32 %5, 1, !dbg !7248
  br i1 %6, label %7, label %4, !dbg !7246, !llvm.loop !7249

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !7251
  br label %8, !dbg !7252

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7253
  %10 = icmp eq i32 %9, 0, !dbg !7254
  br i1 %10, label %11, label %8, !dbg !7252, !llvm.loop !7255

11:                                               ; preds = %8
  ret void, !dbg !7257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !7258 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7259
  %2 = and i32 %1, -16777217, !dbg !7259
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7259
  ret void, !dbg !7260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !7261 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7262
  %2 = or i32 %1, 16777216, !dbg !7262
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7262
  ret void, !dbg !7263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !7264 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7265
  %2 = lshr i32 %1, 25, !dbg !7266
  %3 = and i32 %2, 1, !dbg !7266
  ret i32 %3, !dbg !7267
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !7268 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7269
  %2 = lshr i32 %1, 1, !dbg !7270
  %3 = and i32 %2, 1, !dbg !7270
  ret i32 %3, !dbg !7271
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !7272 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7273
  %2 = or i32 %1, 1, !dbg !7273
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7273
  ret void, !dbg !7274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !7275 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7276
  %2 = and i32 %1, -262145, !dbg !7276
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7276
  ret void, !dbg !7277
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !7278 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7279
  %2 = or i32 %1, 65536, !dbg !7279
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7279
  ret void, !dbg !7280
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !7281 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7282
  %2 = lshr i32 %1, 17, !dbg !7283
  %3 = and i32 %2, 1, !dbg !7283
  ret i32 %3, !dbg !7284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !7285 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7286
  %2 = or i32 %1, 1, !dbg !7286
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7286
  ret void, !dbg !7287
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !7288 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7289
  %2 = lshr i32 %1, 1, !dbg !7290
  %3 = and i32 %2, 1, !dbg !7290
  ret i32 %3, !dbg !7291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !7292 {
  ret i32 16000000, !dbg !7294
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !7298 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !7299
  ret void, !dbg !7300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !7301 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !7305, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata i32 8, metadata !7306, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata i32 84, metadata !7307, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata i32 0, metadata !7308, metadata !DIExpression()), !dbg !7309
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7310
  %2 = and i32 %1, -4227072, !dbg !7310
  %3 = or i32 %2, 4199688, !dbg !7310
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7310
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7311
  %5 = and i32 %4, -196609, !dbg !7311
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7311
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7312
  %7 = and i32 %6, -1879048193, !dbg !7312
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7312
  ret void, !dbg !7313
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !7314 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !7315
  ret void, !dbg !7316
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !7317 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7320, metadata !DIExpression()), !dbg !7322
  %2 = bitcast i32* %1 to i8*, !dbg !7323
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7323
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7321, metadata !DIExpression()), !dbg !7324
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7325
  %4 = or i32 %3, 268435456, !dbg !7325
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7325
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7326
  %6 = and i32 %5, 268435456, !dbg !7326
  store volatile i32 %6, i32* %1, align 4, !dbg !7327
  %7 = load volatile i32, i32* %1, align 4, !dbg !7328
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7329
  ret void, !dbg !7329
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7330 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7332, metadata !DIExpression()), !dbg !7333
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !7334
  br i1 %2, label %3, label %4, !dbg !7336

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !7337
  br label %4, !dbg !7338

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7333
  ret i32 %5, !dbg !7339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7340 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7345, metadata !DIExpression()), !dbg !7346
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7347, !srcloc !7349
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !7350
  ret i1 %1, !dbg !7351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7352 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !7353
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !7354
  ret void, !dbg !7355
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7358, metadata !DIExpression()), !dbg !7359
  %2 = icmp eq i32 %0, 10, !dbg !7360
  br i1 %2, label %3, label %4, !dbg !7362

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !7363
  br label %4, !dbg !7365

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7366
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !7367
  ret i32 %0, !dbg !7368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7369 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7372, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.value(metadata i8 %0, metadata !7373, metadata !DIExpression()), !dbg !7374
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7375, !srcloc !7377
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !7378
  ret void, !dbg !7379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7380 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7382, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i8 %0, metadata !7383, metadata !DIExpression()), !dbg !7385
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7386
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7384, metadata !DIExpression()), !dbg !7385
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7387
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7387
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #26, !dbg !7388
  ret void, !dbg !7389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7390 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7392, metadata !DIExpression()), !dbg !7393
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #26, !dbg !7394
  ret i1 %1, !dbg !7395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7396 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7443, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7444, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7445, metadata !DIExpression()), !dbg !7446
  ret void, !dbg !7447
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7448 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7450, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i8 %1, metadata !7451, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata i32 %2, metadata !7452, metadata !DIExpression()), !dbg !7455
  %5 = bitcast i32* %4 to i8*, !dbg !7456
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7456
  call void @llvm.dbg.value(metadata i32* %4, metadata !7454, metadata !DIExpression(DW_OP_deref)), !dbg !7455
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !7457
  call void @llvm.dbg.value(metadata i32 %6, metadata !7453, metadata !DIExpression()), !dbg !7455
  %7 = icmp eq i32 %6, 0, !dbg !7458
  br i1 %7, label %8, label %31, !dbg !7460

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7453, metadata !DIExpression()), !dbg !7455
  %9 = and i32 %2, 131072, !dbg !7461
  %10 = icmp eq i32 %9, 0, !dbg !7463
  br i1 %10, label %28, label %11, !dbg !7464

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7465
  %13 = icmp eq i32 %12, 0, !dbg !7468
  br i1 %13, label %18, label %14, !dbg !7469

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7470
  %16 = shl nuw i32 1, %15, !dbg !7470
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !7472
  br label %25, !dbg !7473

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7474
  %20 = icmp eq i32 %19, 0, !dbg !7476
  %21 = zext i8 %1 to i32, !dbg !7455
  br i1 %20, label %25, label %22, !dbg !7477

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7478
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !7480
  br label %25, !dbg !7481

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7482
  %27 = load i32, i32* %4, align 4, !dbg !7483
  call void @llvm.dbg.value(metadata i32 %30, metadata !7454, metadata !DIExpression()), !dbg !7455
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !7484
  br label %31, !dbg !7485

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7482
  %30 = load i32, i32* %4, align 4, !dbg !7483
  call void @llvm.dbg.value(metadata i32 %30, metadata !7454, metadata !DIExpression()), !dbg !7455
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !7484
  call void @llvm.dbg.value(metadata i32 0, metadata !7453, metadata !DIExpression()), !dbg !7455
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7486
  ret i32 %6, !dbg !7486
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7491, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.value(metadata i32* %1, metadata !7492, metadata !DIExpression()), !dbg !7496
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7497
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7497
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7497
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7493, metadata !DIExpression()), !dbg !7496
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7498
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7498
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7498
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7495, metadata !DIExpression()), !dbg !7496
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !7499
  store i32 %9, i32* %1, align 4, !dbg !7500
  ret i32 0, !dbg !7501
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7504, metadata !DIExpression()), !dbg !7510
  call void @llvm.dbg.value(metadata i32 %1, metadata !7505, metadata !DIExpression()), !dbg !7510
  call void @llvm.dbg.value(metadata i32 %2, metadata !7506, metadata !DIExpression()), !dbg !7510
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7511
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7511
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7511
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7507, metadata !DIExpression()), !dbg !7510
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7512
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7512
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7512
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7508, metadata !DIExpression()), !dbg !7510
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !7513
  call void @llvm.dbg.value(metadata i32 %10, metadata !7509, metadata !DIExpression()), !dbg !7510
  %11 = xor i32 %1, -1, !dbg !7514
  %12 = and i32 %10, %11, !dbg !7515
  %13 = and i32 %2, %1, !dbg !7516
  %14 = or i32 %12, %13, !dbg !7517
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !7518
  ret i32 0, !dbg !7519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7520 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7522, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata i32 %1, metadata !7523, metadata !DIExpression()), !dbg !7526
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7527
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7527
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7527
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7524, metadata !DIExpression()), !dbg !7526
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7528
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7528
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7528
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7525, metadata !DIExpression()), !dbg !7526
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7529
  store volatile i32 %1, i32* %9, align 4, !dbg !7529
  ret i32 0, !dbg !7530
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7531 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7533, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i32 %1, metadata !7534, metadata !DIExpression()), !dbg !7537
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7538
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7538
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7538
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7535, metadata !DIExpression()), !dbg !7537
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7539
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7539
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7539
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7536, metadata !DIExpression()), !dbg !7537
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !7540
  ret i32 0, !dbg !7541
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7542 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7544, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 %1, metadata !7545, metadata !DIExpression()), !dbg !7548
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7549
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7549
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7549
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7546, metadata !DIExpression()), !dbg !7548
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7550
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7550
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7550
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7547, metadata !DIExpression()), !dbg !7548
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7551
  %10 = load volatile i32, i32* %9, align 4, !dbg !7551
  %11 = xor i32 %10, %1, !dbg !7551
  store volatile i32 %11, i32* %9, align 4, !dbg !7551
  ret i32 0, !dbg !7552
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7553 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7555, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i8 %1, metadata !7556, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 %2, metadata !7557, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 %3, metadata !7558, metadata !DIExpression()), !dbg !7565
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7566
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7566
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7566
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7559, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i8* undef, metadata !7560, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 0, metadata !7562, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 0, metadata !7563, metadata !DIExpression()), !dbg !7565
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7567

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7568
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !7572
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7573
  %12 = load i32, i32* %11, align 4, !dbg !7573
  %13 = icmp eq i32 %10, %12, !dbg !7574
  br i1 %13, label %14, label %29, !dbg !7575

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !7576
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !7578
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !7579
  br label %29, !dbg !7580

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7581
  %17 = load i8*, i8** %16, align 4, !dbg !7581
  call void @llvm.dbg.value(metadata i8* %17, metadata !7560, metadata !DIExpression()), !dbg !7565
  %18 = zext i8 %1 to i32, !dbg !7582
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !7584
  %20 = icmp eq i32 %19, 0, !dbg !7585
  br i1 %20, label %21, label %29, !dbg !7586

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7587
  %23 = load i32, i32* %22, align 4, !dbg !7587
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !7588
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7589

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7562, metadata !DIExpression()), !dbg !7565
  br label %27, !dbg !7590

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7562, metadata !DIExpression()), !dbg !7565
  br label %27, !dbg !7592

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7562, metadata !DIExpression()), !dbg !7565
  br label %27, !dbg !7593

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7565
  call void @llvm.dbg.value(metadata i32 %28, metadata !7562, metadata !DIExpression()), !dbg !7565
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !7594
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !7595
  br label %29, !dbg !7595

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7565
  call void @llvm.dbg.value(metadata i32 %30, metadata !7563, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.label(metadata !7564), !dbg !7596
  ret i32 %30, !dbg !7597
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7598 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7600, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7601, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i1 %2, metadata !7602, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7604
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7605
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7605
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7605
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7603, metadata !DIExpression()), !dbg !7604
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7606
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !7607
  ret i32 %8, !dbg !7608
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7609 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7615, metadata !DIExpression()), !dbg !7618
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7616, metadata !DIExpression()), !dbg !7618
  call void @llvm.dbg.value(metadata i1 %2, metadata !7617, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7618
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !7619
  br i1 %4, label %10, label %5, !dbg !7621

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7622
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !7625
  %8 = or i1 %7, %2, !dbg !7626
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7626
  br i1 %2, label %11, label %13, !dbg !7626

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7627

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7628
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !7631
  br label %13, !dbg !7632

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7618
  ret i32 %14, !dbg !7633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #6 !dbg !7634 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7638, metadata !DIExpression()), !dbg !7639
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7640
  %3 = icmp eq %struct._snode* %2, null, !dbg !7640
  ret i1 %3, !dbg !7640
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !7641 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7645, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7646, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7647, metadata !DIExpression()), !dbg !7649
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7650
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7647, metadata !DIExpression()), !dbg !7649
  %4 = icmp eq %struct._snode* %3, null, !dbg !7652
  br i1 %4, label %15, label %5, !dbg !7650

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7647, metadata !DIExpression()), !dbg !7649
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7654
  br i1 %6, label %9, label %11, !dbg !7657

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7647, metadata !DIExpression()), !dbg !7649
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7654
  br i1 %8, label %9, label %11, !dbg !7657, !llvm.loop !7658

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !7659
  br label %15, !dbg !7659

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7647, metadata !DIExpression()), !dbg !7649
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !7652
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7648, metadata !DIExpression()), !dbg !7649
  %14 = icmp eq %struct._snode* %13, null, !dbg !7652
  br i1 %14, label %15, label %7, !dbg !7650, !llvm.loop !7658

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !7662 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7666, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7667, metadata !DIExpression()), !dbg !7668
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7669
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !7669
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !7669
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7670
  %5 = icmp eq %struct._snode* %4, null, !dbg !7670
  br i1 %5, label %6, label %8, !dbg !7669

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7672
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !7672
  br label %8, !dbg !7672

8:                                                ; preds = %6, %2
  ret void, !dbg !7669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #6 !dbg !7674 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7678, metadata !DIExpression()), !dbg !7679
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7680
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7680
  ret %struct._snode* %3, !dbg !7681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #5 !dbg !7682 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7686, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7687, metadata !DIExpression()), !dbg !7688
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7689
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7690
  ret void, !dbg !7691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #5 !dbg !7692 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7694, metadata !DIExpression()), !dbg !7696
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7695, metadata !DIExpression()), !dbg !7696
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7697
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7698
  ret void, !dbg !7699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #6 !dbg !7700 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7702, metadata !DIExpression()), !dbg !7703
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7704
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7704
  ret %struct._snode* %3, !dbg !7705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #5 !dbg !7706 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7708, metadata !DIExpression()), !dbg !7710
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7709, metadata !DIExpression()), !dbg !7710
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7711
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7712
  ret void, !dbg !7713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !7714 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7718, metadata !DIExpression()), !dbg !7721
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7719, metadata !DIExpression()), !dbg !7721
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7720, metadata !DIExpression()), !dbg !7721
  %4 = icmp eq %struct._snode* %1, null, !dbg !7722
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !7724
  br i1 %4, label %6, label %11, !dbg !7725

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !7726
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7728
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7728
  br i1 %8, label %9, label %15, !dbg !7726

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7730
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !7730
  br label %15, !dbg !7730

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !7732
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7734
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7734
  br i1 %13, label %14, label %15, !dbg !7732

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !7736
  br label %15, !dbg !7736

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !7725
  ret void, !dbg !7725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #6 !dbg !7738 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7742, metadata !DIExpression()), !dbg !7743
  %2 = icmp eq %struct._snode* %0, null, !dbg !7744
  br i1 %2, label %5, label %3, !dbg !7744

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !7744
  br label %5, !dbg !7744

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7744
  ret %struct._snode* %6, !dbg !7744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #6 !dbg !7745 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7747, metadata !DIExpression()), !dbg !7748
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !7749
  ret %struct._snode* %2, !dbg !7749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #6 !dbg !7750 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7752, metadata !DIExpression()), !dbg !7753
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7754
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7754
  ret %struct._snode* %3, !dbg !7755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7758, metadata !DIExpression()), !dbg !7761
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !7762, !range !7763
  call void @llvm.dbg.value(metadata i32 %2, metadata !7759, metadata !DIExpression()), !dbg !7761
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !7764
  call void @llvm.dbg.value(metadata i32 %3, metadata !7760, metadata !DIExpression()), !dbg !7761
  ret i32 %3, !dbg !7765
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7768, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i8* %1, metadata !7769, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i8* %1, metadata !7770, metadata !DIExpression()), !dbg !7771
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7772
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7772
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7773
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7773
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7773
  %8 = shl nuw i32 1, %0, !dbg !7774
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !7775
  ret void, !dbg !7776
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7777 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7781, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata i32 %1, metadata !7782, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7783, metadata !DIExpression()), !dbg !7787
  %4 = bitcast i64* %3 to i8*, !dbg !7788
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7788
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !7785, metadata !DIExpression()), !dbg !7787
  store i64 70368744177732, i64* %3, align 8, !dbg !7789
  call void @llvm.dbg.value(metadata i64* %3, metadata !7785, metadata !DIExpression(DW_OP_deref)), !dbg !7787
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !7790
  call void @llvm.dbg.value(metadata i32 %5, metadata !7786, metadata !DIExpression()), !dbg !7787
  %6 = icmp eq i32 %5, 0, !dbg !7791
  br i1 %6, label %7, label %8, !dbg !7793

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !7794
  br label %8, !dbg !7795

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7796
  ret void, !dbg !7796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !7797 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7799, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.value(metadata i8* %0, metadata !7800, metadata !DIExpression()), !dbg !7802
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !7803
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !7801, metadata !DIExpression()), !dbg !7802
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !7804
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !7804
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #26, !dbg !7805
  ret i32 %5, !dbg !7806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7809, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.value(metadata i32 %1, metadata !7810, metadata !DIExpression()), !dbg !7812
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !7813
  call void @llvm.dbg.value(metadata i32 %3, metadata !7811, metadata !DIExpression()), !dbg !7812
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !7814
  ret void, !dbg !7815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !7816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7820, metadata !DIExpression()), !dbg !7821
  %2 = sdiv i32 %0, 4, !dbg !7822
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !7823
  %6 = add nsw i32 %5, 16, !dbg !7824
  %7 = shl i32 15, %6, !dbg !7825
  %8 = or i32 %7, %2, !dbg !7826
  ret i32 %8, !dbg !7827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7832, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i32 %1, metadata !7833, metadata !DIExpression()), !dbg !7834
  %3 = and i32 %1, 255, !dbg !7835
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !7835
  %5 = load volatile i32, i32* %4, align 4, !dbg !7835
  %6 = lshr i32 %1, 16, !dbg !7835
  %7 = xor i32 %6, -1, !dbg !7835
  %8 = and i32 %5, %7, !dbg !7835
  call void @llvm.dbg.value(metadata i32 %6, metadata !7836, metadata !DIExpression()) #23, !dbg !7840
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7842, !srcloc !7843
  call void @llvm.dbg.value(metadata i32 %9, metadata !7839, metadata !DIExpression()) #23, !dbg !7840
  call void @llvm.dbg.value(metadata i32 %9, metadata !7844, metadata !DIExpression()) #23, !dbg !7849
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !7851, !range !6056
  %11 = shl i32 %0, %10, !dbg !7835
  %12 = or i32 %11, %8, !dbg !7835
  store volatile i32 %12, i32* %4, align 4, !dbg !7835
  ret void, !dbg !7852
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7853 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7857, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7858, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i32 %2, metadata !7859, metadata !DIExpression()), !dbg !7862
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7863
  %5 = icmp eq %struct._snode* %4, null, !dbg !7863
  br i1 %5, label %21, label %6, !dbg !7863

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !7865
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7861, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7860, metadata !DIExpression()), !dbg !7862
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7866
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7866
  %11 = load i32, i32* %10, align 4, !dbg !7866
  %12 = and i32 %11, %2, !dbg !7870
  %13 = icmp eq i32 %12, 0, !dbg !7870
  br i1 %13, label %19, label %14, !dbg !7871

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7860, metadata !DIExpression()), !dbg !7862
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7872
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7872
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7872
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #26, !dbg !7874
  br label %19, !dbg !7875

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7860, metadata !DIExpression()), !dbg !7862
  %20 = icmp eq %struct._snode* %8, null, !dbg !7876
  br i1 %20, label %21, label %6, !dbg !7876

21:                                               ; preds = %19, %3
  ret void, !dbg !7877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !7878 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7880, metadata !DIExpression()), !dbg !7881
  %2 = and i32 %0, 255, !dbg !7882
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !7882
  %4 = load volatile i32, i32* %3, align 4, !dbg !7882
  %5 = lshr i32 %0, 16, !dbg !7882
  %6 = and i32 %4, %5, !dbg !7882
  call void @llvm.dbg.value(metadata i32 %5, metadata !7836, metadata !DIExpression()) #23, !dbg !7883
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !7885, !srcloc !7843
  call void @llvm.dbg.value(metadata i32 %7, metadata !7839, metadata !DIExpression()) #23, !dbg !7883
  call void @llvm.dbg.value(metadata i32 %7, metadata !7844, metadata !DIExpression()) #23, !dbg !7886
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7888, !range !6056
  %9 = lshr i32 %6, %8, !dbg !7889
  ret i32 %9, !dbg !7890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7891 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7896, metadata !DIExpression()), !dbg !7898
  call void @llvm.dbg.value(metadata i32 %1, metadata !7897, metadata !DIExpression()), !dbg !7898
  %3 = shl i32 %1, 16, !dbg !7899
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !7899
  store volatile i32 %3, i32* %4, align 4, !dbg !7899
  ret void, !dbg !7900
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7901 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7905, metadata !DIExpression()), !dbg !7906
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7907
  %3 = load volatile i32, i32* %2, align 4, !dbg !7907
  ret i32 %3, !dbg !7908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7909 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7911, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i32 %1, metadata !7912, metadata !DIExpression()), !dbg !7913
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7914
  store volatile i32 %1, i32* %3, align 4, !dbg !7914
  ret void, !dbg !7915
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7916 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7918, metadata !DIExpression()), !dbg !7919
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !7920
  %3 = load volatile i32, i32* %2, align 4, !dbg !7920
  ret i32 %3, !dbg !7921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !7922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7926, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.value(metadata i32* %1, metadata !7927, metadata !DIExpression()), !dbg !7928
  %3 = and i32 %0, 131072, !dbg !7929
  %4 = icmp eq i32 %3, 0, !dbg !7931
  br i1 %4, label %22, label %5, !dbg !7932

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !7933
  %6 = and i32 %0, 2, !dbg !7935
  %7 = icmp eq i32 %6, 0, !dbg !7937
  br i1 %7, label %11, label %8, !dbg !7938

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !7939
  %10 = icmp eq i32 %9, 0, !dbg !7939
  br i1 %10, label %33, label %11, !dbg !7942

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !7943
  store i32 %12, i32* %1, align 4, !dbg !7943
  %13 = and i32 %0, 16, !dbg !7944
  %14 = icmp eq i32 %13, 0, !dbg !7946
  br i1 %14, label %17, label %15, !dbg !7947

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !7948
  br label %31, !dbg !7950

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !7951
  %19 = icmp eq i32 %18, 0, !dbg !7953
  br i1 %19, label %33, label %20, !dbg !7954

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !7955
  br label %31, !dbg !7957

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !7958
  %24 = icmp eq i32 %23, 0, !dbg !7960
  br i1 %24, label %31, label %25, !dbg !7961

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !7962
  %27 = icmp eq i32 %26, 0, !dbg !7965
  br i1 %27, label %28, label %31, !dbg !7966

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !7967
  br label %33, !dbg !7968

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !7928
  ret i32 %34, !dbg !7968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7969 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7973, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i32 %1, metadata !7974, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i32 %2, metadata !7975, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i32 %3, metadata !7976, metadata !DIExpression()), !dbg !7984
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7985
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7985
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7985
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7977, metadata !DIExpression()), !dbg !7984
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !7986
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !7986
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !7986
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !7978, metadata !DIExpression()), !dbg !7984
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !7987
  call void @llvm.dbg.value(metadata i32 %11, metadata !7979, metadata !DIExpression()), !dbg !7984
  %12 = and i32 %2, 48, !dbg !7988
  call void @llvm.dbg.value(metadata i32 %12, metadata !7980, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i32 %2, metadata !7981, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !7984
  call void @llvm.dbg.value(metadata i32 %2, metadata !7982, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !7984
  call void @llvm.dbg.value(metadata i32 %2, metadata !7983, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !7984
  %13 = lshr i32 %2, 6, !dbg !7989
  %14 = and i32 %13, 1, !dbg !7989
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !7990
  %15 = lshr i32 %2, 7, !dbg !7991
  %16 = and i32 %15, 3, !dbg !7991
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !7992
  %17 = lshr i32 %2, 9, !dbg !7993
  %18 = and i32 %17, 3, !dbg !7993
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !7994
  %19 = icmp eq i32 %12, 32, !dbg !7995
  br i1 %19, label %20, label %24, !dbg !7997

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !7998
  br i1 %21, label %22, label %23, !dbg !8001

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !8002
  br label %24, !dbg !8004

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !8005
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !8007
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !8008
  ret void, !dbg !8009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !8010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8012, metadata !DIExpression()), !dbg !8014
  %2 = shl nuw i32 1, %0, !dbg !8015
  call void @llvm.dbg.value(metadata i32 %2, metadata !8013, metadata !DIExpression()), !dbg !8014
  ret i32 %2, !dbg !8016
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8017 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8021, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i32 %1, metadata !8022, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i32 %2, metadata !8023, metadata !DIExpression()), !dbg !8024
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !8025
  %5 = load volatile i32, i32* %4, align 4, !dbg !8025
  %6 = xor i32 %1, -1, !dbg !8025
  %7 = and i32 %5, %6, !dbg !8025
  %8 = mul i32 %2, %1, !dbg !8025
  %9 = or i32 %7, %8, !dbg !8025
  store volatile i32 %9, i32* %4, align 4, !dbg !8025
  ret void, !dbg !8026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8027 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8029, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32 %1, metadata !8030, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32 %2, metadata !8031, metadata !DIExpression()), !dbg !8032
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !8033
  %5 = load volatile i32, i32* %4, align 4, !dbg !8033
  call void @llvm.dbg.value(metadata i32 %1, metadata !7836, metadata !DIExpression()) #23, !dbg !8034
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !8036, !srcloc !7843
  call void @llvm.dbg.value(metadata i32 %6, metadata !7839, metadata !DIExpression()) #23, !dbg !8034
  call void @llvm.dbg.value(metadata i32 %6, metadata !7844, metadata !DIExpression()) #23, !dbg !8037
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8039, !range !6056
  %8 = shl nuw nsw i32 %7, 1, !dbg !8033
  %9 = shl i32 3, %8, !dbg !8033
  %10 = xor i32 %9, -1, !dbg !8033
  %11 = and i32 %5, %10, !dbg !8033
  call void @llvm.dbg.value(metadata i32 %1, metadata !7836, metadata !DIExpression()) #23, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %6, metadata !7839, metadata !DIExpression()) #23, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %6, metadata !7844, metadata !DIExpression()) #23, !dbg !8042
  %12 = shl i32 %2, %8, !dbg !8033
  %13 = or i32 %11, %12, !dbg !8033
  store volatile i32 %13, i32* %4, align 4, !dbg !8033
  ret void, !dbg !8044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8045 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8047, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32 %1, metadata !8048, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32 %2, metadata !8049, metadata !DIExpression()), !dbg !8050
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !8051
  %5 = load volatile i32, i32* %4, align 4, !dbg !8051
  call void @llvm.dbg.value(metadata i32 %1, metadata !7836, metadata !DIExpression()) #23, !dbg !8052
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !8054, !srcloc !7843
  call void @llvm.dbg.value(metadata i32 %6, metadata !7839, metadata !DIExpression()) #23, !dbg !8052
  call void @llvm.dbg.value(metadata i32 %6, metadata !7844, metadata !DIExpression()) #23, !dbg !8055
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8057, !range !6056
  %8 = shl nuw nsw i32 %7, 1, !dbg !8051
  %9 = shl i32 3, %8, !dbg !8051
  %10 = xor i32 %9, -1, !dbg !8051
  %11 = and i32 %5, %10, !dbg !8051
  call void @llvm.dbg.value(metadata i32 %1, metadata !7836, metadata !DIExpression()) #23, !dbg !8058
  call void @llvm.dbg.value(metadata i32 %6, metadata !7839, metadata !DIExpression()) #23, !dbg !8058
  call void @llvm.dbg.value(metadata i32 %6, metadata !7844, metadata !DIExpression()) #23, !dbg !8060
  %12 = shl i32 %2, %8, !dbg !8051
  %13 = or i32 %11, %12, !dbg !8051
  store volatile i32 %13, i32* %4, align 4, !dbg !8051
  ret void, !dbg !8062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8063 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8065, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.value(metadata i32 %1, metadata !8066, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.value(metadata i32 %2, metadata !8067, metadata !DIExpression()), !dbg !8068
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !8069
  %5 = load volatile i32, i32* %4, align 4, !dbg !8069
  call void @llvm.dbg.value(metadata i32 %1, metadata !7836, metadata !DIExpression()) #23, !dbg !8070
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !8072, !srcloc !7843
  call void @llvm.dbg.value(metadata i32 %6, metadata !7839, metadata !DIExpression()) #23, !dbg !8070
  call void @llvm.dbg.value(metadata i32 %6, metadata !7844, metadata !DIExpression()) #23, !dbg !8073
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8075, !range !6056
  %8 = shl nuw nsw i32 %7, 2, !dbg !8069
  %9 = shl i32 15, %8, !dbg !8069
  %10 = xor i32 %9, -1, !dbg !8069
  %11 = and i32 %5, %10, !dbg !8069
  call void @llvm.dbg.value(metadata i32 %1, metadata !7836, metadata !DIExpression()) #23, !dbg !8076
  call void @llvm.dbg.value(metadata i32 %6, metadata !7839, metadata !DIExpression()) #23, !dbg !8076
  call void @llvm.dbg.value(metadata i32 %6, metadata !7844, metadata !DIExpression()) #23, !dbg !8078
  %12 = shl i32 %2, %8, !dbg !8069
  %13 = or i32 %11, %12, !dbg !8069
  store volatile i32 %13, i32* %4, align 4, !dbg !8069
  ret void, !dbg !8080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8081 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8083, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i32 %1, metadata !8084, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i32 %2, metadata !8085, metadata !DIExpression()), !dbg !8086
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !8087
  %5 = load volatile i32, i32* %4, align 4, !dbg !8087
  %6 = lshr i32 %1, 8, !dbg !8087
  call void @llvm.dbg.value(metadata i32 %6, metadata !7836, metadata !DIExpression()) #23, !dbg !8088
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !8090, !srcloc !7843
  call void @llvm.dbg.value(metadata i32 %7, metadata !7839, metadata !DIExpression()) #23, !dbg !8088
  call void @llvm.dbg.value(metadata i32 %7, metadata !7844, metadata !DIExpression()) #23, !dbg !8091
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8093, !range !6056
  %9 = shl nuw nsw i32 %8, 2, !dbg !8087
  %10 = shl i32 15, %9, !dbg !8087
  %11 = xor i32 %10, -1, !dbg !8087
  %12 = and i32 %5, %11, !dbg !8087
  call void @llvm.dbg.value(metadata i32 %6, metadata !7836, metadata !DIExpression()) #23, !dbg !8094
  call void @llvm.dbg.value(metadata i32 %7, metadata !7839, metadata !DIExpression()) #23, !dbg !8094
  call void @llvm.dbg.value(metadata i32 %7, metadata !7844, metadata !DIExpression()) #23, !dbg !8096
  %13 = shl i32 %2, %9, !dbg !8087
  %14 = or i32 %12, %13, !dbg !8087
  store volatile i32 %14, i32* %4, align 4, !dbg !8087
  ret void, !dbg !8098
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8099 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8101, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %1, metadata !8102, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %2, metadata !8103, metadata !DIExpression()), !dbg !8104
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !8105
  %5 = load volatile i32, i32* %4, align 4, !dbg !8105
  call void @llvm.dbg.value(metadata i32 %1, metadata !7836, metadata !DIExpression()) #23, !dbg !8106
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !8108, !srcloc !7843
  call void @llvm.dbg.value(metadata i32 %6, metadata !7839, metadata !DIExpression()) #23, !dbg !8106
  call void @llvm.dbg.value(metadata i32 %6, metadata !7844, metadata !DIExpression()) #23, !dbg !8109
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8111, !range !6056
  %8 = shl nuw nsw i32 %7, 1, !dbg !8105
  %9 = shl i32 3, %8, !dbg !8105
  %10 = xor i32 %9, -1, !dbg !8105
  %11 = and i32 %5, %10, !dbg !8105
  call void @llvm.dbg.value(metadata i32 %1, metadata !7836, metadata !DIExpression()) #23, !dbg !8112
  call void @llvm.dbg.value(metadata i32 %6, metadata !7839, metadata !DIExpression()) #23, !dbg !8112
  call void @llvm.dbg.value(metadata i32 %6, metadata !7844, metadata !DIExpression()) #23, !dbg !8114
  %12 = shl i32 %2, %8, !dbg !8105
  %13 = or i32 %11, %12, !dbg !8105
  store volatile i32 %13, i32* %4, align 4, !dbg !8105
  ret void, !dbg !8116
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !8117 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8119, metadata !DIExpression()), !dbg !8122
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8123
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !8123
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !8123
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !8120, metadata !DIExpression()), !dbg !8122
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !8124
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !8125
  %6 = tail call fastcc zeroext i1 @device_is_ready.50() #24, !dbg !8126
  br i1 %6, label %7, label %11, !dbg !8128

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !8129
  call void @llvm.dbg.value(metadata i32 %8, metadata !8121, metadata !DIExpression()), !dbg !8122
  %9 = icmp slt i32 %8, 0, !dbg !8130
  %10 = select i1 %9, i32 %8, i32 0, !dbg !8132
  br label %11, !dbg !8132

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !8122
  ret i32 %12, !dbg !8133
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.50() unnamed_addr #1 !dbg !8134 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8138, metadata !DIExpression()), !dbg !8139
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8140, !srcloc !8142
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.51() #24, !dbg !8143
  ret i1 %1, !dbg !8144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8145 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8149, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i8 1, metadata !8150, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !8151, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32 0, metadata !8152, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8153, metadata !DIExpression()), !dbg !8154
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8155
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !8155
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !8155
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !8151, metadata !DIExpression()), !dbg !8154
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !8156
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !8159
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !8160
  call void @llvm.dbg.value(metadata i32 %7, metadata !8152, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32 %7, metadata !8152, metadata !DIExpression()), !dbg !8154
  ret i32 %7, !dbg !8161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.51() unnamed_addr #1 !dbg !8162 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8164, metadata !DIExpression()), !dbg !8165
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #26, !dbg !8166
  ret i1 %1, !dbg !8167
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8168 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8172, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i32 %1, metadata !8173, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i32 %2, metadata !8174, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i32 %3, metadata !8175, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i32 0, metadata !8176, metadata !DIExpression()), !dbg !8180
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !8181
  %5 = icmp eq i32 %3, 17, !dbg !8182
  br i1 %5, label %6, label %14, !dbg !8183

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !8184
  call void @llvm.dbg.value(metadata i32 %7, metadata !8177, metadata !DIExpression()), !dbg !8185
  %8 = icmp eq i32 %7, 0, !dbg !8186
  %9 = shl nuw i32 1, %1, !dbg !8188
  br i1 %8, label %12, label %10, !dbg !8189

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !8190
  br label %14, !dbg !8192

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !8193
  br label %14, !dbg !8196

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !8197
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !8198 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8200, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i8* %1, metadata !8201, metadata !DIExpression()), !dbg !8204
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8205
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8205
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8205
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8202, metadata !DIExpression()), !dbg !8204
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8206
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8206
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !8208
  %9 = icmp eq i32 %8, 0, !dbg !8208
  br i1 %9, label %12, label %10, !dbg !8209

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8210
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !8212
  br label %12, !dbg !8213

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8214
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !8216
  %15 = icmp eq i32 %14, 0, !dbg !8216
  br i1 %15, label %19, label %16, !dbg !8217

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8218
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !8219
  store i8 %18, i8* %1, align 1, !dbg !8220
  br label %19, !dbg !8221

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !8204
  ret i32 %20, !dbg !8222
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !8223 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8225, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i8 %1, metadata !8226, metadata !DIExpression()), !dbg !8229
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8230
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8230
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8230
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8227, metadata !DIExpression()), !dbg !8229
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !8231

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8232
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !8235
  %10 = icmp eq i32 %9, 0, !dbg !8235
  br i1 %10, label %18, label %11, !dbg !8236

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8237, !srcloc !8244
  call void @llvm.dbg.value(metadata i32 undef, metadata !8240, metadata !DIExpression()) #23, !dbg !8245
  call void @llvm.dbg.value(metadata i32 undef, metadata !8241, metadata !DIExpression()) #23, !dbg !8245
  call void @llvm.dbg.value(metadata i32 undef, metadata !8228, metadata !DIExpression()), !dbg !8229
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8246
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !8248
  %15 = icmp eq i32 %14, 0, !dbg !8248
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !8237
  br i1 %15, label %17, label %19, !dbg !8249

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !8240, metadata !DIExpression()) #23, !dbg !8245
  call void @llvm.dbg.value(metadata i32 %16, metadata !8228, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i32 undef, metadata !8250, metadata !DIExpression()) #23, !dbg !8253
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !8255, !srcloc !8256
  br label %18, !dbg !8257

18:                                               ; preds = %17, %7
  br label %7, !dbg !8232, !llvm.loop !8258

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !8237
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8260
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !8261
  call void @llvm.dbg.value(metadata i32 %20, metadata !8250, metadata !DIExpression()) #23, !dbg !8262
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !8264, !srcloc !8256
  ret void, !dbg !8265
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !8266 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8268, metadata !DIExpression()), !dbg !8271
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8272
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8272
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8272
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8269, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i32 0, metadata !8270, metadata !DIExpression()), !dbg !8271
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8273
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8273
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !8275
  %8 = icmp ne i32 %7, 0, !dbg !8275
  %9 = zext i1 %8 to i32, !dbg !8276
  call void @llvm.dbg.value(metadata i32 %9, metadata !8270, metadata !DIExpression()), !dbg !8271
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8277
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !8279
  %12 = icmp eq i32 %11, 0, !dbg !8279
  %13 = or i32 %9, 2, !dbg !8280
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !8280
  call void @llvm.dbg.value(metadata i32 %14, metadata !8270, metadata !DIExpression()), !dbg !8271
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8281
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !8283
  %17 = icmp eq i32 %16, 0, !dbg !8283
  %18 = or i32 %14, 4, !dbg !8284
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !8284
  call void @llvm.dbg.value(metadata i32 %19, metadata !8270, metadata !DIExpression()), !dbg !8271
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8285
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !8287
  %22 = icmp eq i32 %21, 0, !dbg !8287
  %23 = or i32 %19, 8, !dbg !8288
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !8288
  call void @llvm.dbg.value(metadata i32 %24, metadata !8270, metadata !DIExpression()), !dbg !8271
  %25 = and i32 %24, 8, !dbg !8289
  %26 = icmp eq i32 %25, 0, !dbg !8289
  br i1 %26, label %29, label %27, !dbg !8291

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8292
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !8294
  br label %29, !dbg !8295

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !8296
  %31 = icmp eq i32 %30, 0, !dbg !8296
  br i1 %31, label %34, label %32, !dbg !8298

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8299
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !8301
  br label %34, !dbg !8302

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !8303
  %36 = icmp eq i32 %35, 0, !dbg !8303
  br i1 %36, label %39, label %37, !dbg !8305

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8306
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !8308
  br label %39, !dbg !8309

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !8310
  %41 = icmp eq i32 %40, 0, !dbg !8310
  br i1 %41, label %44, label %42, !dbg !8312

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8313
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !8315
  br label %44, !dbg !8316

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8317
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !8318
  ret i32 %24, !dbg !8319
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !8320 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8322, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8323, metadata !DIExpression()), !dbg !8331
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8332
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8332
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8332
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8324, metadata !DIExpression()), !dbg !8331
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8333
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !8333
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !8333
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !8325, metadata !DIExpression()), !dbg !8331
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8334
  %10 = load i8, i8* %9, align 4, !dbg !8334
  %11 = zext i8 %10 to i32, !dbg !8335
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !8336
  call void @llvm.dbg.value(metadata i32 %12, metadata !8327, metadata !DIExpression()), !dbg !8331
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8337
  %14 = load i8, i8* %13, align 1, !dbg !8337
  %15 = zext i8 %14 to i32, !dbg !8338
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !8339
  call void @llvm.dbg.value(metadata i32 %16, metadata !8328, metadata !DIExpression()), !dbg !8331
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8340
  %18 = load i8, i8* %17, align 2, !dbg !8340
  %19 = zext i8 %18 to i32, !dbg !8341
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !8342
  call void @llvm.dbg.value(metadata i32 %20, metadata !8329, metadata !DIExpression()), !dbg !8331
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8343
  %22 = load i8, i8* %21, align 1, !dbg !8343
  %23 = zext i8 %22 to i32, !dbg !8344
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !8345
  call void @llvm.dbg.value(metadata i32 %24, metadata !8330, metadata !DIExpression()), !dbg !8331
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8346

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8348
  br i1 %26, label %69, label %27, !dbg !8350

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8351

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8352
  br i1 %29, label %65, label %30, !dbg !8352

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8354
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8331
  br i1 %31, label %38, label %34, !dbg !8356

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8357
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !8357

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8360
  br i1 %37, label %38, label %69, !dbg !8361

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8362
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !8363
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !8364
  %41 = icmp eq i32 %12, %40, !dbg !8366
  br i1 %41, label %43, label %42, !dbg !8367

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !8368
  br label %43, !dbg !8370

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !8371
  %45 = icmp eq i32 %16, %44, !dbg !8373
  br i1 %45, label %47, label %46, !dbg !8374

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !8375
  br label %47, !dbg !8377

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !8378
  %49 = icmp eq i32 %20, %48, !dbg !8380
  br i1 %49, label %51, label %50, !dbg !8381

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !8382
  br label %51, !dbg !8384

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !8385
  %53 = icmp eq i32 %24, %52, !dbg !8387
  br i1 %53, label %55, label %54, !dbg !8388

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !8389
  br label %55, !dbg !8391

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8392
  %57 = load i32, i32* %56, align 4, !dbg !8392
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8394
  %59 = load i32, i32* %58, align 4, !dbg !8394
  %60 = icmp eq i32 %57, %59, !dbg !8395
  br i1 %60, label %63, label %61, !dbg !8396

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !8397
  %62 = load i32, i32* %56, align 4, !dbg !8399
  store i32 %62, i32* %58, align 4, !dbg !8400
  br label %63, !dbg !8401

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8402
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !8403
  br label %69, !dbg !8404

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8352
  %67 = and i8 %66, 1, !dbg !8352
  %68 = icmp eq i8 %67, 0, !dbg !8352
  br i1 %68, label %30, label %69, !dbg !8352

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !8331
  ret i32 %70, !dbg !8405
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8408, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8409, metadata !DIExpression()), !dbg !8411
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8412
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8412
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8412
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8410, metadata !DIExpression()), !dbg !8411
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8413
  %7 = load i32, i32* %6, align 4, !dbg !8413
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8414
  store i32 %7, i32* %8, align 4, !dbg !8415
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8416, !range !8417
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !8418
  %11 = trunc i32 %10 to i8, !dbg !8418
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8419
  store i8 %11, i8* %12, align 4, !dbg !8420
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !8421, !range !8422
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !8423
  %15 = trunc i32 %14 to i8, !dbg !8423
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8424
  store i8 %15, i8* %16, align 1, !dbg !8425
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !8426
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8427, !range !8417
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !8428
  %20 = trunc i32 %19 to i8, !dbg !8428
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8429
  store i8 %20, i8* %21, align 2, !dbg !8430
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !8431, !range !8432
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !8433
  %24 = trunc i32 %23 to i8, !dbg !8433
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8434
  store i8 %24, i8* %25, align 1, !dbg !8435
  ret i32 0, !dbg !8436
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8437 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8441, metadata !DIExpression()), !dbg !8443
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8444
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8444
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8444
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8442, metadata !DIExpression()), !dbg !8443
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8445
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8445
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !8446
  ret i32 %7, !dbg !8447
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8452, metadata !DIExpression()), !dbg !8453
  %2 = icmp eq i32 %0, 1024, !dbg !8454
  %3 = select i1 %2, i32 2, i32 0, !dbg !8454
  %4 = icmp eq i32 %0, 1536, !dbg !8454
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8454
  ret i32 %5, !dbg !8455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8458, metadata !DIExpression()), !dbg !8460
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8461
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8461
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8461
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8459, metadata !DIExpression()), !dbg !8460
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8462
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8462
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !8463
  ret i32 %7, !dbg !8464
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !8465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8469, metadata !DIExpression()), !dbg !8470
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8471
  %3 = icmp ult i32 %2, 4, !dbg !8471
  br i1 %3, label %4, label %7, !dbg !8471

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8471
  %6 = load i32, i32* %5, align 4, !dbg !8471
  br label %7, !dbg !8471

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8472
  ret i32 %8, !dbg !8474
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8477, metadata !DIExpression()), !dbg !8479
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8480
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8480
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8480
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8478, metadata !DIExpression()), !dbg !8479
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8481
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8481
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !8482
  ret i32 %7, !dbg !8483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8488, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.value(metadata i32 %1, metadata !8489, metadata !DIExpression()), !dbg !8490
  %3 = icmp eq i32 %0, 4096, !dbg !8491
  %4 = icmp eq i32 %1, 0, !dbg !8491
  %5 = select i1 %4, i32 4, i32 3, !dbg !8491
  %6 = select i1 %4, i32 3, i32 2, !dbg !8491
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8491
  ret i32 %7, !dbg !8492
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8493 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8495, metadata !DIExpression()), !dbg !8497
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8498
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8498
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8498
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8496, metadata !DIExpression()), !dbg !8497
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8499
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8499
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !8500
  ret i32 %7, !dbg !8501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8506, metadata !DIExpression()), !dbg !8507
  %2 = icmp eq i32 %0, 768, !dbg !8508
  %3 = zext i1 %2 to i32, !dbg !8507
  ret i32 %3, !dbg !8510
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8511 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8516, metadata !DIExpression()), !dbg !8517
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8518
  %3 = load volatile i32, i32* %2, align 4, !dbg !8518
  %4 = and i32 %3, 768, !dbg !8518
  ret i32 %4, !dbg !8519
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8520 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8522, metadata !DIExpression()), !dbg !8523
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8524
  %3 = load volatile i32, i32* %2, align 4, !dbg !8524
  %4 = and i32 %3, 4096, !dbg !8524
  ret i32 %4, !dbg !8525
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8526 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8528, metadata !DIExpression()), !dbg !8529
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8530
  %3 = load volatile i32, i32* %2, align 4, !dbg !8530
  %4 = and i32 %3, 12288, !dbg !8530
  ret i32 %4, !dbg !8531
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8532 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8534, metadata !DIExpression()), !dbg !8535
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8536
  %3 = load volatile i32, i32* %2, align 4, !dbg !8536
  %4 = and i32 %3, 1536, !dbg !8536
  ret i32 %4, !dbg !8537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8542, metadata !DIExpression()), !dbg !8543
  %2 = icmp eq i32 %0, 2, !dbg !8544
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8544
  %4 = icmp eq i32 %0, 1, !dbg !8544
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8544
  ret i32 %5, !dbg !8545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8550, metadata !DIExpression()), !dbg !8551
  %2 = icmp ult i32 %0, 3, !dbg !8552
  br i1 %2, label %3, label %6, !dbg !8552

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8552
  %5 = load i32, i32* %4, align 4, !dbg !8552
  br label %6, !dbg !8552

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8553
  ret i32 %7, !dbg !8555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %1, metadata !8561, metadata !DIExpression()), !dbg !8562
  %3 = icmp eq i32 %0, 4, !dbg !8563
  %4 = icmp eq i32 %1, 0, !dbg !8563
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8563
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8563
  ret i32 %6, !dbg !8564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8569, metadata !DIExpression()), !dbg !8570
  %2 = icmp eq i32 %0, 1, !dbg !8571
  %3 = select i1 %2, i32 768, i32 0, !dbg !8570
  ret i32 %3, !dbg !8573
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8574 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8578, metadata !DIExpression()), !dbg !8579
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8580
  %3 = load volatile i32, i32* %2, align 4, !dbg !8580
  %4 = and i32 %3, -8193, !dbg !8580
  store volatile i32 %4, i32* %2, align 4, !dbg !8580
  ret void, !dbg !8581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8582 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8586, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata i32 %1, metadata !8587, metadata !DIExpression()), !dbg !8589
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8590
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8590
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8590
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8588, metadata !DIExpression()), !dbg !8589
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8591
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8591
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8592
  ret void, !dbg !8593
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8594 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8596, metadata !DIExpression()), !dbg !8599
  call void @llvm.dbg.value(metadata i32 %1, metadata !8597, metadata !DIExpression()), !dbg !8599
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8600
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8600
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8600
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8598, metadata !DIExpression()), !dbg !8599
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8601
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8601
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8602
  ret void, !dbg !8603
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8604 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8606, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i32 %1, metadata !8607, metadata !DIExpression()), !dbg !8609
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8610
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8610
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8610
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8608, metadata !DIExpression()), !dbg !8609
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8611
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8611
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8612
  ret void, !dbg !8613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8614 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8616, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata i32 %1, metadata !8617, metadata !DIExpression()), !dbg !8619
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8620
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8620
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8620
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8618, metadata !DIExpression()), !dbg !8619
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8621
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8621
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8622
  ret void, !dbg !8623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8624 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8626, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i32 %1, metadata !8627, metadata !DIExpression()), !dbg !8631
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8632
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8632
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8632
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8628, metadata !DIExpression()), !dbg !8631
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8633
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8633
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8633
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8629, metadata !DIExpression()), !dbg !8631
  %10 = bitcast i32* %3 to i8*, !dbg !8634
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8634
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8635
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8635
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8639
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8639
  %15 = load i8*, i8** %14, align 4, !dbg !8639
  call void @llvm.dbg.value(metadata i32* %3, metadata !8630, metadata !DIExpression(DW_OP_deref)), !dbg !8631
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !8640
  %17 = icmp slt i32 %16, 0, !dbg !8641
  br i1 %17, label %23, label %18, !dbg !8642

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8643
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8643
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #24, !dbg !8644
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8645
  %22 = load i32, i32* %3, align 4, !dbg !8646
  call void @llvm.dbg.value(metadata i32 %22, metadata !8630, metadata !DIExpression()), !dbg !8631
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #24, !dbg !8647
  br label %23, !dbg !8648

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8648
  ret void, !dbg !8648
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8649 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8651, metadata !DIExpression()), !dbg !8652
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8653
  %3 = load volatile i32, i32* %2, align 4, !dbg !8653
  %4 = or i32 %3, 8192, !dbg !8653
  store volatile i32 %4, i32* %2, align 4, !dbg !8653
  ret void, !dbg !8654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8657, metadata !DIExpression()), !dbg !8661
  call void @llvm.dbg.value(metadata i8* %1, metadata !8658, metadata !DIExpression()), !dbg !8661
  call void @llvm.dbg.value(metadata i32* %2, metadata !8659, metadata !DIExpression()), !dbg !8661
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8662
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8662
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8662
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8660, metadata !DIExpression()), !dbg !8661
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8663
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8663
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8665
  br i1 %9, label %12, label %10, !dbg !8666

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !8667
  br label %12, !dbg !8668

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8661
  ret i32 %13, !dbg !8669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8670 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8674, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i32 0, metadata !8675, metadata !DIExpression()), !dbg !8676
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8677
  %3 = load volatile i32, i32* %2, align 4, !dbg !8677
  %4 = and i32 %3, -32769, !dbg !8677
  store volatile i32 %4, i32* %2, align 4, !dbg !8677
  ret void, !dbg !8678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8679 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8683, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.value(metadata i32 %1, metadata !8684, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.value(metadata i32 0, metadata !8685, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.value(metadata i32 %2, metadata !8686, metadata !DIExpression()), !dbg !8687
  %4 = zext i32 %1 to i64, !dbg !8688
  %5 = mul nuw nsw i64 %4, 25, !dbg !8688
  %6 = zext i32 %2 to i64, !dbg !8688
  %7 = shl nuw nsw i64 %6, 2, !dbg !8688
  %8 = udiv i64 %5, %7, !dbg !8688
  %9 = trunc i64 %8 to i32, !dbg !8688
  %10 = udiv i32 %9, 100, !dbg !8688
  %11 = shl nuw nsw i32 %10, 4, !dbg !8688
  %12 = mul i32 %10, -100, !dbg !8688
  %13 = add i32 %12, %9, !dbg !8688
  %14 = shl i32 %13, 4, !dbg !8688
  %15 = add i32 %14, 50, !dbg !8688
  %16 = udiv i32 %15, 100, !dbg !8688
  %17 = and i32 %16, 240, !dbg !8688
  %18 = add nuw nsw i32 %17, %11, !dbg !8688
  %19 = and i32 %16, 15, !dbg !8688
  %20 = and i32 %18, 65520, !dbg !8691
  %21 = or i32 %20, %19, !dbg !8691
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8692
  store volatile i32 %21, i32* %22, align 4, !dbg !8693
  ret void, !dbg !8694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8695 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8697, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i32 %1, metadata !8698, metadata !DIExpression()), !dbg !8699
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8700
  %4 = load volatile i32, i32* %3, align 4, !dbg !8700
  %5 = and i32 %4, -769, !dbg !8700
  %6 = or i32 %5, %1, !dbg !8700
  store volatile i32 %6, i32* %3, align 4, !dbg !8700
  ret void, !dbg !8701
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8702 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8704, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i32 %1, metadata !8705, metadata !DIExpression()), !dbg !8706
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8707
  %4 = load volatile i32, i32* %3, align 4, !dbg !8707
  %5 = and i32 %4, -4097, !dbg !8707
  %6 = or i32 %5, %1, !dbg !8707
  store volatile i32 %6, i32* %3, align 4, !dbg !8707
  ret void, !dbg !8708
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8709 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8711, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i32 %1, metadata !8712, metadata !DIExpression()), !dbg !8713
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8714
  %4 = load volatile i32, i32* %3, align 4, !dbg !8714
  %5 = and i32 %4, -12289, !dbg !8714
  %6 = or i32 %5, %1, !dbg !8714
  store volatile i32 %6, i32* %3, align 4, !dbg !8714
  ret void, !dbg !8715
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8716 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8718, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 %1, metadata !8719, metadata !DIExpression()), !dbg !8720
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8721
  %4 = load volatile i32, i32* %3, align 4, !dbg !8721
  %5 = and i32 %4, -1537, !dbg !8721
  %6 = or i32 %5, %1, !dbg !8721
  store volatile i32 %6, i32* %3, align 4, !dbg !8721
  ret void, !dbg !8722
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8723 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8725, metadata !DIExpression()), !dbg !8726
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8727
  %3 = load volatile i32, i32* %2, align 4, !dbg !8727
  %4 = lshr i32 %3, 3, !dbg !8728
  %5 = and i32 %4, 1, !dbg !8728
  ret i32 %5, !dbg !8729
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8730 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8732, metadata !DIExpression()), !dbg !8733
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8734
  %3 = load volatile i32, i32* %2, align 4, !dbg !8734
  %4 = and i32 %3, 1, !dbg !8734
  ret i32 %4, !dbg !8735
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8736 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8738, metadata !DIExpression()), !dbg !8739
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8740
  %3 = load volatile i32, i32* %2, align 4, !dbg !8740
  %4 = lshr i32 %3, 1, !dbg !8741
  %5 = and i32 %4, 1, !dbg !8741
  ret i32 %5, !dbg !8742
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8743 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8745, metadata !DIExpression()), !dbg !8746
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8747
  %3 = load volatile i32, i32* %2, align 4, !dbg !8747
  %4 = lshr i32 %3, 8, !dbg !8748
  %5 = and i32 %4, 1, !dbg !8748
  ret i32 %5, !dbg !8749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8750 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8752, metadata !DIExpression()), !dbg !8753
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8754
  store volatile i32 -257, i32* %2, align 4, !dbg !8754
  ret void, !dbg !8755
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8756 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8758, metadata !DIExpression()), !dbg !8760
  %3 = bitcast i32* %2 to i8*, !dbg !8761
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8761
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8759, metadata !DIExpression()), !dbg !8762
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8763
  %5 = load volatile i32, i32* %4, align 4, !dbg !8763
  store volatile i32 %5, i32* %2, align 4, !dbg !8764
  %6 = load volatile i32, i32* %2, align 4, !dbg !8765
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8766
  %8 = load volatile i32, i32* %7, align 4, !dbg !8766
  store volatile i32 %8, i32* %2, align 4, !dbg !8767
  %9 = load volatile i32, i32* %2, align 4, !dbg !8768
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8769
  ret void, !dbg !8769
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8770 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8772, metadata !DIExpression()), !dbg !8774
  %3 = bitcast i32* %2 to i8*, !dbg !8775
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8775
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8773, metadata !DIExpression()), !dbg !8776
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8777
  %5 = load volatile i32, i32* %4, align 4, !dbg !8777
  store volatile i32 %5, i32* %2, align 4, !dbg !8778
  %6 = load volatile i32, i32* %2, align 4, !dbg !8779
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8780
  %8 = load volatile i32, i32* %7, align 4, !dbg !8780
  store volatile i32 %8, i32* %2, align 4, !dbg !8781
  %9 = load volatile i32, i32* %2, align 4, !dbg !8782
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8783
  ret void, !dbg !8783
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8784 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8786, metadata !DIExpression()), !dbg !8788
  %3 = bitcast i32* %2 to i8*, !dbg !8789
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8789
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8787, metadata !DIExpression()), !dbg !8790
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8791
  %5 = load volatile i32, i32* %4, align 4, !dbg !8791
  store volatile i32 %5, i32* %2, align 4, !dbg !8792
  %6 = load volatile i32, i32* %2, align 4, !dbg !8793
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8794
  %8 = load volatile i32, i32* %7, align 4, !dbg !8794
  store volatile i32 %8, i32* %2, align 4, !dbg !8795
  %9 = load volatile i32, i32* %2, align 4, !dbg !8796
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8797
  ret void, !dbg !8797
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8798 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8800, metadata !DIExpression()), !dbg !8802
  %3 = bitcast i32* %2 to i8*, !dbg !8803
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8803
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8801, metadata !DIExpression()), !dbg !8804
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8805
  %5 = load volatile i32, i32* %4, align 4, !dbg !8805
  store volatile i32 %5, i32* %2, align 4, !dbg !8806
  %6 = load volatile i32, i32* %2, align 4, !dbg !8807
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8808
  %8 = load volatile i32, i32* %7, align 4, !dbg !8808
  store volatile i32 %8, i32* %2, align 4, !dbg !8809
  %9 = load volatile i32, i32* %2, align 4, !dbg !8810
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8811
  ret void, !dbg !8811
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8812 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8814, metadata !DIExpression()), !dbg !8815
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8816
  %3 = load volatile i32, i32* %2, align 4, !dbg !8816
  %4 = lshr i32 %3, 7, !dbg !8817
  %5 = and i32 %4, 1, !dbg !8817
  ret i32 %5, !dbg !8818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !8819 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8823, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.value(metadata i8 %1, metadata !8824, metadata !DIExpression()), !dbg !8825
  %3 = zext i8 %1 to i32, !dbg !8826
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8827
  store volatile i32 %3, i32* %4, align 4, !dbg !8828
  ret void, !dbg !8829
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8830 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8832, metadata !DIExpression()), !dbg !8833
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8834
  %3 = load volatile i32, i32* %2, align 4, !dbg !8834
  %4 = lshr i32 %3, 5, !dbg !8835
  %5 = and i32 %4, 1, !dbg !8835
  ret i32 %5, !dbg !8836
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8837 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8841, metadata !DIExpression()), !dbg !8842
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8843
  %3 = load volatile i32, i32* %2, align 4, !dbg !8843
  %4 = trunc i32 %3 to i8, !dbg !8844
  ret i8 %4, !dbg !8845
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !8846 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8848, metadata !DIExpression()), !dbg !8854
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8855
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8855
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8855
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8849, metadata !DIExpression()), !dbg !8854
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8856
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !8856
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !8856
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !8850, metadata !DIExpression()), !dbg !8854
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !8857
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !8858
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !8858
  %10 = tail call fastcc zeroext i1 @device_is_ready.59(%struct.device* noundef %9) #24, !dbg !8860
  br i1 %10, label %11, label %49, !dbg !8861

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !8862
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !8863
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8863
  %15 = load i8*, i8** %14, align 4, !dbg !8863
  %16 = tail call fastcc i32 @clock_control_on.60(%struct.device* noundef %12, i8* noundef %15) #24, !dbg !8864
  call void @llvm.dbg.value(metadata i32 %16, metadata !8853, metadata !DIExpression()), !dbg !8854
  %17 = icmp eq i32 %16, 0, !dbg !8865
  br i1 %17, label %18, label %49, !dbg !8867

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !8868
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !8868
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #24, !dbg !8869
  call void @llvm.dbg.value(metadata i32 %21, metadata !8853, metadata !DIExpression()), !dbg !8854
  %22 = icmp slt i32 %21, 0, !dbg !8870
  br i1 %22, label %49, label %23, !dbg !8872

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8873
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8873
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #24, !dbg !8874
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8875
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #24, !dbg !8876
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !8877
  %28 = load i32, i32* %27, align 4, !dbg !8877
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !8879

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !8851, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 4096, metadata !8852, metadata !DIExpression()), !dbg !8854
  br label %31, !dbg !8880

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !8851, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 0, metadata !8852, metadata !DIExpression()), !dbg !8854
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !8883
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !8883
  call void @llvm.dbg.value(metadata i32 %33, metadata !8852, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 %32, metadata !8851, metadata !DIExpression()), !dbg !8854
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8884
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #24, !dbg !8885
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !8886
  %36 = load i8, i8* %35, align 4, !dbg !8886, !range !5474
  %37 = icmp eq i8 %36, 0, !dbg !8886
  br i1 %37, label %39, label %38, !dbg !8888

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !8889
  br label %39, !dbg !8891

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !8892
  %41 = load i32, i32* %40, align 4, !dbg !8892
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #24, !dbg !8893
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !8894
  %43 = load i8, i8* %42, align 4, !dbg !8894, !range !5474
  %44 = icmp eq i8 %43, 0, !dbg !8894
  br i1 %44, label %47, label %45, !dbg !8896

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8897
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #24, !dbg !8899
  br label %47, !dbg !8900

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8901
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #24, !dbg !8902
  br label %49, !dbg !8903

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !8854
  ret i32 %50, !dbg !8904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !8905 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8909, metadata !DIExpression()), !dbg !8913
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8914
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !8914
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !8914
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !8910, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8911, metadata !DIExpression()), !dbg !8913
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !8915
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !8916
  ret void, !dbg !8917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.59(%struct.device* noundef %0) unnamed_addr #1 !dbg !8918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8922, metadata !DIExpression()), !dbg !8923
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8924, !srcloc !8926
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.61(%struct.device* noundef %0) #24, !dbg !8927
  ret i1 %2, !dbg !8928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.60(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8929 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8931, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i8* %1, metadata !8932, metadata !DIExpression()), !dbg !8934
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8935
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !8935
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !8935
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !8933, metadata !DIExpression()), !dbg !8934
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !8936
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !8936
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !8937
  ret i32 %8, !dbg !8938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8939 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8943, metadata !DIExpression()), !dbg !8947
  call void @llvm.dbg.value(metadata i8 0, metadata !8944, metadata !DIExpression()), !dbg !8947
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8948
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8948
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8946, metadata !DIExpression(DW_OP_deref)), !dbg !8947
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !8949
  call void @llvm.dbg.value(metadata i32 %4, metadata !8945, metadata !DIExpression()), !dbg !8947
  %5 = icmp slt i32 %4, 0, !dbg !8950
  br i1 %5, label %9, label %6, !dbg !8952

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8953
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8946, metadata !DIExpression()), !dbg !8947
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !8954
  br label %9, !dbg !8955

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8947
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8956
  ret i32 %10, !dbg !8956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !8957 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8959, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i32 12, metadata !8960, metadata !DIExpression()), !dbg !8963
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !8964

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !8965, metadata !DIExpression()) #23, !dbg !8971
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !8974, !srcloc !8975
  call void @llvm.dbg.value(metadata i32 %4, metadata !8970, metadata !DIExpression()) #23, !dbg !8971
  %5 = or i32 %4, 12, !dbg !8976
  call void @llvm.dbg.value(metadata i32 %5, metadata !8961, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %5, metadata !8978, metadata !DIExpression()) #23, !dbg !8985
  call void @llvm.dbg.value(metadata i32* %2, metadata !8983, metadata !DIExpression()) #23, !dbg !8985
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !8987, !srcloc !8988
  call void @llvm.dbg.value(metadata i32 %6, metadata !8984, metadata !DIExpression()) #23, !dbg !8985
  %7 = icmp eq i32 %6, 0, !dbg !8964
  br i1 %7, label %8, label %3, !dbg !8976, !llvm.loop !8989

8:                                                ; preds = %3
  ret void, !dbg !8990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8991 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8993, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i32 %1, metadata !8994, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i32 %2, metadata !8995, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i32 0, metadata !8996, metadata !DIExpression()), !dbg !8997
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8998
  %5 = load volatile i32, i32* %4, align 4, !dbg !8998
  %6 = and i32 %5, -5633, !dbg !8998
  %7 = or i32 %2, %1, !dbg !8998
  %8 = or i32 %7, %6, !dbg !8998
  store volatile i32 %8, i32* %4, align 4, !dbg !8998
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8999
  %10 = load volatile i32, i32* %9, align 4, !dbg !8999
  %11 = and i32 %10, -12289, !dbg !8999
  store volatile i32 %11, i32* %9, align 4, !dbg !8999
  ret void, !dbg !9000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9001 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9003, metadata !DIExpression()), !dbg !9004
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9005
  %3 = load volatile i32, i32* %2, align 4, !dbg !9005
  %4 = or i32 %3, 8, !dbg !9005
  store volatile i32 %4, i32* %2, align 4, !dbg !9005
  ret void, !dbg !9006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9007 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9011, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9012, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i32 0, metadata !9013, metadata !DIExpression()), !dbg !9014
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9015
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !9015
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9016
  %5 = load i8, i8* %4, align 4, !dbg !9016
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !9017
  ret i32 %6, !dbg !9018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.61(%struct.device* noundef %0) unnamed_addr #1 !dbg !9019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9021, metadata !DIExpression()), !dbg !9022
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !9023
  ret i1 %2, !dbg !9024
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !9025 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9027, metadata !DIExpression()), !dbg !9028
  tail call fastcc void @__NVIC_SetPriority.63() #24, !dbg !9029
  store i32 8399, i32* @last_load, align 4, !dbg !9030
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9031
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9032
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9033
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9034
  %3 = or i32 %2, 7, !dbg !9034
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9034
  ret i32 0, !dbg !9035
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.63() unnamed_addr #13 !dbg !9036 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9038, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i32 1, metadata !9039, metadata !DIExpression()), !dbg !9040
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9041
  ret void, !dbg !9044
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9045 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9047, metadata !DIExpression()), !dbg !9049
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !9050
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9051
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9052
  %5 = add i32 %4, %3, !dbg !9052
  store i32 %5, i32* @cycle_count, align 4, !dbg !9052
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9053
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9054
  %7 = sub i32 %5, %6, !dbg !9057
  %8 = udiv i32 %7, 8400, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %8, metadata !9048, metadata !DIExpression()), !dbg !9049
  %9 = mul nuw i32 %8, 8400, !dbg !9059
  %10 = add i32 %9, %6, !dbg !9060
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9060
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !9061
  tail call void @z_arm_int_exit() #26, !dbg !9062
  ret void, !dbg !9063
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !9064 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9069
  call void @llvm.dbg.value(metadata i32 %1, metadata !9066, metadata !DIExpression()), !dbg !9070
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9071
  call void @llvm.dbg.value(metadata i32 %2, metadata !9067, metadata !DIExpression()), !dbg !9070
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9072
  call void @llvm.dbg.value(metadata i32 %3, metadata !9068, metadata !DIExpression()), !dbg !9070
  %4 = and i32 %2, 65536, !dbg !9073
  %5 = icmp ne i32 %4, 0, !dbg !9073
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !9075
  %8 = load i32, i32* @last_load, align 4, !dbg !9070
  br i1 %7, label %9, label %13, !dbg !9075

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9076
  %11 = add i32 %10, %8, !dbg !9076
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !9076
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9078
  br label %13, !dbg !9079

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !9080
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9081
  %16 = add i32 %14, %15, !dbg !9082
  ret i32 %16, !dbg !9083
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !9084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9088, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i1 %1, metadata !9089, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9101
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !9102
  br i1 %4, label %5, label %8, !dbg !9102

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9104
  %7 = and i32 %6, -2, !dbg !9104
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9104
  store i32 -16777216, i32* @last_load, align 4, !dbg !9106
  br label %54, !dbg !9107

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !9108
  call void @llvm.dbg.value(metadata i32 %9, metadata !9093, metadata !DIExpression()), !dbg !9101
  br i1 %3, label %18, label %10, !dbg !9109

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !9109
  call void @llvm.dbg.value(metadata i32 undef, metadata !9088, metadata !DIExpression()), !dbg !9101
  %12 = icmp slt i32 %11, 1, !dbg !9110
  br i1 %12, label %18, label %13, !dbg !9110

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !9110
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !9110
  %16 = mul nuw nsw i32 %15, 8400, !dbg !9110
  %17 = add nuw nsw i32 %16, 8399, !dbg !9110
  br label %18, !dbg !9110

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !9088, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9111, metadata !DIExpression()) #23, !dbg !9118
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9120, !srcloc !9126
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !9120
  call void @llvm.dbg.value(metadata i32 %21, metadata !9123, metadata !DIExpression()) #23, !dbg !9127
  call void @llvm.dbg.value(metadata i32 undef, metadata !9124, metadata !DIExpression()) #23, !dbg !9127
  call void @llvm.dbg.value(metadata i32 %21, metadata !9117, metadata !DIExpression()) #23, !dbg !9118
  call void @llvm.dbg.value(metadata i32 %21, metadata !9094, metadata !DIExpression()), !dbg !9101
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !9128
  call void @llvm.dbg.value(metadata i32 %22, metadata !9099, metadata !DIExpression()), !dbg !9101
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9129
  call void @llvm.dbg.value(metadata i32 %23, metadata !9091, metadata !DIExpression()), !dbg !9101
  %24 = load i32, i32* @cycle_count, align 4, !dbg !9130
  %25 = add i32 %24, %22, !dbg !9130
  store i32 %25, i32* @cycle_count, align 4, !dbg !9130
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9131
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !9132
  %27 = sub i32 %25, %26, !dbg !9133
  call void @llvm.dbg.value(metadata i32 %27, metadata !9100, metadata !DIExpression()), !dbg !9101
  %28 = icmp slt i32 %27, 0, !dbg !9134
  br i1 %28, label %38, label %29, !dbg !9136

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !9090, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32 undef, metadata !9090, metadata !DIExpression()), !dbg !9101
  %30 = add nuw i32 %19, %27, !dbg !9137
  %31 = urem i32 %30, 8400, !dbg !9139
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !9090, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9101
  %32 = sub nuw nsw i32 %19, %31, !dbg !9140
  call void @llvm.dbg.value(metadata i32 %32, metadata !9090, metadata !DIExpression()), !dbg !9101
  %33 = icmp ugt i32 %32, 1024, !dbg !9141
  br i1 %33, label %34, label %36, !dbg !9141

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !9090, metadata !DIExpression()), !dbg !9101
  %35 = icmp ugt i32 %32, 16766400, !dbg !9142
  br i1 %35, label %38, label %36, !dbg !9144

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !9145
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9146
  call void @llvm.dbg.value(metadata i32 %40, metadata !9092, metadata !DIExpression()), !dbg !9101
  %41 = add nsw i32 %39, -1, !dbg !9147
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9148
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9149
  %42 = icmp ult i32 %23, %40, !dbg !9150
  br i1 %42, label %43, label %48, !dbg !9152

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !9153
  %45 = add i32 %23, %9, !dbg !9155
  %46 = sub i32 %45, %40, !dbg !9156
  %47 = add i32 %46, %44, !dbg !9153
  br label %52, !dbg !9157

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !9158
  %50 = load i32, i32* @cycle_count, align 4, !dbg !9160
  %51 = add i32 %49, %50, !dbg !9160
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !9161
  store i32 %53, i32* @cycle_count, align 4, !dbg !9161
  call void @llvm.dbg.value(metadata i32 %21, metadata !9162, metadata !DIExpression()) #23, !dbg !9168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9167, metadata !DIExpression()) #23, !dbg !9168
  call void @llvm.dbg.value(metadata i32 %21, metadata !9170, metadata !DIExpression()) #23, !dbg !9173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !9175, !srcloc !9176
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !9177
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9178 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9111, metadata !DIExpression()) #23, !dbg !9182
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9184, !srcloc !9126
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9184
  call void @llvm.dbg.value(metadata i32 %2, metadata !9123, metadata !DIExpression()) #23, !dbg !9186
  call void @llvm.dbg.value(metadata i32 undef, metadata !9124, metadata !DIExpression()) #23, !dbg !9186
  call void @llvm.dbg.value(metadata i32 %2, metadata !9117, metadata !DIExpression()) #23, !dbg !9182
  call void @llvm.dbg.value(metadata i32 %2, metadata !9180, metadata !DIExpression()), !dbg !9187
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9188
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9189
  %5 = add i32 %4, %3, !dbg !9190
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9191
  %7 = sub i32 %5, %6, !dbg !9192
  call void @llvm.dbg.value(metadata i32 %7, metadata !9181, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata i32 %2, metadata !9162, metadata !DIExpression()) #23, !dbg !9193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9167, metadata !DIExpression()) #23, !dbg !9193
  call void @llvm.dbg.value(metadata i32 %2, metadata !9170, metadata !DIExpression()) #23, !dbg !9195
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9197, !srcloc !9176
  %8 = udiv i32 %7, 8400, !dbg !9198
  ret i32 %8, !dbg !9199
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9200 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9111, metadata !DIExpression()) #23, !dbg !9204
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9206, !srcloc !9126
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9206
  call void @llvm.dbg.value(metadata i32 %2, metadata !9123, metadata !DIExpression()) #23, !dbg !9208
  call void @llvm.dbg.value(metadata i32 undef, metadata !9124, metadata !DIExpression()) #23, !dbg !9208
  call void @llvm.dbg.value(metadata i32 %2, metadata !9117, metadata !DIExpression()) #23, !dbg !9204
  call void @llvm.dbg.value(metadata i32 %2, metadata !9202, metadata !DIExpression()), !dbg !9209
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9210
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9211
  %5 = add i32 %4, %3, !dbg !9212
  call void @llvm.dbg.value(metadata i32 %5, metadata !9203, metadata !DIExpression()), !dbg !9209
  call void @llvm.dbg.value(metadata i32 %2, metadata !9162, metadata !DIExpression()) #23, !dbg !9213
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9167, metadata !DIExpression()) #23, !dbg !9213
  call void @llvm.dbg.value(metadata i32 %2, metadata !9170, metadata !DIExpression()) #23, !dbg !9215
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9217, !srcloc !9176
  ret i32 %5, !dbg !9218
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !9219 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9220
  %2 = icmp eq i32 %1, -16777216, !dbg !9222
  br i1 %2, label %3, label %6, !dbg !9223

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9224
  %5 = or i32 %4, 1, !dbg !9224
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9224
  br label %6, !dbg !9226

6:                                                ; preds = %3, %0
  ret void, !dbg !9227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !9228 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9229
  %2 = and i32 %1, -2, !dbg !9229
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9229
  ret void, !dbg !9230
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !9231 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9257, metadata !DIExpression()), !dbg !9260
  call void @llvm.dbg.value(metadata i8 %1, metadata !9258, metadata !DIExpression()), !dbg !9260
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9259, metadata !DIExpression()), !dbg !9260
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9261
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9261
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9260
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9262
  %8 = load i8, i8* %6, align 4, !dbg !9263
  %9 = zext i8 %8 to i32, !dbg !9264
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9264
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9265
  br i1 %11, label %18, label %24, !dbg !9266

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9260
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9262
  %14 = load i8, i8* %6, align 4, !dbg !9263
  %15 = zext i8 %14 to i32, !dbg !9264
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9264
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9265
  br i1 %17, label %18, label %24, !dbg !9266, !llvm.loop !9267

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9269
  %21 = load i8, i8* %20, align 1, !dbg !9269
  %22 = icmp eq i8 %21, %1, !dbg !9272
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9273
  br i1 %22, label %24, label %12, !dbg !9274

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9260
  ret i32 %25, !dbg !9275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9276 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !9287, metadata !DIExpression()), !dbg !9303
  call void @llvm.dbg.value(metadata i8 %1, metadata !9288, metadata !DIExpression()), !dbg !9303
  call void @llvm.dbg.value(metadata i32 %2, metadata !9289, metadata !DIExpression()), !dbg !9303
  call void @llvm.dbg.value(metadata i32 0, metadata !9292, metadata !DIExpression()), !dbg !9303
  call void @llvm.dbg.value(metadata i32 0, metadata !9293, metadata !DIExpression()), !dbg !9303
  call void @llvm.dbg.value(metadata i8 0, metadata !9294, metadata !DIExpression()), !dbg !9304
  %4 = icmp eq i8 %1, 0, !dbg !9305
  br i1 %4, label %35, label %5, !dbg !9306

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9305
  br label %9, !dbg !9306

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !9294, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i32 %29, metadata !9292, metadata !DIExpression()), !dbg !9303
  %8 = icmp eq i32 %34, %6, !dbg !9305
  br i1 %8, label %35, label %9, !dbg !9306, !llvm.loop !9307

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9294, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i32 %11, metadata !9292, metadata !DIExpression()), !dbg !9303
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !9309
  %13 = load i32, i32* %12, align 4, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %13, metadata !9291, metadata !DIExpression()), !dbg !9303
  %14 = and i32 %13, 31, !dbg !9310
  %15 = icmp ult i32 %14, 16, !dbg !9311
  br i1 %15, label %16, label %20, !dbg !9312

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9313
  %18 = load i32, i32* %17, align 4, !dbg !9313
  %19 = or i32 %18, 32, !dbg !9315
  call void @llvm.dbg.value(metadata i32 %19, metadata !9292, metadata !DIExpression()), !dbg !9303
  br label %28, !dbg !9316

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !9317

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9318
  %23 = load i32, i32* %22, align 4, !dbg !9318
  call void @llvm.dbg.value(metadata i32 %23, metadata !9296, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !9319
  %24 = lshr i32 %23, 7, !dbg !9320
  %25 = and i32 %24, 16, !dbg !9320
  %26 = or i32 %25, %23, !dbg !9320
  call void @llvm.dbg.value(metadata i32 %26, metadata !9292, metadata !DIExpression()), !dbg !9303
  br label %28, !dbg !9321

27:                                               ; preds = %20
  br label %28, !dbg !9322

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !9303
  call void @llvm.dbg.value(metadata i32 %29, metadata !9292, metadata !DIExpression()), !dbg !9303
  %30 = lshr i32 %13, 5, !dbg !9322
  %31 = and i32 %30, 255, !dbg !9322
  call void @llvm.dbg.value(metadata i32 %31, metadata !9290, metadata !DIExpression()), !dbg !9303
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !9323
  call void @llvm.dbg.value(metadata i32 %32, metadata !9293, metadata !DIExpression()), !dbg !9303
  %33 = icmp slt i32 %32, 0, !dbg !9324
  %34 = add nuw nsw i32 %10, 1, !dbg !9326
  call void @llvm.dbg.value(metadata i32 %34, metadata !9294, metadata !DIExpression()), !dbg !9304
  br i1 %33, label %35, label %7, !dbg !9327

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !9328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9333, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.value(metadata i32 %1, metadata !9334, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.value(metadata i32 %2, metadata !9335, metadata !DIExpression()), !dbg !9337
  %4 = icmp ugt i32 %0, 175, !dbg !9338
  br i1 %4, label %16, label %5, !dbg !9340

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9341
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9342
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9342
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9336, metadata !DIExpression()), !dbg !9337
  %9 = add nsw i32 %6, -8, !dbg !9343
  %10 = icmp ult i32 %9, 3, !dbg !9343
  br i1 %10, label %16, label %11, !dbg !9345

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %8) #24, !dbg !9346
  br i1 %12, label %13, label %16, !dbg !9347

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9348
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !9349
  br label %16, !dbg !9350

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9337
  ret i32 %17, !dbg !9351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %0) unnamed_addr #1 !dbg !9352 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9356, metadata !DIExpression()), !dbg !9357
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9358, !srcloc !9360
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) #24, !dbg !9361
  ret i1 %2, !dbg !9362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) unnamed_addr #1 !dbg !9363 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9365, metadata !DIExpression()), !dbg !9366
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !9367
  ret i1 %2, !dbg !9368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9369 {
  ret void, !dbg !9370
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9371 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9373, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 0, metadata !9374, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 2, metadata !9375, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 0, metadata !9376, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 2, metadata !9377, metadata !DIExpression()), !dbg !9378
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9379
  %2 = and i32 %1, 12, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %2, metadata !9373, metadata !DIExpression()), !dbg !9378
  %3 = icmp eq i32 %2, 8, !dbg !9381
  br i1 %3, label %4, label %18, !dbg !9381

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %5, metadata !9376, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9378
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9384
  %7 = and i32 %6, 63, !dbg !9385
  call void @llvm.dbg.value(metadata i32 %7, metadata !9377, metadata !DIExpression()), !dbg !9378
  %8 = udiv i32 16000000, %7, !dbg !9386
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9386
  %10 = lshr i32 %9, 6, !dbg !9386
  %11 = and i32 %10, 511, !dbg !9386
  %12 = mul i32 %11, %8, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %12, metadata !9374, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 %12, metadata !9374, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 %12, metadata !9374, metadata !DIExpression()), !dbg !9378
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9388
  %14 = lshr i32 %13, 15, !dbg !9389
  %15 = and i32 %14, 6, !dbg !9389
  %16 = add nuw nsw i32 %15, 2, !dbg !9389
  call void @llvm.dbg.value(metadata i32 %16, metadata !9375, metadata !DIExpression()), !dbg !9378
  %17 = udiv i32 %12, %16, !dbg !9390
  br label %18, !dbg !9391

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !9392
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9393
  %21 = lshr i32 %20, 4, !dbg !9394
  %22 = and i32 %21, 15, !dbg !9394
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !9395
  %24 = load i8, i8* %23, align 1, !dbg !9395
  %25 = zext i8 %24 to i32, !dbg !9395
  call void @llvm.dbg.value(metadata i32 %25, metadata !9373, metadata !DIExpression()), !dbg !9378
  %26 = lshr i32 %19, %25, !dbg !9396
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !9396
  ret void, !dbg !9397
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !9398 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9440, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 0, metadata !9441, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 0, metadata !9442, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 0, metadata !9443, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 0, metadata !9444, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 0, metadata !9445, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 0, metadata !9446, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 0, metadata !9447, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 0, metadata !9448, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 0, metadata !9449, metadata !DIExpression()), !dbg !9454
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9455
  %4 = load i32, i32* %3, align 4, !dbg !9455
  %5 = and i32 %4, 1, !dbg !9457
  %6 = icmp eq i32 %5, 0, !dbg !9458
  br i1 %6, label %17, label %7, !dbg !9459

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9460
  %9 = and i32 %8, -100663297, !dbg !9460
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9460
  %11 = load i32, i32* %10, align 4, !dbg !9460
  %12 = or i32 %9, %11, !dbg !9460
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9460
  %13 = load i32, i32* %10, align 4, !dbg !9462
  %14 = icmp eq i32 %13, 0, !dbg !9464
  %15 = zext i1 %14 to i32, !dbg !9465
  %16 = load i32, i32* %3, align 4, !dbg !9466
  br label %17, !dbg !9465

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !9466
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !9454
  call void @llvm.dbg.value(metadata i32 %19, metadata !9448, metadata !DIExpression()), !dbg !9454
  %20 = and i32 %18, 2, !dbg !9468
  %21 = icmp eq i32 %20, 0, !dbg !9469
  br i1 %21, label %32, label %22, !dbg !9470

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9471
  %24 = and i32 %23, -402653185, !dbg !9471
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9471
  %26 = load i32, i32* %25, align 4, !dbg !9471
  %27 = or i32 %24, %26, !dbg !9471
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9471
  %28 = load i32, i32* %25, align 4, !dbg !9473
  %29 = icmp eq i32 %28, 0, !dbg !9475
  %30 = select i1 %29, i32 1, i32 %19, !dbg !9476
  %31 = load i32, i32* %3, align 4, !dbg !9477
  br label %32, !dbg !9476

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !9477
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !9454
  call void @llvm.dbg.value(metadata i32 %34, metadata !9448, metadata !DIExpression()), !dbg !9454
  %35 = and i32 %33, 4, !dbg !9479
  %36 = icmp eq i32 %35, 0, !dbg !9480
  br i1 %36, label %49, label %37, !dbg !9481

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9482
  %39 = and i32 %38, -3145729, !dbg !9482
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9482
  %41 = load i32, i32* %40, align 4, !dbg !9482
  %42 = or i32 %39, %41, !dbg !9482
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9482
  %43 = load i32, i32* %40, align 4, !dbg !9484
  %44 = icmp eq i32 %43, 1048576, !dbg !9486
  %45 = select i1 %44, i32 1, i32 %34, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %45, metadata !9448, metadata !DIExpression()), !dbg !9454
  %46 = icmp eq i32 %43, 0, !dbg !9488
  %47 = zext i1 %46 to i32, !dbg !9490
  %48 = load i32, i32* %3, align 4, !dbg !9491
  br label %49, !dbg !9490

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !9491
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !9454
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !9454
  call void @llvm.dbg.value(metadata i32 %52, metadata !9449, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 %51, metadata !9448, metadata !DIExpression()), !dbg !9454
  %53 = and i32 %50, 8, !dbg !9493
  %54 = icmp eq i32 %53, 0, !dbg !9494
  br i1 %54, label %67, label %55, !dbg !9495

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9496
  %57 = and i32 %56, -12582913, !dbg !9496
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9496
  %59 = load i32, i32* %58, align 4, !dbg !9496
  %60 = or i32 %57, %59, !dbg !9496
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9496
  %61 = load i32, i32* %58, align 4, !dbg !9498
  %62 = icmp eq i32 %61, 4194304, !dbg !9500
  %63 = select i1 %62, i32 1, i32 %51, !dbg !9501
  call void @llvm.dbg.value(metadata i32 %63, metadata !9448, metadata !DIExpression()), !dbg !9454
  %64 = icmp eq i32 %61, 0, !dbg !9502
  %65 = select i1 %64, i32 1, i32 %52, !dbg !9504
  %66 = load i32, i32* %3, align 4, !dbg !9505
  br label %67, !dbg !9504

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !9505
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !9454
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !9454
  call void @llvm.dbg.value(metadata i32 %70, metadata !9449, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 %69, metadata !9448, metadata !DIExpression()), !dbg !9454
  %71 = and i32 %68, 32, !dbg !9506
  %72 = icmp eq i32 %71, 0, !dbg !9507
  br i1 %72, label %131, label %73, !dbg !9508

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !9509
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !9509
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9450, metadata !DIExpression()), !dbg !9509
  store volatile i32 0, i32* %2, align 4, !dbg !9509
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9509
  %76 = or i32 %75, 268435456, !dbg !9509
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9509
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9509
  %78 = and i32 %77, 268435456, !dbg !9509
  store volatile i32 %78, i32* %2, align 4, !dbg !9509
  %79 = load volatile i32, i32* %2, align 4, !dbg !9509
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !9510
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9511
  %81 = or i32 %80, 256, !dbg !9511
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9511
  %82 = tail call i32 @HAL_GetTick() #26, !dbg !9512
  call void @llvm.dbg.value(metadata i32 %82, metadata !9441, metadata !DIExpression()), !dbg !9454
  br label %83, !dbg !9513

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9514
  %85 = and i32 %84, 256, !dbg !9515
  %86 = icmp eq i32 %85, 0, !dbg !9516
  br i1 %86, label %87, label %91, !dbg !9513

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #26, !dbg !9517
  %89 = sub i32 %88, %82, !dbg !9520
  %90 = icmp ugt i32 %89, 2, !dbg !9521
  br i1 %90, label %439, label %83, !dbg !9522, !llvm.loop !9523

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9525
  %93 = and i32 %92, 768, !dbg !9526
  call void @llvm.dbg.value(metadata i32 %93, metadata !9442, metadata !DIExpression()), !dbg !9454
  %94 = icmp eq i32 %93, 0, !dbg !9527
  br i1 %94, label %116, label %95, !dbg !9529

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9530
  %97 = load i32, i32* %96, align 4, !dbg !9530
  %98 = and i32 %97, 768, !dbg !9531
  %99 = icmp eq i32 %93, %98, !dbg !9532
  br i1 %99, label %116, label %100, !dbg !9533

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9534
  %102 = and i32 %101, -769, !dbg !9536
  call void @llvm.dbg.value(metadata i32 %102, metadata !9442, metadata !DIExpression()), !dbg !9454
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9537
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9538
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9539
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9540
  %104 = and i32 %103, 1, !dbg !9540
  %105 = icmp eq i32 %104, 0, !dbg !9540
  br i1 %105, label %116, label %106, !dbg !9542

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #26, !dbg !9543
  call void @llvm.dbg.value(metadata i32 %107, metadata !9441, metadata !DIExpression()), !dbg !9454
  br label %108, !dbg !9545

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9546
  %110 = and i32 %109, 2, !dbg !9547
  %111 = icmp eq i32 %110, 0, !dbg !9547
  br i1 %111, label %112, label %116, !dbg !9545

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #26, !dbg !9548
  %114 = sub i32 %113, %107, !dbg !9551
  %115 = icmp ugt i32 %114, 5000, !dbg !9552
  br i1 %115, label %439, label %108, !dbg !9553, !llvm.loop !9554

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9556
  %118 = load i32, i32* %117, align 4, !dbg !9556
  %119 = and i32 %118, 768, !dbg !9556
  %120 = icmp eq i32 %119, 768, !dbg !9556
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9556
  %122 = and i32 %121, -2031617, !dbg !9556
  %123 = and i32 %118, 268434687, !dbg !9556
  %124 = select i1 %120, i32 %123, i32 0, !dbg !9556
  %125 = or i32 %122, %124, !dbg !9556
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9556
  %126 = load i32, i32* %117, align 4, !dbg !9556
  %127 = and i32 %126, 4095, !dbg !9556
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9556
  %129 = or i32 %128, %127, !dbg !9556
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9556
  %130 = load i32, i32* %3, align 4, !dbg !9558
  br label %131, !dbg !9560

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !9558
  %133 = and i32 %132, 16, !dbg !9561
  %134 = icmp eq i32 %133, 0, !dbg !9562
  br i1 %134, label %140, label %135, !dbg !9563

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9564
  %137 = load i8, i8* %136, align 4, !dbg !9564
  %138 = zext i8 %137 to i32, !dbg !9564
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !9564
  %139 = load i32, i32* %3, align 4, !dbg !9566
  br label %140, !dbg !9568

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !9566
  %142 = and i32 %141, 128, !dbg !9569
  %143 = icmp eq i32 %142, 0, !dbg !9570
  br i1 %143, label %151, label %144, !dbg !9571

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9572
  %146 = and i32 %145, -12582913, !dbg !9572
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9572
  %148 = load i32, i32* %147, align 4, !dbg !9572
  %149 = or i32 %146, %148, !dbg !9572
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9572
  %150 = load i32, i32* %3, align 4, !dbg !9574
  br label %151, !dbg !9576

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !9574
  %153 = and i32 %152, 64, !dbg !9577
  %154 = icmp eq i32 %153, 0, !dbg !9578
  br i1 %154, label %162, label %155, !dbg !9579

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9580
  %157 = and i32 %156, -67108865, !dbg !9580
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9580
  %159 = load i32, i32* %158, align 4, !dbg !9580
  %160 = or i32 %157, %159, !dbg !9580
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9580
  %161 = load i32, i32* %3, align 4, !dbg !9582
  br label %162, !dbg !9584

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !9582
  %164 = and i32 %163, 256, !dbg !9585
  %165 = icmp eq i32 %164, 0, !dbg !9586
  br i1 %165, label %176, label %166, !dbg !9587

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9588
  %168 = and i32 %167, -134217729, !dbg !9588
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9588
  %170 = load i32, i32* %169, align 4, !dbg !9588
  %171 = or i32 %168, %170, !dbg !9588
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9588
  %172 = load i32, i32* %169, align 4, !dbg !9590
  %173 = icmp eq i32 %172, 134217728, !dbg !9592
  %174 = select i1 %173, i32 1, i32 %70, !dbg !9593
  %175 = load i32, i32* %3, align 4, !dbg !9594
  br label %176, !dbg !9593

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !9594
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !9454
  call void @llvm.dbg.value(metadata i32 %178, metadata !9449, metadata !DIExpression()), !dbg !9454
  %179 = and i32 %177, 512, !dbg !9596
  %180 = icmp eq i32 %179, 0, !dbg !9597
  br i1 %180, label %188, label %181, !dbg !9598

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9599
  %183 = and i32 %182, -268435457, !dbg !9599
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9599
  %185 = load i32, i32* %184, align 4, !dbg !9599
  %186 = or i32 %183, %185, !dbg !9599
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9599
  %187 = load i32, i32* %3, align 4, !dbg !9601
  br label %188, !dbg !9603

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !9601
  %190 = and i32 %189, 1024, !dbg !9604
  %191 = icmp eq i32 %190, 0, !dbg !9605
  br i1 %191, label %204, label %192, !dbg !9606

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9607
  %194 = and i32 %193, -536870913, !dbg !9607
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9607
  %196 = load i32, i32* %195, align 4, !dbg !9607
  %197 = or i32 %194, %196, !dbg !9607
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9607
  %198 = load i32, i32* %195, align 4, !dbg !9609
  %199 = icmp eq i32 %198, 536870912, !dbg !9611
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !9612
  call void @llvm.dbg.value(metadata i32 %69, metadata !9448, metadata !DIExpression()), !dbg !9454
  br i1 %201, label %209, label %202, !dbg !9612

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !9613
  br label %206, !dbg !9612

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !9448, metadata !DIExpression()), !dbg !9454
  %205 = icmp eq i32 %69, 1, !dbg !9615
  br i1 %205, label %209, label %206, !dbg !9616

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !9613
  %208 = icmp eq i32 %207, 2048, !dbg !9617
  br i1 %208, label %209, label %356, !dbg !9618

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9619
  %210 = tail call i32 @HAL_GetTick() #26, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %210, metadata !9441, metadata !DIExpression()), !dbg !9454
  br label %211, !dbg !9622

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9623
  %213 = and i32 %212, 134217728, !dbg !9623
  %214 = icmp eq i32 %213, 0, !dbg !9623
  br i1 %214, label %219, label %215, !dbg !9622

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #26, !dbg !9624
  %217 = sub i32 %216, %210, !dbg !9627
  %218 = icmp ugt i32 %217, 2, !dbg !9628
  br i1 %218, label %439, label %211, !dbg !9629, !llvm.loop !9630

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !9632
  %221 = and i32 %220, 1, !dbg !9634
  %222 = icmp eq i32 %221, 0, !dbg !9635
  br i1 %222, label %227, label %223, !dbg !9636

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9637
  %225 = load i32, i32* %224, align 4, !dbg !9637
  %226 = icmp eq i32 %225, 0, !dbg !9638
  br i1 %226, label %234, label %227, !dbg !9639

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !9640
  %229 = icmp eq i32 %228, 0, !dbg !9641
  br i1 %229, label %252, label %230, !dbg !9642

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9643
  %232 = load i32, i32* %231, align 4, !dbg !9643
  %233 = icmp eq i32 %232, 0, !dbg !9644
  br i1 %233, label %234, label %252, !dbg !9645

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9646
  %236 = and i32 %235, 196608, !dbg !9648
  call void @llvm.dbg.value(metadata i32 %236, metadata !9443, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9454
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9649
  %238 = and i32 %237, 251658240, !dbg !9650
  call void @llvm.dbg.value(metadata i32 %238, metadata !9444, metadata !DIExpression()), !dbg !9454
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9651
  %240 = load i32, i32* %239, align 4, !dbg !9651
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9651
  %242 = load i32, i32* %241, align 4, !dbg !9651
  %243 = shl i32 %242, 6, !dbg !9651
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9651
  %245 = load i32, i32* %244, align 4, !dbg !9651
  %246 = shl i32 %245, 28, !dbg !9651
  %247 = or i32 %240, %236, !dbg !9651
  %248 = or i32 %247, %238, !dbg !9651
  %249 = or i32 %248, %243, !dbg !9651
  %250 = or i32 %249, %246, !dbg !9651
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9651
  %251 = load i32, i32* %3, align 4, !dbg !9652
  br label %252, !dbg !9654

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !9652
  %254 = and i32 %253, 4, !dbg !9655
  %255 = icmp eq i32 %254, 0, !dbg !9656
  br i1 %255, label %260, label %256, !dbg !9657

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9658
  %258 = load i32, i32* %257, align 4, !dbg !9658
  %259 = icmp eq i32 %258, 1048576, !dbg !9659
  br i1 %259, label %267, label %260, !dbg !9660

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !9661
  %262 = icmp eq i32 %261, 0, !dbg !9662
  br i1 %262, label %291, label %263, !dbg !9663

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9664
  %265 = load i32, i32* %264, align 4, !dbg !9664
  %266 = icmp eq i32 %265, 4194304, !dbg !9665
  br i1 %266, label %267, label %291, !dbg !9666

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9667
  %269 = and i32 %268, 196608, !dbg !9669
  call void @llvm.dbg.value(metadata i32 %269, metadata !9443, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9454
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9670
  %271 = and i32 %270, 1879048192, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %271, metadata !9445, metadata !DIExpression()), !dbg !9454
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9672
  %273 = load i32, i32* %272, align 4, !dbg !9672
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9672
  %275 = load i32, i32* %274, align 4, !dbg !9672
  %276 = shl i32 %275, 6, !dbg !9672
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9672
  %278 = load i32, i32* %277, align 4, !dbg !9672
  %279 = shl i32 %278, 24, !dbg !9672
  %280 = or i32 %273, %269, !dbg !9672
  %281 = or i32 %280, %271, !dbg !9672
  %282 = or i32 %281, %276, !dbg !9672
  %283 = or i32 %282, %279, !dbg !9672
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9672
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9673
  %285 = and i32 %284, -32, !dbg !9673
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9673
  %287 = load i32, i32* %286, align 4, !dbg !9673
  %288 = add i32 %287, -1, !dbg !9673
  %289 = or i32 %288, %285, !dbg !9673
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9673
  %290 = load i32, i32* %3, align 4, !dbg !9674
  br label %291, !dbg !9676

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !9674
  %293 = and i32 %292, 1024, !dbg !9677
  %294 = icmp eq i32 %293, 0, !dbg !9678
  br i1 %294, label %321, label %295, !dbg !9679

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9680
  %297 = load i32, i32* %296, align 4, !dbg !9680
  %298 = icmp eq i32 %297, 536870912, !dbg !9681
  br i1 %298, label %299, label %321, !dbg !9682

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9683
  call void @llvm.dbg.value(metadata i32 %300, metadata !9444, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9454
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9685
  %302 = and i32 %301, 1879048192, !dbg !9686
  call void @llvm.dbg.value(metadata i32 %302, metadata !9445, metadata !DIExpression()), !dbg !9454
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9687
  %304 = load i32, i32* %303, align 4, !dbg !9687
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9687
  %306 = load i32, i32* %305, align 4, !dbg !9687
  %307 = shl i32 %306, 6, !dbg !9687
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9687
  %309 = load i32, i32* %308, align 4, !dbg !9687
  %310 = shl i32 %309, 15, !dbg !9687
  %311 = add i32 %310, -65536, !dbg !9687
  %312 = and i32 %311, -65536, !dbg !9687
  %313 = shl i32 %300, 9, !dbg !9687
  %314 = and i32 %313, 100663296, !dbg !9687
  %315 = add nuw nsw i32 %314, 33554432, !dbg !9687
  %316 = or i32 %302, %304, !dbg !9687
  %317 = or i32 %316, %315, !dbg !9687
  %318 = or i32 %317, %307, !dbg !9687
  %319 = or i32 %318, %312, !dbg !9687
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9687
  %320 = load i32, i32* %3, align 4, !dbg !9688
  br label %321, !dbg !9690

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !9688
  %323 = and i32 %322, 2048, !dbg !9691
  %324 = icmp eq i32 %323, 0, !dbg !9692
  br i1 %324, label %346, label %325, !dbg !9693

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9694
  %327 = load i32, i32* %326, align 4, !dbg !9694
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9694
  %329 = load i32, i32* %328, align 4, !dbg !9694
  %330 = shl i32 %329, 6, !dbg !9694
  %331 = or i32 %330, %327, !dbg !9694
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9694
  %333 = load i32, i32* %332, align 4, !dbg !9694
  %334 = shl i32 %333, 15, !dbg !9694
  %335 = add i32 %334, -65536, !dbg !9694
  %336 = and i32 %335, -65536, !dbg !9694
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9694
  %338 = load i32, i32* %337, align 4, !dbg !9694
  %339 = shl i32 %338, 24, !dbg !9694
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9694
  %341 = load i32, i32* %340, align 4, !dbg !9694
  %342 = shl i32 %341, 28, !dbg !9694
  %343 = or i32 %331, %339, !dbg !9694
  %344 = or i32 %343, %336, !dbg !9694
  %345 = or i32 %344, %342, !dbg !9694
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9694
  br label %346, !dbg !9696

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9697
  %347 = tail call i32 @HAL_GetTick() #26, !dbg !9698
  call void @llvm.dbg.value(metadata i32 %347, metadata !9441, metadata !DIExpression()), !dbg !9454
  br label %348, !dbg !9699

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9700
  %350 = and i32 %349, 134217728, !dbg !9701
  %351 = icmp eq i32 %350, 0, !dbg !9701
  br i1 %351, label %352, label %356, !dbg !9699

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #26, !dbg !9702
  %354 = sub i32 %353, %347, !dbg !9705
  %355 = icmp ugt i32 %354, 2, !dbg !9706
  br i1 %355, label %439, label %348, !dbg !9707, !llvm.loop !9708

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !9710
  br i1 %357, label %358, label %439, !dbg !9712

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9713
  %359 = tail call i32 @HAL_GetTick() #26, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %359, metadata !9441, metadata !DIExpression()), !dbg !9454
  br label %360, !dbg !9716

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9717
  %362 = and i32 %361, 536870912, !dbg !9717
  %363 = icmp eq i32 %362, 0, !dbg !9717
  br i1 %363, label %368, label %364, !dbg !9716

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #26, !dbg !9718
  %366 = sub i32 %365, %359, !dbg !9721
  %367 = icmp ugt i32 %366, 2, !dbg !9722
  br i1 %367, label %439, label %360, !dbg !9723, !llvm.loop !9724

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !9726
  %370 = and i32 %369, 4, !dbg !9728
  %371 = icmp eq i32 %370, 0, !dbg !9729
  br i1 %371, label %376, label %372, !dbg !9730

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9731
  %374 = load i32, i32* %373, align 4, !dbg !9731
  %375 = icmp eq i32 %374, 0, !dbg !9732
  br i1 %375, label %383, label %376, !dbg !9733

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !9734
  %378 = icmp eq i32 %377, 0, !dbg !9735
  br i1 %378, label %405, label %379, !dbg !9736

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9737
  %381 = load i32, i32* %380, align 4, !dbg !9737
  %382 = icmp eq i32 %381, 0, !dbg !9738
  br i1 %382, label %383, label %405, !dbg !9739

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9740
  %385 = and i32 %384, 196608, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %385, metadata !9446, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9454
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9743
  %387 = load i32, i32* %386, align 4, !dbg !9743
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9743
  %389 = load i32, i32* %388, align 4, !dbg !9743
  %390 = shl i32 %389, 6, !dbg !9743
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9743
  %392 = load i32, i32* %391, align 4, !dbg !9743
  %393 = shl i32 %392, 24, !dbg !9743
  %394 = or i32 %385, %387, !dbg !9743
  %395 = or i32 %394, %390, !dbg !9743
  %396 = or i32 %395, %393, !dbg !9743
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9743
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9744
  %398 = and i32 %397, -7937, !dbg !9744
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9744
  %400 = load i32, i32* %399, align 4, !dbg !9744
  %401 = shl i32 %400, 8, !dbg !9744
  %402 = add i32 %401, -256, !dbg !9744
  %403 = or i32 %402, %398, !dbg !9744
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9744
  %404 = load i32, i32* %3, align 4, !dbg !9745
  br label %405, !dbg !9747

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !9745
  %407 = and i32 %406, 256, !dbg !9748
  %408 = icmp eq i32 %407, 0, !dbg !9749
  br i1 %408, label %429, label %409, !dbg !9750

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9751
  %411 = load i32, i32* %410, align 4, !dbg !9751
  %412 = icmp eq i32 %411, 134217728, !dbg !9752
  br i1 %412, label %413, label %429, !dbg !9753

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9754
  %415 = and i32 %414, 251658240, !dbg !9756
  call void @llvm.dbg.value(metadata i32 %415, metadata !9447, metadata !DIExpression()), !dbg !9454
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9757
  %417 = load i32, i32* %416, align 4, !dbg !9757
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9757
  %419 = load i32, i32* %418, align 4, !dbg !9757
  %420 = shl i32 %419, 6, !dbg !9757
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9757
  %422 = load i32, i32* %421, align 4, !dbg !9757
  %423 = shl i32 %422, 15, !dbg !9757
  %424 = add i32 %423, -65536, !dbg !9757
  %425 = and i32 %424, -65536, !dbg !9757
  %426 = or i32 %415, %417, !dbg !9757
  %427 = or i32 %426, %420, !dbg !9757
  %428 = or i32 %427, %425, !dbg !9757
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9757
  br label %429, !dbg !9758

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9759
  %430 = tail call i32 @HAL_GetTick() #26, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %430, metadata !9441, metadata !DIExpression()), !dbg !9454
  br label %431, !dbg !9761

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9762
  %433 = and i32 %432, 536870912, !dbg !9763
  %434 = icmp eq i32 %433, 0, !dbg !9763
  br i1 %434, label %435, label %439, !dbg !9761

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #26, !dbg !9764
  %437 = sub i32 %436, %430, !dbg !9767
  %438 = icmp ugt i32 %437, 2, !dbg !9768
  br i1 %438, label %439, label %431, !dbg !9769, !llvm.loop !9770

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !9454
  ret i32 %440, !dbg !9772
}

; Function Attrs: optsize
declare !dbg !9773 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #14 !dbg !9775 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9779, metadata !DIExpression()), !dbg !9781
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9782
  store i32 2047, i32* %2, align 4, !dbg !9783
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9784
  %4 = and i32 %3, 63, !dbg !9785
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9786
  store i32 %4, i32* %5, align 4, !dbg !9787
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9788
  %7 = lshr i32 %6, 6, !dbg !9789
  %8 = and i32 %7, 511, !dbg !9789
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9790
  store i32 %8, i32* %9, align 4, !dbg !9791
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9792
  %11 = lshr i32 %10, 15, !dbg !9793
  %12 = and i32 %11, 6, !dbg !9793
  %13 = add nuw nsw i32 %12, 2, !dbg !9793
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9794
  store i32 %13, i32* %14, align 4, !dbg !9795
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9796
  %16 = lshr i32 %15, 24, !dbg !9797
  %17 = and i32 %16, 15, !dbg !9797
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9798
  store i32 %17, i32* %18, align 4, !dbg !9799
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9800
  %20 = lshr i32 %19, 28, !dbg !9801
  %21 = and i32 %20, 7, !dbg !9801
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9802
  store i32 %21, i32* %22, align 4, !dbg !9803
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9804
  %24 = and i32 %23, 63, !dbg !9805
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9806
  store i32 %24, i32* %25, align 4, !dbg !9807
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9808
  %27 = lshr i32 %26, 6, !dbg !9809
  %28 = and i32 %27, 511, !dbg !9809
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9810
  store i32 %28, i32* %29, align 4, !dbg !9811
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9812
  %31 = lshr i32 %30, 15, !dbg !9813
  %32 = and i32 %31, 6, !dbg !9813
  %33 = add nuw nsw i32 %32, 2, !dbg !9813
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9814
  store i32 %33, i32* %34, align 4, !dbg !9815
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9816
  %36 = lshr i32 %35, 24, !dbg !9817
  %37 = and i32 %36, 15, !dbg !9817
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9818
  store i32 %37, i32* %38, align 4, !dbg !9819
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9820
  %40 = and i32 %39, 31, !dbg !9821
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9822
  store i32 %40, i32* %41, align 4, !dbg !9823
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9824
  %43 = lshr i32 %42, 8, !dbg !9825
  %44 = and i32 %43, 31, !dbg !9825
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9826
  store i32 %44, i32* %45, align 4, !dbg !9827
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9828
  %47 = and i32 %46, 3145728, !dbg !9828
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9829
  store i32 %47, i32* %48, align 4, !dbg !9830
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9831
  %50 = and i32 %49, 12582912, !dbg !9831
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9832
  store i32 %50, i32* %51, align 4, !dbg !9833
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9834
  %53 = and i32 %52, 100663296, !dbg !9834
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9835
  store i32 %53, i32* %54, align 4, !dbg !9836
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9837
  %56 = and i32 %55, 402653184, !dbg !9837
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9838
  store i32 %56, i32* %57, align 4, !dbg !9839
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9840
  %59 = and i32 %58, 2031616, !dbg !9841
  call void @llvm.dbg.value(metadata i32 %59, metadata !9780, metadata !DIExpression()), !dbg !9781
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9842
  %61 = and i32 %60, 768, !dbg !9843
  %62 = or i32 %61, %59, !dbg !9844
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9845
  store i32 %62, i32* %63, align 4, !dbg !9846
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9847
  %65 = and i32 %64, 67108864, !dbg !9847
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9848
  store i32 %65, i32* %66, align 4, !dbg !9849
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9850
  %68 = and i32 %67, 12582912, !dbg !9850
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9851
  store i32 %68, i32* %69, align 4, !dbg !9852
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9853
  %71 = and i32 %70, 134217728, !dbg !9853
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9854
  store i32 %71, i32* %72, align 4, !dbg !9855
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9856
  %74 = and i32 %73, 268435456, !dbg !9856
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9857
  store i32 %74, i32* %75, align 4, !dbg !9858
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9859
  %77 = and i32 %76, 536870912, !dbg !9859
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9860
  store i32 %77, i32* %78, align 4, !dbg !9861
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9862
  %80 = lshr i32 %79, 24, !dbg !9864
  %81 = trunc i32 %80 to i8, !dbg !9864
  %82 = and i8 %81, 1, !dbg !9864
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9865
  store i8 %82, i8* %83, align 4, !dbg !9867
  ret void, !dbg !9868
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #14 !dbg !9869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9871, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9872, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9873, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9874, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9875, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9876, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9877, metadata !DIExpression()), !dbg !9878
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !9879

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9880
  call void @llvm.dbg.value(metadata i32 %3, metadata !9875, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 %3, metadata !9875, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !9878
  %4 = lshr i32 %3, 20, !dbg !9883
  %5 = and i32 %4, 15, !dbg !9883
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !9883

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9884
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9888
  %9 = and i32 %8, 63, !dbg !9888
  %10 = udiv i32 16000000, %9, !dbg !9888
  call void @llvm.dbg.value(metadata i32 %10, metadata !9874, metadata !DIExpression()), !dbg !9878
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9889
  %12 = lshr i32 %11, 24, !dbg !9890
  %13 = and i32 %12, 15, !dbg !9890
  call void @llvm.dbg.value(metadata i32 %13, metadata !9872, metadata !DIExpression()), !dbg !9878
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9891
  %15 = lshr i32 %14, 6, !dbg !9892
  %16 = and i32 %15, 511, !dbg !9892
  %17 = mul i32 %16, %10, !dbg !9893
  %18 = udiv i32 %17, %13, !dbg !9894
  call void @llvm.dbg.value(metadata i32 %18, metadata !9873, metadata !DIExpression()), !dbg !9878
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9895
  %20 = lshr i32 %19, 8, !dbg !9896
  %21 = and i32 %20, 31, !dbg !9896
  %22 = add nuw nsw i32 %21, 1, !dbg !9897
  call void @llvm.dbg.value(metadata i32 %22, metadata !9872, metadata !DIExpression()), !dbg !9878
  %23 = udiv i32 %18, %22, !dbg !9898
  call void @llvm.dbg.value(metadata i32 %23, metadata !9873, metadata !DIExpression()), !dbg !9878
  br label %123, !dbg !9899

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9900
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9903
  %27 = and i32 %26, 63, !dbg !9903
  %28 = udiv i32 16000000, %27, !dbg !9903
  call void @llvm.dbg.value(metadata i32 %28, metadata !9874, metadata !DIExpression()), !dbg !9878
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9904
  %30 = lshr i32 %29, 24, !dbg !9905
  %31 = and i32 %30, 15, !dbg !9905
  call void @llvm.dbg.value(metadata i32 %31, metadata !9872, metadata !DIExpression()), !dbg !9878
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9906
  %33 = lshr i32 %32, 6, !dbg !9907
  %34 = and i32 %33, 511, !dbg !9907
  %35 = mul i32 %34, %28, !dbg !9908
  %36 = udiv i32 %35, %31, !dbg !9909
  call void @llvm.dbg.value(metadata i32 %36, metadata !9873, metadata !DIExpression()), !dbg !9878
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9910
  %38 = and i32 %37, 31, !dbg !9911
  %39 = add nuw nsw i32 %38, 1, !dbg !9912
  call void @llvm.dbg.value(metadata i32 %39, metadata !9872, metadata !DIExpression()), !dbg !9878
  %40 = udiv i32 %36, %39, !dbg !9913
  call void @llvm.dbg.value(metadata i32 %40, metadata !9873, metadata !DIExpression()), !dbg !9878
  br label %123, !dbg !9914

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9915
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9918
  %44 = and i32 %43, 63, !dbg !9918
  %45 = udiv i32 16000000, %44, !dbg !9918
  call void @llvm.dbg.value(metadata i32 %45, metadata !9874, metadata !DIExpression()), !dbg !9878
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9919
  %47 = lshr i32 %46, 28, !dbg !9920
  %48 = and i32 %47, 7, !dbg !9920
  call void @llvm.dbg.value(metadata i32 %48, metadata !9872, metadata !DIExpression()), !dbg !9878
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9921
  %50 = lshr i32 %49, 6, !dbg !9922
  %51 = and i32 %50, 511, !dbg !9922
  %52 = mul i32 %51, %45, !dbg !9923
  %53 = udiv i32 %52, %48, !dbg !9924
  call void @llvm.dbg.value(metadata i32 %53, metadata !9873, metadata !DIExpression()), !dbg !9878
  br label %123, !dbg !9925

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !9873, metadata !DIExpression()), !dbg !9878
  br label %123, !dbg !9926

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9928
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9873, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9873, metadata !DIExpression()), !dbg !9878
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9931
  call void @llvm.dbg.value(metadata i32 %58, metadata !9876, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !9878
  %59 = lshr i32 %58, 25, !dbg !9933
  %60 = and i32 %59, 3, !dbg !9933
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !9933

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9934
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9938
  %64 = and i32 %63, 63, !dbg !9938
  %65 = udiv i32 16000000, %64, !dbg !9938
  call void @llvm.dbg.value(metadata i32 %65, metadata !9874, metadata !DIExpression()), !dbg !9878
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9939
  %67 = lshr i32 %66, 6, !dbg !9940
  %68 = and i32 %67, 511, !dbg !9940
  %69 = mul i32 %68, %65, !dbg !9941
  call void @llvm.dbg.value(metadata i32 %69, metadata !9877, metadata !DIExpression()), !dbg !9878
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9942
  %71 = lshr i32 %70, 28, !dbg !9943
  %72 = and i32 %71, 7, !dbg !9943
  %73 = udiv i32 %69, %72, !dbg !9944
  call void @llvm.dbg.value(metadata i32 %73, metadata !9873, metadata !DIExpression()), !dbg !9878
  br label %123, !dbg !9945

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9946
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9949
  %77 = and i32 %76, 63, !dbg !9949
  %78 = udiv i32 16000000, %77, !dbg !9949
  call void @llvm.dbg.value(metadata i32 %78, metadata !9874, metadata !DIExpression()), !dbg !9878
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9950
  %80 = lshr i32 %79, 6, !dbg !9951
  %81 = and i32 %80, 511, !dbg !9951
  %82 = mul i32 %81, %78, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %82, metadata !9877, metadata !DIExpression()), !dbg !9878
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9953
  %84 = lshr i32 %83, 28, !dbg !9954
  %85 = and i32 %84, 7, !dbg !9954
  %86 = udiv i32 %82, %85, !dbg !9955
  call void @llvm.dbg.value(metadata i32 %86, metadata !9873, metadata !DIExpression()), !dbg !9878
  br label %123, !dbg !9956

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9957
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9873, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9873, metadata !DIExpression()), !dbg !9878
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9960
  call void @llvm.dbg.value(metadata i32 %91, metadata !9876, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !9878
  %92 = lshr i32 %91, 27, !dbg !9962
  %93 = and i32 %92, 3, !dbg !9962
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !9962

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9963
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9967
  %97 = and i32 %96, 63, !dbg !9967
  %98 = udiv i32 16000000, %97, !dbg !9967
  call void @llvm.dbg.value(metadata i32 %98, metadata !9874, metadata !DIExpression()), !dbg !9878
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9968
  %100 = lshr i32 %99, 6, !dbg !9969
  %101 = and i32 %100, 511, !dbg !9969
  %102 = mul i32 %101, %98, !dbg !9970
  call void @llvm.dbg.value(metadata i32 %102, metadata !9877, metadata !DIExpression()), !dbg !9878
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9971
  %104 = lshr i32 %103, 28, !dbg !9972
  %105 = and i32 %104, 7, !dbg !9972
  %106 = udiv i32 %102, %105, !dbg !9973
  call void @llvm.dbg.value(metadata i32 %106, metadata !9873, metadata !DIExpression()), !dbg !9878
  br label %123, !dbg !9974

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9975
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 undef, metadata !9874, metadata !DIExpression()), !dbg !9878
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9978
  %110 = and i32 %109, 63, !dbg !9978
  %111 = udiv i32 16000000, %110, !dbg !9978
  call void @llvm.dbg.value(metadata i32 %111, metadata !9874, metadata !DIExpression()), !dbg !9878
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9979
  %113 = lshr i32 %112, 6, !dbg !9980
  %114 = and i32 %113, 511, !dbg !9980
  %115 = mul i32 %114, %111, !dbg !9981
  call void @llvm.dbg.value(metadata i32 %115, metadata !9877, metadata !DIExpression()), !dbg !9878
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9982
  %117 = lshr i32 %116, 28, !dbg !9983
  %118 = and i32 %117, 7, !dbg !9983
  %119 = udiv i32 %115, %118, !dbg !9984
  call void @llvm.dbg.value(metadata i32 %119, metadata !9873, metadata !DIExpression()), !dbg !9878
  br label %123, !dbg !9985

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9986
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9873, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9873, metadata !DIExpression()), !dbg !9878
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !9878
  call void @llvm.dbg.value(metadata i32 %124, metadata !9873, metadata !DIExpression()), !dbg !9878
  ret i32 %124, !dbg !9989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #13 !dbg !9990 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9994, metadata !DIExpression()), !dbg !9995
  %2 = icmp eq i8 %0, 1, !dbg !9996
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9998
  %4 = and i32 %3, -9, !dbg !9999
  %5 = select i1 %2, i32 8, i32 0, !dbg !9999
  %6 = or i32 %4, %5, !dbg !9999
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9998
  ret void, !dbg !10000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !10001 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !10006, metadata !DIExpression()), !dbg !10008
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !10009
  %2 = tail call i32 @HAL_GetTick() #26, !dbg !10010
  call void @llvm.dbg.value(metadata i32 %2, metadata !10007, metadata !DIExpression()), !dbg !10008
  br label %3, !dbg !10011

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10012
  %5 = and i32 %4, 134217728, !dbg !10012
  %6 = icmp eq i32 %5, 0, !dbg !10012
  br i1 %6, label %11, label %7, !dbg !10011

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #26, !dbg !10013
  %9 = sub i32 %8, %2, !dbg !10016
  %10 = icmp ugt i32 %9, 2, !dbg !10017
  br i1 %10, label %41, label %3, !dbg !10018, !llvm.loop !10019

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !10021
  %13 = load i32, i32* %12, align 4, !dbg !10021
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !10021
  %15 = load i32, i32* %14, align 4, !dbg !10021
  %16 = shl i32 %15, 6, !dbg !10021
  %17 = or i32 %16, %13, !dbg !10021
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !10021
  %19 = load i32, i32* %18, align 4, !dbg !10021
  %20 = shl i32 %19, 15, !dbg !10021
  %21 = add i32 %20, -65536, !dbg !10021
  %22 = and i32 %21, -65536, !dbg !10021
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !10021
  %24 = load i32, i32* %23, align 4, !dbg !10021
  %25 = shl i32 %24, 24, !dbg !10021
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !10021
  %27 = load i32, i32* %26, align 4, !dbg !10021
  %28 = shl i32 %27, 28, !dbg !10021
  %29 = or i32 %17, %25, !dbg !10021
  %30 = or i32 %29, %22, !dbg !10021
  %31 = or i32 %30, %28, !dbg !10021
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10021
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !10022
  %32 = tail call i32 @HAL_GetTick() #26, !dbg !10023
  call void @llvm.dbg.value(metadata i32 %32, metadata !10007, metadata !DIExpression()), !dbg !10008
  br label %33, !dbg !10024

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10025
  %35 = and i32 %34, 134217728, !dbg !10026
  %36 = icmp eq i32 %35, 0, !dbg !10026
  br i1 %36, label %37, label %41, !dbg !10024

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #26, !dbg !10027
  %39 = sub i32 %38, %32, !dbg !10030
  %40 = icmp ugt i32 %39, 2, !dbg !10031
  br i1 %40, label %41, label %33, !dbg !10032, !llvm.loop !10033

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !10008
  ret i32 %42, !dbg !10035
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !10036 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !10041
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !10042
  call void @llvm.dbg.value(metadata i32 %1, metadata !10040, metadata !DIExpression()), !dbg !10043
  br label %2, !dbg !10044

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10045
  %4 = and i32 %3, 134217728, !dbg !10045
  %5 = icmp eq i32 %4, 0, !dbg !10046
  br i1 %5, label %10, label %6, !dbg !10044

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #26, !dbg !10047
  %8 = sub i32 %7, %1, !dbg !10050
  %9 = icmp ugt i32 %8, 2, !dbg !10051
  br i1 %9, label %10, label %2, !dbg !10052, !llvm.loop !10053

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !10043
  ret i32 %11, !dbg !10055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !10056 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !10061, metadata !DIExpression()), !dbg !10063
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !10064
  %2 = tail call i32 @HAL_GetTick() #26, !dbg !10065
  call void @llvm.dbg.value(metadata i32 %2, metadata !10062, metadata !DIExpression()), !dbg !10063
  br label %3, !dbg !10066

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10067
  %5 = and i32 %4, 536870912, !dbg !10067
  %6 = icmp eq i32 %5, 0, !dbg !10067
  br i1 %6, label %11, label %7, !dbg !10066

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #26, !dbg !10068
  %9 = sub i32 %8, %2, !dbg !10071
  %10 = icmp ugt i32 %9, 2, !dbg !10072
  br i1 %10, label %37, label %3, !dbg !10073, !llvm.loop !10074

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !10076
  %13 = load i32, i32* %12, align 4, !dbg !10076
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !10076
  %15 = load i32, i32* %14, align 4, !dbg !10076
  %16 = shl i32 %15, 6, !dbg !10076
  %17 = or i32 %16, %13, !dbg !10076
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !10076
  %19 = load i32, i32* %18, align 4, !dbg !10076
  %20 = shl i32 %19, 15, !dbg !10076
  %21 = add i32 %20, -65536, !dbg !10076
  %22 = and i32 %21, -65536, !dbg !10076
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !10076
  %24 = load i32, i32* %23, align 4, !dbg !10076
  %25 = shl i32 %24, 24, !dbg !10076
  %26 = or i32 %17, %25, !dbg !10076
  %27 = or i32 %26, %22, !dbg !10076
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10076
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !10077
  %28 = tail call i32 @HAL_GetTick() #26, !dbg !10078
  call void @llvm.dbg.value(metadata i32 %28, metadata !10062, metadata !DIExpression()), !dbg !10063
  br label %29, !dbg !10079

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10080
  %31 = and i32 %30, 536870912, !dbg !10081
  %32 = icmp eq i32 %31, 0, !dbg !10081
  br i1 %32, label %33, label %37, !dbg !10079

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #26, !dbg !10082
  %35 = sub i32 %34, %28, !dbg !10085
  %36 = icmp ugt i32 %35, 2, !dbg !10086
  br i1 %36, label %37, label %29, !dbg !10087, !llvm.loop !10088

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !10063
  ret i32 %38, !dbg !10090
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !10091 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !10094
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !10095
  call void @llvm.dbg.value(metadata i32 %1, metadata !10093, metadata !DIExpression()), !dbg !10096
  br label %2, !dbg !10097

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10098
  %4 = and i32 %3, 536870912, !dbg !10098
  %5 = icmp eq i32 %4, 0, !dbg !10098
  br i1 %5, label %10, label %6, !dbg !10097

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #26, !dbg !10099
  %8 = sub i32 %7, %1, !dbg !10102
  %9 = icmp ugt i32 %8, 2, !dbg !10103
  br i1 %9, label %10, label %2, !dbg !10104, !llvm.loop !10105

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !10096
  ret i32 %11, !dbg !10107
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #14 !dbg !10108 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10110, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i32 0, metadata !10111, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i32 0, metadata !10112, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i32 0, metadata !10113, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i32 0, metadata !10114, metadata !DIExpression()), !dbg !10115
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10116
  %2 = lshr i32 %1, 2, !dbg !10117
  %3 = and i32 %2, 3, !dbg !10117
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !10117

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10118
  %6 = and i32 %5, 63, !dbg !10121
  call void @llvm.dbg.value(metadata i32 %6, metadata !10110, metadata !DIExpression()), !dbg !10115
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10122
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10124
  %9 = lshr i32 %8, 6, !dbg !10124
  %10 = and i32 %9, 511, !dbg !10124
  %11 = zext i32 %10 to i64, !dbg !10124
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !10124
  %13 = zext i32 %6 to i64, !dbg !10124
  %14 = udiv i64 %12, %13, !dbg !10124
  %15 = trunc i64 %14 to i32, !dbg !10124
  call void @llvm.dbg.value(metadata i32 %15, metadata !10111, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i32 %15, metadata !10111, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i32 %15, metadata !10111, metadata !DIExpression()), !dbg !10115
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10125
  %17 = lshr i32 %16, 15, !dbg !10126
  %18 = and i32 %17, 6, !dbg !10126
  %19 = add nuw nsw i32 %18, 2, !dbg !10126
  call void @llvm.dbg.value(metadata i32 %19, metadata !10112, metadata !DIExpression()), !dbg !10115
  %20 = udiv i32 %15, %19, !dbg !10127
  call void @llvm.dbg.value(metadata i32 %20, metadata !10114, metadata !DIExpression()), !dbg !10115
  br label %38, !dbg !10128

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10129
  %23 = and i32 %22, 63, !dbg !10131
  call void @llvm.dbg.value(metadata i32 %23, metadata !10110, metadata !DIExpression()), !dbg !10115
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10132
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10134
  %26 = lshr i32 %25, 6, !dbg !10134
  %27 = and i32 %26, 511, !dbg !10134
  %28 = zext i32 %27 to i64, !dbg !10134
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !10134
  %30 = zext i32 %23 to i64, !dbg !10134
  %31 = udiv i64 %29, %30, !dbg !10134
  %32 = trunc i64 %31 to i32, !dbg !10134
  call void @llvm.dbg.value(metadata i32 %32, metadata !10111, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i32 %32, metadata !10111, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i32 %32, metadata !10111, metadata !DIExpression()), !dbg !10115
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10135
  %34 = lshr i32 %33, 28, !dbg !10136
  %35 = and i32 %34, 7, !dbg !10136
  call void @llvm.dbg.value(metadata i32 %35, metadata !10113, metadata !DIExpression()), !dbg !10115
  %36 = udiv i32 %32, %35, !dbg !10137
  call void @llvm.dbg.value(metadata i32 %36, metadata !10114, metadata !DIExpression()), !dbg !10115
  br label %38, !dbg !10138

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !10139
  call void @llvm.dbg.value(metadata i32 %39, metadata !10114, metadata !DIExpression()), !dbg !10115
  ret i32 %39, !dbg !10140
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10141 {
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !10144
  call void @llvm.dbg.value(metadata i32 %1, metadata !10143, metadata !DIExpression()), !dbg !10145
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10146
  %3 = or i32 %2, 1, !dbg !10146
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10146
  br label %4, !dbg !10147

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10148
  %6 = and i32 %5, 2, !dbg !10148
  %7 = icmp eq i32 %6, 0, !dbg !10149
  br i1 %7, label %8, label %12, !dbg !10147

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #26, !dbg !10150
  %10 = sub i32 %9, %1, !dbg !10153
  %11 = icmp ugt i32 %10, 2, !dbg !10154
  br i1 %11, label %89, label %4, !dbg !10155, !llvm.loop !10156

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10158
  %14 = or i32 %13, 128, !dbg !10158
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10158
  %15 = tail call i32 @HAL_GetTick() #26, !dbg !10159
  call void @llvm.dbg.value(metadata i32 %15, metadata !10143, metadata !DIExpression()), !dbg !10145
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10160
  br label %16, !dbg !10161

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10162
  %18 = and i32 %17, 12, !dbg !10162
  %19 = icmp eq i32 %18, 0, !dbg !10163
  %20 = tail call i32 @HAL_GetTick() #26, !dbg !10145
  br i1 %19, label %24, label %21, !dbg !10161

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !10164
  %23 = icmp ugt i32 %22, 5000, !dbg !10167
  br i1 %23, label %89, label %16, !dbg !10168, !llvm.loop !10169

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !10143, metadata !DIExpression()), !dbg !10145
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10171
  %26 = and i32 %25, -851969, !dbg !10171
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10171
  br label %27, !dbg !10172

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10173
  %29 = and i32 %28, 131072, !dbg !10173
  %30 = icmp eq i32 %29, 0, !dbg !10174
  %31 = tail call i32 @HAL_GetTick() #26, !dbg !10145
  br i1 %30, label %35, label %32, !dbg !10172

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !10175
  %34 = icmp ugt i32 %33, 100, !dbg !10178
  br i1 %34, label %89, label %27, !dbg !10179, !llvm.loop !10180

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !10143, metadata !DIExpression()), !dbg !10145
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10182
  %37 = and i32 %36, -16777217, !dbg !10182
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10182
  br label %38, !dbg !10183

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10184
  %40 = and i32 %39, 33554432, !dbg !10184
  %41 = icmp eq i32 %40, 0, !dbg !10185
  %42 = tail call i32 @HAL_GetTick() #26, !dbg !10145
  br i1 %41, label %46, label %43, !dbg !10183

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !10186
  %45 = icmp ugt i32 %44, 2, !dbg !10189
  br i1 %45, label %89, label %38, !dbg !10190, !llvm.loop !10191

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !10143, metadata !DIExpression()), !dbg !10145
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10193
  %48 = and i32 %47, -67108865, !dbg !10193
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10193
  br label %49, !dbg !10194

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10195
  %51 = and i32 %50, 134217728, !dbg !10195
  %52 = icmp eq i32 %51, 0, !dbg !10196
  %53 = tail call i32 @HAL_GetTick() #26, !dbg !10145
  br i1 %52, label %57, label %54, !dbg !10194

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !10197
  %56 = icmp ugt i32 %55, 2, !dbg !10200
  br i1 %56, label %89, label %49, !dbg !10201, !llvm.loop !10202

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !10143, metadata !DIExpression()), !dbg !10145
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10204
  %59 = and i32 %58, -268435457, !dbg !10204
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10204
  br label %60, !dbg !10205

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10206
  %62 = and i32 %61, 536870912, !dbg !10206
  %63 = icmp eq i32 %62, 0, !dbg !10207
  br i1 %63, label %68, label %64, !dbg !10205

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #26, !dbg !10208
  %66 = sub i32 %65, %53, !dbg !10211
  %67 = icmp ugt i32 %66, 2, !dbg !10212
  br i1 %67, label %89, label %60, !dbg !10213, !llvm.loop !10214

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10216
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10217
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10218
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10219
  %70 = and i32 %69, -7937, !dbg !10219
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10219
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10220
  %72 = and i32 %71, -8193, !dbg !10220
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10220
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10221
  %74 = and i32 %73, -16385, !dbg !10221
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10221
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10222
  %76 = or i32 %75, 10420224, !dbg !10222
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10222
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10223
  %78 = or i32 %77, 2097152, !dbg !10223
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10223
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10224
  %80 = or i32 %79, 4194304, !dbg !10224
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10224
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10225
  %82 = and i32 %81, -2, !dbg !10225
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10225
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10226
  %84 = or i32 %83, 16777216, !dbg !10226
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10226
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !10227
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !10228
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #26, !dbg !10230
  %87 = icmp ne i32 %86, 0, !dbg !10231
  %88 = zext i1 %87 to i32, !dbg !10232
  br label %89, !dbg !10232

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !10145
  ret i32 %90, !dbg !10233
}

; Function Attrs: optsize
declare !dbg !10234 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10237 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10263, metadata !DIExpression()), !dbg !10274
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10275
  br i1 %3, label %337, label %4, !dbg !10277

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10278
  %6 = load i32, i32* %5, align 4, !dbg !10278
  %7 = and i32 %6, 1, !dbg !10280
  %8 = icmp eq i32 %7, 0, !dbg !10281
  br i1 %8, label %74, label %9, !dbg !10282

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10283
  %11 = and i32 %10, 12, !dbg !10283
  %12 = icmp eq i32 %11, 4, !dbg !10286
  br i1 %12, label %29, label %13, !dbg !10287

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10288
  %15 = and i32 %14, 12, !dbg !10288
  %16 = icmp eq i32 %15, 8, !dbg !10289
  br i1 %16, label %17, label %21, !dbg !10290

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10291
  %19 = and i32 %18, 4194304, !dbg !10292
  %20 = icmp eq i32 %19, 0, !dbg !10293
  br i1 %20, label %21, label %29, !dbg !10294

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10295
  %23 = and i32 %22, 12, !dbg !10295
  %24 = icmp eq i32 %23, 12, !dbg !10296
  br i1 %24, label %25, label %37, !dbg !10297

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10298
  %27 = and i32 %26, 4194304, !dbg !10299
  %28 = icmp eq i32 %27, 0, !dbg !10300
  br i1 %28, label %37, label %29, !dbg !10301

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10302
  %31 = and i32 %30, 131072, !dbg !10302
  %32 = icmp eq i32 %31, 0, !dbg !10302
  br i1 %32, label %74, label %33, !dbg !10305

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10306
  %35 = load i32, i32* %34, align 4, !dbg !10306
  %36 = icmp eq i32 %35, 0, !dbg !10307
  br i1 %36, label %337, label %74, !dbg !10308

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10309
  %39 = load i32, i32* %38, align 4, !dbg !10309
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !10313

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10314
  %42 = or i32 %41, 65536, !dbg !10314
  br label %53, !dbg !10314

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10316
  %45 = or i32 %44, 262144, !dbg !10316
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10316
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10316
  %47 = or i32 %46, 65536, !dbg !10316
  br label %53, !dbg !10316

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10319
  %50 = and i32 %49, -65537, !dbg !10319
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10319
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10319
  %52 = and i32 %51, -262145, !dbg !10319
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10321
  %55 = load i32, i32* %38, align 4, !dbg !10322
  %56 = icmp eq i32 %55, 0, !dbg !10324
  %57 = tail call i32 @HAL_GetTick() #26, !dbg !10325
  call void @llvm.dbg.value(metadata i32 %57, metadata !10264, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i32 %57, metadata !10264, metadata !DIExpression()), !dbg !10274
  br i1 %56, label %66, label %58, !dbg !10326

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10327
  %60 = and i32 %59, 131072, !dbg !10329
  %61 = icmp eq i32 %60, 0, !dbg !10329
  br i1 %61, label %62, label %74, !dbg !10330

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !10331
  %64 = sub i32 %63, %57, !dbg !10334
  %65 = icmp ugt i32 %64, 100, !dbg !10335
  br i1 %65, label %337, label %58, !dbg !10336, !llvm.loop !10337

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10339
  %68 = and i32 %67, 131072, !dbg !10339
  %69 = icmp eq i32 %68, 0, !dbg !10339
  br i1 %69, label %74, label %70, !dbg !10341

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #26, !dbg !10342
  %72 = sub i32 %71, %57, !dbg !10345
  %73 = icmp ugt i32 %72, 100, !dbg !10346
  br i1 %73, label %337, label %66, !dbg !10347, !llvm.loop !10348

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !10350
  %76 = and i32 %75, 2, !dbg !10352
  %77 = icmp eq i32 %76, 0, !dbg !10353
  br i1 %77, label %137, label %78, !dbg !10354

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10355
  %80 = and i32 %79, 12, !dbg !10355
  %81 = icmp eq i32 %80, 0, !dbg !10358
  br i1 %81, label %98, label %82, !dbg !10359

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10360
  %84 = and i32 %83, 12, !dbg !10360
  %85 = icmp eq i32 %84, 8, !dbg !10361
  br i1 %85, label %86, label %90, !dbg !10362

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10363
  %88 = and i32 %87, 4194304, !dbg !10364
  %89 = icmp eq i32 %88, 0, !dbg !10365
  br i1 %89, label %98, label %90, !dbg !10366

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10367
  %92 = and i32 %91, 12, !dbg !10367
  %93 = icmp eq i32 %92, 12, !dbg !10368
  br i1 %93, label %94, label %106, !dbg !10369

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10370
  %96 = and i32 %95, 4194304, !dbg !10371
  %97 = icmp eq i32 %96, 0, !dbg !10372
  br i1 %97, label %98, label %106, !dbg !10373

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10374
  %100 = and i32 %99, 2, !dbg !10374
  %101 = icmp eq i32 %100, 0, !dbg !10374
  br i1 %101, label %130, label %102, !dbg !10377

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10378
  %104 = load i32, i32* %103, align 4, !dbg !10378
  %105 = icmp eq i32 %104, 1, !dbg !10379
  br i1 %105, label %130, label %337, !dbg !10380

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10381
  %108 = load i32, i32* %107, align 4, !dbg !10381
  %109 = icmp eq i32 %108, 0, !dbg !10384
  br i1 %109, label %120, label %110, !dbg !10385

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10386
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !10388
  call void @llvm.dbg.value(metadata i32 %111, metadata !10264, metadata !DIExpression()), !dbg !10274
  br label %112, !dbg !10389

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10390
  %114 = and i32 %113, 2, !dbg !10391
  %115 = icmp eq i32 %114, 0, !dbg !10391
  br i1 %115, label %116, label %130, !dbg !10389

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #26, !dbg !10392
  %118 = sub i32 %117, %111, !dbg !10395
  %119 = icmp ugt i32 %118, 2, !dbg !10396
  br i1 %119, label %337, label %112, !dbg !10397, !llvm.loop !10398

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10400
  %121 = tail call i32 @HAL_GetTick() #26, !dbg !10402
  call void @llvm.dbg.value(metadata i32 %121, metadata !10264, metadata !DIExpression()), !dbg !10274
  br label %122, !dbg !10403

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10404
  %124 = and i32 %123, 2, !dbg !10404
  %125 = icmp eq i32 %124, 0, !dbg !10404
  br i1 %125, label %137, label %126, !dbg !10403

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #26, !dbg !10405
  %128 = sub i32 %127, %121, !dbg !10408
  %129 = icmp ugt i32 %128, 2, !dbg !10409
  br i1 %129, label %337, label %122, !dbg !10410, !llvm.loop !10411

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10413
  %132 = and i32 %131, -249, !dbg !10413
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10413
  %134 = load i32, i32* %133, align 4, !dbg !10413
  %135 = shl i32 %134, 3, !dbg !10413
  %136 = or i32 %135, %132, !dbg !10413
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10413
  br label %137, !dbg !10414

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !10414
  %139 = and i32 %138, 8, !dbg !10416
  %140 = icmp eq i32 %139, 0, !dbg !10417
  br i1 %140, label %165, label %141, !dbg !10418

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10419
  %143 = load i32, i32* %142, align 4, !dbg !10419
  %144 = icmp eq i32 %143, 0, !dbg !10422
  br i1 %144, label %155, label %145, !dbg !10423

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10424
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !10426
  call void @llvm.dbg.value(metadata i32 %146, metadata !10264, metadata !DIExpression()), !dbg !10274
  br label %147, !dbg !10427

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10428
  %149 = and i32 %148, 2, !dbg !10429
  %150 = icmp eq i32 %149, 0, !dbg !10429
  br i1 %150, label %151, label %165, !dbg !10427

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #26, !dbg !10430
  %153 = sub i32 %152, %146, !dbg !10433
  %154 = icmp ugt i32 %153, 2, !dbg !10434
  br i1 %154, label %337, label %147, !dbg !10435, !llvm.loop !10436

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10438
  %156 = tail call i32 @HAL_GetTick() #26, !dbg !10440
  call void @llvm.dbg.value(metadata i32 %156, metadata !10264, metadata !DIExpression()), !dbg !10274
  br label %157, !dbg !10441

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10442
  %159 = and i32 %158, 2, !dbg !10442
  %160 = icmp eq i32 %159, 0, !dbg !10442
  br i1 %160, label %165, label %161, !dbg !10441

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #26, !dbg !10443
  %163 = sub i32 %162, %156, !dbg !10446
  %164 = icmp ugt i32 %163, 2, !dbg !10447
  br i1 %164, label %337, label %157, !dbg !10448, !llvm.loop !10449

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !10451
  %167 = and i32 %166, 4, !dbg !10452
  %168 = icmp eq i32 %167, 0, !dbg !10453
  br i1 %168, label %237, label %169, !dbg !10454

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !10266, metadata !DIExpression()), !dbg !10455
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10456
  %171 = and i32 %170, 268435456, !dbg !10456
  %172 = icmp eq i32 %171, 0, !dbg !10456
  br i1 %172, label %173, label %180, !dbg !10457

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !10458
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !10458
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10270, metadata !DIExpression()), !dbg !10458
  store volatile i32 0, i32* %2, align 4, !dbg !10458
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10458
  %176 = or i32 %175, 268435456, !dbg !10458
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10458
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10458
  %178 = and i32 %177, 268435456, !dbg !10458
  store volatile i32 %178, i32* %2, align 4, !dbg !10458
  %179 = load volatile i32, i32* %2, align 4, !dbg !10458
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !10459
  call void @llvm.dbg.value(metadata i32 1, metadata !10266, metadata !DIExpression()), !dbg !10455
  br label %180, !dbg !10460

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !10266, metadata !DIExpression()), !dbg !10455
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10461
  %182 = and i32 %181, 256, !dbg !10461
  %183 = icmp eq i32 %182, 0, !dbg !10461
  br i1 %183, label %184, label %196, !dbg !10463

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10464
  %186 = or i32 %185, 256, !dbg !10464
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10464
  %187 = tail call i32 @HAL_GetTick() #26, !dbg !10466
  call void @llvm.dbg.value(metadata i32 %187, metadata !10264, metadata !DIExpression()), !dbg !10274
  br label %188, !dbg !10467

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10468
  %190 = and i32 %189, 256, !dbg !10468
  %191 = icmp eq i32 %190, 0, !dbg !10468
  br i1 %191, label %192, label %196, !dbg !10467

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #26, !dbg !10469
  %194 = sub i32 %193, %187, !dbg !10472
  %195 = icmp ugt i32 %194, 2, !dbg !10473
  br i1 %195, label %337, label %188, !dbg !10474, !llvm.loop !10475

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10477
  %198 = load i32, i32* %197, align 4, !dbg !10477
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !10480

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10481
  %201 = or i32 %200, 1, !dbg !10481
  br label %212, !dbg !10481

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10483
  %204 = or i32 %203, 4, !dbg !10483
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10483
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10483
  %206 = or i32 %205, 1, !dbg !10483
  br label %212, !dbg !10483

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10486
  %209 = and i32 %208, -2, !dbg !10486
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10486
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10486
  %211 = and i32 %210, -5, !dbg !10486
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10488
  %214 = load i32, i32* %197, align 4, !dbg !10489
  %215 = icmp eq i32 %214, 0, !dbg !10491
  %216 = tail call i32 @HAL_GetTick() #26, !dbg !10492
  call void @llvm.dbg.value(metadata i32 %216, metadata !10264, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i32 %216, metadata !10264, metadata !DIExpression()), !dbg !10274
  br i1 %215, label %225, label %217, !dbg !10493

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10494
  %219 = and i32 %218, 2, !dbg !10496
  %220 = icmp eq i32 %219, 0, !dbg !10496
  br i1 %220, label %221, label %233, !dbg !10497

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #26, !dbg !10498
  %223 = sub i32 %222, %216, !dbg !10501
  %224 = icmp ugt i32 %223, 5000, !dbg !10502
  br i1 %224, label %337, label %217, !dbg !10503, !llvm.loop !10504

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10506
  %227 = and i32 %226, 2, !dbg !10506
  %228 = icmp eq i32 %227, 0, !dbg !10506
  br i1 %228, label %233, label %229, !dbg !10508

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #26, !dbg !10509
  %231 = sub i32 %230, %216, !dbg !10512
  %232 = icmp ugt i32 %231, 5000, !dbg !10513
  br i1 %232, label %337, label %225, !dbg !10514, !llvm.loop !10515

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !10517

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10518
  %236 = and i32 %235, -268435457, !dbg !10518
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10518
  br label %237, !dbg !10521

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10522
  %239 = load i32, i32* %238, align 4, !dbg !10522
  %240 = icmp eq i32 %239, 0, !dbg !10524
  br i1 %240, label %336, label %241, !dbg !10525

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10526
  %243 = and i32 %242, 12, !dbg !10526
  %244 = icmp eq i32 %243, 8, !dbg !10529
  br i1 %244, label %297, label %245, !dbg !10530

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !10531
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10534
  %247 = tail call i32 @HAL_GetTick() #26, !dbg !10534
  call void @llvm.dbg.value(metadata i32 %247, metadata !10264, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i32 %247, metadata !10264, metadata !DIExpression()), !dbg !10274
  br i1 %246, label %248, label %289, !dbg !10535

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10536
  %250 = and i32 %249, 33554432, !dbg !10536
  %251 = icmp eq i32 %250, 0, !dbg !10536
  br i1 %251, label %256, label %252, !dbg !10538

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #26, !dbg !10539
  %254 = sub i32 %253, %247, !dbg !10542
  %255 = icmp ugt i32 %254, 2, !dbg !10543
  br i1 %255, label %337, label %248, !dbg !10544, !llvm.loop !10545

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10547
  %258 = load i32, i32* %257, align 4, !dbg !10547
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10547
  %260 = load i32, i32* %259, align 4, !dbg !10547
  %261 = or i32 %260, %258, !dbg !10547
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10547
  %263 = load i32, i32* %262, align 4, !dbg !10547
  %264 = shl i32 %263, 6, !dbg !10547
  %265 = or i32 %261, %264, !dbg !10547
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10547
  %267 = load i32, i32* %266, align 4, !dbg !10547
  %268 = shl i32 %267, 15, !dbg !10547
  %269 = add i32 %268, -65536, !dbg !10547
  %270 = and i32 %269, -65536, !dbg !10547
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10547
  %272 = load i32, i32* %271, align 4, !dbg !10547
  %273 = shl i32 %272, 24, !dbg !10547
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10547
  %275 = load i32, i32* %274, align 4, !dbg !10547
  %276 = shl i32 %275, 28, !dbg !10547
  %277 = or i32 %265, %273, !dbg !10547
  %278 = or i32 %277, %270, !dbg !10547
  %279 = or i32 %278, %276, !dbg !10547
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10547
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10548
  %280 = tail call i32 @HAL_GetTick() #26, !dbg !10549
  call void @llvm.dbg.value(metadata i32 %280, metadata !10264, metadata !DIExpression()), !dbg !10274
  br label %281, !dbg !10550

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10551
  %283 = and i32 %282, 33554432, !dbg !10552
  %284 = icmp eq i32 %283, 0, !dbg !10552
  br i1 %284, label %285, label %336, !dbg !10550

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #26, !dbg !10553
  %287 = sub i32 %286, %280, !dbg !10556
  %288 = icmp ugt i32 %287, 2, !dbg !10557
  br i1 %288, label %337, label %281, !dbg !10558, !llvm.loop !10559

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10561
  %291 = and i32 %290, 33554432, !dbg !10561
  %292 = icmp eq i32 %291, 0, !dbg !10561
  br i1 %292, label %336, label %293, !dbg !10563

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #26, !dbg !10564
  %295 = sub i32 %294, %247, !dbg !10567
  %296 = icmp ugt i32 %295, 2, !dbg !10568
  br i1 %296, label %337, label %289, !dbg !10569, !llvm.loop !10570

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !10572
  br i1 %298, label %337, label %299, !dbg !10575

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10576
  call void @llvm.dbg.value(metadata i32 %300, metadata !10265, metadata !DIExpression()), !dbg !10274
  %301 = and i32 %300, 4194304, !dbg !10578
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10580
  %303 = load i32, i32* %302, align 4, !dbg !10580
  %304 = icmp eq i32 %301, %303, !dbg !10581
  br i1 %304, label %305, label %337, !dbg !10582

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !10583
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10584
  %308 = load i32, i32* %307, align 4, !dbg !10584
  %309 = icmp eq i32 %306, %308, !dbg !10585
  br i1 %309, label %310, label %337, !dbg !10586

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !10587
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10588
  %313 = load i32, i32* %312, align 4, !dbg !10588
  %314 = shl i32 %313, 6, !dbg !10589
  %315 = icmp eq i32 %311, %314, !dbg !10590
  br i1 %315, label %316, label %337, !dbg !10591

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !10592
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10593
  %319 = load i32, i32* %318, align 4, !dbg !10593
  %320 = shl i32 %319, 15, !dbg !10594
  %321 = add i32 %320, -65536, !dbg !10594
  %322 = and i32 %321, -65536, !dbg !10594
  %323 = icmp eq i32 %317, %322, !dbg !10595
  br i1 %323, label %324, label %337, !dbg !10596

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !10597
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10598
  %327 = load i32, i32* %326, align 4, !dbg !10598
  %328 = shl i32 %327, 24, !dbg !10599
  %329 = icmp eq i32 %325, %328, !dbg !10600
  br i1 %329, label %330, label %337, !dbg !10601

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !10602
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10603
  %333 = load i32, i32* %332, align 4, !dbg !10603
  %334 = shl i32 %333, 28, !dbg !10604
  %335 = icmp eq i32 %331, %334, !dbg !10605
  br i1 %335, label %336, label %337, !dbg !10606

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !10607

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !10274
  ret i32 %338, !dbg !10608
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !10609 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10613, metadata !DIExpression()), !dbg !10614
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10615
  store i32 15, i32* %2, align 4, !dbg !10616
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10617
  %4 = and i32 %3, 262144, !dbg !10619
  %5 = icmp eq i32 %4, 0, !dbg !10620
  br i1 %5, label %8, label %6, !dbg !10621

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10622
  store i32 327680, i32* %7, align 4, !dbg !10624
  br label %15, !dbg !10625

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10626
  %10 = and i32 %9, 65536, !dbg !10628
  %11 = icmp eq i32 %10, 0, !dbg !10629
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10630
  br i1 %11, label %14, label %13, !dbg !10631

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !10632
  br label %15, !dbg !10634

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !10635
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10637
  %17 = and i32 %16, 1, !dbg !10639
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10640
  store i32 %17, i32* %18, align 4, !dbg !10642
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10643
  %20 = lshr i32 %19, 3, !dbg !10644
  %21 = and i32 %20, 31, !dbg !10644
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10645
  store i32 %21, i32* %22, align 4, !dbg !10646
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10647
  %24 = and i32 %23, 4, !dbg !10649
  %25 = icmp eq i32 %24, 0, !dbg !10650
  br i1 %25, label %28, label %26, !dbg !10651

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10652
  store i32 5, i32* %27, align 4, !dbg !10654
  br label %35, !dbg !10655

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10656
  %30 = and i32 %29, 1, !dbg !10658
  %31 = icmp eq i32 %30, 0, !dbg !10659
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10660
  br i1 %31, label %34, label %33, !dbg !10661

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !10662
  br label %35, !dbg !10664

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !10665
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10667
  %37 = and i32 %36, 1, !dbg !10669
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10670
  store i32 %37, i32* %38, align 4, !dbg !10672
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10673
  %40 = and i32 %39, 16777216, !dbg !10675
  %41 = icmp eq i32 %40, 0, !dbg !10676
  %42 = select i1 %41, i32 1, i32 2, !dbg !10677
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10678
  store i32 %42, i32* %43, align 4, !dbg !10680
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10681
  %45 = and i32 %44, 4194304, !dbg !10682
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10683
  store i32 %45, i32* %46, align 4, !dbg !10684
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10685
  %48 = and i32 %47, 63, !dbg !10686
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10687
  store i32 %48, i32* %49, align 4, !dbg !10688
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10689
  %51 = lshr i32 %50, 6, !dbg !10690
  %52 = and i32 %51, 511, !dbg !10690
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10691
  store i32 %52, i32* %53, align 4, !dbg !10692
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10693
  %55 = shl i32 %54, 1, !dbg !10694
  %56 = and i32 %55, 393216, !dbg !10694
  %57 = add nuw nsw i32 %56, 131072, !dbg !10694
  %58 = lshr exact i32 %57, 16, !dbg !10695
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10696
  store i32 %58, i32* %59, align 4, !dbg !10697
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10698
  %61 = lshr i32 %60, 24, !dbg !10699
  %62 = and i32 %61, 15, !dbg !10699
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10700
  store i32 %62, i32* %63, align 4, !dbg !10701
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10702
  %65 = lshr i32 %64, 28, !dbg !10703
  %66 = and i32 %65, 7, !dbg !10703
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10704
  store i32 %66, i32* %67, align 4, !dbg !10705
  ret void, !dbg !10706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !10707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10710, metadata !DIExpression()), !dbg !10711
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !10712
  ret void, !dbg !10713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !10714 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10717, metadata !DIExpression()), !dbg !10719
  call void @llvm.dbg.value(metadata i32 1000, metadata !10718, metadata !DIExpression()), !dbg !10719
  %2 = udiv i32 %0, 1000, !dbg !10720
  %3 = add nsw i32 %2, -1, !dbg !10721
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10722
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10723
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10724
  ret void, !dbg !10725
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !10726 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10728, metadata !DIExpression()), !dbg !10730
  %3 = bitcast i32* %2 to i8*, !dbg !10731
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10731
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10729, metadata !DIExpression()), !dbg !10732
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10733
  store volatile i32 %4, i32* %2, align 4, !dbg !10732
  %5 = load volatile i32, i32* %2, align 4, !dbg !10734
  %6 = icmp eq i32 %0, -1, !dbg !10735
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10728, metadata !DIExpression()), !dbg !10730
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !10730
  call void @llvm.dbg.value(metadata i32 %8, metadata !10728, metadata !DIExpression()), !dbg !10730
  br label %9, !dbg !10737

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10728, metadata !DIExpression()), !dbg !10730
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10738
  call void @llvm.dbg.value(metadata i32 undef, metadata !10728, metadata !DIExpression()), !dbg !10730
  %12 = shl i32 %11, 15, !dbg !10730
  %13 = ashr i32 %12, 31, !dbg !10730
  %14 = add i32 %13, %10, !dbg !10730
  call void @llvm.dbg.value(metadata i32 %14, metadata !10728, metadata !DIExpression()), !dbg !10730
  %15 = icmp eq i32 %14, 0, !dbg !10737
  br i1 %15, label %16, label %9, !dbg !10737

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10741
  ret void, !dbg !10741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #5 !dbg !10742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10744, metadata !DIExpression()), !dbg !10745
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !10746
  ret void, !dbg !10747
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !10748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10753, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i32 0, metadata !10756, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i32 0, metadata !10757, metadata !DIExpression()), !dbg !10758
  %2 = icmp eq i32 %0, 0, !dbg !10759
  br i1 %2, label %72, label %3, !dbg !10761

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10762
  %5 = icmp eq i32 %4, 49152, !dbg !10765
  br i1 %5, label %6, label %21, !dbg !10766

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !10767
  %8 = select i1 %7, i32 0, i32 5, !dbg !10770
  call void @llvm.dbg.value(metadata i32 %8, metadata !10756, metadata !DIExpression()), !dbg !10758
  %9 = add i32 %0, -120000001, !dbg !10771
  %10 = icmp ult i32 %9, 30000000, !dbg !10771
  %11 = select i1 %10, i32 4, i32 %8, !dbg !10771
  call void @llvm.dbg.value(metadata i32 %11, metadata !10756, metadata !DIExpression()), !dbg !10758
  %12 = icmp ult i32 %9, -30000000, !dbg !10773
  %13 = select i1 %12, i32 %11, i32 3, !dbg !10773
  call void @llvm.dbg.value(metadata i32 %13, metadata !10756, metadata !DIExpression()), !dbg !10758
  %14 = icmp ugt i32 %0, 60000000, !dbg !10775
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !10777
  br i1 %16, label %21, label %17, !dbg !10777

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !10778
  %19 = and i1 %18, %15, !dbg !10781
  %20 = select i1 %19, i32 1, i32 %13, !dbg !10781
  br label %21, !dbg !10781

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !10758
  call void @llvm.dbg.value(metadata i32 %22, metadata !10756, metadata !DIExpression()), !dbg !10758
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10782
  %24 = icmp eq i32 %23, 32768, !dbg !10784
  br i1 %24, label %25, label %45, !dbg !10785

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !10786
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !10789
  %29 = select i1 %28, i32 5, i32 %22, !dbg !10789
  call void @llvm.dbg.value(metadata i32 %29, metadata !10756, metadata !DIExpression()), !dbg !10758
  %30 = icmp ugt i32 %0, 12000000, !dbg !10790
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !10792
  %33 = select i1 %32, i32 4, i32 %29, !dbg !10792
  call void @llvm.dbg.value(metadata i32 %33, metadata !10756, metadata !DIExpression()), !dbg !10758
  %34 = icmp ugt i32 %0, 90000000, !dbg !10793
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !10795
  %37 = select i1 %36, i32 3, i32 %33, !dbg !10795
  call void @llvm.dbg.value(metadata i32 %37, metadata !10756, metadata !DIExpression()), !dbg !10758
  %38 = icmp ugt i32 %0, 60000000, !dbg !10796
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !10798
  br i1 %40, label %45, label %41, !dbg !10798

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !10799
  %43 = select i1 %42, i1 %39, i1 false, !dbg !10802
  %44 = select i1 %43, i32 1, i32 %37, !dbg !10802
  br label %45, !dbg !10802

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !10803
  call void @llvm.dbg.value(metadata i32 %46, metadata !10756, metadata !DIExpression()), !dbg !10758
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10804
  %48 = icmp eq i32 %47, 16384, !dbg !10806
  br i1 %48, label %49, label %61, !dbg !10807

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !10808
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !10811
  %53 = select i1 %52, i32 3, i32 %46, !dbg !10811
  call void @llvm.dbg.value(metadata i32 %53, metadata !10756, metadata !DIExpression()), !dbg !10758
  %54 = icmp ugt i32 %0, 60000000, !dbg !10812
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !10814
  br i1 %56, label %61, label %57, !dbg !10814

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !10815
  %59 = select i1 %58, i1 %55, i1 false, !dbg !10818
  %60 = select i1 %59, i32 1, i32 %53, !dbg !10818
  br label %61, !dbg !10818

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !10803
  call void @llvm.dbg.value(metadata i32 %62, metadata !10756, metadata !DIExpression()), !dbg !10758
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #24, !dbg !10819
  call void @llvm.dbg.value(metadata i32 2, metadata !10754, metadata !DIExpression()), !dbg !10758
  br label %63, !dbg !10820

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !10803
  call void @llvm.dbg.value(metadata i32 %64, metadata !10754, metadata !DIExpression()), !dbg !10758
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !10821
  call void @llvm.dbg.value(metadata i32 %65, metadata !10755, metadata !DIExpression()), !dbg !10758
  %66 = add nsw i32 %64, -1, !dbg !10823
  call void @llvm.dbg.value(metadata i32 %66, metadata !10754, metadata !DIExpression()), !dbg !10758
  %67 = icmp ne i32 %65, %62, !dbg !10824
  %68 = icmp ne i32 %66, 0, !dbg !10825
  %69 = select i1 %67, i1 %68, i1 false, !dbg !10825
  br i1 %69, label %63, label %70, !dbg !10826, !llvm.loop !10827

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !10829
  call void @llvm.dbg.value(metadata i32 %73, metadata !10757, metadata !DIExpression()), !dbg !10758
  ret i32 %73, !dbg !10830
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10831 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10833
  %2 = and i32 %1, 49152, !dbg !10833
  ret i32 %2, !dbg !10834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10837, metadata !DIExpression()), !dbg !10838
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10839
  %3 = and i32 %2, -16, !dbg !10839
  %4 = or i32 %3, %0, !dbg !10839
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10839
  ret void, !dbg !10840
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10841 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10842
  %2 = and i32 %1, 15, !dbg !10842
  ret i32 %2, !dbg !10843
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10844 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10862, metadata !DIExpression()), !dbg !10866
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10863, metadata !DIExpression()), !dbg !10866
  call void @llvm.dbg.value(metadata i32 0, metadata !10864, metadata !DIExpression()), !dbg !10866
  call void @llvm.dbg.value(metadata i32 0, metadata !10865, metadata !DIExpression()), !dbg !10866
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !10867
  %4 = icmp eq i32 %3, 0, !dbg !10869
  br i1 %4, label %5, label %21, !dbg !10870

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !10871
  call void @llvm.dbg.value(metadata i32 %6, metadata !10865, metadata !DIExpression()), !dbg !10866
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.78() #24, !dbg !10873
  %8 = icmp eq i32 %7, 1, !dbg !10875
  br i1 %8, label %13, label %9, !dbg !10876

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.79() #24, !dbg !10877
  br label %10, !dbg !10879

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.78() #24, !dbg !10880
  %12 = icmp eq i32 %11, 1, !dbg !10881
  br i1 %12, label %13, label %10, !dbg !10879, !llvm.loop !10882

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10884
  %15 = load i32, i32* %14, align 4, !dbg !10884
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10885
  %17 = load i32, i32* %16, align 4, !dbg !10885
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10886
  %19 = load i32, i32* %18, align 4, !dbg !10886
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !10887
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !10888
  call void @llvm.dbg.value(metadata i32 %20, metadata !10864, metadata !DIExpression()), !dbg !10866
  br label %21, !dbg !10889

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10890
  call void @llvm.dbg.value(metadata i32 %22, metadata !10864, metadata !DIExpression()), !dbg !10866
  ret i32 %22, !dbg !10891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10892 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10896, metadata !DIExpression()), !dbg !10897
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.82() #24, !dbg !10898
  %2 = icmp ne i32 %1, 0, !dbg !10900
  call void @llvm.dbg.value(metadata i1 %2, metadata !10896, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10897
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #24, !dbg !10901
  %4 = icmp ne i32 %3, 0, !dbg !10903
  call void @llvm.dbg.value(metadata i1 undef, metadata !10896, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10897
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !10904
  %6 = icmp ne i32 %5, 0, !dbg !10906
  %7 = select i1 %6, i1 true, i1 %4, !dbg !10907
  %8 = select i1 %7, i1 true, i1 %2, !dbg !10907
  %9 = zext i1 %8 to i32, !dbg !10907
  call void @llvm.dbg.value(metadata i32 %9, metadata !10896, metadata !DIExpression()), !dbg !10897
  ret i32 %9, !dbg !10908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #6 !dbg !10909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10913, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10914, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 0, metadata !10915, metadata !DIExpression()), !dbg !10916
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10917
  %4 = load i32, i32* %3, align 4, !dbg !10917
  %5 = and i32 %4, 63, !dbg !10918
  %6 = udiv i32 %0, %5, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %6, metadata !10915, metadata !DIExpression()), !dbg !10916
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10920
  %8 = load i32, i32* %7, align 4, !dbg !10920
  %9 = and i32 %8, 511, !dbg !10921
  %10 = mul i32 %9, %6, !dbg !10922
  call void @llvm.dbg.value(metadata i32 %10, metadata !10915, metadata !DIExpression()), !dbg !10916
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10923
  %12 = load i32, i32* %11, align 4, !dbg !10923
  %13 = lshr i32 %12, 15, !dbg !10924
  %14 = and i32 %13, 131070, !dbg !10924
  %15 = add nuw nsw i32 %14, 2, !dbg !10924
  %16 = udiv i32 %10, %15, !dbg !10925
  call void @llvm.dbg.value(metadata i32 %16, metadata !10915, metadata !DIExpression()), !dbg !10916
  ret i32 %16, !dbg !10926
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.78() unnamed_addr #14 !dbg !10927 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10928
  %2 = lshr i32 %1, 1, !dbg !10929
  %3 = and i32 %2, 1, !dbg !10929
  ret i32 %3, !dbg !10930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.79() unnamed_addr #13 !dbg !10931 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10932
  %2 = or i32 %1, 1, !dbg !10932
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10932
  ret void, !dbg !10933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10936, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.value(metadata i32 %1, metadata !10937, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.value(metadata i32 %2, metadata !10938, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.value(metadata i32 %3, metadata !10939, metadata !DIExpression()), !dbg !10940
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10941
  %6 = and i32 %5, -4227072, !dbg !10941
  %7 = or i32 %1, %0, !dbg !10941
  %8 = shl i32 %2, 6, !dbg !10941
  %9 = or i32 %7, %8, !dbg !10941
  %10 = or i32 %9, %6, !dbg !10941
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10941
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10942
  %12 = and i32 %11, -196609, !dbg !10942
  %13 = or i32 %12, %3, !dbg !10942
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10942
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10943
  %15 = and i32 %14, -1879048193, !dbg !10943
  %16 = or i32 %15, %3, !dbg !10943
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10943
  ret void, !dbg !10944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10949, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10950, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 0, metadata !10951, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 0, metadata !10952, metadata !DIExpression()), !dbg !10953
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10954
  %4 = load i32, i32* %3, align 4, !dbg !10954
  %5 = lshr i32 %4, 4, !dbg !10954
  %6 = and i32 %5, 15, !dbg !10954
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10954
  %8 = load i8, i8* %7, align 1, !dbg !10954
  %9 = zext i8 %8 to i32, !dbg !10954
  %10 = lshr i32 %0, %9, !dbg !10954
  call void @llvm.dbg.value(metadata i32 %10, metadata !10952, metadata !DIExpression()), !dbg !10953
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10955
  %12 = icmp ult i32 %11, %10, !dbg !10957
  br i1 %12, label %13, label %16, !dbg !10958

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !10959
  call void @llvm.dbg.value(metadata i32 %14, metadata !10951, metadata !DIExpression()), !dbg !10953
  %15 = icmp eq i32 %14, 0, !dbg !10961
  br i1 %15, label %16, label %30, !dbg !10963

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.81() #24, !dbg !10964
  br label %17, !dbg !10966

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.82() #24, !dbg !10967
  %19 = icmp eq i32 %18, 1, !dbg !10968
  br i1 %19, label %20, label %17, !dbg !10966, !llvm.loop !10969

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10971
  tail call fastcc void @LL_RCC_SetAHBPrescaler.83(i32 noundef %21) #24, !dbg !10972
  tail call fastcc void @LL_RCC_SetSysClkSource.84() #24, !dbg !10973
  br label %22, !dbg !10974

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.85() #24, !dbg !10975
  %24 = icmp eq i32 %23, 8, !dbg !10976
  br i1 %24, label %25, label %22, !dbg !10974, !llvm.loop !10977

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10979
  %27 = load i32, i32* %26, align 4, !dbg !10979
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.86(i32 noundef %27) #24, !dbg !10980
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10981
  %29 = load i32, i32* %28, align 4, !dbg !10981
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.87(i32 noundef %29) #24, !dbg !10982
  br label %30, !dbg !10983

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10984
  %33 = icmp ugt i32 %32, %10, !dbg !10986
  br i1 %33, label %34, label %36, !dbg !10987

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !10988
  call void @llvm.dbg.value(metadata i32 %35, metadata !10951, metadata !DIExpression()), !dbg !10953
  br label %36, !dbg !10990

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10953
  call void @llvm.dbg.value(metadata i32 %37, metadata !10951, metadata !DIExpression()), !dbg !10953
  %38 = icmp eq i32 %37, 0, !dbg !10991
  br i1 %38, label %39, label %40, !dbg !10993

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !10994
  br label %40, !dbg !10996

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10997
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.81() unnamed_addr #13 !dbg !10998 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10999
  %2 = or i32 %1, 16777216, !dbg !10999
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10999
  ret void, !dbg !11000
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.82() unnamed_addr #14 !dbg !11001 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11002
  %2 = lshr i32 %1, 25, !dbg !11003
  %3 = and i32 %2, 1, !dbg !11003
  ret i32 %3, !dbg !11004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.83(i32 noundef %0) unnamed_addr #13 !dbg !11005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11007, metadata !DIExpression()), !dbg !11008
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11009
  %3 = and i32 %2, -241, !dbg !11009
  %4 = or i32 %3, %0, !dbg !11009
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11009
  ret void, !dbg !11010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.84() unnamed_addr #13 !dbg !11011 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11013, metadata !DIExpression()), !dbg !11014
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11015
  %2 = and i32 %1, -4, !dbg !11015
  %3 = or i32 %2, 2, !dbg !11015
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11015
  ret void, !dbg !11016
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.85() unnamed_addr #14 !dbg !11017 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11018
  %2 = and i32 %1, 12, !dbg !11018
  ret i32 %2, !dbg !11019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.86(i32 noundef %0) unnamed_addr #13 !dbg !11020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11022, metadata !DIExpression()), !dbg !11023
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11024
  %3 = and i32 %2, -7169, !dbg !11024
  %4 = or i32 %3, %0, !dbg !11024
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11024
  ret void, !dbg !11025
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.87(i32 noundef %0) unnamed_addr #13 !dbg !11026 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11028, metadata !DIExpression()), !dbg !11029
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11030
  %3 = and i32 %2, -57345, !dbg !11030
  %4 = or i32 %3, %0, !dbg !11030
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11030
  ret void, !dbg !11031
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #14 !dbg !11032 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11033
  %2 = lshr i32 %1, 29, !dbg !11034
  %3 = and i32 %2, 1, !dbg !11034
  ret i32 %3, !dbg !11035
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !11036 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11037
  %2 = lshr i32 %1, 27, !dbg !11038
  %3 = and i32 %2, 1, !dbg !11038
  ret i32 %3, !dbg !11039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !11040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11044, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i32 %1, metadata !11045, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !11046, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11047, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i32 0, metadata !11048, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i32 0, metadata !11049, metadata !DIExpression()), !dbg !11050
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11051
  %6 = icmp eq i32 %5, 0, !dbg !11053
  br i1 %6, label %7, label %27, !dbg !11054

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !11055
  call void @llvm.dbg.value(metadata i32 %8, metadata !11049, metadata !DIExpression()), !dbg !11050
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.88() #24, !dbg !11057
  %10 = icmp eq i32 %9, 1, !dbg !11059
  br i1 %10, label %19, label %11, !dbg !11060

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11061
  br i1 %12, label %13, label %14, !dbg !11064

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !11065
  br label %15, !dbg !11067

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.89() #24, !dbg !11068
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.90() #24, !dbg !11070
  br label %16, !dbg !11071

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.88() #24, !dbg !11072
  %18 = icmp eq i32 %17, 1, !dbg !11073
  br i1 %18, label %19, label %16, !dbg !11071, !llvm.loop !11074

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !11076
  %21 = load i32, i32* %20, align 4, !dbg !11076
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !11077
  %23 = load i32, i32* %22, align 4, !dbg !11077
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !11078
  %25 = load i32, i32* %24, align 4, !dbg !11078
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !11079
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !11080
  call void @llvm.dbg.value(metadata i32 %26, metadata !11048, metadata !DIExpression()), !dbg !11050
  br label %27, !dbg !11081

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11082
  call void @llvm.dbg.value(metadata i32 %28, metadata !11048, metadata !DIExpression()), !dbg !11050
  ret i32 %28, !dbg !11083
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.88() unnamed_addr #14 !dbg !11084 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11085
  %2 = lshr i32 %1, 17, !dbg !11086
  %3 = and i32 %2, 1, !dbg !11086
  ret i32 %3, !dbg !11087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !11088 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11089
  %2 = or i32 %1, 262144, !dbg !11089
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11089
  ret void, !dbg !11090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.89() unnamed_addr #13 !dbg !11091 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11092
  %2 = and i32 %1, -262145, !dbg !11092
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11092
  ret void, !dbg !11093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.90() unnamed_addr #13 !dbg !11094 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11095
  %2 = or i32 %1, 65536, !dbg !11095
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11095
  ret void, !dbg !11096
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !11097 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11100, metadata !DIExpression()), !dbg !11116
  call void @llvm.dbg.value(metadata i32 undef, metadata !11100, metadata !DIExpression()), !dbg !11116
  call void @llvm.dbg.value(metadata i32 undef, metadata !11100, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11116
  ret void, !dbg !11117
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11118 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11122, metadata !DIExpression()), !dbg !11124
  %2 = icmp eq i8* %0, null, !dbg !11125
  br i1 %2, label %29, label %3, !dbg !11127

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11128
  %5 = icmp eq i8 %4, 0, !dbg !11129
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11130
  br i1 %6, label %29, label %8, !dbg !11130

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11123, metadata !DIExpression()), !dbg !11124
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11131

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11123, metadata !DIExpression()), !dbg !11124
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !11133
  br i1 %10, label %11, label %15, !dbg !11138

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11139
  %13 = load i8*, i8** %12, align 4, !dbg !11139
  %14 = icmp eq i8* %13, %0, !dbg !11140
  br i1 %14, label %29, label %15, !dbg !11141

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11142
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11123, metadata !DIExpression()), !dbg !11124
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11143
  br i1 %17, label %7, label %8, !dbg !11144, !llvm.loop !11145

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11123, metadata !DIExpression()), !dbg !11124
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !11147
  br i1 %20, label %21, label %26, !dbg !11151

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11152
  %23 = load i8*, i8** %22, align 4, !dbg !11152
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !11153
  %25 = icmp eq i32 %24, 0, !dbg !11154
  br i1 %25, label %29, label %26, !dbg !11155

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11156
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11123, metadata !DIExpression()), !dbg !11124
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11157
  br i1 %28, label %29, label %18, !dbg !11131, !llvm.loop !11158

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11124
  ret %struct.device* %30, !dbg !11160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #6 !dbg !11161 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11165, metadata !DIExpression()), !dbg !11166
  %2 = icmp eq %struct.device* %0, null, !dbg !11167
  br i1 %2, label %14, label %3, !dbg !11169

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11170
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11170
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11171
  %7 = load i8, i8* %6, align 1, !dbg !11171
  %8 = and i8 %7, 1, !dbg !11171
  %9 = icmp eq i8 %8, 0, !dbg !11171
  br i1 %9, label %14, label %10, !dbg !11172

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11173
  %12 = load i8, i8* %11, align 1, !dbg !11173
  %13 = icmp eq i8 %12, 0, !dbg !11174
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11166
  ret i1 %15, !dbg !11175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #5 !dbg !11176 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11181, metadata !DIExpression()), !dbg !11182
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11183
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11184
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11185 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11193, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11194, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata i8* %2, metadata !11195, metadata !DIExpression()), !dbg !11198
  %5 = bitcast i32* %4 to i8*, !dbg !11199
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11199
  call void @llvm.dbg.value(metadata i32 0, metadata !11196, metadata !DIExpression()), !dbg !11198
  store i32 0, i32* %4, align 4, !dbg !11200
  call void @llvm.dbg.value(metadata i32* %4, metadata !11196, metadata !DIExpression(DW_OP_deref)), !dbg !11198
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11201
  call void @llvm.dbg.value(metadata i16* %6, metadata !11197, metadata !DIExpression()), !dbg !11198
  %7 = load i32, i32* %4, align 4, !dbg !11202
  call void @llvm.dbg.value(metadata i32 %7, metadata !11196, metadata !DIExpression()), !dbg !11198
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11203
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11204
  ret i32 %8, !dbg !11205
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !11206 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11210, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i32* %1, metadata !11211, metadata !DIExpression()), !dbg !11216
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11217
  %4 = load i16*, i16** %3, align 4, !dbg !11217
  call void @llvm.dbg.value(metadata i16* %4, metadata !11212, metadata !DIExpression()), !dbg !11216
  %5 = icmp eq i16* %4, null, !dbg !11218
  br i1 %5, label %14, label %6, !dbg !11219

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11220
  call void @llvm.dbg.value(metadata i32 %7, metadata !11213, metadata !DIExpression()), !dbg !11220
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11221
  %9 = load i16, i16* %8, align 2, !dbg !11221
  %10 = add i16 %9, -32767, !dbg !11222
  %11 = icmp ult i16 %10, 2, !dbg !11222
  %12 = add i32 %7, 1, !dbg !11223
  call void @llvm.dbg.value(metadata i32 %12, metadata !11213, metadata !DIExpression()), !dbg !11220
  br i1 %11, label %13, label %6, !dbg !11222, !llvm.loop !11225

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11228
  br label %14, !dbg !11229

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11231 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11235, metadata !DIExpression()), !dbg !11246
  call void @llvm.dbg.value(metadata i32 %1, metadata !11236, metadata !DIExpression()), !dbg !11246
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11237, metadata !DIExpression()), !dbg !11246
  call void @llvm.dbg.value(metadata i8* %3, metadata !11238, metadata !DIExpression()), !dbg !11246
  call void @llvm.dbg.value(metadata i32 0, metadata !11239, metadata !DIExpression()), !dbg !11247
  %5 = icmp eq i32 %1, 0, !dbg !11248
  br i1 %5, label %16, label %8, !dbg !11249

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11239, metadata !DIExpression()), !dbg !11247
  %7 = icmp eq i32 %15, %1, !dbg !11248
  br i1 %7, label %16, label %8, !dbg !11249, !llvm.loop !11250

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11239, metadata !DIExpression()), !dbg !11247
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11252
  %11 = load i16, i16* %10, align 2, !dbg !11252
  call void @llvm.dbg.value(metadata i16 %11, metadata !11241, metadata !DIExpression()), !dbg !11253
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !11254
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11244, metadata !DIExpression()), !dbg !11253
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !11255
  call void @llvm.dbg.value(metadata i32 %13, metadata !11245, metadata !DIExpression()), !dbg !11253
  %14 = icmp slt i32 %13, 0, !dbg !11256
  %15 = add nuw i32 %9, 1, !dbg !11258
  call void @llvm.dbg.value(metadata i32 %15, metadata !11239, metadata !DIExpression()), !dbg !11247
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !11260 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11264, metadata !DIExpression()), !dbg !11267
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11265, metadata !DIExpression()), !dbg !11267
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11266, metadata !DIExpression()), !dbg !11267
  %2 = sext i16 %0 to i32, !dbg !11268
  %3 = icmp slt i16 %0, 1, !dbg !11270
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11271
  %6 = add nsw i32 %2, -1, !dbg !11271
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11271
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11271
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11265, metadata !DIExpression()), !dbg !11267
  ret %struct.device* %8, !dbg !11272
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11273 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11275, metadata !DIExpression()), !dbg !11280
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11276, metadata !DIExpression()), !dbg !11280
  call void @llvm.dbg.value(metadata i8* %2, metadata !11277, metadata !DIExpression()), !dbg !11280
  %5 = bitcast i32* %4 to i8*, !dbg !11281
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11281
  call void @llvm.dbg.value(metadata i32 0, metadata !11278, metadata !DIExpression()), !dbg !11280
  store i32 0, i32* %4, align 4, !dbg !11282
  call void @llvm.dbg.value(metadata i32* %4, metadata !11278, metadata !DIExpression(DW_OP_deref)), !dbg !11280
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11283
  call void @llvm.dbg.value(metadata i16* %6, metadata !11279, metadata !DIExpression()), !dbg !11280
  %7 = load i32, i32* %4, align 4, !dbg !11284
  call void @llvm.dbg.value(metadata i32 %7, metadata !11278, metadata !DIExpression()), !dbg !11280
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11285
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11286
  ret i32 %8, !dbg !11287
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !11288 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11290, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.value(metadata i32* %1, metadata !11291, metadata !DIExpression()), !dbg !11295
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11296
  %4 = load i16*, i16** %3, align 4, !dbg !11296
  call void @llvm.dbg.value(metadata i16* %4, metadata !11292, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.value(metadata i32 0, metadata !11293, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.value(metadata i32 0, metadata !11294, metadata !DIExpression()), !dbg !11295
  %5 = icmp eq i16* %4, null, !dbg !11297
  br i1 %5, label %22, label %6, !dbg !11299

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11293, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.value(metadata i16* %8, metadata !11292, metadata !DIExpression()), !dbg !11295
  %9 = load i16, i16* %8, align 2, !dbg !11300
  %10 = icmp eq i16 %9, -32768, !dbg !11304
  call void @llvm.dbg.value(metadata i32 undef, metadata !11293, metadata !DIExpression()), !dbg !11295
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11305
  call void @llvm.dbg.value(metadata i16* %11, metadata !11292, metadata !DIExpression()), !dbg !11295
  %12 = zext i1 %10 to i32, !dbg !11306
  %13 = add i32 %7, %12, !dbg !11306
  call void @llvm.dbg.value(metadata i32 %13, metadata !11293, metadata !DIExpression()), !dbg !11295
  %14 = icmp eq i32 %13, 2, !dbg !11307
  br i1 %14, label %15, label %6, !dbg !11308

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11295
  call void @llvm.dbg.value(metadata i32 %16, metadata !11294, metadata !DIExpression()), !dbg !11295
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11309
  %18 = load i16, i16* %17, align 2, !dbg !11309
  %19 = icmp eq i16 %18, 32767, !dbg !11310
  %20 = add i32 %16, 1, !dbg !11311
  call void @llvm.dbg.value(metadata i32 %20, metadata !11294, metadata !DIExpression()), !dbg !11295
  br i1 %19, label %21, label %15, !dbg !11313, !llvm.loop !11314

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11316
  br label %22, !dbg !11317

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11318
  call void @llvm.dbg.value(metadata i16* %23, metadata !11292, metadata !DIExpression()), !dbg !11295
  ret i16* %23, !dbg !11319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #6 !dbg !11320 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11323
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !11324
  ret i32* %2, !dbg !11325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !11326 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11476, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11477, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11478, metadata !DIExpression()), !dbg !11479
  ret void, !dbg !11480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11485, metadata !DIExpression()), !dbg !11487
  call void @llvm.dbg.value(metadata i32 %1, metadata !11486, metadata !DIExpression()), !dbg !11487
  ret void, !dbg !11488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11489 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11493, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i32 %1, metadata !11494, metadata !DIExpression()), !dbg !11495
  ret void, !dbg !11496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11501, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.value(metadata i8* %1, metadata !11502, metadata !DIExpression()), !dbg !11503
  ret i32 -134, !dbg !11504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11509, metadata !DIExpression()), !dbg !11511
  call void @llvm.dbg.value(metadata i8* %1, metadata !11510, metadata !DIExpression()), !dbg !11511
  ret i32 -134, !dbg !11512
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11516, metadata !DIExpression()), !dbg !11517
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11518, !srcloc !11524
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()) #23, !dbg !11525
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !11525
  br label %3, !dbg !11526

3:                                                ; preds = %3, %1
  br label %3, !dbg !11527, !llvm.loop !11530
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11537, metadata !DIExpression()), !dbg !11539
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11538, metadata !DIExpression()), !dbg !11539
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11540
  unreachable, !dbg !11540
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11543, metadata !DIExpression()), !dbg !11544
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11545
  unreachable, !dbg !11545
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11548, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11549, metadata !DIExpression()), !dbg !11552
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11553, !srcloc !11524
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()) #23, !dbg !11555
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !11555
  call void @llvm.dbg.value(metadata i32 undef, metadata !11550, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11551, metadata !DIExpression()), !dbg !11552
  %4 = icmp eq %struct.__esf* %1, null, !dbg !11556
  br i1 %4, label %6, label %5, !dbg !11558

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !11559
  br label %7, !dbg !11560

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !11559
  br label %7, !dbg !11563

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !11553
  call void @llvm.dbg.value(metadata i32 %8, metadata !11521, metadata !DIExpression()) #23, !dbg !11555
  call void @llvm.dbg.value(metadata i32 %8, metadata !11550, metadata !DIExpression()), !dbg !11552
  %9 = tail call fastcc %struct.k_thread* @k_current_get.97() #25, !dbg !11565
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11551, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.value(metadata i32 undef, metadata !11566, metadata !DIExpression()) #23, !dbg !11569
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11571, !srcloc !11572
  tail call fastcc void @k_thread_abort.98(%struct.k_thread* noundef %9) #24, !dbg !11573
  ret void, !dbg !11576
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.97() unnamed_addr #4 !dbg !11577 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.99() #25, !dbg !11581
  ret %struct.k_thread* %1, !dbg !11582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.98(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11587, metadata !DIExpression()), !dbg !11588
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11589, !srcloc !11591
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !11592
  ret void, !dbg !11593
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.99() unnamed_addr #4 !dbg !11594 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11595, !srcloc !11597
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !11598
  ret %struct.k_thread* %1, !dbg !11599
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11600 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11604, metadata !DIExpression()), !dbg !11607
  call void @llvm.dbg.value(metadata i32 %1, metadata !11605, metadata !DIExpression()), !dbg !11607
  call void @llvm.dbg.value(metadata i32 %2, metadata !11606, metadata !DIExpression()), !dbg !11607
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !11608
  ret void, !dbg !11609
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11610 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11614, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i8* %1, metadata !11615, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 %2, metadata !11616, metadata !DIExpression()), !dbg !11617
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !11618
  ret void, !dbg !11619
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11620 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !11621
  ret void, !dbg !11622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11625, metadata !DIExpression()), !dbg !11626
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !11627
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11628
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11629
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11630
  %4 = trunc i32 %0 to i8, !dbg !11631
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11632
  store i8 %4, i8* %5, align 4, !dbg !11633
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11634
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !11635
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11636
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11637
  store i8* %8, i8** %9, align 4, !dbg !11638
  ret void, !dbg !11639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11642, metadata !DIExpression()), !dbg !11648
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11649
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11643, metadata !DIExpression()), !dbg !11648
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11650
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11644, metadata !DIExpression()), !dbg !11648
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i32 0, i32 0), metadata !11647, metadata !DIExpression()), !dbg !11648
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11651
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11652
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i32 0, i32 0)) #26, !dbg !11653
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !11654
  ret void, !dbg !11655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11656 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11660, metadata !DIExpression()), !dbg !11661
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11662
  ret i8* %2, !dbg !11663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !11664 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11669, metadata !DIExpression()), !dbg !11670
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11671
  %3 = load i8, i8* %2, align 1, !dbg !11672
  %4 = and i8 %3, -5, !dbg !11672
  store i8 %4, i8* %2, align 1, !dbg !11672
  ret void, !dbg !11673
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !11674 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !11677
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !11678
  %3 = ptrtoint i8* %2 to i32, !dbg !11687
  %4 = add i32 %3, 2048, !dbg !11688
  call void @llvm.dbg.value(metadata i32 %4, metadata !11682, metadata !DIExpression()) #23, !dbg !11689
  call void @llvm.dbg.value(metadata i32 %4, metadata !11690, metadata !DIExpression()) #23, !dbg !11693
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !11695, !srcloc !11696
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11697
  %6 = or i32 %5, 512, !dbg !11697
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11697
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -2, i32 noundef 255) #26, !dbg !11698
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -5, i32 noundef 0) #26, !dbg !11701
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -12, i32 noundef 0) #26, !dbg !11702
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -11, i32 noundef 0) #26, !dbg !11703
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -10, i32 noundef 0) #26, !dbg !11704
  tail call fastcc void @__NVIC_SetPriority.107(i32 noundef -4, i32 noundef 0) #26, !dbg !11705
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11706
  %8 = or i32 %7, 458752, !dbg !11706
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11706
  tail call void @z_arm_fault_init() #26, !dbg !11707
  tail call void @z_arm_cpu_idle_init() #26, !dbg !11708
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11709
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11712
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !11713
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !11714
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !11715
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %10) #23, !dbg !11715
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11676, metadata !DIExpression()), !dbg !11716
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !11717
  call void @z_device_state_init() #26, !dbg !11718
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !11719
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !11720
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !11721
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !11722
  unreachable, !dbg !11722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2087, metadata !DIExpression()), !dbg !11723
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11724
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11724
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2088, metadata !DIExpression()), !dbg !11723
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2088, metadata !DIExpression()), !dbg !11723
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11725
  br i1 %7, label %8, label %35, !dbg !11726

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2088, metadata !DIExpression()), !dbg !11723
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11727
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11727
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2098, metadata !DIExpression()), !dbg !11728
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11729
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11729
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !11730
  call void @llvm.dbg.value(metadata i32 %14, metadata !2102, metadata !DIExpression()), !dbg !11728
  %15 = icmp eq %struct.device* %11, null, !dbg !11731
  br i1 %15, label %32, label %16, !dbg !11733

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11734
  br i1 %17, label %26, label %18, !dbg !11737

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11738
  call void @llvm.dbg.value(metadata i32 %19, metadata !2102, metadata !DIExpression()), !dbg !11728
  %20 = icmp ult i32 %19, 255, !dbg !11740
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11740
  call void @llvm.dbg.value(metadata i32 %21, metadata !2102, metadata !DIExpression()), !dbg !11728
  %22 = trunc i32 %21 to i8, !dbg !11741
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11742
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11742
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11743
  store i8 %22, i8* %25, align 1, !dbg !11744
  br label %26, !dbg !11745

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11746
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11746
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11747
  %30 = load i8, i8* %29, align 1, !dbg !11748
  %31 = or i8 %30, 1, !dbg !11748
  store i8 %31, i8* %29, align 1, !dbg !11748
  br label %32, !dbg !11749

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11750
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2088, metadata !DIExpression()), !dbg !11723
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11725
  br i1 %34, label %8, label %35, !dbg !11726, !llvm.loop !11751

35:                                               ; preds = %32, %1
  ret void, !dbg !11753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.107(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !11754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11756, metadata !DIExpression()), !dbg !11758
  call void @llvm.dbg.value(metadata i32 %1, metadata !11757, metadata !DIExpression()), !dbg !11758
  %3 = trunc i32 %1 to i8, !dbg !11759
  %4 = shl i8 %3, 4, !dbg !11759
  %5 = and i32 %0, 15, !dbg !11762
  %6 = add nsw i32 %5, -4, !dbg !11763
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11764
  store volatile i8 %4, i8* %7, align 1, !dbg !11765
  ret void, !dbg !11766
}

; Function Attrs: optsize
declare !dbg !11767 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !11768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11771, metadata !DIExpression()), !dbg !11772
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11773
  store i8 1, i8* %2, align 1, !dbg !11774
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !11775
  store i8 -1, i8* %3, align 4, !dbg !11776
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11777
  store i8 1, i8* %4, align 4, !dbg !11778
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !11779
  store i32 0, i32* %5, align 4, !dbg !11780
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !11781
  store i32 0, i32* %6, align 4, !dbg !11782
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !11783
  store %struct.k_heap* null, %struct.k_heap** %7, align 8, !dbg !11784
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11785
  ret void, !dbg !11786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11787 {
  tail call void @z_sched_init() #26, !dbg !11792
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11793
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.108, i32 0, i32 0)) #26, !dbg !11794
  call void @llvm.dbg.value(metadata i8* %1, metadata !11791, metadata !DIExpression()), !dbg !11795
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11796
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !11797
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !11798
  ret i8* %1, !dbg !11799
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !11800 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11804, metadata !DIExpression()), !dbg !11805
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !11806
  unreachable, !dbg !11807
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11808 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11810, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.value(metadata i8* %1, metadata !11811, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.value(metadata i8* %2, metadata !11812, metadata !DIExpression()), !dbg !11813
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11814
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !11815
  tail call void @boot_banner() #26, !dbg !11816
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !11817
  tail call void @z_init_static_threads() #26, !dbg !11818
  tail call void @main() #26, !dbg !11819
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11820
  %5 = and i8 %4, -2, !dbg !11820
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11820
  ret void, !dbg !11821
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11822 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11832, metadata !DIExpression()), !dbg !11834
  call void @llvm.dbg.value(metadata i8* %1, metadata !11833, metadata !DIExpression()), !dbg !11834
  ret void, !dbg !11835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11836 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11838, metadata !DIExpression()), !dbg !11840
  call void @llvm.dbg.value(metadata i8* %1, metadata !11839, metadata !DIExpression()), !dbg !11840
  ret void, !dbg !11841
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11842 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11843, !srcloc !11850
  call void @llvm.dbg.value(metadata i32 %1, metadata !11846, metadata !DIExpression()) #23, !dbg !11851
  %2 = icmp ne i32 %1, 0, !dbg !11852
  ret i1 %2, !dbg !11853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !11854 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11855
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11856
  %3 = load i8, i8* %2, align 4, !dbg !11857
  %4 = or i8 %3, 1, !dbg !11857
  store i8 %4, i8* %2, align 4, !dbg !11857
  ret void, !dbg !11858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !11859 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11860
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11861
  %3 = load i8, i8* %2, align 4, !dbg !11862
  %4 = and i8 %3, -2, !dbg !11862
  store i8 %4, i8* %2, align 4, !dbg !11862
  ret void, !dbg !11863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #6 !dbg !11864 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11865
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11866
  %3 = load i8, i8* %2, align 4, !dbg !11866
  %4 = and i8 %3, 1, !dbg !11867
  %5 = icmp ne i8 %4, 0, !dbg !11868
  ret i1 %5, !dbg !11869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11874, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.value(metadata i8* %1, metadata !11875, metadata !DIExpression()), !dbg !11876
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11877
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !11879
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11874, metadata !DIExpression()), !dbg !11876
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !11880
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #26, !dbg !11881
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !11882
  store i8 0, i8* %8, align 1, !dbg !11883
  ret i32 0, !dbg !11884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #12 !dbg !11885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11889, metadata !DIExpression()), !dbg !11890
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !11891
  ret i8* %2, !dbg !11892
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11893 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11897, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.value(metadata i8* %1, metadata !11898, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.value(metadata i32 %2, metadata !11899, metadata !DIExpression()), !dbg !11900
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !11901
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #26, !dbg !11902
  ret i32 0, !dbg !11903
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2111 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2227, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i8* %1, metadata !2228, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i32 %2, metadata !2229, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i32 0, metadata !2230, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i8 undef, metadata !2232, metadata !DIExpression()), !dbg !11904
  %4 = icmp eq i8* %1, null, !dbg !11905
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11907
  br i1 %6, label %46, label %7, !dbg !11907

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11908
  %9 = load i8, i8* %8, align 1, !dbg !11908
  call void @llvm.dbg.value(metadata i8 %9, metadata !2232, metadata !DIExpression()), !dbg !11904
  %10 = add i32 %2, -1, !dbg !11909
  call void @llvm.dbg.value(metadata i32 %10, metadata !2229, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i8 0, metadata !2233, metadata !DIExpression()), !dbg !11910
  call void @llvm.dbg.value(metadata i8 %9, metadata !2232, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i32 0, metadata !2230, metadata !DIExpression()), !dbg !11904
  %11 = icmp eq i8 %9, 0, !dbg !11911
  br i1 %11, label %12, label %15, !dbg !11913

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11914
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11915
  store i8 0, i8* %14, align 1, !dbg !11916
  br label %46, !dbg !11917

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2233, metadata !DIExpression()), !dbg !11910
  call void @llvm.dbg.value(metadata i8 %17, metadata !2232, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i32 %18, metadata !2230, metadata !DIExpression()), !dbg !11904
  %19 = zext i8 %17 to i32, !dbg !11918
  %20 = zext i8 %16 to i32, !dbg !11919
  %21 = shl nuw i32 1, %20, !dbg !11919
  call void @llvm.dbg.value(metadata i32 %21, metadata !2231, metadata !DIExpression()), !dbg !11904
  %22 = and i32 %21, %19, !dbg !11921
  %23 = icmp eq i32 %22, 0, !dbg !11923
  br i1 %23, label %42, label %24, !dbg !11924

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11925
  %26 = sub i32 %10, %18, !dbg !11926
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11927
  %28 = load i8*, i8** %27, align 4, !dbg !11927
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11928
  %30 = load i32, i32* %29, align 4, !dbg !11928
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !11929
  %32 = add i32 %31, %18, !dbg !11930
  call void @llvm.dbg.value(metadata i32 %32, metadata !2230, metadata !DIExpression()), !dbg !11904
  %33 = trunc i32 %21 to i8, !dbg !11931
  %34 = xor i8 %33, -1, !dbg !11931
  %35 = and i8 %17, %34, !dbg !11931
  call void @llvm.dbg.value(metadata i8 %35, metadata !2232, metadata !DIExpression()), !dbg !11904
  %36 = icmp eq i8 %35, 0, !dbg !11932
  br i1 %36, label %12, label %37, !dbg !11934

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11935
  %39 = sub i32 %10, %32, !dbg !11937
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #24, !dbg !11938
  %41 = add i32 %40, %32, !dbg !11939
  call void @llvm.dbg.value(metadata i32 %41, metadata !2230, metadata !DIExpression()), !dbg !11904
  br label %42, !dbg !11940

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11904
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11904
  call void @llvm.dbg.value(metadata i8 %44, metadata !2232, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i32 %43, metadata !2230, metadata !DIExpression()), !dbg !11904
  %45 = add i8 %16, 1, !dbg !11941
  call void @llvm.dbg.value(metadata i8 %45, metadata !2233, metadata !DIExpression()), !dbg !11910
  br label %15, !dbg !11913

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.113, i32 0, i32 0), %3 ], !dbg !11904
  ret i8* %47, !dbg !11942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11943 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11947, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i32 %1, metadata !11948, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i8* %2, metadata !11949, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i32 %3, metadata !11950, metadata !DIExpression()), !dbg !11952
  %5 = icmp ult i32 %1, %3, !dbg !11953
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11953
  call void @llvm.dbg.value(metadata i32 %6, metadata !11951, metadata !DIExpression()), !dbg !11952
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !11954
  ret i32 %6, !dbg !11955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11956 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11960, metadata !DIExpression()), !dbg !11961
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !11962
  ret void, !dbg !11963
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !11964 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11973, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11974, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata i32 %2, metadata !11975, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11976, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata i8* %4, metadata !11977, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata i8* %5, metadata !11978, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata i8* %6, metadata !11979, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata i32 %7, metadata !11980, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata i32 %8, metadata !11981, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata i8* %9, metadata !11982, metadata !DIExpression()), !dbg !11984
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11985
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #24, !dbg !11986
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11987
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !11988
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !11989
  call void @llvm.dbg.value(metadata i8* %13, metadata !11983, metadata !DIExpression()), !dbg !11984
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !11990
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11991
  store i8* null, i8** %14, align 4, !dbg !11992
  %15 = icmp eq i8* %9, null, !dbg !11993
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !11995
  br i1 %15, label %20, label %17, !dbg !11996

17:                                               ; preds = %10
  %18 = tail call i8* @strncpy(i8* noundef nonnull %16, i8* noundef nonnull %9, i32 noundef 31) #26, !dbg !11997
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !11999
  store i8 0, i8* %19, align 1, !dbg !12000
  br label %21, !dbg !12001

20:                                               ; preds = %10
  store i8 0, i8* %16, align 8, !dbg !12002
  br label %21

21:                                               ; preds = %20, %17
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !12004
  store i8 -1, i8* %22, align 4, !dbg !12007
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12008
  %24 = icmp eq %struct.k_thread* %23, null, !dbg !12008
  br i1 %24, label %28, label %25, !dbg !12010

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 7, !dbg !12011
  %27 = load %struct.k_heap*, %struct.k_heap** %26, align 8, !dbg !12011
  br label %28, !dbg !12012

28:                                               ; preds = %21, %25
  %29 = phi %struct.k_heap* [ %27, %25 ], [ null, %21 ], !dbg !11984
  %30 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12013
  store %struct.k_heap* %29, %struct.k_heap** %30, align 8, !dbg !12015
  ret i8* %13, !dbg !12016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #5 !dbg !12017 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12022, metadata !DIExpression()), !dbg !12023
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12024
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !12025
  ret void, !dbg !12026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #5 !dbg !12027 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12032, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata i32 %1, metadata !12033, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata i32 %2, metadata !12034, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata i32 %3, metadata !12035, metadata !DIExpression()), !dbg !12036
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12037
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12038
  %6 = trunc i32 %3 to i8, !dbg !12039
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12040
  store i8 %6, i8* %7, align 4, !dbg !12041
  %8 = trunc i32 %2 to i8, !dbg !12042
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12043
  store i8 %8, i8* %9, align 1, !dbg !12044
  %10 = trunc i32 %1 to i8, !dbg !12045
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12046
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12046
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12046
  store i8 %10, i8* %13, align 2, !dbg !12047
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12048
  store i8 0, i8* %14, align 1, !dbg !12049
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !12050
  ret void, !dbg !12051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !12052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12056, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12057, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.value(metadata i32 %2, metadata !12058, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.value(metadata i32 0, metadata !12063, metadata !DIExpression()), !dbg !12064
  %4 = add i32 %2, 7, !dbg !12065
  %5 = and i32 %4, -8, !dbg !12065
  %6 = add i32 %5, 64, !dbg !12065
  call void @llvm.dbg.value(metadata i32 %6, metadata !12059, metadata !DIExpression()), !dbg !12064
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.125(%struct.z_thread_stack_element* noundef %1) #24, !dbg !12067
  call void @llvm.dbg.value(metadata i8* %7, metadata !12062, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.value(metadata i32 %5, metadata !12060, metadata !DIExpression()), !dbg !12064
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12068
  call void @llvm.dbg.value(metadata i8* %8, metadata !12061, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.value(metadata i32 0, metadata !12063, metadata !DIExpression()), !dbg !12064
  %9 = ptrtoint i8* %7 to i32, !dbg !12069
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12070
  store i32 %9, i32* %10, align 4, !dbg !12071
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12072
  store i32 %5, i32* %11, align 4, !dbg !12073
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !12074
  store i32 0, i32* %12, align 4, !dbg !12075
  call void @llvm.dbg.value(metadata i8* %8, metadata !12061, metadata !DIExpression()), !dbg !12064
  ret i8* %8, !dbg !12076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.125(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !12077 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12081, metadata !DIExpression()), !dbg !12082
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12083
  ret i8* %2, !dbg !12084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !12085 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12090, metadata !DIExpression()), !dbg !12091
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 8, !dbg !12092
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12093
  ret void, !dbg !12094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !12095 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12097, metadata !DIExpression()), !dbg !12098
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12099
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !12100
  ret void, !dbg !12101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !12102 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12106, metadata !DIExpression()), !dbg !12107
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12108
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12109
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12110
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12111
  ret void, !dbg !12112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !12113 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12118, metadata !DIExpression()), !dbg !12119
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12120
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12121
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12122
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12123
  ret void, !dbg !12124
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12125 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12142, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12133, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12134, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i32 %2, metadata !12135, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12136, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i8* %4, metadata !12137, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i8* %5, metadata !12138, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i8* %6, metadata !12139, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i32 %7, metadata !12140, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i32 %8, metadata !12141, metadata !DIExpression()), !dbg !12143
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !12144
  %13 = icmp eq i64 %11, -1, !dbg !12145
  br i1 %13, label %15, label %14, !dbg !12147

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !12148
  br label %15, !dbg !12150

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12152 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12157, metadata !DIExpression()), !dbg !12158
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12156, metadata !DIExpression()), !dbg !12158
  %4 = icmp eq i64 %3, 0, !dbg !12159
  br i1 %4, label %5, label %6, !dbg !12161

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.128(%struct.k_thread* noundef %0) #24, !dbg !12162
  br label %7, !dbg !12164

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !12165
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.128(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12168 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12172, metadata !DIExpression()), !dbg !12173
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12174, !srcloc !12176
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !12177
  ret void, !dbg !12178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12179 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12182, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12181, metadata !DIExpression()), !dbg !12183
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 8, !dbg !12184
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !12185
  ret void, !dbg !12186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12187 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12189, metadata !DIExpression()), !dbg !12209
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %30, !dbg !12210

1:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !12211
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12207, metadata !DIExpression()), !dbg !12212
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %32, label %31, !dbg !12213

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %28, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12189, metadata !DIExpression()), !dbg !12209
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12214
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12214
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12217
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12217
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12218
  %9 = load i32, i32* %8, align 4, !dbg !12218
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12219
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12219
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12220
  %13 = load i8*, i8** %12, align 4, !dbg !12220
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12221
  %15 = load i8*, i8** %14, align 4, !dbg !12221
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12222
  %17 = load i8*, i8** %16, align 4, !dbg !12222
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12223
  %19 = load i32, i32* %18, align 4, !dbg !12223
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12224
  %21 = load i32, i32* %20, align 4, !dbg !12224
  %22 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !12225
  %23 = load i8*, i8** %22, align 4, !dbg !12225
  %24 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* noundef %23) #24, !dbg !12226
  %25 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12227
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %25, i32 0, i32 2, !dbg !12228
  %27 = bitcast i8** %26 to %struct._static_thread_data**, !dbg !12229
  store %struct._static_thread_data* %3, %struct._static_thread_data** %27, align 4, !dbg !12229
  %28 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12230
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %28, metadata !12189, metadata !DIExpression()), !dbg !12209
  %29 = icmp ult %struct._static_thread_data* %28, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12231
  br i1 %29, label %2, label %1, !dbg !12210, !llvm.loop !12233

30:                                               ; preds = %0
  tail call void @k_sched_lock() #26, !dbg !12211
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12207, metadata !DIExpression()), !dbg !12212
  br label %31, !dbg !12213

31:                                               ; preds = %45, %30, %1
  tail call void @k_sched_unlock() #26, !dbg !12235
  ret void, !dbg !12236

32:                                               ; preds = %1, %45
  %33 = phi %struct._static_thread_data* [ %46, %45 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !12207, metadata !DIExpression()), !dbg !12212
  %34 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !12237
  %35 = load i32, i32* %34, align 4, !dbg !12237
  %36 = icmp eq i32 %35, -1, !dbg !12241
  br i1 %36, label %45, label %37, !dbg !12242

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !12243
  %39 = load %struct.k_thread*, %struct.k_thread** %38, align 4, !dbg !12243
  %40 = icmp sgt i32 %35, 0, !dbg !12245
  %41 = select i1 %40, i32 %35, i32 0, !dbg !12245
  %42 = zext i32 %41 to i64, !dbg !12245
  %43 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %42) #24, !dbg !12245
  %44 = insertvalue [1 x i64] poison, i64 %43, 0, !dbg !12246
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %39, [1 x i64] %44) #24, !dbg !12246
  br label %45, !dbg !12247

45:                                               ; preds = %32, %37
  %46 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !12248
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %46, metadata !12207, metadata !DIExpression()), !dbg !12212
  %47 = icmp ult %struct._static_thread_data* %46, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12249
  br i1 %47, label %32, label %31, !dbg !12213, !llvm.loop !12251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !12253 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12258, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i64 %0, metadata !12260, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 1000, metadata !12265, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 10000, metadata !12266, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i8 1, metadata !12267, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i8 0, metadata !12268, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i8 1, metadata !12269, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i8 0, metadata !12270, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i8 1, metadata !12271, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i8 0, metadata !12272, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i64 0, metadata !12273, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i64 0, metadata !12273, metadata !DIExpression()), !dbg !12277
  %2 = mul i64 %0, 10, !dbg !12279
  ret i64 %2, !dbg !12285
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !12286 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12288, metadata !DIExpression()), !dbg !12292
  call void @llvm.dbg.value(metadata i8* %1, metadata !12289, metadata !DIExpression()), !dbg !12292
  call void @llvm.dbg.value(metadata i8* %2, metadata !12290, metadata !DIExpression()), !dbg !12292
  call void @llvm.dbg.value(metadata i8* %3, metadata !12291, metadata !DIExpression()), !dbg !12292
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12293
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12294
  %7 = load i8, i8* %6, align 4, !dbg !12295
  %8 = or i8 %7, 4, !dbg !12295
  store i8 %8, i8* %6, align 4, !dbg !12295
  tail call void @z_thread_essential_clear() #24, !dbg !12296
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !12297
  unreachable, !dbg !12297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !12298 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12302, metadata !DIExpression()), !dbg !12303
  ret i32 -134, !dbg !12304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !12305 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12309, metadata !DIExpression()), !dbg !12311
  call void @llvm.dbg.value(metadata i32 %1, metadata !12310, metadata !DIExpression()), !dbg !12311
  ret i32 -134, !dbg !12312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !12313 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12320, metadata !DIExpression()), !dbg !12322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12321, metadata !DIExpression()), !dbg !12322
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12323
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12325
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12322
  ret i32 %6, !dbg !12326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !12327 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12331, metadata !DIExpression()), !dbg !12332
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12333
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12332
  ret i32 %3, !dbg !12335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12336 {
  tail call void @sys_clock_idle_exit() #26, !dbg !12338
  ret void, !dbg !12339
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !12340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12342, metadata !DIExpression()), !dbg !12345
  call void @llvm.dbg.value(metadata i8* %1, metadata !12343, metadata !DIExpression()), !dbg !12345
  call void @llvm.dbg.value(metadata i8* %2, metadata !12344, metadata !DIExpression()), !dbg !12345
  br label %4, !dbg !12346

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12347, !srcloc !12354
  call void @llvm.dbg.value(metadata i32 undef, metadata !12350, metadata !DIExpression()) #23, !dbg !12355
  call void @llvm.dbg.value(metadata i32 undef, metadata !12351, metadata !DIExpression()) #23, !dbg !12355
  tail call fastcc void @k_cpu_idle() #24, !dbg !12356
  br label %4, !dbg !12346, !llvm.loop !12357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12359 {
  tail call void @arch_cpu_idle() #26, !dbg !12360
  ret void, !dbg !12361
}

; Function Attrs: optsize
declare !dbg !12362 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #5 !dbg !12363 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !12378, metadata !DIExpression()), !dbg !12381
  call void @llvm.dbg.value(metadata i32 %1, metadata !12379, metadata !DIExpression()), !dbg !12381
  call void @llvm.dbg.value(metadata i32 %2, metadata !12380, metadata !DIExpression()), !dbg !12381
  %4 = icmp eq i32 %2, 0, !dbg !12382
  %5 = icmp ugt i32 %1, %2, !dbg !12382
  %6 = or i1 %4, %5, !dbg !12382
  br i1 %6, label %11, label %7, !dbg !12382

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !12384
  store i32 %1, i32* %8, align 4, !dbg !12385
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !12386
  store i32 %2, i32* %9, align 4, !dbg !12387
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !12388
  tail call fastcc void @z_waitq_init.133(%struct._wait_q_t* noundef %10) #24, !dbg !12389
  br label %11, !dbg !12390

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !12381
  ret i32 %12, !dbg !12391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.133(%struct._wait_q_t* noundef %0) unnamed_addr #5 !dbg !12392 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12397, metadata !DIExpression()), !dbg !12398
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12399
  tail call fastcc void @sys_dlist_init.134(%struct._dnode* noundef %2) #24, !dbg !12400
  ret void, !dbg !12401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.134(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !12402 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12407, metadata !DIExpression()), !dbg !12408
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12409
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12410
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12411
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12412
  ret void, !dbg !12413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !12414 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !12418, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12507, metadata !DIExpression()) #23, !dbg !12514
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12516, !srcloc !12522
  call void @llvm.dbg.value(metadata i32 undef, metadata !12519, metadata !DIExpression()) #23, !dbg !12523
  call void @llvm.dbg.value(metadata i32 undef, metadata !12520, metadata !DIExpression()) #23, !dbg !12523
  call void @llvm.dbg.value(metadata i32 undef, metadata !12513, metadata !DIExpression()) #23, !dbg !12514
  call void @llvm.dbg.value(metadata i32 undef, metadata !12419, metadata !DIExpression()), !dbg !12506
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !12524
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #26, !dbg !12525
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12424, metadata !DIExpression()), !dbg !12506
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12526
  br i1 %5, label %8, label %6, !dbg !12528

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12529, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.value(metadata i32 0, metadata !12534, metadata !DIExpression()), !dbg !12535
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 8, i32 1, !dbg !12538
  store i32 0, i32* %7, align 4, !dbg !12539
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #26, !dbg !12540
  br label %16, !dbg !12541

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !12542
  %10 = load i32, i32* %9, align 4, !dbg !12542
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !12544
  %12 = load i32, i32* %11, align 4, !dbg !12544
  %13 = icmp ne i32 %10, %12, !dbg !12545
  %14 = zext i1 %13 to i32, !dbg !12546
  %15 = add i32 %10, %14, !dbg !12547
  store i32 %15, i32* %9, align 4, !dbg !12547
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !12516
  call void @llvm.dbg.value(metadata i32 %17, metadata !12519, metadata !DIExpression()) #23, !dbg !12523
  call void @llvm.dbg.value(metadata i32 %17, metadata !12513, metadata !DIExpression()) #23, !dbg !12514
  call void @llvm.dbg.value(metadata i32 %17, metadata !12419, metadata !DIExpression()), !dbg !12506
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !12548
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #26, !dbg !12548
  ret void, !dbg !12549
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !12550 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12559, metadata !DIExpression()), !dbg !12563
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !12558, metadata !DIExpression()), !dbg !12563
  call void @llvm.dbg.value(metadata i32 0, metadata !12560, metadata !DIExpression()), !dbg !12563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12507, metadata !DIExpression()) #23, !dbg !12564
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12566, !srcloc !12522
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12566
  call void @llvm.dbg.value(metadata i32 %4, metadata !12519, metadata !DIExpression()) #23, !dbg !12568
  call void @llvm.dbg.value(metadata i32 undef, metadata !12520, metadata !DIExpression()) #23, !dbg !12568
  call void @llvm.dbg.value(metadata i32 %4, metadata !12513, metadata !DIExpression()) #23, !dbg !12564
  call void @llvm.dbg.value(metadata i32 %4, metadata !12561, metadata !DIExpression()), !dbg !12563
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !12569
  %6 = load i32, i32* %5, align 4, !dbg !12569
  %7 = icmp eq i32 %6, 0, !dbg !12569
  br i1 %7, label %10, label %8, !dbg !12571, !prof !12572

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !12573
  store i32 %9, i32* %5, align 4, !dbg !12573
  call void @llvm.dbg.value(metadata i32 %4, metadata !12575, metadata !DIExpression()) #23, !dbg !12581
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12580, metadata !DIExpression()) #23, !dbg !12581
  call void @llvm.dbg.value(metadata i32 %4, metadata !12583, metadata !DIExpression()) #23, !dbg !12586
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12588, !srcloc !12589
  call void @llvm.dbg.value(metadata i32 0, metadata !12560, metadata !DIExpression()), !dbg !12563
  br label %18, !dbg !12590

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12559, metadata !DIExpression()), !dbg !12563
  %12 = icmp eq i64 %11, 0, !dbg !12591
  br i1 %12, label %13, label %14, !dbg !12593

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !12575, metadata !DIExpression()) #23, !dbg !12594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12580, metadata !DIExpression()) #23, !dbg !12594
  call void @llvm.dbg.value(metadata i32 %4, metadata !12583, metadata !DIExpression()) #23, !dbg !12597
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12599, !srcloc !12589
  call void @llvm.dbg.value(metadata i32 -16, metadata !12560, metadata !DIExpression()), !dbg !12563
  br label %18, !dbg !12600

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !12601
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !12602
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %struct._wait_q_t* noundef %15, [1 x i64] %1) #26, !dbg !12602
  call void @llvm.dbg.value(metadata i32 %17, metadata !12560, metadata !DIExpression()), !dbg !12563
  br label %18, !dbg !12603

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !12563
  call void @llvm.dbg.value(metadata i32 %19, metadata !12560, metadata !DIExpression()), !dbg !12563
  call void @llvm.dbg.label(metadata !12562), !dbg !12604
  ret i32 %19, !dbg !12605
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !12606 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !12608, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12507, metadata !DIExpression()) #23, !dbg !12612
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12614, !srcloc !12522
  call void @llvm.dbg.value(metadata i32 undef, metadata !12519, metadata !DIExpression()) #23, !dbg !12616
  call void @llvm.dbg.value(metadata i32 undef, metadata !12520, metadata !DIExpression()) #23, !dbg !12616
  call void @llvm.dbg.value(metadata i32 undef, metadata !12513, metadata !DIExpression()) #23, !dbg !12612
  call void @llvm.dbg.value(metadata i32 undef, metadata !12610, metadata !DIExpression()), !dbg !12611
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #26, !dbg !12617
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12609, metadata !DIExpression()), !dbg !12611
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12619
  br i1 %5, label %11, label %6, !dbg !12621

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !12529, metadata !DIExpression()), !dbg !12622
  call void @llvm.dbg.value(metadata i32 -11, metadata !12534, metadata !DIExpression()), !dbg !12622
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 8, i32 1, !dbg !12624
  store i32 -11, i32* %8, align 4, !dbg !12625
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #26, !dbg !12626
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #26, !dbg !12617
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12609, metadata !DIExpression()), !dbg !12611
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !12619
  br i1 %10, label %11, label %6, !dbg !12621, !llvm.loop !12627

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !12614
  call void @llvm.dbg.value(metadata i32 %12, metadata !12519, metadata !DIExpression()) #23, !dbg !12616
  call void @llvm.dbg.value(metadata i32 %12, metadata !12513, metadata !DIExpression()) #23, !dbg !12612
  call void @llvm.dbg.value(metadata i32 %12, metadata !12610, metadata !DIExpression()), !dbg !12611
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !12630
  store i32 0, i32* %13, align 4, !dbg !12631
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !12632
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #26, !dbg !12632
  ret void, !dbg !12633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !12634 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12638, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12639, metadata !DIExpression()), !dbg !12642
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12643
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12643
  %5 = load i8, i8* %4, align 2, !dbg !12643
  call void @llvm.dbg.value(metadata i8 %5, metadata !12640, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12642
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12644
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12644
  %8 = load i8, i8* %7, align 2, !dbg !12644
  call void @llvm.dbg.value(metadata i8 %8, metadata !12641, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12642
  %9 = icmp eq i8 %8, %5, !dbg !12645
  %10 = sext i8 %5 to i32, !dbg !12647
  %11 = sext i8 %8 to i32, !dbg !12647
  %12 = sub nsw i32 %11, %10, !dbg !12647
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12647
  ret i32 %13, !dbg !12648
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12653, metadata !DIExpression()), !dbg !12654
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !12655
  %3 = icmp eq i32 %2, 0, !dbg !12657
  br i1 %3, label %8, label %4, !dbg !12658

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !12659
  %6 = add i32 %5, %2, !dbg !12661
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12662
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !12663
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !12664
  br label %8, !dbg !12665

8:                                                ; preds = %4, %1
  ret void, !dbg !12666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #6 !dbg !12667 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12671, metadata !DIExpression()), !dbg !12673
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12674
  call void @llvm.dbg.value(metadata i32 %1, metadata !12672, metadata !DIExpression()), !dbg !12673
  ret i32 %1, !dbg !12675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12680, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i32 %1, metadata !12681, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i32 0, metadata !12682, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !12698
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12700, !srcloc !12706
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12700
  call void @llvm.dbg.value(metadata i32 %4, metadata !12703, metadata !DIExpression()) #23, !dbg !12707
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !12707
  call void @llvm.dbg.value(metadata i32 %4, metadata !12697, metadata !DIExpression()) #23, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %4, metadata !12688, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata i32 undef, metadata !12682, metadata !DIExpression()), !dbg !12690
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12708
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !12711
  %6 = icmp sgt i32 %0, 0, !dbg !12712
  %7 = icmp sgt i32 %5, 2, !dbg !12714
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12714
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12714
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12715
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12716
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12717
  call void @llvm.dbg.value(metadata i32 %4, metadata !12718, metadata !DIExpression()) #23, !dbg !12724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !12724
  call void @llvm.dbg.value(metadata i32 %4, metadata !12726, metadata !DIExpression()) #23, !dbg !12729
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12731, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 1, metadata !12682, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata i32 undef, metadata !12682, metadata !DIExpression()), !dbg !12690
  ret void, !dbg !12733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !12734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12736, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.value(metadata i32 %0, metadata !12738, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12753
  call void @llvm.dbg.value(metadata i32 1000, metadata !12741, metadata !DIExpression()), !dbg !12753
  call void @llvm.dbg.value(metadata i32 10000, metadata !12742, metadata !DIExpression()), !dbg !12753
  call void @llvm.dbg.value(metadata i8 1, metadata !12743, metadata !DIExpression()), !dbg !12753
  call void @llvm.dbg.value(metadata i1 true, metadata !12744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12753
  call void @llvm.dbg.value(metadata i1 true, metadata !12745, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12753
  call void @llvm.dbg.value(metadata i8 0, metadata !12746, metadata !DIExpression()), !dbg !12753
  call void @llvm.dbg.value(metadata i1 true, metadata !12747, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12753
  call void @llvm.dbg.value(metadata i1 false, metadata !12748, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12753
  call void @llvm.dbg.value(metadata i64 0, metadata !12749, metadata !DIExpression()), !dbg !12753
  call void @llvm.dbg.value(metadata i64 0, metadata !12749, metadata !DIExpression()), !dbg !12753
  %2 = mul i32 %0, 10, !dbg !12755
  ret i32 %2, !dbg !12761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12764, metadata !DIExpression()), !dbg !12766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !12767
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12769, !srcloc !12706
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12769
  call void @llvm.dbg.value(metadata i32 %3, metadata !12703, metadata !DIExpression()) #23, !dbg !12771
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !12771
  call void @llvm.dbg.value(metadata i32 %3, metadata !12697, metadata !DIExpression()) #23, !dbg !12767
  call void @llvm.dbg.value(metadata i32 %3, metadata !12765, metadata !DIExpression()), !dbg !12766
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12772
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12774
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !12775
  br i1 %6, label %7, label %8, !dbg !12776

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12777
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #23, !dbg !12779
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !12779
  call void @llvm.dbg.value(metadata i32 %3, metadata !12726, metadata !DIExpression()) #23, !dbg !12781
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12783, !srcloc !12732
  br label %24, !dbg !12784

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12785
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !12786
  %10 = icmp eq i32 %9, 0, !dbg !12786
  br i1 %10, label %21, label %11, !dbg !12788

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !12789
  br i1 %12, label %13, label %21, !dbg !12790

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12791
  %15 = icmp sgt i32 %14, %0, !dbg !12794
  br i1 %15, label %19, label %16, !dbg !12795

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12796
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !12796
  call void @llvm.dbg.value(metadata i32 %18, metadata !12765, metadata !DIExpression()), !dbg !12766
  br label %22, !dbg !12798

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !12799
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12799
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12801
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !12766
  call void @llvm.dbg.value(metadata i32 %23, metadata !12765, metadata !DIExpression()), !dbg !12766
  call void @llvm.dbg.value(metadata i32 %23, metadata !12718, metadata !DIExpression()) #23, !dbg !12803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !12803
  call void @llvm.dbg.value(metadata i32 %23, metadata !12726, metadata !DIExpression()) #23, !dbg !12805
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !12807, !srcloc !12732
  br label %24, !dbg !12808

24:                                               ; preds = %22, %7
  ret void, !dbg !12808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #6 !dbg !12809 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12813, metadata !DIExpression()), !dbg !12815
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !12816
  %3 = icmp eq i32 %2, 0, !dbg !12816
  br i1 %3, label %16, label %4, !dbg !12817

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12818
  br i1 %5, label %16, label %6, !dbg !12819

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12820
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12820
  %9 = load i8, i8* %8, align 2, !dbg !12820
  %10 = sext i8 %9 to i32, !dbg !12821
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12822
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !12823
  br i1 %12, label %16, label %13, !dbg !12824

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !12825
  %15 = xor i1 %14, true, !dbg !12826
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12815
  call void @llvm.dbg.value(metadata i1 %17, metadata !12814, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12815
  ret i1 %17, !dbg !12827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12828 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12832, metadata !DIExpression()), !dbg !12834
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12835
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12833, metadata !DIExpression()), !dbg !12834
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !12836
  br i1 %3, label %5, label %4, !dbg !12838

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !12839
  br label %5, !dbg !12841

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12832, metadata !DIExpression()), !dbg !12834
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12842
  ret i32 %6, !dbg !12843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #6 !dbg !12844 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12846, metadata !DIExpression()), !dbg !12848
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12849
  %3 = load i8, i8* %2, align 1, !dbg !12849
  call void @llvm.dbg.value(metadata i8 %3, metadata !12847, metadata !DIExpression()), !dbg !12848
  %4 = and i8 %3, 31, !dbg !12850
  %5 = icmp ne i8 %4, 0, !dbg !12851
  ret i1 %5, !dbg !12852
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12855, metadata !DIExpression()), !dbg !12856
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12857
  br i1 %2, label %3, label %7, !dbg !12859

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12860, metadata !DIExpression()) #23, !dbg !12863
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12866
  %5 = load i8, i8* %4, align 1, !dbg !12867
  %6 = and i8 %5, 127, !dbg !12867
  store i8 %6, i8* %4, align 1, !dbg !12867
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12868, metadata !DIExpression()) #23, !dbg !12871
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !12875
  br label %7, !dbg !12876

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12877, metadata !DIExpression()) #23, !dbg !12880
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12882
  %9 = load i8, i8* %8, align 1, !dbg !12883
  %10 = or i8 %9, -128, !dbg !12883
  store i8 %10, i8* %8, align 1, !dbg !12883
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12884, metadata !DIExpression()) #23, !dbg !12887
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12891, metadata !DIExpression()) #23, !dbg !12899
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12897, metadata !DIExpression()) #23, !dbg !12899
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !12901
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !12898, metadata !DIExpression()) #23, !dbg !12899
  %12 = icmp eq %struct._dnode* %11, null, !dbg !12903
  br i1 %12, label %23, label %13, !dbg !12901

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12898, metadata !DIExpression()) #23, !dbg !12899
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !12905
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12898, metadata !DIExpression()) #23, !dbg !12899
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #26, !dbg !12906
  %17 = icmp sgt i32 %16, 0, !dbg !12909
  br i1 %17, label %18, label %20, !dbg !12910

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12911
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #26, !dbg !12913
  br label %25, !dbg !12914

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #26, !dbg !12903
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12898, metadata !DIExpression()) #23, !dbg !12899
  %22 = icmp eq %struct._dnode* %21, null, !dbg !12903
  br i1 %22, label %23, label %13, !dbg !12901, !llvm.loop !12915

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12917
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #26, !dbg !12918
  br label %25, !dbg !12919

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12920
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !12921
  %28 = zext i1 %27 to i32, !dbg !12921
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !12922
  ret void, !dbg !12923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #6 !dbg !12924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12926, metadata !DIExpression()), !dbg !12927
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !12928
  ret i1 %2, !dbg !12929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #9 !dbg !12930 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12932, metadata !DIExpression()), !dbg !12934
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12933, metadata !DIExpression()), !dbg !12934
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12935
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !12936
  ret void, !dbg !12937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !12938 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12942, metadata !DIExpression()), !dbg !12943
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !12944
  br i1 %2, label %6, label %3, !dbg !12944

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12945
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12945
  br label %6, !dbg !12944

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12944
  ret %struct._dnode* %7, !dbg !12946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !12947 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12951, metadata !DIExpression()), !dbg !12955
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12952, metadata !DIExpression()), !dbg !12955
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12956
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12956
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12953, metadata !DIExpression()), !dbg !12955
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12957
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12958
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12959
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12960
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12961
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12962
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12963
  ret void, !dbg !12964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #6 !dbg !12965 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12969, metadata !DIExpression()), !dbg !12971
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12970, metadata !DIExpression()), !dbg !12971
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12972
  br i1 %3, label %6, label %4, !dbg !12973

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !12974
  br label %6, !dbg !12973

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12973
  ret %struct._dnode* %7, !dbg !12975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !12976 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12980, metadata !DIExpression()), !dbg !12983
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12981, metadata !DIExpression()), !dbg !12983
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12984
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12984
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12982, metadata !DIExpression()), !dbg !12983
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12985
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12986
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12987
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12988
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12989
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12990
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12991
  ret void, !dbg !12992
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12995, metadata !DIExpression()), !dbg !12997
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12998, metadata !DIExpression()) #23, !dbg !13004
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !13014
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13003, metadata !DIExpression()) #23, !dbg !13004
  %3 = icmp eq %struct._dnode* %2, null, !dbg !13016
  br i1 %3, label %19, label %4, !dbg !13014

4:                                                ; preds = %1
  %5 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4
  %6 = zext i8 %5 to i32
  %7 = shl nuw i32 1, %6
  br label %8, !dbg !13014

8:                                                ; preds = %16, %4
  %9 = phi %struct._dnode* [ %2, %4 ], [ %17, %16 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13003, metadata !DIExpression()) #23, !dbg !13004
  %10 = getelementptr inbounds %struct._dnode, %struct._dnode* %9, i32 2, i32 1, !dbg !13018
  %11 = bitcast %union.anon.0* %10 to i8*, !dbg !13018
  %12 = load i8, i8* %11, align 4, !dbg !13018
  %13 = zext i8 %12 to i32, !dbg !13021
  %14 = and i32 %7, %13, !dbg !13022
  %15 = icmp eq i32 %14, 0, !dbg !13023
  br i1 %15, label %16, label %19, !dbg !13024

16:                                               ; preds = %8
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %9) #26, !dbg !13016
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13003, metadata !DIExpression()) #23, !dbg !13004
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13016
  br i1 %18, label %19, label %8, !dbg !13014, !llvm.loop !13025

19:                                               ; preds = %8, %16, %1
  %20 = phi %struct._dnode* [ null, %1 ], [ %9, %8 ], [ null, %16 ]
  %21 = bitcast %struct._dnode* %20 to %struct.k_thread*, !dbg !13027
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !13003, metadata !DIExpression()) #23, !dbg !13004
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !13012, metadata !DIExpression()) #23, !dbg !13028
  %22 = icmp eq %struct._dnode* %20, null, !dbg !13029
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13030
  %24 = select i1 %22, %struct.k_thread* %23, %struct.k_thread* %21, !dbg !13030
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !12996, metadata !DIExpression()), !dbg !12997
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13031, metadata !DIExpression()) #23, !dbg !13037
  call void @llvm.dbg.value(metadata i32 %0, metadata !13036, metadata !DIExpression()) #23, !dbg !13037
  %25 = icmp eq i32 %0, 0, !dbg !13040
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13042
  br i1 %25, label %27, label %34, !dbg !13043

27:                                               ; preds = %19
  %28 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %26) #26, !dbg !13044
  br i1 %28, label %34, label %29, !dbg !13046

29:                                               ; preds = %27
  %30 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %24) #26, !dbg !13047
  br i1 %30, label %34, label %31, !dbg !13049

31:                                               ; preds = %29
  %32 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %26) #26, !dbg !13050
  %33 = icmp eq i32 %32, 0, !dbg !13050
  br i1 %33, label %37, label %34, !dbg !13052

34:                                               ; preds = %19, %29, %27, %31
  %35 = icmp eq %struct.k_thread* %24, %26, !dbg !13053
  br i1 %35, label %37, label %36, !dbg !13056

36:                                               ; preds = %34
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13057
  br label %37, !dbg !13059

37:                                               ; preds = %31, %34, %36
  %38 = phi %struct.k_thread* [ %24, %36 ], [ %24, %34 ], [ %26, %31 ], !dbg !13042
  store %struct.k_thread* %38, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13042
  ret void, !dbg !13060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #6 !dbg !13061 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13063, metadata !DIExpression()), !dbg !13064
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 8, !dbg !13065
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13066
  %4 = xor i1 %3, true, !dbg !13067
  ret i1 %4, !dbg !13068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #6 !dbg !13069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13071, metadata !DIExpression()), !dbg !13072
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13073
  %3 = load i16, i16* %2, align 2, !dbg !13073
  %4 = icmp ult i16 %3, 128, !dbg !13074
  %5 = zext i1 %4 to i32, !dbg !13074
  ret i32 %5, !dbg !13075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #6 !dbg !13076 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13082, metadata !DIExpression()), !dbg !13083
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13084
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !13085
  %4 = xor i1 %3, true, !dbg !13086
  ret i1 %4, !dbg !13087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #6 !dbg !13088 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13094, metadata !DIExpression()), !dbg !13095
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13096
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13096
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13097
  ret i1 %4, !dbg !13098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #6 !dbg !13099 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13101, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13102, metadata !DIExpression()), !dbg !13103
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13104
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13104
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13105
  br i1 %5, label %9, label %6, !dbg !13106

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13107
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13107
  br label %9, !dbg !13106

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13106
  ret %struct._dnode* %10, !dbg !13108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #6 !dbg !13109 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13113, metadata !DIExpression()), !dbg !13114
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13115
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13115
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13116
  ret i1 %4, !dbg !13117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !13118 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13122, metadata !DIExpression()), !dbg !13125
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13126
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13126
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13123, metadata !DIExpression()), !dbg !13125
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13127
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13127
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13124, metadata !DIExpression()), !dbg !13125
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13128
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13129
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13130
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13131
  tail call fastcc void @sys_dnode_init.139(%struct._dnode* noundef %0) #24, !dbg !13132
  ret void, !dbg !13133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.139(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !13134 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13136, metadata !DIExpression()), !dbg !13137
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13138
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13139
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13140
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13141
  ret void, !dbg !13142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #6 !dbg !13143 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13147, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata i32 128, metadata !13148, metadata !DIExpression()), !dbg !13149
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13150
  %3 = load i8, i8* %2, align 1, !dbg !13150
  %4 = icmp slt i8 %3, 0, !dbg !13151
  ret i1 %4, !dbg !13152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !13153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13157, metadata !DIExpression()), !dbg !13159
  call void @llvm.dbg.value(metadata i32 %1, metadata !13158, metadata !DIExpression()), !dbg !13159
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13160
  ret i1 %3, !dbg !13161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !13162 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13164, metadata !DIExpression()), !dbg !13165
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13166
  ret i1 %2, !dbg !13167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !13168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13170, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.value(metadata i32 %1, metadata !13171, metadata !DIExpression()), !dbg !13172
  %3 = icmp slt i32 %0, %1, !dbg !13173
  ret i1 %3, !dbg !13174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13175 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13177, metadata !DIExpression()), !dbg !13181
  call void @llvm.dbg.value(metadata i32 0, metadata !13178, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13183
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13185, !srcloc !12706
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13185
  call void @llvm.dbg.value(metadata i32 %3, metadata !12703, metadata !DIExpression()) #23, !dbg !13187
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13187
  call void @llvm.dbg.value(metadata i32 %3, metadata !12697, metadata !DIExpression()) #23, !dbg !13183
  call void @llvm.dbg.value(metadata i32 %3, metadata !13180, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.value(metadata i32 undef, metadata !13178, metadata !DIExpression()), !dbg !13182
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13188
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #23, !dbg !13193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13193
  call void @llvm.dbg.value(metadata i32 %3, metadata !12726, metadata !DIExpression()) #23, !dbg !13195
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13197, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 1, metadata !13178, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.value(metadata i32 undef, metadata !13178, metadata !DIExpression()), !dbg !13182
  ret void, !dbg !13198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13199 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13201, metadata !DIExpression()), !dbg !13202
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13203
  br i1 %2, label %24, label %3, !dbg !13205

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !13206
  br i1 %4, label %5, label %24, !dbg !13207

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12877, metadata !DIExpression()) #23, !dbg !13208
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13211
  %7 = load i8, i8* %6, align 1, !dbg !13212
  %8 = or i8 %7, -128, !dbg !13212
  store i8 %8, i8* %6, align 1, !dbg !13212
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12884, metadata !DIExpression()) #23, !dbg !13213
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12891, metadata !DIExpression()) #23, !dbg !13215
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12897, metadata !DIExpression()) #23, !dbg !13215
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !13217
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !12898, metadata !DIExpression()) #23, !dbg !13215
  %10 = icmp eq %struct._dnode* %9, null, !dbg !13218
  br i1 %10, label %21, label %11, !dbg !13217

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12898, metadata !DIExpression()) #23, !dbg !13215
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !13219
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12898, metadata !DIExpression()) #23, !dbg !13215
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #26, !dbg !13220
  %15 = icmp sgt i32 %14, 0, !dbg !13221
  br i1 %15, label %16, label %18, !dbg !13222

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13223
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #26, !dbg !13224
  br label %23, !dbg !13225

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #26, !dbg !13218
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !12898, metadata !DIExpression()) #23, !dbg !13215
  %20 = icmp eq %struct._dnode* %19, null, !dbg !13218
  br i1 %20, label %21, label %11, !dbg !13217, !llvm.loop !13226

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13228
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #26, !dbg !13229
  br label %23, !dbg !13230

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !13231
  br label %24, !dbg !13232

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !13233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #6 !dbg !13234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13236, metadata !DIExpression()), !dbg !13237
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !13238
  br i1 %2, label %6, label %3, !dbg !13239

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !13240
  %5 = xor i1 %4, true, !dbg !13239
  br label %6, !dbg !13239

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !13241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13244, metadata !DIExpression()), !dbg !13248
  call void @llvm.dbg.value(metadata i32 0, metadata !13245, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13250
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13252, !srcloc !12706
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13252
  call void @llvm.dbg.value(metadata i32 %3, metadata !12703, metadata !DIExpression()) #23, !dbg !13254
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13254
  call void @llvm.dbg.value(metadata i32 %3, metadata !12697, metadata !DIExpression()) #23, !dbg !13250
  call void @llvm.dbg.value(metadata i32 %3, metadata !13247, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i32 undef, metadata !13245, metadata !DIExpression()), !dbg !13249
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !13255
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #23, !dbg !13258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13258
  call void @llvm.dbg.value(metadata i32 %3, metadata !12726, metadata !DIExpression()) #23, !dbg !13260
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13262, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 1, metadata !13245, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i32 undef, metadata !13245, metadata !DIExpression()), !dbg !13249
  ret void, !dbg !13263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13264 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13266, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13269
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13271, !srcloc !12706
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13271
  call void @llvm.dbg.value(metadata i32 %3, metadata !12703, metadata !DIExpression()) #23, !dbg !13273
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13273
  call void @llvm.dbg.value(metadata i32 %3, metadata !12697, metadata !DIExpression()) #23, !dbg !13269
  call void @llvm.dbg.value(metadata i32 %3, metadata !13267, metadata !DIExpression()), !dbg !13268
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !13274
  br i1 %4, label %5, label %6, !dbg !13276

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #23, !dbg !13277
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13277
  call void @llvm.dbg.value(metadata i32 %3, metadata !12726, metadata !DIExpression()) #23, !dbg !13280
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13282, !srcloc !12732
  br label %8, !dbg !13283

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.144(%struct.k_thread* noundef %0) #24, !dbg !13284
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13285
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13286
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !13286
  br label %8, !dbg !13287

8:                                                ; preds = %6, %5
  ret void, !dbg !13287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #6 !dbg !13288 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13290, metadata !DIExpression()), !dbg !13291
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13292
  %3 = load i8, i8* %2, align 1, !dbg !13292
  %4 = and i8 %3, 4, !dbg !13293
  %5 = icmp eq i8 %4, 0, !dbg !13294
  ret i1 %5, !dbg !13295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.144(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13298, metadata !DIExpression()), !dbg !13299
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13300
  %3 = load i8, i8* %2, align 1, !dbg !13301
  %4 = and i8 %3, -5, !dbg !13301
  store i8 %4, i8* %2, align 1, !dbg !13301
  ret void, !dbg !13302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !13303 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !13306, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13305, metadata !DIExpression()), !dbg !13307
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !13308
  br i1 %4, label %5, label %9, !dbg !13310

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !13311
  br i1 %6, label %7, label %9, !dbg !13312

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !13313, metadata !DIExpression()) #23, !dbg !13319
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13318, metadata !DIExpression()) #23, !dbg !13319
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !13322
  br label %10, !dbg !13323

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #23, !dbg !13324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13324
  call void @llvm.dbg.value(metadata i32 %3, metadata !12726, metadata !DIExpression()) #23, !dbg !13327
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13329, !srcloc !12732
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !13330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !13331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13335, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.value(metadata i32 %0, metadata !13337, metadata !DIExpression()), !dbg !13342
  %2 = icmp eq i32 %0, 0, !dbg !13344
  br i1 %2, label %3, label %6, !dbg !13345

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13346, !srcloc !13353
  call void @llvm.dbg.value(metadata i32 %4, metadata !13349, metadata !DIExpression()) #23, !dbg !13354
  %5 = icmp eq i32 %4, 0, !dbg !13355
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !13336
  ret i1 %7, !dbg !13356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #6 !dbg !13357 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13360
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13359, metadata !DIExpression()), !dbg !13361
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13362
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !13363
  ret i1 %3, !dbg !13364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !13365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13367, metadata !DIExpression()), !dbg !13369
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !13370
  call void @llvm.dbg.value(metadata i32 %2, metadata !13368, metadata !DIExpression()), !dbg !13369
  ret i32 %2, !dbg !13371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13372 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13374, metadata !DIExpression()), !dbg !13378
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13379
  call void @llvm.dbg.value(metadata i32 0, metadata !13375, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13381
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13383, !srcloc !12706
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13383
  call void @llvm.dbg.value(metadata i32 %4, metadata !12703, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 %4, metadata !12697, metadata !DIExpression()) #23, !dbg !13381
  call void @llvm.dbg.value(metadata i32 %4, metadata !13377, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()), !dbg !13380
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13386
  br i1 %5, label %6, label %10, !dbg !13390

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12860, metadata !DIExpression()) #23, !dbg !13391
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13394
  %8 = load i8, i8* %7, align 1, !dbg !13395
  %9 = and i8 %8, 127, !dbg !13395
  store i8 %9, i8* %7, align 1, !dbg !13395
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12868, metadata !DIExpression()) #23, !dbg !13396
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !13398
  br label %10, !dbg !13399

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !13400
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13401
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !13402
  %13 = zext i1 %12 to i32, !dbg !13402
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !13403
  call void @llvm.dbg.value(metadata i32 %4, metadata !12718, metadata !DIExpression()) #23, !dbg !13404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13404
  call void @llvm.dbg.value(metadata i32 %4, metadata !12726, metadata !DIExpression()) #23, !dbg !13406
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13408, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 1, metadata !13375, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()), !dbg !13380
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13409
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !13411
  br i1 %15, label %16, label %17, !dbg !13412

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13413
  br label %17, !dbg !13415

17:                                               ; preds = %16, %10
  ret void, !dbg !13416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13417 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13419, metadata !DIExpression()), !dbg !13420
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 8, !dbg !13421
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13422
  ret i32 %3, !dbg !13423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13426, metadata !DIExpression()), !dbg !13427
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13428
  %3 = load i8, i8* %2, align 1, !dbg !13429
  %4 = or i8 %3, 16, !dbg !13429
  store i8 %4, i8* %2, align 1, !dbg !13429
  ret void, !dbg !13430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13431 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13432, !srcloc !12706
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13432
  call void @llvm.dbg.value(metadata i32 %2, metadata !12703, metadata !DIExpression()) #23, !dbg !13434
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13434
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !13435
  ret void, !dbg !13436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13439, metadata !DIExpression()), !dbg !13440
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !13441
  br i1 %2, label %3, label %5, !dbg !13443

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !13444
  br label %6, !dbg !13446

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12726, metadata !DIExpression()) #23, !dbg !13447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !13450, !srcloc !12732
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13451
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13452 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13454, metadata !DIExpression()), !dbg !13456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13457
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13459, !srcloc !12706
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %3, metadata !12703, metadata !DIExpression()) #23, !dbg !13461
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13461
  call void @llvm.dbg.value(metadata i32 %3, metadata !12697, metadata !DIExpression()) #23, !dbg !13457
  call void @llvm.dbg.value(metadata i32 %3, metadata !13455, metadata !DIExpression()), !dbg !13456
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !13462
  br i1 %4, label %6, label %5, !dbg !13464

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #23, !dbg !13465
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13465
  call void @llvm.dbg.value(metadata i32 %3, metadata !12726, metadata !DIExpression()) #23, !dbg !13468
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13470, !srcloc !12732
  br label %8, !dbg !13471

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !13472
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13473
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13474
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !13474
  br label %8, !dbg !13475

8:                                                ; preds = %6, %5
  ret void, !dbg !13475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #6 !dbg !13476 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13478, metadata !DIExpression()), !dbg !13479
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13480
  %3 = load i8, i8* %2, align 1, !dbg !13480
  %4 = and i8 %3, 16, !dbg !13481
  %5 = icmp ne i8 %4, 0, !dbg !13482
  ret i1 %5, !dbg !13483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13484 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13486, metadata !DIExpression()), !dbg !13487
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13488
  %3 = load i8, i8* %2, align 1, !dbg !13489
  %4 = and i8 %3, -17, !dbg !13489
  store i8 %4, i8* %2, align 1, !dbg !13489
  ret void, !dbg !13490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13491 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13501, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13499, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !13500, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata i32 0, metadata !13502, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13507
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13509, !srcloc !12706
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13509
  call void @llvm.dbg.value(metadata i32 %5, metadata !12703, metadata !DIExpression()) #23, !dbg !13511
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13511
  call void @llvm.dbg.value(metadata i32 %5, metadata !12697, metadata !DIExpression()) #23, !dbg !13507
  call void @llvm.dbg.value(metadata i32 %5, metadata !13504, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i32 undef, metadata !13502, metadata !DIExpression()), !dbg !13506
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !13512
  call void @llvm.dbg.value(metadata i32 %5, metadata !12718, metadata !DIExpression()) #23, !dbg !13515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13515
  call void @llvm.dbg.value(metadata i32 %5, metadata !12726, metadata !DIExpression()) #23, !dbg !13517
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !13519, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 1, metadata !13502, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i32 undef, metadata !13502, metadata !DIExpression()), !dbg !13506
  ret void, !dbg !13520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13521 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13525, metadata !DIExpression()), !dbg !13526
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13523, metadata !DIExpression()), !dbg !13526
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !13524, metadata !DIExpression()), !dbg !13526
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !13527
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !13528
  ret void, !dbg !13529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !13530 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13534, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !13535, metadata !DIExpression()), !dbg !13536
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !13537
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !13538
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !13539
  br i1 %3, label %21, label %4, !dbg !13541

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13542
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !13544
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !13545
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12891, metadata !DIExpression()) #23, !dbg !13546
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12897, metadata !DIExpression()) #23, !dbg !13546
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #26, !dbg !13548
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12898, metadata !DIExpression()) #23, !dbg !13546
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13549
  br i1 %8, label %19, label %9, !dbg !13548

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12898, metadata !DIExpression()) #23, !dbg !13546
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13550
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !12898, metadata !DIExpression()) #23, !dbg !13546
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #26, !dbg !13551
  %13 = icmp sgt i32 %12, 0, !dbg !13552
  br i1 %13, label %14, label %16, !dbg !13553

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13554
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #26, !dbg !13555
  br label %21, !dbg !13556

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #26, !dbg !13549
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12898, metadata !DIExpression()) #23, !dbg !13546
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13549
  br i1 %18, label %19, label %9, !dbg !13548, !llvm.loop !13557

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13559
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #26, !dbg !13560
  br label %21, !dbg !13561

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13563 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13568, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13567, metadata !DIExpression()), !dbg !13569
  %4 = icmp eq i64 %3, -1, !dbg !13570
  br i1 %4, label %6, label %5, !dbg !13572

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.147(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13573
  br label %6, !dbg !13575

6:                                                ; preds = %5, %2
  ret void, !dbg !13576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.147(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13577 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13580, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13579, metadata !DIExpression()), !dbg !13581
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 8, !dbg !13582
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !13583
  ret void, !dbg !13584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13585 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13587, metadata !DIExpression()), !dbg !13595
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -2, i32 2, !dbg !13596
  %3 = bitcast i64* %2 to %struct.k_thread*, !dbg !13596
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13588, metadata !DIExpression()), !dbg !13595
  call void @llvm.dbg.value(metadata i32 0, metadata !13589, metadata !DIExpression()), !dbg !13597
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13598
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13600, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 undef, metadata !12703, metadata !DIExpression()) #23, !dbg !13602
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13602
  call void @llvm.dbg.value(metadata i32 undef, metadata !12697, metadata !DIExpression()) #23, !dbg !13598
  call void @llvm.dbg.value(metadata i32 undef, metadata !13591, metadata !DIExpression()), !dbg !13597
  call void @llvm.dbg.value(metadata i32 undef, metadata !13589, metadata !DIExpression()), !dbg !13597
  %5 = bitcast i64* %2 to %struct._thread_base*, !dbg !13603
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13604
  %7 = load i8, i8* %6, align 1, !dbg !13604
  %8 = and i8 %7, 40, !dbg !13605
  %9 = icmp eq i8 %8, 0, !dbg !13605
  call void @llvm.dbg.value(metadata i1 %9, metadata !13592, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13606
  br i1 %9, label %10, label %17, !dbg !13607

10:                                               ; preds = %1
  %11 = getelementptr inbounds i64, i64* %2, i32 1, !dbg !13608
  %12 = bitcast i64* %11 to %struct._wait_q_t**, !dbg !13608
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !13608
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !13612
  br i1 %14, label %16, label %15, !dbg !13613

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !13614
  br label %16, !dbg !13616

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.144(%struct.k_thread* noundef nonnull %3) #24, !dbg !13617
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !13618
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !13619
  br label %17, !dbg !13620

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13600
  call void @llvm.dbg.value(metadata i32 %18, metadata !12703, metadata !DIExpression()) #23, !dbg !13602
  call void @llvm.dbg.value(metadata i32 %18, metadata !12697, metadata !DIExpression()) #23, !dbg !13598
  call void @llvm.dbg.value(metadata i32 %18, metadata !13591, metadata !DIExpression()), !dbg !13597
  call void @llvm.dbg.value(metadata i32 undef, metadata !12718, metadata !DIExpression()) #23, !dbg !13621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13621
  call void @llvm.dbg.value(metadata i32 undef, metadata !12726, metadata !DIExpression()) #23, !dbg !13623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13625, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 1, metadata !13589, metadata !DIExpression()), !dbg !13597
  call void @llvm.dbg.value(metadata i32 undef, metadata !13589, metadata !DIExpression()), !dbg !13597
  ret void, !dbg !13626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13627 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13629, metadata !DIExpression()), !dbg !13630
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13631
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !13632
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13633
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !13634
  ret void, !dbg !13635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13636 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13638, metadata !DIExpression()), !dbg !13639
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13640
  %3 = load i8, i8* %2, align 1, !dbg !13641
  %4 = and i8 %3, -3, !dbg !13641
  store i8 %4, i8* %2, align 1, !dbg !13641
  ret void, !dbg !13642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13645, metadata !DIExpression()), !dbg !13646
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13647
  br i1 %2, label %3, label %7, !dbg !13649

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12860, metadata !DIExpression()) #23, !dbg !13650
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13653
  %5 = load i8, i8* %4, align 1, !dbg !13654
  %6 = and i8 %5, 127, !dbg !13654
  store i8 %6, i8* %4, align 1, !dbg !13654
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12868, metadata !DIExpression()) #23, !dbg !13655
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !13657
  br label %7, !dbg !13658

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13659
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13660
  %10 = zext i1 %9 to i32, !dbg !13660
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !13661
  ret void, !dbg !13662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13663 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13665, metadata !DIExpression()), !dbg !13666
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13667
  %3 = load i8, i8* %2, align 1, !dbg !13668
  %4 = or i8 %3, 2, !dbg !13668
  store i8 %4, i8* %2, align 1, !dbg !13668
  ret void, !dbg !13669
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !13670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13672, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.value(metadata i32 0, metadata !13673, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13678
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13680, !srcloc !12706
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13680
  call void @llvm.dbg.value(metadata i32 %3, metadata !12703, metadata !DIExpression()) #23, !dbg !13682
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13682
  call void @llvm.dbg.value(metadata i32 %3, metadata !12697, metadata !DIExpression()) #23, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %3, metadata !13675, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata i32 undef, metadata !13673, metadata !DIExpression()), !dbg !13677
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13683
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #23, !dbg !13686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13686
  call void @llvm.dbg.value(metadata i32 %3, metadata !12726, metadata !DIExpression()) #23, !dbg !13688
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13690, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 1, metadata !13673, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata i32 undef, metadata !13673, metadata !DIExpression()), !dbg !13677
  ret void, !dbg !13691
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13692 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13698, metadata !DIExpression()), !dbg !13703
  call void @llvm.dbg.value(metadata i32 %0, metadata !13696, metadata !DIExpression()), !dbg !13703
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !13697, metadata !DIExpression()), !dbg !13703
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13704
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !13705
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13706
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13707
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !13708
  call void @llvm.dbg.value(metadata i32 %6, metadata !13699, metadata !DIExpression()), !dbg !13703
  call void @llvm.dbg.value(metadata i32 0, metadata !13700, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13710
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13712, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 undef, metadata !12703, metadata !DIExpression()) #23, !dbg !13714
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13714
  call void @llvm.dbg.value(metadata i32 undef, metadata !12697, metadata !DIExpression()) #23, !dbg !13710
  call void @llvm.dbg.value(metadata i32 undef, metadata !13702, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()), !dbg !13709
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13715
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13719
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13720
  br i1 %10, label %11, label %12, !dbg !13721

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13722
  br label %12, !dbg !13724

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13712
  call void @llvm.dbg.value(metadata i32 %13, metadata !12703, metadata !DIExpression()) #23, !dbg !13714
  call void @llvm.dbg.value(metadata i32 %13, metadata !12697, metadata !DIExpression()) #23, !dbg !13710
  call void @llvm.dbg.value(metadata i32 %13, metadata !13702, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata i32 undef, metadata !12718, metadata !DIExpression()) #23, !dbg !13725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13725
  call void @llvm.dbg.value(metadata i32 undef, metadata !12726, metadata !DIExpression()) #23, !dbg !13727
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !13729, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 1, metadata !13700, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()), !dbg !13709
  ret i32 %6, !dbg !13730
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13731 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13736, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata i64 undef, metadata !13738, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13735, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !13737, metadata !DIExpression()), !dbg !13739
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13740
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13742
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13744, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 undef, metadata !12703, metadata !DIExpression()) #23, !dbg !13746
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13746
  call void @llvm.dbg.value(metadata i32 undef, metadata !12697, metadata !DIExpression()) #23, !dbg !13742
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13747
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !13748
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !13313, metadata !DIExpression()) #23, !dbg !13749
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13318, metadata !DIExpression()) #23, !dbg !13749
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #26, !dbg !13751
  ret i32 %9, !dbg !13752
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !13753 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13757, metadata !DIExpression()), !dbg !13762
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13758, metadata !DIExpression()), !dbg !13762
  call void @llvm.dbg.value(metadata i32 0, metadata !13759, metadata !DIExpression()), !dbg !13763
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13764
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13766, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 undef, metadata !12703, metadata !DIExpression()) #23, !dbg !13768
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13768
  call void @llvm.dbg.value(metadata i32 undef, metadata !12697, metadata !DIExpression()) #23, !dbg !13764
  call void @llvm.dbg.value(metadata i32 undef, metadata !13761, metadata !DIExpression()), !dbg !13763
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13758, metadata !DIExpression()), !dbg !13762
  call void @llvm.dbg.value(metadata i32 undef, metadata !13759, metadata !DIExpression()), !dbg !13763
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !13769
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13758, metadata !DIExpression()), !dbg !13762
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13772
  br i1 %5, label %7, label %6, !dbg !13774

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13775
  br label %7, !dbg !13777

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13766
  call void @llvm.dbg.value(metadata i32 %8, metadata !12703, metadata !DIExpression()) #23, !dbg !13768
  call void @llvm.dbg.value(metadata i32 %8, metadata !12697, metadata !DIExpression()) #23, !dbg !13764
  call void @llvm.dbg.value(metadata i32 %8, metadata !13761, metadata !DIExpression()), !dbg !13763
  call void @llvm.dbg.value(metadata i32 undef, metadata !12718, metadata !DIExpression()) #23, !dbg !13778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13778
  call void @llvm.dbg.value(metadata i32 undef, metadata !12726, metadata !DIExpression()) #23, !dbg !13780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13782, !srcloc !12732
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13758, metadata !DIExpression()), !dbg !13762
  call void @llvm.dbg.value(metadata i32 undef, metadata !13759, metadata !DIExpression()), !dbg !13763
  ret %struct.k_thread* %4, !dbg !13783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #6 !dbg !13784 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13786, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13787, metadata !DIExpression()), !dbg !13789
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !13790
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13788, metadata !DIExpression()), !dbg !13789
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13787, metadata !DIExpression()), !dbg !13789
  ret %struct.k_thread* %3, !dbg !13791
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !13792 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13794, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13795, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata i32 0, metadata !13796, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13801
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13803, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 undef, metadata !12703, metadata !DIExpression()) #23, !dbg !13805
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13805
  call void @llvm.dbg.value(metadata i32 undef, metadata !12697, metadata !DIExpression()) #23, !dbg !13801
  call void @llvm.dbg.value(metadata i32 undef, metadata !13798, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13795, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata i32 undef, metadata !13796, metadata !DIExpression()), !dbg !13800
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !13806
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13795, metadata !DIExpression()), !dbg !13799
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13809
  br i1 %5, label %8, label %6, !dbg !13811

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13812
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13814
  br label %8, !dbg !13815

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13803
  call void @llvm.dbg.value(metadata i32 %9, metadata !12703, metadata !DIExpression()) #23, !dbg !13805
  call void @llvm.dbg.value(metadata i32 %9, metadata !12697, metadata !DIExpression()) #23, !dbg !13801
  call void @llvm.dbg.value(metadata i32 %9, metadata !13798, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i32 undef, metadata !12718, metadata !DIExpression()) #23, !dbg !13816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13816
  call void @llvm.dbg.value(metadata i32 undef, metadata !12726, metadata !DIExpression()) #23, !dbg !13818
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13820, !srcloc !12732
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13795, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata i32 undef, metadata !13796, metadata !DIExpression()), !dbg !13800
  ret %struct.k_thread* %4, !dbg !13821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13822 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13824, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13672, metadata !DIExpression()) #23, !dbg !13826
  call void @llvm.dbg.value(metadata i32 0, metadata !13673, metadata !DIExpression()) #23, !dbg !13828
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13829
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13831, !srcloc !12706
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13831
  call void @llvm.dbg.value(metadata i32 %3, metadata !12703, metadata !DIExpression()) #23, !dbg !13833
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13833
  call void @llvm.dbg.value(metadata i32 %3, metadata !12697, metadata !DIExpression()) #23, !dbg !13829
  call void @llvm.dbg.value(metadata i32 %3, metadata !13675, metadata !DIExpression()) #23, !dbg !13828
  call void @llvm.dbg.value(metadata i32 undef, metadata !13673, metadata !DIExpression()) #23, !dbg !13828
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !13834
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #23, !dbg !13835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13835
  call void @llvm.dbg.value(metadata i32 %3, metadata !12726, metadata !DIExpression()) #23, !dbg !13837
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13839, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 1, metadata !13673, metadata !DIExpression()) #23, !dbg !13828
  call void @llvm.dbg.value(metadata i32 undef, metadata !13673, metadata !DIExpression()) #23, !dbg !13828
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13840
  ret void, !dbg !13841
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13842 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13844, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata i32 %1, metadata !13845, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata i8 0, metadata !13846, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata i32 0, metadata !13847, metadata !DIExpression()), !dbg !13851
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13852
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13854, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 undef, metadata !12703, metadata !DIExpression()) #23, !dbg !13856
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13856
  call void @llvm.dbg.value(metadata i32 undef, metadata !12697, metadata !DIExpression()) #23, !dbg !13852
  call void @llvm.dbg.value(metadata i32 undef, metadata !13849, metadata !DIExpression()), !dbg !13851
  call void @llvm.dbg.value(metadata i8 poison, metadata !13846, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata i32 undef, metadata !13847, metadata !DIExpression()), !dbg !13851
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !13857
  call void @llvm.dbg.value(metadata i1 %6, metadata !13846, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13850
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !13860

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12860, metadata !DIExpression()) #23, !dbg !13861
  %11 = load i8, i8* %4, align 1, !dbg !13867
  %12 = and i8 %11, 127, !dbg !13867
  store i8 %12, i8* %4, align 1, !dbg !13867
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12868, metadata !DIExpression()) #23, !dbg !13868
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !13870
  store i8 %9, i8* %8, align 2, !dbg !13871
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12877, metadata !DIExpression()) #23, !dbg !13872
  %13 = load i8, i8* %4, align 1, !dbg !13874
  %14 = or i8 %13, -128, !dbg !13874
  store i8 %14, i8* %4, align 1, !dbg !13874
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12884, metadata !DIExpression()) #23, !dbg !13875
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12891, metadata !DIExpression()) #23, !dbg !13877
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12897, metadata !DIExpression()) #23, !dbg !13877
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !13879
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12898, metadata !DIExpression()) #23, !dbg !13877
  %16 = icmp eq %struct._dnode* %15, null, !dbg !13880
  br i1 %16, label %26, label %17, !dbg !13879

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !12898, metadata !DIExpression()) #23, !dbg !13877
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !13881
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !12898, metadata !DIExpression()) #23, !dbg !13877
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #26, !dbg !13882
  %21 = icmp sgt i32 %20, 0, !dbg !13883
  br i1 %21, label %22, label %23, !dbg !13884

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #26, !dbg !13885
  br label %27, !dbg !13886

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #26, !dbg !13880
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12898, metadata !DIExpression()) #23, !dbg !13877
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13880
  br i1 %25, label %26, label %17, !dbg !13879, !llvm.loop !13887

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #26, !dbg !13889
  br label %27, !dbg !13890

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13891
  br label %29, !dbg !13892

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !13893
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !13854
  call void @llvm.dbg.value(metadata i32 %30, metadata !12703, metadata !DIExpression()) #23, !dbg !13856
  call void @llvm.dbg.value(metadata i32 %30, metadata !12697, metadata !DIExpression()) #23, !dbg !13852
  call void @llvm.dbg.value(metadata i32 %30, metadata !13849, metadata !DIExpression()), !dbg !13851
  call void @llvm.dbg.value(metadata i32 undef, metadata !12718, metadata !DIExpression()) #23, !dbg !13895
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13895
  call void @llvm.dbg.value(metadata i32 undef, metadata !12726, metadata !DIExpression()) #23, !dbg !13897
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !13899, !srcloc !12732
  call void @llvm.dbg.value(metadata i8 poison, metadata !13846, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata i32 undef, metadata !13847, metadata !DIExpression()), !dbg !13851
  ret i1 %6, !dbg !13900
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13901 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13905, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i32 %1, metadata !13906, metadata !DIExpression()), !dbg !13908
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13909
  call void @llvm.dbg.value(metadata i1 %3, metadata !13907, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13908
  br i1 %3, label %4, label %12, !dbg !13910

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13912
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13913
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13913
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13913
  %9 = load i8, i8* %8, align 1, !dbg !13913
  %10 = icmp eq i8 %9, 0, !dbg !13914
  br i1 %10, label %11, label %12, !dbg !13915

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13916
  br label %12, !dbg !13918

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13919
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13920 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13922, metadata !DIExpression()), !dbg !13925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13926
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13928, !srcloc !12706
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13928
  call void @llvm.dbg.value(metadata i32 %2, metadata !12703, metadata !DIExpression()) #23, !dbg !13930
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13930
  call void @llvm.dbg.value(metadata i32 %2, metadata !12697, metadata !DIExpression()) #23, !dbg !13926
  call void @llvm.dbg.value(metadata i32 %2, metadata !13924, metadata !DIExpression()), !dbg !13925
  call void @llvm.dbg.value(metadata i32 undef, metadata !13922, metadata !DIExpression()), !dbg !13925
  tail call fastcc void @z_sched_lock() #24, !dbg !13931
  call void @llvm.dbg.value(metadata i32 %2, metadata !12718, metadata !DIExpression()) #23, !dbg !13934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13934
  call void @llvm.dbg.value(metadata i32 %2, metadata !12726, metadata !DIExpression()) #23, !dbg !13936
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13938, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 1, metadata !13922, metadata !DIExpression()), !dbg !13925
  call void @llvm.dbg.value(metadata i32 undef, metadata !13922, metadata !DIExpression()), !dbg !13925
  ret void, !dbg !13939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13940 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13941
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13942
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !13942
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !13942
  %5 = load i8, i8* %4, align 1, !dbg !13943
  %6 = add i8 %5, -1, !dbg !13943
  store i8 %6, i8* %4, align 1, !dbg !13943
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13944, !srcloc !13946
  ret void, !dbg !13947
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13948 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13950, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !13954
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13956, !srcloc !12706
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13956
  call void @llvm.dbg.value(metadata i32 %2, metadata !12703, metadata !DIExpression()) #23, !dbg !13958
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !13958
  call void @llvm.dbg.value(metadata i32 %2, metadata !12697, metadata !DIExpression()) #23, !dbg !13954
  call void @llvm.dbg.value(metadata i32 %2, metadata !13952, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 undef, metadata !13950, metadata !DIExpression()), !dbg !13953
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13959
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !13962
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !13962
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13962
  %7 = load i8, i8* %6, align 1, !dbg !13963
  %8 = add i8 %7, 1, !dbg !13963
  store i8 %8, i8* %6, align 1, !dbg !13963
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !13964
  call void @llvm.dbg.value(metadata i32 %2, metadata !12718, metadata !DIExpression()) #23, !dbg !13965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !13965
  call void @llvm.dbg.value(metadata i32 %2, metadata !12726, metadata !DIExpression()) #23, !dbg !13967
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13969, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 1, metadata !13950, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 undef, metadata !13950, metadata !DIExpression()), !dbg !13953
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13970
  ret void, !dbg !13971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #6 !dbg !13972 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13973
  ret %struct.k_thread* %1, !dbg !13974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !13975 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13979, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13980, metadata !DIExpression()), !dbg !13984
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13985
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13981, metadata !DIExpression()), !dbg !13984
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13986
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13982, metadata !DIExpression()), !dbg !13984
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !13987
  call void @llvm.dbg.value(metadata i32 %5, metadata !13983, metadata !DIExpression()), !dbg !13984
  %6 = icmp sgt i32 %5, 0, !dbg !13988
  br i1 %6, label %17, label %7, !dbg !13990

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13991
  br i1 %8, label %17, label %9, !dbg !13993

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13994
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13994
  %12 = load i32, i32* %11, align 8, !dbg !13994
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13996
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13996
  %15 = load i32, i32* %14, align 8, !dbg !13996
  %16 = icmp ult i32 %12, %15, !dbg !13997
  br label %17, !dbg !13998

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13999
  ret i1 %18, !dbg !14000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14001 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14018, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14019, metadata !DIExpression()), !dbg !14033
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14034
  %5 = load i32, i32* %4, align 4, !dbg !14035
  %6 = add nsw i32 %5, 1, !dbg !14035
  store i32 %6, i32* %4, align 4, !dbg !14035
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14036
  store i32 %5, i32* %7, align 8, !dbg !14037
  %8 = load i32, i32* %4, align 4, !dbg !14038
  %9 = icmp eq i32 %8, 0, !dbg !14039
  br i1 %9, label %10, label %32, !dbg !14040

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14041
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !14041
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14021, metadata !DIExpression()), !dbg !14041
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14041
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14041
  %14 = load i32, i32* %13, align 4, !dbg !14041
  %15 = shl i32 %14, 2, !dbg !14041
  %16 = alloca i8, i32 %15, align 8, !dbg !14041
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14041
  store i8* %16, i8** %17, align 4, !dbg !14041
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14041
  %19 = alloca i8, i32 %14, align 8, !dbg !14041
  store i8* %19, i8** %18, align 4, !dbg !14041
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14041
  store i32 -1, i32* %20, align 4, !dbg !14041
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !14042
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14030, metadata !DIExpression()), !dbg !14043
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14020, metadata !DIExpression()), !dbg !14033
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14044
  br i1 %22, label %23, label %24, !dbg !14041

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !14044
  br label %32, !dbg !14045

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14020, metadata !DIExpression()), !dbg !14033
  %26 = load i32, i32* %4, align 4, !dbg !14046
  %27 = add nsw i32 %26, 1, !dbg !14046
  store i32 %27, i32* %4, align 4, !dbg !14046
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14048
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14048
  store i32 %26, i32* %29, align 8, !dbg !14049
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !14042
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14030, metadata !DIExpression()), !dbg !14043
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14020, metadata !DIExpression()), !dbg !14033
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14044
  br i1 %31, label %23, label %24, !dbg !14041, !llvm.loop !14050

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14052
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14053
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #26, !dbg !14054
  ret void, !dbg !14055
}

; Function Attrs: optsize
declare !dbg !14056 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14061 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14064 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14066, metadata !DIExpression()), !dbg !14068
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14067, metadata !DIExpression()), !dbg !14068
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14069
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14070
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #26, !dbg !14071
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14072
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14072
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14074
  br i1 %7, label %8, label %10, !dbg !14075

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14076
  store i32 0, i32* %9, align 4, !dbg !14078
  br label %10, !dbg !14079

10:                                               ; preds = %8, %2
  ret void, !dbg !14080
}

; Function Attrs: optsize
declare !dbg !14081 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14082 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14086, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14087, metadata !DIExpression()), !dbg !14089
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14090
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !14091
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14088, metadata !DIExpression()), !dbg !14089
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14087, metadata !DIExpression()), !dbg !14089
  ret %struct.k_thread* %4, !dbg !14092
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14093 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14097, metadata !DIExpression()), !dbg !14098
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !14099
  ret %struct.rbnode* %2, !dbg !14100
}

; Function Attrs: optsize
declare !dbg !14101 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !14104 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14114, metadata !DIExpression()), !dbg !14118
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14119
  %3 = load i32, i32* %2, align 4, !dbg !14119
  %4 = icmp eq i32 %3, 0, !dbg !14121
  br i1 %4, label %10, label %5, !dbg !14122

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14115, metadata !DIExpression()), !dbg !14118
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14123, !range !6056
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14124
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14116, metadata !DIExpression()), !dbg !14118
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !14125
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14117, metadata !DIExpression()), !dbg !14118
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14115, metadata !DIExpression()), !dbg !14118
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14118
  ret %struct.k_thread* %11, !dbg !14126
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14127 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14131, metadata !DIExpression()), !dbg !14134
  call void @llvm.dbg.value(metadata i32 0, metadata !14132, metadata !DIExpression()), !dbg !14134
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !14135
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14133, metadata !DIExpression()), !dbg !14134
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14136
  br i1 %3, label %8, label %4, !dbg !14137

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !14138
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !14140
  call void @llvm.dbg.value(metadata i32 1, metadata !14132, metadata !DIExpression()), !dbg !14134
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !14135
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14133, metadata !DIExpression()), !dbg !14134
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14136
  br i1 %7, label %8, label %4, !dbg !14137, !llvm.loop !14141

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14134
  ret i32 %9, !dbg !14143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #6 !dbg !14144 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14146, metadata !DIExpression()), !dbg !14147
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14148
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !14149
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14150
  ret %struct.k_thread* %4, !dbg !14151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #5 !dbg !14152 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14161, metadata !DIExpression()), !dbg !14162
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !14163
  tail call fastcc void @sys_dlist_init.158(%struct._dnode* noundef nonnull %2) #24, !dbg !14164
  ret void, !dbg !14165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.158(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14166 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14170, metadata !DIExpression()), !dbg !14171
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14172
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14173
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14174
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14175
  ret void, !dbg !14176
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !14177 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !14178
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !14179
  ret void, !dbg !14180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !14181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14186, metadata !DIExpression()), !dbg !14187
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14188
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14188
  %4 = load i8, i8* %3, align 2, !dbg !14188
  %5 = sext i8 %4 to i32, !dbg !14189
  ret i32 %5, !dbg !14190
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14191 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14195, metadata !DIExpression()), !dbg !14198
  call void @llvm.dbg.value(metadata i32 %1, metadata !14196, metadata !DIExpression()), !dbg !14198
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14197, metadata !DIExpression()), !dbg !14198
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !14199
  ret void, !dbg !14200
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !14201 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !14202
  br i1 %1, label %8, label %2, !dbg !14203

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !14204
  br i1 %3, label %8, label %4, !dbg !14205

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14206
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !14207
  %7 = xor i1 %6, true, !dbg !14205
  br label %8, !dbg !14205

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !14208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #6 !dbg !14209 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14210, !range !5474
  %2 = icmp eq i8 %1, 0, !dbg !14210
  ret i1 %2, !dbg !14211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !14212 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !14215
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14217, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 undef, metadata !12703, metadata !DIExpression()) #23, !dbg !14219
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !14219
  call void @llvm.dbg.value(metadata i32 undef, metadata !12697, metadata !DIExpression()) #23, !dbg !14215
  call void @llvm.dbg.value(metadata i32 undef, metadata !14214, metadata !DIExpression()), !dbg !14220
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14221
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12860, metadata !DIExpression()) #23, !dbg !14224
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !14226
  %4 = load i8, i8* %3, align 1, !dbg !14227
  %5 = and i8 %4, 127, !dbg !14227
  store i8 %5, i8* %3, align 1, !dbg !14227
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12868, metadata !DIExpression()) #23, !dbg !14228
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #26, !dbg !14230
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14231
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12877, metadata !DIExpression()) #23, !dbg !14232
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !14234
  %8 = load i8, i8* %7, align 1, !dbg !14235
  %9 = or i8 %8, -128, !dbg !14235
  store i8 %9, i8* %7, align 1, !dbg !14235
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12884, metadata !DIExpression()) #23, !dbg !14236
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12891, metadata !DIExpression()) #23, !dbg !14238
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12897, metadata !DIExpression()) #23, !dbg !14238
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14240
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12898, metadata !DIExpression()) #23, !dbg !14238
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14241
  br i1 %11, label %22, label %12, !dbg !14240

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12898, metadata !DIExpression()) #23, !dbg !14238
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14242
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12898, metadata !DIExpression()) #23, !dbg !14238
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #26, !dbg !14243
  %16 = icmp sgt i32 %15, 0, !dbg !14244
  br i1 %16, label %17, label %19, !dbg !14245

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14246
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !14247
  br label %24, !dbg !14248

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #26, !dbg !14241
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12898, metadata !DIExpression()) #23, !dbg !14238
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14241
  br i1 %21, label %22, label %12, !dbg !14240, !llvm.loop !14249

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14251
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #26, !dbg !14252
  br label %24, !dbg !14253

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !14217
  call void @llvm.dbg.value(metadata i32 %25, metadata !12703, metadata !DIExpression()) #23, !dbg !14219
  call void @llvm.dbg.value(metadata i32 %25, metadata !12697, metadata !DIExpression()) #23, !dbg !14215
  call void @llvm.dbg.value(metadata i32 %25, metadata !14214, metadata !DIExpression()), !dbg !14220
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !14254
  call void @llvm.dbg.value(metadata i32 undef, metadata !13313, metadata !DIExpression()) #23, !dbg !14255
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13318, metadata !DIExpression()) #23, !dbg !14255
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #26, !dbg !14257
  ret void, !dbg !14258
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !14259 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14263, metadata !DIExpression()), !dbg !14266
  %3 = icmp eq i64 %2, -1, !dbg !14267
  br i1 %3, label %4, label %6, !dbg !14269

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14270
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !14272
  br label %11, !dbg !14273

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14264, metadata !DIExpression()), !dbg !14266
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !14274
  %8 = sext i32 %7 to i64, !dbg !14274
  call void @llvm.dbg.value(metadata i64 %8, metadata !14264, metadata !DIExpression()), !dbg !14266
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !14275
  %10 = trunc i64 %9 to i32, !dbg !14275
  call void @llvm.dbg.value(metadata i32 %10, metadata !14265, metadata !DIExpression()), !dbg !14266
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !14266
  ret i32 %12, !dbg !14276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14277 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14281, metadata !DIExpression()), !dbg !14282
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14283, !srcloc !14285
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !14286
  ret void, !dbg !14287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !14288 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14292, metadata !DIExpression()), !dbg !14296
  %2 = icmp eq i64 %0, 0, !dbg !14297
  br i1 %2, label %3, label %4, !dbg !14299

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #24, !dbg !14300
  br label %29, !dbg !14302

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !14294, metadata !DIExpression()), !dbg !14296
  %5 = icmp sgt i64 %0, -3, !dbg !14303
  br i1 %5, label %6, label %10, !dbg !14305

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !14306
  %8 = trunc i64 %0 to i32, !dbg !14308
  %9 = add i32 %7, %8, !dbg !14308
  call void @llvm.dbg.value(metadata i32 %9, metadata !14293, metadata !DIExpression()), !dbg !14296
  br label %13, !dbg !14309

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !14310
  %12 = sub i32 -2, %11, !dbg !14310
  call void @llvm.dbg.value(metadata i32 %12, metadata !14293, metadata !DIExpression()), !dbg !14296
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !14312
  call void @llvm.dbg.value(metadata i32 %14, metadata !14293, metadata !DIExpression()), !dbg !14296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !14313
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14315, !srcloc !12706
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14315
  call void @llvm.dbg.value(metadata i32 %16, metadata !12703, metadata !DIExpression()) #23, !dbg !14317
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !14317
  call void @llvm.dbg.value(metadata i32 %16, metadata !12697, metadata !DIExpression()) #23, !dbg !14313
  call void @llvm.dbg.value(metadata i32 %16, metadata !14295, metadata !DIExpression()), !dbg !14296
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14318
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !14319
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !14320
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14321
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14322
  tail call fastcc void @z_add_thread_timeout.147(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !14322
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14323
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !14324
  call void @llvm.dbg.value(metadata i32 %16, metadata !13313, metadata !DIExpression()) #23, !dbg !14325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13318, metadata !DIExpression()) #23, !dbg !14325
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #26, !dbg !14327
  %22 = zext i32 %14 to i64, !dbg !14328
  %23 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !14329
  %24 = zext i32 %23 to i64, !dbg !14329
  %25 = sub nsw i64 %22, %24, !dbg !14330
  call void @llvm.dbg.value(metadata i64 %25, metadata !14292, metadata !DIExpression()), !dbg !14296
  %26 = icmp sgt i64 %25, 0, !dbg !14331
  %27 = select i1 %26, i64 %25, i64 0, !dbg !14331
  %28 = trunc i64 %27 to i32, !dbg !14331
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !14296
  ret i32 %30, !dbg !14332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !14333 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14335, metadata !DIExpression()), !dbg !14336
  call void @llvm.dbg.value(metadata i64 %0, metadata !12738, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.value(metadata i32 10000, metadata !12741, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.value(metadata i32 1000, metadata !12742, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.value(metadata i8 1, metadata !12743, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.value(metadata i1 false, metadata !12744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14337
  call void @llvm.dbg.value(metadata i1 false, metadata !12745, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14337
  call void @llvm.dbg.value(metadata i8 0, metadata !12746, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.value(metadata i1 false, metadata !12747, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14337
  call void @llvm.dbg.value(metadata i1 true, metadata !12748, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14337
  call void @llvm.dbg.value(metadata i64 0, metadata !12749, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.value(metadata i64 0, metadata !12749, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.value(metadata i64 %0, metadata !12738, metadata !DIExpression()), !dbg !14337
  %2 = udiv i64 %0, 10, !dbg !14339
  ret i64 %2, !dbg !14343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !14344 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14345, !srcloc !14347
  tail call void @z_impl_k_yield() #24, !dbg !14348
  ret void, !dbg !14349
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !14350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14354, metadata !DIExpression()), !dbg !14356
  %2 = sext i32 %0 to i64, !dbg !14357
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !14358
  call void @llvm.dbg.value(metadata i64 %3, metadata !14355, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14356
  %4 = shl i64 %3, 32, !dbg !14359
  %5 = ashr exact i64 %4, 32, !dbg !14359
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !14360
  call void @llvm.dbg.value(metadata i32 %6, metadata !14355, metadata !DIExpression()), !dbg !14356
  %7 = sext i32 %6 to i64, !dbg !14361
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !14362
  %9 = trunc i64 %8 to i32, !dbg !14362
  ret i32 %9, !dbg !14363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !14364 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14366, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i64 %0, metadata !12738, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12741, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 10000, metadata !12742, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i8 1, metadata !12743, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i1 false, metadata !12744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14368
  call void @llvm.dbg.value(metadata i1 true, metadata !12745, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14368
  call void @llvm.dbg.value(metadata i8 0, metadata !12746, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i1 false, metadata !12747, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14368
  call void @llvm.dbg.value(metadata i1 true, metadata !12748, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14368
  call void @llvm.dbg.value(metadata i64 0, metadata !12749, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i64 0, metadata !12749, metadata !DIExpression()), !dbg !14368
  %2 = add i64 %0, 99, !dbg !14370
  call void @llvm.dbg.value(metadata i64 %2, metadata !12738, metadata !DIExpression()), !dbg !14368
  %3 = udiv i64 %2, 100, !dbg !14371
  ret i64 %3, !dbg !14372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !14373 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14375, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i64 %0, metadata !12738, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.value(metadata i32 10000, metadata !12741, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12742, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.value(metadata i8 1, metadata !12743, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.value(metadata i1 false, metadata !12744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14377
  call void @llvm.dbg.value(metadata i1 false, metadata !12745, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14377
  call void @llvm.dbg.value(metadata i8 0, metadata !12746, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.value(metadata i1 true, metadata !12747, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14377
  call void @llvm.dbg.value(metadata i1 false, metadata !12748, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14377
  call void @llvm.dbg.value(metadata i64 0, metadata !12749, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.value(metadata i64 0, metadata !12749, metadata !DIExpression()), !dbg !14377
  %2 = mul i64 %0, 100, !dbg !14379
  ret i64 %2, !dbg !14381
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14384, metadata !DIExpression()), !dbg !14385
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !14386
  br i1 %2, label %14, label %3, !dbg !14388

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14389
  %5 = icmp slt i32 %4, 0, !dbg !14391
  br i1 %5, label %6, label %10, !dbg !14392

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14393
  %8 = load i8, i8* %7, align 1, !dbg !14393
  %9 = icmp eq i8 %8, 16, !dbg !14396
  br i1 %9, label %10, label %14, !dbg !14397

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14398
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14399
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14400, !srcloc !13353
  call void @llvm.dbg.value(metadata i32 %11, metadata !13349, metadata !DIExpression()) #23, !dbg !14404
  %12 = icmp eq i32 %11, 0, !dbg !14405
  br i1 %12, label %13, label %14, !dbg !14406

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14407
  br label %14, !dbg !14409

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #6 !dbg !14411 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14413, metadata !DIExpression()), !dbg !14414
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14415
  %3 = load i8, i8* %2, align 1, !dbg !14415
  %4 = and i8 %3, 2, !dbg !14416
  %5 = icmp ne i8 %4, 0, !dbg !14417
  ret i1 %5, !dbg !14418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #6 !dbg !14419 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14424
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14423, metadata !DIExpression()), !dbg !14425
  ret %struct.k_thread* %1, !dbg !14426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14427 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14428, !srcloc !13353
  call void @llvm.dbg.value(metadata i32 %1, metadata !13349, metadata !DIExpression()) #23, !dbg !14431
  %2 = icmp eq i32 %1, 0, !dbg !14432
  br i1 %2, label %3, label %8, !dbg !14433

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14434
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !14435
  %6 = icmp ne i32 %5, 0, !dbg !14433
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_thread_cpu_mask_clear(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #1 !dbg !14437 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14439, metadata !DIExpression()), !dbg !14440
  %2 = tail call fastcc i32 @cpu_mask_mod(%struct.k_thread* noundef %0, i32 noundef 0, i32 noundef -1) #24, !dbg !14441
  ret i32 %2, !dbg !14442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cpu_mask_mod(%struct.k_thread* nocapture noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !14443 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14447, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 %1, metadata !14448, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 %2, metadata !14449, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 0, metadata !14450, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 0, metadata !14451, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !14456
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14458, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 undef, metadata !12703, metadata !DIExpression()) #23, !dbg !14460
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !14460
  call void @llvm.dbg.value(metadata i32 undef, metadata !12697, metadata !DIExpression()) #23, !dbg !14456
  call void @llvm.dbg.value(metadata i32 undef, metadata !14453, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata i32 0, metadata !14450, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()), !dbg !14455
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6
  call void @llvm.dbg.value(metadata i32 0, metadata !14450, metadata !DIExpression()), !dbg !14454
  %6 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14461
  br i1 %6, label %7, label %14, !dbg !14465

7:                                                ; preds = %3
  %8 = trunc i32 %2 to i8
  %9 = xor i8 %8, -1
  %10 = trunc i32 %1 to i8
  %11 = load i8, i8* %5, align 4, !dbg !14466
  %12 = or i8 %11, %10, !dbg !14466
  %13 = and i8 %12, %9, !dbg !14468
  store i8 %13, i8* %5, align 4, !dbg !14468
  br label %14, !dbg !14469

14:                                               ; preds = %3, %7
  %15 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !14454
  %16 = extractvalue { i32, i32 } %4, 0, !dbg !14458
  call void @llvm.dbg.value(metadata i32 %16, metadata !12703, metadata !DIExpression()) #23, !dbg !14460
  call void @llvm.dbg.value(metadata i32 %16, metadata !12697, metadata !DIExpression()) #23, !dbg !14456
  call void @llvm.dbg.value(metadata i32 %16, metadata !14453, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata i32 %15, metadata !14450, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !12718, metadata !DIExpression()) #23, !dbg !14470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !14470
  call void @llvm.dbg.value(metadata i32 undef, metadata !12726, metadata !DIExpression()) #23, !dbg !14472
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !14474, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()), !dbg !14455
  ret i32 %15, !dbg !14475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_thread_cpu_mask_enable_all(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #1 !dbg !14476 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14478, metadata !DIExpression()), !dbg !14479
  %2 = tail call fastcc i32 @cpu_mask_mod(%struct.k_thread* noundef %0, i32 noundef -1, i32 noundef 0) #24, !dbg !14480
  ret i32 %2, !dbg !14481
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_thread_cpu_mask_enable(%struct.k_thread* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14486, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata i32 %1, metadata !14487, metadata !DIExpression()), !dbg !14488
  %3 = shl nuw i32 1, %1, !dbg !14489
  %4 = tail call fastcc i32 @cpu_mask_mod(%struct.k_thread* noundef %0, i32 noundef %3, i32 noundef 0) #24, !dbg !14490
  ret i32 %4, !dbg !14491
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_thread_cpu_mask_disable(%struct.k_thread* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14492 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14494, metadata !DIExpression()), !dbg !14496
  call void @llvm.dbg.value(metadata i32 %1, metadata !14495, metadata !DIExpression()), !dbg !14496
  %3 = shl nuw i32 1, %1, !dbg !14497
  %4 = tail call fastcc i32 @cpu_mask_mod(%struct.k_thread* noundef %0, i32 noundef 0, i32 noundef %3) #24, !dbg !14498
  ret i32 %4, !dbg !14499
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_thread_cpu_pin(%struct.k_thread* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14500 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14502, metadata !DIExpression()), !dbg !14505
  call void @llvm.dbg.value(metadata i32 %1, metadata !14503, metadata !DIExpression()), !dbg !14505
  %3 = tail call i32 @k_thread_cpu_mask_clear(%struct.k_thread* noundef %0) #24, !dbg !14506
  call void @llvm.dbg.value(metadata i32 %3, metadata !14504, metadata !DIExpression()), !dbg !14505
  %4 = icmp eq i32 %3, 0, !dbg !14507
  br i1 %4, label %5, label %7, !dbg !14509

5:                                                ; preds = %2
  %6 = tail call i32 @k_thread_cpu_mask_enable(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !14510
  br label %7, !dbg !14512

7:                                                ; preds = %2, %5
  %8 = phi i32 [ %6, %5 ], [ %3, %2 ], !dbg !14505
  ret i32 %8, !dbg !14513
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14514 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14516, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !14519
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14521, !srcloc !12706
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14521
  call void @llvm.dbg.value(metadata i32 %3, metadata !12703, metadata !DIExpression()) #23, !dbg !14523
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !14523
  call void @llvm.dbg.value(metadata i32 %3, metadata !12697, metadata !DIExpression()) #23, !dbg !14519
  call void @llvm.dbg.value(metadata i32 %3, metadata !14517, metadata !DIExpression()), !dbg !14518
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14524
  %5 = load i8, i8* %4, align 4, !dbg !14524
  %6 = and i8 %5, 1, !dbg !14526
  %7 = icmp eq i8 %6, 0, !dbg !14527
  br i1 %7, label %9, label %8, !dbg !14528

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #23, !dbg !14529
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !14529
  call void @llvm.dbg.value(metadata i32 %3, metadata !12726, metadata !DIExpression()) #23, !dbg !14532
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14534, !srcloc !12732
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !14535, !srcloc !14537
  br label %24, !dbg !14538

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14539
  %11 = load i8, i8* %10, align 1, !dbg !14539
  %12 = and i8 %11, 8, !dbg !14541
  %13 = icmp eq i8 %12, 0, !dbg !14542
  br i1 %13, label %15, label %14, !dbg !14543

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #23, !dbg !14544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !14544
  call void @llvm.dbg.value(metadata i32 %3, metadata !12726, metadata !DIExpression()) #23, !dbg !14547
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14549, !srcloc !12732
  br label %24, !dbg !14550

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !14551
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14552
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14554
  br i1 %17, label %18, label %23, !dbg !14555

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14556, !srcloc !13353
  call void @llvm.dbg.value(metadata i32 %19, metadata !13349, metadata !DIExpression()) #23, !dbg !14559
  %20 = icmp eq i32 %19, 0, !dbg !14560
  br i1 %20, label %21, label %23, !dbg !14561

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !13313, metadata !DIExpression()) #23, !dbg !14562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13318, metadata !DIExpression()) #23, !dbg !14562
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !14565
  br label %23, !dbg !14566

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #23, !dbg !14567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !14567
  call void @llvm.dbg.value(metadata i32 %3, metadata !12726, metadata !DIExpression()) #23, !dbg !14569
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14571, !srcloc !12732
  br label %24, !dbg !14572

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !14572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14573 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14575, metadata !DIExpression()), !dbg !14576
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14577
  %3 = load i8, i8* %2, align 1, !dbg !14577
  %4 = and i8 %3, 8, !dbg !14579
  %5 = icmp eq i8 %4, 0, !dbg !14580
  br i1 %5, label %6, label %20, !dbg !14581

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14582
  %8 = or i8 %7, 8, !dbg !14582
  store i8 %8, i8* %2, align 1, !dbg !14582
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !14584
  br i1 %9, label %10, label %12, !dbg !14586

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12860, metadata !DIExpression()) #23, !dbg !14587
  %11 = and i8 %8, 95, !dbg !14590
  store i8 %11, i8* %2, align 1, !dbg !14590
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12868, metadata !DIExpression()) #23, !dbg !14591
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !14593
  br label %12, !dbg !14594

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14595
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !14595
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !14597
  br i1 %15, label %17, label %16, !dbg !14598

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !14599
  br label %17, !dbg !14601

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !14602
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14603
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !14604
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !14605
  br label %20, !dbg !14606

20:                                               ; preds = %17, %1
  ret void, !dbg !14607
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !14608 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14612, metadata !DIExpression()), !dbg !14614
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !14615
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14613, metadata !DIExpression()), !dbg !14614
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14616
  br i1 %3, label %10, label %4, !dbg !14617

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !14618
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !14620
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14621, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.value(metadata i32 0, metadata !14626, metadata !DIExpression()), !dbg !14627
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !14629
  store i32 0, i32* %7, align 4, !dbg !14630
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !14631
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !14615
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14613, metadata !DIExpression()), !dbg !14614
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14616
  br i1 %9, label %10, label %4, !dbg !14617, !llvm.loop !14632

10:                                               ; preds = %4, %1
  ret void, !dbg !14634
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14635 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14640, metadata !DIExpression()), !dbg !14643
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14639, metadata !DIExpression()), !dbg !14643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !14644
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14646, !srcloc !12706
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14646
  call void @llvm.dbg.value(metadata i32 %4, metadata !12703, metadata !DIExpression()) #23, !dbg !14648
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !14648
  call void @llvm.dbg.value(metadata i32 %4, metadata !12697, metadata !DIExpression()) #23, !dbg !14644
  call void @llvm.dbg.value(metadata i32 %4, metadata !14641, metadata !DIExpression()), !dbg !14643
  call void @llvm.dbg.value(metadata i32 0, metadata !14642, metadata !DIExpression()), !dbg !14643
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14649
  %6 = load i8, i8* %5, align 1, !dbg !14649
  %7 = and i8 %6, 8, !dbg !14651
  %8 = icmp eq i8 %7, 0, !dbg !14652
  br i1 %8, label %9, label %24, !dbg !14653

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14640, metadata !DIExpression()), !dbg !14643
  %11 = icmp eq i64 %10, 0, !dbg !14654
  br i1 %11, label %24, label %12, !dbg !14656

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14657
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14659
  br i1 %14, label %24, label %15, !dbg !14660

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14661
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !14661
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14662
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !14663
  br i1 %19, label %24, label %20, !dbg !14664

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14665
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #24, !dbg !14667
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14668
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !14669
  call void @llvm.dbg.value(metadata i32 %4, metadata !13313, metadata !DIExpression()) #23, !dbg !14670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13318, metadata !DIExpression()) #23, !dbg !14670
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #26, !dbg !14672
  call void @llvm.dbg.value(metadata i32 %23, metadata !14642, metadata !DIExpression()), !dbg !14643
  br label %26, !dbg !14673

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14674
  call void @llvm.dbg.value(metadata i32 %25, metadata !14642, metadata !DIExpression()), !dbg !14643
  call void @llvm.dbg.value(metadata i32 %4, metadata !12718, metadata !DIExpression()) #23, !dbg !14675
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !14675
  call void @llvm.dbg.value(metadata i32 %4, metadata !12726, metadata !DIExpression()) #23, !dbg !14677
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14679, !srcloc !12732
  br label %26, !dbg !14680

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14643
  ret i32 %27, !dbg !14681
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14682 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14686, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i32 %1, metadata !14687, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i8* %2, metadata !14688, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i8 0, metadata !14690, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i32 0, metadata !14691, metadata !DIExpression()), !dbg !14695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12691, metadata !DIExpression()) #23, !dbg !14696
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14698, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 undef, metadata !12703, metadata !DIExpression()) #23, !dbg !14700
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()) #23, !dbg !14700
  call void @llvm.dbg.value(metadata i32 undef, metadata !12697, metadata !DIExpression()) #23, !dbg !14696
  call void @llvm.dbg.value(metadata i32 undef, metadata !14693, metadata !DIExpression()), !dbg !14695
  call void @llvm.dbg.value(metadata i8 poison, metadata !14690, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !14691, metadata !DIExpression()), !dbg !14695
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !14701
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14689, metadata !DIExpression()), !dbg !14694
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14704
  br i1 %7, label %12, label %8, !dbg !14706

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14707, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.value(metadata i32 %1, metadata !14713, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.value(metadata i8* %2, metadata !14714, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14621, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata i32 %1, metadata !14626, metadata !DIExpression()), !dbg !14718
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 8, i32 1, !dbg !14720
  store i32 %1, i32* %9, align 4, !dbg !14721
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 7, !dbg !14722
  store i8* %2, i8** %10, align 8, !dbg !14723
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !14724
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !14725
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !14726
  call void @llvm.dbg.value(metadata i8 1, metadata !14690, metadata !DIExpression()), !dbg !14694
  br label %12, !dbg !14727

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14698
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14698
  call void @llvm.dbg.value(metadata i32 %14, metadata !12703, metadata !DIExpression()) #23, !dbg !14700
  call void @llvm.dbg.value(metadata i32 %14, metadata !12697, metadata !DIExpression()) #23, !dbg !14696
  call void @llvm.dbg.value(metadata i32 %14, metadata !14693, metadata !DIExpression()), !dbg !14695
  call void @llvm.dbg.value(metadata i8 poison, metadata !14690, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !12718, metadata !DIExpression()) #23, !dbg !14728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12723, metadata !DIExpression()) #23, !dbg !14728
  call void @llvm.dbg.value(metadata i32 undef, metadata !12726, metadata !DIExpression()) #23, !dbg !14730
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14732, !srcloc !12732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14691, metadata !DIExpression()), !dbg !14695
  ret i1 %13, !dbg !14733
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14734 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14740, metadata !DIExpression()), !dbg !14745
  call void @llvm.dbg.value(metadata i64 undef, metadata !14742, metadata !DIExpression()), !dbg !14745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14739, metadata !DIExpression()), !dbg !14745
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14741, metadata !DIExpression()), !dbg !14745
  call void @llvm.dbg.value(metadata i8** %4, metadata !14743, metadata !DIExpression()), !dbg !14745
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !14746
  call void @llvm.dbg.value(metadata i32 %6, metadata !14744, metadata !DIExpression()), !dbg !14745
  %7 = icmp eq i8** %4, null, !dbg !14747
  br i1 %7, label %12, label %8, !dbg !14749

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14750
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 7, !dbg !14752
  %11 = load i8*, i8** %10, align 8, !dbg !14752
  store i8* %11, i8** %4, align 4, !dbg !14753
  br label %12, !dbg !14754

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14755
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14756 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !14758
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !14759
  ret void, !dbg !14760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14761 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14771, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14769, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14770, metadata !DIExpression()), !dbg !14788
  %5 = icmp eq i64 %4, -1, !dbg !14789
  br i1 %5, label %55, label %6, !dbg !14791

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14792
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14793
  call void @llvm.dbg.value(metadata i32 0, metadata !14772, metadata !DIExpression()), !dbg !14794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14795, metadata !DIExpression()) #23, !dbg !14802
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14804, !srcloc !14810
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14804
  call void @llvm.dbg.value(metadata i32 %9, metadata !14807, metadata !DIExpression()) #23, !dbg !14811
  call void @llvm.dbg.value(metadata i32 undef, metadata !14808, metadata !DIExpression()) #23, !dbg !14811
  call void @llvm.dbg.value(metadata i32 %9, metadata !14801, metadata !DIExpression()) #23, !dbg !14802
  call void @llvm.dbg.value(metadata i32 %9, metadata !14778, metadata !DIExpression()), !dbg !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()), !dbg !14794
  %10 = icmp slt i64 %4, -1, !dbg !14812
  br i1 %10, label %11, label %17, !dbg !14813

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14814
  %13 = add i64 %4, %12, !dbg !14815
  %14 = sub i64 -2, %13, !dbg !14815
  call void @llvm.dbg.value(metadata i64 %14, metadata !14782, metadata !DIExpression()), !dbg !14816
  %15 = icmp sgt i64 %14, 1, !dbg !14817
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14817
  br label %22, !dbg !14818

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14819
  %19 = tail call fastcc i32 @elapsed.171() #24, !dbg !14821
  %20 = sext i32 %19 to i64, !dbg !14821
  %21 = add nsw i64 %18, %20, !dbg !14822
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14823
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14824
  store i64 %23, i64* %24, align 8, !dbg !14825
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !14826
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14779, metadata !DIExpression()), !dbg !14828
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14829
  br i1 %26, label %42, label %27, !dbg !14829

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14830
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14779, metadata !DIExpression()), !dbg !14828
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14834
  %31 = load i64, i64* %30, align 8, !dbg !14834
  %32 = icmp slt i64 %28, %31, !dbg !14835
  br i1 %32, label %33, label %38, !dbg !14836

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14834
  %35 = sub nsw i64 %31, %28, !dbg !14837
  store i64 %35, i64* %34, align 8, !dbg !14837
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !14839
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14840
  tail call fastcc void @sys_dlist_insert.172(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !14841
  br label %44, !dbg !14842

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !14843
  store i64 %39, i64* %24, align 8, !dbg !14843
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !14844
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14779, metadata !DIExpression()), !dbg !14828
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14829
  br i1 %41, label %42, label %27, !dbg !14829, !llvm.loop !14845

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14847
  tail call fastcc void @sys_dlist_append.173(%struct._dnode* noundef %43) #24, !dbg !14850
  br label %44, !dbg !14851

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !14852
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !14853
  br i1 %46, label %47, label %54, !dbg !14854

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %48, metadata !14785, metadata !DIExpression()), !dbg !14856
  %49 = icmp ne i32 %48, 0, !dbg !14857
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !14859
  br i1 %52, label %54, label %53, !dbg !14859

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #26, !dbg !14860
  br label %54, !dbg !14862

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !14863, metadata !DIExpression()) #23, !dbg !14869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14868, metadata !DIExpression()) #23, !dbg !14869
  call void @llvm.dbg.value(metadata i32 %9, metadata !14871, metadata !DIExpression()) #23, !dbg !14874
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14876, !srcloc !14877
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()), !dbg !14794
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !14878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.171() unnamed_addr #1 !dbg !14879 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14882
  %2 = icmp eq i32 %1, 0, !dbg !14883
  br i1 %2, label %3, label %5, !dbg !14882

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !14884
  br label %5, !dbg !14882

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14882
  ret i32 %6, !dbg !14885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #6 !dbg !14886 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.176() #24, !dbg !14892
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14890, metadata !DIExpression()), !dbg !14893
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14894
  ret %struct._timeout* %2, !dbg !14895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.172(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14896 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14900, metadata !DIExpression()), !dbg !14904
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14901, metadata !DIExpression()), !dbg !14904
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14905
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14905
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14902, metadata !DIExpression()), !dbg !14904
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14906
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14907
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14908
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14909
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14910
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14911
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14912
  ret void, !dbg !14913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #6 !dbg !14914 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14918, metadata !DIExpression()), !dbg !14920
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14921
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.174(%struct._dnode* noundef %2) #24, !dbg !14922
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14919, metadata !DIExpression()), !dbg !14920
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14923
  ret %struct._timeout* %4, !dbg !14924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.173(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !14925 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14930, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14931, metadata !DIExpression()), !dbg !14933
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14934
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14932, metadata !DIExpression()), !dbg !14933
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14935
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14936
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14937
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14938
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14939
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14940
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14941
  ret void, !dbg !14942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14943 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !14948
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14945, metadata !DIExpression()), !dbg !14949
  %2 = tail call fastcc i32 @elapsed.171() #24, !dbg !14950
  call void @llvm.dbg.value(metadata i32 %2, metadata !14946, metadata !DIExpression()), !dbg !14949
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14951
  br i1 %3, label %14, label %4, !dbg !14953

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14954
  %6 = load i64, i64* %5, align 8, !dbg !14954
  %7 = sext i32 %2 to i64, !dbg !14955
  %8 = sub nsw i64 %6, %7, !dbg !14956
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14957
  br i1 %9, label %14, label %10, !dbg !14958

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14959
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14959
  %13 = trunc i64 %12 to i32, !dbg !14959
  call void @llvm.dbg.value(metadata i32 %13, metadata !14947, metadata !DIExpression()), !dbg !14949
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14961
  call void @llvm.dbg.value(metadata i32 %15, metadata !14947, metadata !DIExpression()), !dbg !14949
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14962
  %17 = icmp ne i32 %16, 0, !dbg !14964
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14965
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14965
  call void @llvm.dbg.value(metadata i32 %20, metadata !14947, metadata !DIExpression()), !dbg !14949
  ret i32 %20, !dbg !14966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.174(%struct._dnode* noundef readonly %0) unnamed_addr #6 !dbg !14967 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14971, metadata !DIExpression()), !dbg !14973
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14972, metadata !DIExpression()), !dbg !14973
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14974
  br i1 %2, label %5, label %3, !dbg !14975

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.175(%struct._dnode* noundef nonnull %0) #24, !dbg !14976
  br label %5, !dbg !14975

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14975
  ret %struct._dnode* %6, !dbg !14977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.175(%struct._dnode* noundef readonly %0) unnamed_addr #6 !dbg !14978 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14980, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14981, metadata !DIExpression()), !dbg !14982
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14983
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14984
  br i1 %3, label %7, label %4, !dbg !14985

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14986
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14986
  br label %7, !dbg !14985

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14985
  ret %struct._dnode* %8, !dbg !14987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.176() unnamed_addr #6 !dbg !14988 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14992, metadata !DIExpression()), !dbg !14993
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.177() #24, !dbg !14994
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14994
  ret %struct._dnode* %3, !dbg !14995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.177() unnamed_addr #6 !dbg !14996 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15000, metadata !DIExpression()), !dbg !15001
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15002
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15003
  ret i1 %2, !dbg !15004
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15005 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15009, metadata !DIExpression()), !dbg !15014
  call void @llvm.dbg.value(metadata i32 -22, metadata !15010, metadata !DIExpression()), !dbg !15014
  call void @llvm.dbg.value(metadata i32 0, metadata !15011, metadata !DIExpression()), !dbg !15015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14795, metadata !DIExpression()) #23, !dbg !15016
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15018, !srcloc !14810
  call void @llvm.dbg.value(metadata i32 undef, metadata !14807, metadata !DIExpression()) #23, !dbg !15020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14808, metadata !DIExpression()) #23, !dbg !15020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14801, metadata !DIExpression()) #23, !dbg !15016
  call void @llvm.dbg.value(metadata i32 undef, metadata !15013, metadata !DIExpression()), !dbg !15015
  call void @llvm.dbg.value(metadata i32 -22, metadata !15010, metadata !DIExpression()), !dbg !15014
  call void @llvm.dbg.value(metadata i32 undef, metadata !15011, metadata !DIExpression()), !dbg !15015
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15010, metadata !DIExpression()), !dbg !15014
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.180(%struct._dnode* noundef %3) #24, !dbg !15021
  br i1 %4, label %5, label %6, !dbg !15025

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !15026
  call void @llvm.dbg.value(metadata i32 0, metadata !15010, metadata !DIExpression()), !dbg !15014
  br label %6, !dbg !15028

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15014
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15018
  call void @llvm.dbg.value(metadata i32 %8, metadata !14807, metadata !DIExpression()) #23, !dbg !15020
  call void @llvm.dbg.value(metadata i32 %8, metadata !14801, metadata !DIExpression()) #23, !dbg !15016
  call void @llvm.dbg.value(metadata i32 %8, metadata !15013, metadata !DIExpression()), !dbg !15015
  call void @llvm.dbg.value(metadata i32 %7, metadata !15010, metadata !DIExpression()), !dbg !15014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14863, metadata !DIExpression()) #23, !dbg !15029
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14868, metadata !DIExpression()) #23, !dbg !15029
  call void @llvm.dbg.value(metadata i32 undef, metadata !14871, metadata !DIExpression()) #23, !dbg !15031
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15033, !srcloc !14877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15011, metadata !DIExpression()), !dbg !15015
  ret i32 %7, !dbg !15034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.180(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #6 !dbg !15035 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15041, metadata !DIExpression()), !dbg !15042
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15043
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15043
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15044
  ret i1 %4, !dbg !15045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !15046 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15048, metadata !DIExpression()), !dbg !15049
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !15050
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15052
  br i1 %3, label %10, label %4, !dbg !15053

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15054
  %6 = load i64, i64* %5, align 8, !dbg !15054
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15056
  %8 = load i64, i64* %7, align 8, !dbg !15057
  %9 = add nsw i64 %8, %6, !dbg !15057
  store i64 %9, i64* %7, align 8, !dbg !15057
  br label %10, !dbg !15058

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15059
  tail call fastcc void @sys_dlist_remove.181(%struct._dnode* noundef %11) #24, !dbg !15060
  ret void, !dbg !15061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.181(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15062 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15066, metadata !DIExpression()), !dbg !15069
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15070
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15070
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15067, metadata !DIExpression()), !dbg !15069
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15071
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15071
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15068, metadata !DIExpression()), !dbg !15069
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15072
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15073
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15074
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15075
  tail call fastcc void @sys_dnode_init.182(%struct._dnode* noundef %0) #24, !dbg !15076
  ret void, !dbg !15077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.182(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !15078 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15080, metadata !DIExpression()), !dbg !15081
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15082
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15083
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15084
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15085
  ret void, !dbg !15086
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15087 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15093, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.value(metadata i64 0, metadata !15094, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.value(metadata i32 0, metadata !15095, metadata !DIExpression()), !dbg !15099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14795, metadata !DIExpression()) #23, !dbg !15100
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15102, !srcloc !14810
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15102
  call void @llvm.dbg.value(metadata i32 %3, metadata !14807, metadata !DIExpression()) #23, !dbg !15104
  call void @llvm.dbg.value(metadata i32 undef, metadata !14808, metadata !DIExpression()) #23, !dbg !15104
  call void @llvm.dbg.value(metadata i32 %3, metadata !14801, metadata !DIExpression()) #23, !dbg !15100
  call void @llvm.dbg.value(metadata i32 %3, metadata !15097, metadata !DIExpression()), !dbg !15099
  call void @llvm.dbg.value(metadata i64 0, metadata !15094, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.value(metadata i32 undef, metadata !15095, metadata !DIExpression()), !dbg !15099
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !15105
  call void @llvm.dbg.value(metadata i64 %4, metadata !15094, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.value(metadata i32 %3, metadata !14863, metadata !DIExpression()) #23, !dbg !15108
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14868, metadata !DIExpression()) #23, !dbg !15108
  call void @llvm.dbg.value(metadata i32 %3, metadata !14871, metadata !DIExpression()) #23, !dbg !15110
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15112, !srcloc !14877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15095, metadata !DIExpression()), !dbg !15099
  ret i64 %4, !dbg !15113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15114 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15116, metadata !DIExpression()), !dbg !15120
  call void @llvm.dbg.value(metadata i64 0, metadata !15117, metadata !DIExpression()), !dbg !15120
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.183(%struct._timeout* noundef %0) #24, !dbg !15121
  br i1 %2, label %21, label %3, !dbg !15123

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !15124
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15118, metadata !DIExpression()), !dbg !15125
  call void @llvm.dbg.value(metadata i64 0, metadata !15117, metadata !DIExpression()), !dbg !15120
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15126
  br i1 %5, label %16, label %6, !dbg !15128

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15118, metadata !DIExpression()), !dbg !15125
  call void @llvm.dbg.value(metadata i64 %8, metadata !15117, metadata !DIExpression()), !dbg !15120
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15129
  %10 = load i64, i64* %9, align 8, !dbg !15129
  %11 = add nsw i64 %10, %8, !dbg !15131
  call void @llvm.dbg.value(metadata i64 %11, metadata !15117, metadata !DIExpression()), !dbg !15120
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15132
  br i1 %12, label %16, label %13, !dbg !15134

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !15135
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15118, metadata !DIExpression()), !dbg !15125
  call void @llvm.dbg.value(metadata i64 %11, metadata !15117, metadata !DIExpression()), !dbg !15120
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15126
  br i1 %15, label %16, label %6, !dbg !15128, !llvm.loop !15136

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15120
  call void @llvm.dbg.value(metadata i64 %17, metadata !15117, metadata !DIExpression()), !dbg !15120
  %18 = tail call fastcc i32 @elapsed.171() #24, !dbg !15138
  %19 = sext i32 %18 to i64, !dbg !15138
  %20 = sub nsw i64 %17, %19, !dbg !15139
  br label %21, !dbg !15140

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15120
  ret i64 %22, !dbg !15141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.183(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #6 !dbg !15142 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15146, metadata !DIExpression()), !dbg !15147
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15148
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.180(%struct._dnode* noundef %2) #24, !dbg !15149
  %4 = xor i1 %3, true, !dbg !15150
  ret i1 %4, !dbg !15151
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15152 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15154, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata i64 0, metadata !15155, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata i32 0, metadata !15156, metadata !DIExpression()), !dbg !15160
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14795, metadata !DIExpression()) #23, !dbg !15161
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15163, !srcloc !14810
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15163
  call void @llvm.dbg.value(metadata i32 %3, metadata !14807, metadata !DIExpression()) #23, !dbg !15165
  call void @llvm.dbg.value(metadata i32 undef, metadata !14808, metadata !DIExpression()) #23, !dbg !15165
  call void @llvm.dbg.value(metadata i32 %3, metadata !14801, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata i32 %3, metadata !15158, metadata !DIExpression()), !dbg !15160
  call void @llvm.dbg.value(metadata i64 0, metadata !15155, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata i32 undef, metadata !15156, metadata !DIExpression()), !dbg !15160
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15166
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !15169
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15155, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15159
  call void @llvm.dbg.value(metadata i32 %3, metadata !14863, metadata !DIExpression()) #23, !dbg !15170
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14868, metadata !DIExpression()) #23, !dbg !15170
  call void @llvm.dbg.value(metadata i32 %3, metadata !14871, metadata !DIExpression()) #23, !dbg !15172
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15174, !srcloc !14877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15156, metadata !DIExpression()), !dbg !15160
  %6 = add i64 %5, %4, !dbg !15175
  ret i64 %6, !dbg !15176
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15177 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15179, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata i32 0, metadata !15180, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14795, metadata !DIExpression()) #23, !dbg !15185
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15187, !srcloc !14810
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15187
  call void @llvm.dbg.value(metadata i32 %2, metadata !14807, metadata !DIExpression()) #23, !dbg !15189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14808, metadata !DIExpression()) #23, !dbg !15189
  call void @llvm.dbg.value(metadata i32 %2, metadata !14801, metadata !DIExpression()) #23, !dbg !15185
  call void @llvm.dbg.value(metadata i32 %2, metadata !15182, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i32 -1, metadata !15179, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()), !dbg !15184
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !15190
  call void @llvm.dbg.value(metadata i32 %3, metadata !15179, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata i32 %2, metadata !14863, metadata !DIExpression()) #23, !dbg !15193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14868, metadata !DIExpression()) #23, !dbg !15193
  call void @llvm.dbg.value(metadata i32 %2, metadata !14871, metadata !DIExpression()) #23, !dbg !15195
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15197, !srcloc !14877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()), !dbg !15184
  ret i32 %3, !dbg !15198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15201, metadata !DIExpression()), !dbg !15211
  call void @llvm.dbg.value(metadata i1 %1, metadata !15202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15211
  call void @llvm.dbg.value(metadata i32 0, metadata !15203, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14795, metadata !DIExpression()) #23, !dbg !15213
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15215, !srcloc !14810
  call void @llvm.dbg.value(metadata i32 undef, metadata !14807, metadata !DIExpression()) #23, !dbg !15217
  call void @llvm.dbg.value(metadata i32 undef, metadata !14808, metadata !DIExpression()) #23, !dbg !15217
  call void @llvm.dbg.value(metadata i32 undef, metadata !14801, metadata !DIExpression()) #23, !dbg !15213
  call void @llvm.dbg.value(metadata i32 undef, metadata !15205, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.value(metadata i32 undef, metadata !15203, metadata !DIExpression()), !dbg !15212
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !15218
  call void @llvm.dbg.value(metadata i32 %4, metadata !15206, metadata !DIExpression()), !dbg !15219
  call void @llvm.dbg.value(metadata i1 undef, metadata !15209, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15219
  %5 = icmp slt i32 %4, 2, !dbg !15220
  call void @llvm.dbg.value(metadata i1 %5, metadata !15210, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15219
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !15221
  call void @llvm.dbg.value(metadata i1 %6, metadata !15209, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15219
  br i1 %7, label %11, label %8, !dbg !15221

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !15223
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !15223
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #26, !dbg !15225
  br label %11, !dbg !15226

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !15215
  call void @llvm.dbg.value(metadata i32 %12, metadata !14807, metadata !DIExpression()) #23, !dbg !15217
  call void @llvm.dbg.value(metadata i32 %12, metadata !14801, metadata !DIExpression()) #23, !dbg !15213
  call void @llvm.dbg.value(metadata i32 %12, metadata !15205, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.value(metadata i32 undef, metadata !14863, metadata !DIExpression()) #23, !dbg !15227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14868, metadata !DIExpression()) #23, !dbg !15227
  call void @llvm.dbg.value(metadata i32 undef, metadata !14871, metadata !DIExpression()) #23, !dbg !15229
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !15231, !srcloc !14877
  call void @llvm.dbg.value(metadata i32 1, metadata !15203, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.value(metadata i32 undef, metadata !15203, metadata !DIExpression()), !dbg !15212
  ret void, !dbg !15232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15237, metadata !DIExpression()), !dbg !15242
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !15243
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14795, metadata !DIExpression()) #23, !dbg !15244
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15246, !srcloc !14810
  call void @llvm.dbg.value(metadata i32 undef, metadata !14807, metadata !DIExpression()) #23, !dbg !15248
  call void @llvm.dbg.value(metadata i32 undef, metadata !14808, metadata !DIExpression()) #23, !dbg !15248
  call void @llvm.dbg.value(metadata i32 undef, metadata !14801, metadata !DIExpression()) #23, !dbg !15244
  call void @llvm.dbg.value(metadata i32 undef, metadata !15238, metadata !DIExpression()), !dbg !15242
  store i32 %0, i32* @announce_remaining, align 4, !dbg !15242
  call void @llvm.dbg.value(metadata i32 undef, metadata !15238, metadata !DIExpression()), !dbg !15242
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !15249
  %4 = icmp eq %struct._timeout* %3, null, !dbg !15250
  br i1 %4, label %28, label %5, !dbg !15251

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !15252
  %10 = load i64, i64* %9, align 8, !dbg !15252
  %11 = sext i32 %8 to i64, !dbg !15253
  %12 = icmp sgt i64 %10, %11, !dbg !15254
  br i1 %12, label %26, label %13, !dbg !15255

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !15242
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !15239, metadata !DIExpression()), !dbg !15256
  %15 = trunc i64 %10 to i32, !dbg !15257
  call void @llvm.dbg.value(metadata i32 %15, metadata !15241, metadata !DIExpression()), !dbg !15256
  %16 = sext i32 %15 to i64, !dbg !15258
  %17 = load i64, i64* @curr_tick, align 8, !dbg !15259
  %18 = add i64 %17, %16, !dbg !15259
  store i64 %18, i64* @curr_tick, align 8, !dbg !15259
  store i64 0, i64* %9, align 8, !dbg !15260
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !15261
  call void @llvm.dbg.value(metadata i32 %14, metadata !14863, metadata !DIExpression()) #23, !dbg !15262
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14868, metadata !DIExpression()) #23, !dbg !15262
  call void @llvm.dbg.value(metadata i32 %14, metadata !14871, metadata !DIExpression()) #23, !dbg !15264
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15266, !srcloc !14877
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !15267
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !15267
  tail call void %20(%struct._timeout* noundef nonnull %6) #26, !dbg !15268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14795, metadata !DIExpression()) #23, !dbg !15269
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15271, !srcloc !14810
  call void @llvm.dbg.value(metadata i32 undef, metadata !14807, metadata !DIExpression()) #23, !dbg !15273
  call void @llvm.dbg.value(metadata i32 undef, metadata !14808, metadata !DIExpression()) #23, !dbg !15273
  call void @llvm.dbg.value(metadata i32 undef, metadata !14801, metadata !DIExpression()) #23, !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !15238, metadata !DIExpression()), !dbg !15242
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !15274
  %23 = sub nsw i32 %22, %15, !dbg !15274
  store i32 %23, i32* @announce_remaining, align 4, !dbg !15242
  call void @llvm.dbg.value(metadata i32 undef, metadata !15238, metadata !DIExpression()), !dbg !15242
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !15249
  %25 = icmp eq %struct._timeout* %24, null, !dbg !15250
  br i1 %25, label %28, label %5, !dbg !15251, !llvm.loop !15275

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !15277
  store i64 %27, i64* %9, align 8, !dbg !15277
  br label %32, !dbg !15280

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !15242
  %31 = sext i32 %30 to i64, !dbg !15281
  br label %32, !dbg !15281

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !15281
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !15242
  %36 = load i64, i64* @curr_tick, align 8, !dbg !15282
  %37 = add i64 %36, %33, !dbg !15282
  store i64 %37, i64* @curr_tick, align 8, !dbg !15282
  store i32 0, i32* @announce_remaining, align 4, !dbg !15283
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !15284
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #26, !dbg !15285
  call void @llvm.dbg.value(metadata i32 %35, metadata !14863, metadata !DIExpression()) #23, !dbg !15286
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14868, metadata !DIExpression()) #23, !dbg !15286
  call void @llvm.dbg.value(metadata i32 %35, metadata !14871, metadata !DIExpression()) #23, !dbg !15288
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !15290, !srcloc !14877
  ret void, !dbg !15291
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15292 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15296, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.value(metadata i32 0, metadata !15297, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14795, metadata !DIExpression()) #23, !dbg !15302
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15304, !srcloc !14810
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15304
  call void @llvm.dbg.value(metadata i32 %2, metadata !14807, metadata !DIExpression()) #23, !dbg !15306
  call void @llvm.dbg.value(metadata i32 undef, metadata !14808, metadata !DIExpression()) #23, !dbg !15306
  call void @llvm.dbg.value(metadata i32 %2, metadata !14801, metadata !DIExpression()) #23, !dbg !15302
  call void @llvm.dbg.value(metadata i32 %2, metadata !15299, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata i64 0, metadata !15296, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.value(metadata i32 undef, metadata !15297, metadata !DIExpression()), !dbg !15301
  %3 = load i64, i64* @curr_tick, align 8, !dbg !15307
  %4 = tail call fastcc i32 @elapsed.171() #24, !dbg !15310
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !15296, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15300
  call void @llvm.dbg.value(metadata i32 %2, metadata !14863, metadata !DIExpression()) #23, !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14868, metadata !DIExpression()) #23, !dbg !15311
  call void @llvm.dbg.value(metadata i32 %2, metadata !14871, metadata !DIExpression()) #23, !dbg !15313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15315, !srcloc !14877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15297, metadata !DIExpression()), !dbg !15301
  %5 = sext i32 %4 to i64, !dbg !15310
  %6 = add i64 %3, %5, !dbg !15316
  ret i64 %6, !dbg !15317
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15318 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !15319
  %2 = trunc i64 %1 to i32, !dbg !15320
  ret i32 %2, !dbg !15321
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15322 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !15323
  ret i64 %1, !dbg !15324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15327, metadata !DIExpression()), !dbg !15334
  %2 = icmp eq i32 %0, 0, !dbg !15335
  br i1 %2, label %10, label %3, !dbg !15337

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !15338
  call void @llvm.dbg.value(metadata i32 %4, metadata !15328, metadata !DIExpression()), !dbg !15334
  %5 = mul i32 %0, 84, !dbg !15339
  call void @llvm.dbg.value(metadata i32 %5, metadata !15329, metadata !DIExpression()), !dbg !15334
  br label %6, !dbg !15340

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !15341
  call void @llvm.dbg.value(metadata i32 %7, metadata !15330, metadata !DIExpression()), !dbg !15342
  %8 = sub i32 %7, %4, !dbg !15343
  %9 = icmp ult i32 %8, %5, !dbg !15345
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !15347 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !15348
  ret i32 %1, !dbg !15349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !15350 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !15352
  ret i32 %1, !dbg !15353
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15354 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15358, metadata !DIExpression()), !dbg !15360
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15361

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !15362
  br label %14, !dbg !15366

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15359, metadata !DIExpression()), !dbg !15360
  %6 = icmp slt i64 %2, -1, !dbg !15367
  br i1 %6, label %7, label %9, !dbg !15370

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15371
  br label %14, !dbg !15372

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !15374
  %11 = icmp ugt i64 %2, 1, !dbg !15375
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15375
  %13 = add nsw i64 %10, %12, !dbg !15376
  br label %14, !dbg !15377

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15378
  ret i64 %15, !dbg !15379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !15380 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.194, i32 0, i32 0)) #26, !dbg !15382
  ret void, !dbg !15383
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!763, !2, !2415, !27, !263, !2417, !2419, !2457, !273, !326, !2459, !2470, !2516, !2518, !2546, !2574, !2617, !2689, !2734, !355, !490, !2762, !526, !536, !561, !801, !2767, !940, !1006, !1312, !1589, !2808, !1702, !1792, !2810, !2873, !2940, !1846, !2943, !1853, !2218, !2961, !2238, !2261, !2963, !2378, !2966}
!llvm.ident = !{!2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968, !2968}
!llvm.module.flags = !{!2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "threadA_sem", scope: !27, file: !116, line: 72, type: !117, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/synchronization/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !106, !107, !109, !110, !111}
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !103, line: 46, baseType: !104)
!103 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !105)
!105 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !108, line: 214, baseType: !32)
!108 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !143, !153, !257, !259}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "threadB_sem", scope: !27, file: !116, line: 73, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/synchronization/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !118, line: 2909, size: 128, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120, !141, !142}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2910, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !117, file: !118, line: 2911, baseType: !32, size: 32, offset: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !117, file: !118, line: 2912, baseType: !32, size: 32, offset: 96)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "threadA_stack_area", scope: !27, file: !116, line: 88, type: !145, isLocal: false, isDefinition: true, align: 512)
!145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 8704, elements: !151)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !148)
!147 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!148 = !{!149}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !146, file: !147, line: 48, baseType: !150, size: 8)
!150 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!151 = !{!152}
!152 = !DISubrange(count: 1088)
!153 = !DIGlobalVariableExpression(var: !154, expr: !DIExpression())
!154 = distinct !DIGlobalVariable(name: "threadA_data", scope: !27, file: !116, line: 89, type: !155, isLocal: true, isDefinition: true)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1344, elements: !157)
!156 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!157 = !{!158, !208, !221, !222, !223, !227, !228, !234, !252}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !155, file: !156, line: 247, baseType: !159, size: 448)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 448, elements: !160)
!160 = !{!161, !175, !177, !180, !181, !194, !195, !196, !197}
!161 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 60, baseType: !162, size: 64)
!162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 60, size: 64, elements: !163)
!163 = !{!164, !166}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !162, file: !156, line: 61, baseType: !165, size: 64)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !162, file: !156, line: 62, baseType: !167, size: 64)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !169)
!168 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !167, file: !168, line: 50, baseType: !171, size: 64)
!171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !172, size: 64, elements: !173)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!173 = !{!174}
!174 = !DISubrange(count: 2)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !159, file: !156, line: 68, baseType: !176, size: 32, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !159, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !179)
!179 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !159, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!181 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 90, baseType: !182, size: 16, offset: 112)
!182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 90, size: 16, elements: !183)
!183 = !{!184, !191}
!184 = !DIDerivedType(tag: DW_TAG_member, scope: !182, file: !156, line: 91, baseType: !185, size: 16)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !182, file: !156, line: 91, size: 16, elements: !186)
!186 = !{!187, !190}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !185, file: !156, line: 96, baseType: !188, size: 8)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !189)
!189 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !185, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !182, file: !156, line: 100, baseType: !192, size: 16)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !193)
!193 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !159, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_mask", scope: !159, file: !156, line: 123, baseType: !178, size: 8, offset: 160)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !159, file: !156, line: 127, baseType: !106, size: 32, offset: 192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !159, file: !156, line: 131, baseType: !198, size: 192, offset: 256)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !199)
!199 = !{!200, !201, !207}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !198, file: !122, line: 245, baseType: !165, size: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !198, file: !122, line: 246, baseType: !202, size: 32, offset: 64)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!204 = !DISubroutineType(types: !205)
!205 = !{null, !206}
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !198, file: !122, line: 249, baseType: !104, size: 64, offset: 128)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !155, file: !156, line: 250, baseType: !209, size: 288, offset: 448)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !211)
!210 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!211 = !{!212, !213, !214, !215, !216, !217, !218, !219, !220}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !209, file: !210, line: 26, baseType: !110, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !209, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !209, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !209, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !209, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !209, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !209, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !209, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !209, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !155, file: !156, line: 253, baseType: !106, size: 32, offset: 736)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !155, file: !156, line: 256, baseType: !121, size: 64, offset: 768)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !155, file: !156, line: 279, baseType: !224, size: 256, offset: 832)
!224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !225)
!225 = !{!226}
!226 = !DISubrange(count: 32)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !155, file: !156, line: 294, baseType: !109, size: 32, offset: 1088)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !155, file: !156, line: 300, baseType: !229, size: 96, offset: 1120)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !230)
!230 = !{!231, !232, !233}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !229, file: !156, line: 153, baseType: !22, size: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !229, file: !156, line: 162, baseType: !107, size: 32, offset: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !229, file: !156, line: 168, baseType: !107, size: 32, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !155, file: !156, line: 325, baseType: !235, size: 32, offset: 1216)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 160, elements: !237)
!237 = !{!238, !247, !248}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !236, file: !118, line: 5074, baseType: !239, size: 96)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !241)
!240 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !{!242, !245, !246}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !240, line: 57, baseType: !243, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !240, line: 57, flags: DIFlagFwdDecl)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !239, file: !240, line: 58, baseType: !106, size: 32, offset: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !239, file: !240, line: 59, baseType: !107, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !236, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !236, file: !118, line: 5076, baseType: !249, offset: 160)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!250 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!251 = !{}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !155, file: !156, line: 343, baseType: !253, size: 64, offset: 1248)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !210, line: 60, size: 64, elements: !254)
!254 = !{!255, !256}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !253, file: !210, line: 63, baseType: !110, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !253, file: !210, line: 66, baseType: !110, size: 32, offset: 32)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(name: "threadB_stack_area", scope: !27, file: !116, line: 91, type: !145, isLocal: false, isDefinition: true, align: 512)
!259 = !DIGlobalVariableExpression(var: !260, expr: !DIExpression())
!260 = distinct !DIGlobalVariable(name: "threadB_data", scope: !27, file: !116, line: 92, type: !155, isLocal: true, isDefinition: true)
!261 = !DIGlobalVariableExpression(var: !262, expr: !DIExpression())
!262 = distinct !DIGlobalVariable(name: "_char_out", scope: !263, file: !267, line: 54, type: !268, isLocal: false, isDefinition: true)
!263 = distinct !DICompileUnit(language: DW_LANG_C99, file: !264, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !265, globals: !266, splitDebugInlining: false, nameTableKind: None)
!264 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!265 = !{!106, !109}
!266 = !{!261}
!267 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!269 = !DISubroutineType(types: !270)
!270 = !{!109, !109}
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !273, file: !290, line: 56, type: !291, isLocal: true, isDefinition: true, align: 32)
!273 = distinct !DICompileUnit(language: DW_LANG_C99, file: !274, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !275, globals: !289, splitDebugInlining: false, nameTableKind: None)
!274 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!275 = !{!276}
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !278, line: 407, baseType: !279)
!278 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 398, size: 224, elements: !280)
!280 = !{!281, !283, !284, !285, !286, !287, !288}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !279, file: !278, line: 400, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !279, file: !278, line: 401, baseType: !282, size: 32, offset: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !279, file: !278, line: 402, baseType: !282, size: 32, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !279, file: !278, line: 403, baseType: !282, size: 32, offset: 96)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !279, file: !278, line: 404, baseType: !282, size: 32, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !279, file: !278, line: 405, baseType: !282, size: 32, offset: 160)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !279, file: !278, line: 406, baseType: !282, size: 32, offset: 192)
!289 = !{!271}
!290 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !293, line: 51, size: 64, elements: !294)
!293 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!294 = !{!295, !323}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !292, file: !293, line: 60, baseType: !296, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 32)
!297 = !DISubroutineType(types: !298)
!298 = !{!109, !299}
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !302, line: 378, size: 192, elements: !303)
!302 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!303 = !{!304, !307, !308, !309, !316, !317}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !301, file: !302, line: 380, baseType: !305, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !301, file: !302, line: 382, baseType: !13, size: 32, offset: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !301, file: !302, line: 384, baseType: !13, size: 32, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !301, file: !302, line: 386, baseType: !310, size: 32, offset: 96)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !302, line: 351, size: 16, elements: !312)
!312 = !{!313, !314}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !311, file: !302, line: 359, baseType: !178, size: 8)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !311, file: !302, line: 364, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!315 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !301, file: !302, line: 388, baseType: !106, size: 32, offset: 128)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !301, file: !302, line: 396, baseType: !318, size: 32, offset: 160)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 32)
!319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !320)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !302, line: 43, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !322)
!322 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !292, file: !293, line: 65, baseType: !299, size: 32, offset: 32)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !326, file: !329, line: 71, type: !330, isLocal: true, isDefinition: true, align: 32)
!326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !327, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !328, splitDebugInlining: false, nameTableKind: None)
!327 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!328 = !{!324}
!329 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !293, line: 51, size: 64, elements: !332)
!332 = !{!333, !352}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !331, file: !293, line: 60, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 32)
!335 = !DISubroutineType(types: !336)
!336 = !{!109, !337}
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !339)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !302, line: 378, size: 192, elements: !340)
!340 = !{!341, !342, !343, !344, !350, !351}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !339, file: !302, line: 380, baseType: !305, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !339, file: !302, line: 382, baseType: !13, size: 32, offset: 32)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !339, file: !302, line: 384, baseType: !13, size: 32, offset: 64)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !339, file: !302, line: 386, baseType: !345, size: 32, offset: 96)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 32)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !302, line: 351, size: 16, elements: !347)
!347 = !{!348, !349}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !346, file: !302, line: 359, baseType: !178, size: 8)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !346, file: !302, line: 364, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !339, file: !302, line: 388, baseType: !106, size: 32, offset: 128)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !339, file: !302, line: 396, baseType: !318, size: 32, offset: 160)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !331, file: !293, line: 65, baseType: !337, size: 32, offset: 32)
!353 = !DIGlobalVariableExpression(var: !354, expr: !DIExpression())
!354 = distinct !DIGlobalVariable(name: "static_regions", scope: !355, file: !362, line: 62, type: !486, isLocal: true, isDefinition: true)
!355 = distinct !DICompileUnit(language: DW_LANG_C99, file: !356, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !357, globals: !358, splitDebugInlining: false, nameTableKind: None)
!356 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!357 = !{!107, !109, !110, !106}
!358 = !{!359, !353}
!359 = !DIGlobalVariableExpression(var: !360, expr: !DIExpression())
!360 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !361, file: !362, line: 198, type: !472, isLocal: true, isDefinition: true)
!361 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !362, file: !362, line: 175, type: !363, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !355, retainedNodes: !467)
!362 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!363 = !DISubroutineType(types: !364)
!364 = !{null, !365}
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1344, elements: !367)
!367 = !{!368, !427, !439, !440, !441, !442, !443, !449, !462}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !366, file: !156, line: 247, baseType: !369, size: 448)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 448, elements: !370)
!370 = !{!371, !395, !402, !403, !404, !413, !414, !415, !416}
!371 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !156, line: 60, baseType: !372, size: 64)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !156, line: 60, size: 64, elements: !373)
!373 = !{!374, !389}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !372, file: !156, line: 61, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !376)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !377)
!377 = !{!378, !384}
!378 = !DIDerivedType(tag: DW_TAG_member, scope: !376, file: !127, line: 38, baseType: !379, size: 32)
!379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !376, file: !127, line: 38, size: 32, elements: !380)
!380 = !{!381, !383}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !379, file: !127, line: 39, baseType: !382, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !379, file: !127, line: 40, baseType: !382, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, scope: !376, file: !127, line: 42, baseType: !385, size: 32, offset: 32)
!385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !376, file: !127, line: 42, size: 32, elements: !386)
!386 = !{!387, !388}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !385, file: !127, line: 43, baseType: !382, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !385, file: !127, line: 44, baseType: !382, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !372, file: !156, line: 62, baseType: !390, size: 64)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !390, file: !168, line: 50, baseType: !393, size: 64)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 64, elements: !173)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !369, file: !156, line: 68, baseType: !396, size: 32, offset: 64)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !399)
!399 = !{!400}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !398, file: !122, line: 232, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !376)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !369, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !369, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!404 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !156, line: 90, baseType: !405, size: 16, offset: 112)
!405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !156, line: 90, size: 16, elements: !406)
!406 = !{!407, !412}
!407 = !DIDerivedType(tag: DW_TAG_member, scope: !405, file: !156, line: 91, baseType: !408, size: 16)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !405, file: !156, line: 91, size: 16, elements: !409)
!409 = !{!410, !411}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !408, file: !156, line: 96, baseType: !188, size: 8)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !408, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !405, file: !156, line: 100, baseType: !192, size: 16)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !369, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_mask", scope: !369, file: !156, line: 123, baseType: !178, size: 8, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !369, file: !156, line: 127, baseType: !106, size: 32, offset: 192)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !369, file: !156, line: 131, baseType: !417, size: 192, offset: 256)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !418)
!418 = !{!419, !420, !426}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !417, file: !122, line: 245, baseType: !375, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !417, file: !122, line: 246, baseType: !421, size: 32, offset: 64)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !422)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 32)
!423 = !DISubroutineType(types: !424)
!424 = !{null, !425}
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !417, file: !122, line: 249, baseType: !104, size: 64, offset: 128)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !366, file: !156, line: 250, baseType: !428, size: 288, offset: 448)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !429)
!429 = !{!430, !431, !432, !433, !434, !435, !436, !437, !438}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !428, file: !210, line: 26, baseType: !110, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !428, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !428, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !428, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !428, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !428, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !428, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !428, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !428, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !366, file: !156, line: 253, baseType: !106, size: 32, offset: 736)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !366, file: !156, line: 256, baseType: !397, size: 64, offset: 768)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !366, file: !156, line: 279, baseType: !224, size: 256, offset: 832)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !366, file: !156, line: 294, baseType: !109, size: 32, offset: 1088)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !366, file: !156, line: 300, baseType: !444, size: 96, offset: 1120)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !445)
!445 = !{!446, !447, !448}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !444, file: !156, line: 153, baseType: !22, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !444, file: !156, line: 162, baseType: !107, size: 32, offset: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !444, file: !156, line: 168, baseType: !107, size: 32, offset: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !366, file: !156, line: 325, baseType: !450, size: 32, offset: 1216)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 32)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 160, elements: !452)
!452 = !{!453, !459, !460}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !451, file: !118, line: 5074, baseType: !454, size: 96)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !455)
!455 = !{!456, !457, !458}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !454, file: !240, line: 57, baseType: !243, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !454, file: !240, line: 58, baseType: !106, size: 32, offset: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !454, file: !240, line: 59, baseType: !107, size: 32, offset: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !451, file: !118, line: 5075, baseType: !397, size: 64, offset: 96)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !451, file: !118, line: 5076, baseType: !461, offset: 160)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !366, file: !156, line: 343, baseType: !463, size: 64, offset: 1248)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !210, line: 60, size: 64, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !463, file: !210, line: 63, baseType: !110, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !463, file: !210, line: 66, baseType: !110, size: 32, offset: 32)
!467 = !{!468, !469, !470, !471}
!468 = !DILocalVariable(name: "thread", arg: 1, scope: !361, file: !362, line: 175, type: !365)
!469 = !DILocalVariable(name: "region_num", scope: !361, file: !362, line: 200, type: !178)
!470 = !DILocalVariable(name: "guard_start", scope: !361, file: !362, line: 265, type: !22)
!471 = !DILocalVariable(name: "guard_size", scope: !361, file: !362, line: 266, type: !107)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 96, elements: !484)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !474, line: 52, size: 96, elements: !475)
!474 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!475 = !{!476, !477, !478}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !473, file: !474, line: 53, baseType: !22, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !474, line: 54, baseType: !107, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !473, file: !474, line: 55, baseType: !479, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !480, line: 151, baseType: !481)
!480 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 149, size: 32, elements: !482)
!482 = !{!483}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !481, file: !480, line: 150, baseType: !110, size: 32)
!484 = !{!485}
!485 = !DISubrange(count: 1)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 96, elements: !484)
!487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !490, file: !523, line: 39, type: !178, isLocal: true, isDefinition: true)
!490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !492, globals: !522, splitDebugInlining: false, nameTableKind: None)
!491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!492 = !{!493, !106, !109, !510, !178}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !495, line: 1226, baseType: !496)
!495 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 1213, size: 352, elements: !497)
!497 = !{!498, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !496, file: !495, line: 1215, baseType: !499, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !282)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !496, file: !495, line: 1216, baseType: !282, size: 32, offset: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !496, file: !495, line: 1217, baseType: !282, size: 32, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !496, file: !495, line: 1218, baseType: !282, size: 32, offset: 96)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !496, file: !495, line: 1219, baseType: !282, size: 32, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !496, file: !495, line: 1220, baseType: !282, size: 32, offset: 160)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !496, file: !495, line: 1221, baseType: !282, size: 32, offset: 192)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !496, file: !495, line: 1222, baseType: !282, size: 32, offset: 224)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !496, file: !495, line: 1223, baseType: !282, size: 32, offset: 256)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !496, file: !495, line: 1224, baseType: !282, size: 32, offset: 288)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !496, file: !495, line: 1225, baseType: !282, size: 32, offset: 320)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !513, line: 27, size: 96, elements: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = !{!515, !516, !517}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !512, file: !513, line: 29, baseType: !110, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !512, file: !513, line: 31, baseType: !305, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !512, file: !513, line: 37, baseType: !518, size: 32, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !480, line: 146, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !480, line: 141, size: 32, elements: !520)
!520 = !{!521}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !519, file: !480, line: 143, baseType: !110, size: 32)
!522 = !{!488}
!523 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !526, file: !533, line: 21, type: !268, isLocal: true, isDefinition: true)
!526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !528, globals: !532, splitDebugInlining: false, nameTableKind: None)
!527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!528 = !{!529, !109, !106}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !531, line: 22, baseType: !109)
!531 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!532 = !{!524}
!533 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !536, file: !541, line: 13, type: !558, isLocal: true, isDefinition: true)
!536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !538, splitDebugInlining: false, nameTableKind: None)
!537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!538 = !{!539, !534}
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "mpu_config", scope: !536, file: !541, line: 37, type: !542, isLocal: false, isDefinition: true)
!541 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !513, line: 41, size: 64, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !543, file: !513, line: 43, baseType: !110, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !543, file: !513, line: 45, baseType: !547, size: 32, offset: 32)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !513, line: 27, size: 96, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !549, file: !513, line: 29, baseType: !110, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !549, file: !513, line: 31, baseType: !305, size: 32, offset: 32)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !549, file: !513, line: 37, baseType: !554, size: 32, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !480, line: 146, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !480, line: 141, size: 32, elements: !556)
!556 = !{!557}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !555, file: !480, line: 143, baseType: !110, size: 32)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 192, elements: !173)
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !561, file: !674, line: 72, type: !758, isLocal: true, isDefinition: true)
!561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !563, retainedTypes: !660, globals: !671, splitDebugInlining: false, nameTableKind: None)
!562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!563 = !{!30, !564}
!564 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !278, line: 65, baseType: !109, size: 32, elements: !565)
!565 = !{!566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659}
!566 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!567 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!568 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!569 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!570 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!571 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!572 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!573 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!574 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!575 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!576 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!577 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!578 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!579 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!580 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!581 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!582 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!583 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!584 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!585 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!586 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!587 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!588 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!589 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!590 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!591 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!592 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!593 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!594 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!595 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!596 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!597 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!598 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!599 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!600 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!601 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!602 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!603 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!604 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!605 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!606 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!607 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!608 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!609 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!610 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!611 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!612 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!613 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!614 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!615 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!616 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!617 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!618 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!619 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!620 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!621 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!622 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!623 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!624 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!625 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!626 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!627 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!628 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!629 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!630 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!631 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!632 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!633 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!634 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!635 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!636 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!637 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!638 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!639 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!640 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!641 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!642 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!643 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!644 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!645 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!646 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!647 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!648 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!649 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!650 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!651 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!652 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!653 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!654 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!655 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!656 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!657 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!658 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!659 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!660 = !{!107, !109, !106, !661}
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !278, line: 392, baseType: !663)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 384, size: 192, elements: !664)
!664 = !{!665, !666, !667, !668, !669, !670}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !663, file: !278, line: 386, baseType: !282, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !663, file: !278, line: 387, baseType: !282, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !663, file: !278, line: 388, baseType: !282, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !663, file: !278, line: 389, baseType: !282, size: 32, offset: 96)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !663, file: !278, line: 390, baseType: !282, size: 32, offset: 128)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !663, file: !278, line: 391, baseType: !282, size: 32, offset: 160)
!671 = !{!672, !678, !694, !705, !722, !559, !724, !738, !740, !742, !744, !746, !748, !750, !752, !754, !756}
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !561, file: !674, line: 424, type: !675, isLocal: false, isDefinition: true, align: 16)
!674 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 64, elements: !676)
!676 = !{!677}
!677 = !DISubrange(count: 4)
!678 = !DIGlobalVariableExpression(var: !679, expr: !DIExpression())
!679 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !561, file: !674, line: 424, type: !680, isLocal: false, isDefinition: true, align: 32)
!680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !681)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !302, line: 378, size: 192, elements: !682)
!682 = !{!683, !684, !685, !686, !692, !693}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !681, file: !302, line: 380, baseType: !305, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !681, file: !302, line: 382, baseType: !13, size: 32, offset: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !681, file: !302, line: 384, baseType: !13, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !681, file: !302, line: 386, baseType: !687, size: 32, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 32)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !302, line: 351, size: 16, elements: !689)
!689 = !{!690, !691}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !688, file: !302, line: 359, baseType: !178, size: 8)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !688, file: !302, line: 364, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !681, file: !302, line: 388, baseType: !106, size: 32, offset: 128)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !681, file: !302, line: 396, baseType: !318, size: 32, offset: 160)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !561, file: !674, line: 424, type: !696, isLocal: true, isDefinition: true, align: 32)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !293, line: 51, size: 64, elements: !698)
!698 = !{!699, !704}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !697, file: !293, line: 60, baseType: !700, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 32)
!701 = !DISubroutineType(types: !702)
!702 = !{!109, !703}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !697, file: !293, line: 65, baseType: !703, size: 32, offset: 32)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "exti_data", scope: !561, file: !674, line: 423, type: !707, isLocal: true, isDefinition: true)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !674, line: 107, size: 1472, elements: !708)
!708 = !{!709}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !707, file: !674, line: 109, baseType: !710, size: 1472)
!710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 1472, elements: !720)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !674, line: 101, size: 64, elements: !712)
!712 = !{!713, !719}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !711, file: !674, line: 102, baseType: !714, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !715, line: 63, baseType: !716)
!715 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!717 = !DISubroutineType(types: !718)
!718 = !{null, !109, !106}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !711, file: !674, line: 103, baseType: !106, size: 32, offset: 32)
!720 = !{!721}
!721 = !DISubrange(count: 23)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !561, file: !674, line: 424, type: !688, isLocal: true, isDefinition: true, align: 8)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !726, file: !674, line: 493, type: !731, isLocal: true, isDefinition: true, align: 32)
!726 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !674, file: !674, line: 460, type: !727, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !729)
!727 = !DISubroutineType(types: !728)
!728 = !{null, !703}
!729 = !{!730}
!730 = !DILocalVariable(name: "dev", arg: 1, scope: !726, file: !674, line: 460, type: !703)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !732)
!732 = !{!733, !735, !736, !737}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !731, file: !10, line: 55, baseType: !734, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !731, file: !10, line: 57, baseType: !734, size: 32, offset: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !731, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !731, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !726, file: !674, line: 497, type: !731, isLocal: true, isDefinition: true, align: 32)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !726, file: !674, line: 507, type: !731, isLocal: true, isDefinition: true, align: 32)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !726, file: !674, line: 512, type: !731, isLocal: true, isDefinition: true, align: 32)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !726, file: !674, line: 516, type: !731, isLocal: true, isDefinition: true, align: 32)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !726, file: !674, line: 523, type: !731, isLocal: true, isDefinition: true, align: 32)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !726, file: !674, line: 527, type: !731, isLocal: true, isDefinition: true, align: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !726, file: !674, line: 581, type: !731, isLocal: true, isDefinition: true, align: 32)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !726, file: !674, line: 586, type: !731, isLocal: true, isDefinition: true, align: 32)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !726, file: !674, line: 591, type: !731, isLocal: true, isDefinition: true, align: 32)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !726, file: !674, line: 595, type: !731, isLocal: true, isDefinition: true, align: 32)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !759, size: 736, elements: !720)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !760)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !278, line: 163, baseType: !564)
!761 = !DIGlobalVariableExpression(var: !762, expr: !DIExpression())
!762 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !763, file: !768, line: 25, type: !796, isLocal: false, isDefinition: true, align: 16)
!763 = distinct !DICompileUnit(language: DW_LANG_C99, file: !764, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !765, splitDebugInlining: false, nameTableKind: None)
!764 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!765 = !{!766, !761, !772, !774, !776, !778, !780, !782, !784, !786, !788, !790, !792, !794}
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !763, file: !768, line: 20, type: !769, isLocal: false, isDefinition: true, align: 16)
!768 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 240, elements: !770)
!770 = !{!771}
!771 = !DISubrange(count: 15)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !763, file: !768, line: 32, type: !675, isLocal: false, isDefinition: true, align: 16)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !763, file: !768, line: 39, type: !675, isLocal: false, isDefinition: true, align: 16)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !763, file: !768, line: 46, type: !675, isLocal: false, isDefinition: true, align: 16)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !763, file: !768, line: 53, type: !675, isLocal: false, isDefinition: true, align: 16)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !763, file: !768, line: 60, type: !675, isLocal: false, isDefinition: true, align: 16)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !763, file: !768, line: 67, type: !675, isLocal: false, isDefinition: true, align: 16)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !763, file: !768, line: 74, type: !675, isLocal: false, isDefinition: true, align: 16)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !763, file: !768, line: 81, type: !675, isLocal: false, isDefinition: true, align: 16)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !763, file: !768, line: 88, type: !675, isLocal: false, isDefinition: true, align: 16)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !763, file: !768, line: 95, type: !675, isLocal: false, isDefinition: true, align: 16)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !763, file: !768, line: 102, type: !675, isLocal: false, isDefinition: true, align: 16)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !763, file: !768, line: 109, type: !675, isLocal: false, isDefinition: true, align: 16)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 48, elements: !797)
!797 = !{!798}
!798 = !DISubrange(count: 3)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !801, file: !866, line: 398, type: !899, isLocal: true, isDefinition: true)
!801 = distinct !DICompileUnit(language: DW_LANG_C99, file: !802, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !803, retainedTypes: !816, globals: !863, splitDebugInlining: false, nameTableKind: None)
!802 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!803 = !{!804, !30, !809}
!804 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !805, line: 197, baseType: !32, size: 32, elements: !806)
!805 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!806 = !{!807, !808}
!807 = !DIEnumerator(name: "SUCCESS", value: 0)
!808 = !DIEnumerator(name: "ERROR", value: 1)
!809 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !810, line: 44, baseType: !32, size: 32, elements: !811)
!810 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!811 = !{!812, !813, !814, !815}
!812 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!813 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!814 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!815 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!816 = !{!106, !109, !110, !817, !856, !862}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !278, line: 586, baseType: !819)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 550, size: 1216, elements: !820)
!820 = !{!821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !819, file: !278, line: 552, baseType: !282, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !819, file: !278, line: 553, baseType: !282, size: 32, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !819, file: !278, line: 554, baseType: !282, size: 32, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !819, file: !278, line: 555, baseType: !282, size: 32, offset: 96)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !819, file: !278, line: 556, baseType: !282, size: 32, offset: 128)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !819, file: !278, line: 557, baseType: !282, size: 32, offset: 160)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !819, file: !278, line: 558, baseType: !282, size: 32, offset: 192)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !819, file: !278, line: 559, baseType: !110, size: 32, offset: 224)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !819, file: !278, line: 560, baseType: !282, size: 32, offset: 256)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !819, file: !278, line: 561, baseType: !282, size: 32, offset: 288)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !819, file: !278, line: 562, baseType: !832, size: 64, offset: 320)
!832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !173)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !819, file: !278, line: 563, baseType: !282, size: 32, offset: 384)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !819, file: !278, line: 564, baseType: !282, size: 32, offset: 416)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !819, file: !278, line: 565, baseType: !282, size: 32, offset: 448)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !819, file: !278, line: 566, baseType: !110, size: 32, offset: 480)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !819, file: !278, line: 567, baseType: !282, size: 32, offset: 512)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !819, file: !278, line: 568, baseType: !282, size: 32, offset: 544)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !819, file: !278, line: 569, baseType: !832, size: 64, offset: 576)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !819, file: !278, line: 570, baseType: !282, size: 32, offset: 640)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !819, file: !278, line: 571, baseType: !282, size: 32, offset: 672)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !819, file: !278, line: 572, baseType: !282, size: 32, offset: 704)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !819, file: !278, line: 573, baseType: !110, size: 32, offset: 736)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !819, file: !278, line: 574, baseType: !282, size: 32, offset: 768)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !819, file: !278, line: 575, baseType: !282, size: 32, offset: 800)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !819, file: !278, line: 576, baseType: !832, size: 64, offset: 832)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !819, file: !278, line: 577, baseType: !282, size: 32, offset: 896)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !819, file: !278, line: 578, baseType: !282, size: 32, offset: 928)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !819, file: !278, line: 579, baseType: !832, size: 64, offset: 960)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !819, file: !278, line: 580, baseType: !282, size: 32, offset: 1024)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !819, file: !278, line: 581, baseType: !282, size: 32, offset: 1056)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !819, file: !278, line: 582, baseType: !282, size: 32, offset: 1088)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !819, file: !278, line: 583, baseType: !282, size: 32, offset: 1120)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !819, file: !278, line: 584, baseType: !282, size: 32, offset: 1152)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !819, file: !278, line: 585, baseType: !282, size: 32, offset: 1184)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 32)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !858, line: 343, size: 64, elements: !859)
!858 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!859 = !{!860, !861}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !857, file: !858, line: 344, baseType: !110, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !857, file: !858, line: 345, baseType: !110, size: 32, offset: 32)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!863 = !{!864, !870, !886, !897, !799}
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !801, file: !866, line: 752, type: !867, isLocal: false, isDefinition: true, align: 16)
!866 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 800, elements: !868)
!868 = !{!869}
!869 = !DISubrange(count: 50)
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !801, file: !866, line: 752, type: !872, isLocal: false, isDefinition: true, align: 32)
!872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !873)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !302, line: 378, size: 192, elements: !874)
!874 = !{!875, !876, !877, !878, !884, !885}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !873, file: !302, line: 380, baseType: !305, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !873, file: !302, line: 382, baseType: !13, size: 32, offset: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !873, file: !302, line: 384, baseType: !13, size: 32, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !873, file: !302, line: 386, baseType: !879, size: 32, offset: 96)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 32)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !302, line: 351, size: 16, elements: !881)
!881 = !{!882, !883}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !880, file: !302, line: 359, baseType: !178, size: 8)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !880, file: !302, line: 364, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !873, file: !302, line: 388, baseType: !106, size: 32, offset: 128)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !873, file: !302, line: 396, baseType: !318, size: 32, offset: 160)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !801, file: !866, line: 752, type: !888, isLocal: true, isDefinition: true, align: 32)
!888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !889)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !293, line: 51, size: 64, elements: !890)
!890 = !{!891, !896}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !889, file: !293, line: 60, baseType: !892, size: 32)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!893 = !DISubroutineType(types: !894)
!894 = !{!109, !895}
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !889, file: !293, line: 65, baseType: !895, size: 32, offset: 32)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !801, file: !866, line: 752, type: !880, isLocal: true, isDefinition: true, align: 8)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !810, line: 100, size: 224, elements: !900)
!900 = !{!901, !907, !908, !917, !922, !927, !933}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !899, file: !810, line: 101, baseType: !902, size: 32)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !810, line: 76, baseType: !903)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 32)
!904 = !DISubroutineType(types: !905)
!905 = !{!109, !895, !906}
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !810, line: 56, baseType: !106)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !899, file: !810, line: 102, baseType: !902, size: 32, offset: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !899, file: !810, line: 103, baseType: !909, size: 32, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !810, line: 83, baseType: !910)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!911 = !DISubroutineType(types: !912)
!912 = !{!109, !895, !906, !913, !106}
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !810, line: 72, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{null, !895, !906, !106}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !899, file: !810, line: 104, baseType: !918, size: 32, offset: 96)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !810, line: 79, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!109, !895, !906, !862}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !899, file: !810, line: 105, baseType: !923, size: 32, offset: 128)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !810, line: 88, baseType: !924)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 32)
!925 = !DISubroutineType(types: !926)
!926 = !{!809, !895, !906}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !899, file: !810, line: 106, baseType: !928, size: 32, offset: 160)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !810, line: 92, baseType: !929)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!930 = !DISubroutineType(types: !931)
!931 = !{!109, !895, !906, !932}
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !810, line: 64, baseType: !106)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !899, file: !810, line: 107, baseType: !934, size: 32, offset: 192)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !810, line: 96, baseType: !935)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DISubroutineType(types: !937)
!937 = !{!109, !895, !906, !106}
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !940, file: !997, line: 603, type: !999, isLocal: true, isDefinition: true, align: 32)
!940 = distinct !DICompileUnit(language: DW_LANG_C99, file: !941, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !942, globals: !994, splitDebugInlining: false, nameTableKind: None)
!941 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!942 = !{!106, !109, !943}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !946, line: 336, size: 160, elements: !947)
!946 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!947 = !{!948, !968, !972, !976, !989}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !945, file: !946, line: 365, baseType: !949, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = !DISubroutineType(types: !951)
!951 = !{!109, !952, !967}
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !302, line: 378, size: 192, elements: !955)
!955 = !{!956, !957, !958, !959, !965, !966}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !954, file: !302, line: 380, baseType: !305, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !954, file: !302, line: 382, baseType: !13, size: 32, offset: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !954, file: !302, line: 384, baseType: !13, size: 32, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !954, file: !302, line: 386, baseType: !960, size: 32, offset: 96)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !302, line: 351, size: 16, elements: !962)
!962 = !{!963, !964}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !961, file: !302, line: 359, baseType: !178, size: 8)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !961, file: !302, line: 364, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !954, file: !302, line: 388, baseType: !106, size: 32, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !954, file: !302, line: 396, baseType: !318, size: 32, offset: 160)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !945, file: !946, line: 366, baseType: !969, size: 32, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DISubroutineType(types: !971)
!971 = !{null, !952, !179}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !945, file: !946, line: 374, baseType: !973, size: 32, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!109, !952}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !945, file: !946, line: 377, baseType: !977, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DISubroutineType(types: !979)
!979 = !{!109, !952, !980}
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !946, line: 122, size: 64, elements: !983)
!983 = !{!984, !985, !986, !987, !988}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !982, file: !946, line: 123, baseType: !110, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !982, file: !946, line: 124, baseType: !178, size: 8, offset: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !982, file: !946, line: 125, baseType: !178, size: 8, offset: 40)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !982, file: !946, line: 126, baseType: !178, size: 8, offset: 48)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !982, file: !946, line: 127, baseType: !178, size: 8, offset: 56)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !945, file: !946, line: 379, baseType: !990, size: 32, offset: 128)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{!109, !952, !993}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!994 = !{!938, !995}
!995 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression())
!996 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !940, file: !997, line: 38, type: !998, isLocal: true, isDefinition: true)
!997 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !293, line: 51, size: 64, elements: !1001)
!1001 = !{!1002, !1003}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1000, file: !293, line: 60, baseType: !973, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1000, file: !293, line: 65, baseType: !952, size: 32, offset: 32)
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1006, file: !1178, line: 762, type: !1287, isLocal: true, isDefinition: true)
!1006 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1007, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1008, retainedTypes: !1026, globals: !1175, splitDebugInlining: false, nameTableKind: None)
!1007 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!1008 = !{!30, !1009, !1015, !1020, !809}
!1009 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1010, line: 506, baseType: !32, size: 32, elements: !1011)
!1010 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1011 = !{!1012, !1013, !1014}
!1012 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1013 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1014 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1015 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1010, line: 512, baseType: !32, size: 32, elements: !1016)
!1016 = !{!1017, !1018, !1019}
!1017 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1018 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1019 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1020 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !715, line: 43, baseType: !32, size: 32, elements: !1021)
!1021 = !{!1022, !1023, !1024, !1025}
!1022 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1023 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1024 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1025 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1026 = !{!106, !109, !1027, !1097, !1102, !1062, !1015, !1009, !1107, !1108, !110, !1122, !1077, !1134, !1135, !1136}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1010, line: 523, size: 288, elements: !1030)
!1030 = !{!1031, !1052, !1058, !1063, !1067, !1068, !1069, !1073, !1093}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1029, file: !1010, line: 524, baseType: !1032, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!109, !1035, !1050, !1051}
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !302, line: 378, size: 192, elements: !1038)
!1038 = !{!1039, !1040, !1041, !1042, !1048, !1049}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1037, file: !302, line: 380, baseType: !305, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1037, file: !302, line: 382, baseType: !13, size: 32, offset: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1037, file: !302, line: 384, baseType: !13, size: 32, offset: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1037, file: !302, line: 386, baseType: !1043, size: 32, offset: 96)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !302, line: 351, size: 16, elements: !1045)
!1045 = !{!1046, !1047}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1044, file: !302, line: 359, baseType: !178, size: 8)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1044, file: !302, line: 364, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1037, file: !302, line: 388, baseType: !106, size: 32, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1037, file: !302, line: 396, baseType: !318, size: 32, offset: 160)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1010, line: 237, baseType: !178)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1010, line: 257, baseType: !110)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1029, file: !1010, line: 530, baseType: !1053, size: 32, offset: 32)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!109, !1035, !1056}
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1010, line: 229, baseType: !110)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1029, file: !1010, line: 532, baseType: !1059, size: 32, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!109, !1035, !1062, !1057}
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1010, line: 216, baseType: !110)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1029, file: !1010, line: 535, baseType: !1064, size: 32, offset: 96)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!109, !1035, !1062}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1029, file: !1010, line: 537, baseType: !1064, size: 32, offset: 128)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1029, file: !1010, line: 539, baseType: !1064, size: 32, offset: 160)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1029, file: !1010, line: 541, baseType: !1070, size: 32, offset: 192)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!109, !1035, !1050, !1009, !1015}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1029, file: !1010, line: 544, baseType: !1074, size: 32, offset: 224)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!109, !1035, !1077, !315}
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1010, line: 478, size: 96, elements: !1079)
!1079 = !{!1080, !1087, !1092}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1078, file: !1010, line: 482, baseType: !1081, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1082, line: 33, baseType: !1083)
!1082 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1082, line: 29, size: 32, elements: !1084)
!1084 = !{!1085}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1083, file: !1082, line: 30, baseType: !1086, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1078, file: !1010, line: 485, baseType: !1088, size: 32, offset: 32)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1010, line: 464, baseType: !1089)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{null, !1035, !1077, !1062}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1078, file: !1010, line: 493, baseType: !1062, size: 32, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1029, file: !1010, line: 547, baseType: !1094, size: 32, offset: 256)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!110, !1035}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1010, line: 428, size: 32, elements: !1100)
!1100 = !{!1101}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1099, file: !1010, line: 434, baseType: !1062, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1010, line: 441, size: 32, elements: !1105)
!1105 = !{!1106}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1104, file: !1010, line: 447, baseType: !1062, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !278, line: 469, baseType: !1110)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 458, size: 320, elements: !1111)
!1111 = !{!1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1110, file: !278, line: 460, baseType: !282, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1110, file: !278, line: 461, baseType: !282, size: 32, offset: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1110, file: !278, line: 462, baseType: !282, size: 32, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1110, file: !278, line: 463, baseType: !282, size: 32, offset: 96)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1110, file: !278, line: 464, baseType: !282, size: 32, offset: 128)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1110, file: !278, line: 465, baseType: !282, size: 32, offset: 160)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1110, file: !278, line: 466, baseType: !282, size: 32, offset: 192)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1110, file: !278, line: 467, baseType: !282, size: 32, offset: 224)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1110, file: !278, line: 468, baseType: !1121, size: 64, offset: 256)
!1121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 64, elements: !173)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !278, line: 484, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 475, size: 384, elements: !1125)
!1125 = !{!1126, !1127, !1128, !1130, !1131, !1132, !1133}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1124, file: !278, line: 477, baseType: !282, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1124, file: !278, line: 478, baseType: !282, size: 32, offset: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1124, file: !278, line: 479, baseType: !1129, size: 128, offset: 64)
!1129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 128, elements: !676)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1124, file: !278, line: 480, baseType: !832, size: 64, offset: 192)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1124, file: !278, line: 481, baseType: !282, size: 32, offset: 256)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1124, file: !278, line: 482, baseType: !832, size: 64, offset: 288)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1124, file: !278, line: 483, baseType: !282, size: 32, offset: 352)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1138)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !810, line: 100, size: 224, elements: !1139)
!1139 = !{!1140, !1145, !1146, !1155, !1160, !1165, !1170}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1138, file: !810, line: 101, baseType: !1141, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !810, line: 76, baseType: !1142)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!109, !1035, !906}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1138, file: !810, line: 102, baseType: !1141, size: 32, offset: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1138, file: !810, line: 103, baseType: !1147, size: 32, offset: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !810, line: 83, baseType: !1148)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 32)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!109, !1035, !906, !1151, !106}
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !810, line: 72, baseType: !1152)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{null, !1035, !906, !106}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1138, file: !810, line: 104, baseType: !1156, size: 32, offset: 96)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !810, line: 79, baseType: !1157)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!109, !1035, !906, !862}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1138, file: !810, line: 105, baseType: !1161, size: 32, offset: 128)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !810, line: 88, baseType: !1162)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!809, !1035, !906}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1138, file: !810, line: 106, baseType: !1166, size: 32, offset: 160)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !810, line: 92, baseType: !1167)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!109, !1035, !906, !932}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1138, file: !810, line: 107, baseType: !1171, size: 32, offset: 192)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !810, line: 96, baseType: !1172)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!109, !1035, !906, !106}
!1175 = !{!1176, !1182, !1184, !1194, !1196, !1198, !1200, !1202, !1204, !1206, !1211, !1213, !1215, !1217, !1219, !1221, !1223, !1225, !1227, !1229, !1231, !1233, !1235, !1237, !1239, !1253, !1255, !1257, !1259, !1261, !1263, !1265, !1267, !1269, !1271, !1273, !1275, !1277, !1279, !1281, !1004, !1283, !1285, !1298, !1300, !1302, !1304, !1306, !1308}
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1006, file: !1178, line: 762, type: !1179, isLocal: false, isDefinition: true, align: 16)
!1178 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 80, elements: !1180)
!1180 = !{!1181}
!1181 = !DISubrange(count: 5)
!1182 = !DIGlobalVariableExpression(var: !1183, expr: !DIExpression())
!1183 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1006, file: !1178, line: 762, type: !1036, isLocal: false, isDefinition: true, align: 32)
!1184 = !DIGlobalVariableExpression(var: !1185, expr: !DIExpression())
!1185 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1006, file: !1178, line: 762, type: !1186, isLocal: true, isDefinition: true, align: 32)
!1186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !293, line: 51, size: 64, elements: !1188)
!1188 = !{!1189, !1193}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1187, file: !293, line: 60, baseType: !1190, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!109, !1035}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1187, file: !293, line: 65, baseType: !1035, size: 32, offset: 32)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1006, file: !1178, line: 766, type: !1179, isLocal: false, isDefinition: true, align: 16)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1006, file: !1178, line: 766, type: !1036, isLocal: false, isDefinition: true, align: 32)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1006, file: !1178, line: 766, type: !1186, isLocal: true, isDefinition: true, align: 32)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1006, file: !1178, line: 770, type: !1179, isLocal: false, isDefinition: true, align: 16)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1006, file: !1178, line: 770, type: !1036, isLocal: false, isDefinition: true, align: 32)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1006, file: !1178, line: 770, type: !1186, isLocal: true, isDefinition: true, align: 32)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1006, file: !1178, line: 774, type: !1208, isLocal: false, isDefinition: true, align: 16)
!1208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 144, elements: !1209)
!1209 = !{!1210}
!1210 = !DISubrange(count: 9)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1006, file: !1178, line: 774, type: !1036, isLocal: false, isDefinition: true, align: 32)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1006, file: !1178, line: 774, type: !1186, isLocal: true, isDefinition: true, align: 32)
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1006, file: !1178, line: 778, type: !1179, isLocal: false, isDefinition: true, align: 16)
!1217 = !DIGlobalVariableExpression(var: !1218, expr: !DIExpression())
!1218 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1006, file: !1178, line: 778, type: !1036, isLocal: false, isDefinition: true, align: 32)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1006, file: !1178, line: 778, type: !1186, isLocal: true, isDefinition: true, align: 32)
!1221 = !DIGlobalVariableExpression(var: !1222, expr: !DIExpression())
!1222 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1006, file: !1178, line: 782, type: !1179, isLocal: false, isDefinition: true, align: 16)
!1223 = !DIGlobalVariableExpression(var: !1224, expr: !DIExpression())
!1224 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1006, file: !1178, line: 782, type: !1036, isLocal: false, isDefinition: true, align: 32)
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1006, file: !1178, line: 782, type: !1186, isLocal: true, isDefinition: true, align: 32)
!1227 = !DIGlobalVariableExpression(var: !1228, expr: !DIExpression())
!1228 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1006, file: !1178, line: 786, type: !1179, isLocal: false, isDefinition: true, align: 16)
!1229 = !DIGlobalVariableExpression(var: !1230, expr: !DIExpression())
!1230 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1006, file: !1178, line: 786, type: !1036, isLocal: false, isDefinition: true, align: 32)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1006, file: !1178, line: 786, type: !1186, isLocal: true, isDefinition: true, align: 32)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1006, file: !1178, line: 790, type: !1179, isLocal: false, isDefinition: true, align: 16)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1006, file: !1178, line: 790, type: !1036, isLocal: false, isDefinition: true, align: 32)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1006, file: !1178, line: 790, type: !1186, isLocal: true, isDefinition: true, align: 32)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1006, file: !1178, line: 762, type: !1241, isLocal: true, isDefinition: true)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1242, line: 237, size: 128, elements: !1243)
!1242 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1243 = !{!1244, !1245, !1246}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1241, file: !1242, line: 239, baseType: !1104, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1241, file: !1242, line: 241, baseType: !1035, size: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1241, file: !1242, line: 243, baseType: !1247, size: 64, offset: 64)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1082, line: 40, baseType: !1248)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1082, line: 35, size: 64, elements: !1249)
!1249 = !{!1250, !1252}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1248, file: !1082, line: 36, baseType: !1251, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1248, file: !1082, line: 37, baseType: !1251, size: 32, offset: 32)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1006, file: !1178, line: 762, type: !1044, isLocal: true, isDefinition: true, align: 8)
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1006, file: !1178, line: 766, type: !1241, isLocal: true, isDefinition: true)
!1257 = !DIGlobalVariableExpression(var: !1258, expr: !DIExpression())
!1258 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1006, file: !1178, line: 766, type: !1044, isLocal: true, isDefinition: true, align: 8)
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1006, file: !1178, line: 770, type: !1241, isLocal: true, isDefinition: true)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1006, file: !1178, line: 770, type: !1044, isLocal: true, isDefinition: true, align: 8)
!1263 = !DIGlobalVariableExpression(var: !1264, expr: !DIExpression())
!1264 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1006, file: !1178, line: 774, type: !1241, isLocal: true, isDefinition: true)
!1265 = !DIGlobalVariableExpression(var: !1266, expr: !DIExpression())
!1266 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1006, file: !1178, line: 774, type: !1044, isLocal: true, isDefinition: true, align: 8)
!1267 = !DIGlobalVariableExpression(var: !1268, expr: !DIExpression())
!1268 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1006, file: !1178, line: 778, type: !1241, isLocal: true, isDefinition: true)
!1269 = !DIGlobalVariableExpression(var: !1270, expr: !DIExpression())
!1270 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1006, file: !1178, line: 778, type: !1044, isLocal: true, isDefinition: true, align: 8)
!1271 = !DIGlobalVariableExpression(var: !1272, expr: !DIExpression())
!1272 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1006, file: !1178, line: 782, type: !1241, isLocal: true, isDefinition: true)
!1273 = !DIGlobalVariableExpression(var: !1274, expr: !DIExpression())
!1274 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1006, file: !1178, line: 782, type: !1044, isLocal: true, isDefinition: true, align: 8)
!1275 = !DIGlobalVariableExpression(var: !1276, expr: !DIExpression())
!1276 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1006, file: !1178, line: 786, type: !1241, isLocal: true, isDefinition: true)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1006, file: !1178, line: 786, type: !1044, isLocal: true, isDefinition: true, align: 8)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1006, file: !1178, line: 790, type: !1241, isLocal: true, isDefinition: true)
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1006, file: !1178, line: 790, type: !1044, isLocal: true, isDefinition: true, align: 8)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1006, file: !1178, line: 656, type: !1028, isLocal: true, isDefinition: true)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1006, file: !1178, line: 766, type: !1287, isLocal: true, isDefinition: true)
!1287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1242, line: 224, size: 160, elements: !1289)
!1289 = !{!1290, !1291, !1292, !1293}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1288, file: !1242, line: 226, baseType: !1099, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1288, file: !1242, line: 228, baseType: !862, size: 32, offset: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1288, file: !1242, line: 230, baseType: !109, size: 32, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1288, file: !1242, line: 231, baseType: !1294, size: 64, offset: 96)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !858, line: 343, size: 64, elements: !1295)
!1295 = !{!1296, !1297}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1294, file: !858, line: 344, baseType: !110, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1294, file: !858, line: 345, baseType: !110, size: 32, offset: 32)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1006, file: !1178, line: 770, type: !1287, isLocal: true, isDefinition: true)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1006, file: !1178, line: 774, type: !1287, isLocal: true, isDefinition: true)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1006, file: !1178, line: 778, type: !1287, isLocal: true, isDefinition: true)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1006, file: !1178, line: 782, type: !1287, isLocal: true, isDefinition: true)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1006, file: !1178, line: 786, type: !1287, isLocal: true, isDefinition: true)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1006, file: !1178, line: 790, type: !1287, isLocal: true, isDefinition: true)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1312, file: !1451, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1314, retainedTypes: !1347, globals: !1448, splitDebugInlining: false, nameTableKind: None)
!1313 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!1314 = !{!30, !1315, !1322, !1329, !1336, !1342, !809}
!1315 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !946, line: 47, baseType: !32, size: 32, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320, !1321}
!1317 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1318 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1319 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1320 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1321 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1322 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !946, line: 75, baseType: !32, size: 32, elements: !1323)
!1323 = !{!1324, !1325, !1326, !1327, !1328}
!1324 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1325 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1326 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1327 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1328 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !946, line: 92, baseType: !32, size: 32, elements: !1330)
!1330 = !{!1331, !1332, !1333, !1334, !1335}
!1331 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1332 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1333 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1334 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1335 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !946, line: 84, baseType: !32, size: 32, elements: !1337)
!1337 = !{!1338, !1339, !1340, !1341}
!1338 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1339 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1340 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1341 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !946, line: 107, baseType: !32, size: 32, elements: !1343)
!1343 = !{!1344, !1345, !1346}
!1344 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1345 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1346 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1347 = !{!106, !109, !1348, !179, !178, !1397, !110, !906, !1408, !192, !111, !1447}
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 32)
!1349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1350)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !946, line: 336, size: 160, elements: !1351)
!1351 = !{!1352, !1371, !1375, !1379, !1392}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1350, file: !946, line: 365, baseType: !1353, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 32)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{!109, !1356, !967}
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !302, line: 378, size: 192, elements: !1359)
!1359 = !{!1360, !1361, !1362, !1363, !1369, !1370}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1358, file: !302, line: 380, baseType: !305, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1358, file: !302, line: 382, baseType: !13, size: 32, offset: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1358, file: !302, line: 384, baseType: !13, size: 32, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1358, file: !302, line: 386, baseType: !1364, size: 32, offset: 96)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 32)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !302, line: 351, size: 16, elements: !1366)
!1366 = !{!1367, !1368}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1365, file: !302, line: 359, baseType: !178, size: 8)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1365, file: !302, line: 364, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1358, file: !302, line: 388, baseType: !106, size: 32, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1358, file: !302, line: 396, baseType: !318, size: 32, offset: 160)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1350, file: !946, line: 366, baseType: !1372, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 32)
!1373 = !DISubroutineType(types: !1374)
!1374 = !{null, !1356, !179}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1350, file: !946, line: 374, baseType: !1376, size: 32, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 32)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!109, !1356}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1350, file: !946, line: 377, baseType: !1380, size: 32, offset: 96)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 32)
!1381 = !DISubroutineType(types: !1382)
!1382 = !{!109, !1356, !1383}
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !946, line: 122, size: 64, elements: !1386)
!1386 = !{!1387, !1388, !1389, !1390, !1391}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1385, file: !946, line: 123, baseType: !110, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1385, file: !946, line: 124, baseType: !178, size: 8, offset: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1385, file: !946, line: 125, baseType: !178, size: 8, offset: 40)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1385, file: !946, line: 126, baseType: !178, size: 8, offset: 48)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1385, file: !946, line: 127, baseType: !178, size: 8, offset: 56)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1350, file: !946, line: 379, baseType: !1393, size: 32, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{!109, !1356, !1396}
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !278, line: 783, baseType: !1399)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 774, size: 224, elements: !1400)
!1400 = !{!1401, !1402, !1403, !1404, !1405, !1406, !1407}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1399, file: !278, line: 776, baseType: !282, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1399, file: !278, line: 777, baseType: !282, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1399, file: !278, line: 778, baseType: !282, size: 32, offset: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1399, file: !278, line: 779, baseType: !282, size: 32, offset: 96)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1399, file: !278, line: 780, baseType: !282, size: 32, offset: 128)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1399, file: !278, line: 781, baseType: !282, size: 32, offset: 160)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1399, file: !278, line: 782, baseType: !282, size: 32, offset: 192)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1410)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !810, line: 100, size: 224, elements: !1411)
!1411 = !{!1412, !1417, !1418, !1427, !1432, !1437, !1442}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1410, file: !810, line: 101, baseType: !1413, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !810, line: 76, baseType: !1414)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!109, !1356, !906}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1410, file: !810, line: 102, baseType: !1413, size: 32, offset: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1410, file: !810, line: 103, baseType: !1419, size: 32, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !810, line: 83, baseType: !1420)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!109, !1356, !906, !1423, !106}
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !810, line: 72, baseType: !1424)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{null, !1356, !906, !106}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1410, file: !810, line: 104, baseType: !1428, size: 32, offset: 96)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !810, line: 79, baseType: !1429)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!109, !1356, !906, !862}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1410, file: !810, line: 105, baseType: !1433, size: 32, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !810, line: 88, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!809, !1356, !906}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1410, file: !810, line: 106, baseType: !1438, size: 32, offset: 160)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !810, line: 92, baseType: !1439)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 32)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!109, !1356, !906, !932}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1410, file: !810, line: 107, baseType: !1443, size: 32, offset: 192)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !810, line: 96, baseType: !1444)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!109, !1356, !906, !106}
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!1448 = !{!1449, !1455, !1457, !1464, !1466, !1468, !1470, !1472, !1474, !1476, !1478, !1480, !1482, !1484, !1486, !1488, !1310, !1490, !1498, !1521, !1524, !1527, !1529, !1536, !1553, !1555, !1557, !1559, !1561, !1563, !1565, !1567, !1569, !1571, !1573, !1575, !1577, !1579, !1581, !1583, !1585}
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1312, file: !1451, line: 1914, type: !1452, isLocal: false, isDefinition: true, align: 16)
!1451 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 128, elements: !1453)
!1453 = !{!1454}
!1454 = !DISubrange(count: 8)
!1455 = !DIGlobalVariableExpression(var: !1456, expr: !DIExpression())
!1456 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1312, file: !1451, line: 1914, type: !1357, isLocal: false, isDefinition: true, align: 32)
!1457 = !DIGlobalVariableExpression(var: !1458, expr: !DIExpression())
!1458 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1312, file: !1451, line: 1914, type: !1459, isLocal: true, isDefinition: true, align: 32)
!1459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !293, line: 51, size: 64, elements: !1461)
!1461 = !{!1462, !1463}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1460, file: !293, line: 60, baseType: !1376, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1460, file: !293, line: 65, baseType: !1356, size: 32, offset: 32)
!1464 = !DIGlobalVariableExpression(var: !1465, expr: !DIExpression())
!1465 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1312, file: !1451, line: 1914, type: !1452, isLocal: false, isDefinition: true, align: 16)
!1466 = !DIGlobalVariableExpression(var: !1467, expr: !DIExpression())
!1467 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1312, file: !1451, line: 1914, type: !1357, isLocal: false, isDefinition: true, align: 32)
!1468 = !DIGlobalVariableExpression(var: !1469, expr: !DIExpression())
!1469 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1312, file: !1451, line: 1914, type: !1459, isLocal: true, isDefinition: true, align: 32)
!1470 = !DIGlobalVariableExpression(var: !1471, expr: !DIExpression())
!1471 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1312, file: !1451, line: 1914, type: !1452, isLocal: false, isDefinition: true, align: 16)
!1472 = !DIGlobalVariableExpression(var: !1473, expr: !DIExpression())
!1473 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1312, file: !1451, line: 1914, type: !1357, isLocal: false, isDefinition: true, align: 32)
!1474 = !DIGlobalVariableExpression(var: !1475, expr: !DIExpression())
!1475 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1312, file: !1451, line: 1914, type: !1459, isLocal: true, isDefinition: true, align: 32)
!1476 = !DIGlobalVariableExpression(var: !1477, expr: !DIExpression())
!1477 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1312, file: !1451, line: 1914, type: !1452, isLocal: false, isDefinition: true, align: 16)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1312, file: !1451, line: 1914, type: !1357, isLocal: false, isDefinition: true, align: 32)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1312, file: !1451, line: 1914, type: !1459, isLocal: true, isDefinition: true, align: 32)
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1312, file: !1451, line: 1914, type: !1365, isLocal: true, isDefinition: true, align: 8)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1312, file: !1451, line: 1914, type: !1365, isLocal: true, isDefinition: true, align: 8)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1312, file: !1451, line: 1914, type: !1365, isLocal: true, isDefinition: true, align: 8)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1312, file: !1451, line: 1914, type: !1365, isLocal: true, isDefinition: true, align: 8)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1312, file: !1451, line: 1914, type: !1492, isLocal: true, isDefinition: true)
!1492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 64, elements: !484)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !858, line: 343, size: 64, elements: !1495)
!1495 = !{!1496, !1497}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1494, file: !858, line: 344, baseType: !110, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1494, file: !858, line: 345, baseType: !110, size: 32, offset: 32)
!1498 = !DIGlobalVariableExpression(var: !1499, expr: !DIExpression())
!1499 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1312, file: !1451, line: 1914, type: !1500, isLocal: true, isDefinition: true)
!1500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1501)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1502, line: 60, size: 64, elements: !1503)
!1502 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1503 = !{!1504, !1520}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1501, file: !1502, line: 69, baseType: !1505, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1507)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1502, line: 50, size: 64, elements: !1508)
!1508 = !{!1509, !1518, !1519}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1507, file: !1502, line: 52, baseType: !1510, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1512)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1513, line: 37, baseType: !1514)
!1513 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1513, line: 32, size: 64, elements: !1515)
!1515 = !{!1516, !1517}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1514, file: !1513, line: 34, baseType: !110, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1514, file: !1513, line: 36, baseType: !110, size: 32, offset: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1507, file: !1502, line: 54, baseType: !178, size: 8, offset: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1507, file: !1502, line: 56, baseType: !178, size: 8, offset: 40)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1501, file: !1502, line: 71, baseType: !178, size: 8, offset: 32)
!1521 = !DIGlobalVariableExpression(var: !1522, expr: !DIExpression())
!1522 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1312, file: !1451, line: 1914, type: !1523, isLocal: true, isDefinition: true)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1506, size: 64, elements: !484)
!1524 = !DIGlobalVariableExpression(var: !1525, expr: !DIExpression())
!1525 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1312, file: !1451, line: 1914, type: !1526, isLocal: true, isDefinition: true)
!1526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1511, size: 128, elements: !173)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1312, file: !1451, line: 1539, type: !1349, isLocal: true, isDefinition: true)
!1529 = !DIGlobalVariableExpression(var: !1530, expr: !DIExpression())
!1530 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1312, file: !1451, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1532, line: 74, size: 64, elements: !1533)
!1532 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1533 = !{!1534, !1535}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1531, file: !1532, line: 76, baseType: !110, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1531, file: !1532, line: 78, baseType: !1356, size: 32, offset: 32)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1312, file: !1451, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1539)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1532, line: 22, size: 224, elements: !1540)
!1540 = !{!1541, !1542, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1539, file: !1532, line: 24, baseType: !1397, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1539, file: !1532, line: 26, baseType: !1543, size: 32, offset: 32)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1539, file: !1532, line: 28, baseType: !107, size: 32, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1539, file: !1532, line: 30, baseType: !315, size: 8, offset: 96)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1539, file: !1532, line: 32, baseType: !109, size: 32, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1539, file: !1532, line: 34, baseType: !315, size: 8, offset: 160)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1539, file: !1532, line: 36, baseType: !315, size: 8, offset: 168)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1539, file: !1532, line: 38, baseType: !315, size: 8, offset: 176)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1539, file: !1532, line: 40, baseType: !315, size: 8, offset: 184)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1539, file: !1532, line: 41, baseType: !1552, size: 32, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1312, file: !1451, line: 1914, type: !1492, isLocal: true, isDefinition: true)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1312, file: !1451, line: 1914, type: !1500, isLocal: true, isDefinition: true)
!1557 = !DIGlobalVariableExpression(var: !1558, expr: !DIExpression())
!1558 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1312, file: !1451, line: 1914, type: !1523, isLocal: true, isDefinition: true)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1312, file: !1451, line: 1914, type: !1526, isLocal: true, isDefinition: true)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1312, file: !1451, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1312, file: !1451, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1312, file: !1451, line: 1914, type: !1492, isLocal: true, isDefinition: true)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1312, file: !1451, line: 1914, type: !1500, isLocal: true, isDefinition: true)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1312, file: !1451, line: 1914, type: !1523, isLocal: true, isDefinition: true)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1312, file: !1451, line: 1914, type: !1526, isLocal: true, isDefinition: true)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1312, file: !1451, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1312, file: !1451, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1312, file: !1451, line: 1914, type: !1492, isLocal: true, isDefinition: true)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1312, file: !1451, line: 1914, type: !1500, isLocal: true, isDefinition: true)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1312, file: !1451, line: 1914, type: !1523, isLocal: true, isDefinition: true)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1312, file: !1451, line: 1914, type: !1526, isLocal: true, isDefinition: true)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1312, file: !1451, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1589, file: !1667, line: 65, type: !282, isLocal: true, isDefinition: true)
!1589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1591, retainedTypes: !1592, globals: !1664, splitDebugInlining: false, nameTableKind: None)
!1590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!1591 = !{!564}
!1592 = !{!102, !1593, !734, !178, !110, !1601, !1632}
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !495, line: 770, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 764, size: 128, elements: !1596)
!1596 = !{!1597, !1598, !1599, !1600}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1595, file: !495, line: 766, baseType: !282, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1595, file: !495, line: 767, baseType: !282, size: 32, offset: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1595, file: !495, line: 768, baseType: !282, size: 32, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1595, file: !495, line: 769, baseType: !499, size: 32, offset: 96)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !1603)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !1604)
!1604 = !{!1605, !1607, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1622, !1627, !1631}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1603, file: !495, line: 413, baseType: !1606, size: 256)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 256, elements: !1453)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1603, file: !495, line: 414, baseType: !1608, size: 768, offset: 256)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1609)
!1609 = !{!1610}
!1610 = !DISubrange(count: 24)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1603, file: !495, line: 415, baseType: !1606, size: 256, offset: 1024)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1603, file: !495, line: 416, baseType: !1608, size: 768, offset: 1280)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1603, file: !495, line: 417, baseType: !1606, size: 256, offset: 2048)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1603, file: !495, line: 418, baseType: !1608, size: 768, offset: 2304)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1603, file: !495, line: 419, baseType: !1606, size: 256, offset: 3072)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1603, file: !495, line: 420, baseType: !1608, size: 768, offset: 3328)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1603, file: !495, line: 421, baseType: !1606, size: 256, offset: 4096)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1603, file: !495, line: 422, baseType: !1619, size: 1792, offset: 4352)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1620)
!1620 = !{!1621}
!1621 = !DISubrange(count: 56)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1603, file: !495, line: 423, baseType: !1623, size: 1920, offset: 6144)
!1623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1624, size: 1920, elements: !1625)
!1624 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !178)
!1625 = !{!1626}
!1626 = !DISubrange(count: 240)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1603, file: !495, line: 424, baseType: !1628, size: 20608, offset: 8064)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1629)
!1629 = !{!1630}
!1630 = !DISubrange(count: 644)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1603, file: !495, line: 425, baseType: !282, size: 32, offset: 28672)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !1635)
!1635 = !{!1636, !1637, !1638, !1639, !1640, !1641, !1642, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1655, !1656, !1657, !1659, !1661, !1663}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1634, file: !495, line: 447, baseType: !499, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1634, file: !495, line: 448, baseType: !282, size: 32, offset: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1634, file: !495, line: 449, baseType: !282, size: 32, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1634, file: !495, line: 450, baseType: !282, size: 32, offset: 96)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1634, file: !495, line: 451, baseType: !282, size: 32, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1634, file: !495, line: 452, baseType: !282, size: 32, offset: 160)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1634, file: !495, line: 453, baseType: !1643, size: 96, offset: 192)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1624, size: 96, elements: !1644)
!1644 = !{!1645}
!1645 = !DISubrange(count: 12)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1634, file: !495, line: 454, baseType: !282, size: 32, offset: 288)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1634, file: !495, line: 455, baseType: !282, size: 32, offset: 320)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1634, file: !495, line: 456, baseType: !282, size: 32, offset: 352)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1634, file: !495, line: 457, baseType: !282, size: 32, offset: 384)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1634, file: !495, line: 458, baseType: !282, size: 32, offset: 416)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1634, file: !495, line: 459, baseType: !282, size: 32, offset: 448)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1634, file: !495, line: 460, baseType: !282, size: 32, offset: 480)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1634, file: !495, line: 461, baseType: !1654, size: 64, offset: 512)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 64, elements: !173)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1634, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1634, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1634, file: !495, line: 464, baseType: !1658, size: 128, offset: 640)
!1658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 128, elements: !676)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1634, file: !495, line: 465, baseType: !1660, size: 160, offset: 768)
!1660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 160, elements: !1180)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1634, file: !495, line: 466, baseType: !1662, size: 160, offset: 928)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1180)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1634, file: !495, line: 467, baseType: !282, size: 32, offset: 1088)
!1664 = !{!1665, !1691, !1694, !1696, !1698, !1587}
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1589, file: !1667, line: 285, type: !1668, isLocal: true, isDefinition: true, align: 32)
!1667 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !293, line: 51, size: 64, elements: !1670)
!1670 = !{!1671, !1690}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1669, file: !293, line: 60, baseType: !1672, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{!109, !1675}
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !302, line: 378, size: 192, elements: !1678)
!1678 = !{!1679, !1680, !1681, !1682, !1688, !1689}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1677, file: !302, line: 380, baseType: !305, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1677, file: !302, line: 382, baseType: !13, size: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1677, file: !302, line: 384, baseType: !13, size: 32, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1677, file: !302, line: 386, baseType: !1683, size: 32, offset: 96)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 32)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !302, line: 351, size: 16, elements: !1685)
!1685 = !{!1686, !1687}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1684, file: !302, line: 359, baseType: !178, size: 8)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1684, file: !302, line: 364, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1677, file: !302, line: 388, baseType: !106, size: 32, offset: 128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1677, file: !302, line: 396, baseType: !318, size: 32, offset: 160)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1669, file: !293, line: 65, baseType: !1675, size: 32, offset: 32)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "lock", scope: !1589, file: !1667, line: 34, type: !1693, isLocal: true, isDefinition: true)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "last_load", scope: !1589, file: !1667, line: 36, type: !110, isLocal: true, isDefinition: true)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1589, file: !1667, line: 48, type: !110, isLocal: true, isDefinition: true)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1589, file: !1667, line: 54, type: !110, isLocal: true, isDefinition: true)
!1700 = !DIGlobalVariableExpression(var: !1701, expr: !DIExpression())
!1701 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1702, file: !1784, line: 22, type: !1786, isLocal: true, isDefinition: true)
!1702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1704, retainedTypes: !1705, globals: !1781, splitDebugInlining: false, nameTableKind: None)
!1703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!1704 = !{!1009, !1015}
!1705 = !{!1706, !1770, !1775, !1062, !1015, !1009, !1780, !106}
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1708)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1010, line: 523, size: 288, elements: !1709)
!1709 = !{!1710, !1729, !1733, !1737, !1741, !1742, !1743, !1747, !1766}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1708, file: !1010, line: 524, baseType: !1711, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 32)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!109, !1714, !1050, !1051}
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !302, line: 378, size: 192, elements: !1717)
!1717 = !{!1718, !1719, !1720, !1721, !1727, !1728}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1716, file: !302, line: 380, baseType: !305, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1716, file: !302, line: 382, baseType: !13, size: 32, offset: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1716, file: !302, line: 384, baseType: !13, size: 32, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1716, file: !302, line: 386, baseType: !1722, size: 32, offset: 96)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !302, line: 351, size: 16, elements: !1724)
!1724 = !{!1725, !1726}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1723, file: !302, line: 359, baseType: !178, size: 8)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1723, file: !302, line: 364, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1716, file: !302, line: 388, baseType: !106, size: 32, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1716, file: !302, line: 396, baseType: !318, size: 32, offset: 160)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1708, file: !1010, line: 530, baseType: !1730, size: 32, offset: 32)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!109, !1714, !1056}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1708, file: !1010, line: 532, baseType: !1734, size: 32, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 32)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{!109, !1714, !1062, !1057}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1708, file: !1010, line: 535, baseType: !1738, size: 32, offset: 96)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!109, !1714, !1062}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1708, file: !1010, line: 537, baseType: !1738, size: 32, offset: 128)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1708, file: !1010, line: 539, baseType: !1738, size: 32, offset: 160)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1708, file: !1010, line: 541, baseType: !1744, size: 32, offset: 192)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!109, !1714, !1050, !1009, !1015}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1708, file: !1010, line: 544, baseType: !1748, size: 32, offset: 224)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!109, !1714, !1751, !315}
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 32)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1010, line: 478, size: 96, elements: !1753)
!1753 = !{!1754, !1760, !1765}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1752, file: !1010, line: 482, baseType: !1755, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1082, line: 33, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1082, line: 29, size: 32, elements: !1757)
!1757 = !{!1758}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1756, file: !1082, line: 30, baseType: !1759, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1752, file: !1010, line: 485, baseType: !1761, size: 32, offset: 32)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1010, line: 464, baseType: !1762)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DISubroutineType(types: !1764)
!1764 = !{null, !1714, !1751, !1062}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1752, file: !1010, line: 493, baseType: !1062, size: 32, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1708, file: !1010, line: 547, baseType: !1767, size: 32, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{!110, !1714}
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1010, line: 428, size: 32, elements: !1773)
!1773 = !{!1774}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1772, file: !1010, line: 434, baseType: !1062, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1777)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1010, line: 441, size: 32, elements: !1778)
!1778 = !{!1779}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1777, file: !1010, line: 447, baseType: !1062, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 32)
!1781 = !{!1782, !1700}
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1783 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1702, file: !1784, line: 37, type: !1785, isLocal: true, isDefinition: true)
!1784 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1787, size: 352, elements: !1788)
!1787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1714)
!1788 = !{!1789}
!1789 = !DISubrange(count: 11)
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression())
!1791 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1792, file: !1836, line: 139, type: !1843, isLocal: false, isDefinition: true)
!1792 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1793, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1794, globals: !1833, splitDebugInlining: false, nameTableKind: None)
!1793 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!1794 = !{!1795}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !278, line: 586, baseType: !1797)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 550, size: 1216, elements: !1798)
!1798 = !{!1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1797, file: !278, line: 552, baseType: !282, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1797, file: !278, line: 553, baseType: !282, size: 32, offset: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1797, file: !278, line: 554, baseType: !282, size: 32, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1797, file: !278, line: 555, baseType: !282, size: 32, offset: 96)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1797, file: !278, line: 556, baseType: !282, size: 32, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1797, file: !278, line: 557, baseType: !282, size: 32, offset: 160)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1797, file: !278, line: 558, baseType: !282, size: 32, offset: 192)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1797, file: !278, line: 559, baseType: !110, size: 32, offset: 224)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1797, file: !278, line: 560, baseType: !282, size: 32, offset: 256)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1797, file: !278, line: 561, baseType: !282, size: 32, offset: 288)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1797, file: !278, line: 562, baseType: !832, size: 64, offset: 320)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1797, file: !278, line: 563, baseType: !282, size: 32, offset: 384)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1797, file: !278, line: 564, baseType: !282, size: 32, offset: 416)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1797, file: !278, line: 565, baseType: !282, size: 32, offset: 448)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1797, file: !278, line: 566, baseType: !110, size: 32, offset: 480)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1797, file: !278, line: 567, baseType: !282, size: 32, offset: 512)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1797, file: !278, line: 568, baseType: !282, size: 32, offset: 544)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1797, file: !278, line: 569, baseType: !832, size: 64, offset: 576)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1797, file: !278, line: 570, baseType: !282, size: 32, offset: 640)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1797, file: !278, line: 571, baseType: !282, size: 32, offset: 672)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1797, file: !278, line: 572, baseType: !282, size: 32, offset: 704)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1797, file: !278, line: 573, baseType: !110, size: 32, offset: 736)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1797, file: !278, line: 574, baseType: !282, size: 32, offset: 768)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1797, file: !278, line: 575, baseType: !282, size: 32, offset: 800)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1797, file: !278, line: 576, baseType: !832, size: 64, offset: 832)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1797, file: !278, line: 577, baseType: !282, size: 32, offset: 896)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1797, file: !278, line: 578, baseType: !282, size: 32, offset: 928)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1797, file: !278, line: 579, baseType: !832, size: 64, offset: 960)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1797, file: !278, line: 580, baseType: !282, size: 32, offset: 1024)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1797, file: !278, line: 581, baseType: !282, size: 32, offset: 1056)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1797, file: !278, line: 582, baseType: !282, size: 32, offset: 1088)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1797, file: !278, line: 583, baseType: !282, size: 32, offset: 1120)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1797, file: !278, line: 584, baseType: !282, size: 32, offset: 1152)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1797, file: !278, line: 585, baseType: !282, size: 32, offset: 1184)
!1833 = !{!1834, !1837, !1790}
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1792, file: !1836, line: 137, type: !110, isLocal: false, isDefinition: true)
!1836 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1837 = !DIGlobalVariableExpression(var: !1838, expr: !DIExpression())
!1838 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1792, file: !1836, line: 138, type: !1839, isLocal: false, isDefinition: true)
!1839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1840, size: 128, elements: !1841)
!1840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!1841 = !{!1842}
!1842 = !DISubrange(count: 16)
!1843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1840, size: 64, elements: !1453)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1846, file: !1849, line: 23, type: !1850, isLocal: false, isDefinition: true)
!1846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1847, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !265, globals: !1848, splitDebugInlining: false, nameTableKind: None)
!1847 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!1848 = !{!1844}
!1849 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1851 = !DIGlobalVariableExpression(var: !1852, expr: !DIExpression())
!1852 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1853, file: !1857, line: 86, type: !2106, isLocal: false, isDefinition: true, align: 512)
!1853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1854, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1855, retainedTypes: !1864, globals: !1938, splitDebugInlining: false, nameTableKind: None)
!1854 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!1855 = !{!1856, !30, !564}
!1856 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1857, line: 63, baseType: !32, size: 32, elements: !1858)
!1857 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1858 = !{!1859, !1860, !1861, !1862, !1863}
!1859 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1860 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1861 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1862 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1863 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1864 = !{!107, !106, !109, !1865, !1134, !110, !1896, !734, !178, !1921}
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1867)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1868, line: 51, size: 64, elements: !1869)
!1868 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1869 = !{!1870, !1891}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1867, file: !1868, line: 52, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1868, line: 38, baseType: !1872)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 32)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{!109, !1875, !1890, !192}
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1877)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !302, line: 378, size: 192, elements: !1878)
!1878 = !{!1879, !1880, !1881, !1882, !1888, !1889}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1877, file: !302, line: 380, baseType: !305, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1877, file: !302, line: 382, baseType: !13, size: 32, offset: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1877, file: !302, line: 384, baseType: !13, size: 32, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1877, file: !302, line: 386, baseType: !1883, size: 32, offset: 96)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !302, line: 351, size: 16, elements: !1885)
!1885 = !{!1886, !1887}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1884, file: !302, line: 359, baseType: !178, size: 8)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1884, file: !302, line: 364, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1877, file: !302, line: 388, baseType: !106, size: 32, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1877, file: !302, line: 396, baseType: !318, size: 32, offset: 160)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1867, file: !1868, line: 53, baseType: !1892, size: 32, offset: 32)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1868, line: 47, baseType: !1893)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1894 = !DISubroutineType(types: !1895)
!1895 = !{!109, !1875, !1890, !192, !110}
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !1899)
!1899 = !{!1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1898, file: !495, line: 447, baseType: !499, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1898, file: !495, line: 448, baseType: !282, size: 32, offset: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1898, file: !495, line: 449, baseType: !282, size: 32, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1898, file: !495, line: 450, baseType: !282, size: 32, offset: 96)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1898, file: !495, line: 451, baseType: !282, size: 32, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1898, file: !495, line: 452, baseType: !282, size: 32, offset: 160)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1898, file: !495, line: 453, baseType: !1643, size: 96, offset: 192)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1898, file: !495, line: 454, baseType: !282, size: 32, offset: 288)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1898, file: !495, line: 455, baseType: !282, size: 32, offset: 320)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1898, file: !495, line: 456, baseType: !282, size: 32, offset: 352)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1898, file: !495, line: 457, baseType: !282, size: 32, offset: 384)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1898, file: !495, line: 458, baseType: !282, size: 32, offset: 416)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1898, file: !495, line: 459, baseType: !282, size: 32, offset: 448)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1898, file: !495, line: 460, baseType: !282, size: 32, offset: 480)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1898, file: !495, line: 461, baseType: !1654, size: 64, offset: 512)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1898, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1898, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1898, file: !495, line: 464, baseType: !1658, size: 128, offset: 640)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1898, file: !495, line: 465, baseType: !1660, size: 160, offset: 768)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1898, file: !495, line: 466, baseType: !1662, size: 160, offset: 928)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1898, file: !495, line: 467, baseType: !282, size: 32, offset: 1088)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !1923)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !1924)
!1924 = !{!1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1923, file: !495, line: 413, baseType: !1606, size: 256)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1923, file: !495, line: 414, baseType: !1608, size: 768, offset: 256)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1923, file: !495, line: 415, baseType: !1606, size: 256, offset: 1024)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1923, file: !495, line: 416, baseType: !1608, size: 768, offset: 1280)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1923, file: !495, line: 417, baseType: !1606, size: 256, offset: 2048)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1923, file: !495, line: 418, baseType: !1608, size: 768, offset: 2304)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1923, file: !495, line: 419, baseType: !1606, size: 256, offset: 3072)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1923, file: !495, line: 420, baseType: !1608, size: 768, offset: 3328)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1923, file: !495, line: 421, baseType: !1606, size: 256, offset: 4096)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1923, file: !495, line: 422, baseType: !1619, size: 1792, offset: 4352)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1923, file: !495, line: 423, baseType: !1623, size: 1920, offset: 6144)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1923, file: !495, line: 424, baseType: !1628, size: 20608, offset: 8064)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1923, file: !495, line: 425, baseType: !282, size: 32, offset: 28672)
!1938 = !{!1939, !2063, !2069, !2071, !1851, !2074, !2076, !2081}
!1939 = !DIGlobalVariableExpression(var: !1940, expr: !DIExpression())
!1940 = distinct !DIGlobalVariable(name: "_kernel", scope: !1853, file: !1857, line: 40, type: !1941, isLocal: false, isDefinition: true)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1942)
!1942 = !{!1943, !2058}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1941, file: !122, line: 159, baseType: !1944, size: 192)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1945, size: 192, elements: !484)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1946)
!1946 = !{!1947, !1948, !1949, !2052, !2053, !2054, !2055}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1945, file: !122, line: 102, baseType: !110, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1945, file: !122, line: 105, baseType: !1134, size: 32, offset: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1945, file: !122, line: 108, baseType: !1950, size: 32, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1344, elements: !1952)
!1952 = !{!1953, !2012, !2024, !2025, !2026, !2027, !2028, !2034, !2047}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1951, file: !156, line: 247, baseType: !1954, size: 448)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 448, elements: !1955)
!1955 = !{!1956, !1980, !1987, !1988, !1989, !1998, !1999, !2000, !2001}
!1956 = !DIDerivedType(tag: DW_TAG_member, scope: !1954, file: !156, line: 60, baseType: !1957, size: 64)
!1957 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1954, file: !156, line: 60, size: 64, elements: !1958)
!1958 = !{!1959, !1974}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1957, file: !156, line: 61, baseType: !1960, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !1961)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !1962)
!1962 = !{!1963, !1969}
!1963 = !DIDerivedType(tag: DW_TAG_member, scope: !1961, file: !127, line: 38, baseType: !1964, size: 32)
!1964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1961, file: !127, line: 38, size: 32, elements: !1965)
!1965 = !{!1966, !1968}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1964, file: !127, line: 39, baseType: !1967, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1964, file: !127, line: 40, baseType: !1967, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, scope: !1961, file: !127, line: 42, baseType: !1970, size: 32, offset: 32)
!1970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1961, file: !127, line: 42, size: 32, elements: !1971)
!1971 = !{!1972, !1973}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1970, file: !127, line: 43, baseType: !1967, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1970, file: !127, line: 44, baseType: !1967, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1957, file: !156, line: 62, baseType: !1975, size: 64)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !1976)
!1976 = !{!1977}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1975, file: !168, line: 50, baseType: !1978, size: 64)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1979, size: 64, elements: !173)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1954, file: !156, line: 68, baseType: !1981, size: 32, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !1983)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !1984)
!1984 = !{!1985}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1983, file: !122, line: 232, baseType: !1986, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !1961)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1954, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1954, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!1989 = !DIDerivedType(tag: DW_TAG_member, scope: !1954, file: !156, line: 90, baseType: !1990, size: 16, offset: 112)
!1990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1954, file: !156, line: 90, size: 16, elements: !1991)
!1991 = !{!1992, !1997}
!1992 = !DIDerivedType(tag: DW_TAG_member, scope: !1990, file: !156, line: 91, baseType: !1993, size: 16)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1990, file: !156, line: 91, size: 16, elements: !1994)
!1994 = !{!1995, !1996}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1993, file: !156, line: 96, baseType: !188, size: 8)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1993, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1990, file: !156, line: 100, baseType: !192, size: 16)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1954, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_mask", scope: !1954, file: !156, line: 123, baseType: !178, size: 8, offset: 160)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1954, file: !156, line: 127, baseType: !106, size: 32, offset: 192)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1954, file: !156, line: 131, baseType: !2002, size: 192, offset: 256)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2003)
!2003 = !{!2004, !2005, !2011}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2002, file: !122, line: 245, baseType: !1960, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2002, file: !122, line: 246, baseType: !2006, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2007)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!2008 = !DISubroutineType(types: !2009)
!2009 = !{null, !2010}
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2002, file: !122, line: 249, baseType: !104, size: 64, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1951, file: !156, line: 250, baseType: !2013, size: 288, offset: 448)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !2014)
!2014 = !{!2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2013, file: !210, line: 26, baseType: !110, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2013, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2013, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2013, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2013, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2013, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2013, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2013, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2013, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1951, file: !156, line: 253, baseType: !106, size: 32, offset: 736)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1951, file: !156, line: 256, baseType: !1982, size: 64, offset: 768)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1951, file: !156, line: 279, baseType: !224, size: 256, offset: 832)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1951, file: !156, line: 294, baseType: !109, size: 32, offset: 1088)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1951, file: !156, line: 300, baseType: !2029, size: 96, offset: 1120)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2030)
!2030 = !{!2031, !2032, !2033}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2029, file: !156, line: 153, baseType: !22, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2029, file: !156, line: 162, baseType: !107, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2029, file: !156, line: 168, baseType: !107, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1951, file: !156, line: 325, baseType: !2035, size: 32, offset: 1216)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 32)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 160, elements: !2037)
!2037 = !{!2038, !2044, !2045}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2036, file: !118, line: 5074, baseType: !2039, size: 96)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2040)
!2040 = !{!2041, !2042, !2043}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2039, file: !240, line: 57, baseType: !243, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2039, file: !240, line: 58, baseType: !106, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2039, file: !240, line: 59, baseType: !107, size: 32, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2036, file: !118, line: 5075, baseType: !1982, size: 64, offset: 96)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2036, file: !118, line: 5076, baseType: !2046, offset: 160)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1951, file: !156, line: 343, baseType: !2048, size: 64, offset: 1248)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !210, line: 60, size: 64, elements: !2049)
!2049 = !{!2050, !2051}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2048, file: !210, line: 63, baseType: !110, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2048, file: !210, line: 66, baseType: !110, size: 32, offset: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1945, file: !122, line: 111, baseType: !1950, size: 32, offset: 96)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1945, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1945, file: !122, line: 127, baseType: !178, size: 8, offset: 160)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1945, file: !122, line: 153, baseType: !2056, offset: 168)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2057, line: 33, elements: !251)
!2057 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1941, file: !122, line: 170, baseType: !2059, size: 96, offset: 192)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2060)
!2060 = !{!2061, !2062}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2059, file: !122, line: 86, baseType: !1950, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2059, file: !122, line: 90, baseType: !1986, size: 64, offset: 32)
!2063 = !DIGlobalVariableExpression(var: !2064, expr: !DIExpression())
!2064 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1853, file: !1857, line: 43, type: !2065, isLocal: false, isDefinition: true, align: 512)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2066, size: 8704, elements: !151)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !2067)
!2067 = !{!2068}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2066, file: !147, line: 48, baseType: !150, size: 8)
!2069 = !DIGlobalVariableExpression(var: !2070, expr: !DIExpression())
!2070 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1853, file: !1857, line: 44, type: !1951, isLocal: false, isDefinition: true)
!2071 = !DIGlobalVariableExpression(var: !2072, expr: !DIExpression())
!2072 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1853, file: !1857, line: 48, type: !2073, isLocal: false, isDefinition: true)
!2073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 1344, elements: !484)
!2074 = !DIGlobalVariableExpression(var: !2075, expr: !DIExpression())
!2075 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1853, file: !1857, line: 217, type: !315, isLocal: false, isDefinition: true)
!2076 = !DIGlobalVariableExpression(var: !2077, expr: !DIExpression())
!2077 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1853, file: !1857, line: 50, type: !2078, isLocal: true, isDefinition: true, align: 512)
!2078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2066, size: 3072, elements: !2079)
!2079 = !{!485, !2080}
!2080 = !DISubrange(count: 384)
!2081 = !DIGlobalVariableExpression(var: !2082, expr: !DIExpression())
!2082 = distinct !DIGlobalVariable(name: "levels", scope: !2083, file: !1857, line: 232, type: !2103, isLocal: true, isDefinition: true)
!2083 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1857, file: !1857, line: 230, type: !2084, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !2086)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{null, !1856}
!2086 = !{!2087, !2088, !2098, !2102}
!2087 = !DILocalVariable(name: "level", arg: 1, scope: !2083, file: !1857, line: 230, type: !1856)
!2088 = !DILocalVariable(name: "entry", scope: !2083, file: !1857, line: 244, type: !2089)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2091)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !293, line: 51, size: 64, elements: !2092)
!2092 = !{!2093, !2097}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2091, file: !293, line: 60, baseType: !2094, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 32)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!109, !1875}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2091, file: !293, line: 65, baseType: !1875, size: 32, offset: 32)
!2098 = !DILocalVariable(name: "dev", scope: !2099, file: !1857, line: 247, type: !1875)
!2099 = distinct !DILexicalBlock(scope: !2100, file: !1857, line: 246, column: 64)
!2100 = distinct !DILexicalBlock(scope: !2101, file: !1857, line: 246, column: 2)
!2101 = distinct !DILexicalBlock(scope: !2083, file: !1857, line: 246, column: 2)
!2102 = !DILocalVariable(name: "rc", scope: !2099, file: !1857, line: 248, type: !109)
!2103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2089, size: 192, elements: !2104)
!2104 = !{!2105}
!2105 = !DISubrange(count: 6)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2066, size: 16896, elements: !2107)
!2107 = !{!485, !2108}
!2108 = !DISubrange(count: 2112)
!2109 = !DIGlobalVariableExpression(var: !2110, expr: !DIExpression())
!2110 = distinct !DIGlobalVariable(name: "states_str", scope: !2111, file: !2112, line: 276, type: !2235, isLocal: true, isDefinition: true)
!2111 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2112, file: !2112, line: 271, type: !2113, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !2226)
!2112 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!305, !2115, !1134, !107}
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2116)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 32)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1344, elements: !2118)
!2118 = !{!2119, !2178, !2190, !2191, !2192, !2193, !2194, !2200, !2213}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2117, file: !156, line: 247, baseType: !2120, size: 448)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 448, elements: !2121)
!2121 = !{!2122, !2146, !2153, !2154, !2155, !2164, !2165, !2166, !2167}
!2122 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !156, line: 60, baseType: !2123, size: 64)
!2123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !156, line: 60, size: 64, elements: !2124)
!2124 = !{!2125, !2140}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2123, file: !156, line: 61, baseType: !2126, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2127)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2128)
!2128 = !{!2129, !2135}
!2129 = !DIDerivedType(tag: DW_TAG_member, scope: !2127, file: !127, line: 38, baseType: !2130, size: 32)
!2130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2127, file: !127, line: 38, size: 32, elements: !2131)
!2131 = !{!2132, !2134}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2130, file: !127, line: 39, baseType: !2133, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2130, file: !127, line: 40, baseType: !2133, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, scope: !2127, file: !127, line: 42, baseType: !2136, size: 32, offset: 32)
!2136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2127, file: !127, line: 42, size: 32, elements: !2137)
!2137 = !{!2138, !2139}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2136, file: !127, line: 43, baseType: !2133, size: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2136, file: !127, line: 44, baseType: !2133, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2123, file: !156, line: 62, baseType: !2141, size: 64)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2142)
!2142 = !{!2143}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2141, file: !168, line: 50, baseType: !2144, size: 64)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2145, size: 64, elements: !173)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2120, file: !156, line: 68, baseType: !2147, size: 32, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2149)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2150)
!2150 = !{!2151}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2149, file: !122, line: 232, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2127)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2120, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2120, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2155 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !156, line: 90, baseType: !2156, size: 16, offset: 112)
!2156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !156, line: 90, size: 16, elements: !2157)
!2157 = !{!2158, !2163}
!2158 = !DIDerivedType(tag: DW_TAG_member, scope: !2156, file: !156, line: 91, baseType: !2159, size: 16)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2156, file: !156, line: 91, size: 16, elements: !2160)
!2160 = !{!2161, !2162}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2159, file: !156, line: 96, baseType: !188, size: 8)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2159, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2156, file: !156, line: 100, baseType: !192, size: 16)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2120, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_mask", scope: !2120, file: !156, line: 123, baseType: !178, size: 8, offset: 160)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2120, file: !156, line: 127, baseType: !106, size: 32, offset: 192)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2120, file: !156, line: 131, baseType: !2168, size: 192, offset: 256)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2169)
!2169 = !{!2170, !2171, !2177}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2168, file: !122, line: 245, baseType: !2126, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2168, file: !122, line: 246, baseType: !2172, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2173)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{null, !2176}
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2168, file: !122, line: 249, baseType: !104, size: 64, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2117, file: !156, line: 250, baseType: !2179, size: 288, offset: 448)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !2180)
!2180 = !{!2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2179, file: !210, line: 26, baseType: !110, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2179, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2179, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2179, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2179, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2179, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2179, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2179, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2179, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2117, file: !156, line: 253, baseType: !106, size: 32, offset: 736)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2117, file: !156, line: 256, baseType: !2148, size: 64, offset: 768)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2117, file: !156, line: 279, baseType: !224, size: 256, offset: 832)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2117, file: !156, line: 294, baseType: !109, size: 32, offset: 1088)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2117, file: !156, line: 300, baseType: !2195, size: 96, offset: 1120)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2196)
!2196 = !{!2197, !2198, !2199}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2195, file: !156, line: 153, baseType: !22, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2195, file: !156, line: 162, baseType: !107, size: 32, offset: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2195, file: !156, line: 168, baseType: !107, size: 32, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2117, file: !156, line: 325, baseType: !2201, size: 32, offset: 1216)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 32)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 160, elements: !2203)
!2203 = !{!2204, !2210, !2211}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2202, file: !118, line: 5074, baseType: !2205, size: 96)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2206)
!2206 = !{!2207, !2208, !2209}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2205, file: !240, line: 57, baseType: !243, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2205, file: !240, line: 58, baseType: !106, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2205, file: !240, line: 59, baseType: !107, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2202, file: !118, line: 5075, baseType: !2148, size: 64, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2202, file: !118, line: 5076, baseType: !2212, offset: 160)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2117, file: !156, line: 343, baseType: !2214, size: 64, offset: 1248)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !210, line: 60, size: 64, elements: !2215)
!2215 = !{!2216, !2217}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2214, file: !210, line: 63, baseType: !110, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2214, file: !210, line: 66, baseType: !110, size: 32, offset: 32)
!2218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2220, globals: !2222, splitDebugInlining: false, nameTableKind: None)
!2219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2220 = !{!106, !305, !102, !178, !109, !2221, !24, !107, !1134, !22, !110, !111}
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 32)
!2222 = !{!2109, !2223}
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(name: "states_sz", scope: !2111, file: !2112, line: 279, type: !2225, isLocal: true, isDefinition: true)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1785, size: 256, elements: !1453)
!2226 = !{!2227, !2228, !2229, !2230, !2231, !2232, !2233}
!2227 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2111, file: !2112, line: 271, type: !2115)
!2228 = !DILocalVariable(name: "buf", arg: 2, scope: !2111, file: !2112, line: 271, type: !1134)
!2229 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2111, file: !2112, line: 271, type: !107)
!2230 = !DILocalVariable(name: "off", scope: !2111, file: !2112, line: 273, type: !107)
!2231 = !DILocalVariable(name: "bit", scope: !2111, file: !2112, line: 274, type: !178)
!2232 = !DILocalVariable(name: "thread_state", scope: !2111, file: !2112, line: 275, type: !178)
!2233 = !DILocalVariable(name: "index", scope: !2234, file: !2112, line: 293, type: !178)
!2234 = distinct !DILexicalBlock(scope: !2111, file: !2112, line: 293, column: 2)
!2235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !305, size: 256, elements: !1453)
!2236 = !DIGlobalVariableExpression(var: !2237, expr: !DIExpression())
!2237 = distinct !DIGlobalVariable(name: "lock", scope: !2238, file: !2257, line: 39, type: !2258, isLocal: true, isDefinition: true)
!2238 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2239, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2240, globals: !2256, splitDebugInlining: false, nameTableKind: None)
!2239 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2240 = !{!106, !315, !109, !2241}
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2243)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2244)
!2244 = !{!2245, !2251}
!2245 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !127, line: 38, baseType: !2246, size: 32)
!2246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !127, line: 38, size: 32, elements: !2247)
!2247 = !{!2248, !2250}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2246, file: !127, line: 39, baseType: !2249, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2246, file: !127, line: 40, baseType: !2249, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !127, line: 42, baseType: !2252, size: 32, offset: 32)
!2252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !127, line: 42, size: 32, elements: !2253)
!2253 = !{!2254, !2255}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2252, file: !127, line: 43, baseType: !2249, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2252, file: !127, line: 44, baseType: !2249, size: 32)
!2256 = !{!2236}
!2257 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2259 = !DIGlobalVariableExpression(var: !2260, expr: !DIExpression())
!2260 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2261, file: !2371, line: 56, type: !2360, isLocal: false, isDefinition: true)
!2261 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2262, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2263, globals: !2368, splitDebugInlining: false, nameTableKind: None)
!2262 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2263 = !{!2264, !1134, !106, !2366, !1890, !102, !734, !109, !110, !111, !2367}
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1344, elements: !2266)
!2266 = !{!2267, !2326, !2338, !2339, !2340, !2341, !2342, !2348, !2361}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2265, file: !156, line: 247, baseType: !2268, size: 448)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 448, elements: !2269)
!2269 = !{!2270, !2294, !2301, !2302, !2303, !2312, !2313, !2314, !2315}
!2270 = !DIDerivedType(tag: DW_TAG_member, scope: !2268, file: !156, line: 60, baseType: !2271, size: 64)
!2271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2268, file: !156, line: 60, size: 64, elements: !2272)
!2272 = !{!2273, !2288}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2271, file: !156, line: 61, baseType: !2274, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2275)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2276)
!2276 = !{!2277, !2283}
!2277 = !DIDerivedType(tag: DW_TAG_member, scope: !2275, file: !127, line: 38, baseType: !2278, size: 32)
!2278 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2275, file: !127, line: 38, size: 32, elements: !2279)
!2279 = !{!2280, !2282}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2278, file: !127, line: 39, baseType: !2281, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2278, file: !127, line: 40, baseType: !2281, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, scope: !2275, file: !127, line: 42, baseType: !2284, size: 32, offset: 32)
!2284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2275, file: !127, line: 42, size: 32, elements: !2285)
!2285 = !{!2286, !2287}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2284, file: !127, line: 43, baseType: !2281, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2284, file: !127, line: 44, baseType: !2281, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2271, file: !156, line: 62, baseType: !2289, size: 64)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2290)
!2290 = !{!2291}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2289, file: !168, line: 50, baseType: !2292, size: 64)
!2292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2293, size: 64, elements: !173)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2268, file: !156, line: 68, baseType: !2295, size: 32, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2297)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2298)
!2298 = !{!2299}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2297, file: !122, line: 232, baseType: !2300, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2275)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2268, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2268, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2303 = !DIDerivedType(tag: DW_TAG_member, scope: !2268, file: !156, line: 90, baseType: !2304, size: 16, offset: 112)
!2304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2268, file: !156, line: 90, size: 16, elements: !2305)
!2305 = !{!2306, !2311}
!2306 = !DIDerivedType(tag: DW_TAG_member, scope: !2304, file: !156, line: 91, baseType: !2307, size: 16)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2304, file: !156, line: 91, size: 16, elements: !2308)
!2308 = !{!2309, !2310}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2307, file: !156, line: 96, baseType: !188, size: 8)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2307, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2304, file: !156, line: 100, baseType: !192, size: 16)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2268, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_mask", scope: !2268, file: !156, line: 123, baseType: !178, size: 8, offset: 160)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2268, file: !156, line: 127, baseType: !106, size: 32, offset: 192)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2268, file: !156, line: 131, baseType: !2316, size: 192, offset: 256)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2317)
!2317 = !{!2318, !2319, !2325}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2316, file: !122, line: 245, baseType: !2274, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2316, file: !122, line: 246, baseType: !2320, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2321)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 32)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{null, !2324}
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2316, file: !122, line: 249, baseType: !104, size: 64, offset: 128)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2265, file: !156, line: 250, baseType: !2327, size: 288, offset: 448)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !2328)
!2328 = !{!2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2327, file: !210, line: 26, baseType: !110, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2327, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2327, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2327, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2327, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2327, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2327, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2327, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2327, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2265, file: !156, line: 253, baseType: !106, size: 32, offset: 736)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2265, file: !156, line: 256, baseType: !2296, size: 64, offset: 768)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2265, file: !156, line: 279, baseType: !224, size: 256, offset: 832)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2265, file: !156, line: 294, baseType: !109, size: 32, offset: 1088)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2265, file: !156, line: 300, baseType: !2343, size: 96, offset: 1120)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2344)
!2344 = !{!2345, !2346, !2347}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2343, file: !156, line: 153, baseType: !22, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2343, file: !156, line: 162, baseType: !107, size: 32, offset: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2343, file: !156, line: 168, baseType: !107, size: 32, offset: 64)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2265, file: !156, line: 325, baseType: !2349, size: 32, offset: 1216)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 32)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 160, elements: !2351)
!2351 = !{!2352, !2358, !2359}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2350, file: !118, line: 5074, baseType: !2353, size: 96)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2354)
!2354 = !{!2355, !2356, !2357}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2353, file: !240, line: 57, baseType: !243, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2353, file: !240, line: 58, baseType: !106, size: 32, offset: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2353, file: !240, line: 59, baseType: !107, size: 32, offset: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2350, file: !118, line: 5075, baseType: !2296, size: 64, offset: 96)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2350, file: !118, line: 5076, baseType: !2360, offset: 160)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2265, file: !156, line: 343, baseType: !2362, size: 64, offset: 1248)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !210, line: 60, size: 64, elements: !2363)
!2363 = !{!2364, !2365}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2362, file: !210, line: 63, baseType: !110, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2362, file: !210, line: 66, baseType: !110, size: 32, offset: 32)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!2368 = !{!2259, !2369, !2372, !2374}
!2369 = !DIGlobalVariableExpression(var: !2370, expr: !DIExpression())
!2370 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2261, file: !2371, line: 404, type: !109, isLocal: true, isDefinition: true)
!2371 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2372 = !DIGlobalVariableExpression(var: !2373, expr: !DIExpression())
!2373 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2261, file: !2371, line: 405, type: !109, isLocal: true, isDefinition: true)
!2374 = !DIGlobalVariableExpression(var: !2375, expr: !DIExpression())
!2375 = distinct !DIGlobalVariable(name: "pending_current", scope: !2261, file: !2371, line: 425, type: !2264, isLocal: true, isDefinition: true)
!2376 = !DIGlobalVariableExpression(var: !2377, expr: !DIExpression())
!2377 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2378, file: !2408, line: 15, type: !111, isLocal: true, isDefinition: true)
!2378 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2379, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2380, globals: !2405, splitDebugInlining: false, nameTableKind: None)
!2379 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2380 = !{!102, !106, !734, !110, !111, !109, !2381, !1134, !104}
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2383)
!2383 = !{!2384, !2399, !2404}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2382, file: !122, line: 245, baseType: !2385, size: 64)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2386)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2387)
!2387 = !{!2388, !2394}
!2388 = !DIDerivedType(tag: DW_TAG_member, scope: !2386, file: !127, line: 38, baseType: !2389, size: 32)
!2389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2386, file: !127, line: 38, size: 32, elements: !2390)
!2390 = !{!2391, !2393}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2389, file: !127, line: 39, baseType: !2392, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2389, file: !127, line: 40, baseType: !2392, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, scope: !2386, file: !127, line: 42, baseType: !2395, size: 32, offset: 32)
!2395 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2386, file: !127, line: 42, size: 32, elements: !2396)
!2396 = !{!2397, !2398}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2395, file: !127, line: 43, baseType: !2392, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2395, file: !127, line: 44, baseType: !2392, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2382, file: !122, line: 246, baseType: !2400, size: 32, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2401)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 32)
!2402 = !DISubroutineType(types: !2403)
!2403 = !{null, !2381}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2382, file: !122, line: 249, baseType: !104, size: 64, offset: 128)
!2405 = !{!2376, !2406, !2410, !2412}
!2406 = !DIGlobalVariableExpression(var: !2407, expr: !DIExpression())
!2407 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2378, file: !2408, line: 19, type: !2409, isLocal: true, isDefinition: true)
!2408 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2410 = !DIGlobalVariableExpression(var: !2411, expr: !DIExpression())
!2411 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2378, file: !2408, line: 25, type: !109, isLocal: true, isDefinition: true)
!2412 = !DIGlobalVariableExpression(var: !2413, expr: !DIExpression())
!2413 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2378, file: !2408, line: 17, type: !2414, isLocal: true, isDefinition: true)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2386)
!2415 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2416, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !265, splitDebugInlining: false, nameTableKind: None)
!2416 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2417 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2418, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !265, splitDebugInlining: false, nameTableKind: None)
!2418 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2419 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2420, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2421, retainedTypes: !2441, splitDebugInlining: false, nameTableKind: None)
!2420 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2421 = !{!2422, !2430}
!2422 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2423, line: 69, baseType: !32, size: 32, elements: !2424)
!2423 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2424 = !{!2425, !2426, !2427, !2428, !2429}
!2425 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2426 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2427 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2428 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2429 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2430 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2423, line: 56, baseType: !32, size: 32, elements: !2431)
!2431 = !{!2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440}
!2432 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2433 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2434 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2435 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2436 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2437 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2438 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2439 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2440 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2441 = !{!109, !2422, !2430, !2442, !189, !322, !2444, !2445, !179, !193, !305, !107, !106, !22, !32, !2447, !2448, !2449, !2450, !2451, !105, !2452, !2443, !2453, !2454, !2455, !2456}
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2423, line: 31, baseType: !2443)
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !105)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !108, line: 329, baseType: !32)
!2445 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2423, line: 32, baseType: !2446)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!2450 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !108, line: 145, baseType: !109)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2457 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2458, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2458 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2459 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2460, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2461, retainedTypes: !265, splitDebugInlining: false, nameTableKind: None)
!2460 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2461 = !{!2462, !30}
!2462 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2463, line: 27, baseType: !32, size: 32, elements: !2464)
!2463 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2464 = !{!2465, !2466, !2467, !2468, !2469}
!2465 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2466 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2467 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2468 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2469 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2470 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2471, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2472, retainedTypes: !2473, splitDebugInlining: false, nameTableKind: None)
!2471 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2472 = !{!564, !2462, !30}
!2473 = !{!760, !2474, !106, !109, !734, !110, !178, !2491}
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2476)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2477)
!2477 = !{!2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2476, file: !495, line: 413, baseType: !1606, size: 256)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2476, file: !495, line: 414, baseType: !1608, size: 768, offset: 256)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2476, file: !495, line: 415, baseType: !1606, size: 256, offset: 1024)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2476, file: !495, line: 416, baseType: !1608, size: 768, offset: 1280)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2476, file: !495, line: 417, baseType: !1606, size: 256, offset: 2048)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2476, file: !495, line: 418, baseType: !1608, size: 768, offset: 2304)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2476, file: !495, line: 419, baseType: !1606, size: 256, offset: 3072)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2476, file: !495, line: 420, baseType: !1608, size: 768, offset: 3328)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2476, file: !495, line: 421, baseType: !1606, size: 256, offset: 4096)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2476, file: !495, line: 422, baseType: !1619, size: 1792, offset: 4352)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2476, file: !495, line: 423, baseType: !1623, size: 1920, offset: 6144)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2476, file: !495, line: 424, baseType: !1628, size: 20608, offset: 8064)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2476, file: !495, line: 425, baseType: !282, size: 32, offset: 28672)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2493)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2494)
!2494 = !{!2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2493, file: !495, line: 447, baseType: !499, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2493, file: !495, line: 448, baseType: !282, size: 32, offset: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2493, file: !495, line: 449, baseType: !282, size: 32, offset: 64)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2493, file: !495, line: 450, baseType: !282, size: 32, offset: 96)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2493, file: !495, line: 451, baseType: !282, size: 32, offset: 128)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2493, file: !495, line: 452, baseType: !282, size: 32, offset: 160)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2493, file: !495, line: 453, baseType: !1643, size: 96, offset: 192)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2493, file: !495, line: 454, baseType: !282, size: 32, offset: 288)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2493, file: !495, line: 455, baseType: !282, size: 32, offset: 320)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2493, file: !495, line: 456, baseType: !282, size: 32, offset: 352)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2493, file: !495, line: 457, baseType: !282, size: 32, offset: 384)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2493, file: !495, line: 458, baseType: !282, size: 32, offset: 416)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2493, file: !495, line: 459, baseType: !282, size: 32, offset: 448)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2493, file: !495, line: 460, baseType: !282, size: 32, offset: 480)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2493, file: !495, line: 461, baseType: !1654, size: 64, offset: 512)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2493, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2493, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2493, file: !495, line: 464, baseType: !1658, size: 128, offset: 640)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2493, file: !495, line: 465, baseType: !1660, size: 160, offset: 768)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2493, file: !495, line: 466, baseType: !1662, size: 160, offset: 928)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2493, file: !495, line: 467, baseType: !282, size: 32, offset: 1088)
!2516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2517, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !265, splitDebugInlining: false, nameTableKind: None)
!2517 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2518 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2519, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2520, splitDebugInlining: false, nameTableKind: None)
!2519 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2520 = !{!106, !109, !22, !2521}
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2523)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2523, file: !495, line: 447, baseType: !499, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2523, file: !495, line: 448, baseType: !282, size: 32, offset: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2523, file: !495, line: 449, baseType: !282, size: 32, offset: 64)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2523, file: !495, line: 450, baseType: !282, size: 32, offset: 96)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2523, file: !495, line: 451, baseType: !282, size: 32, offset: 128)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2523, file: !495, line: 452, baseType: !282, size: 32, offset: 160)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2523, file: !495, line: 453, baseType: !1643, size: 96, offset: 192)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2523, file: !495, line: 454, baseType: !282, size: 32, offset: 288)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2523, file: !495, line: 455, baseType: !282, size: 32, offset: 320)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2523, file: !495, line: 456, baseType: !282, size: 32, offset: 352)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2523, file: !495, line: 457, baseType: !282, size: 32, offset: 384)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2523, file: !495, line: 458, baseType: !282, size: 32, offset: 416)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2523, file: !495, line: 459, baseType: !282, size: 32, offset: 448)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2523, file: !495, line: 460, baseType: !282, size: 32, offset: 480)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2523, file: !495, line: 461, baseType: !1654, size: 64, offset: 512)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2523, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2523, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2523, file: !495, line: 464, baseType: !1658, size: 128, offset: 640)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2523, file: !495, line: 465, baseType: !1660, size: 160, offset: 768)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2523, file: !495, line: 466, baseType: !1662, size: 160, offset: 928)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2523, file: !495, line: 467, baseType: !282, size: 32, offset: 1088)
!2546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2548, splitDebugInlining: false, nameTableKind: None)
!2547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2548 = !{!2549, !106, !109}
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2551)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2552)
!2552 = !{!2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2551, file: !495, line: 447, baseType: !499, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2551, file: !495, line: 448, baseType: !282, size: 32, offset: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2551, file: !495, line: 449, baseType: !282, size: 32, offset: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2551, file: !495, line: 450, baseType: !282, size: 32, offset: 96)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2551, file: !495, line: 451, baseType: !282, size: 32, offset: 128)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2551, file: !495, line: 452, baseType: !282, size: 32, offset: 160)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2551, file: !495, line: 453, baseType: !1643, size: 96, offset: 192)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2551, file: !495, line: 454, baseType: !282, size: 32, offset: 288)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2551, file: !495, line: 455, baseType: !282, size: 32, offset: 320)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2551, file: !495, line: 456, baseType: !282, size: 32, offset: 352)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2551, file: !495, line: 457, baseType: !282, size: 32, offset: 384)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2551, file: !495, line: 458, baseType: !282, size: 32, offset: 416)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2551, file: !495, line: 459, baseType: !282, size: 32, offset: 448)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2551, file: !495, line: 460, baseType: !282, size: 32, offset: 480)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2551, file: !495, line: 461, baseType: !1654, size: 64, offset: 512)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2551, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2551, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2551, file: !495, line: 464, baseType: !1658, size: 128, offset: 640)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2551, file: !495, line: 465, baseType: !1660, size: 160, offset: 768)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2551, file: !495, line: 466, baseType: !1662, size: 160, offset: 928)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2551, file: !495, line: 467, baseType: !282, size: 32, offset: 1088)
!2574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2576, splitDebugInlining: false, nameTableKind: None)
!2575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2576 = !{!2577, !110, !106, !109}
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2579, line: 98, size: 256, elements: !2580)
!2579 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2580 = !{!2581, !2586, !2591, !2596, !2601, !2606, !2611, !2616}
!2581 = !DIDerivedType(tag: DW_TAG_member, scope: !2578, file: !2579, line: 99, baseType: !2582, size: 32)
!2582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2578, file: !2579, line: 99, size: 32, elements: !2583)
!2583 = !{!2584, !2585}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2582, file: !2579, line: 99, baseType: !110, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2582, file: !2579, line: 99, baseType: !110, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, scope: !2578, file: !2579, line: 100, baseType: !2587, size: 32, offset: 32)
!2587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2578, file: !2579, line: 100, size: 32, elements: !2588)
!2588 = !{!2589, !2590}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2587, file: !2579, line: 100, baseType: !110, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2587, file: !2579, line: 100, baseType: !110, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2578, file: !2579, line: 101, baseType: !2592, size: 32, offset: 64)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2578, file: !2579, line: 101, size: 32, elements: !2593)
!2593 = !{!2594, !2595}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2592, file: !2579, line: 101, baseType: !110, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2592, file: !2579, line: 101, baseType: !110, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, scope: !2578, file: !2579, line: 102, baseType: !2597, size: 32, offset: 96)
!2597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2578, file: !2579, line: 102, size: 32, elements: !2598)
!2598 = !{!2599, !2600}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2597, file: !2579, line: 102, baseType: !110, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2597, file: !2579, line: 102, baseType: !110, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, scope: !2578, file: !2579, line: 103, baseType: !2602, size: 32, offset: 128)
!2602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2578, file: !2579, line: 103, size: 32, elements: !2603)
!2603 = !{!2604, !2605}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2602, file: !2579, line: 103, baseType: !110, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2602, file: !2579, line: 103, baseType: !110, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, scope: !2578, file: !2579, line: 104, baseType: !2607, size: 32, offset: 160)
!2607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2578, file: !2579, line: 104, size: 32, elements: !2608)
!2608 = !{!2609, !2610}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2607, file: !2579, line: 104, baseType: !110, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2607, file: !2579, line: 104, baseType: !110, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, scope: !2578, file: !2579, line: 105, baseType: !2612, size: 32, offset: 192)
!2612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2578, file: !2579, line: 105, size: 32, elements: !2613)
!2613 = !{!2614, !2615}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2612, file: !2579, line: 105, baseType: !110, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2612, file: !2579, line: 105, baseType: !110, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2578, file: !2579, line: 106, baseType: !110, size: 32, offset: 224)
!2617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2618, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2461, retainedTypes: !2619, splitDebugInlining: false, nameTableKind: None)
!2618 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2619 = !{!2620, !106, !109, !2645, !2688, !110}
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2622)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2623)
!2623 = !{!2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2622, file: !495, line: 447, baseType: !499, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2622, file: !495, line: 448, baseType: !282, size: 32, offset: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2622, file: !495, line: 449, baseType: !282, size: 32, offset: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2622, file: !495, line: 450, baseType: !282, size: 32, offset: 96)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2622, file: !495, line: 451, baseType: !282, size: 32, offset: 128)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2622, file: !495, line: 452, baseType: !282, size: 32, offset: 160)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2622, file: !495, line: 453, baseType: !1643, size: 96, offset: 192)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2622, file: !495, line: 454, baseType: !282, size: 32, offset: 288)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2622, file: !495, line: 455, baseType: !282, size: 32, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2622, file: !495, line: 456, baseType: !282, size: 32, offset: 352)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2622, file: !495, line: 457, baseType: !282, size: 32, offset: 384)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2622, file: !495, line: 458, baseType: !282, size: 32, offset: 416)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2622, file: !495, line: 459, baseType: !282, size: 32, offset: 448)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2622, file: !495, line: 460, baseType: !282, size: 32, offset: 480)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2622, file: !495, line: 461, baseType: !1654, size: 64, offset: 512)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2622, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2622, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2622, file: !495, line: 464, baseType: !1658, size: 128, offset: 640)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2622, file: !495, line: 465, baseType: !1660, size: 160, offset: 768)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2622, file: !495, line: 466, baseType: !1662, size: 160, offset: 928)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2622, file: !495, line: 467, baseType: !282, size: 32, offset: 1088)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2579, line: 141, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2579, line: 97, size: 256, elements: !2648)
!2648 = !{!2649}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2647, file: !2579, line: 107, baseType: !2650, size: 256)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2579, line: 98, size: 256, elements: !2651)
!2651 = !{!2652, !2657, !2662, !2667, !2672, !2677, !2682, !2687}
!2652 = !DIDerivedType(tag: DW_TAG_member, scope: !2650, file: !2579, line: 99, baseType: !2653, size: 32)
!2653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2650, file: !2579, line: 99, size: 32, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2653, file: !2579, line: 99, baseType: !110, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2653, file: !2579, line: 99, baseType: !110, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, scope: !2650, file: !2579, line: 100, baseType: !2658, size: 32, offset: 32)
!2658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2650, file: !2579, line: 100, size: 32, elements: !2659)
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2658, file: !2579, line: 100, baseType: !110, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2658, file: !2579, line: 100, baseType: !110, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, scope: !2650, file: !2579, line: 101, baseType: !2663, size: 32, offset: 64)
!2663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2650, file: !2579, line: 101, size: 32, elements: !2664)
!2664 = !{!2665, !2666}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2663, file: !2579, line: 101, baseType: !110, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2663, file: !2579, line: 101, baseType: !110, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, scope: !2650, file: !2579, line: 102, baseType: !2668, size: 32, offset: 96)
!2668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2650, file: !2579, line: 102, size: 32, elements: !2669)
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2668, file: !2579, line: 102, baseType: !110, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2668, file: !2579, line: 102, baseType: !110, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, scope: !2650, file: !2579, line: 103, baseType: !2673, size: 32, offset: 128)
!2673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2650, file: !2579, line: 103, size: 32, elements: !2674)
!2674 = !{!2675, !2676}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2673, file: !2579, line: 103, baseType: !110, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2673, file: !2579, line: 103, baseType: !110, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, scope: !2650, file: !2579, line: 104, baseType: !2678, size: 32, offset: 160)
!2678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2650, file: !2579, line: 104, size: 32, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2678, file: !2579, line: 104, baseType: !110, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2678, file: !2579, line: 104, baseType: !110, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2650, file: !2579, line: 105, baseType: !2683, size: 32, offset: 192)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2650, file: !2579, line: 105, size: 32, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2683, file: !2579, line: 105, baseType: !110, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2683, file: !2579, line: 105, baseType: !110, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2650, file: !2579, line: 106, baseType: !110, size: 32, offset: 224)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!2689 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2690, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1591, retainedTypes: !2691, splitDebugInlining: false, nameTableKind: None)
!2690 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2691 = !{!760, !734, !178, !110, !2692, !2709}
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2694)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2695)
!2695 = !{!2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2694, file: !495, line: 413, baseType: !1606, size: 256)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2694, file: !495, line: 414, baseType: !1608, size: 768, offset: 256)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2694, file: !495, line: 415, baseType: !1606, size: 256, offset: 1024)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2694, file: !495, line: 416, baseType: !1608, size: 768, offset: 1280)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2694, file: !495, line: 417, baseType: !1606, size: 256, offset: 2048)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2694, file: !495, line: 418, baseType: !1608, size: 768, offset: 2304)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2694, file: !495, line: 419, baseType: !1606, size: 256, offset: 3072)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2694, file: !495, line: 420, baseType: !1608, size: 768, offset: 3328)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2694, file: !495, line: 421, baseType: !1606, size: 256, offset: 4096)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2694, file: !495, line: 422, baseType: !1619, size: 1792, offset: 4352)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2694, file: !495, line: 423, baseType: !1623, size: 1920, offset: 6144)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2694, file: !495, line: 424, baseType: !1628, size: 20608, offset: 8064)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2694, file: !495, line: 425, baseType: !282, size: 32, offset: 28672)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2711)
!2711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2712)
!2712 = !{!2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2711, file: !495, line: 447, baseType: !499, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2711, file: !495, line: 448, baseType: !282, size: 32, offset: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2711, file: !495, line: 449, baseType: !282, size: 32, offset: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2711, file: !495, line: 450, baseType: !282, size: 32, offset: 96)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2711, file: !495, line: 451, baseType: !282, size: 32, offset: 128)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2711, file: !495, line: 452, baseType: !282, size: 32, offset: 160)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2711, file: !495, line: 453, baseType: !1643, size: 96, offset: 192)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2711, file: !495, line: 454, baseType: !282, size: 32, offset: 288)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2711, file: !495, line: 455, baseType: !282, size: 32, offset: 320)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2711, file: !495, line: 456, baseType: !282, size: 32, offset: 352)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2711, file: !495, line: 457, baseType: !282, size: 32, offset: 384)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2711, file: !495, line: 458, baseType: !282, size: 32, offset: 416)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2711, file: !495, line: 459, baseType: !282, size: 32, offset: 448)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2711, file: !495, line: 460, baseType: !282, size: 32, offset: 480)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2711, file: !495, line: 461, baseType: !1654, size: 64, offset: 512)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2711, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2711, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2711, file: !495, line: 464, baseType: !1658, size: 128, offset: 640)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2711, file: !495, line: 465, baseType: !1660, size: 160, offset: 768)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2711, file: !495, line: 466, baseType: !1662, size: 160, offset: 928)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2711, file: !495, line: 467, baseType: !282, size: 32, offset: 1088)
!2734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2735, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2736, splitDebugInlining: false, nameTableKind: None)
!2735 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2736 = !{!2737, !106, !109}
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2739)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2739, file: !495, line: 447, baseType: !499, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2739, file: !495, line: 448, baseType: !282, size: 32, offset: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2739, file: !495, line: 449, baseType: !282, size: 32, offset: 64)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2739, file: !495, line: 450, baseType: !282, size: 32, offset: 96)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2739, file: !495, line: 451, baseType: !282, size: 32, offset: 128)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2739, file: !495, line: 452, baseType: !282, size: 32, offset: 160)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2739, file: !495, line: 453, baseType: !1643, size: 96, offset: 192)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2739, file: !495, line: 454, baseType: !282, size: 32, offset: 288)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2739, file: !495, line: 455, baseType: !282, size: 32, offset: 320)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2739, file: !495, line: 456, baseType: !282, size: 32, offset: 352)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2739, file: !495, line: 457, baseType: !282, size: 32, offset: 384)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2739, file: !495, line: 458, baseType: !282, size: 32, offset: 416)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2739, file: !495, line: 459, baseType: !282, size: 32, offset: 448)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2739, file: !495, line: 460, baseType: !282, size: 32, offset: 480)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2739, file: !495, line: 461, baseType: !1654, size: 64, offset: 512)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2739, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2739, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2739, file: !495, line: 464, baseType: !1658, size: 128, offset: 640)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2739, file: !495, line: 465, baseType: !1660, size: 160, offset: 768)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2739, file: !495, line: 466, baseType: !1662, size: 160, offset: 928)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2739, file: !495, line: 467, baseType: !282, size: 32, offset: 1088)
!2762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2763, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2764, splitDebugInlining: false, nameTableKind: None)
!2763 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2764 = !{!150, !1134, !107, !967, !2765, !179, !106}
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !179)
!2767 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2768, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2769, splitDebugInlining: false, nameTableKind: None)
!2768 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2769 = !{!2770}
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !278, line: 586, baseType: !2772)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 550, size: 1216, elements: !2773)
!2773 = !{!2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2772, file: !278, line: 552, baseType: !282, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2772, file: !278, line: 553, baseType: !282, size: 32, offset: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2772, file: !278, line: 554, baseType: !282, size: 32, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2772, file: !278, line: 555, baseType: !282, size: 32, offset: 96)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2772, file: !278, line: 556, baseType: !282, size: 32, offset: 128)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2772, file: !278, line: 557, baseType: !282, size: 32, offset: 160)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2772, file: !278, line: 558, baseType: !282, size: 32, offset: 192)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2772, file: !278, line: 559, baseType: !110, size: 32, offset: 224)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2772, file: !278, line: 560, baseType: !282, size: 32, offset: 256)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2772, file: !278, line: 561, baseType: !282, size: 32, offset: 288)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2772, file: !278, line: 562, baseType: !832, size: 64, offset: 320)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2772, file: !278, line: 563, baseType: !282, size: 32, offset: 384)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2772, file: !278, line: 564, baseType: !282, size: 32, offset: 416)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2772, file: !278, line: 565, baseType: !282, size: 32, offset: 448)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2772, file: !278, line: 566, baseType: !110, size: 32, offset: 480)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2772, file: !278, line: 567, baseType: !282, size: 32, offset: 512)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2772, file: !278, line: 568, baseType: !282, size: 32, offset: 544)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2772, file: !278, line: 569, baseType: !832, size: 64, offset: 576)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2772, file: !278, line: 570, baseType: !282, size: 32, offset: 640)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2772, file: !278, line: 571, baseType: !282, size: 32, offset: 672)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2772, file: !278, line: 572, baseType: !282, size: 32, offset: 704)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2772, file: !278, line: 573, baseType: !110, size: 32, offset: 736)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2772, file: !278, line: 574, baseType: !282, size: 32, offset: 768)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2772, file: !278, line: 575, baseType: !282, size: 32, offset: 800)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2772, file: !278, line: 576, baseType: !832, size: 64, offset: 832)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2772, file: !278, line: 577, baseType: !282, size: 32, offset: 896)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2772, file: !278, line: 578, baseType: !282, size: 32, offset: 928)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2772, file: !278, line: 579, baseType: !832, size: 64, offset: 960)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2772, file: !278, line: 580, baseType: !282, size: 32, offset: 1024)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2772, file: !278, line: 581, baseType: !282, size: 32, offset: 1056)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2772, file: !278, line: 582, baseType: !282, size: 32, offset: 1088)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2772, file: !278, line: 583, baseType: !282, size: 32, offset: 1120)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2772, file: !278, line: 584, baseType: !282, size: 32, offset: 1152)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2772, file: !278, line: 585, baseType: !282, size: 32, offset: 1184)
!2808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2809 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2812, retainedTypes: !2828, splitDebugInlining: false, nameTableKind: None)
!2811 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2812 = !{!2813, !2820, !2824}
!2813 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2814, line: 38, baseType: !32, size: 32, elements: !2815)
!2814 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2815 = !{!2816, !2817, !2818, !2819}
!2816 = !DIEnumerator(name: "HAL_OK", value: 0)
!2817 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2818 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2819 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2820 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !805, line: 184, baseType: !32, size: 32, elements: !2821)
!2821 = !{!2822, !2823}
!2822 = !DIEnumerator(name: "RESET", value: 0)
!2823 = !DIEnumerator(name: "SET", value: 1)
!2824 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !805, line: 190, baseType: !32, size: 32, elements: !2825)
!2825 = !{!2826, !2827}
!2826 = !DIEnumerator(name: "DISABLE", value: 0)
!2827 = !DIEnumerator(name: "ENABLE", value: 1)
!2828 = !{!2829, !110, !2867, !1447, !178, !111, !106}
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !278, line: 586, baseType: !2831)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 550, size: 1216, elements: !2832)
!2832 = !{!2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2831, file: !278, line: 552, baseType: !282, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2831, file: !278, line: 553, baseType: !282, size: 32, offset: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2831, file: !278, line: 554, baseType: !282, size: 32, offset: 64)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2831, file: !278, line: 555, baseType: !282, size: 32, offset: 96)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2831, file: !278, line: 556, baseType: !282, size: 32, offset: 128)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2831, file: !278, line: 557, baseType: !282, size: 32, offset: 160)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2831, file: !278, line: 558, baseType: !282, size: 32, offset: 192)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2831, file: !278, line: 559, baseType: !110, size: 32, offset: 224)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2831, file: !278, line: 560, baseType: !282, size: 32, offset: 256)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2831, file: !278, line: 561, baseType: !282, size: 32, offset: 288)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2831, file: !278, line: 562, baseType: !832, size: 64, offset: 320)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2831, file: !278, line: 563, baseType: !282, size: 32, offset: 384)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2831, file: !278, line: 564, baseType: !282, size: 32, offset: 416)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2831, file: !278, line: 565, baseType: !282, size: 32, offset: 448)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2831, file: !278, line: 566, baseType: !110, size: 32, offset: 480)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2831, file: !278, line: 567, baseType: !282, size: 32, offset: 512)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2831, file: !278, line: 568, baseType: !282, size: 32, offset: 544)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2831, file: !278, line: 569, baseType: !832, size: 64, offset: 576)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2831, file: !278, line: 570, baseType: !282, size: 32, offset: 640)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2831, file: !278, line: 571, baseType: !282, size: 32, offset: 672)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2831, file: !278, line: 572, baseType: !282, size: 32, offset: 704)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2831, file: !278, line: 573, baseType: !110, size: 32, offset: 736)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2831, file: !278, line: 574, baseType: !282, size: 32, offset: 768)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2831, file: !278, line: 575, baseType: !282, size: 32, offset: 800)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2831, file: !278, line: 576, baseType: !832, size: 64, offset: 832)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2831, file: !278, line: 577, baseType: !282, size: 32, offset: 896)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2831, file: !278, line: 578, baseType: !282, size: 32, offset: 928)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2831, file: !278, line: 579, baseType: !832, size: 64, offset: 960)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2831, file: !278, line: 580, baseType: !282, size: 32, offset: 1024)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2831, file: !278, line: 581, baseType: !282, size: 32, offset: 1056)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2831, file: !278, line: 582, baseType: !282, size: 32, offset: 1088)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2831, file: !278, line: 583, baseType: !282, size: 32, offset: 1120)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2831, file: !278, line: 584, baseType: !282, size: 32, offset: 1152)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2831, file: !278, line: 585, baseType: !282, size: 32, offset: 1184)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !278, line: 544, baseType: !2869)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 540, size: 64, elements: !2870)
!2870 = !{!2871, !2872}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2869, file: !278, line: 542, baseType: !282, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2869, file: !278, line: 543, baseType: !282, size: 32, offset: 32)
!2873 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2874, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2875, retainedTypes: !2876, splitDebugInlining: false, nameTableKind: None)
!2874 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2875 = !{!804}
!2876 = !{!2877, !110, !2885, !2891, !2902}
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !495, line: 770, baseType: !2879)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 764, size: 128, elements: !2880)
!2880 = !{!2881, !2882, !2883, !2884}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2879, file: !495, line: 766, baseType: !282, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2879, file: !495, line: 767, baseType: !282, size: 32, offset: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2879, file: !495, line: 768, baseType: !282, size: 32, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2879, file: !495, line: 769, baseType: !499, size: 32, offset: 96)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !278, line: 544, baseType: !2887)
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 540, size: 64, elements: !2888)
!2888 = !{!2889, !2890}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2887, file: !278, line: 542, baseType: !282, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2887, file: !278, line: 543, baseType: !282, size: 32, offset: 32)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !278, line: 407, baseType: !2893)
!2893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 398, size: 224, elements: !2894)
!2894 = !{!2895, !2896, !2897, !2898, !2899, !2900, !2901}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2893, file: !278, line: 400, baseType: !282, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2893, file: !278, line: 401, baseType: !282, size: 32, offset: 32)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2893, file: !278, line: 402, baseType: !282, size: 32, offset: 64)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2893, file: !278, line: 403, baseType: !282, size: 32, offset: 96)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2893, file: !278, line: 404, baseType: !282, size: 32, offset: 128)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2893, file: !278, line: 405, baseType: !282, size: 32, offset: 160)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2893, file: !278, line: 406, baseType: !282, size: 32, offset: 192)
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !278, line: 586, baseType: !2904)
!2904 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 550, size: 1216, elements: !2905)
!2905 = !{!2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2904, file: !278, line: 552, baseType: !282, size: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2904, file: !278, line: 553, baseType: !282, size: 32, offset: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2904, file: !278, line: 554, baseType: !282, size: 32, offset: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2904, file: !278, line: 555, baseType: !282, size: 32, offset: 96)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2904, file: !278, line: 556, baseType: !282, size: 32, offset: 128)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2904, file: !278, line: 557, baseType: !282, size: 32, offset: 160)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2904, file: !278, line: 558, baseType: !282, size: 32, offset: 192)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2904, file: !278, line: 559, baseType: !110, size: 32, offset: 224)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2904, file: !278, line: 560, baseType: !282, size: 32, offset: 256)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2904, file: !278, line: 561, baseType: !282, size: 32, offset: 288)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2904, file: !278, line: 562, baseType: !832, size: 64, offset: 320)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2904, file: !278, line: 563, baseType: !282, size: 32, offset: 384)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2904, file: !278, line: 564, baseType: !282, size: 32, offset: 416)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2904, file: !278, line: 565, baseType: !282, size: 32, offset: 448)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2904, file: !278, line: 566, baseType: !110, size: 32, offset: 480)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2904, file: !278, line: 567, baseType: !282, size: 32, offset: 512)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2904, file: !278, line: 568, baseType: !282, size: 32, offset: 544)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2904, file: !278, line: 569, baseType: !832, size: 64, offset: 576)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2904, file: !278, line: 570, baseType: !282, size: 32, offset: 640)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2904, file: !278, line: 571, baseType: !282, size: 32, offset: 672)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2904, file: !278, line: 572, baseType: !282, size: 32, offset: 704)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2904, file: !278, line: 573, baseType: !110, size: 32, offset: 736)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2904, file: !278, line: 574, baseType: !282, size: 32, offset: 768)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2904, file: !278, line: 575, baseType: !282, size: 32, offset: 800)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2904, file: !278, line: 576, baseType: !832, size: 64, offset: 832)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2904, file: !278, line: 577, baseType: !282, size: 32, offset: 896)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2904, file: !278, line: 578, baseType: !282, size: 32, offset: 928)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2904, file: !278, line: 579, baseType: !832, size: 64, offset: 960)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2904, file: !278, line: 580, baseType: !282, size: 32, offset: 1024)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2904, file: !278, line: 581, baseType: !282, size: 32, offset: 1056)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2904, file: !278, line: 582, baseType: !282, size: 32, offset: 1088)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2904, file: !278, line: 583, baseType: !282, size: 32, offset: 1120)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2904, file: !278, line: 584, baseType: !282, size: 32, offset: 1152)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2904, file: !278, line: 585, baseType: !282, size: 32, offset: 1184)
!2940 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2941, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2942, splitDebugInlining: false, nameTableKind: None)
!2941 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2942 = !{!106, !107}
!2943 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2944, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2945, retainedTypes: !265, splitDebugInlining: false, nameTableKind: None)
!2944 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2945 = !{!2946, !2953, !30}
!2946 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2947, line: 14, baseType: !32, size: 32, elements: !2948)
!2947 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2948 = !{!2949, !2950, !2951, !2952}
!2949 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2950 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2951 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2952 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2953 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2947, line: 42, baseType: !32, size: 32, elements: !2954)
!2954 = !{!2955, !2956, !2957, !2958, !2959, !2960}
!2955 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2956 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2957 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2958 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2959 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2960 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2961 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2962, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !265, splitDebugInlining: false, nameTableKind: None)
!2962 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2963 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2964, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2965, splitDebugInlining: false, nameTableKind: None)
!2964 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2965 = !{!22, !106, !109}
!2966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !265, splitDebugInlining: false, nameTableKind: None)
!2967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!2968 = !{!"Ubuntu clang version 14.0.6"}
!2969 = !{i32 7, !"Dwarf Version", i32 4}
!2970 = !{i32 2, !"Debug Info Version", i32 3}
!2971 = !{i32 1, !"wchar_size", i32 4}
!2972 = !{i32 1, !"min_enum_size", i32 4}
!2973 = !{i32 1, !"branch-target-enforcement", i32 0}
!2974 = !{i32 1, !"sign-return-address", i32 0}
!2975 = !{i32 1, !"sign-return-address-all", i32 0}
!2976 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2977 = !{i32 7, !"frame-pointer", i32 2}
!2978 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2979, file: !2979, line: 26, type: !2980, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !251)
!2979 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2980 = !DISubroutineType(types: !2981)
!2981 = !{null}
!2982 = !DILocation(line: 28, column: 1, scope: !2978)
!2983 = !{i64 2155360547, i64 2155360567, i64 2155360630}
!2984 = !DILocation(line: 29, column: 1, scope: !2978)
!2985 = !{i64 2155360962, i64 2155360982, i64 2155361045}
!2986 = !DILocation(line: 30, column: 1, scope: !2978)
!2987 = !{i64 2155361381, i64 2155361401, i64 2155361464}
!2988 = !DILocation(line: 31, column: 1, scope: !2978)
!2989 = !{i64 2155361800, i64 2155361820, i64 2155361883}
!2990 = !DILocation(line: 33, column: 1, scope: !2978)
!2991 = !{i64 2155362092, i64 2155362112, i64 2155362175}
!2992 = !DILocation(line: 35, column: 1, scope: !2978)
!2993 = !{i64 2155362417, i64 2155362437, i64 2155362500}
!2994 = !DILocation(line: 50, column: 1, scope: !2978)
!2995 = !{i64 2155362844, i64 2155362864, i64 2155362927}
!2996 = !DILocation(line: 54, column: 1, scope: !2978)
!2997 = !{i64 2155367344, i64 2155367364, i64 2155367427}
!2998 = !DILocation(line: 61, column: 1, scope: !2978)
!2999 = !{i64 2155367661, i64 2155367681, i64 2155367744}
!3000 = !DILocation(line: 63, column: 1, scope: !2978)
!3001 = !{i64 2155368041, i64 2155368061, i64 2155368124}
!3002 = !DILocation(line: 64, column: 1, scope: !2978)
!3003 = !{i64 2155368563, i64 2155368583, i64 2155368646}
!3004 = !DILocation(line: 65, column: 1, scope: !2978)
!3005 = !{i64 2155369061, i64 2155369081, i64 2155369144}
!3006 = !DILocation(line: 66, column: 1, scope: !2978)
!3007 = !{i64 2155369543, i64 2155369563, i64 2155369626}
!3008 = !DILocation(line: 67, column: 1, scope: !2978)
!3009 = !{i64 2155370050, i64 2155370070, i64 2155370133}
!3010 = !DILocation(line: 68, column: 1, scope: !2978)
!3011 = !{i64 2155370538, i64 2155370558, i64 2155370621}
!3012 = !DILocation(line: 70, column: 1, scope: !2978)
!3013 = !{i64 2155371006, i64 2155371026, i64 2155371089}
!3014 = !DILocation(line: 71, column: 1, scope: !2978)
!3015 = !{i64 2155371448, i64 2155371468, i64 2155371531}
!3016 = !DILocation(line: 72, column: 1, scope: !2978)
!3017 = !{i64 2155371906, i64 2155371926, i64 2155371989}
!3018 = !DILocation(line: 79, column: 1, scope: !2978)
!3019 = !{i64 2155372360, i64 2155372380, i64 2155372443}
!3020 = !DILocation(line: 80, column: 1, scope: !2978)
!3021 = !{i64 2155372871, i64 2155372891, i64 2155372954}
!3022 = !DILocation(line: 82, column: 1, scope: !2978)
!3023 = !{i64 2155373362, i64 2155373382, i64 2155373445}
!3024 = !DILocation(line: 97, column: 1, scope: !2978)
!3025 = !{i64 2155373699, i64 2155373719, i64 2155373782}
!3026 = !DILocation(line: 99, column: 1, scope: !2978)
!3027 = !{i64 2155373917, i64 2155373937, i64 2155374000}
!3028 = !DILocation(line: 102, column: 1, scope: !2978)
!3029 = !{i64 2155374174, i64 2155374194, i64 2155374257}
!3030 = !DILocation(line: 105, column: 1, scope: !2978)
!3031 = !{i64 2155374414, i64 2155374434, i64 2155374497}
!3032 = !DILocation(line: 115, column: 1, scope: !2978)
!3033 = !{i64 2155374753, i64 2155374773, i64 2155374836}
!3034 = !DILocation(line: 118, column: 1, scope: !2978)
!3035 = !{i64 2155375097, i64 2155375117, i64 2155375180}
!3036 = !DILocation(line: 32, column: 1, scope: !3037)
!3037 = !DILexicalBlockFile(scope: !2978, file: !3038, discriminator: 0)
!3038 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3039 = !{i64 2155375453, i64 2155375473, i64 2155375536}
!3040 = !DILocation(line: 33, column: 1, scope: !3037)
!3041 = !{i64 2155375965, i64 2155375985, i64 2155376048}
!3042 = !DILocation(line: 53, column: 1, scope: !3037)
!3043 = !{i64 2155376473, i64 2155376493, i64 2155376556}
!3044 = !DILocation(line: 54, column: 1, scope: !3037)
!3045 = !{i64 2155380952, i64 2155380972, i64 2155381035}
!3046 = !DILocation(line: 55, column: 1, scope: !3037)
!3047 = !{i64 2155381370, i64 2155381390, i64 2155381453}
!3048 = !DILocation(line: 56, column: 1, scope: !3037)
!3049 = !{i64 2155381788, i64 2155381808, i64 2155381871}
!3050 = !DILocation(line: 57, column: 1, scope: !3037)
!3051 = !{i64 2155382206, i64 2155382226, i64 2155382289}
!3052 = !DILocation(line: 58, column: 1, scope: !3037)
!3053 = !{i64 2155382624, i64 2155382644, i64 2155382707}
!3054 = !DILocation(line: 59, column: 1, scope: !3037)
!3055 = !{i64 2155383042, i64 2155383062, i64 2155383125}
!3056 = !DILocation(line: 60, column: 1, scope: !3037)
!3057 = !{i64 2155383466, i64 2155383486, i64 2155383549}
!3058 = !DILocation(line: 61, column: 1, scope: !3037)
!3059 = !{i64 2155383783, i64 2155383803, i64 2155383866}
!3060 = !DILocation(line: 70, column: 1, scope: !3037)
!3061 = !{i64 2155384012, i64 2155384032, i64 2155384095}
!3062 = !DILocation(line: 72, column: 1, scope: !3037)
!3063 = !{i64 2155384344, i64 2155384364, i64 2155384427}
!3064 = !DILocation(line: 73, column: 1, scope: !3037)
!3065 = !{i64 2155384794, i64 2155384814, i64 2155384877}
!3066 = !DILocation(line: 74, column: 1, scope: !3037)
!3067 = !{i64 2155385244, i64 2155385264, i64 2155385327}
!3068 = !DILocation(line: 75, column: 1, scope: !3037)
!3069 = !{i64 2155385694, i64 2155385714, i64 2155385777}
!3070 = !DILocation(line: 76, column: 1, scope: !3037)
!3071 = !{i64 2155386144, i64 2155386164, i64 2155386227}
!3072 = !DILocation(line: 77, column: 1, scope: !3037)
!3073 = !{i64 2155386594, i64 2155386614, i64 2155386677}
!3074 = !DILocation(line: 78, column: 1, scope: !3037)
!3075 = !{i64 2155387044, i64 2155387064, i64 2155387127}
!3076 = !DILocation(line: 79, column: 1, scope: !3037)
!3077 = !{i64 2155387494, i64 2155387514, i64 2155387577}
!3078 = !DILocation(line: 80, column: 1, scope: !3037)
!3079 = !{i64 2155387947, i64 2155387967, i64 2155388030}
!3080 = !DILocation(line: 84, column: 1, scope: !3037)
!3081 = !{i64 2155388279, i64 2155388299, i64 2155388362}
!3082 = !DILocation(line: 91, column: 1, scope: !3037)
!3083 = !{i64 2155388676, i64 2155388696, i64 2155388759}
!3084 = !DILocation(line: 93, column: 1, scope: !3037)
!3085 = !{i64 2155389043, i64 2155389063, i64 2155389126}
!3086 = !DILocation(line: 106, column: 1, scope: !3037)
!3087 = !{i64 2155389313, i64 2155389333, i64 2155389396}
!3088 = !DILocation(line: 11, column: 1, scope: !3089)
!3089 = !DILexicalBlockFile(scope: !2978, file: !3090, discriminator: 0)
!3090 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3091 = distinct !DISubprogram(name: "helloLoop", scope: !116, file: !116, line: 36, type: !3092, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3095)
!3092 = !DISubroutineType(types: !3093)
!3093 = !{null, !305, !3094, !3094}
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3095 = !{!3096, !3097, !3098, !3099, !3100, !3101}
!3096 = !DILocalVariable(name: "my_name", arg: 1, scope: !3091, file: !116, line: 36, type: !305)
!3097 = !DILocalVariable(name: "my_sem", arg: 2, scope: !3091, file: !116, line: 37, type: !3094)
!3098 = !DILocalVariable(name: "other_sem", arg: 3, scope: !3091, file: !116, line: 37, type: !3094)
!3099 = !DILocalVariable(name: "tname", scope: !3091, file: !116, line: 39, type: !305)
!3100 = !DILocalVariable(name: "cpu", scope: !3091, file: !116, line: 40, type: !178)
!3101 = !DILocalVariable(name: "current_thread", scope: !3091, file: !116, line: 41, type: !3102)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!3103 = !DILocation(line: 0, scope: !3091)
!3104 = !DILocation(line: 43, column: 2, scope: !3091)
!3105 = !DILocation(line: 45, column: 3, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3091, file: !116, line: 43, column: 12)
!3107 = !DILocation(line: 47, column: 20, scope: !3106)
!3108 = !DILocation(line: 48, column: 11, scope: !3106)
!3109 = !DILocation(line: 55, column: 13, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3106, file: !116, line: 55, column: 7)
!3111 = !DILocation(line: 55, column: 7, scope: !3106)
!3112 = !DILocation(line: 56, column: 4, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3110, file: !116, line: 55, column: 22)
!3114 = !DILocation(line: 58, column: 3, scope: !3113)
!3115 = !DILocation(line: 59, column: 4, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3110, file: !116, line: 58, column: 10)
!3117 = !DILocation(line: 64, column: 3, scope: !3106)
!3118 = !DILocation(line: 65, column: 3, scope: !3106)
!3119 = !DILocation(line: 66, column: 3, scope: !3106)
!3120 = distinct !{!3120, !3104, !3121}
!3121 = !DILocation(line: 67, column: 2, scope: !3091)
!3122 = distinct !DISubprogram(name: "k_sem_take", scope: !3123, file: !3123, line: 1044, type: !3124, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3130)
!3123 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!3124 = !DISubroutineType(types: !3125)
!3125 = !{!109, !3094, !3126}
!3126 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !3127)
!3127 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !3128)
!3128 = !{!3129}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3127, file: !103, line: 66, baseType: !102, size: 64)
!3130 = !{!3131, !3132}
!3131 = !DILocalVariable(name: "sem", arg: 1, scope: !3122, file: !3123, line: 1044, type: !3094)
!3132 = !DILocalVariable(name: "timeout", arg: 2, scope: !3122, file: !3123, line: 1044, type: !3126)
!3133 = !DILocation(line: 0, scope: !3122)
!3134 = !DILocation(line: 1053, column: 2, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3122, file: !3123, line: 1053, column: 2)
!3136 = !{i64 2155063416}
!3137 = !DILocation(line: 1054, column: 9, scope: !3122)
!3138 = !DILocation(line: 1054, column: 2, scope: !3122)
!3139 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !3140, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!3142}
!3142 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !3102)
!3143 = !DILocation(line: 535, column: 9, scope: !3139)
!3144 = !DILocation(line: 535, column: 2, scope: !3139)
!3145 = distinct !DISubprogram(name: "k_busy_wait", scope: !3123, file: !3123, line: 123, type: !3146, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3148)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{null, !110}
!3148 = !{!3149}
!3149 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !3145, file: !3123, line: 123, type: !110)
!3150 = !DILocation(line: 0, scope: !3145)
!3151 = !DILocation(line: 132, column: 2, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3145, file: !3123, line: 132, column: 2)
!3153 = !{i64 2155059708}
!3154 = !DILocation(line: 133, column: 2, scope: !3145)
!3155 = !DILocation(line: 134, column: 1, scope: !3145)
!3156 = distinct !DISubprogram(name: "k_msleep", scope: !118, file: !118, line: 439, type: !3157, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3159)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{!734, !734}
!3159 = !{!3160}
!3160 = !DILocalVariable(name: "ms", arg: 1, scope: !3156, file: !118, line: 439, type: !734)
!3161 = !DILocation(line: 0, scope: !3156)
!3162 = !DILocation(line: 441, column: 9, scope: !3156)
!3163 = !DILocation(line: 441, column: 2, scope: !3156)
!3164 = distinct !DISubprogram(name: "k_sem_give", scope: !3123, file: !3123, line: 1061, type: !3165, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3167)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{null, !3094}
!3167 = !{!3168}
!3168 = !DILocalVariable(name: "sem", arg: 1, scope: !3164, file: !3123, line: 1061, type: !3094)
!3169 = !DILocation(line: 0, scope: !3164)
!3170 = !DILocation(line: 1070, column: 2, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3164, file: !3123, line: 1070, column: 2)
!3172 = !{i64 2155063484}
!3173 = !DILocation(line: 1071, column: 2, scope: !3164)
!3174 = !DILocation(line: 1072, column: 1, scope: !3164)
!3175 = distinct !DISubprogram(name: "k_sleep", scope: !3123, file: !3123, line: 91, type: !3176, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3178)
!3176 = !DISubroutineType(types: !3177)
!3177 = !{!734, !3126}
!3178 = !{!3179}
!3179 = !DILocalVariable(name: "timeout", arg: 1, scope: !3175, file: !3123, line: 91, type: !3126)
!3180 = !DILocation(line: 0, scope: !3175)
!3181 = !DILocation(line: 99, column: 2, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3175, file: !3123, line: 99, column: 2)
!3183 = !{i64 2155059572}
!3184 = !DILocation(line: 100, column: 9, scope: !3175)
!3185 = !DILocation(line: 100, column: 2, scope: !3175)
!3186 = distinct !DISubprogram(name: "z_current_get", scope: !3123, file: !3123, line: 173, type: !3140, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3187 = !DILocation(line: 180, column: 2, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3186, file: !3123, line: 180, column: 2)
!3189 = !{i64 2155059912}
!3190 = !DILocation(line: 181, column: 9, scope: !3186)
!3191 = !DILocation(line: 181, column: 2, scope: !3186)
!3192 = distinct !DISubprogram(name: "threadB", scope: !116, file: !116, line: 78, type: !3193, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3195)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{null, !106, !106, !106}
!3195 = !{!3196, !3197, !3198}
!3196 = !DILocalVariable(name: "dummy1", arg: 1, scope: !3192, file: !116, line: 78, type: !106)
!3197 = !DILocalVariable(name: "dummy2", arg: 2, scope: !3192, file: !116, line: 78, type: !106)
!3198 = !DILocalVariable(name: "dummy3", arg: 3, scope: !3192, file: !116, line: 78, type: !106)
!3199 = !DILocation(line: 0, scope: !3192)
!3200 = !DILocation(line: 85, column: 2, scope: !3192)
!3201 = !DILocation(line: 86, column: 1, scope: !3192)
!3202 = distinct !DISubprogram(name: "threadA", scope: !116, file: !116, line: 96, type: !3193, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3203)
!3203 = !{!3204, !3205, !3206}
!3204 = !DILocalVariable(name: "dummy1", arg: 1, scope: !3202, file: !116, line: 96, type: !106)
!3205 = !DILocalVariable(name: "dummy2", arg: 2, scope: !3202, file: !116, line: 96, type: !106)
!3206 = !DILocalVariable(name: "dummy3", arg: 3, scope: !3202, file: !116, line: 96, type: !106)
!3207 = !DILocation(line: 0, scope: !3202)
!3208 = !DILocation(line: 103, column: 2, scope: !3202)
!3209 = !DILocation(line: 104, column: 1, scope: !3202)
!3210 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 106, type: !2980, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3211 = !DILocation(line: 108, column: 2, scope: !3210)
!3212 = !DILocation(line: 112, column: 2, scope: !3210)
!3213 = !DILocation(line: 119, column: 2, scope: !3210)
!3214 = !DILocation(line: 123, column: 2, scope: !3210)
!3215 = !DILocation(line: 130, column: 2, scope: !3210)
!3216 = !DILocation(line: 131, column: 2, scope: !3210)
!3217 = !DILocation(line: 132, column: 1, scope: !3210)
!3218 = distinct !DISubprogram(name: "k_thread_create", scope: !3123, file: !3123, line: 24, type: !3219, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3226)
!3219 = !DISubroutineType(types: !3220)
!3220 = !{!3142, !3102, !3221, !107, !3224, !106, !106, !106, !109, !110, !3126}
!3221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3222, size: 32)
!3222 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3223, line: 44, baseType: !146)
!3223 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3224 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3223, line: 46, baseType: !3225)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 32)
!3226 = !{!3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236}
!3227 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3218, file: !3123, line: 24, type: !3102)
!3228 = !DILocalVariable(name: "stack", arg: 2, scope: !3218, file: !3123, line: 24, type: !3221)
!3229 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3218, file: !3123, line: 24, type: !107)
!3230 = !DILocalVariable(name: "entry", arg: 4, scope: !3218, file: !3123, line: 24, type: !3224)
!3231 = !DILocalVariable(name: "p1", arg: 5, scope: !3218, file: !3123, line: 24, type: !106)
!3232 = !DILocalVariable(name: "p2", arg: 6, scope: !3218, file: !3123, line: 24, type: !106)
!3233 = !DILocalVariable(name: "p3", arg: 7, scope: !3218, file: !3123, line: 24, type: !106)
!3234 = !DILocalVariable(name: "prio", arg: 8, scope: !3218, file: !3123, line: 24, type: !109)
!3235 = !DILocalVariable(name: "options", arg: 9, scope: !3218, file: !3123, line: 24, type: !110)
!3236 = !DILocalVariable(name: "delay", arg: 10, scope: !3218, file: !3123, line: 24, type: !3126)
!3237 = !DILocation(line: 0, scope: !3218)
!3238 = !DILocation(line: 49, column: 2, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3218, file: !3123, line: 49, column: 2)
!3240 = !{i64 2155059368}
!3241 = !DILocation(line: 50, column: 9, scope: !3218)
!3242 = !DILocation(line: 50, column: 2, scope: !3218)
!3243 = distinct !DISubprogram(name: "k_thread_name_set", scope: !3123, file: !3123, line: 391, type: !3244, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3246)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!109, !3142, !305}
!3246 = !{!3247, !3248}
!3247 = !DILocalVariable(name: "thread", arg: 1, scope: !3243, file: !3123, line: 391, type: !3142)
!3248 = !DILocalVariable(name: "str", arg: 2, scope: !3243, file: !3123, line: 391, type: !305)
!3249 = !DILocation(line: 0, scope: !3243)
!3250 = !DILocation(line: 400, column: 2, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3243, file: !3123, line: 400, column: 2)
!3252 = !{i64 2155060796}
!3253 = !DILocation(line: 401, column: 9, scope: !3243)
!3254 = !DILocation(line: 401, column: 2, scope: !3243)
!3255 = distinct !DISubprogram(name: "k_thread_start", scope: !3123, file: !3123, line: 205, type: !3256, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3258)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{null, !3142}
!3258 = !{!3259}
!3259 = !DILocalVariable(name: "thread", arg: 1, scope: !3255, file: !3123, line: 205, type: !3142)
!3260 = !DILocation(line: 0, scope: !3255)
!3261 = !DILocation(line: 214, column: 2, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3255, file: !3123, line: 214, column: 2)
!3263 = !{i64 2155060048}
!3264 = !DILocation(line: 215, column: 2, scope: !3255)
!3265 = !DILocation(line: 216, column: 1, scope: !3255)
!3266 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !267, file: !267, line: 45, type: !269, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3267)
!3267 = !{!3268}
!3268 = !DILocalVariable(name: "c", arg: 1, scope: !3266, file: !267, line: 45, type: !109)
!3269 = !DILocation(line: 0, scope: !3266)
!3270 = !DILocation(line: 50, column: 2, scope: !3266)
!3271 = distinct !DISubprogram(name: "__printk_hook_install", scope: !267, file: !267, line: 63, type: !3272, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3274)
!3272 = !DISubroutineType(types: !3273)
!3273 = !{null, !268}
!3274 = !{!3275}
!3275 = !DILocalVariable(name: "fn", arg: 1, scope: !3271, file: !267, line: 63, type: !268)
!3276 = !DILocation(line: 0, scope: !3271)
!3277 = !DILocation(line: 65, column: 12, scope: !3271)
!3278 = !DILocation(line: 66, column: 1, scope: !3271)
!3279 = distinct !DISubprogram(name: "__printk_get_hook", scope: !267, file: !267, line: 76, type: !3280, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !251)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!106}
!3282 = !DILocation(line: 78, column: 9, scope: !3279)
!3283 = !DILocation(line: 78, column: 2, scope: !3279)
!3284 = distinct !DISubprogram(name: "vprintk", scope: !267, file: !267, line: 113, type: !3285, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3294)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{null, !305, !3287}
!3287 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3288, line: 99, baseType: !3289)
!3288 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3289 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3288, line: 40, baseType: !3290)
!3290 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !267, baseType: !3291)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3292)
!3292 = !{!3293}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3291, file: !267, line: 79, baseType: !106, size: 32)
!3294 = !{!3295, !3296, !3297}
!3295 = !DILocalVariable(name: "fmt", arg: 1, scope: !3284, file: !267, line: 113, type: !305)
!3296 = !DILocalVariable(name: "ap", arg: 2, scope: !3284, file: !267, line: 113, type: !3287)
!3297 = !DILocalVariable(name: "ctx", scope: !3298, file: !267, line: 121, type: !3300)
!3298 = distinct !DILexicalBlock(scope: !3299, file: !267, line: 120, column: 27)
!3299 = distinct !DILexicalBlock(scope: !3284, file: !267, line: 120, column: 6)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !267, line: 81, size: 32, elements: !3301)
!3301 = !{!3302, !3303}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3300, file: !267, line: 85, baseType: !32, size: 32)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3300, file: !267, line: 86, baseType: !3304, offset: 32)
!3304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, elements: !3305)
!3305 = !{!3306}
!3306 = !DISubrange(count: 0)
!3307 = !DILocation(line: 0, scope: !3284)
!3308 = !DILocation(line: 148, column: 3, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3299, file: !267, line: 138, column: 9)
!3310 = !DILocation(line: 155, column: 1, scope: !3284)
!3311 = distinct !DISubprogram(name: "char_out", scope: !267, file: !267, line: 107, type: !3312, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3314)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{!109, !109, !106}
!3314 = !{!3315, !3316}
!3315 = !DILocalVariable(name: "c", arg: 1, scope: !3311, file: !267, line: 107, type: !109)
!3316 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3311, file: !267, line: 107, type: !106)
!3317 = !DILocation(line: 0, scope: !3311)
!3318 = !DILocation(line: 110, column: 9, scope: !3311)
!3319 = !DILocation(line: 110, column: 2, scope: !3311)
!3320 = distinct !DISubprogram(name: "cbvprintf", scope: !3321, file: !3321, line: 739, type: !3322, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3328)
!3321 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3322 = !DISubroutineType(types: !3323)
!3323 = !{!109, !3324, !106, !305, !3287}
!3324 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3321, line: 297, baseType: !3325)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 32)
!3326 = !DISubroutineType(types: !3327)
!3327 = !{!109, null}
!3328 = !{!3329, !3330, !3331, !3332}
!3329 = !DILocalVariable(name: "out", arg: 1, scope: !3320, file: !3321, line: 739, type: !3324)
!3330 = !DILocalVariable(name: "ctx", arg: 2, scope: !3320, file: !3321, line: 739, type: !106)
!3331 = !DILocalVariable(name: "format", arg: 3, scope: !3320, file: !3321, line: 739, type: !305)
!3332 = !DILocalVariable(name: "ap", arg: 4, scope: !3320, file: !3321, line: 739, type: !3287)
!3333 = !DILocation(line: 0, scope: !3320)
!3334 = !DILocation(line: 741, column: 9, scope: !3320)
!3335 = !DILocation(line: 741, column: 2, scope: !3320)
!3336 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !267, file: !267, line: 157, type: !3337, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3339)
!3337 = !DISubroutineType(types: !3338)
!3338 = !{null, !1134, !107}
!3339 = !{!3340, !3341, !3342}
!3340 = !DILocalVariable(name: "c", arg: 1, scope: !3336, file: !267, line: 157, type: !1134)
!3341 = !DILocalVariable(name: "n", arg: 2, scope: !3336, file: !267, line: 157, type: !107)
!3342 = !DILocalVariable(name: "i", scope: !3336, file: !267, line: 159, type: !107)
!3343 = !DILocation(line: 0, scope: !3336)
!3344 = !DILocation(line: 164, column: 16, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3346, file: !267, line: 164, column: 2)
!3346 = distinct !DILexicalBlock(scope: !3336, file: !267, line: 164, column: 2)
!3347 = !DILocation(line: 164, column: 2, scope: !3346)
!3348 = !DILocation(line: 165, column: 3, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3345, file: !267, line: 164, column: 26)
!3350 = !DILocation(line: 165, column: 13, scope: !3349)
!3351 = !DILocation(line: 164, column: 22, scope: !3345)
!3352 = distinct !{!3352, !3347, !3353}
!3353 = !DILocation(line: 166, column: 2, scope: !3346)
!3354 = !DILocation(line: 171, column: 1, scope: !3336)
!3355 = distinct !DISubprogram(name: "printk", scope: !267, file: !267, line: 203, type: !3356, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3358)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{null, !305, null}
!3358 = !{!3359, !3360}
!3359 = !DILocalVariable(name: "fmt", arg: 1, scope: !3355, file: !267, line: 203, type: !305)
!3360 = !DILocalVariable(name: "ap", scope: !3355, file: !267, line: 205, type: !3287)
!3361 = !DILocation(line: 0, scope: !3355)
!3362 = !DILocation(line: 205, column: 2, scope: !3355)
!3363 = !DILocation(line: 205, column: 10, scope: !3355)
!3364 = !DILocation(line: 207, column: 2, scope: !3355)
!3365 = !DILocation(line: 209, column: 2, scope: !3355)
!3366 = !DILocation(line: 211, column: 2, scope: !3355)
!3367 = !DILocation(line: 212, column: 1, scope: !3355)
!3368 = distinct !DISubprogram(name: "snprintk", scope: !267, file: !267, line: 239, type: !3369, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3371)
!3369 = !DISubroutineType(types: !3370)
!3370 = !{!109, !1134, !107, !305, null}
!3371 = !{!3372, !3373, !3374, !3375, !3376}
!3372 = !DILocalVariable(name: "str", arg: 1, scope: !3368, file: !267, line: 239, type: !1134)
!3373 = !DILocalVariable(name: "size", arg: 2, scope: !3368, file: !267, line: 239, type: !107)
!3374 = !DILocalVariable(name: "fmt", arg: 3, scope: !3368, file: !267, line: 239, type: !305)
!3375 = !DILocalVariable(name: "ap", scope: !3368, file: !267, line: 241, type: !3287)
!3376 = !DILocalVariable(name: "ret", scope: !3368, file: !267, line: 242, type: !109)
!3377 = !DILocation(line: 0, scope: !3368)
!3378 = !DILocation(line: 241, column: 2, scope: !3368)
!3379 = !DILocation(line: 241, column: 10, scope: !3368)
!3380 = !DILocation(line: 244, column: 2, scope: !3368)
!3381 = !DILocation(line: 245, column: 8, scope: !3368)
!3382 = !DILocation(line: 246, column: 2, scope: !3368)
!3383 = !DILocation(line: 249, column: 1, scope: !3368)
!3384 = !DILocation(line: 248, column: 2, scope: !3368)
!3385 = distinct !DISubprogram(name: "vsnprintk", scope: !267, file: !267, line: 251, type: !3386, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3388)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!109, !1134, !107, !305, !3287}
!3388 = !{!3389, !3390, !3391, !3392, !3393}
!3389 = !DILocalVariable(name: "str", arg: 1, scope: !3385, file: !267, line: 251, type: !1134)
!3390 = !DILocalVariable(name: "size", arg: 2, scope: !3385, file: !267, line: 251, type: !107)
!3391 = !DILocalVariable(name: "fmt", arg: 3, scope: !3385, file: !267, line: 251, type: !305)
!3392 = !DILocalVariable(name: "ap", arg: 4, scope: !3385, file: !267, line: 251, type: !3287)
!3393 = !DILocalVariable(name: "ctx", scope: !3385, file: !267, line: 253, type: !3394)
!3394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !267, line: 217, size: 96, elements: !3395)
!3395 = !{!3396, !3397, !3398}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3394, file: !267, line: 218, baseType: !1134, size: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3394, file: !267, line: 219, baseType: !109, size: 32, offset: 32)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3394, file: !267, line: 220, baseType: !109, size: 32, offset: 64)
!3399 = !DILocation(line: 0, scope: !3385)
!3400 = !DILocation(line: 253, column: 2, scope: !3385)
!3401 = !DILocation(line: 253, column: 21, scope: !3385)
!3402 = !DILocation(line: 253, column: 27, scope: !3385)
!3403 = !DILocation(line: 255, column: 2, scope: !3385)
!3404 = !DILocation(line: 257, column: 10, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3385, file: !267, line: 257, column: 6)
!3406 = !DILocation(line: 257, column: 22, scope: !3405)
!3407 = !DILocation(line: 257, column: 16, scope: !3405)
!3408 = !DILocation(line: 257, column: 6, scope: !3385)
!3409 = !DILocation(line: 258, column: 3, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3405, file: !267, line: 257, column: 27)
!3411 = !DILocation(line: 258, column: 18, scope: !3410)
!3412 = !DILocation(line: 259, column: 2, scope: !3410)
!3413 = !DILocation(line: 262, column: 1, scope: !3385)
!3414 = !DILocation(line: 261, column: 2, scope: !3385)
!3415 = distinct !DISubprogram(name: "str_out", scope: !267, file: !267, line: 223, type: !3416, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3419)
!3416 = !DISubroutineType(types: !3417)
!3417 = !{!109, !109, !3418}
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 32)
!3419 = !{!3420, !3421}
!3420 = !DILocalVariable(name: "c", arg: 1, scope: !3415, file: !267, line: 223, type: !109)
!3421 = !DILocalVariable(name: "ctx", arg: 2, scope: !3415, file: !267, line: 223, type: !3418)
!3422 = !DILocation(line: 0, scope: !3415)
!3423 = !DILocation(line: 225, column: 11, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3415, file: !267, line: 225, column: 6)
!3425 = !DILocation(line: 225, column: 15, scope: !3424)
!3426 = !DILocation(line: 0, scope: !3424)
!3427 = !DILocation(line: 225, column: 23, scope: !3424)
!3428 = !DILocation(line: 225, column: 45, scope: !3424)
!3429 = !DILocation(line: 225, column: 37, scope: !3424)
!3430 = !DILocation(line: 225, column: 6, scope: !3415)
!3431 = !DILocation(line: 226, column: 8, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3424, file: !267, line: 225, column: 50)
!3433 = !DILocation(line: 226, column: 13, scope: !3432)
!3434 = !DILocation(line: 227, column: 3, scope: !3432)
!3435 = !DILocation(line: 230, column: 29, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3415, file: !267, line: 230, column: 6)
!3437 = !DILocation(line: 230, column: 17, scope: !3436)
!3438 = !DILocation(line: 230, column: 6, scope: !3415)
!3439 = !DILocation(line: 231, column: 22, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3436, file: !267, line: 230, column: 34)
!3441 = !DILocation(line: 231, column: 3, scope: !3440)
!3442 = !DILocation(line: 231, column: 26, scope: !3440)
!3443 = !DILocation(line: 232, column: 2, scope: !3440)
!3444 = !DILocation(line: 233, column: 28, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3436, file: !267, line: 232, column: 9)
!3446 = !DILocation(line: 233, column: 22, scope: !3445)
!3447 = !DILocation(line: 233, column: 3, scope: !3445)
!3448 = !DILocation(line: 233, column: 26, scope: !3445)
!3449 = !DILocation(line: 237, column: 1, scope: !3415)
!3450 = distinct !DISubprogram(name: "z_thread_entry", scope: !3451, file: !3451, line: 30, type: !3452, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3454)
!3451 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3452 = !DISubroutineType(types: !3453)
!3453 = !{null, !3224, !106, !106, !106}
!3454 = !{!3455, !3456, !3457, !3458}
!3455 = !DILocalVariable(name: "entry", arg: 1, scope: !3450, file: !3451, line: 30, type: !3224)
!3456 = !DILocalVariable(name: "p1", arg: 2, scope: !3450, file: !3451, line: 31, type: !106)
!3457 = !DILocalVariable(name: "p2", arg: 3, scope: !3450, file: !3451, line: 31, type: !106)
!3458 = !DILocalVariable(name: "p3", arg: 4, scope: !3450, file: !3451, line: 31, type: !106)
!3459 = !DILocation(line: 0, scope: !3450)
!3460 = !DILocation(line: 36, column: 2, scope: !3450)
!3461 = !DILocation(line: 38, column: 17, scope: !3450)
!3462 = !DILocation(line: 38, column: 2, scope: !3450)
!3463 = !DILocation(line: 45, column: 2, scope: !3450)
!3464 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !3465, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !251)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{!3467}
!3467 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !3468)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 32)
!3469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1344, elements: !3470)
!3470 = !{!3471, !3530, !3542, !3543, !3544, !3545, !3546, !3552, !3565}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3469, file: !156, line: 247, baseType: !3472, size: 448)
!3472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 448, elements: !3473)
!3473 = !{!3474, !3498, !3505, !3506, !3507, !3516, !3517, !3518, !3519}
!3474 = !DIDerivedType(tag: DW_TAG_member, scope: !3472, file: !156, line: 60, baseType: !3475, size: 64)
!3475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3472, file: !156, line: 60, size: 64, elements: !3476)
!3476 = !{!3477, !3492}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3475, file: !156, line: 61, baseType: !3478, size: 64)
!3478 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !3479)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !3480)
!3480 = !{!3481, !3487}
!3481 = !DIDerivedType(tag: DW_TAG_member, scope: !3479, file: !127, line: 38, baseType: !3482, size: 32)
!3482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3479, file: !127, line: 38, size: 32, elements: !3483)
!3483 = !{!3484, !3486}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3482, file: !127, line: 39, baseType: !3485, size: 32)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 32)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3482, file: !127, line: 40, baseType: !3485, size: 32)
!3487 = !DIDerivedType(tag: DW_TAG_member, scope: !3479, file: !127, line: 42, baseType: !3488, size: 32, offset: 32)
!3488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3479, file: !127, line: 42, size: 32, elements: !3489)
!3489 = !{!3490, !3491}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3488, file: !127, line: 43, baseType: !3485, size: 32)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3488, file: !127, line: 44, baseType: !3485, size: 32)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3475, file: !156, line: 62, baseType: !3493, size: 64)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !3494)
!3494 = !{!3495}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3493, file: !168, line: 50, baseType: !3496, size: 64)
!3496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3497, size: 64, elements: !173)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 32)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3472, file: !156, line: 68, baseType: !3499, size: 32, offset: 64)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 32)
!3500 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !3501)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !3502)
!3502 = !{!3503}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3501, file: !122, line: 232, baseType: !3504, size: 64)
!3504 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !3479)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3472, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3472, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!3507 = !DIDerivedType(tag: DW_TAG_member, scope: !3472, file: !156, line: 90, baseType: !3508, size: 16, offset: 112)
!3508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3472, file: !156, line: 90, size: 16, elements: !3509)
!3509 = !{!3510, !3515}
!3510 = !DIDerivedType(tag: DW_TAG_member, scope: !3508, file: !156, line: 91, baseType: !3511, size: 16)
!3511 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3508, file: !156, line: 91, size: 16, elements: !3512)
!3512 = !{!3513, !3514}
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3511, file: !156, line: 96, baseType: !188, size: 8)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3511, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3508, file: !156, line: 100, baseType: !192, size: 16)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3472, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_mask", scope: !3472, file: !156, line: 123, baseType: !178, size: 8, offset: 160)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3472, file: !156, line: 127, baseType: !106, size: 32, offset: 192)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3472, file: !156, line: 131, baseType: !3520, size: 192, offset: 256)
!3520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !3521)
!3521 = !{!3522, !3523, !3529}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3520, file: !122, line: 245, baseType: !3478, size: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3520, file: !122, line: 246, baseType: !3524, size: 32, offset: 64)
!3524 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !3525)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 32)
!3526 = !DISubroutineType(types: !3527)
!3527 = !{null, !3528}
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 32)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3520, file: !122, line: 249, baseType: !104, size: 64, offset: 128)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3469, file: !156, line: 250, baseType: !3531, size: 288, offset: 448)
!3531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !3532)
!3532 = !{!3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541}
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3531, file: !210, line: 26, baseType: !110, size: 32)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3531, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3531, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3531, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3531, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3531, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3531, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3531, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3531, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3469, file: !156, line: 253, baseType: !106, size: 32, offset: 736)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3469, file: !156, line: 256, baseType: !3500, size: 64, offset: 768)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3469, file: !156, line: 279, baseType: !224, size: 256, offset: 832)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3469, file: !156, line: 294, baseType: !109, size: 32, offset: 1088)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3469, file: !156, line: 300, baseType: !3547, size: 96, offset: 1120)
!3547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !3548)
!3548 = !{!3549, !3550, !3551}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3547, file: !156, line: 153, baseType: !22, size: 32)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3547, file: !156, line: 162, baseType: !107, size: 32, offset: 32)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3547, file: !156, line: 168, baseType: !107, size: 32, offset: 64)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3469, file: !156, line: 325, baseType: !3553, size: 32, offset: 1216)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 32)
!3554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 160, elements: !3555)
!3555 = !{!3556, !3562, !3563}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3554, file: !118, line: 5074, baseType: !3557, size: 96)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !3558)
!3558 = !{!3559, !3560, !3561}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3557, file: !240, line: 57, baseType: !243, size: 32)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3557, file: !240, line: 58, baseType: !106, size: 32, offset: 32)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3557, file: !240, line: 59, baseType: !107, size: 32, offset: 64)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3554, file: !118, line: 5075, baseType: !3500, size: 64, offset: 96)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3554, file: !118, line: 5076, baseType: !3564, offset: 160)
!3564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3469, file: !156, line: 343, baseType: !3566, size: 64, offset: 1248)
!3566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !210, line: 60, size: 64, elements: !3567)
!3567 = !{!3568, !3569}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3566, file: !210, line: 63, baseType: !110, size: 32)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3566, file: !210, line: 66, baseType: !110, size: 32, offset: 32)
!3570 = !DILocation(line: 535, column: 9, scope: !3464)
!3571 = !DILocation(line: 535, column: 2, scope: !3464)
!3572 = distinct !DISubprogram(name: "k_thread_abort", scope: !3123, file: !3123, line: 188, type: !3573, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3575)
!3573 = !DISubroutineType(types: !3574)
!3574 = !{null, !3467}
!3575 = !{!3576}
!3576 = !DILocalVariable(name: "thread", arg: 1, scope: !3572, file: !3123, line: 188, type: !3467)
!3577 = !DILocation(line: 0, scope: !3572)
!3578 = !DILocation(line: 197, column: 2, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3572, file: !3123, line: 197, column: 2)
!3580 = !{i64 2155057812}
!3581 = !DILocation(line: 198, column: 2, scope: !3572)
!3582 = !DILocation(line: 199, column: 1, scope: !3572)
!3583 = distinct !DISubprogram(name: "z_current_get", scope: !3123, file: !3123, line: 173, type: !3465, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !251)
!3584 = !DILocation(line: 180, column: 2, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3583, file: !3123, line: 180, column: 2)
!3586 = !{i64 2155057744}
!3587 = !DILocation(line: 181, column: 9, scope: !3583)
!3588 = !DILocation(line: 181, column: 2, scope: !3583)
!3589 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2423, file: !2423, line: 1338, type: !3590, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !3598)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{!109, !3324, !106, !305, !3592, !110}
!3592 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3288, line: 99, baseType: !3593)
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3288, line: 40, baseType: !3594)
!3594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2423, baseType: !3595)
!3595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3596)
!3596 = !{!3597}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3595, file: !2423, baseType: !106, size: 32)
!3598 = !{!3599, !3600, !3601, !3602, !3603, !3604, !3608, !3609, !3610, !3612, !3617, !3662, !3665, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3677, !3678, !3679, !3683, !3686, !3688, !3691, !3692, !3693, !3698, !3704, !3707, !3711, !3717, !3721, !3724, !3726, !3729}
!3599 = !DILocalVariable(name: "out", arg: 1, scope: !3589, file: !2423, line: 1338, type: !3324)
!3600 = !DILocalVariable(name: "ctx", arg: 2, scope: !3589, file: !2423, line: 1338, type: !106)
!3601 = !DILocalVariable(name: "fp", arg: 3, scope: !3589, file: !2423, line: 1338, type: !305)
!3602 = !DILocalVariable(name: "ap", arg: 4, scope: !3589, file: !2423, line: 1339, type: !3592)
!3603 = !DILocalVariable(name: "flags", arg: 5, scope: !3589, file: !2423, line: 1339, type: !110)
!3604 = !DILocalVariable(name: "buf", scope: !3589, file: !2423, line: 1341, type: !3605)
!3605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 176, elements: !3606)
!3606 = !{!3607}
!3607 = !DISubrange(count: 22)
!3608 = !DILocalVariable(name: "count", scope: !3589, file: !2423, line: 1342, type: !107)
!3609 = !DILocalVariable(name: "sint", scope: !3589, file: !2423, line: 1343, type: !2442)
!3610 = !DILocalVariable(name: "tagged_ap", scope: !3589, file: !2423, line: 1345, type: !3611)
!3611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !315)
!3612 = !DILocalVariable(name: "rc", scope: !3613, file: !2423, line: 1377, type: !109)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !2423, line: 1377, column: 4)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !2423, line: 1376, column: 19)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1376, column: 7)
!3616 = distinct !DILexicalBlock(scope: !3589, file: !2423, line: 1375, column: 19)
!3617 = !DILocalVariable(name: "state", scope: !3616, file: !2423, line: 1395, type: !3618)
!3618 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3589, file: !2423, line: 1392, size: 192, elements: !3619)
!3619 = !{!3620, !3630}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3618, file: !2423, line: 1393, baseType: !3621, size: 64)
!3621 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2423, line: 166, size: 64, elements: !3622)
!3622 = !{!3623, !3624, !3625, !3627, !3629}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3621, file: !2423, line: 168, baseType: !2442, size: 64)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3621, file: !2423, line: 171, baseType: !2445, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3621, file: !2423, line: 174, baseType: !3626, size: 64)
!3626 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3621, file: !2423, line: 177, baseType: !3628, size: 64)
!3628 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3621, file: !2423, line: 180, baseType: !106, size: 32)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3618, file: !2423, line: 1394, baseType: !3631, size: 96, offset: 64)
!3631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2423, line: 189, size: 96, elements: !3632)
!3632 = !{!3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3657}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3631, file: !2423, line: 191, baseType: !315, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3631, file: !2423, line: 194, baseType: !315, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3631, file: !2423, line: 197, baseType: !315, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3631, file: !2423, line: 200, baseType: !315, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3631, file: !2423, line: 203, baseType: !315, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3631, file: !2423, line: 206, baseType: !315, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3631, file: !2423, line: 209, baseType: !315, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3631, file: !2423, line: 212, baseType: !315, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3631, file: !2423, line: 219, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3631, file: !2423, line: 222, baseType: !315, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3631, file: !2423, line: 229, baseType: !315, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3631, file: !2423, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3631, file: !2423, line: 238, baseType: !315, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3631, file: !2423, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3631, file: !2423, line: 244, baseType: !315, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3631, file: !2423, line: 247, baseType: !315, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3631, file: !2423, line: 252, baseType: !315, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3631, file: !2423, line: 257, baseType: !315, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3631, file: !2423, line: 260, baseType: !179, size: 8, offset: 24)
!3652 = !DIDerivedType(tag: DW_TAG_member, scope: !3631, file: !2423, line: 262, baseType: !3653, size: 32, offset: 32)
!3653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3631, file: !2423, line: 262, size: 32, elements: !3654)
!3654 = !{!3655, !3656}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3653, file: !2423, line: 267, baseType: !109, size: 32)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3653, file: !2423, line: 289, baseType: !109, size: 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, scope: !3631, file: !2423, line: 292, baseType: !3658, size: 32, offset: 64)
!3658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3631, file: !2423, line: 292, size: 32, elements: !3659)
!3659 = !{!3660, !3661}
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3658, file: !2423, line: 297, baseType: !109, size: 32)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3658, file: !2423, line: 306, baseType: !109, size: 32)
!3662 = !DILocalVariable(name: "conv", scope: !3616, file: !2423, line: 1400, type: !3663)
!3663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3664)
!3664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 32)
!3665 = !DILocalVariable(name: "value", scope: !3616, file: !2423, line: 1401, type: !3666)
!3666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3667)
!3667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3621, size: 32)
!3668 = !DILocalVariable(name: "sp", scope: !3616, file: !2423, line: 1402, type: !305)
!3669 = !DILocalVariable(name: "width", scope: !3616, file: !2423, line: 1403, type: !109)
!3670 = !DILocalVariable(name: "precision", scope: !3616, file: !2423, line: 1404, type: !109)
!3671 = !DILocalVariable(name: "bps", scope: !3616, file: !2423, line: 1405, type: !305)
!3672 = !DILocalVariable(name: "bpe", scope: !3616, file: !2423, line: 1406, type: !305)
!3673 = !DILocalVariable(name: "sign", scope: !3616, file: !2423, line: 1407, type: !150)
!3674 = !DILocalVariable(name: "arg", scope: !3675, file: !2423, line: 1432, type: !109)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !2423, line: 1431, column: 24)
!3676 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1431, column: 7)
!3677 = !DILocalVariable(name: "specifier_cat", scope: !3616, file: !2423, line: 1468, type: !2422)
!3678 = !DILocalVariable(name: "length_mod", scope: !3616, file: !2423, line: 1470, type: !2430)
!3679 = !DILocalVariable(name: "rc", scope: !3680, file: !2423, line: 1575, type: !109)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !2423, line: 1575, column: 4)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !2423, line: 1574, column: 43)
!3682 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1574, column: 7)
!3683 = !DILocalVariable(name: "rc", scope: !3684, file: !2423, line: 1584, type: !109)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !2423, line: 1584, column: 4)
!3685 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1582, column: 28)
!3686 = !DILocalVariable(name: "len", scope: !3687, file: !2423, line: 1589, type: !107)
!3687 = distinct !DILexicalBlock(scope: !3685, file: !2423, line: 1586, column: 13)
!3688 = !DILocalVariable(name: "len", scope: !3689, file: !2423, line: 1641, type: !107)
!3689 = distinct !DILexicalBlock(scope: !3690, file: !2423, line: 1640, column: 24)
!3690 = distinct !DILexicalBlock(scope: !3685, file: !2423, line: 1640, column: 8)
!3691 = !DILocalVariable(name: "nj_len", scope: !3616, file: !2423, line: 1722, type: !107)
!3692 = !DILocalVariable(name: "pad_len", scope: !3616, file: !2423, line: 1723, type: !109)
!3693 = !DILocalVariable(name: "pad", scope: !3694, file: !2423, line: 1751, type: !150)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !2423, line: 1750, column: 26)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !2423, line: 1750, column: 8)
!3696 = distinct !DILexicalBlock(scope: !3697, file: !2423, line: 1747, column: 18)
!3697 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1747, column: 7)
!3698 = !DILocalVariable(name: "rc", scope: !3699, file: !2423, line: 1758, type: !109)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !2423, line: 1758, column: 7)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !2423, line: 1757, column: 21)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !2423, line: 1757, column: 10)
!3702 = distinct !DILexicalBlock(scope: !3703, file: !2423, line: 1756, column: 26)
!3703 = distinct !DILexicalBlock(scope: !3694, file: !2423, line: 1756, column: 9)
!3704 = !DILocalVariable(name: "rc", scope: !3705, file: !2423, line: 1765, type: !109)
!3705 = distinct !DILexicalBlock(scope: !3706, file: !2423, line: 1765, column: 6)
!3706 = distinct !DILexicalBlock(scope: !3694, file: !2423, line: 1764, column: 25)
!3707 = !DILocalVariable(name: "rc", scope: !3708, file: !2423, line: 1774, type: !109)
!3708 = distinct !DILexicalBlock(scope: !3709, file: !2423, line: 1774, column: 4)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !2423, line: 1773, column: 18)
!3710 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1773, column: 7)
!3711 = !DILocalVariable(name: "rc", scope: !3712, file: !2423, line: 1819, type: !109)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !2423, line: 1819, column: 5)
!3713 = distinct !DILexicalBlock(scope: !3714, file: !2423, line: 1818, column: 44)
!3714 = distinct !DILexicalBlock(scope: !3715, file: !2423, line: 1818, column: 8)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !2423, line: 1817, column: 10)
!3716 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1777, column: 7)
!3717 = !DILocalVariable(name: "rc", scope: !3718, file: !2423, line: 1823, type: !109)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !2423, line: 1823, column: 5)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !2423, line: 1822, column: 26)
!3720 = distinct !DILexicalBlock(scope: !3715, file: !2423, line: 1822, column: 8)
!3721 = !DILocalVariable(name: "rc", scope: !3722, file: !2423, line: 1828, type: !109)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !2423, line: 1828, column: 5)
!3723 = distinct !DILexicalBlock(scope: !3715, file: !2423, line: 1827, column: 26)
!3724 = !DILocalVariable(name: "rc", scope: !3725, file: !2423, line: 1831, type: !109)
!3725 = distinct !DILexicalBlock(scope: !3715, file: !2423, line: 1831, column: 4)
!3726 = !DILocalVariable(name: "rc", scope: !3727, file: !2423, line: 1836, type: !109)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !2423, line: 1836, column: 4)
!3728 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1835, column: 21)
!3729 = !DILabel(scope: !3685, name: "prec_int_pad0", file: !2423, line: 1634)
!3730 = !DILocation(line: 0, scope: !3589)
!3731 = !DILocation(line: 1341, column: 2, scope: !3589)
!3732 = !DILocation(line: 1341, column: 7, scope: !3589)
!3733 = !DILocation(line: 1375, column: 2, scope: !3589)
!3734 = !DILocation(line: 1342, column: 9, scope: !3589)
!3735 = !DILocation(line: 1375, column: 9, scope: !3589)
!3736 = !DILocation(line: 1377, column: 4, scope: !3613)
!3737 = !DILocation(line: 0, scope: !3613)
!3738 = !DILocation(line: 1377, column: 4, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3613, file: !2423, line: 1377, column: 4)
!3740 = distinct !{!3740, !3733, !3741}
!3741 = !DILocation(line: 1839, column: 2, scope: !3589)
!3742 = !DILocation(line: 1392, column: 3, scope: !3616)
!3743 = !DILocation(line: 1395, column: 5, scope: !3616)
!3744 = !DILocation(line: 0, scope: !3616)
!3745 = !DILocation(line: 1409, column: 8, scope: !3616)
!3746 = !DILocation(line: 1414, column: 13, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1414, column: 7)
!3748 = !DILocation(line: 1414, column: 7, scope: !3616)
!3749 = !DILocation(line: 1415, column: 12, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3747, file: !2423, line: 1414, column: 25)
!3751 = !DILocation(line: 1417, column: 14, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3750, file: !2423, line: 1417, column: 8)
!3753 = !DILocation(line: 1417, column: 8, scope: !3750)
!3754 = !DILocation(line: 1418, column: 21, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3752, file: !2423, line: 1417, column: 19)
!3756 = !DILocation(line: 1419, column: 13, scope: !3755)
!3757 = !DILocation(line: 1420, column: 4, scope: !3755)
!3758 = !DILocation(line: 1421, column: 20, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3747, file: !2423, line: 1421, column: 14)
!3760 = !DILocation(line: 1421, column: 14, scope: !3747)
!3761 = !DILocation(line: 1431, column: 13, scope: !3676)
!3762 = !DILocation(line: 1431, column: 7, scope: !3616)
!3763 = !DILocation(line: 1432, column: 14, scope: !3675)
!3764 = !DILocation(line: 0, scope: !3675)
!3765 = !DILocation(line: 1434, column: 12, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3675, file: !2423, line: 1434, column: 8)
!3767 = !DILocation(line: 1434, column: 8, scope: !3675)
!3768 = !DILocation(line: 1435, column: 24, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3766, file: !2423, line: 1434, column: 17)
!3770 = !DILocation(line: 1436, column: 4, scope: !3769)
!3771 = !DILocation(line: 1439, column: 20, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3676, file: !2423, line: 1439, column: 14)
!3773 = !DILocation(line: 1439, column: 14, scope: !3676)
!3774 = !DILocation(line: 1469, column: 37, scope: !3616)
!3775 = !DILocation(line: 1448, column: 20, scope: !3616)
!3776 = !DILocation(line: 1449, column: 22, scope: !3616)
!3777 = !DILocation(line: 1471, column: 34, scope: !3616)
!3778 = !DILocation(line: 1478, column: 7, scope: !3616)
!3779 = !DILocation(line: 1479, column: 4, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !2423, line: 1478, column: 40)
!3781 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1478, column: 7)
!3782 = !DILocation(line: 1484, column: 19, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3780, file: !2423, line: 1479, column: 24)
!3784 = !DILocation(line: 1484, column: 17, scope: !3783)
!3785 = !DILocation(line: 1485, column: 5, scope: !3783)
!3786 = !DILocation(line: 1492, column: 20, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3788, file: !2423, line: 1491, column: 12)
!3788 = distinct !DILexicalBlock(scope: !3783, file: !2423, line: 1487, column: 9)
!3789 = !DILocation(line: 1492, column: 18, scope: !3787)
!3790 = !DILocation(line: 1494, column: 5, scope: !3783)
!3791 = !DILocation(line: 1497, column: 23, scope: !3783)
!3792 = !DILocation(line: 1496, column: 17, scope: !3783)
!3793 = !DILocation(line: 1498, column: 5, scope: !3783)
!3794 = !DILocation(line: 1501, column: 23, scope: !3783)
!3795 = !DILocation(line: 1500, column: 17, scope: !3783)
!3796 = !DILocation(line: 1502, column: 5, scope: !3783)
!3797 = !DILocation(line: 1513, column: 23, scope: !3783)
!3798 = !DILocation(line: 1513, column: 6, scope: !3783)
!3799 = !DILocation(line: 1512, column: 17, scope: !3783)
!3800 = !DILocation(line: 1514, column: 5, scope: !3783)
!3801 = !DILocation(line: 0, scope: !3783)
!3802 = !DILocation(line: 1516, column: 8, scope: !3780)
!3803 = !DILocation(line: 1517, column: 19, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !2423, line: 1516, column: 33)
!3805 = distinct !DILexicalBlock(scope: !3780, file: !2423, line: 1516, column: 8)
!3806 = !DILocation(line: 1517, column: 17, scope: !3804)
!3807 = !DILocation(line: 1518, column: 4, scope: !3804)
!3808 = !DILocation(line: 1519, column: 19, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !2423, line: 1518, column: 39)
!3810 = distinct !DILexicalBlock(scope: !3805, file: !2423, line: 1518, column: 15)
!3811 = !DILocation(line: 1519, column: 17, scope: !3809)
!3812 = !DILocation(line: 1520, column: 4, scope: !3809)
!3813 = !DILocation(line: 1522, column: 4, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !2423, line: 1521, column: 47)
!3815 = distinct !DILexicalBlock(scope: !3781, file: !2423, line: 1521, column: 14)
!3816 = !DILocation(line: 1527, column: 19, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3814, file: !2423, line: 1522, column: 24)
!3818 = !DILocation(line: 1527, column: 17, scope: !3817)
!3819 = !DILocation(line: 1528, column: 5, scope: !3817)
!3820 = !DILocation(line: 0, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3817, file: !2423, line: 1530, column: 9)
!3822 = !DILocation(line: 1540, column: 23, scope: !3817)
!3823 = !DILocation(line: 1539, column: 17, scope: !3817)
!3824 = !DILocation(line: 1542, column: 5, scope: !3817)
!3825 = !DILocation(line: 1545, column: 23, scope: !3817)
!3826 = !DILocation(line: 1544, column: 17, scope: !3817)
!3827 = !DILocation(line: 1547, column: 5, scope: !3817)
!3828 = !DILocation(line: 1551, column: 23, scope: !3817)
!3829 = !DILocation(line: 1551, column: 6, scope: !3817)
!3830 = !DILocation(line: 1550, column: 17, scope: !3817)
!3831 = !DILocation(line: 1552, column: 5, scope: !3817)
!3832 = !DILocation(line: 0, scope: !3817)
!3833 = !DILocation(line: 1554, column: 8, scope: !3814)
!3834 = !DILocation(line: 1555, column: 19, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !2423, line: 1554, column: 33)
!3836 = distinct !DILexicalBlock(scope: !3814, file: !2423, line: 1554, column: 8)
!3837 = !DILocation(line: 1555, column: 17, scope: !3835)
!3838 = !DILocation(line: 1556, column: 4, scope: !3835)
!3839 = !DILocation(line: 1557, column: 19, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !2423, line: 1556, column: 39)
!3841 = distinct !DILexicalBlock(scope: !3836, file: !2423, line: 1556, column: 15)
!3842 = !DILocation(line: 1557, column: 17, scope: !3840)
!3843 = !DILocation(line: 1558, column: 4, scope: !3840)
!3844 = !DILocation(line: 0, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !2423, line: 1560, column: 8)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !2423, line: 1559, column: 45)
!3847 = distinct !DILexicalBlock(scope: !3815, file: !2423, line: 1559, column: 14)
!3848 = !DILocation(line: 1566, column: 17, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !2423, line: 1565, column: 46)
!3850 = distinct !DILexicalBlock(scope: !3847, file: !2423, line: 1565, column: 14)
!3851 = !DILocation(line: 1566, column: 15, scope: !3849)
!3852 = !DILocation(line: 1567, column: 3, scope: !3849)
!3853 = !DILocation(line: 1574, column: 21, scope: !3682)
!3854 = !DILocation(line: 1575, column: 4, scope: !3680)
!3855 = !DILocation(line: 0, scope: !3680)
!3856 = !DILocation(line: 1575, column: 4, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3680, file: !2423, line: 1575, column: 4)
!3858 = !DILocation(line: 1582, column: 17, scope: !3616)
!3859 = !DILocation(line: 1582, column: 3, scope: !3616)
!3860 = !DILocation(line: 1584, column: 4, scope: !3684)
!3861 = !DILocation(line: 0, scope: !3684)
!3862 = !DILocation(line: 1584, column: 4, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3684, file: !2423, line: 1584, column: 4)
!3864 = !DILocation(line: 1587, column: 31, scope: !3687)
!3865 = !DILocation(line: 1591, column: 18, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3687, file: !2423, line: 1591, column: 8)
!3867 = !DILocation(line: 1591, column: 8, scope: !3687)
!3868 = !DILocation(line: 1592, column: 11, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3866, file: !2423, line: 1591, column: 24)
!3870 = !DILocation(line: 0, scope: !3687)
!3871 = !DILocation(line: 1593, column: 4, scope: !3869)
!3872 = !DILocation(line: 1594, column: 11, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3866, file: !2423, line: 1593, column: 11)
!3874 = !DILocation(line: 1604, column: 51, scope: !3685)
!3875 = !DILocation(line: 1604, column: 13, scope: !3685)
!3876 = !DILocation(line: 1604, column: 11, scope: !3685)
!3877 = !DILocation(line: 1606, column: 4, scope: !3685)
!3878 = !DILocation(line: 1609, column: 14, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3685, file: !2423, line: 1609, column: 8)
!3880 = !DILocation(line: 1609, column: 8, scope: !3685)
!3881 = !DILocation(line: 1619, column: 18, scope: !3685)
!3882 = !DILocation(line: 1620, column: 13, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3685, file: !2423, line: 1620, column: 8)
!3884 = !DILocation(line: 1620, column: 8, scope: !3685)
!3885 = !DILocation(line: 1622, column: 36, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3883, file: !2423, line: 1620, column: 18)
!3887 = !DILocation(line: 1622, column: 17, scope: !3886)
!3888 = !DILocation(line: 1623, column: 4, scope: !3886)
!3889 = !DILocation(line: 1632, column: 29, scope: !3685)
!3890 = !DILocation(line: 1632, column: 10, scope: !3685)
!3891 = !DILocation(line: 1632, column: 4, scope: !3685)
!3892 = !DILocation(line: 1407, column: 8, scope: !3616)
!3893 = !DILocation(line: 0, scope: !3685)
!3894 = !DILocation(line: 1634, column: 3, scope: !3685)
!3895 = !DILocation(line: 1640, column: 18, scope: !3690)
!3896 = !DILocation(line: 1640, column: 8, scope: !3685)
!3897 = !DILocation(line: 1729, column: 13, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1729, column: 7)
!3899 = !DILocation(line: 1641, column: 22, scope: !3689)
!3900 = !DILocation(line: 0, scope: !3689)
!3901 = !DILocation(line: 1646, column: 21, scope: !3689)
!3902 = !DILocation(line: 1649, column: 13, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3689, file: !2423, line: 1649, column: 9)
!3904 = !DILocation(line: 1649, column: 9, scope: !3689)
!3905 = !DILocation(line: 1650, column: 35, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3903, file: !2423, line: 1649, column: 34)
!3907 = !DILocation(line: 1650, column: 23, scope: !3906)
!3908 = !DILocation(line: 1651, column: 5, scope: !3906)
!3909 = !DILocation(line: 1660, column: 15, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3685, file: !2423, line: 1660, column: 8)
!3911 = !DILocation(line: 1660, column: 19, scope: !3910)
!3912 = !DILocation(line: 1660, column: 8, scope: !3685)
!3913 = !DILocation(line: 1661, column: 23, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3910, file: !2423, line: 1660, column: 28)
!3915 = !DILocation(line: 1661, column: 11, scope: !3914)
!3916 = !DILocation(line: 1665, column: 22, scope: !3914)
!3917 = !DILocation(line: 1666, column: 21, scope: !3914)
!3918 = !DILocation(line: 1668, column: 5, scope: !3914)
!3919 = !DILocation(line: 1677, column: 30, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !2423, line: 1676, column: 49)
!3921 = distinct !DILexicalBlock(scope: !3685, file: !2423, line: 1676, column: 8)
!3922 = !DILocation(line: 1677, column: 5, scope: !3920)
!3923 = !DILocation(line: 1680, column: 4, scope: !3685)
!3924 = !DILocation(line: 0, scope: !3866)
!3925 = !DILocation(line: 1597, column: 14, scope: !3687)
!3926 = !DILocation(line: 1699, column: 11, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1699, column: 7)
!3928 = !DILocation(line: 1699, column: 7, scope: !3616)
!3929 = !DILocation(line: 1725, column: 7, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1725, column: 7)
!3931 = !DILocation(line: 1725, column: 12, scope: !3930)
!3932 = !DILocation(line: 1747, column: 13, scope: !3697)
!3933 = !DILocation(line: 1747, column: 7, scope: !3616)
!3934 = !DILocation(line: 1722, column: 24, scope: !3616)
!3935 = !DILocation(line: 1725, column: 7, scope: !3616)
!3936 = !DILocation(line: 1729, column: 7, scope: !3616)
!3937 = !DILocation(line: 1736, column: 13, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3616, file: !2423, line: 1736, column: 7)
!3939 = !DILocation(line: 1735, column: 19, scope: !3616)
!3940 = !DILocation(line: 1736, column: 7, scope: !3616)
!3941 = !DILocation(line: 1748, column: 10, scope: !3696)
!3942 = !DILocation(line: 1750, column: 15, scope: !3695)
!3943 = !DILocation(line: 1750, column: 8, scope: !3696)
!3944 = !DILocation(line: 0, scope: !3694)
!3945 = !DILocation(line: 1756, column: 15, scope: !3703)
!3946 = !DILocation(line: 1756, column: 9, scope: !3694)
!3947 = !DILocation(line: 1758, column: 7, scope: !3699)
!3948 = !DILocation(line: 0, scope: !3699)
!3949 = !DILocation(line: 1758, column: 7, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3699, file: !2423, line: 1758, column: 7)
!3951 = !DILocation(line: 1764, column: 5, scope: !3694)
!3952 = !DILocation(line: 0, scope: !3696)
!3953 = !DILocation(line: 1764, column: 20, scope: !3694)
!3954 = !DILocation(line: 1764, column: 17, scope: !3694)
!3955 = !DILocation(line: 1765, column: 6, scope: !3705)
!3956 = !DILocation(line: 0, scope: !3705)
!3957 = !DILocation(line: 1765, column: 6, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3705, file: !2423, line: 1765, column: 6)
!3959 = distinct !{!3959, !3951, !3960}
!3960 = !DILocation(line: 1766, column: 5, scope: !3694)
!3961 = !DILocation(line: 1773, column: 12, scope: !3710)
!3962 = !DILocation(line: 1773, column: 7, scope: !3616)
!3963 = !DILocation(line: 1773, column: 7, scope: !3710)
!3964 = !DILocation(line: 1774, column: 4, scope: !3708)
!3965 = !DILocation(line: 0, scope: !3708)
!3966 = !DILocation(line: 1774, column: 4, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3708, file: !2423, line: 1774, column: 4)
!3968 = !DILocation(line: 1818, column: 8, scope: !3714)
!3969 = !DILocation(line: 1818, column: 27, scope: !3714)
!3970 = !DILocation(line: 1818, column: 25, scope: !3714)
!3971 = !DILocation(line: 1818, column: 8, scope: !3715)
!3972 = !DILocation(line: 1819, column: 5, scope: !3712)
!3973 = !DILocation(line: 0, scope: !3712)
!3974 = !DILocation(line: 1819, column: 5, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3712, file: !2423, line: 1819, column: 5)
!3976 = !DILocation(line: 1822, column: 14, scope: !3720)
!3977 = !DILocation(line: 1822, column: 8, scope: !3715)
!3978 = !DILocation(line: 1823, column: 5, scope: !3718)
!3979 = !DILocation(line: 0, scope: !3718)
!3980 = !DILocation(line: 1823, column: 5, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3718, file: !2423, line: 1823, column: 5)
!3982 = !DILocation(line: 1826, column: 20, scope: !3715)
!3983 = !DILocation(line: 1827, column: 4, scope: !3715)
!3984 = !DILocation(line: 0, scope: !3715)
!3985 = !DILocation(line: 1827, column: 21, scope: !3715)
!3986 = !DILocation(line: 1827, column: 18, scope: !3715)
!3987 = !DILocation(line: 1828, column: 5, scope: !3722)
!3988 = !DILocation(line: 0, scope: !3722)
!3989 = !DILocation(line: 1828, column: 5, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3722, file: !2423, line: 1828, column: 5)
!3991 = distinct !{!3991, !3983, !3992}
!3992 = !DILocation(line: 1829, column: 4, scope: !3715)
!3993 = !DILocation(line: 1831, column: 4, scope: !3725)
!3994 = !DILocation(line: 0, scope: !3725)
!3995 = !DILocation(line: 1831, column: 4, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3725, file: !2423, line: 1831, column: 4)
!3997 = !DILocation(line: 1835, column: 16, scope: !3616)
!3998 = !DILocation(line: 1835, column: 3, scope: !3616)
!3999 = !DILocation(line: 1836, column: 4, scope: !3727)
!4000 = !DILocation(line: 0, scope: !3727)
!4001 = !DILocation(line: 1836, column: 4, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3727, file: !2423, line: 1836, column: 4)
!4003 = !DILocation(line: 1837, column: 4, scope: !3728)
!4004 = distinct !{!4004, !3998, !4005}
!4005 = !DILocation(line: 1838, column: 3, scope: !3616)
!4006 = !DILocation(line: 1844, column: 1, scope: !3589)
!4007 = distinct !DISubprogram(name: "extract_conversion", scope: !2423, file: !2423, line: 642, type: !4008, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4010)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!305, !3664, !305}
!4010 = !{!4011, !4012}
!4011 = !DILocalVariable(name: "conv", arg: 1, scope: !4007, file: !2423, line: 642, type: !3664)
!4012 = !DILocalVariable(name: "sp", arg: 2, scope: !4007, file: !2423, line: 643, type: !305)
!4013 = !DILocation(line: 0, scope: !4007)
!4014 = !DILocation(line: 645, column: 10, scope: !4007)
!4015 = !DILocation(line: 653, column: 2, scope: !4007)
!4016 = !DILocation(line: 654, column: 6, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4007, file: !2423, line: 654, column: 6)
!4018 = !DILocation(line: 654, column: 10, scope: !4017)
!4019 = !DILocation(line: 654, column: 6, scope: !4007)
!4020 = !DILocation(line: 655, column: 24, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4017, file: !2423, line: 654, column: 18)
!4022 = !DILocation(line: 655, column: 19, scope: !4021)
!4023 = !DILocation(line: 656, column: 3, scope: !4021)
!4024 = !DILocation(line: 659, column: 7, scope: !4007)
!4025 = !DILocation(line: 660, column: 7, scope: !4007)
!4026 = !DILocation(line: 661, column: 7, scope: !4007)
!4027 = !DILocation(line: 662, column: 7, scope: !4007)
!4028 = !DILocation(line: 663, column: 7, scope: !4007)
!4029 = !DILocation(line: 665, column: 2, scope: !4007)
!4030 = !DILocation(line: 666, column: 1, scope: !4007)
!4031 = distinct !DISubprogram(name: "outs", scope: !2423, file: !2423, line: 1319, type: !4032, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4034)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{!109, !3324, !106, !305, !305}
!4034 = !{!4035, !4036, !4037, !4038, !4039, !4040}
!4035 = !DILocalVariable(name: "out", arg: 1, scope: !4031, file: !2423, line: 1319, type: !3324)
!4036 = !DILocalVariable(name: "ctx", arg: 2, scope: !4031, file: !2423, line: 1320, type: !106)
!4037 = !DILocalVariable(name: "sp", arg: 3, scope: !4031, file: !2423, line: 1321, type: !305)
!4038 = !DILocalVariable(name: "ep", arg: 4, scope: !4031, file: !2423, line: 1322, type: !305)
!4039 = !DILocalVariable(name: "count", scope: !4031, file: !2423, line: 1324, type: !107)
!4040 = !DILocalVariable(name: "rc", scope: !4041, file: !2423, line: 1327, type: !109)
!4041 = distinct !DILexicalBlock(scope: !4031, file: !2423, line: 1326, column: 45)
!4042 = !DILocation(line: 0, scope: !4031)
!4043 = !DILocation(line: 1326, column: 2, scope: !4031)
!4044 = !DILocation(line: 1324, column: 9, scope: !4031)
!4045 = !DILocation(line: 1326, column: 13, scope: !4031)
!4046 = !DILocation(line: 1326, column: 19, scope: !4031)
!4047 = !DILocation(line: 1327, column: 21, scope: !4041)
!4048 = !DILocation(line: 1326, column: 36, scope: !4031)
!4049 = !DILocation(line: 1326, column: 39, scope: !4031)
!4050 = !DILocation(line: 1327, column: 24, scope: !4041)
!4051 = !DILocation(line: 1327, column: 16, scope: !4041)
!4052 = !DILocation(line: 1327, column: 12, scope: !4041)
!4053 = !DILocation(line: 0, scope: !4041)
!4054 = !DILocation(line: 1329, column: 10, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4041, file: !2423, line: 1329, column: 7)
!4056 = !DILocation(line: 1329, column: 7, scope: !4041)
!4057 = distinct !{!4057, !4043, !4058}
!4058 = !DILocation(line: 1333, column: 2, scope: !4031)
!4059 = !DILocation(line: 1336, column: 1, scope: !4031)
!4060 = distinct !DISubprogram(name: "encode_uint", scope: !2423, file: !2423, line: 788, type: !4061, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4063)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!1134, !2445, !3664, !1134, !305}
!4063 = !{!4064, !4065, !4066, !4067, !4068, !4069, !4071, !4072}
!4064 = !DILocalVariable(name: "value", arg: 1, scope: !4060, file: !2423, line: 788, type: !2445)
!4065 = !DILocalVariable(name: "conv", arg: 2, scope: !4060, file: !2423, line: 789, type: !3664)
!4066 = !DILocalVariable(name: "bps", arg: 3, scope: !4060, file: !2423, line: 790, type: !1134)
!4067 = !DILocalVariable(name: "bpe", arg: 4, scope: !4060, file: !2423, line: 791, type: !305)
!4068 = !DILocalVariable(name: "upcase", scope: !4060, file: !2423, line: 793, type: !315)
!4069 = !DILocalVariable(name: "radix", scope: !4060, file: !2423, line: 794, type: !4070)
!4070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4071 = !DILocalVariable(name: "bp", scope: !4060, file: !2423, line: 795, type: !1134)
!4072 = !DILocalVariable(name: "lsv", scope: !4073, file: !2423, line: 798, type: !32)
!4073 = distinct !DILexicalBlock(scope: !4060, file: !2423, line: 797, column: 5)
!4074 = !DILocation(line: 0, scope: !4060)
!4075 = !DILocation(line: 793, column: 35, scope: !4060)
!4076 = !DILocation(line: 793, column: 24, scope: !4060)
!4077 = !DILocation(line: 793, column: 16, scope: !4060)
!4078 = !DILocation(line: 794, column: 29, scope: !4060)
!4079 = !DILocation(line: 795, column: 24, scope: !4060)
!4080 = !DILocation(line: 795, column: 17, scope: !4060)
!4081 = !DILocation(line: 797, column: 2, scope: !4060)
!4082 = !DILocation(line: 802, column: 9, scope: !4073)
!4083 = !DILocation(line: 798, column: 22, scope: !4073)
!4084 = !DILocation(line: 0, scope: !4073)
!4085 = !DILocation(line: 800, column: 16, scope: !4073)
!4086 = !DILocation(line: 800, column: 11, scope: !4073)
!4087 = !DILocation(line: 800, column: 4, scope: !4073)
!4088 = !DILocation(line: 800, column: 9, scope: !4073)
!4089 = !DILocation(line: 803, column: 18, scope: !4060)
!4090 = !DILocation(line: 803, column: 24, scope: !4060)
!4091 = !DILocation(line: 803, column: 2, scope: !4073)
!4092 = distinct !{!4092, !4081, !4093}
!4093 = !DILocation(line: 803, column: 37, scope: !4060)
!4094 = !DILocation(line: 808, column: 12, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4060, file: !2423, line: 808, column: 6)
!4096 = !DILocation(line: 808, column: 6, scope: !4060)
!4097 = !DILocation(line: 809, column: 7, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4095, file: !2423, line: 808, column: 23)
!4099 = !DILocation(line: 813, column: 3, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !2423, line: 811, column: 27)
!4101 = distinct !DILexicalBlock(scope: !4102, file: !2423, line: 811, column: 14)
!4102 = distinct !DILexicalBlock(scope: !4098, file: !2423, line: 809, column: 7)
!4103 = !DILocation(line: 0, scope: !4102)
!4104 = !DILocation(line: 818, column: 2, scope: !4060)
!4105 = distinct !DISubprogram(name: "store_count", scope: !2423, file: !2423, line: 1280, type: !4106, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4110)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{null, !4108, !106, !109}
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 32)
!4109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3631)
!4110 = !{!4111, !4112, !4113}
!4111 = !DILocalVariable(name: "conv", arg: 1, scope: !4105, file: !2423, line: 1280, type: !4108)
!4112 = !DILocalVariable(name: "dp", arg: 2, scope: !4105, file: !2423, line: 1281, type: !106)
!4113 = !DILocalVariable(name: "count", arg: 3, scope: !4105, file: !2423, line: 1282, type: !109)
!4114 = !DILocation(line: 0, scope: !4105)
!4115 = !DILocation(line: 1284, column: 38, scope: !4105)
!4116 = !DILocation(line: 1284, column: 2, scope: !4105)
!4117 = !DILocation(line: 1286, column: 4, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4105, file: !2423, line: 1284, column: 50)
!4119 = !DILocation(line: 1286, column: 14, scope: !4118)
!4120 = !DILocation(line: 1287, column: 3, scope: !4118)
!4121 = !DILocation(line: 1289, column: 24, scope: !4118)
!4122 = !DILocation(line: 1289, column: 22, scope: !4118)
!4123 = !DILocation(line: 1290, column: 3, scope: !4118)
!4124 = !DILocation(line: 1292, column: 18, scope: !4118)
!4125 = !DILocation(line: 1292, column: 4, scope: !4118)
!4126 = !DILocation(line: 1292, column: 16, scope: !4118)
!4127 = !DILocation(line: 1293, column: 3, scope: !4118)
!4128 = !DILocation(line: 1295, column: 4, scope: !4118)
!4129 = !DILocation(line: 1295, column: 15, scope: !4118)
!4130 = !DILocation(line: 1296, column: 3, scope: !4118)
!4131 = !DILocation(line: 1298, column: 22, scope: !4118)
!4132 = !DILocation(line: 1298, column: 4, scope: !4118)
!4133 = !DILocation(line: 1298, column: 20, scope: !4118)
!4134 = !DILocation(line: 1299, column: 3, scope: !4118)
!4135 = !DILocation(line: 1301, column: 21, scope: !4118)
!4136 = !DILocation(line: 1301, column: 4, scope: !4118)
!4137 = !DILocation(line: 1301, column: 19, scope: !4118)
!4138 = !DILocation(line: 1302, column: 3, scope: !4118)
!4139 = !DILocation(line: 1304, column: 4, scope: !4118)
!4140 = !DILocation(line: 1304, column: 17, scope: !4118)
!4141 = !DILocation(line: 1305, column: 3, scope: !4118)
!4142 = !DILocation(line: 1307, column: 4, scope: !4118)
!4143 = !DILocation(line: 1307, column: 20, scope: !4118)
!4144 = !DILocation(line: 1308, column: 3, scope: !4118)
!4145 = !DILocation(line: 1316, column: 1, scope: !4105)
!4146 = distinct !DISubprogram(name: "isupper", scope: !4147, file: !4147, line: 16, type: !269, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4148)
!4147 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4148 = !{!4149}
!4149 = !DILocalVariable(name: "a", arg: 1, scope: !4146, file: !4147, line: 16, type: !109)
!4150 = !DILocation(line: 0, scope: !4146)
!4151 = !DILocation(line: 18, column: 29, scope: !4146)
!4152 = !DILocation(line: 18, column: 45, scope: !4146)
!4153 = !DILocation(line: 18, column: 2, scope: !4146)
!4154 = distinct !DISubprogram(name: "conversion_radix", scope: !2423, file: !2423, line: 761, type: !4155, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4157)
!4155 = !DISubroutineType(types: !4156)
!4156 = !{!107, !150}
!4157 = !{!4158}
!4158 = !DILocalVariable(name: "specifier", arg: 1, scope: !4154, file: !2423, line: 761, type: !150)
!4159 = !DILocation(line: 0, scope: !4154)
!4160 = !DILocation(line: 763, column: 2, scope: !4154)
!4161 = !DILocation(line: 770, column: 3, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4154, file: !2423, line: 763, column: 21)
!4163 = !DILocation(line: 774, column: 3, scope: !4162)
!4164 = !DILocation(line: 0, scope: !4162)
!4165 = !DILocation(line: 776, column: 1, scope: !4154)
!4166 = distinct !DISubprogram(name: "extract_flags", scope: !2423, file: !2423, line: 339, type: !4008, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4167)
!4167 = !{!4168, !4169, !4170}
!4168 = !DILocalVariable(name: "conv", arg: 1, scope: !4166, file: !2423, line: 339, type: !3664)
!4169 = !DILocalVariable(name: "sp", arg: 2, scope: !4166, file: !2423, line: 340, type: !305)
!4170 = !DILocalVariable(name: "loop", scope: !4166, file: !2423, line: 342, type: !315)
!4171 = !DILocation(line: 0, scope: !4166)
!4172 = !DILocation(line: 344, column: 2, scope: !4166)
!4173 = !DILocation(line: 345, column: 11, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4166, file: !2423, line: 344, column: 5)
!4175 = !DILocation(line: 345, column: 3, scope: !4174)
!4176 = !DILocation(line: 351, column: 4, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4174, file: !2423, line: 345, column: 16)
!4178 = !DILocation(line: 354, column: 4, scope: !4177)
!4179 = !DILocation(line: 357, column: 4, scope: !4177)
!4180 = !DILocation(line: 360, column: 4, scope: !4177)
!4181 = !DILocation(line: 0, scope: !4177)
!4182 = !DILocation(line: 370, column: 12, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4166, file: !2423, line: 370, column: 6)
!4184 = !DILocation(line: 370, column: 22, scope: !4183)
!4185 = !DILocation(line: 371, column: 19, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4183, file: !2423, line: 370, column: 42)
!4187 = !DILocation(line: 372, column: 2, scope: !4186)
!4188 = !DILocation(line: 376, column: 2, scope: !4166)
!4189 = distinct !DISubprogram(name: "extract_width", scope: !2423, file: !2423, line: 388, type: !4008, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4190)
!4190 = !{!4191, !4192, !4193, !4194}
!4191 = !DILocalVariable(name: "conv", arg: 1, scope: !4189, file: !2423, line: 388, type: !3664)
!4192 = !DILocalVariable(name: "sp", arg: 2, scope: !4189, file: !2423, line: 389, type: !305)
!4193 = !DILocalVariable(name: "wp", scope: !4189, file: !2423, line: 398, type: !305)
!4194 = !DILocalVariable(name: "width", scope: !4189, file: !2423, line: 399, type: !107)
!4195 = !DILocation(line: 0, scope: !4189)
!4196 = !DILocation(line: 391, column: 8, scope: !4189)
!4197 = !DILocation(line: 391, column: 22, scope: !4189)
!4198 = !DILocation(line: 393, column: 6, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4189, file: !2423, line: 393, column: 6)
!4200 = !DILocation(line: 393, column: 10, scope: !4199)
!4201 = !DILocation(line: 393, column: 6, scope: !4189)
!4202 = !DILocation(line: 394, column: 20, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4199, file: !2423, line: 393, column: 18)
!4204 = !DILocation(line: 395, column: 10, scope: !4203)
!4205 = !DILocation(line: 395, column: 3, scope: !4203)
!4206 = !DILocation(line: 399, column: 17, scope: !4189)
!4207 = !DILocation(line: 401, column: 6, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4189, file: !2423, line: 401, column: 6)
!4209 = !DILocation(line: 401, column: 9, scope: !4208)
!4210 = !DILocation(line: 401, column: 6, scope: !4189)
!4211 = !DILocation(line: 402, column: 23, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4208, file: !2423, line: 401, column: 16)
!4213 = !DILocation(line: 403, column: 9, scope: !4212)
!4214 = !DILocation(line: 403, column: 21, scope: !4212)
!4215 = !DILocation(line: 405, column: 11, scope: !4212)
!4216 = !DILocation(line: 404, column: 21, scope: !4212)
!4217 = !DILocation(line: 406, column: 2, scope: !4212)
!4218 = !DILocation(line: 409, column: 1, scope: !4189)
!4219 = distinct !DISubprogram(name: "extract_prec", scope: !2423, file: !2423, line: 420, type: !4008, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4220)
!4220 = !{!4221, !4222, !4223}
!4221 = !DILocalVariable(name: "conv", arg: 1, scope: !4219, file: !2423, line: 420, type: !3664)
!4222 = !DILocalVariable(name: "sp", arg: 2, scope: !4219, file: !2423, line: 421, type: !305)
!4223 = !DILocalVariable(name: "prec", scope: !4219, file: !2423, line: 435, type: !107)
!4224 = !DILocation(line: 0, scope: !4219)
!4225 = !DILocation(line: 423, column: 24, scope: !4219)
!4226 = !DILocation(line: 423, column: 28, scope: !4219)
!4227 = !DILocation(line: 423, column: 8, scope: !4219)
!4228 = !DILocation(line: 423, column: 21, scope: !4219)
!4229 = !DILocation(line: 425, column: 6, scope: !4219)
!4230 = !DILocation(line: 428, column: 2, scope: !4219)
!4231 = !DILocation(line: 430, column: 6, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4219, file: !2423, line: 430, column: 6)
!4233 = !DILocation(line: 430, column: 10, scope: !4232)
!4234 = !DILocation(line: 430, column: 6, scope: !4219)
!4235 = !DILocation(line: 431, column: 19, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4232, file: !2423, line: 430, column: 18)
!4237 = !DILocation(line: 432, column: 10, scope: !4236)
!4238 = !DILocation(line: 432, column: 3, scope: !4236)
!4239 = !DILocation(line: 435, column: 16, scope: !4219)
!4240 = !DILocation(line: 437, column: 8, scope: !4219)
!4241 = !DILocation(line: 437, column: 19, scope: !4219)
!4242 = !DILocation(line: 439, column: 10, scope: !4219)
!4243 = !DILocation(line: 438, column: 20, scope: !4219)
!4244 = !DILocation(line: 441, column: 9, scope: !4219)
!4245 = !DILocation(line: 442, column: 1, scope: !4219)
!4246 = distinct !DISubprogram(name: "extract_length", scope: !2423, file: !2423, line: 453, type: !4008, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4247)
!4247 = !{!4248, !4249}
!4248 = !DILocalVariable(name: "conv", arg: 1, scope: !4246, file: !2423, line: 453, type: !3664)
!4249 = !DILocalVariable(name: "sp", arg: 2, scope: !4246, file: !2423, line: 454, type: !305)
!4250 = !DILocation(line: 0, scope: !4246)
!4251 = !DILocation(line: 456, column: 10, scope: !4246)
!4252 = !DILocation(line: 456, column: 2, scope: !4246)
!4253 = !DILocation(line: 458, column: 8, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !2423, line: 458, column: 7)
!4255 = distinct !DILexicalBlock(scope: !4246, file: !2423, line: 456, column: 15)
!4256 = !DILocation(line: 458, column: 7, scope: !4254)
!4257 = !DILocation(line: 458, column: 13, scope: !4254)
!4258 = !DILocation(line: 0, scope: !4254)
!4259 = !DILocation(line: 458, column: 7, scope: !4255)
!4260 = !DILocation(line: 459, column: 21, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4254, file: !2423, line: 458, column: 21)
!4262 = !DILocation(line: 460, column: 4, scope: !4261)
!4263 = !DILocation(line: 461, column: 3, scope: !4261)
!4264 = !DILocation(line: 462, column: 21, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4254, file: !2423, line: 461, column: 10)
!4266 = !DILocation(line: 466, column: 8, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4255, file: !2423, line: 466, column: 7)
!4268 = !DILocation(line: 466, column: 7, scope: !4267)
!4269 = !DILocation(line: 466, column: 13, scope: !4267)
!4270 = !DILocation(line: 0, scope: !4267)
!4271 = !DILocation(line: 466, column: 7, scope: !4255)
!4272 = !DILocation(line: 467, column: 21, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4267, file: !2423, line: 466, column: 21)
!4274 = !DILocation(line: 468, column: 4, scope: !4273)
!4275 = !DILocation(line: 469, column: 3, scope: !4273)
!4276 = !DILocation(line: 470, column: 21, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4267, file: !2423, line: 469, column: 10)
!4278 = !DILocation(line: 474, column: 9, scope: !4255)
!4279 = !DILocation(line: 474, column: 20, scope: !4255)
!4280 = !DILocation(line: 475, column: 3, scope: !4255)
!4281 = !DILocation(line: 476, column: 3, scope: !4255)
!4282 = !DILocation(line: 478, column: 9, scope: !4255)
!4283 = !DILocation(line: 478, column: 20, scope: !4255)
!4284 = !DILocation(line: 479, column: 3, scope: !4255)
!4285 = !DILocation(line: 480, column: 3, scope: !4255)
!4286 = !DILocation(line: 482, column: 9, scope: !4255)
!4287 = !DILocation(line: 482, column: 20, scope: !4255)
!4288 = !DILocation(line: 483, column: 3, scope: !4255)
!4289 = !DILocation(line: 484, column: 3, scope: !4255)
!4290 = !DILocation(line: 486, column: 9, scope: !4255)
!4291 = !DILocation(line: 486, column: 20, scope: !4255)
!4292 = !DILocation(line: 487, column: 3, scope: !4255)
!4293 = !DILocation(line: 492, column: 21, scope: !4255)
!4294 = !DILocation(line: 493, column: 3, scope: !4255)
!4295 = !DILocation(line: 495, column: 9, scope: !4255)
!4296 = !DILocation(line: 495, column: 20, scope: !4255)
!4297 = !DILocation(line: 496, column: 3, scope: !4255)
!4298 = !DILocation(line: 498, column: 2, scope: !4246)
!4299 = distinct !DISubprogram(name: "extract_specifier", scope: !2423, file: !2423, line: 513, type: !4008, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4300)
!4300 = !{!4301, !4302, !4303, !4304}
!4301 = !DILocalVariable(name: "conv", arg: 1, scope: !4299, file: !2423, line: 513, type: !3664)
!4302 = !DILocalVariable(name: "sp", arg: 2, scope: !4299, file: !2423, line: 514, type: !305)
!4303 = !DILocalVariable(name: "unsupported", scope: !4299, file: !2423, line: 516, type: !315)
!4304 = !DILabel(scope: !4305, name: "int_conv", file: !2423, line: 526)
!4305 = distinct !DILexicalBlock(scope: !4299, file: !2423, line: 520, column: 27)
!4306 = !DILocation(line: 0, scope: !4299)
!4307 = !DILocation(line: 518, column: 20, scope: !4299)
!4308 = !DILocation(line: 518, column: 8, scope: !4299)
!4309 = !DILocation(line: 518, column: 18, scope: !4299)
!4310 = !DILocation(line: 520, column: 2, scope: !4299)
!4311 = !DILocation(line: 525, column: 3, scope: !4305)
!4312 = !DILocation(line: 0, scope: !4305)
!4313 = !DILocation(line: 526, column: 1, scope: !4305)
!4314 = !DILocation(line: 528, column: 24, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4305, file: !2423, line: 528, column: 7)
!4316 = !DILocation(line: 528, column: 7, scope: !4305)
!4317 = !DILocation(line: 535, column: 23, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4305, file: !2423, line: 535, column: 7)
!4319 = !DILocation(line: 535, column: 7, scope: !4305)
!4320 = !DILocation(line: 536, column: 36, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4318, file: !2423, line: 535, column: 31)
!4322 = !DILocation(line: 537, column: 3, scope: !4321)
!4323 = !DILocation(line: 570, column: 9, scope: !4305)
!4324 = !DILocation(line: 570, column: 23, scope: !4305)
!4325 = !DILocation(line: 575, column: 4, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !2423, line: 573, column: 48)
!4327 = distinct !DILexicalBlock(scope: !4305, file: !2423, line: 573, column: 7)
!4328 = !DILocation(line: 603, column: 9, scope: !4305)
!4329 = !DILocation(line: 603, column: 23, scope: !4305)
!4330 = !DILocation(line: 605, column: 24, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4305, file: !2423, line: 605, column: 7)
!4332 = !DILocation(line: 605, column: 7, scope: !4305)
!4333 = !DILocation(line: 612, column: 9, scope: !4305)
!4334 = !DILocation(line: 612, column: 23, scope: !4305)
!4335 = !DILocation(line: 619, column: 24, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4305, file: !2423, line: 619, column: 7)
!4337 = !DILocation(line: 619, column: 7, scope: !4305)
!4338 = !DILocation(line: 625, column: 9, scope: !4305)
!4339 = !DILocation(line: 625, column: 17, scope: !4305)
!4340 = !DILocation(line: 626, column: 3, scope: !4305)
!4341 = !DILocation(line: 629, column: 20, scope: !4299)
!4342 = !DILocation(line: 629, column: 8, scope: !4299)
!4343 = !DILocation(line: 518, column: 23, scope: !4299)
!4344 = !DILocation(line: 631, column: 2, scope: !4299)
!4345 = distinct !DISubprogram(name: "extract_decimal", scope: !2423, file: !2423, line: 318, type: !4346, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4349)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!107, !4348}
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 32)
!4349 = !{!4350, !4351, !4352}
!4350 = !DILocalVariable(name: "str", arg: 1, scope: !4345, file: !2423, line: 318, type: !4348)
!4351 = !DILocalVariable(name: "sp", scope: !4345, file: !2423, line: 320, type: !305)
!4352 = !DILocalVariable(name: "val", scope: !4345, file: !2423, line: 321, type: !107)
!4353 = !DILocation(line: 0, scope: !4345)
!4354 = !DILocation(line: 320, column: 19, scope: !4345)
!4355 = !DILocation(line: 323, column: 37, scope: !4345)
!4356 = !DILocation(line: 323, column: 17, scope: !4345)
!4357 = !DILocation(line: 323, column: 9, scope: !4345)
!4358 = !DILocation(line: 323, column: 2, scope: !4345)
!4359 = !DILocation(line: 324, column: 13, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4345, file: !2423, line: 323, column: 43)
!4361 = !DILocation(line: 324, column: 24, scope: !4360)
!4362 = !DILocation(line: 324, column: 19, scope: !4360)
!4363 = !DILocation(line: 324, column: 27, scope: !4360)
!4364 = distinct !{!4364, !4358, !4365}
!4365 = !DILocation(line: 325, column: 2, scope: !4345)
!4366 = !DILocation(line: 326, column: 7, scope: !4345)
!4367 = !DILocation(line: 327, column: 2, scope: !4345)
!4368 = distinct !DISubprogram(name: "isdigit", scope: !4147, file: !4147, line: 43, type: !269, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !4369)
!4369 = !{!4370}
!4370 = !DILocalVariable(name: "a", arg: 1, scope: !4368, file: !4147, line: 43, type: !109)
!4371 = !DILocation(line: 0, scope: !4368)
!4372 = !DILocation(line: 45, column: 29, scope: !4368)
!4373 = !DILocation(line: 45, column: 45, scope: !4368)
!4374 = !DILocation(line: 45, column: 2, scope: !4368)
!4375 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4376, file: !4376, line: 9, type: !2980, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2457, retainedNodes: !251)
!4376 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!4377 = !DILocation(line: 11, column: 1, scope: !4375)
!4378 = !{i64 2147561836, i64 2147561879, i64 2147561919}
!4379 = !DILocation(line: 12, column: 1, scope: !4375)
!4380 = !{i64 2147566063, i64 2147566106, i64 2147566146}
!4381 = !DILocation(line: 13, column: 1, scope: !4375)
!4382 = !{i64 2147566272, i64 2147566315, i64 2147566355}
!4383 = !DILocation(line: 14, column: 1, scope: !4375)
!4384 = !{i64 2147566441, i64 2147566484, i64 2147566524}
!4385 = !DILocation(line: 15, column: 1, scope: !4375)
!4386 = !{i64 2147566604, i64 2147566647, i64 2147566687}
!4387 = !DILocation(line: 16, column: 1, scope: !4375)
!4388 = !{i64 2147566788, i64 2147566831, i64 2147566871}
!4389 = !DILocation(line: 17, column: 1, scope: !4375)
!4390 = !{i64 2147566967, i64 2147567010, i64 2147567050}
!4391 = !DILocation(line: 18, column: 1, scope: !4375)
!4392 = !{i64 2147567209, i64 2147567252, i64 2147567292}
!4393 = !DILocation(line: 19, column: 1, scope: !4375)
!4394 = !{i64 2147567444, i64 2147567487, i64 2147567527}
!4395 = !DILocation(line: 20, column: 1, scope: !4375)
!4396 = !{i64 2147567630, i64 2147567673, i64 2147567713}
!4397 = !DILocation(line: 21, column: 1, scope: !4375)
!4398 = !{i64 2147567846, i64 2147567889, i64 2147567929}
!4399 = !DILocation(line: 22, column: 1, scope: !4375)
!4400 = !{i64 2147568049, i64 2147568092, i64 2147568132}
!4401 = !DILocation(line: 23, column: 1, scope: !4375)
!4402 = !{i64 2147568252, i64 2147568295, i64 2147568335}
!4403 = !DILocation(line: 24, column: 1, scope: !4375)
!4404 = !{i64 2147568427, i64 2147568470, i64 2147568510}
!4405 = !DILocation(line: 25, column: 1, scope: !4375)
!4406 = !{i64 2147568635, i64 2147568678, i64 2147568718}
!4407 = !DILocation(line: 26, column: 1, scope: !4375)
!4408 = !{i64 2147568839, i64 2147568882, i64 2147568922}
!4409 = !DILocation(line: 27, column: 1, scope: !4375)
!4410 = !{i64 2147569032, i64 2147569075, i64 2147569115}
!4411 = !DILocation(line: 28, column: 1, scope: !4375)
!4412 = !{i64 2147569234, i64 2147569277, i64 2147569317}
!4413 = !DILocation(line: 29, column: 1, scope: !4375)
!4414 = !{i64 2147569461, i64 2147569504, i64 2147569544}
!4415 = !DILocation(line: 30, column: 1, scope: !4375)
!4416 = !{i64 2147569663, i64 2147569706, i64 2147569746}
!4417 = !DILocation(line: 31, column: 1, scope: !4375)
!4418 = !{i64 2147569878, i64 2147569921, i64 2147569961}
!4419 = !DILocation(line: 32, column: 1, scope: !4375)
!4420 = !{i64 2147570050, i64 2147570093, i64 2147570133}
!4421 = !DILocation(line: 33, column: 1, scope: !4375)
!4422 = !{i64 2147570252, i64 2147570295, i64 2147570335}
!4423 = !DILocation(line: 34, column: 1, scope: !4375)
!4424 = !{i64 2147570478, i64 2147570521, i64 2147570561}
!4425 = !DILocation(line: 35, column: 1, scope: !4375)
!4426 = !{i64 2147570677, i64 2147570720, i64 2147570760}
!4427 = !DILocation(line: 36, column: 1, scope: !4375)
!4428 = !{i64 2147570852, i64 2147570895, i64 2147570935}
!4429 = !DILocation(line: 37, column: 1, scope: !4375)
!4430 = !{i64 2147571105, i64 2147571148, i64 2147571188}
!4431 = !DILocation(line: 38, column: 1, scope: !4375)
!4432 = !{i64 2147571346, i64 2147571389, i64 2147571429}
!4433 = !DILocation(line: 39, column: 1, scope: !4375)
!4434 = !{i64 2147571581, i64 2147571624, i64 2147571664}
!4435 = !DILocation(line: 40, column: 1, scope: !4375)
!4436 = !{i64 2147571813, i64 2147571856, i64 2147571896}
!4437 = !DILocation(line: 41, column: 1, scope: !4375)
!4438 = !{i64 2147572039, i64 2147572082, i64 2147572122}
!4439 = !DILocation(line: 42, column: 1, scope: !4375)
!4440 = !{i64 2147572265, i64 2147572308, i64 2147572348}
!4441 = !DILocation(line: 43, column: 1, scope: !4375)
!4442 = !{i64 2147572491, i64 2147572534, i64 2147572574}
!4443 = !DILocation(line: 44, column: 1, scope: !4375)
!4444 = !{i64 2147572726, i64 2147572769, i64 2147572809}
!4445 = !DILocation(line: 45, column: 1, scope: !4375)
!4446 = !{i64 2147572970, i64 2147573013, i64 2147573053}
!4447 = !DILocation(line: 46, column: 1, scope: !4375)
!4448 = !{i64 2147573217, i64 2147573260, i64 2147573300}
!4449 = !DILocation(line: 47, column: 1, scope: !4375)
!4450 = !{i64 2147573449, i64 2147573492, i64 2147573532}
!4451 = !DILocation(line: 48, column: 1, scope: !4375)
!4452 = !{i64 2147573693, i64 2147573736, i64 2147573776}
!4453 = !DILocation(line: 49, column: 1, scope: !4375)
!4454 = !{i64 2147573931, i64 2147573974, i64 2147574014}
!4455 = !DILocation(line: 50, column: 1, scope: !4375)
!4456 = !{i64 2147574205, i64 2147574248, i64 2147574288}
!4457 = !DILocation(line: 51, column: 1, scope: !4375)
!4458 = !{i64 2147574443, i64 2147574486, i64 2147574526}
!4459 = !DILocation(line: 52, column: 1, scope: !4375)
!4460 = !{i64 2147574696, i64 2147574739, i64 2147574779}
!4461 = !DILocation(line: 53, column: 1, scope: !4375)
!4462 = !{i64 2147579001, i64 2147579044, i64 2147579084}
!4463 = !DILocation(line: 54, column: 1, scope: !4375)
!4464 = !{i64 2147579236, i64 2147579279, i64 2147579319}
!4465 = !DILocation(line: 55, column: 1, scope: !4375)
!4466 = !{i64 2147579486, i64 2147579529, i64 2147579569}
!4467 = !DILocation(line: 56, column: 1, scope: !4375)
!4468 = !{i64 2147579733, i64 2147579776, i64 2147579816}
!4469 = !DILocation(line: 57, column: 1, scope: !4375)
!4470 = !{i64 2147579968, i64 2147580011, i64 2147580051}
!4471 = !DILocation(line: 58, column: 1, scope: !4375)
!4472 = !{i64 2147580203, i64 2147580246, i64 2147580286}
!4473 = !DILocation(line: 59, column: 1, scope: !4375)
!4474 = !{i64 2147580438, i64 2147580481, i64 2147580521}
!4475 = !DILocation(line: 60, column: 1, scope: !4375)
!4476 = !{i64 2147580673, i64 2147580716, i64 2147580756}
!4477 = !DILocation(line: 61, column: 1, scope: !4375)
!4478 = !{i64 2147580917, i64 2147580960, i64 2147581000}
!4479 = !DILocation(line: 62, column: 1, scope: !4375)
!4480 = !{i64 2147581155, i64 2147581198, i64 2147581238}
!4481 = !DILocation(line: 63, column: 1, scope: !4375)
!4482 = !{i64 2147581396, i64 2147581439, i64 2147581479}
!4483 = !DILocation(line: 64, column: 1, scope: !4375)
!4484 = !{i64 2147581676, i64 2147581719, i64 2147581759}
!4485 = !DILocation(line: 65, column: 1, scope: !4375)
!4486 = !{i64 2147581935, i64 2147581978, i64 2147582018}
!4487 = !DILocation(line: 66, column: 1, scope: !4375)
!4488 = !{i64 2147582173, i64 2147582216, i64 2147582256}
!4489 = !DILocation(line: 67, column: 1, scope: !4375)
!4490 = !{i64 2147582402, i64 2147582445, i64 2147582485}
!4491 = !DILocation(line: 68, column: 1, scope: !4375)
!4492 = !{i64 2147582610, i64 2147582653, i64 2147582693}
!4493 = !DILocation(line: 69, column: 1, scope: !4375)
!4494 = !{i64 2147582821, i64 2147582864, i64 2147582904}
!4495 = !DILocation(line: 70, column: 1, scope: !4375)
!4496 = !{i64 2147583056, i64 2147583099, i64 2147583139}
!4497 = !DILocation(line: 71, column: 1, scope: !4375)
!4498 = !{i64 2147583285, i64 2147583328, i64 2147583368}
!4499 = !DILocation(line: 72, column: 1, scope: !4375)
!4500 = !{i64 2147583523, i64 2147583566, i64 2147583606}
!4501 = !DILocation(line: 73, column: 1, scope: !4375)
!4502 = !{i64 2147583755, i64 2147583798, i64 2147583838}
!4503 = !DILocation(line: 74, column: 1, scope: !4375)
!4504 = !{i64 2147583981, i64 2147584024, i64 2147584064}
!4505 = !DILocation(line: 75, column: 1, scope: !4375)
!4506 = !{i64 2147584198, i64 2147584241, i64 2147584281}
!4507 = !DILocation(line: 76, column: 1, scope: !4375)
!4508 = !{i64 2147584430, i64 2147584473, i64 2147584513}
!4509 = !DILocation(line: 77, column: 1, scope: !4375)
!4510 = !{i64 2147584656, i64 2147584699, i64 2147584739}
!4511 = !DILocation(line: 78, column: 1, scope: !4375)
!4512 = !{i64 2147584870, i64 2147584913, i64 2147584953}
!4513 = !DILocation(line: 79, column: 1, scope: !4375)
!4514 = !{i64 2147585090, i64 2147585133, i64 2147585173}
!4515 = !DILocation(line: 80, column: 1, scope: !4375)
!4516 = !{i64 2147585322, i64 2147585365, i64 2147585405}
!4517 = !DILocation(line: 81, column: 1, scope: !4375)
!4518 = !{i64 2147585530, i64 2147585573, i64 2147585613}
!4519 = !DILocation(line: 82, column: 1, scope: !4375)
!4520 = !{i64 2147585735, i64 2147585778, i64 2147585818}
!4521 = !DILocation(line: 83, column: 1, scope: !4375)
!4522 = !{i64 2147585952, i64 2147585995, i64 2147586035}
!4523 = !DILocation(line: 84, column: 1, scope: !4375)
!4524 = !{i64 2147586166, i64 2147586209, i64 2147586249}
!4525 = !DILocation(line: 85, column: 1, scope: !4375)
!4526 = !{i64 2147586392, i64 2147586435, i64 2147586475}
!4527 = !DILocation(line: 86, column: 1, scope: !4375)
!4528 = !{i64 2147586612, i64 2147586655, i64 2147586695}
!4529 = !DILocation(line: 87, column: 1, scope: !4375)
!4530 = !{i64 2147586817, i64 2147586860, i64 2147586900}
!4531 = !DILocation(line: 88, column: 1, scope: !4375)
!4532 = !{i64 2147591110, i64 2147591153, i64 2147591193}
!4533 = !DILocation(line: 89, column: 1, scope: !4375)
!4534 = !{i64 2147591345, i64 2147591388, i64 2147591428}
!4535 = !DILocation(line: 90, column: 1, scope: !4375)
!4536 = !{i64 2147591595, i64 2147591638, i64 2147591678}
!4537 = !DILocation(line: 91, column: 1, scope: !4375)
!4538 = !{i64 2147591845, i64 2147591888, i64 2147591928}
!4539 = !DILocation(line: 92, column: 1, scope: !4375)
!4540 = !{i64 2147592083, i64 2147592126, i64 2147592166}
!4541 = !DILocation(line: 93, column: 1, scope: !4375)
!4542 = !{i64 2147592294, i64 2147592337, i64 2147592377}
!4543 = !DILocation(line: 94, column: 1, scope: !4375)
!4544 = !{i64 2147592511, i64 2147592554, i64 2147592594}
!4545 = !DILocation(line: 95, column: 1, scope: !4375)
!4546 = !{i64 2147592707, i64 2147592750, i64 2147592790}
!4547 = !DILocation(line: 96, column: 1, scope: !4375)
!4548 = !{i64 2147592909, i64 2147592952, i64 2147592992}
!4549 = !DILocation(line: 97, column: 1, scope: !4375)
!4550 = !{i64 2147593102, i64 2147593145, i64 2147593185}
!4551 = !DILocation(line: 98, column: 1, scope: !4375)
!4552 = !{i64 2147593310, i64 2147593353, i64 2147593393}
!4553 = !DILocation(line: 99, column: 1, scope: !4375)
!4554 = !{i64 2147593506, i64 2147593549, i64 2147593589}
!4555 = !DILocation(line: 100, column: 1, scope: !4375)
!4556 = !{i64 2147593738, i64 2147593781, i64 2147593821}
!4557 = !DILocation(line: 101, column: 1, scope: !4375)
!4558 = !{i64 2147593949, i64 2147593992, i64 2147594032}
!4559 = !DILocation(line: 102, column: 1, scope: !4375)
!4560 = !{i64 2147594148, i64 2147594191, i64 2147594231}
!4561 = !DILocation(line: 103, column: 1, scope: !4375)
!4562 = !{i64 2147594323, i64 2147594366, i64 2147594406}
!4563 = !DILocation(line: 104, column: 1, scope: !4375)
!4564 = !{i64 2147594507, i64 2147594550, i64 2147594590}
!4565 = !DILocation(line: 105, column: 1, scope: !4375)
!4566 = !{i64 2147594709, i64 2147594752, i64 2147594792}
!4567 = !DILocation(line: 106, column: 1, scope: !4375)
!4568 = !{i64 2147594908, i64 2147594951, i64 2147594991}
!4569 = !DILocation(line: 107, column: 1, scope: !4375)
!4570 = !{i64 2147595074, i64 2147595117, i64 2147595157}
!4571 = !DILocation(line: 108, column: 1, scope: !4375)
!4572 = !{i64 2147595258, i64 2147595301, i64 2147595341}
!4573 = !DILocation(line: 109, column: 1, scope: !4375)
!4574 = !{i64 2147595448, i64 2147595491, i64 2147595531}
!4575 = !DILocation(line: 110, column: 1, scope: !4375)
!4576 = !{i64 2147595632, i64 2147595675, i64 2147595715}
!4577 = !DILocation(line: 111, column: 1, scope: !4375)
!4578 = !{i64 2147595846, i64 2147595889, i64 2147595929}
!4579 = !DILocation(line: 112, column: 1, scope: !4375)
!4580 = !{i64 2147596057, i64 2147596100, i64 2147596140}
!4581 = !DILocation(line: 113, column: 1, scope: !4375)
!4582 = !{i64 2147596280, i64 2147596323, i64 2147596363}
!4583 = !DILocation(line: 114, column: 1, scope: !4375)
!4584 = !{i64 2147596464, i64 2147596507, i64 2147596547}
!4585 = !DILocation(line: 115, column: 1, scope: !4375)
!4586 = !{i64 2147596678, i64 2147596721, i64 2147596761}
!4587 = !DILocation(line: 116, column: 1, scope: !4375)
!4588 = !{i64 2147596844, i64 2147596887, i64 2147596927}
!4589 = !DILocation(line: 117, column: 1, scope: !4375)
!4590 = !{i64 2147597025, i64 2147597068, i64 2147597108}
!4591 = !DILocation(line: 118, column: 1, scope: !4375)
!4592 = !{i64 2147597218, i64 2147597261, i64 2147597301}
!4593 = !DILocation(line: 119, column: 1, scope: !4375)
!4594 = !{i64 2147597444, i64 2147597487, i64 2147597527}
!4595 = !DILocation(line: 120, column: 1, scope: !4375)
!4596 = !{i64 2147597658, i64 2147597701, i64 2147597741}
!4597 = !DILocation(line: 121, column: 1, scope: !4375)
!4598 = !{i64 2147597884, i64 2147597927, i64 2147597967}
!4599 = !DILocation(line: 122, column: 1, scope: !4375)
!4600 = !{i64 2147598101, i64 2147598144, i64 2147598184}
!4601 = !DILocation(line: 123, column: 1, scope: !4375)
!4602 = !{i64 2147598378, i64 2147598421, i64 2147598461}
!4603 = !DILocation(line: 124, column: 1, scope: !4375)
!4604 = !{i64 2147598604, i64 2147598647, i64 2147598687}
!4605 = !DILocation(line: 125, column: 1, scope: !4375)
!4606 = !{i64 2147598812, i64 2147598855, i64 2147598895}
!4607 = !DILocation(line: 126, column: 1, scope: !4375)
!4608 = !{i64 2147599008, i64 2147599051, i64 2147599091}
!4609 = !DILocation(line: 127, column: 1, scope: !4375)
!4610 = !{i64 2147599273, i64 2147599316, i64 2147599356}
!4611 = !DILocation(line: 128, column: 1, scope: !4375)
!4612 = !{i64 2147599487, i64 2147599530, i64 2147599570}
!4613 = !DILocation(line: 129, column: 1, scope: !4375)
!4614 = !{i64 2147599662, i64 2147599705, i64 2147599745}
!4615 = !DILocation(line: 130, column: 1, scope: !4375)
!4616 = !{i64 2147599916, i64 2147599959, i64 2147599999}
!4617 = !DILocation(line: 131, column: 1, scope: !4375)
!4618 = !{i64 2147604176, i64 2147604219, i64 2147604259}
!4619 = !DILocation(line: 132, column: 1, scope: !4375)
!4620 = !{i64 2147604418, i64 2147604461, i64 2147604501}
!4621 = !DILocation(line: 133, column: 1, scope: !4375)
!4622 = !{i64 2147604581, i64 2147604624, i64 2147604664}
!4623 = !DILocation(line: 134, column: 1, scope: !4375)
!4624 = !{i64 2147604768, i64 2147604811, i64 2147604851}
!4625 = !DILocation(line: 135, column: 1, scope: !4375)
!4626 = !{i64 2147604961, i64 2147605004, i64 2147605044}
!4627 = !DILocation(line: 136, column: 1, scope: !4375)
!4628 = !{i64 2147605144, i64 2147605187, i64 2147605227}
!4629 = !DILocation(line: 137, column: 1, scope: !4375)
!4630 = !{i64 2147605358, i64 2147605401, i64 2147605441}
!4631 = !DILocation(line: 138, column: 1, scope: !4375)
!4632 = !{i64 2147605569, i64 2147605612, i64 2147605652}
!4633 = !DILocation(line: 139, column: 1, scope: !4375)
!4634 = !{i64 2147605789, i64 2147605832, i64 2147605872}
!4635 = !DILocation(line: 140, column: 1, scope: !4375)
!4636 = !{i64 2147605996, i64 2147606039, i64 2147606079}
!4637 = !DILocation(line: 141, column: 1, scope: !4375)
!4638 = !{i64 2147606269, i64 2147606312, i64 2147606352}
!4639 = !DILocation(line: 142, column: 1, scope: !4375)
!4640 = !{i64 2147606517, i64 2147606560, i64 2147606600}
!4641 = !DILocation(line: 143, column: 1, scope: !4375)
!4642 = !{i64 2147606716, i64 2147606759, i64 2147606799}
!4643 = !DILocation(line: 144, column: 1, scope: !4375)
!4644 = !{i64 2147606951, i64 2147606994, i64 2147607034}
!4645 = !DILocation(line: 145, column: 1, scope: !4375)
!4646 = !{i64 2147607201, i64 2147607244, i64 2147607284}
!4647 = !DILocation(line: 146, column: 1, scope: !4375)
!4648 = !{i64 2147607403, i64 2147607446, i64 2147607486}
!4649 = !DILocation(line: 147, column: 1, scope: !4375)
!4650 = !{i64 2147607626, i64 2147607669, i64 2147607709}
!4651 = !DILocation(line: 148, column: 1, scope: !4375)
!4652 = !{i64 2147607840, i64 2147607883, i64 2147607923}
!4653 = !DILocation(line: 149, column: 1, scope: !4375)
!4654 = !{i64 2147608084, i64 2147608127, i64 2147608167}
!4655 = !DILocation(line: 150, column: 1, scope: !4375)
!4656 = !{i64 2147608313, i64 2147608356, i64 2147608396}
!4657 = !DILocation(line: 151, column: 1, scope: !4375)
!4658 = !{i64 2147608542, i64 2147608585, i64 2147608625}
!4659 = !DILocation(line: 152, column: 1, scope: !4375)
!4660 = !{i64 2147608750, i64 2147608793, i64 2147608833}
!4661 = !DILocation(line: 153, column: 1, scope: !4375)
!4662 = !{i64 2147608988, i64 2147609031, i64 2147609071}
!4663 = !DILocation(line: 154, column: 1, scope: !4375)
!4664 = !{i64 2147609214, i64 2147609257, i64 2147609297}
!4665 = !DILocation(line: 155, column: 1, scope: !4375)
!4666 = !{i64 2147609473, i64 2147609516, i64 2147609556}
!4667 = !DILocation(line: 156, column: 1, scope: !4375)
!4668 = !{i64 2147609693, i64 2147609736, i64 2147609776}
!4669 = !DILocation(line: 157, column: 1, scope: !4375)
!4670 = !{i64 2147609925, i64 2147609968, i64 2147610008}
!4671 = !DILocation(line: 158, column: 1, scope: !4375)
!4672 = !{i64 2147610166, i64 2147610209, i64 2147610249}
!4673 = !DILocation(line: 159, column: 1, scope: !4375)
!4674 = !{i64 2147610407, i64 2147610450, i64 2147610490}
!4675 = !DILocation(line: 160, column: 1, scope: !4375)
!4676 = !{i64 2147610630, i64 2147610673, i64 2147610713}
!4677 = !DILocation(line: 161, column: 1, scope: !4375)
!4678 = !{i64 2147610847, i64 2147610890, i64 2147610930}
!4679 = !DILocation(line: 162, column: 1, scope: !4375)
!4680 = !{i64 2147611088, i64 2147611131, i64 2147611171}
!4681 = !DILocation(line: 163, column: 1, scope: !4375)
!4682 = !{i64 2147611275, i64 2147611318, i64 2147611358}
!4683 = !DILocation(line: 164, column: 1, scope: !4375)
!4684 = !{i64 2147611462, i64 2147611505, i64 2147611545}
!4685 = !DILocation(line: 165, column: 1, scope: !4375)
!4686 = !{i64 2147611625, i64 2147611668, i64 2147611708}
!4687 = !DILocation(line: 166, column: 1, scope: !4375)
!4688 = !{i64 2147611884, i64 2147611927, i64 2147611967}
!4689 = !DILocation(line: 167, column: 1, scope: !4375)
!4690 = !{i64 2147612107, i64 2147612150, i64 2147612190}
!4691 = !DILocation(line: 168, column: 1, scope: !4375)
!4692 = !{i64 2147612336, i64 2147612379, i64 2147612419}
!4693 = !DILocation(line: 169, column: 1, scope: !4375)
!4694 = !{i64 2147612532, i64 2147612575, i64 2147612615}
!4695 = !DILocation(line: 170, column: 1, scope: !4375)
!4696 = !{i64 2147616805, i64 2147616848, i64 2147616888}
!4697 = !DILocation(line: 171, column: 1, scope: !4375)
!4698 = !{i64 2147617026, i64 2147617069, i64 2147617109}
!4699 = !DILocation(line: 172, column: 1, scope: !4375)
!4700 = !{i64 2147617240, i64 2147617283, i64 2147617323}
!4701 = !DILocation(line: 173, column: 1, scope: !4375)
!4702 = !{i64 2147617430, i64 2147617473, i64 2147617513}
!4703 = !DILocation(line: 174, column: 1, scope: !4375)
!4704 = !{i64 2147617629, i64 2147617672, i64 2147617712}
!4705 = !DILocation(line: 175, column: 1, scope: !4375)
!4706 = !{i64 2147617834, i64 2147617877, i64 2147617917}
!4707 = !DILocation(line: 176, column: 1, scope: !4375)
!4708 = !{i64 2147618054, i64 2147618097, i64 2147618137}
!4709 = !DILocation(line: 177, column: 1, scope: !4375)
!4710 = !{i64 2147618250, i64 2147618293, i64 2147618333}
!4711 = !DILocation(line: 178, column: 1, scope: !4375)
!4712 = !{i64 2147618451, i64 2147618494, i64 2147618534}
!4713 = !DILocation(line: 179, column: 1, scope: !4375)
!4714 = !{i64 2147618650, i64 2147618693, i64 2147618733}
!4715 = !DILocation(line: 180, column: 1, scope: !4375)
!4716 = !{i64 2147618855, i64 2147618898, i64 2147618938}
!4717 = !DILocation(line: 181, column: 1, scope: !4375)
!4718 = !{i64 2147619024, i64 2147619067, i64 2147619107}
!4719 = !DILocation(line: 182, column: 1, scope: !4375)
!4720 = !{i64 2147619208, i64 2147619251, i64 2147619291}
!4721 = !DILocation(line: 183, column: 1, scope: !4375)
!4722 = !{i64 2147619392, i64 2147619435, i64 2147619475}
!4723 = !DILocation(line: 184, column: 1, scope: !4375)
!4724 = !{i64 2147619579, i64 2147619622, i64 2147619662}
!4725 = !DILocation(line: 185, column: 1, scope: !4375)
!4726 = !{i64 2147619763, i64 2147619806, i64 2147619846}
!4727 = !DILocation(line: 186, column: 1, scope: !4375)
!4728 = !{i64 2147619950, i64 2147619993, i64 2147620033}
!4729 = !DILocation(line: 187, column: 1, scope: !4375)
!4730 = !{i64 2147620162, i64 2147620205, i64 2147620245}
!4731 = !DILocation(line: 188, column: 1, scope: !4375)
!4732 = !{i64 2147620400, i64 2147620443, i64 2147620483}
!4733 = !DILocation(line: 189, column: 1, scope: !4375)
!4734 = !{i64 2147620630, i64 2147620673, i64 2147620713}
!4735 = !DILocation(line: 190, column: 1, scope: !4375)
!4736 = !{i64 2147620859, i64 2147620902, i64 2147620942}
!4737 = !DILocation(line: 191, column: 1, scope: !4375)
!4738 = !{i64 2147621046, i64 2147621089, i64 2147621129}
!4739 = !DILocation(line: 192, column: 1, scope: !4375)
!4740 = !{i64 2147621242, i64 2147621285, i64 2147621325}
!4741 = !DILocation(line: 193, column: 1, scope: !4375)
!4742 = !{i64 2147621450, i64 2147621493, i64 2147621533}
!4743 = !DILocation(line: 194, column: 1, scope: !4375)
!4744 = !{i64 2147621662, i64 2147621705, i64 2147621745}
!4745 = !DILocation(line: 195, column: 1, scope: !4375)
!4746 = !{i64 2147621861, i64 2147621904, i64 2147621944}
!4747 = !DILocation(line: 196, column: 1, scope: !4375)
!4748 = !{i64 2147622099, i64 2147622142, i64 2147622182}
!4749 = !DILocation(line: 197, column: 1, scope: !4375)
!4750 = !{i64 2147622295, i64 2147622338, i64 2147622378}
!4751 = !DILocation(line: 198, column: 1, scope: !4375)
!4752 = !{i64 2147622497, i64 2147622540, i64 2147622580}
!4753 = !DILocation(line: 199, column: 1, scope: !4375)
!4754 = !{i64 2147622690, i64 2147622733, i64 2147622773}
!4755 = !DILocation(line: 200, column: 1, scope: !4375)
!4756 = !{i64 2147622924, i64 2147622967, i64 2147623007}
!4757 = !DILocation(line: 201, column: 1, scope: !4375)
!4758 = !{i64 2147623087, i64 2147623130, i64 2147623170}
!4759 = !DILocation(line: 202, column: 1, scope: !4375)
!4760 = !{i64 2147623326, i64 2147623369, i64 2147623409}
!4761 = !DILocation(line: 203, column: 1, scope: !4375)
!4762 = !{i64 2147623565, i64 2147623608, i64 2147623648}
!4763 = !DILocation(line: 204, column: 1, scope: !4375)
!4764 = !{i64 2147623801, i64 2147623844, i64 2147623884}
!4765 = !DILocation(line: 205, column: 1, scope: !4375)
!4766 = !{i64 2147624031, i64 2147624074, i64 2147624114}
!4767 = !DILocation(line: 206, column: 1, scope: !4375)
!4768 = !{i64 2147624218, i64 2147624261, i64 2147624301}
!4769 = !DILocation(line: 207, column: 1, scope: !4375)
!4770 = !{i64 2147624417, i64 2147624460, i64 2147624500}
!4771 = !DILocation(line: 208, column: 1, scope: !4375)
!4772 = !{i64 2147624688, i64 2147624731, i64 2147624771}
!4773 = !DILocation(line: 209, column: 1, scope: !4375)
!4774 = !{i64 2147624863, i64 2147624906, i64 2147624946}
!4775 = !DILocation(line: 210, column: 1, scope: !4375)
!4776 = !{i64 2147625097, i64 2147625140, i64 2147625180}
!4777 = !DILocation(line: 211, column: 1, scope: !4375)
!4778 = !{i64 2147625305, i64 2147625348, i64 2147625388}
!4779 = !DILocation(line: 212, column: 1, scope: !4375)
!4780 = !{i64 2147625523, i64 2147625566, i64 2147625606}
!4781 = !DILocation(line: 213, column: 1, scope: !4375)
!4782 = !{i64 2147625713, i64 2147625756, i64 2147625796}
!4783 = !DILocation(line: 214, column: 1, scope: !4375)
!4784 = !{i64 2147629970, i64 2147630013, i64 2147630053}
!4785 = !DILocation(line: 215, column: 1, scope: !4375)
!4786 = !{i64 2147630176, i64 2147630219, i64 2147630259}
!4787 = !DILocation(line: 216, column: 1, scope: !4375)
!4788 = !{i64 2147630381, i64 2147630424, i64 2147630464}
!4789 = !DILocation(line: 217, column: 1, scope: !4375)
!4790 = !{i64 2147630595, i64 2147630638, i64 2147630678}
!4791 = !DILocation(line: 218, column: 1, scope: !4375)
!4792 = !{i64 2147630821, i64 2147630864, i64 2147630904}
!4793 = !DILocation(line: 219, column: 1, scope: !4375)
!4794 = !{i64 2147631053, i64 2147631096, i64 2147631136}
!4795 = !DILocation(line: 220, column: 1, scope: !4375)
!4796 = !{i64 2147631237, i64 2147631280, i64 2147631320}
!4797 = !DILocation(line: 221, column: 1, scope: !4375)
!4798 = !{i64 2147631446, i64 2147631489, i64 2147631529}
!4799 = !DILocation(line: 222, column: 1, scope: !4375)
!4800 = !{i64 2147631630, i64 2147631673, i64 2147631713}
!4801 = !DILocation(line: 223, column: 1, scope: !4375)
!4802 = !{i64 2147631856, i64 2147631899, i64 2147631939}
!4803 = !DILocation(line: 224, column: 1, scope: !4375)
!4804 = !{i64 2147632082, i64 2147632125, i64 2147632165}
!4805 = !DILocation(line: 225, column: 1, scope: !4375)
!4806 = !{i64 2147632308, i64 2147632351, i64 2147632391}
!4807 = !DILocation(line: 226, column: 1, scope: !4375)
!4808 = !{i64 2147632534, i64 2147632577, i64 2147632617}
!4809 = !DILocation(line: 227, column: 1, scope: !4375)
!4810 = !{i64 2147632760, i64 2147632803, i64 2147632843}
!4811 = !DILocation(line: 228, column: 1, scope: !4375)
!4812 = !{i64 2147632992, i64 2147633035, i64 2147633075}
!4813 = !DILocation(line: 229, column: 1, scope: !4375)
!4814 = !{i64 2147633230, i64 2147633273, i64 2147633313}
!4815 = !DILocation(line: 230, column: 1, scope: !4375)
!4816 = !{i64 2147633450, i64 2147633493, i64 2147633533}
!4817 = !DILocation(line: 231, column: 1, scope: !4375)
!4818 = !{i64 2147633694, i64 2147633737, i64 2147633777}
!4819 = !DILocation(line: 232, column: 1, scope: !4375)
!4820 = !{i64 2147633935, i64 2147633978, i64 2147634018}
!4821 = !DILocation(line: 233, column: 1, scope: !4375)
!4822 = !{i64 2147634170, i64 2147634213, i64 2147634253}
!4823 = !DILocation(line: 234, column: 1, scope: !4375)
!4824 = !{i64 2147634402, i64 2147634445, i64 2147634485}
!4825 = !DILocation(line: 235, column: 1, scope: !4375)
!4826 = !{i64 2147634604, i64 2147634647, i64 2147634687}
!4827 = !DILocation(line: 236, column: 1, scope: !4375)
!4828 = !{i64 2147634854, i64 2147634897, i64 2147634937}
!4829 = !DILocation(line: 237, column: 1, scope: !4375)
!4830 = !{i64 2147635092, i64 2147635135, i64 2147635175}
!4831 = !DILocation(line: 238, column: 1, scope: !4375)
!4832 = !{i64 2147635276, i64 2147635319, i64 2147635359}
!4833 = !DILocation(line: 239, column: 1, scope: !4375)
!4834 = !{i64 2147635500, i64 2147635543, i64 2147635583}
!4835 = !DILocation(line: 240, column: 1, scope: !4375)
!4836 = !{i64 2147635738, i64 2147635781, i64 2147635821}
!4837 = !DILocation(line: 241, column: 1, scope: !4375)
!4838 = !{i64 2147635976, i64 2147636019, i64 2147636059}
!4839 = !DILocation(line: 242, column: 1, scope: !4375)
!4840 = !{i64 2147636169, i64 2147636212, i64 2147636252}
!4841 = !DILocation(line: 243, column: 1, scope: !4375)
!4842 = !{i64 2147636422, i64 2147636465, i64 2147636505}
!4843 = !DILocation(line: 244, column: 1, scope: !4375)
!4844 = !{i64 2147636636, i64 2147636679, i64 2147636719}
!4845 = !DILocation(line: 245, column: 1, scope: !4375)
!4846 = !{i64 2147636844, i64 2147636887, i64 2147636927}
!4847 = !DILocation(line: 246, column: 1, scope: !4375)
!4848 = !{i64 2147637034, i64 2147637077, i64 2147637117}
!4849 = !DILocation(line: 247, column: 1, scope: !4375)
!4850 = !{i64 2147637248, i64 2147637291, i64 2147637331}
!4851 = !DILocation(line: 248, column: 1, scope: !4375)
!4852 = !{i64 2147637510, i64 2147637553, i64 2147637593}
!4853 = !DILocation(line: 249, column: 1, scope: !4375)
!4854 = !{i64 2147637721, i64 2147637764, i64 2147637804}
!4855 = !DILocation(line: 250, column: 1, scope: !4375)
!4856 = !{i64 2147637965, i64 2147638008, i64 2147638048}
!4857 = !DILocation(line: 251, column: 1, scope: !4375)
!4858 = !{i64 2147638176, i64 2147638219, i64 2147638259}
!4859 = !DILocation(line: 252, column: 1, scope: !4375)
!4860 = !{i64 2147638405, i64 2147638448, i64 2147638488}
!4861 = !DILocation(line: 253, column: 1, scope: !4375)
!4862 = !{i64 2147642731, i64 2147642774, i64 2147642814}
!4863 = !DILocation(line: 254, column: 1, scope: !4375)
!4864 = !{i64 2147642936, i64 2147642979, i64 2147643019}
!4865 = !DILocation(line: 255, column: 1, scope: !4375)
!4866 = !{i64 2147643132, i64 2147643175, i64 2147643215}
!4867 = !DILocation(line: 256, column: 1, scope: !4375)
!4868 = !{i64 2147643355, i64 2147643398, i64 2147643438}
!4869 = !DILocation(line: 257, column: 1, scope: !4375)
!4870 = !{i64 2147643518, i64 2147643561, i64 2147643601}
!4871 = !DILocation(line: 258, column: 1, scope: !4375)
!4872 = !{i64 2147643723, i64 2147643766, i64 2147643806}
!4873 = !DILocation(line: 259, column: 1, scope: !4375)
!4874 = !{i64 2147643943, i64 2147643986, i64 2147644026}
!4875 = !DILocation(line: 260, column: 1, scope: !4375)
!4876 = !{i64 2147644157, i64 2147644200, i64 2147644240}
!4877 = !DILocation(line: 261, column: 1, scope: !4375)
!4878 = !{i64 2147644371, i64 2147644414, i64 2147644454}
!4879 = !DILocation(line: 262, column: 1, scope: !4375)
!4880 = !{i64 2147644582, i64 2147644625, i64 2147644665}
!4881 = !DILocation(line: 263, column: 1, scope: !4375)
!4882 = !{i64 2147644775, i64 2147644818, i64 2147644858}
!4883 = !DILocation(line: 264, column: 1, scope: !4375)
!4884 = !{i64 2147644974, i64 2147645017, i64 2147645057}
!4885 = !DILocation(line: 265, column: 1, scope: !4375)
!4886 = !{i64 2147645146, i64 2147645189, i64 2147645229}
!4887 = !DILocation(line: 266, column: 1, scope: !4375)
!4888 = !{i64 2147645339, i64 2147645382, i64 2147645422}
!4889 = !DILocation(line: 267, column: 1, scope: !4375)
!4890 = !{i64 2147645535, i64 2147645578, i64 2147645618}
!4891 = !DILocation(line: 268, column: 1, scope: !4375)
!4892 = !{i64 2147645762, i64 2147645805, i64 2147645845}
!4893 = !DILocation(line: 269, column: 1, scope: !4375)
!4894 = !{i64 2147645979, i64 2147646022, i64 2147646062}
!4895 = !DILocation(line: 270, column: 1, scope: !4375)
!4896 = !{i64 2147646271, i64 2147646314, i64 2147646354}
!4897 = !DILocation(line: 271, column: 1, scope: !4375)
!4898 = !{i64 2147646503, i64 2147646546, i64 2147646586}
!4899 = !DILocation(line: 272, column: 1, scope: !4375)
!4900 = !{i64 2147646720, i64 2147646763, i64 2147646803}
!4901 = !DILocation(line: 273, column: 1, scope: !4375)
!4902 = !{i64 2147646927, i64 2147646970, i64 2147647010}
!4903 = !DILocation(line: 274, column: 1, scope: !4375)
!4904 = !{i64 2147647128, i64 2147647171, i64 2147647211}
!4905 = !DILocation(line: 275, column: 1, scope: !4375)
!4906 = !{i64 2147647360, i64 2147647403, i64 2147647443}
!4907 = !DILocation(line: 276, column: 1, scope: !4375)
!4908 = !{i64 2147647568, i64 2147647611, i64 2147647651}
!4909 = !DILocation(line: 277, column: 1, scope: !4375)
!4910 = !{i64 2147647758, i64 2147647801, i64 2147647841}
!4911 = !DILocation(line: 278, column: 1, scope: !4375)
!4912 = !{i64 2147647984, i64 2147648027, i64 2147648067}
!4913 = !DILocation(line: 279, column: 1, scope: !4375)
!4914 = !{i64 2147648173, i64 2147648216, i64 2147648256}
!4915 = !DILocation(line: 280, column: 1, scope: !4375)
!4916 = !{i64 2147648444, i64 2147648487, i64 2147648527}
!4917 = !DILocation(line: 281, column: 1, scope: !4375)
!4918 = !{i64 2147648664, i64 2147648707, i64 2147648747}
!4919 = !DILocation(line: 282, column: 1, scope: !4375)
!4920 = !{i64 2147648917, i64 2147648960, i64 2147649000}
!4921 = !DILocation(line: 283, column: 1, scope: !4375)
!4922 = !{i64 2147649125, i64 2147649168, i64 2147649208}
!4923 = !DILocation(line: 284, column: 1, scope: !4375)
!4924 = !{i64 2147649357, i64 2147649400, i64 2147649440}
!4925 = !DILocation(line: 285, column: 1, scope: !4375)
!4926 = !{i64 2147649568, i64 2147649611, i64 2147649651}
!4927 = !DILocation(line: 286, column: 1, scope: !4375)
!4928 = !{i64 2147649758, i64 2147649801, i64 2147649841}
!4929 = !DILocation(line: 287, column: 1, scope: !4375)
!4930 = !{i64 2147649972, i64 2147650015, i64 2147650055}
!4931 = !DILocation(line: 288, column: 1, scope: !4375)
!4932 = !{i64 2147650171, i64 2147650214, i64 2147650254}
!4933 = !DILocation(line: 289, column: 1, scope: !4375)
!4934 = !{i64 2147650358, i64 2147650401, i64 2147650441}
!4935 = !DILocation(line: 290, column: 1, scope: !4375)
!4936 = !{i64 2147650566, i64 2147650609, i64 2147650649}
!4937 = !DILocation(line: 291, column: 1, scope: !4375)
!4938 = !{i64 2147650795, i64 2147650838, i64 2147650878}
!4939 = !DILocation(line: 292, column: 1, scope: !4375)
!4940 = !{i64 2147650997, i64 2147651040, i64 2147651080}
!4941 = !DILocation(line: 293, column: 1, scope: !4375)
!4942 = !{i64 2147651196, i64 2147651239, i64 2147651279}
!4943 = !DILocation(line: 294, column: 1, scope: !4375)
!4944 = !{i64 2147655474, i64 2147655517, i64 2147655557}
!4945 = !DILocation(line: 296, column: 1, scope: !4375)
!4946 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !290, file: !290, line: 30, type: !297, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !4947)
!4947 = !{!4948, !4949}
!4948 = !DILocalVariable(name: "arg", arg: 1, scope: !4946, file: !290, line: 30, type: !299)
!4949 = !DILocalVariable(name: "key", scope: !4946, file: !290, line: 32, type: !110)
!4950 = !DILocation(line: 0, scope: !4946)
!4951 = !DILocation(line: 37, column: 2, scope: !4946)
!4952 = !DILocation(line: 38, column: 2, scope: !4946)
!4953 = !DILocation(line: 55, column: 2, scope: !4954, inlinedAt: !4961)
!4954 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4955, file: !4955, line: 42, type: !4956, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !4958)
!4955 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!32}
!4958 = !{!4959, !4960}
!4959 = !DILocalVariable(name: "key", scope: !4954, file: !4955, line: 44, type: !32)
!4960 = !DILocalVariable(name: "tmp", scope: !4954, file: !4955, line: 53, type: !32)
!4961 = distinct !DILocation(line: 40, column: 8, scope: !4946)
!4962 = !{i64 2184705}
!4963 = !DILocation(line: 0, scope: !4954, inlinedAt: !4961)
!4964 = !DILocalVariable(name: "key", arg: 1, scope: !4965, file: !4955, line: 84, type: !32)
!4965 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4955, file: !4955, line: 84, type: !4966, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !4968)
!4966 = !DISubroutineType(types: !4967)
!4967 = !{null, !32}
!4968 = !{!4964}
!4969 = !DILocation(line: 0, scope: !4965, inlinedAt: !4970)
!4970 = distinct !DILocation(line: 47, column: 2, scope: !4946)
!4971 = !DILocation(line: 95, column: 2, scope: !4965, inlinedAt: !4970)
!4972 = !{i64 2185522}
!4973 = !DILocation(line: 51, column: 18, scope: !4946)
!4974 = !DILocation(line: 53, column: 2, scope: !4946)
!4975 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !4976, file: !4976, line: 1609, type: !2980, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !251)
!4976 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4977 = !DILocation(line: 1611, column: 3, scope: !4975)
!4978 = !DILocation(line: 1612, column: 1, scope: !4975)
!4979 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !4976, file: !4976, line: 1629, type: !2980, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !273, retainedNodes: !251)
!4980 = !DILocation(line: 1631, column: 3, scope: !4979)
!4981 = !DILocation(line: 1632, column: 1, scope: !4979)
!4982 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !329, file: !329, line: 26, type: !335, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !326, retainedNodes: !4983)
!4983 = !{!4984}
!4984 = !DILocalVariable(name: "dev", arg: 1, scope: !4982, file: !329, line: 26, type: !337)
!4985 = !DILocation(line: 0, scope: !4982)
!4986 = !DILocation(line: 68, column: 2, scope: !4982)
!4987 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !4988, file: !4988, line: 57, type: !4989, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2459, retainedNodes: !5035)
!4988 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4989 = !DISubroutineType(types: !4990)
!4990 = !{null, !32, !4991}
!4991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4992, size: 32)
!4992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4993)
!4993 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2579, line: 141, baseType: !4994)
!4994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2579, line: 97, size: 256, elements: !4995)
!4995 = !{!4996}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !4994, file: !2579, line: 107, baseType: !4997, size: 256)
!4997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2579, line: 98, size: 256, elements: !4998)
!4998 = !{!4999, !5004, !5009, !5014, !5019, !5024, !5029, !5034}
!4999 = !DIDerivedType(tag: DW_TAG_member, scope: !4997, file: !2579, line: 99, baseType: !5000, size: 32)
!5000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4997, file: !2579, line: 99, size: 32, elements: !5001)
!5001 = !{!5002, !5003}
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5000, file: !2579, line: 99, baseType: !110, size: 32)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5000, file: !2579, line: 99, baseType: !110, size: 32)
!5004 = !DIDerivedType(tag: DW_TAG_member, scope: !4997, file: !2579, line: 100, baseType: !5005, size: 32, offset: 32)
!5005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4997, file: !2579, line: 100, size: 32, elements: !5006)
!5006 = !{!5007, !5008}
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5005, file: !2579, line: 100, baseType: !110, size: 32)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5005, file: !2579, line: 100, baseType: !110, size: 32)
!5009 = !DIDerivedType(tag: DW_TAG_member, scope: !4997, file: !2579, line: 101, baseType: !5010, size: 32, offset: 64)
!5010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4997, file: !2579, line: 101, size: 32, elements: !5011)
!5011 = !{!5012, !5013}
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5010, file: !2579, line: 101, baseType: !110, size: 32)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5010, file: !2579, line: 101, baseType: !110, size: 32)
!5014 = !DIDerivedType(tag: DW_TAG_member, scope: !4997, file: !2579, line: 102, baseType: !5015, size: 32, offset: 96)
!5015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4997, file: !2579, line: 102, size: 32, elements: !5016)
!5016 = !{!5017, !5018}
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5015, file: !2579, line: 102, baseType: !110, size: 32)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5015, file: !2579, line: 102, baseType: !110, size: 32)
!5019 = !DIDerivedType(tag: DW_TAG_member, scope: !4997, file: !2579, line: 103, baseType: !5020, size: 32, offset: 128)
!5020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4997, file: !2579, line: 103, size: 32, elements: !5021)
!5021 = !{!5022, !5023}
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5020, file: !2579, line: 103, baseType: !110, size: 32)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5020, file: !2579, line: 103, baseType: !110, size: 32)
!5024 = !DIDerivedType(tag: DW_TAG_member, scope: !4997, file: !2579, line: 104, baseType: !5025, size: 32, offset: 160)
!5025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4997, file: !2579, line: 104, size: 32, elements: !5026)
!5026 = !{!5027, !5028}
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5025, file: !2579, line: 104, baseType: !110, size: 32)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5025, file: !2579, line: 104, baseType: !110, size: 32)
!5029 = !DIDerivedType(tag: DW_TAG_member, scope: !4997, file: !2579, line: 105, baseType: !5030, size: 32, offset: 192)
!5030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4997, file: !2579, line: 105, size: 32, elements: !5031)
!5031 = !{!5032, !5033}
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5030, file: !2579, line: 105, baseType: !110, size: 32)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5030, file: !2579, line: 105, baseType: !110, size: 32)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !4997, file: !2579, line: 106, baseType: !110, size: 32, offset: 224)
!5035 = !{!5036, !5037}
!5036 = !DILocalVariable(name: "reason", arg: 1, scope: !4987, file: !4988, line: 57, type: !32)
!5037 = !DILocalVariable(name: "esf", arg: 2, scope: !4987, file: !4988, line: 57, type: !4991)
!5038 = !DILocation(line: 0, scope: !4987)
!5039 = !DILocation(line: 63, column: 2, scope: !4987)
!5040 = !DILocation(line: 64, column: 1, scope: !4987)
!5041 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !4988, file: !4988, line: 82, type: !5042, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2459, retainedNodes: !5057)
!5042 = !DISubroutineType(types: !5043)
!5043 = !{null, !4991, !5044}
!5044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5045, size: 32)
!5045 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !210, line: 37, baseType: !5046)
!5046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !5047)
!5047 = !{!5048, !5049, !5050, !5051, !5052, !5053, !5054, !5055, !5056}
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5046, file: !210, line: 26, baseType: !110, size: 32)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5046, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5046, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5046, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5046, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5046, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5046, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5046, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5046, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!5057 = !{!5058, !5059, !5060}
!5058 = !DILocalVariable(name: "esf", arg: 1, scope: !5041, file: !4988, line: 82, type: !4991)
!5059 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5041, file: !4988, line: 82, type: !5044)
!5060 = !DILocalVariable(name: "reason", scope: !5041, file: !4988, line: 88, type: !32)
!5061 = !DILocation(line: 0, scope: !5041)
!5062 = !DILocation(line: 88, column: 35, scope: !5041)
!5063 = !DILocation(line: 108, column: 2, scope: !5041)
!5064 = !DILocation(line: 131, column: 1, scope: !5041)
!5065 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !4988, file: !4988, line: 133, type: !5066, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2459, retainedNodes: !5068)
!5066 = !DISubroutineType(types: !5067)
!5067 = !{null, !106}
!5068 = !{!5069, !5070, !5071}
!5069 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5065, file: !4988, line: 133, type: !106)
!5070 = !DILocalVariable(name: "ssf_contents", scope: !5065, file: !4988, line: 135, type: !862)
!5071 = !DILocalVariable(name: "oops_esf", scope: !5065, file: !4988, line: 136, type: !4993)
!5072 = !DILocation(line: 0, scope: !5065)
!5073 = !DILocation(line: 136, column: 2, scope: !5065)
!5074 = !DILocation(line: 136, column: 15, scope: !5065)
!5075 = !DILocation(line: 139, column: 22, scope: !5065)
!5076 = !DILocation(line: 139, column: 17, scope: !5065)
!5077 = !DILocation(line: 139, column: 20, scope: !5065)
!5078 = !DILocation(line: 141, column: 2, scope: !5065)
!5079 = !DILocation(line: 142, column: 2, scope: !5065)
!5080 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5081, file: !5081, line: 40, type: !4966, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5082)
!5081 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5082 = !{!5083}
!5083 = !DILocalVariable(name: "irq", arg: 1, scope: !5080, file: !5081, line: 40, type: !32)
!5084 = !DILocation(line: 0, scope: !5080)
!5085 = !DILocation(line: 42, column: 2, scope: !5080)
!5086 = !DILocation(line: 43, column: 1, scope: !5080)
!5087 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !495, file: !495, line: 1684, type: !5088, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5090)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{null, !760}
!5090 = !{!5091}
!5091 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5087, file: !495, line: 1684, type: !760)
!5092 = !DILocation(line: 0, scope: !5087)
!5093 = !DILocation(line: 1686, column: 23, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5087, file: !495, line: 1686, column: 7)
!5095 = !DILocation(line: 1686, column: 7, scope: !5087)
!5096 = !DILocation(line: 1688, column: 5, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5094, file: !495, line: 1687, column: 3)
!5098 = !{i64 2151254227}
!5099 = !DILocation(line: 1689, column: 81, scope: !5097)
!5100 = !DILocation(line: 1689, column: 60, scope: !5097)
!5101 = !DILocation(line: 1689, column: 34, scope: !5097)
!5102 = !DILocation(line: 1689, column: 5, scope: !5097)
!5103 = !DILocation(line: 1689, column: 43, scope: !5097)
!5104 = !DILocation(line: 1690, column: 5, scope: !5097)
!5105 = !{i64 2151254341}
!5106 = !DILocation(line: 1691, column: 3, scope: !5097)
!5107 = !DILocation(line: 1692, column: 1, scope: !5087)
!5108 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5081, file: !5081, line: 45, type: !4966, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5109)
!5109 = !{!5110}
!5110 = !DILocalVariable(name: "irq", arg: 1, scope: !5108, file: !5081, line: 45, type: !32)
!5111 = !DILocation(line: 0, scope: !5108)
!5112 = !DILocation(line: 47, column: 2, scope: !5108)
!5113 = !DILocation(line: 48, column: 1, scope: !5108)
!5114 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !495, file: !495, line: 1722, type: !5088, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5115)
!5115 = !{!5116}
!5116 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5114, file: !495, line: 1722, type: !760)
!5117 = !DILocation(line: 0, scope: !5114)
!5118 = !DILocation(line: 1724, column: 23, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5114, file: !495, line: 1724, column: 7)
!5120 = !DILocation(line: 1724, column: 7, scope: !5114)
!5121 = !DILocation(line: 1726, column: 81, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5119, file: !495, line: 1725, column: 3)
!5123 = !DILocation(line: 1726, column: 60, scope: !5122)
!5124 = !DILocation(line: 1726, column: 34, scope: !5122)
!5125 = !DILocation(line: 1726, column: 5, scope: !5122)
!5126 = !DILocation(line: 1726, column: 43, scope: !5122)
!5127 = !DILocation(line: 271, column: 3, scope: !5128, inlinedAt: !5130)
!5128 = distinct !DISubprogram(name: "__DSB", scope: !5129, file: !5129, line: 269, type: !2980, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !251)
!5129 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5130 = distinct !DILocation(line: 1727, column: 5, scope: !5122)
!5131 = !{i64 3708610}
!5132 = !DILocation(line: 260, column: 3, scope: !5133, inlinedAt: !5134)
!5133 = distinct !DISubprogram(name: "__ISB", scope: !5129, file: !5129, line: 258, type: !2980, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !251)
!5134 = distinct !DILocation(line: 1728, column: 5, scope: !5122)
!5135 = !{i64 3708327}
!5136 = !DILocation(line: 1729, column: 3, scope: !5122)
!5137 = !DILocation(line: 1730, column: 1, scope: !5114)
!5138 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5081, file: !5081, line: 50, type: !5139, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5141)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{!109, !32}
!5141 = !{!5142}
!5142 = !DILocalVariable(name: "irq", arg: 1, scope: !5138, file: !5081, line: 50, type: !32)
!5143 = !DILocation(line: 0, scope: !5138)
!5144 = !DILocation(line: 52, column: 20, scope: !5138)
!5145 = !DILocation(line: 52, column: 9, scope: !5138)
!5146 = !DILocation(line: 52, column: 41, scope: !5138)
!5147 = !DILocation(line: 52, column: 39, scope: !5138)
!5148 = !DILocation(line: 52, column: 2, scope: !5138)
!5149 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5081, file: !5081, line: 64, type: !5150, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5152)
!5150 = !DISubroutineType(types: !5151)
!5151 = !{null, !32, !32, !110}
!5152 = !{!5153, !5154, !5155}
!5153 = !DILocalVariable(name: "irq", arg: 1, scope: !5149, file: !5081, line: 64, type: !32)
!5154 = !DILocalVariable(name: "prio", arg: 2, scope: !5149, file: !5081, line: 64, type: !32)
!5155 = !DILocalVariable(name: "flags", arg: 3, scope: !5149, file: !5081, line: 64, type: !110)
!5156 = !DILocation(line: 0, scope: !5149)
!5157 = !DILocation(line: 83, column: 8, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5159, file: !5081, line: 82, column: 9)
!5159 = distinct !DILexicalBlock(scope: !5149, file: !5081, line: 76, column: 6)
!5160 = !DILocation(line: 95, column: 2, scope: !5149)
!5161 = !DILocation(line: 96, column: 1, scope: !5149)
!5162 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !5163, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5165)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{null, !760, !110}
!5165 = !{!5166, !5167}
!5166 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5162, file: !495, line: 1814, type: !760)
!5167 = !DILocalVariable(name: "priority", arg: 2, scope: !5162, file: !495, line: 1814, type: !110)
!5168 = !DILocation(line: 0, scope: !5162)
!5169 = !DILocation(line: 0, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5162, file: !495, line: 1816, column: 7)
!5171 = !DILocation(line: 1816, column: 7, scope: !5162)
!5172 = !DILocation(line: 1824, column: 1, scope: !5162)
!5173 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5081, file: !5081, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2470, retainedNodes: !5174)
!5174 = !{!5175}
!5175 = !DILocalVariable(name: "unused", arg: 1, scope: !5173, file: !5081, line: 155, type: !13)
!5176 = !DILocation(line: 0, scope: !5173)
!5177 = !DILocation(line: 159, column: 2, scope: !5173)
!5178 = !DILocation(line: 160, column: 1, scope: !5173)
!5179 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5180, file: !5180, line: 87, type: !2980, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !251)
!5180 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5181 = !DILocation(line: 89, column: 2, scope: !5179)
!5182 = !DILocation(line: 90, column: 2, scope: !5179)
!5183 = !DILocation(line: 91, column: 1, scope: !5179)
!5184 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5180, file: !5180, line: 23, type: !2980, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!5185 = !DISubprogram(name: "z_arm_int_exit", scope: !5186, file: !5186, line: 153, type: !2980, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!5186 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5187 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5188, file: !5188, line: 256, type: !2980, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !251)
!5188 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5189 = !DILocation(line: 258, column: 2, scope: !5187)
!5190 = !DILocation(line: 260, column: 2, scope: !5187)
!5191 = !DILocation(line: 262, column: 2, scope: !5187)
!5192 = !DILocation(line: 263, column: 2, scope: !5187)
!5193 = !DILocation(line: 267, column: 2, scope: !5187)
!5194 = !DILocation(line: 268, column: 2, scope: !5187)
!5195 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5188, file: !5188, line: 53, type: !2980, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !251)
!5196 = !DILocation(line: 55, column: 12, scope: !5195)
!5197 = !DILocation(line: 271, column: 3, scope: !5198, inlinedAt: !5199)
!5198 = distinct !DISubprogram(name: "__DSB", scope: !5129, file: !5129, line: 269, type: !2980, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !251)
!5199 = distinct !DILocation(line: 56, column: 2, scope: !5195)
!5200 = !{i64 3707281}
!5201 = !DILocation(line: 260, column: 3, scope: !5202, inlinedAt: !5203)
!5202 = distinct !DISubprogram(name: "__ISB", scope: !5129, file: !5129, line: 258, type: !2980, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !251)
!5203 = distinct !DILocation(line: 57, column: 2, scope: !5195)
!5204 = !{i64 3706998}
!5205 = !DILocation(line: 58, column: 1, scope: !5195)
!5206 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !5188, file: !5188, line: 96, type: !2980, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !251)
!5207 = !DILocation(line: 103, column: 13, scope: !5206)
!5208 = !DILocation(line: 975, column: 3, scope: !5209, inlinedAt: !5214)
!5209 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5129, file: !5129, line: 971, type: !5210, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !5212)
!5210 = !DISubroutineType(types: !5211)
!5211 = !{!110}
!5212 = !{!5213}
!5213 = !DILocalVariable(name: "result", scope: !5209, file: !5129, line: 973, type: !110)
!5214 = distinct !DILocation(line: 189, column: 16, scope: !5206)
!5215 = !{i64 3728111}
!5216 = !DILocation(line: 0, scope: !5209, inlinedAt: !5214)
!5217 = !DILocation(line: 189, column: 32, scope: !5206)
!5218 = !DILocalVariable(name: "control", arg: 1, scope: !5219, file: !5129, line: 1001, type: !110)
!5219 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5129, file: !5129, line: 1001, type: !3146, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !5220)
!5220 = !{!5218}
!5221 = !DILocation(line: 0, scope: !5219, inlinedAt: !5222)
!5222 = distinct !DILocation(line: 189, column: 2, scope: !5206)
!5223 = !DILocation(line: 1003, column: 3, scope: !5219, inlinedAt: !5222)
!5224 = !{i64 3728831}
!5225 = !DILocation(line: 260, column: 3, scope: !5202, inlinedAt: !5226)
!5226 = distinct !DILocation(line: 1004, column: 3, scope: !5219, inlinedAt: !5222)
!5227 = !DILocation(line: 191, column: 1, scope: !5206)
!5228 = distinct !DISubprogram(name: "arch_swap", scope: !5229, file: !5229, line: 33, type: !5139, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5230)
!5229 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5230 = !{!5231}
!5231 = !DILocalVariable(name: "key", arg: 1, scope: !5228, file: !5229, line: 33, type: !32)
!5232 = !DILocation(line: 0, scope: !5228)
!5233 = !DILocation(line: 36, column: 2, scope: !5228)
!5234 = !DILocation(line: 36, column: 17, scope: !5228)
!5235 = !DILocation(line: 36, column: 25, scope: !5228)
!5236 = !DILocation(line: 37, column: 37, scope: !5228)
!5237 = !DILocation(line: 37, column: 17, scope: !5228)
!5238 = !DILocation(line: 37, column: 35, scope: !5228)
!5239 = !DILocation(line: 41, column: 12, scope: !5228)
!5240 = !DILocalVariable(name: "key", arg: 1, scope: !5241, file: !4955, line: 84, type: !32)
!5241 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4955, file: !4955, line: 84, type: !4966, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5242)
!5242 = !{!5240}
!5243 = !DILocation(line: 0, scope: !5241, inlinedAt: !5244)
!5244 = distinct !DILocation(line: 44, column: 2, scope: !5228)
!5245 = !DILocation(line: 95, column: 2, scope: !5241, inlinedAt: !5244)
!5246 = !{i64 2277782}
!5247 = !DILocation(line: 53, column: 9, scope: !5228)
!5248 = !DILocation(line: 53, column: 24, scope: !5228)
!5249 = !DILocation(line: 53, column: 2, scope: !5228)
!5250 = distinct !DISubprogram(name: "arch_new_thread", scope: !5251, file: !5251, line: 56, type: !5252, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !5361)
!5251 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5252 = !DISubroutineType(types: !5253)
!5253 = !{null, !5254, !5356, !1134, !3224, !106, !106, !106}
!5254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5255, size: 32)
!5255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1344, elements: !5256)
!5256 = !{!5257, !5316, !5328, !5329, !5330, !5331, !5332, !5338, !5351}
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5255, file: !156, line: 247, baseType: !5258, size: 448)
!5258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 448, elements: !5259)
!5259 = !{!5260, !5284, !5291, !5292, !5293, !5302, !5303, !5304, !5305}
!5260 = !DIDerivedType(tag: DW_TAG_member, scope: !5258, file: !156, line: 60, baseType: !5261, size: 64)
!5261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5258, file: !156, line: 60, size: 64, elements: !5262)
!5262 = !{!5263, !5278}
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5261, file: !156, line: 61, baseType: !5264, size: 64)
!5264 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !5265)
!5265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !5266)
!5266 = !{!5267, !5273}
!5267 = !DIDerivedType(tag: DW_TAG_member, scope: !5265, file: !127, line: 38, baseType: !5268, size: 32)
!5268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5265, file: !127, line: 38, size: 32, elements: !5269)
!5269 = !{!5270, !5272}
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5268, file: !127, line: 39, baseType: !5271, size: 32)
!5271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5265, size: 32)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5268, file: !127, line: 40, baseType: !5271, size: 32)
!5273 = !DIDerivedType(tag: DW_TAG_member, scope: !5265, file: !127, line: 42, baseType: !5274, size: 32, offset: 32)
!5274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5265, file: !127, line: 42, size: 32, elements: !5275)
!5275 = !{!5276, !5277}
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5274, file: !127, line: 43, baseType: !5271, size: 32)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5274, file: !127, line: 44, baseType: !5271, size: 32)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5261, file: !156, line: 62, baseType: !5279, size: 64)
!5279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !5280)
!5280 = !{!5281}
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5279, file: !168, line: 50, baseType: !5282, size: 64)
!5282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5283, size: 64, elements: !173)
!5283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5279, size: 32)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5258, file: !156, line: 68, baseType: !5285, size: 32, offset: 64)
!5285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5286, size: 32)
!5286 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !5287)
!5287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !5288)
!5288 = !{!5289}
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5287, file: !122, line: 232, baseType: !5290, size: 64)
!5290 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !5265)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5258, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5258, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!5293 = !DIDerivedType(tag: DW_TAG_member, scope: !5258, file: !156, line: 90, baseType: !5294, size: 16, offset: 112)
!5294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5258, file: !156, line: 90, size: 16, elements: !5295)
!5295 = !{!5296, !5301}
!5296 = !DIDerivedType(tag: DW_TAG_member, scope: !5294, file: !156, line: 91, baseType: !5297, size: 16)
!5297 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5294, file: !156, line: 91, size: 16, elements: !5298)
!5298 = !{!5299, !5300}
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5297, file: !156, line: 96, baseType: !188, size: 8)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5297, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5294, file: !156, line: 100, baseType: !192, size: 16)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5258, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_mask", scope: !5258, file: !156, line: 123, baseType: !178, size: 8, offset: 160)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5258, file: !156, line: 127, baseType: !106, size: 32, offset: 192)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5258, file: !156, line: 131, baseType: !5306, size: 192, offset: 256)
!5306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !5307)
!5307 = !{!5308, !5309, !5315}
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5306, file: !122, line: 245, baseType: !5264, size: 64)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5306, file: !122, line: 246, baseType: !5310, size: 32, offset: 64)
!5310 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !5311)
!5311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5312, size: 32)
!5312 = !DISubroutineType(types: !5313)
!5313 = !{null, !5314}
!5314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 32)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5306, file: !122, line: 249, baseType: !104, size: 64, offset: 128)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5255, file: !156, line: 250, baseType: !5317, size: 288, offset: 448)
!5317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !5318)
!5318 = !{!5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5317, file: !210, line: 26, baseType: !110, size: 32)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5317, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5317, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5317, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5317, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5317, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5317, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5317, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5317, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5255, file: !156, line: 253, baseType: !106, size: 32, offset: 736)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5255, file: !156, line: 256, baseType: !5286, size: 64, offset: 768)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5255, file: !156, line: 279, baseType: !224, size: 256, offset: 832)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5255, file: !156, line: 294, baseType: !109, size: 32, offset: 1088)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5255, file: !156, line: 300, baseType: !5333, size: 96, offset: 1120)
!5333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !5334)
!5334 = !{!5335, !5336, !5337}
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5333, file: !156, line: 153, baseType: !22, size: 32)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5333, file: !156, line: 162, baseType: !107, size: 32, offset: 32)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5333, file: !156, line: 168, baseType: !107, size: 32, offset: 64)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5255, file: !156, line: 325, baseType: !5339, size: 32, offset: 1216)
!5339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5340, size: 32)
!5340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 160, elements: !5341)
!5341 = !{!5342, !5348, !5349}
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5340, file: !118, line: 5074, baseType: !5343, size: 96)
!5343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !5344)
!5344 = !{!5345, !5346, !5347}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5343, file: !240, line: 57, baseType: !243, size: 32)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5343, file: !240, line: 58, baseType: !106, size: 32, offset: 32)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5343, file: !240, line: 59, baseType: !107, size: 32, offset: 64)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5340, file: !118, line: 5075, baseType: !5286, size: 64, offset: 96)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5340, file: !118, line: 5076, baseType: !5350, offset: 160)
!5350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5255, file: !156, line: 343, baseType: !5352, size: 64, offset: 1248)
!5352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !210, line: 60, size: 64, elements: !5353)
!5353 = !{!5354, !5355}
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5352, file: !210, line: 63, baseType: !110, size: 32)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5352, file: !210, line: 66, baseType: !110, size: 32, offset: 32)
!5356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5357, size: 32)
!5357 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3223, line: 44, baseType: !5358)
!5358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !5359)
!5359 = !{!5360}
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5358, file: !147, line: 48, baseType: !150, size: 8)
!5361 = !{!5362, !5363, !5364, !5365, !5366, !5367, !5368, !5369}
!5362 = !DILocalVariable(name: "thread", arg: 1, scope: !5250, file: !5251, line: 56, type: !5254)
!5363 = !DILocalVariable(name: "stack", arg: 2, scope: !5250, file: !5251, line: 56, type: !5356)
!5364 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5250, file: !5251, line: 57, type: !1134)
!5365 = !DILocalVariable(name: "entry", arg: 4, scope: !5250, file: !5251, line: 57, type: !3224)
!5366 = !DILocalVariable(name: "p1", arg: 5, scope: !5250, file: !5251, line: 58, type: !106)
!5367 = !DILocalVariable(name: "p2", arg: 6, scope: !5250, file: !5251, line: 58, type: !106)
!5368 = !DILocalVariable(name: "p3", arg: 7, scope: !5250, file: !5251, line: 58, type: !106)
!5369 = !DILocalVariable(name: "iframe", scope: !5250, file: !5251, line: 60, type: !2577)
!5370 = !DILocation(line: 0, scope: !5250)
!5371 = !DILocation(line: 85, column: 11, scope: !5250)
!5372 = !DILocation(line: 93, column: 10, scope: !5250)
!5373 = !DILocation(line: 98, column: 13, scope: !5250)
!5374 = !DILocation(line: 100, column: 15, scope: !5250)
!5375 = !DILocation(line: 100, column: 10, scope: !5250)
!5376 = !DILocation(line: 100, column: 13, scope: !5250)
!5377 = !DILocation(line: 101, column: 15, scope: !5250)
!5378 = !DILocation(line: 101, column: 10, scope: !5250)
!5379 = !DILocation(line: 101, column: 13, scope: !5250)
!5380 = !DILocation(line: 102, column: 15, scope: !5250)
!5381 = !DILocation(line: 102, column: 10, scope: !5250)
!5382 = !DILocation(line: 102, column: 13, scope: !5250)
!5383 = !DILocation(line: 103, column: 15, scope: !5250)
!5384 = !DILocation(line: 103, column: 10, scope: !5250)
!5385 = !DILocation(line: 103, column: 13, scope: !5250)
!5386 = !DILocation(line: 106, column: 10, scope: !5250)
!5387 = !DILocation(line: 106, column: 15, scope: !5250)
!5388 = !DILocation(line: 122, column: 29, scope: !5250)
!5389 = !DILocation(line: 122, column: 23, scope: !5250)
!5390 = !DILocation(line: 122, column: 27, scope: !5250)
!5391 = !DILocation(line: 123, column: 15, scope: !5250)
!5392 = !DILocation(line: 123, column: 23, scope: !5250)
!5393 = !DILocation(line: 143, column: 1, scope: !5250)
!5394 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5251, file: !5251, line: 385, type: !5395, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !5398)
!5395 = !DISubroutineType(types: !5396)
!5396 = !{!110, !5397, !5397}
!5397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!5398 = !{!5399, !5400, !5401, !5404}
!5399 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5394, file: !5251, line: 385, type: !5397)
!5400 = !DILocalVariable(name: "psp", arg: 2, scope: !5394, file: !5251, line: 385, type: !5397)
!5401 = !DILocalVariable(name: "thread", scope: !5394, file: !5251, line: 388, type: !5402)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 32)
!5403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5255)
!5404 = !DILocalVariable(name: "guard_len", scope: !5394, file: !5251, line: 405, type: !110)
!5405 = !DILocation(line: 0, scope: !5394)
!5406 = !DILocation(line: 388, column: 34, scope: !5394)
!5407 = !DILocation(line: 390, column: 13, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5394, file: !5251, line: 390, column: 6)
!5409 = !DILocation(line: 390, column: 6, scope: !5394)
!5410 = !DILocation(line: 438, column: 6, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5394, file: !5251, line: 438, column: 6)
!5412 = !DILocation(line: 438, column: 6, scope: !5394)
!5413 = !DILocation(line: 442, column: 3, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5411, file: !5251, line: 440, column: 22)
!5415 = !DILocation(line: 455, column: 1, scope: !5394)
!5416 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5251, file: !5251, line: 530, type: !5417, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !5419)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{null, !5254, !1134, !3224}
!5419 = !{!5420, !5421, !5422}
!5420 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5416, file: !5251, line: 530, type: !5254)
!5421 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5416, file: !5251, line: 530, type: !1134)
!5422 = !DILocalVariable(name: "_main", arg: 3, scope: !5416, file: !5251, line: 531, type: !3224)
!5423 = !DILocation(line: 0, scope: !5416)
!5424 = !DILocation(line: 535, column: 11, scope: !5416)
!5425 = !DILocation(line: 560, column: 2, scope: !5416)
!5426 = !DILocation(line: 576, column: 2, scope: !5416)
!5427 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5428 = !DILocation(line: 603, column: 2, scope: !5416)
!5429 = distinct !DISubprogram(name: "z_arm_fault", scope: !5430, file: !5430, line: 1036, type: !5431, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !5446)
!5430 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5431 = !DISubroutineType(types: !5432)
!5432 = !{null, !110, !110, !110, !5433}
!5433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5434, size: 32)
!5434 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !210, line: 37, baseType: !5435)
!5435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !5436)
!5436 = !{!5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445}
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5435, file: !210, line: 26, baseType: !110, size: 32)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5435, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5435, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5435, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5435, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5435, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5435, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5435, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5435, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!5446 = !{!5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456}
!5447 = !DILocalVariable(name: "msp", arg: 1, scope: !5429, file: !5430, line: 1036, type: !110)
!5448 = !DILocalVariable(name: "psp", arg: 2, scope: !5429, file: !5430, line: 1036, type: !110)
!5449 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5429, file: !5430, line: 1036, type: !110)
!5450 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5429, file: !5430, line: 1037, type: !5433)
!5451 = !DILocalVariable(name: "reason", scope: !5429, file: !5430, line: 1039, type: !110)
!5452 = !DILocalVariable(name: "fault", scope: !5429, file: !5430, line: 1040, type: !109)
!5453 = !DILocalVariable(name: "recoverable", scope: !5429, file: !5430, line: 1041, type: !315)
!5454 = !DILocalVariable(name: "nested_exc", scope: !5429, file: !5430, line: 1041, type: !315)
!5455 = !DILocalVariable(name: "esf", scope: !5429, file: !5430, line: 1042, type: !2645)
!5456 = !DILocalVariable(name: "esf_copy", scope: !5429, file: !5430, line: 1047, type: !2646)
!5457 = !DILocation(line: 0, scope: !5429)
!5458 = !DILocation(line: 1040, column: 19, scope: !5429)
!5459 = !DILocation(line: 1040, column: 24, scope: !5429)
!5460 = !DILocation(line: 1041, column: 2, scope: !5429)
!5461 = !DILocation(line: 1047, column: 2, scope: !5429)
!5462 = !DILocation(line: 1047, column: 15, scope: !5429)
!5463 = !DILocalVariable(name: "key", arg: 1, scope: !5464, file: !4955, line: 84, type: !32)
!5464 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4955, file: !4955, line: 84, type: !4966, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !5465)
!5465 = !{!5463}
!5466 = !DILocation(line: 0, scope: !5464, inlinedAt: !5467)
!5467 = distinct !DILocation(line: 1050, column: 2, scope: !5429)
!5468 = !DILocation(line: 95, column: 2, scope: !5464, inlinedAt: !5467)
!5469 = !{i64 2311026}
!5470 = !DILocation(line: 1055, column: 9, scope: !5429)
!5471 = !DILocation(line: 1063, column: 11, scope: !5429)
!5472 = !DILocation(line: 1064, column: 6, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5429, file: !5430, line: 1064, column: 6)
!5474 = !{i8 0, i8 2}
!5475 = !DILocation(line: 1064, column: 6, scope: !5429)
!5476 = !DILocation(line: 1070, column: 20, scope: !5429)
!5477 = !DILocation(line: 1070, column: 2, scope: !5429)
!5478 = !DILocation(line: 1089, column: 6, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5429, file: !5430, line: 1089, column: 6)
!5480 = !DILocation(line: 0, scope: !5479)
!5481 = !DILocation(line: 1089, column: 6, scope: !5429)
!5482 = !DILocation(line: 1090, column: 28, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5484, file: !5430, line: 1090, column: 7)
!5484 = distinct !DILexicalBlock(scope: !5479, file: !5430, line: 1089, column: 18)
!5485 = !DILocation(line: 1090, column: 44, scope: !5483)
!5486 = !DILocation(line: 1090, column: 7, scope: !5484)
!5487 = !DILocation(line: 1091, column: 24, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !5430, line: 1090, column: 50)
!5489 = !DILocation(line: 1092, column: 3, scope: !5488)
!5490 = !DILocation(line: 1094, column: 23, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5479, file: !5430, line: 1093, column: 9)
!5492 = !DILocation(line: 1097, column: 2, scope: !5429)
!5493 = !DILocation(line: 1098, column: 1, scope: !5429)
!5494 = distinct !DISubprogram(name: "get_esf", scope: !5430, file: !5430, line: 894, type: !5495, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !5498)
!5495 = !DISubroutineType(types: !5496)
!5496 = !{!2645, !110, !110, !110, !5497}
!5497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!5498 = !{!5499, !5500, !5501, !5502, !5503, !5504}
!5499 = !DILocalVariable(name: "msp", arg: 1, scope: !5494, file: !5430, line: 894, type: !110)
!5500 = !DILocalVariable(name: "psp", arg: 2, scope: !5494, file: !5430, line: 894, type: !110)
!5501 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5494, file: !5430, line: 894, type: !110)
!5502 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5494, file: !5430, line: 895, type: !5497)
!5503 = !DILocalVariable(name: "alternative_state_exc", scope: !5494, file: !5430, line: 897, type: !315)
!5504 = !DILocalVariable(name: "ptr_esf", scope: !5494, file: !5430, line: 898, type: !2645)
!5505 = !DILocation(line: 0, scope: !5494)
!5506 = !DILocation(line: 900, column: 14, scope: !5494)
!5507 = !DILocation(line: 902, column: 49, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5494, file: !5430, line: 902, column: 6)
!5509 = !DILocation(line: 902, column: 6, scope: !5494)
!5510 = !DILocation(line: 983, column: 18, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5494, file: !5430, line: 983, column: 6)
!5512 = !DILocation(line: 991, column: 7, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !5430, line: 990, column: 30)
!5514 = distinct !DILexicalBlock(scope: !5494, file: !5430, line: 990, column: 6)
!5515 = !DILocation(line: 998, column: 16, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5517, file: !5430, line: 995, column: 10)
!5517 = distinct !DILexicalBlock(scope: !5513, file: !5430, line: 991, column: 7)
!5518 = !DILocation(line: 1002, column: 2, scope: !5494)
!5519 = !DILocation(line: 1003, column: 1, scope: !5494)
!5520 = distinct !DISubprogram(name: "fault_handle", scope: !5430, file: !5430, line: 786, type: !5521, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !5523)
!5521 = !DISubroutineType(types: !5522)
!5522 = !{!110, !2645, !109, !5497}
!5523 = !{!5524, !5525, !5526, !5527}
!5524 = !DILocalVariable(name: "esf", arg: 1, scope: !5520, file: !5430, line: 786, type: !2645)
!5525 = !DILocalVariable(name: "fault", arg: 2, scope: !5520, file: !5430, line: 786, type: !109)
!5526 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5520, file: !5430, line: 786, type: !5497)
!5527 = !DILocalVariable(name: "reason", scope: !5520, file: !5430, line: 788, type: !110)
!5528 = !DILocation(line: 0, scope: !5520)
!5529 = !DILocation(line: 790, column: 15, scope: !5520)
!5530 = !DILocation(line: 792, column: 2, scope: !5520)
!5531 = !DILocation(line: 794, column: 12, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5520, file: !5430, line: 792, column: 17)
!5533 = !DILocation(line: 795, column: 3, scope: !5532)
!5534 = !DILocation(line: 800, column: 12, scope: !5532)
!5535 = !DILocation(line: 801, column: 3, scope: !5532)
!5536 = !DILocation(line: 803, column: 12, scope: !5532)
!5537 = !DILocation(line: 804, column: 3, scope: !5532)
!5538 = !DILocation(line: 806, column: 12, scope: !5532)
!5539 = !DILocation(line: 807, column: 3, scope: !5532)
!5540 = !DILocation(line: 814, column: 3, scope: !5532)
!5541 = !DILocation(line: 815, column: 3, scope: !5532)
!5542 = !DILocation(line: 829, column: 2, scope: !5520)
!5543 = distinct !DISubprogram(name: "hard_fault", scope: !5430, file: !5430, line: 709, type: !5544, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !5546)
!5544 = !DISubroutineType(types: !5545)
!5545 = !{!110, !2645, !5497}
!5546 = !{!5547, !5548, !5549}
!5547 = !DILocalVariable(name: "esf", arg: 1, scope: !5543, file: !5430, line: 709, type: !2645)
!5548 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5543, file: !5430, line: 709, type: !5497)
!5549 = !DILocalVariable(name: "reason", scope: !5543, file: !5430, line: 711, type: !110)
!5550 = !DILocation(line: 0, scope: !5543)
!5551 = !DILocation(line: 732, column: 15, scope: !5543)
!5552 = !DILocation(line: 734, column: 12, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5543, file: !5430, line: 734, column: 6)
!5554 = !DILocation(line: 734, column: 17, scope: !5553)
!5555 = !DILocation(line: 734, column: 41, scope: !5553)
!5556 = !DILocation(line: 734, column: 6, scope: !5543)
!5557 = !DILocation(line: 736, column: 19, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5553, file: !5430, line: 736, column: 13)
!5559 = !DILocation(line: 736, column: 49, scope: !5558)
!5560 = !DILocation(line: 736, column: 13, scope: !5553)
!5561 = !DILocation(line: 738, column: 19, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5558, file: !5430, line: 738, column: 13)
!5563 = !DILocation(line: 738, column: 24, scope: !5562)
!5564 = !DILocation(line: 738, column: 47, scope: !5562)
!5565 = !DILocation(line: 738, column: 13, scope: !5558)
!5566 = !DILocation(line: 740, column: 7, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5568, file: !5430, line: 740, column: 7)
!5568 = distinct !DILexicalBlock(scope: !5562, file: !5430, line: 738, column: 53)
!5569 = !DILocation(line: 740, column: 7, scope: !5568)
!5570 = !DILocation(line: 742, column: 24, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5567, file: !5430, line: 740, column: 38)
!5572 = !DILocation(line: 743, column: 3, scope: !5571)
!5573 = !DILocation(line: 743, column: 20, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5567, file: !5430, line: 743, column: 14)
!5575 = !DILocation(line: 743, column: 25, scope: !5574)
!5576 = !DILocation(line: 743, column: 52, scope: !5574)
!5577 = !DILocation(line: 743, column: 14, scope: !5567)
!5578 = !DILocation(line: 744, column: 13, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5574, file: !5430, line: 743, column: 58)
!5580 = !DILocation(line: 745, column: 3, scope: !5579)
!5581 = !DILocation(line: 745, column: 20, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5574, file: !5430, line: 745, column: 14)
!5583 = !DILocation(line: 745, column: 25, scope: !5582)
!5584 = !DILocation(line: 745, column: 52, scope: !5582)
!5585 = !DILocation(line: 745, column: 14, scope: !5574)
!5586 = !DILocation(line: 746, column: 13, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5582, file: !5430, line: 745, column: 58)
!5588 = !DILocation(line: 747, column: 3, scope: !5587)
!5589 = !DILocation(line: 747, column: 20, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5582, file: !5430, line: 747, column: 14)
!5591 = !DILocation(line: 747, column: 52, scope: !5590)
!5592 = !DILocation(line: 747, column: 14, scope: !5582)
!5593 = !DILocation(line: 748, column: 13, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5590, file: !5430, line: 747, column: 58)
!5595 = !DILocation(line: 753, column: 3, scope: !5594)
!5596 = !DILocation(line: 766, column: 2, scope: !5543)
!5597 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5430, file: !5430, line: 229, type: !5521, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !5598)
!5598 = !{!5599, !5600, !5601, !5602, !5603, !5604, !5607}
!5599 = !DILocalVariable(name: "esf", arg: 1, scope: !5597, file: !5430, line: 229, type: !2645)
!5600 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5597, file: !5430, line: 229, type: !109)
!5601 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5597, file: !5430, line: 230, type: !5497)
!5602 = !DILocalVariable(name: "reason", scope: !5597, file: !5430, line: 232, type: !110)
!5603 = !DILocalVariable(name: "mmfar", scope: !5597, file: !5430, line: 233, type: !110)
!5604 = !DILocalVariable(name: "temp", scope: !5605, file: !5430, line: 254, type: !110)
!5605 = distinct !DILexicalBlock(scope: !5606, file: !5430, line: 244, column: 48)
!5606 = distinct !DILexicalBlock(scope: !5597, file: !5430, line: 244, column: 6)
!5607 = !DILocalVariable(name: "min_stack_ptr", scope: !5608, file: !5430, line: 309, type: !110)
!5608 = distinct !DILexicalBlock(scope: !5609, file: !5430, line: 308, column: 43)
!5609 = distinct !DILexicalBlock(scope: !5610, file: !5430, line: 308, column: 7)
!5610 = distinct !DILexicalBlock(scope: !5611, file: !5430, line: 289, column: 40)
!5611 = distinct !DILexicalBlock(scope: !5597, file: !5430, line: 288, column: 6)
!5612 = !DILocation(line: 0, scope: !5597)
!5613 = !DILocation(line: 237, column: 12, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5597, file: !5430, line: 237, column: 6)
!5615 = !DILocation(line: 241, column: 12, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5597, file: !5430, line: 241, column: 6)
!5617 = !DILocation(line: 244, column: 12, scope: !5606)
!5618 = !DILocation(line: 244, column: 17, scope: !5606)
!5619 = !DILocation(line: 244, column: 42, scope: !5606)
!5620 = !DILocation(line: 244, column: 6, scope: !5597)
!5621 = !DILocation(line: 254, column: 24, scope: !5605)
!5622 = !DILocation(line: 0, scope: !5605)
!5623 = !DILocation(line: 256, column: 13, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5605, file: !5430, line: 256, column: 7)
!5625 = !DILocation(line: 256, column: 18, scope: !5624)
!5626 = !DILocation(line: 256, column: 44, scope: !5624)
!5627 = !DILocation(line: 256, column: 7, scope: !5605)
!5628 = !DILocation(line: 259, column: 24, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5630, file: !5430, line: 259, column: 8)
!5630 = distinct !DILexicalBlock(scope: !5624, file: !5430, line: 256, column: 50)
!5631 = !DILocation(line: 259, column: 8, scope: !5630)
!5632 = !DILocation(line: 261, column: 15, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5629, file: !5430, line: 259, column: 30)
!5634 = !DILocation(line: 262, column: 4, scope: !5633)
!5635 = !DILocation(line: 265, column: 12, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5597, file: !5430, line: 265, column: 6)
!5637 = !DILocation(line: 269, column: 12, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5597, file: !5430, line: 269, column: 6)
!5639 = !DILocation(line: 288, column: 12, scope: !5611)
!5640 = !DILocation(line: 288, column: 17, scope: !5611)
!5641 = !DILocation(line: 288, column: 41, scope: !5611)
!5642 = !DILocation(line: 289, column: 9, scope: !5611)
!5643 = !DILocation(line: 289, column: 14, scope: !5611)
!5644 = !DILocation(line: 288, column: 6, scope: !5597)
!5645 = !DILocation(line: 308, column: 12, scope: !5609)
!5646 = !DILocation(line: 308, column: 17, scope: !5609)
!5647 = !DILocation(line: 308, column: 7, scope: !5610)
!5648 = !DILocation(line: 310, column: 6, scope: !5608)
!5649 = !DILocation(line: 309, column: 29, scope: !5608)
!5650 = !DILocation(line: 0, scope: !5608)
!5651 = !DILocation(line: 312, column: 8, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5608, file: !5430, line: 312, column: 8)
!5653 = !DILocation(line: 312, column: 8, scope: !5608)
!5654 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5655, file: !5129, line: 1099, type: !110)
!5655 = distinct !DISubprogram(name: "__set_PSP", scope: !5129, file: !5129, line: 1099, type: !3146, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !5656)
!5656 = !{!5654}
!5657 = !DILocation(line: 0, scope: !5655, inlinedAt: !5658)
!5658 = distinct !DILocation(line: 338, column: 5, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5652, file: !5430, line: 312, column: 23)
!5660 = !DILocation(line: 1101, column: 3, scope: !5655, inlinedAt: !5658)
!5661 = !{i64 3758250}
!5662 = !DILocation(line: 341, column: 4, scope: !5659)
!5663 = !DILocation(line: 360, column: 12, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5597, file: !5430, line: 360, column: 6)
!5665 = !DILocation(line: 360, column: 17, scope: !5664)
!5666 = !DILocation(line: 360, column: 41, scope: !5664)
!5667 = !DILocation(line: 360, column: 6, scope: !5597)
!5668 = !DILocation(line: 361, column: 14, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5664, file: !5430, line: 360, column: 47)
!5670 = !DILocation(line: 362, column: 2, scope: !5669)
!5671 = !DILocation(line: 366, column: 12, scope: !5597)
!5672 = !DILocation(line: 369, column: 15, scope: !5597)
!5673 = !DILocation(line: 371, column: 2, scope: !5597)
!5674 = distinct !DISubprogram(name: "bus_fault", scope: !5430, file: !5430, line: 383, type: !5675, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !5677)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{!109, !2645, !109, !5497}
!5677 = !{!5678, !5679, !5680, !5681, !5682}
!5678 = !DILocalVariable(name: "esf", arg: 1, scope: !5674, file: !5430, line: 383, type: !2645)
!5679 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5674, file: !5430, line: 383, type: !109)
!5680 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5674, file: !5430, line: 383, type: !5497)
!5681 = !DILocalVariable(name: "reason", scope: !5674, file: !5430, line: 385, type: !110)
!5682 = !DILocalVariable(name: "bfar", scope: !5683, file: !5430, line: 405, type: !110)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !5430, line: 395, column: 42)
!5684 = distinct !DILexicalBlock(scope: !5674, file: !5430, line: 395, column: 6)
!5685 = !DILocation(line: 0, scope: !5674)
!5686 = !DILocation(line: 389, column: 11, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5674, file: !5430, line: 389, column: 6)
!5688 = !DILocation(line: 392, column: 11, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5674, file: !5430, line: 392, column: 6)
!5690 = !DILocation(line: 395, column: 11, scope: !5684)
!5691 = !DILocation(line: 395, column: 16, scope: !5684)
!5692 = !DILocation(line: 395, column: 6, scope: !5674)
!5693 = !DILocation(line: 405, column: 3, scope: !5683)
!5694 = !DILocation(line: 0, scope: !5683)
!5695 = !DILocation(line: 407, column: 13, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5683, file: !5430, line: 407, column: 7)
!5697 = !DILocation(line: 407, column: 18, scope: !5696)
!5698 = !DILocation(line: 407, column: 44, scope: !5696)
!5699 = !DILocation(line: 407, column: 7, scope: !5683)
!5700 = !DILocation(line: 411, column: 15, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5702, file: !5430, line: 409, column: 30)
!5702 = distinct !DILexicalBlock(scope: !5703, file: !5430, line: 409, column: 8)
!5703 = distinct !DILexicalBlock(scope: !5696, file: !5430, line: 407, column: 50)
!5704 = !DILocation(line: 412, column: 4, scope: !5701)
!5705 = !DILocation(line: 415, column: 11, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5674, file: !5430, line: 415, column: 6)
!5707 = !DILocation(line: 418, column: 12, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5674, file: !5430, line: 418, column: 6)
!5709 = !DILocation(line: 418, column: 17, scope: !5708)
!5710 = !DILocation(line: 418, column: 41, scope: !5708)
!5711 = !DILocation(line: 418, column: 6, scope: !5674)
!5712 = !DILocation(line: 423, column: 18, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5708, file: !5430, line: 423, column: 13)
!5714 = !DILocation(line: 524, column: 12, scope: !5674)
!5715 = !DILocation(line: 526, column: 15, scope: !5674)
!5716 = !DILocation(line: 528, column: 2, scope: !5674)
!5717 = distinct !DISubprogram(name: "usage_fault", scope: !5430, file: !5430, line: 539, type: !5718, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !5722)
!5718 = !DISubroutineType(types: !5719)
!5719 = !{!110, !5720}
!5720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5721, size: 32)
!5721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2646)
!5722 = !{!5723, !5724}
!5723 = !DILocalVariable(name: "esf", arg: 1, scope: !5717, file: !5430, line: 539, type: !5720)
!5724 = !DILocalVariable(name: "reason", scope: !5717, file: !5430, line: 541, type: !110)
!5725 = !DILocation(line: 0, scope: !5717)
!5726 = !DILocation(line: 546, column: 12, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5717, file: !5430, line: 546, column: 6)
!5728 = !DILocation(line: 549, column: 12, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5717, file: !5430, line: 549, column: 6)
!5730 = !DILocation(line: 567, column: 12, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5717, file: !5430, line: 567, column: 6)
!5732 = !DILocation(line: 570, column: 12, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5717, file: !5430, line: 570, column: 6)
!5734 = !DILocation(line: 573, column: 12, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5717, file: !5430, line: 573, column: 6)
!5736 = !DILocation(line: 576, column: 12, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5717, file: !5430, line: 576, column: 6)
!5738 = !DILocation(line: 581, column: 12, scope: !5717)
!5739 = !DILocation(line: 583, column: 2, scope: !5717)
!5740 = distinct !DISubprogram(name: "debug_monitor", scope: !5430, file: !5430, line: 632, type: !5741, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !5743)
!5741 = !DISubroutineType(types: !5742)
!5742 = !{null, !2645, !5497}
!5743 = !{!5744, !5745}
!5744 = !DILocalVariable(name: "esf", arg: 1, scope: !5740, file: !5430, line: 632, type: !2645)
!5745 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5740, file: !5430, line: 632, type: !5497)
!5746 = !DILocation(line: 0, scope: !5740)
!5747 = !DILocation(line: 634, column: 15, scope: !5740)
!5748 = !DILocation(line: 652, column: 1, scope: !5740)
!5749 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5430, file: !5430, line: 658, type: !5750, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !5752)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{!315, !2645}
!5752 = !{!5753, !5754, !5755}
!5753 = !DILocalVariable(name: "esf", arg: 1, scope: !5749, file: !5430, line: 658, type: !2645)
!5754 = !DILocalVariable(name: "ret_addr", scope: !5749, file: !5430, line: 660, type: !2688)
!5755 = !DILocalVariable(name: "fault_insn", scope: !5749, file: !5430, line: 686, type: !192)
!5756 = !DILocation(line: 0, scope: !5749)
!5757 = !DILocation(line: 660, column: 46, scope: !5749)
!5758 = !DILocation(line: 660, column: 23, scope: !5749)
!5759 = !DILocation(line: 682, column: 11, scope: !5749)
!5760 = !DILocation(line: 271, column: 3, scope: !5761, inlinedAt: !5762)
!5761 = distinct !DISubprogram(name: "__DSB", scope: !5129, file: !5129, line: 269, type: !2980, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !251)
!5762 = distinct !DILocation(line: 683, column: 2, scope: !5749)
!5763 = !{i64 3734385}
!5764 = !DILocation(line: 260, column: 3, scope: !5765, inlinedAt: !5766)
!5765 = distinct !DISubprogram(name: "__ISB", scope: !5129, file: !5129, line: 258, type: !2980, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !251)
!5766 = distinct !DILocation(line: 684, column: 2, scope: !5749)
!5767 = !{i64 3734102}
!5768 = !DILocation(line: 686, column: 35, scope: !5749)
!5769 = !DILocation(line: 686, column: 24, scope: !5749)
!5770 = !DILocation(line: 688, column: 11, scope: !5749)
!5771 = !DILocation(line: 271, column: 3, scope: !5761, inlinedAt: !5772)
!5772 = distinct !DILocation(line: 689, column: 2, scope: !5749)
!5773 = !DILocation(line: 260, column: 3, scope: !5765, inlinedAt: !5774)
!5774 = distinct !DILocation(line: 690, column: 2, scope: !5749)
!5775 = !DILocation(line: 693, column: 45, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5749, file: !5430, line: 693, column: 6)
!5777 = !DILocation(line: 699, column: 1, scope: !5749)
!5778 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5430, file: !5430, line: 1107, type: !2980, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !251)
!5779 = !DILocation(line: 1111, column: 11, scope: !5778)
!5780 = !DILocation(line: 1136, column: 1, scope: !5778)
!5781 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5782, file: !5782, line: 26, type: !2980, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5783)
!5782 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5783 = !{!5784}
!5784 = !DILocalVariable(name: "irq", scope: !5781, file: !5782, line: 28, type: !109)
!5785 = !DILocation(line: 0, scope: !5781)
!5786 = !DILocation(line: 30, column: 2, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5781, file: !5782, line: 30, column: 2)
!5788 = !DILocation(line: 31, column: 3, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5790, file: !5782, line: 30, column: 39)
!5790 = distinct !DILexicalBlock(scope: !5787, file: !5782, line: 30, column: 2)
!5791 = !DILocation(line: 30, column: 35, scope: !5790)
!5792 = !DILocation(line: 30, column: 13, scope: !5790)
!5793 = distinct !{!5793, !5786, !5794}
!5794 = !DILocation(line: 32, column: 2, scope: !5787)
!5795 = !DILocation(line: 33, column: 1, scope: !5781)
!5796 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !5163, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5797)
!5797 = !{!5798, !5799}
!5798 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5796, file: !495, line: 1814, type: !760)
!5799 = !DILocalVariable(name: "priority", arg: 2, scope: !5796, file: !495, line: 1814, type: !110)
!5800 = !DILocation(line: 0, scope: !5796)
!5801 = !DILocation(line: 1816, column: 7, scope: !5796)
!5802 = !DILocation(line: 0, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5796, file: !495, line: 1816, column: 7)
!5804 = !DILocation(line: 1824, column: 1, scope: !5796)
!5805 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5806, file: !5806, line: 27, type: !5807, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !5912)
!5806 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5807 = !DISubroutineType(types: !5808)
!5808 = !{null, !5809}
!5809 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !5810)
!5810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5811, size: 32)
!5811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1344, elements: !5812)
!5812 = !{!5813, !5872, !5884, !5885, !5886, !5887, !5888, !5894, !5907}
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5811, file: !156, line: 247, baseType: !5814, size: 448)
!5814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 448, elements: !5815)
!5815 = !{!5816, !5840, !5847, !5848, !5849, !5858, !5859, !5860, !5861}
!5816 = !DIDerivedType(tag: DW_TAG_member, scope: !5814, file: !156, line: 60, baseType: !5817, size: 64)
!5817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5814, file: !156, line: 60, size: 64, elements: !5818)
!5818 = !{!5819, !5834}
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5817, file: !156, line: 61, baseType: !5820, size: 64)
!5820 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !5821)
!5821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !5822)
!5822 = !{!5823, !5829}
!5823 = !DIDerivedType(tag: DW_TAG_member, scope: !5821, file: !127, line: 38, baseType: !5824, size: 32)
!5824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5821, file: !127, line: 38, size: 32, elements: !5825)
!5825 = !{!5826, !5828}
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5824, file: !127, line: 39, baseType: !5827, size: 32)
!5827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5821, size: 32)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5824, file: !127, line: 40, baseType: !5827, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, scope: !5821, file: !127, line: 42, baseType: !5830, size: 32, offset: 32)
!5830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5821, file: !127, line: 42, size: 32, elements: !5831)
!5831 = !{!5832, !5833}
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5830, file: !127, line: 43, baseType: !5827, size: 32)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5830, file: !127, line: 44, baseType: !5827, size: 32)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5817, file: !156, line: 62, baseType: !5835, size: 64)
!5835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !5836)
!5836 = !{!5837}
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5835, file: !168, line: 50, baseType: !5838, size: 64)
!5838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5839, size: 64, elements: !173)
!5839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5835, size: 32)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5814, file: !156, line: 68, baseType: !5841, size: 32, offset: 64)
!5841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5842, size: 32)
!5842 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !5843)
!5843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !5844)
!5844 = !{!5845}
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5843, file: !122, line: 232, baseType: !5846, size: 64)
!5846 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !5821)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5814, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5814, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!5849 = !DIDerivedType(tag: DW_TAG_member, scope: !5814, file: !156, line: 90, baseType: !5850, size: 16, offset: 112)
!5850 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5814, file: !156, line: 90, size: 16, elements: !5851)
!5851 = !{!5852, !5857}
!5852 = !DIDerivedType(tag: DW_TAG_member, scope: !5850, file: !156, line: 91, baseType: !5853, size: 16)
!5853 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5850, file: !156, line: 91, size: 16, elements: !5854)
!5854 = !{!5855, !5856}
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5853, file: !156, line: 96, baseType: !188, size: 8)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5853, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5850, file: !156, line: 100, baseType: !192, size: 16)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5814, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_mask", scope: !5814, file: !156, line: 123, baseType: !178, size: 8, offset: 160)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5814, file: !156, line: 127, baseType: !106, size: 32, offset: 192)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5814, file: !156, line: 131, baseType: !5862, size: 192, offset: 256)
!5862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !5863)
!5863 = !{!5864, !5865, !5871}
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5862, file: !122, line: 245, baseType: !5820, size: 64)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5862, file: !122, line: 246, baseType: !5866, size: 32, offset: 64)
!5866 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !5867)
!5867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5868, size: 32)
!5868 = !DISubroutineType(types: !5869)
!5869 = !{null, !5870}
!5870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5862, size: 32)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5862, file: !122, line: 249, baseType: !104, size: 64, offset: 128)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5811, file: !156, line: 250, baseType: !5873, size: 288, offset: 448)
!5873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !5874)
!5874 = !{!5875, !5876, !5877, !5878, !5879, !5880, !5881, !5882, !5883}
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5873, file: !210, line: 26, baseType: !110, size: 32)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5873, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5873, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5873, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5873, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5873, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5873, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5873, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5873, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5811, file: !156, line: 253, baseType: !106, size: 32, offset: 736)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5811, file: !156, line: 256, baseType: !5842, size: 64, offset: 768)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5811, file: !156, line: 279, baseType: !224, size: 256, offset: 832)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5811, file: !156, line: 294, baseType: !109, size: 32, offset: 1088)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5811, file: !156, line: 300, baseType: !5889, size: 96, offset: 1120)
!5889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !5890)
!5890 = !{!5891, !5892, !5893}
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5889, file: !156, line: 153, baseType: !22, size: 32)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5889, file: !156, line: 162, baseType: !107, size: 32, offset: 32)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5889, file: !156, line: 168, baseType: !107, size: 32, offset: 64)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5811, file: !156, line: 325, baseType: !5895, size: 32, offset: 1216)
!5895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5896, size: 32)
!5896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 160, elements: !5897)
!5897 = !{!5898, !5904, !5905}
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5896, file: !118, line: 5074, baseType: !5899, size: 96)
!5899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !5900)
!5900 = !{!5901, !5902, !5903}
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5899, file: !240, line: 57, baseType: !243, size: 32)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5899, file: !240, line: 58, baseType: !106, size: 32, offset: 32)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5899, file: !240, line: 59, baseType: !107, size: 32, offset: 64)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5896, file: !118, line: 5075, baseType: !5842, size: 64, offset: 96)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5896, file: !118, line: 5076, baseType: !5906, offset: 160)
!5906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5811, file: !156, line: 343, baseType: !5908, size: 64, offset: 1248)
!5908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !210, line: 60, size: 64, elements: !5909)
!5909 = !{!5910, !5911}
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5908, file: !210, line: 63, baseType: !110, size: 32)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5908, file: !210, line: 66, baseType: !110, size: 32, offset: 32)
!5912 = !{!5913}
!5913 = !DILocalVariable(name: "thread", arg: 1, scope: !5805, file: !5806, line: 27, type: !5809)
!5914 = !DILocation(line: 0, scope: !5805)
!5915 = !DILocation(line: 29, column: 6, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5805, file: !5806, line: 29, column: 6)
!5917 = !DILocation(line: 29, column: 15, scope: !5916)
!5918 = !DILocation(line: 29, column: 6, scope: !5805)
!5919 = !DILocation(line: 1031, column: 3, scope: !5920, inlinedAt: !5923)
!5920 = distinct !DISubprogram(name: "__get_IPSR", scope: !5129, file: !5129, line: 1027, type: !5210, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !5921)
!5921 = !{!5922}
!5922 = !DILocalVariable(name: "result", scope: !5920, file: !5129, line: 1029, type: !110)
!5923 = distinct !DILocation(line: 48, column: 10, scope: !5924, inlinedAt: !5928)
!5924 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5925, file: !5925, line: 46, type: !5926, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !251)
!5925 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5926 = !DISubroutineType(types: !5927)
!5927 = !{!315}
!5928 = distinct !DILocation(line: 30, column: 7, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5930, file: !5806, line: 30, column: 7)
!5930 = distinct !DILexicalBlock(scope: !5916, file: !5806, line: 29, column: 26)
!5931 = !{i64 3723233}
!5932 = !DILocation(line: 0, scope: !5920, inlinedAt: !5923)
!5933 = !DILocation(line: 48, column: 9, scope: !5924, inlinedAt: !5928)
!5934 = !DILocation(line: 30, column: 7, scope: !5930)
!5935 = !DILocation(line: 42, column: 14, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5929, file: !5806, line: 30, column: 25)
!5937 = !DILocation(line: 48, column: 15, scope: !5936)
!5938 = !DILocation(line: 49, column: 3, scope: !5936)
!5939 = !DILocation(line: 52, column: 2, scope: !5805)
!5940 = !DILocation(line: 53, column: 1, scope: !5805)
!5941 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !362, file: !362, line: 127, type: !2980, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !355, retainedNodes: !251)
!5942 = !DILocation(line: 134, column: 2, scope: !5941)
!5943 = !DILocation(line: 156, column: 1, scope: !5941)
!5944 = !DILocation(line: 0, scope: !361)
!5945 = !DILocation(line: 289, column: 36, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !361, file: !362, line: 285, column: 2)
!5947 = !DILocation(line: 289, column: 42, scope: !5946)
!5948 = !DILocation(line: 300, column: 36, scope: !361)
!5949 = !DILocation(line: 301, column: 35, scope: !361)
!5950 = !DILocation(line: 302, column: 37, scope: !361)
!5951 = !DILocation(line: 311, column: 2, scope: !361)
!5952 = !DILocation(line: 316, column: 1, scope: !361)
!5953 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !523, file: !523, line: 180, type: !2980, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !251)
!5954 = !DILocation(line: 188, column: 12, scope: !5953)
!5955 = !DILocation(line: 271, column: 3, scope: !5956, inlinedAt: !5957)
!5956 = distinct !DISubprogram(name: "__DSB", scope: !5129, file: !5129, line: 269, type: !2980, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !251)
!5957 = distinct !DILocation(line: 192, column: 2, scope: !5953)
!5958 = !{i64 3911135}
!5959 = !DILocation(line: 260, column: 3, scope: !5960, inlinedAt: !5961)
!5960 = distinct !DISubprogram(name: "__ISB", scope: !5129, file: !5129, line: 258, type: !2980, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !251)
!5961 = distinct !DILocation(line: 193, column: 2, scope: !5953)
!5962 = !{i64 3910852}
!5963 = !DILocation(line: 194, column: 1, scope: !5953)
!5964 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !523, file: !523, line: 199, type: !2980, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !251)
!5965 = !DILocation(line: 282, column: 3, scope: !5966, inlinedAt: !5967)
!5966 = distinct !DISubprogram(name: "__DMB", scope: !5129, file: !5129, line: 280, type: !2980, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !251)
!5967 = distinct !DILocation(line: 202, column: 2, scope: !5964)
!5968 = !{i64 3911411}
!5969 = !DILocation(line: 205, column: 12, scope: !5964)
!5970 = !DILocation(line: 206, column: 1, scope: !5964)
!5971 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !523, file: !523, line: 275, type: !5972, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !5985)
!5972 = !DISubroutineType(types: !5973)
!5973 = !{null, !5974, !1840, !5397, !5397}
!5974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5975, size: 32)
!5975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5976)
!5976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !474, line: 52, size: 96, elements: !5977)
!5977 = !{!5978, !5979, !5980}
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5976, file: !474, line: 53, baseType: !22, size: 32)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5976, file: !474, line: 54, baseType: !107, size: 32, offset: 32)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5976, file: !474, line: 55, baseType: !5981, size: 32, offset: 64)
!5981 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !480, line: 151, baseType: !5982)
!5982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 149, size: 32, elements: !5983)
!5983 = !{!5984}
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !5982, file: !480, line: 150, baseType: !110, size: 32)
!5985 = !{!5986, !5987, !5988, !5989}
!5986 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5971, file: !523, line: 276, type: !5974)
!5987 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5971, file: !523, line: 276, type: !1840)
!5988 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !5971, file: !523, line: 277, type: !5397)
!5989 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5971, file: !523, line: 277, type: !5397)
!5990 = !DILocation(line: 0, scope: !5971)
!5991 = !DILocation(line: 279, column: 6, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5971, file: !523, line: 279, column: 6)
!5993 = !DILocation(line: 285, column: 1, scope: !5971)
!5994 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !5995, file: !5995, line: 220, type: !5996, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !5998)
!5995 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5996 = !DISubroutineType(types: !5997)
!5997 = !{!109, !5974, !1840, !5397, !5397}
!5998 = !{!5999, !6000, !6001, !6002, !6003}
!5999 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5994, file: !5995, line: 221, type: !5974)
!6000 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5994, file: !5995, line: 221, type: !1840)
!6001 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !5994, file: !5995, line: 222, type: !5397)
!6002 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5994, file: !5995, line: 223, type: !5397)
!6003 = !DILocalVariable(name: "mpu_reg_index", scope: !5994, file: !5995, line: 225, type: !109)
!6004 = !DILocation(line: 0, scope: !5994)
!6005 = !DILocation(line: 225, column: 22, scope: !5994)
!6006 = !DILocation(line: 233, column: 18, scope: !5994)
!6007 = !DILocation(line: 236, column: 23, scope: !5994)
!6008 = !DILocation(line: 236, column: 21, scope: !5994)
!6009 = !DILocation(line: 238, column: 2, scope: !5994)
!6010 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !523, file: !523, line: 105, type: !6011, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6013)
!6011 = !DISubroutineType(types: !6012)
!6012 = !{!109, !5974, !178, !178, !315}
!6013 = !{!6014, !6015, !6016, !6017, !6018, !6019}
!6014 = !DILocalVariable(name: "regions", arg: 1, scope: !6010, file: !523, line: 106, type: !5974)
!6015 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6010, file: !523, line: 106, type: !178)
!6016 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6010, file: !523, line: 106, type: !178)
!6017 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6010, file: !523, line: 107, type: !315)
!6018 = !DILocalVariable(name: "i", scope: !6010, file: !523, line: 109, type: !109)
!6019 = !DILocalVariable(name: "reg_index", scope: !6010, file: !523, line: 110, type: !109)
!6020 = !DILocation(line: 0, scope: !6010)
!6021 = !DILocation(line: 110, column: 18, scope: !6010)
!6022 = !DILocation(line: 112, column: 16, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6024, file: !523, line: 112, column: 2)
!6024 = distinct !DILexicalBlock(scope: !6010, file: !523, line: 112, column: 2)
!6025 = !DILocation(line: 112, column: 2, scope: !6024)
!6026 = !DILocation(line: 113, column: 7, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6028, file: !523, line: 113, column: 7)
!6028 = distinct !DILexicalBlock(scope: !6023, file: !523, line: 112, column: 36)
!6029 = !DILocation(line: 113, column: 18, scope: !6027)
!6030 = !DILocation(line: 113, column: 23, scope: !6027)
!6031 = !DILocation(line: 113, column: 7, scope: !6028)
!6032 = !DILocation(line: 118, column: 23, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6028, file: !523, line: 118, column: 7)
!6034 = !DILocation(line: 119, column: 7, scope: !6033)
!6035 = !DILocation(line: 118, column: 7, scope: !6028)
!6036 = !DILocation(line: 124, column: 36, scope: !6028)
!6037 = !DILocation(line: 124, column: 15, scope: !6028)
!6038 = !DILocation(line: 126, column: 17, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6028, file: !523, line: 126, column: 7)
!6040 = !DILocation(line: 126, column: 7, scope: !6028)
!6041 = !DILocation(line: 131, column: 12, scope: !6028)
!6042 = !DILocation(line: 132, column: 2, scope: !6028)
!6043 = !DILocation(line: 112, column: 32, scope: !6023)
!6044 = distinct !{!6044, !6025, !6045}
!6045 = !DILocation(line: 132, column: 2, scope: !6024)
!6046 = !DILocation(line: 135, column: 1, scope: !6010)
!6047 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !5995, file: !5995, line: 63, type: !6048, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6050)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{!109, !5974}
!6050 = !{!6051, !6052}
!6051 = !DILocalVariable(name: "part", arg: 1, scope: !6047, file: !5995, line: 63, type: !5974)
!6052 = !DILocalVariable(name: "partition_is_valid", scope: !6047, file: !5995, line: 70, type: !109)
!6053 = !DILocation(line: 0, scope: !6047)
!6054 = !DILocation(line: 71, column: 11, scope: !6047)
!6055 = !DILocation(line: 71, column: 37, scope: !6047)
!6056 = !{i32 0, i32 33}
!6057 = !DILocation(line: 72, column: 3, scope: !6047)
!6058 = !DILocation(line: 71, column: 30, scope: !6047)
!6059 = !DILocation(line: 75, column: 11, scope: !6047)
!6060 = !DILocation(line: 75, column: 17, scope: !6047)
!6061 = !DILocation(line: 75, column: 38, scope: !6047)
!6062 = !DILocation(line: 77, column: 2, scope: !6047)
!6063 = distinct !DISubprogram(name: "mpu_configure_region", scope: !523, file: !523, line: 79, type: !6064, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6066)
!6064 = !DISubroutineType(types: !6065)
!6065 = !{!109, !1840, !5974}
!6066 = !{!6067, !6068, !6069}
!6067 = !DILocalVariable(name: "index", arg: 1, scope: !6063, file: !523, line: 79, type: !1840)
!6068 = !DILocalVariable(name: "new_region", arg: 2, scope: !6063, file: !523, line: 80, type: !5974)
!6069 = !DILocalVariable(name: "region_conf", scope: !6063, file: !523, line: 82, type: !512)
!6070 = !DILocation(line: 0, scope: !6063)
!6071 = !DILocation(line: 82, column: 2, scope: !6063)
!6072 = !DILocation(line: 82, column: 24, scope: !6063)
!6073 = !DILocation(line: 87, column: 33, scope: !6063)
!6074 = !DILocation(line: 87, column: 14, scope: !6063)
!6075 = !DILocation(line: 87, column: 19, scope: !6063)
!6076 = !DILocation(line: 91, column: 55, scope: !6063)
!6077 = !DILocation(line: 92, column: 16, scope: !6063)
!6078 = !DILocation(line: 92, column: 53, scope: !6063)
!6079 = !DILocation(line: 91, column: 2, scope: !6063)
!6080 = !DILocation(line: 95, column: 9, scope: !6063)
!6081 = !DILocation(line: 97, column: 1, scope: !6063)
!6082 = !DILocation(line: 95, column: 2, scope: !6063)
!6083 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !5995, file: !5995, line: 113, type: !6084, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6089)
!6084 = !DISubroutineType(types: !6085)
!6085 = !{null, !6086, !6087, !110, !110}
!6086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 32)
!6087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6088, size: 32)
!6088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5981)
!6089 = !{!6090, !6091, !6092, !6093}
!6090 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6083, file: !5995, line: 114, type: !6086)
!6091 = !DILocalVariable(name: "attr", arg: 2, scope: !6083, file: !5995, line: 115, type: !6087)
!6092 = !DILocalVariable(name: "base", arg: 3, scope: !6083, file: !5995, line: 115, type: !110)
!6093 = !DILocalVariable(name: "size", arg: 4, scope: !6083, file: !5995, line: 115, type: !110)
!6094 = !DILocation(line: 0, scope: !6083)
!6095 = !DILocation(line: 127, column: 23, scope: !6083)
!6096 = !DILocation(line: 127, column: 35, scope: !6083)
!6097 = !DILocation(line: 127, column: 33, scope: !6083)
!6098 = !DILocation(line: 127, column: 10, scope: !6083)
!6099 = !DILocation(line: 127, column: 15, scope: !6083)
!6100 = !DILocation(line: 129, column: 1, scope: !6083)
!6101 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !523, file: !523, line: 57, type: !6102, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6104)
!6102 = !DISubroutineType(types: !6103)
!6103 = !{!109, !1840, !510}
!6104 = !{!6105, !6106}
!6105 = !DILocalVariable(name: "index", arg: 1, scope: !6101, file: !523, line: 57, type: !1840)
!6106 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6101, file: !523, line: 58, type: !510)
!6107 = !DILocation(line: 0, scope: !6101)
!6108 = !DILocation(line: 61, column: 6, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6101, file: !523, line: 61, column: 6)
!6110 = !DILocation(line: 61, column: 12, scope: !6109)
!6111 = !DILocation(line: 61, column: 6, scope: !6101)
!6112 = !DILocation(line: 71, column: 2, scope: !6101)
!6113 = !DILocation(line: 73, column: 2, scope: !6101)
!6114 = !DILocation(line: 74, column: 1, scope: !6101)
!6115 = distinct !DISubprogram(name: "region_init", scope: !5995, file: !5995, line: 29, type: !6116, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6118)
!6116 = !DISubroutineType(types: !6117)
!6117 = !{null, !5397, !510}
!6118 = !{!6119, !6120}
!6119 = !DILocalVariable(name: "index", arg: 1, scope: !6115, file: !5995, line: 29, type: !5397)
!6120 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6115, file: !5995, line: 30, type: !510)
!6121 = !DILocation(line: 0, scope: !6115)
!6122 = !DILocation(line: 33, column: 2, scope: !6115)
!6123 = !DILocation(line: 47, column: 28, scope: !6115)
!6124 = !DILocation(line: 47, column: 33, scope: !6115)
!6125 = !DILocation(line: 48, column: 26, scope: !6115)
!6126 = !DILocation(line: 47, column: 12, scope: !6115)
!6127 = !DILocation(line: 49, column: 32, scope: !6115)
!6128 = !DILocation(line: 49, column: 37, scope: !6115)
!6129 = !DILocation(line: 49, column: 12, scope: !6115)
!6130 = !DILocation(line: 53, column: 1, scope: !6115)
!6131 = distinct !DISubprogram(name: "set_region_number", scope: !6132, file: !6132, line: 32, type: !3146, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6133)
!6132 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6133 = !{!6134}
!6134 = !DILocalVariable(name: "index", arg: 1, scope: !6131, file: !6132, line: 32, type: !110)
!6135 = !DILocation(line: 0, scope: !6131)
!6136 = !DILocation(line: 34, column: 11, scope: !6131)
!6137 = !DILocation(line: 35, column: 1, scope: !6131)
!6138 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !5995, file: !5995, line: 88, type: !6139, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6141)
!6139 = !DISubroutineType(types: !6140)
!6140 = !{!110, !110}
!6141 = !{!6142}
!6142 = !DILocalVariable(name: "size", arg: 1, scope: !6138, file: !5995, line: 88, type: !110)
!6143 = !DILocation(line: 0, scope: !6138)
!6144 = !DILocation(line: 91, column: 11, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6138, file: !5995, line: 91, column: 6)
!6146 = !DILocation(line: 91, column: 6, scope: !6138)
!6147 = !DILocation(line: 100, column: 11, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6138, file: !5995, line: 100, column: 6)
!6149 = !DILocation(line: 100, column: 6, scope: !6138)
!6150 = !DILocation(line: 104, column: 35, scope: !6138)
!6151 = !DILocation(line: 104, column: 16, scope: !6138)
!6152 = !DILocation(line: 104, column: 50, scope: !6138)
!6153 = !DILocation(line: 104, column: 72, scope: !6138)
!6154 = !DILocation(line: 104, column: 2, scope: !6138)
!6155 = !DILocation(line: 106, column: 1, scope: !6138)
!6156 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !523, file: !523, line: 307, type: !6157, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6159)
!6157 = !DISubroutineType(types: !6158)
!6158 = !{null, !5974, !178}
!6159 = !{!6160, !6161}
!6160 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6156, file: !523, line: 308, type: !5974)
!6161 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6156, file: !523, line: 308, type: !178)
!6162 = !DILocation(line: 0, scope: !6156)
!6163 = !DILocation(line: 310, column: 6, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6156, file: !523, line: 310, column: 6)
!6165 = !DILocation(line: 316, column: 1, scope: !6156)
!6166 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !5995, file: !5995, line: 249, type: !6167, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6169)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{!109, !5974, !178}
!6169 = !{!6170, !6171, !6172, !6173}
!6170 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6166, file: !5995, line: 250, type: !5974)
!6171 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6166, file: !5995, line: 250, type: !178)
!6172 = !DILocalVariable(name: "mpu_reg_index", scope: !6166, file: !5995, line: 252, type: !109)
!6173 = !DILocalVariable(name: "i", scope: !6174, file: !5995, line: 264, type: !109)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !5995, line: 264, column: 3)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !5995, line: 261, column: 32)
!6176 = distinct !DILexicalBlock(scope: !6166, file: !5995, line: 261, column: 6)
!6177 = !DILocation(line: 0, scope: !6166)
!6178 = !DILocation(line: 252, column: 22, scope: !6166)
!6179 = !DILocation(line: 258, column: 18, scope: !6166)
!6180 = !DILocation(line: 261, column: 20, scope: !6176)
!6181 = !DILocation(line: 261, column: 6, scope: !6166)
!6182 = !DILocation(line: 0, scope: !6174)
!6183 = !DILocation(line: 265, column: 4, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !5995, line: 264, column: 59)
!6185 = distinct !DILexicalBlock(scope: !6174, file: !5995, line: 264, column: 3)
!6186 = !DILocation(line: 264, column: 55, scope: !6185)
!6187 = !DILocation(line: 264, column: 33, scope: !6185)
!6188 = !DILocation(line: 264, column: 3, scope: !6174)
!6189 = distinct !{!6189, !6188, !6190}
!6190 = !DILocation(line: 266, column: 3, scope: !6174)
!6191 = !DILocation(line: 269, column: 2, scope: !6166)
!6192 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6193, file: !6193, line: 218, type: !3146, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6194)
!6193 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6194 = !{!6195}
!6195 = !DILocalVariable(name: "rnr", arg: 1, scope: !6192, file: !6193, line: 218, type: !110)
!6196 = !DILocation(line: 0, scope: !6192)
!6197 = !DILocation(line: 220, column: 12, scope: !6192)
!6198 = !DILocation(line: 221, column: 13, scope: !6192)
!6199 = !DILocation(line: 222, column: 1, scope: !6192)
!6200 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !523, file: !523, line: 326, type: !6201, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !6203)
!6201 = !DISubroutineType(types: !6202)
!6202 = !{!109}
!6203 = !{!6204}
!6204 = !DILocalVariable(name: "r_index", scope: !6200, file: !523, line: 328, type: !110)
!6205 = !DILocation(line: 330, column: 17, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6200, file: !523, line: 330, column: 6)
!6207 = !DILocation(line: 330, column: 29, scope: !6206)
!6208 = !DILocation(line: 330, column: 6, scope: !6200)
!6209 = !DILocation(line: 347, column: 2, scope: !6200)
!6210 = !DILocation(line: 0, scope: !6200)
!6211 = !DILocation(line: 364, column: 29, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6213, file: !523, line: 364, column: 2)
!6213 = distinct !DILexicalBlock(scope: !6200, file: !523, line: 364, column: 2)
!6214 = !DILocation(line: 364, column: 2, scope: !6213)
!6215 = !DILocation(line: 365, column: 25, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6212, file: !523, line: 364, column: 66)
!6217 = !DILocation(line: 365, column: 3, scope: !6216)
!6218 = !DILocation(line: 364, column: 62, scope: !6212)
!6219 = distinct !{!6219, !6214, !6220}
!6220 = !DILocation(line: 366, column: 2, scope: !6213)
!6221 = !DILocation(line: 369, column: 23, scope: !6200)
!6222 = !DILocation(line: 369, column: 21, scope: !6200)
!6223 = !DILocation(line: 372, column: 2, scope: !6200)
!6224 = !DILocation(line: 443, column: 2, scope: !6200)
!6225 = !DILocation(line: 444, column: 1, scope: !6200)
!6226 = distinct !DISubprogram(name: "strcpy", scope: !6227, file: !6227, line: 20, type: !6228, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6232)
!6227 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6228 = !DISubroutineType(types: !6229)
!6229 = !{!1134, !6230, !6231}
!6230 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1134)
!6231 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !305)
!6232 = !{!6233, !6234, !6235}
!6233 = !DILocalVariable(name: "d", arg: 1, scope: !6226, file: !6227, line: 20, type: !6230)
!6234 = !DILocalVariable(name: "s", arg: 2, scope: !6226, file: !6227, line: 20, type: !6231)
!6235 = !DILocalVariable(name: "dest", scope: !6226, file: !6227, line: 22, type: !1134)
!6236 = !DILocation(line: 0, scope: !6226)
!6237 = !DILocation(line: 24, column: 9, scope: !6226)
!6238 = !DILocation(line: 24, column: 12, scope: !6226)
!6239 = !DILocation(line: 24, column: 2, scope: !6226)
!6240 = !DILocation(line: 25, column: 6, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6226, file: !6227, line: 24, column: 21)
!6242 = !DILocation(line: 26, column: 4, scope: !6241)
!6243 = !DILocation(line: 27, column: 4, scope: !6241)
!6244 = distinct !{!6244, !6239, !6245}
!6245 = !DILocation(line: 28, column: 2, scope: !6226)
!6246 = !DILocation(line: 30, column: 5, scope: !6226)
!6247 = !DILocation(line: 32, column: 2, scope: !6226)
!6248 = distinct !DISubprogram(name: "strncpy", scope: !6227, file: !6227, line: 42, type: !6249, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6251)
!6249 = !DISubroutineType(types: !6250)
!6250 = !{!1134, !6230, !6231, !107}
!6251 = !{!6252, !6253, !6254, !6255}
!6252 = !DILocalVariable(name: "d", arg: 1, scope: !6248, file: !6227, line: 42, type: !6230)
!6253 = !DILocalVariable(name: "s", arg: 2, scope: !6248, file: !6227, line: 42, type: !6231)
!6254 = !DILocalVariable(name: "n", arg: 3, scope: !6248, file: !6227, line: 42, type: !107)
!6255 = !DILocalVariable(name: "dest", scope: !6248, file: !6227, line: 44, type: !1134)
!6256 = !DILocation(line: 0, scope: !6248)
!6257 = !DILocation(line: 46, column: 12, scope: !6248)
!6258 = !DILocation(line: 46, column: 17, scope: !6248)
!6259 = !DILocation(line: 46, column: 20, scope: !6248)
!6260 = !DILocation(line: 46, column: 23, scope: !6248)
!6261 = !DILocation(line: 46, column: 2, scope: !6248)
!6262 = !DILocation(line: 47, column: 6, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6248, file: !6227, line: 46, column: 32)
!6264 = !DILocation(line: 48, column: 4, scope: !6263)
!6265 = !DILocation(line: 49, column: 4, scope: !6263)
!6266 = !DILocation(line: 50, column: 4, scope: !6263)
!6267 = distinct !{!6267, !6261, !6268}
!6268 = !DILocation(line: 51, column: 2, scope: !6248)
!6269 = !DILocation(line: 54, column: 6, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6248, file: !6227, line: 53, column: 16)
!6271 = !DILocation(line: 55, column: 4, scope: !6270)
!6272 = !DILocation(line: 56, column: 4, scope: !6270)
!6273 = !DILocation(line: 53, column: 11, scope: !6248)
!6274 = !DILocation(line: 53, column: 2, scope: !6248)
!6275 = distinct !{!6275, !6274, !6276}
!6276 = !DILocation(line: 57, column: 2, scope: !6248)
!6277 = !DILocation(line: 59, column: 2, scope: !6248)
!6278 = distinct !DISubprogram(name: "strchr", scope: !6227, file: !6227, line: 69, type: !6279, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6281)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{!1134, !305, !109}
!6281 = !{!6282, !6283, !6284}
!6282 = !DILocalVariable(name: "s", arg: 1, scope: !6278, file: !6227, line: 69, type: !305)
!6283 = !DILocalVariable(name: "c", arg: 2, scope: !6278, file: !6227, line: 69, type: !109)
!6284 = !DILocalVariable(name: "tmp", scope: !6278, file: !6227, line: 71, type: !150)
!6285 = !DILocation(line: 0, scope: !6278)
!6286 = !DILocation(line: 73, column: 2, scope: !6278)
!6287 = !DILocation(line: 73, column: 10, scope: !6278)
!6288 = !DILocation(line: 73, column: 13, scope: !6278)
!6289 = !DILocation(line: 73, column: 21, scope: !6278)
!6290 = !DILocation(line: 74, column: 4, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6278, file: !6227, line: 73, column: 38)
!6292 = distinct !{!6292, !6286, !6293}
!6293 = !DILocation(line: 75, column: 2, scope: !6278)
!6294 = !DILocation(line: 77, column: 9, scope: !6278)
!6295 = !DILocation(line: 77, column: 2, scope: !6278)
!6296 = distinct !DISubprogram(name: "strrchr", scope: !6227, file: !6227, line: 87, type: !6279, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6297)
!6297 = !{!6298, !6299, !6300}
!6298 = !DILocalVariable(name: "s", arg: 1, scope: !6296, file: !6227, line: 87, type: !305)
!6299 = !DILocalVariable(name: "c", arg: 2, scope: !6296, file: !6227, line: 87, type: !109)
!6300 = !DILocalVariable(name: "match", scope: !6296, file: !6227, line: 89, type: !1134)
!6301 = !DILocation(line: 0, scope: !6296)
!6302 = !DILocation(line: 91, column: 2, scope: !6296)
!6303 = !DILocation(line: 92, column: 7, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6305, file: !6227, line: 92, column: 7)
!6305 = distinct !DILexicalBlock(scope: !6296, file: !6227, line: 91, column: 5)
!6306 = !DILocation(line: 92, column: 10, scope: !6304)
!6307 = !DILocation(line: 92, column: 7, scope: !6305)
!6308 = !DILocation(line: 95, column: 13, scope: !6296)
!6309 = !DILocation(line: 95, column: 2, scope: !6305)
!6310 = distinct !{!6310, !6302, !6311}
!6311 = !DILocation(line: 95, column: 15, scope: !6296)
!6312 = !DILocation(line: 97, column: 2, scope: !6296)
!6313 = distinct !DISubprogram(name: "strlen", scope: !6227, file: !6227, line: 107, type: !6314, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6316)
!6314 = !DISubroutineType(types: !6315)
!6315 = !{!107, !305}
!6316 = !{!6317, !6318}
!6317 = !DILocalVariable(name: "s", arg: 1, scope: !6313, file: !6227, line: 107, type: !305)
!6318 = !DILocalVariable(name: "n", scope: !6313, file: !6227, line: 109, type: !107)
!6319 = !DILocation(line: 0, scope: !6313)
!6320 = !DILocation(line: 111, column: 9, scope: !6313)
!6321 = !DILocation(line: 111, column: 12, scope: !6313)
!6322 = !DILocation(line: 111, column: 2, scope: !6313)
!6323 = !DILocation(line: 112, column: 4, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6313, file: !6227, line: 111, column: 21)
!6325 = !DILocation(line: 113, column: 4, scope: !6324)
!6326 = distinct !{!6326, !6322, !6327}
!6327 = !DILocation(line: 114, column: 2, scope: !6313)
!6328 = !DILocation(line: 116, column: 2, scope: !6313)
!6329 = distinct !DISubprogram(name: "strnlen", scope: !6227, file: !6227, line: 126, type: !6330, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6332)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{!107, !305, !107}
!6332 = !{!6333, !6334, !6335}
!6333 = !DILocalVariable(name: "s", arg: 1, scope: !6329, file: !6227, line: 126, type: !305)
!6334 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6329, file: !6227, line: 126, type: !107)
!6335 = !DILocalVariable(name: "n", scope: !6329, file: !6227, line: 128, type: !107)
!6336 = !DILocation(line: 0, scope: !6329)
!6337 = !DILocation(line: 130, column: 9, scope: !6329)
!6338 = !DILocation(line: 130, column: 12, scope: !6329)
!6339 = !DILocation(line: 130, column: 20, scope: !6329)
!6340 = !DILocation(line: 130, column: 2, scope: !6329)
!6341 = !DILocation(line: 131, column: 4, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6329, file: !6227, line: 130, column: 35)
!6343 = !DILocation(line: 132, column: 4, scope: !6342)
!6344 = distinct !{!6344, !6340, !6345}
!6345 = !DILocation(line: 133, column: 2, scope: !6329)
!6346 = !DILocation(line: 135, column: 2, scope: !6329)
!6347 = distinct !DISubprogram(name: "strcmp", scope: !6227, file: !6227, line: 145, type: !6348, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6350)
!6348 = !DISubroutineType(types: !6349)
!6349 = !{!109, !305, !305}
!6350 = !{!6351, !6352}
!6351 = !DILocalVariable(name: "s1", arg: 1, scope: !6347, file: !6227, line: 145, type: !305)
!6352 = !DILocalVariable(name: "s2", arg: 2, scope: !6347, file: !6227, line: 145, type: !305)
!6353 = !DILocation(line: 0, scope: !6347)
!6354 = !DILocation(line: 147, column: 10, scope: !6347)
!6355 = !DILocation(line: 147, column: 17, scope: !6347)
!6356 = !DILocation(line: 147, column: 14, scope: !6347)
!6357 = !DILocation(line: 147, column: 22, scope: !6347)
!6358 = !DILocation(line: 148, column: 5, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6347, file: !6227, line: 147, column: 40)
!6360 = !DILocation(line: 149, column: 5, scope: !6359)
!6361 = distinct !{!6361, !6362, !6363}
!6362 = !DILocation(line: 147, column: 2, scope: !6347)
!6363 = !DILocation(line: 150, column: 2, scope: !6347)
!6364 = !DILocation(line: 152, column: 9, scope: !6347)
!6365 = !DILocation(line: 152, column: 15, scope: !6347)
!6366 = !DILocation(line: 152, column: 13, scope: !6347)
!6367 = !DILocation(line: 152, column: 2, scope: !6347)
!6368 = distinct !DISubprogram(name: "strncmp", scope: !6227, file: !6227, line: 162, type: !6369, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6371)
!6369 = !DISubroutineType(types: !6370)
!6370 = !{!109, !305, !305, !107}
!6371 = !{!6372, !6373, !6374}
!6372 = !DILocalVariable(name: "s1", arg: 1, scope: !6368, file: !6227, line: 162, type: !305)
!6373 = !DILocalVariable(name: "s2", arg: 2, scope: !6368, file: !6227, line: 162, type: !305)
!6374 = !DILocalVariable(name: "n", arg: 3, scope: !6368, file: !6227, line: 162, type: !107)
!6375 = !DILocation(line: 0, scope: !6368)
!6376 = !DILocation(line: 164, column: 17, scope: !6368)
!6377 = !DILocation(line: 164, column: 21, scope: !6368)
!6378 = !DILocation(line: 164, column: 28, scope: !6368)
!6379 = !DILocation(line: 164, column: 25, scope: !6368)
!6380 = !DILocation(line: 164, column: 33, scope: !6368)
!6381 = !DILocation(line: 165, column: 5, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6368, file: !6227, line: 164, column: 51)
!6383 = !DILocation(line: 166, column: 5, scope: !6382)
!6384 = !DILocation(line: 167, column: 4, scope: !6382)
!6385 = distinct !{!6385, !6386, !6387}
!6386 = !DILocation(line: 164, column: 2, scope: !6368)
!6387 = !DILocation(line: 168, column: 2, scope: !6368)
!6388 = !DILocation(line: 170, column: 25, scope: !6368)
!6389 = !DILocation(line: 170, column: 31, scope: !6368)
!6390 = !DILocation(line: 170, column: 29, scope: !6368)
!6391 = !DILocation(line: 170, column: 9, scope: !6368)
!6392 = !DILocation(line: 170, column: 2, scope: !6368)
!6393 = distinct !DISubprogram(name: "strtok_r", scope: !6227, file: !6227, line: 180, type: !6394, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6397)
!6394 = !DISubroutineType(types: !6395)
!6395 = !{!1134, !1134, !305, !6396}
!6396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!6397 = !{!6398, !6399, !6400, !6401, !6402}
!6398 = !DILocalVariable(name: "str", arg: 1, scope: !6393, file: !6227, line: 180, type: !1134)
!6399 = !DILocalVariable(name: "sep", arg: 2, scope: !6393, file: !6227, line: 180, type: !305)
!6400 = !DILocalVariable(name: "state", arg: 3, scope: !6393, file: !6227, line: 180, type: !6396)
!6401 = !DILocalVariable(name: "start", scope: !6393, file: !6227, line: 182, type: !1134)
!6402 = !DILocalVariable(name: "end", scope: !6393, file: !6227, line: 182, type: !1134)
!6403 = !DILocation(line: 0, scope: !6393)
!6404 = !DILocation(line: 184, column: 10, scope: !6393)
!6405 = !DILocation(line: 184, column: 22, scope: !6393)
!6406 = !DILocation(line: 187, column: 9, scope: !6393)
!6407 = !DILocation(line: 187, column: 16, scope: !6393)
!6408 = !DILocation(line: 187, column: 19, scope: !6393)
!6409 = !DILocation(line: 187, column: 2, scope: !6393)
!6410 = !DILocation(line: 188, column: 8, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6393, file: !6227, line: 187, column: 40)
!6412 = distinct !{!6412, !6409, !6413}
!6413 = !DILocation(line: 189, column: 2, scope: !6393)
!6414 = !DILocation(line: 198, column: 9, scope: !6393)
!6415 = !DILocation(line: 198, column: 18, scope: !6393)
!6416 = !DILocation(line: 198, column: 17, scope: !6393)
!6417 = !DILocation(line: 198, column: 2, scope: !6393)
!6418 = !DILocation(line: 199, column: 6, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6393, file: !6227, line: 198, column: 37)
!6420 = !DILocation(line: 198, column: 14, scope: !6393)
!6421 = distinct !{!6421, !6417, !6422}
!6422 = !DILocation(line: 200, column: 2, scope: !6393)
!6423 = !DILocation(line: 203, column: 8, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6425, file: !6227, line: 202, column: 20)
!6425 = distinct !DILexicalBlock(scope: !6393, file: !6227, line: 202, column: 6)
!6426 = !DILocation(line: 204, column: 16, scope: !6424)
!6427 = !DILocation(line: 205, column: 2, scope: !6424)
!6428 = !DILocation(line: 210, column: 1, scope: !6393)
!6429 = distinct !DISubprogram(name: "strcat", scope: !6227, file: !6227, line: 212, type: !6228, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6430)
!6430 = !{!6431, !6432}
!6431 = !DILocalVariable(name: "dest", arg: 1, scope: !6429, file: !6227, line: 212, type: !6230)
!6432 = !DILocalVariable(name: "src", arg: 2, scope: !6429, file: !6227, line: 212, type: !6231)
!6433 = !DILocation(line: 0, scope: !6429)
!6434 = !DILocation(line: 214, column: 16, scope: !6429)
!6435 = !DILocation(line: 214, column: 14, scope: !6429)
!6436 = !DILocation(line: 214, column: 2, scope: !6429)
!6437 = !DILocation(line: 215, column: 2, scope: !6429)
!6438 = distinct !DISubprogram(name: "strncat", scope: !6227, file: !6227, line: 218, type: !6249, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6439)
!6439 = !{!6440, !6441, !6442, !6443, !6444}
!6440 = !DILocalVariable(name: "dest", arg: 1, scope: !6438, file: !6227, line: 218, type: !6230)
!6441 = !DILocalVariable(name: "src", arg: 2, scope: !6438, file: !6227, line: 218, type: !6231)
!6442 = !DILocalVariable(name: "n", arg: 3, scope: !6438, file: !6227, line: 219, type: !107)
!6443 = !DILocalVariable(name: "orig_dest", scope: !6438, file: !6227, line: 221, type: !1134)
!6444 = !DILocalVariable(name: "len", scope: !6438, file: !6227, line: 222, type: !107)
!6445 = !DILocation(line: 0, scope: !6438)
!6446 = !DILocation(line: 222, column: 15, scope: !6438)
!6447 = !DILocation(line: 224, column: 7, scope: !6438)
!6448 = !DILocation(line: 225, column: 14, scope: !6438)
!6449 = !DILocation(line: 225, column: 19, scope: !6438)
!6450 = !DILocation(line: 225, column: 11, scope: !6438)
!6451 = !DILocation(line: 225, column: 23, scope: !6438)
!6452 = !DILocation(line: 225, column: 28, scope: !6438)
!6453 = !DILocation(line: 225, column: 2, scope: !6438)
!6454 = !DILocation(line: 226, column: 17, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6438, file: !6227, line: 225, column: 38)
!6456 = !DILocation(line: 226, column: 8, scope: !6455)
!6457 = !DILocation(line: 226, column: 11, scope: !6455)
!6458 = distinct !{!6458, !6453, !6459}
!6459 = !DILocation(line: 227, column: 2, scope: !6438)
!6460 = !DILocation(line: 228, column: 8, scope: !6438)
!6461 = !DILocation(line: 230, column: 2, scope: !6438)
!6462 = distinct !DISubprogram(name: "memcmp", scope: !6227, file: !6227, line: 239, type: !6463, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6465)
!6463 = !DISubroutineType(types: !6464)
!6464 = !{!109, !13, !13, !107}
!6465 = !{!6466, !6467, !6468, !6469, !6470}
!6466 = !DILocalVariable(name: "m1", arg: 1, scope: !6462, file: !6227, line: 239, type: !13)
!6467 = !DILocalVariable(name: "m2", arg: 2, scope: !6462, file: !6227, line: 239, type: !13)
!6468 = !DILocalVariable(name: "n", arg: 3, scope: !6462, file: !6227, line: 239, type: !107)
!6469 = !DILocalVariable(name: "c1", scope: !6462, file: !6227, line: 241, type: !305)
!6470 = !DILocalVariable(name: "c2", scope: !6462, file: !6227, line: 242, type: !305)
!6471 = !DILocation(line: 0, scope: !6462)
!6472 = !DILocation(line: 244, column: 7, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6462, file: !6227, line: 244, column: 6)
!6474 = !DILocation(line: 244, column: 6, scope: !6462)
!6475 = !DILocation(line: 248, column: 10, scope: !6462)
!6476 = !DILocation(line: 248, column: 14, scope: !6462)
!6477 = !DILocation(line: 248, column: 19, scope: !6462)
!6478 = !DILocation(line: 248, column: 2, scope: !6462)
!6479 = !DILocation(line: 248, column: 23, scope: !6462)
!6480 = !DILocation(line: 248, column: 30, scope: !6462)
!6481 = !DILocation(line: 248, column: 27, scope: !6462)
!6482 = !DILocation(line: 249, column: 5, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6462, file: !6227, line: 248, column: 36)
!6484 = !DILocation(line: 250, column: 5, scope: !6483)
!6485 = distinct !{!6485, !6478, !6486}
!6486 = !DILocation(line: 251, column: 2, scope: !6462)
!6487 = !DILocation(line: 253, column: 9, scope: !6462)
!6488 = !DILocation(line: 253, column: 15, scope: !6462)
!6489 = !DILocation(line: 253, column: 13, scope: !6462)
!6490 = !DILocation(line: 253, column: 2, scope: !6462)
!6491 = !DILocation(line: 254, column: 1, scope: !6462)
!6492 = distinct !DISubprogram(name: "memmove", scope: !6227, file: !6227, line: 263, type: !6493, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6495)
!6493 = !DISubroutineType(types: !6494)
!6494 = !{!106, !106, !13, !107}
!6495 = !{!6496, !6497, !6498, !6499, !6500}
!6496 = !DILocalVariable(name: "d", arg: 1, scope: !6492, file: !6227, line: 263, type: !106)
!6497 = !DILocalVariable(name: "s", arg: 2, scope: !6492, file: !6227, line: 263, type: !13)
!6498 = !DILocalVariable(name: "n", arg: 3, scope: !6492, file: !6227, line: 263, type: !107)
!6499 = !DILocalVariable(name: "dest", scope: !6492, file: !6227, line: 265, type: !1134)
!6500 = !DILocalVariable(name: "src", scope: !6492, file: !6227, line: 266, type: !305)
!6501 = !DILocation(line: 0, scope: !6492)
!6502 = !DILocation(line: 268, column: 21, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6492, file: !6227, line: 268, column: 6)
!6504 = !DILocation(line: 268, column: 28, scope: !6503)
!6505 = !DILocation(line: 268, column: 6, scope: !6492)
!6506 = !DILocation(line: 280, column: 12, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6503, file: !6227, line: 278, column: 9)
!6508 = !DILocation(line: 280, column: 3, scope: !6507)
!6509 = !DILocation(line: 275, column: 5, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6511, file: !6227, line: 274, column: 17)
!6511 = distinct !DILexicalBlock(scope: !6503, file: !6227, line: 268, column: 33)
!6512 = !DILocation(line: 276, column: 14, scope: !6510)
!6513 = !DILocation(line: 276, column: 4, scope: !6510)
!6514 = !DILocation(line: 276, column: 12, scope: !6510)
!6515 = !DILocation(line: 274, column: 12, scope: !6511)
!6516 = !DILocation(line: 274, column: 3, scope: !6511)
!6517 = distinct !{!6517, !6516, !6518}
!6518 = !DILocation(line: 277, column: 3, scope: !6511)
!6519 = !DILocation(line: 281, column: 12, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6507, file: !6227, line: 280, column: 17)
!6521 = !DILocation(line: 281, column: 10, scope: !6520)
!6522 = !DILocation(line: 282, column: 8, scope: !6520)
!6523 = !DILocation(line: 283, column: 7, scope: !6520)
!6524 = !DILocation(line: 284, column: 5, scope: !6520)
!6525 = distinct !{!6525, !6508, !6526}
!6526 = !DILocation(line: 285, column: 3, scope: !6507)
!6527 = !DILocation(line: 288, column: 2, scope: !6492)
!6528 = distinct !DISubprogram(name: "memcpy", scope: !6227, file: !6227, line: 298, type: !6529, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6533)
!6529 = !DISubroutineType(types: !6530)
!6530 = !{!106, !6531, !6532, !107}
!6531 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!6532 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6533 = !{!6534, !6535, !6536, !6537, !6538}
!6534 = !DILocalVariable(name: "d", arg: 1, scope: !6528, file: !6227, line: 298, type: !6531)
!6535 = !DILocalVariable(name: "s", arg: 2, scope: !6528, file: !6227, line: 298, type: !6532)
!6536 = !DILocalVariable(name: "n", arg: 3, scope: !6528, file: !6227, line: 298, type: !107)
!6537 = !DILocalVariable(name: "d_byte", scope: !6528, file: !6227, line: 302, type: !967)
!6538 = !DILocalVariable(name: "s_byte", scope: !6528, file: !6227, line: 303, type: !2765)
!6539 = !DILocation(line: 0, scope: !6528)
!6540 = !DILocation(line: 337, column: 11, scope: !6528)
!6541 = !DILocation(line: 337, column: 2, scope: !6528)
!6542 = !DILocation(line: 338, column: 25, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6528, file: !6227, line: 337, column: 16)
!6544 = !DILocation(line: 338, column: 17, scope: !6543)
!6545 = !DILocation(line: 338, column: 11, scope: !6543)
!6546 = !DILocation(line: 338, column: 15, scope: !6543)
!6547 = !DILocation(line: 339, column: 4, scope: !6543)
!6548 = distinct !{!6548, !6541, !6549}
!6549 = !DILocation(line: 340, column: 2, scope: !6528)
!6550 = !DILocation(line: 342, column: 2, scope: !6528)
!6551 = distinct !DISubprogram(name: "memset", scope: !6227, file: !6227, line: 352, type: !6552, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6554)
!6552 = !DISubroutineType(types: !6553)
!6553 = !{!106, !106, !109, !107}
!6554 = !{!6555, !6556, !6557, !6558, !6559}
!6555 = !DILocalVariable(name: "buf", arg: 1, scope: !6551, file: !6227, line: 352, type: !106)
!6556 = !DILocalVariable(name: "c", arg: 2, scope: !6551, file: !6227, line: 352, type: !109)
!6557 = !DILocalVariable(name: "n", arg: 3, scope: !6551, file: !6227, line: 352, type: !107)
!6558 = !DILocalVariable(name: "d_byte", scope: !6551, file: !6227, line: 356, type: !967)
!6559 = !DILocalVariable(name: "c_byte", scope: !6551, file: !6227, line: 357, type: !179)
!6560 = !DILocation(line: 0, scope: !6551)
!6561 = !DILocation(line: 357, column: 25, scope: !6551)
!6562 = !DILocation(line: 389, column: 11, scope: !6551)
!6563 = !DILocation(line: 389, column: 2, scope: !6551)
!6564 = !DILocation(line: 390, column: 11, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6551, file: !6227, line: 389, column: 16)
!6566 = !DILocation(line: 390, column: 15, scope: !6565)
!6567 = !DILocation(line: 391, column: 4, scope: !6565)
!6568 = distinct !{!6568, !6563, !6569}
!6569 = !DILocation(line: 392, column: 2, scope: !6551)
!6570 = !DILocation(line: 394, column: 2, scope: !6551)
!6571 = distinct !DISubprogram(name: "memchr", scope: !6227, file: !6227, line: 404, type: !6572, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !6574)
!6572 = !DISubroutineType(types: !6573)
!6573 = !{!106, !13, !109, !107}
!6574 = !{!6575, !6576, !6577, !6578}
!6575 = !DILocalVariable(name: "s", arg: 1, scope: !6571, file: !6227, line: 404, type: !13)
!6576 = !DILocalVariable(name: "c", arg: 2, scope: !6571, file: !6227, line: 404, type: !109)
!6577 = !DILocalVariable(name: "n", arg: 3, scope: !6571, file: !6227, line: 404, type: !107)
!6578 = !DILocalVariable(name: "p", scope: !6579, file: !6227, line: 407, type: !2765)
!6579 = distinct !DILexicalBlock(scope: !6580, file: !6227, line: 406, column: 14)
!6580 = distinct !DILexicalBlock(scope: !6571, file: !6227, line: 406, column: 6)
!6581 = !DILocation(line: 0, scope: !6571)
!6582 = !DILocation(line: 406, column: 8, scope: !6580)
!6583 = !DILocation(line: 406, column: 6, scope: !6571)
!6584 = !DILocation(line: 409, column: 3, scope: !6579)
!6585 = !DILocation(line: 0, scope: !6579)
!6586 = !DILocation(line: 410, column: 8, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6588, file: !6227, line: 410, column: 8)
!6588 = distinct !DILexicalBlock(scope: !6579, file: !6227, line: 409, column: 6)
!6589 = !DILocation(line: 410, column: 13, scope: !6587)
!6590 = !DILocation(line: 410, column: 8, scope: !6588)
!6591 = distinct !{!6591, !6584, !6592}
!6592 = !DILocation(line: 414, column: 20, scope: !6579)
!6593 = !DILocation(line: 417, column: 2, scope: !6571)
!6594 = !DILocation(line: 418, column: 1, scope: !6571)
!6595 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !533, file: !533, line: 23, type: !3272, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !6596)
!6596 = !{!6597}
!6597 = !DILocalVariable(name: "hook", arg: 1, scope: !6595, file: !533, line: 23, type: !268)
!6598 = !DILocation(line: 0, scope: !6595)
!6599 = !DILocation(line: 25, column: 15, scope: !6595)
!6600 = !DILocation(line: 26, column: 1, scope: !6595)
!6601 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !533, file: !533, line: 14, type: !269, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !6602)
!6602 = !{!6603}
!6603 = !DILocalVariable(name: "c", arg: 1, scope: !6601, file: !533, line: 14, type: !109)
!6604 = !DILocation(line: 0, scope: !6601)
!6605 = !DILocation(line: 18, column: 2, scope: !6601)
!6606 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !533, file: !533, line: 28, type: !6607, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !6609)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{!109, !109, !529}
!6609 = !{!6610, !6611}
!6610 = !DILocalVariable(name: "c", arg: 1, scope: !6606, file: !533, line: 28, type: !109)
!6611 = !DILocalVariable(name: "stream", arg: 2, scope: !6606, file: !533, line: 28, type: !529)
!6612 = !DILocation(line: 0, scope: !6606)
!6613 = !DILocation(line: 30, column: 27, scope: !6606)
!6614 = !DILocation(line: 30, column: 50, scope: !6606)
!6615 = !DILocation(line: 30, column: 9, scope: !6606)
!6616 = !DILocation(line: 30, column: 2, scope: !6606)
!6617 = distinct !DISubprogram(name: "fputc", scope: !533, file: !533, line: 41, type: !6607, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !6618)
!6618 = !{!6619, !6620}
!6619 = !DILocalVariable(name: "c", arg: 1, scope: !6617, file: !533, line: 41, type: !109)
!6620 = !DILocalVariable(name: "stream", arg: 2, scope: !6617, file: !533, line: 41, type: !529)
!6621 = !DILocation(line: 0, scope: !6617)
!6622 = !DILocation(line: 43, column: 9, scope: !6617)
!6623 = !DILocation(line: 43, column: 2, scope: !6617)
!6624 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6625, file: !6625, line: 72, type: !6607, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !6626)
!6625 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!6626 = !{!6627, !6628}
!6627 = !DILocalVariable(name: "c", arg: 1, scope: !6624, file: !6625, line: 72, type: !109)
!6628 = !DILocalVariable(name: "stream", arg: 2, scope: !6624, file: !6625, line: 72, type: !529)
!6629 = !DILocation(line: 0, scope: !6624)
!6630 = !DILocation(line: 81, column: 2, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6624, file: !6625, line: 81, column: 2)
!6632 = !{i64 2155123361}
!6633 = !DILocation(line: 82, column: 9, scope: !6624)
!6634 = !DILocation(line: 82, column: 2, scope: !6624)
!6635 = distinct !DISubprogram(name: "fputs", scope: !533, file: !533, line: 46, type: !6636, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !6639)
!6636 = !DISubroutineType(types: !6637)
!6637 = !{!109, !6231, !6638}
!6638 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !529)
!6639 = !{!6640, !6641, !6642, !6643}
!6640 = !DILocalVariable(name: "s", arg: 1, scope: !6635, file: !533, line: 46, type: !6231)
!6641 = !DILocalVariable(name: "stream", arg: 2, scope: !6635, file: !533, line: 46, type: !6638)
!6642 = !DILocalVariable(name: "len", scope: !6635, file: !533, line: 48, type: !109)
!6643 = !DILocalVariable(name: "ret", scope: !6635, file: !533, line: 49, type: !109)
!6644 = !DILocation(line: 0, scope: !6635)
!6645 = !DILocation(line: 48, column: 12, scope: !6635)
!6646 = !DILocation(line: 51, column: 8, scope: !6635)
!6647 = !DILocation(line: 53, column: 13, scope: !6635)
!6648 = !DILocation(line: 53, column: 9, scope: !6635)
!6649 = !DILocation(line: 53, column: 2, scope: !6635)
!6650 = distinct !DISubprogram(name: "fwrite", scope: !533, file: !533, line: 99, type: !6651, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !6653)
!6651 = !DISubroutineType(types: !6652)
!6652 = !{!107, !6532, !107, !107, !6638}
!6653 = !{!6654, !6655, !6656, !6657}
!6654 = !DILocalVariable(name: "ptr", arg: 1, scope: !6650, file: !533, line: 99, type: !6532)
!6655 = !DILocalVariable(name: "size", arg: 2, scope: !6650, file: !533, line: 99, type: !107)
!6656 = !DILocalVariable(name: "nitems", arg: 3, scope: !6650, file: !533, line: 99, type: !107)
!6657 = !DILocalVariable(name: "stream", arg: 4, scope: !6650, file: !533, line: 100, type: !6638)
!6658 = !DILocation(line: 0, scope: !6650)
!6659 = !DILocation(line: 102, column: 9, scope: !6650)
!6660 = !DILocation(line: 102, column: 2, scope: !6650)
!6661 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6625, file: !6625, line: 96, type: !6651, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !6662)
!6662 = !{!6663, !6664, !6665, !6666}
!6663 = !DILocalVariable(name: "ptr", arg: 1, scope: !6661, file: !6625, line: 96, type: !6532)
!6664 = !DILocalVariable(name: "size", arg: 2, scope: !6661, file: !6625, line: 96, type: !107)
!6665 = !DILocalVariable(name: "nitems", arg: 3, scope: !6661, file: !6625, line: 96, type: !107)
!6666 = !DILocalVariable(name: "stream", arg: 4, scope: !6661, file: !6625, line: 96, type: !6638)
!6667 = !DILocation(line: 0, scope: !6661)
!6668 = !DILocation(line: 107, column: 2, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6661, file: !6625, line: 107, column: 2)
!6670 = !{i64 2155123465}
!6671 = !DILocation(line: 108, column: 9, scope: !6661)
!6672 = !DILocation(line: 108, column: 2, scope: !6661)
!6673 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !533, file: !533, line: 56, type: !6651, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !6674)
!6674 = !{!6675, !6676, !6677, !6678, !6679, !6680, !6681, !6682}
!6675 = !DILocalVariable(name: "ptr", arg: 1, scope: !6673, file: !533, line: 56, type: !6532)
!6676 = !DILocalVariable(name: "size", arg: 2, scope: !6673, file: !533, line: 56, type: !107)
!6677 = !DILocalVariable(name: "nitems", arg: 3, scope: !6673, file: !533, line: 57, type: !107)
!6678 = !DILocalVariable(name: "stream", arg: 4, scope: !6673, file: !533, line: 57, type: !6638)
!6679 = !DILocalVariable(name: "i", scope: !6673, file: !533, line: 59, type: !107)
!6680 = !DILocalVariable(name: "j", scope: !6673, file: !533, line: 60, type: !107)
!6681 = !DILocalVariable(name: "p", scope: !6673, file: !533, line: 61, type: !2765)
!6682 = !DILabel(scope: !6673, name: "done", file: !533, line: 82)
!6683 = !DILocation(line: 0, scope: !6673)
!6684 = !DILocation(line: 63, column: 14, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6673, file: !533, line: 63, column: 6)
!6686 = !DILocation(line: 63, column: 24, scope: !6685)
!6687 = !DILocation(line: 72, column: 3, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6673, file: !533, line: 70, column: 5)
!6689 = !DILocation(line: 0, scope: !6688)
!6690 = !DILocation(line: 73, column: 8, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6692, file: !533, line: 73, column: 8)
!6692 = distinct !DILexicalBlock(scope: !6688, file: !533, line: 72, column: 6)
!6693 = !DILocation(line: 73, column: 29, scope: !6691)
!6694 = !DILocation(line: 73, column: 27, scope: !6691)
!6695 = !DILocation(line: 73, column: 21, scope: !6691)
!6696 = !DILocation(line: 73, column: 33, scope: !6691)
!6697 = !DILocation(line: 73, column: 8, scope: !6692)
!6698 = !DILocation(line: 76, column: 5, scope: !6692)
!6699 = !DILocation(line: 77, column: 14, scope: !6688)
!6700 = !DILocation(line: 77, column: 3, scope: !6692)
!6701 = distinct !{!6701, !6687, !6702}
!6702 = !DILocation(line: 77, column: 17, scope: !6688)
!6703 = !DILocation(line: 79, column: 4, scope: !6688)
!6704 = !DILocation(line: 80, column: 13, scope: !6673)
!6705 = !DILocation(line: 80, column: 2, scope: !6688)
!6706 = distinct !{!6706, !6707, !6708}
!6707 = !DILocation(line: 70, column: 2, scope: !6673)
!6708 = !DILocation(line: 80, column: 16, scope: !6673)
!6709 = !DILocation(line: 82, column: 1, scope: !6673)
!6710 = !DILocation(line: 83, column: 17, scope: !6673)
!6711 = !DILocation(line: 83, column: 2, scope: !6673)
!6712 = !DILocation(line: 84, column: 1, scope: !6673)
!6713 = distinct !DISubprogram(name: "puts", scope: !533, file: !533, line: 106, type: !6714, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !6716)
!6714 = !DISubroutineType(types: !6715)
!6715 = !{!109, !305}
!6716 = !{!6717}
!6717 = !DILocalVariable(name: "s", arg: 1, scope: !6713, file: !533, line: 106, type: !305)
!6718 = !DILocation(line: 0, scope: !6713)
!6719 = !DILocation(line: 108, column: 6, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6713, file: !533, line: 108, column: 6)
!6721 = !DILocation(line: 108, column: 23, scope: !6720)
!6722 = !DILocation(line: 108, column: 6, scope: !6713)
!6723 = !DILocation(line: 112, column: 9, scope: !6713)
!6724 = !DILocation(line: 112, column: 29, scope: !6713)
!6725 = !DILocation(line: 112, column: 2, scope: !6713)
!6726 = !DILocation(line: 113, column: 1, scope: !6713)
!6727 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !674, file: !674, line: 368, type: !727, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6728)
!6728 = !{!6729}
!6729 = !DILocalVariable(name: "dev", arg: 1, scope: !6727, file: !674, line: 368, type: !703)
!6730 = !DILocation(line: 0, scope: !6727)
!6731 = !DILocation(line: 370, column: 2, scope: !6727)
!6732 = !DILocation(line: 371, column: 1, scope: !6727)
!6733 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !674, file: !674, line: 243, type: !6734, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6736)
!6734 = !DISubroutineType(types: !6735)
!6735 = !{null, !109, !109, !703}
!6736 = !{!6737, !6738, !6739, !6740, !6742}
!6737 = !DILocalVariable(name: "min", arg: 1, scope: !6733, file: !674, line: 243, type: !109)
!6738 = !DILocalVariable(name: "max", arg: 2, scope: !6733, file: !674, line: 243, type: !109)
!6739 = !DILocalVariable(name: "dev", arg: 3, scope: !6733, file: !674, line: 243, type: !703)
!6740 = !DILocalVariable(name: "data", scope: !6733, file: !674, line: 245, type: !6741)
!6741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 32)
!6742 = !DILocalVariable(name: "line", scope: !6733, file: !674, line: 246, type: !109)
!6743 = !DILocation(line: 0, scope: !6733)
!6744 = !DILocation(line: 245, column: 38, scope: !6733)
!6745 = !DILocation(line: 249, column: 24, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !674, line: 249, column: 2)
!6747 = distinct !DILexicalBlock(scope: !6733, file: !674, line: 249, column: 2)
!6748 = !DILocation(line: 249, column: 2, scope: !6747)
!6749 = !DILocation(line: 251, column: 7, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !674, line: 251, column: 7)
!6751 = distinct !DILexicalBlock(scope: !6746, file: !674, line: 249, column: 39)
!6752 = !DILocation(line: 251, column: 7, scope: !6751)
!6753 = !DILocation(line: 253, column: 4, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6750, file: !674, line: 251, column: 36)
!6755 = !DILocation(line: 256, column: 24, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6754, file: !674, line: 256, column: 8)
!6757 = !DILocation(line: 256, column: 9, scope: !6756)
!6758 = !DILocation(line: 256, column: 8, scope: !6754)
!6759 = !DILocation(line: 260, column: 43, scope: !6754)
!6760 = !DILocation(line: 260, column: 4, scope: !6754)
!6761 = !DILocation(line: 261, column: 3, scope: !6754)
!6762 = !DILocation(line: 249, column: 35, scope: !6746)
!6763 = distinct !{!6763, !6748, !6764}
!6764 = !DILocation(line: 262, column: 2, scope: !6747)
!6765 = !DILocation(line: 263, column: 1, scope: !6733)
!6766 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !674, file: !674, line: 158, type: !269, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6767)
!6767 = !{!6768}
!6768 = !DILocalVariable(name: "line", arg: 1, scope: !6766, file: !674, line: 158, type: !109)
!6769 = !DILocation(line: 0, scope: !6766)
!6770 = !DILocation(line: 170, column: 38, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !674, line: 160, column: 17)
!6772 = distinct !DILexicalBlock(scope: !6766, file: !674, line: 160, column: 6)
!6773 = !DILocation(line: 170, column: 10, scope: !6771)
!6774 = !DILocation(line: 176, column: 1, scope: !6766)
!6775 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !674, file: !674, line: 183, type: !6776, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6778)
!6776 = !DISubroutineType(types: !6777)
!6777 = !{null, !109}
!6778 = !{!6779}
!6779 = !DILocalVariable(name: "line", arg: 1, scope: !6775, file: !674, line: 183, type: !109)
!6780 = !DILocation(line: 0, scope: !6775)
!6781 = !DILocation(line: 195, column: 28, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !674, line: 185, column: 17)
!6783 = distinct !DILexicalBlock(scope: !6775, file: !674, line: 185, column: 6)
!6784 = !DILocation(line: 195, column: 3, scope: !6782)
!6785 = !DILocation(line: 200, column: 1, scope: !6775)
!6786 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !6787, file: !6787, line: 910, type: !3146, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6788)
!6787 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6788 = !{!6789}
!6789 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6786, file: !6787, line: 910, type: !110)
!6790 = !DILocation(line: 0, scope: !6786)
!6791 = !DILocation(line: 912, column: 3, scope: !6786)
!6792 = !DILocation(line: 913, column: 1, scope: !6786)
!6793 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !6787, file: !6787, line: 834, type: !6139, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6794)
!6794 = !{!6795}
!6795 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6793, file: !6787, line: 834, type: !110)
!6796 = !DILocation(line: 0, scope: !6793)
!6797 = !DILocation(line: 836, column: 11, scope: !6793)
!6798 = !DILocation(line: 836, column: 40, scope: !6793)
!6799 = !DILocation(line: 836, column: 3, scope: !6793)
!6800 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !674, file: !674, line: 304, type: !727, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6801)
!6801 = !{!6802}
!6802 = !DILocalVariable(name: "dev", arg: 1, scope: !6800, file: !674, line: 304, type: !703)
!6803 = !DILocation(line: 0, scope: !6800)
!6804 = !DILocation(line: 306, column: 2, scope: !6800)
!6805 = !DILocation(line: 307, column: 1, scope: !6800)
!6806 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !674, file: !674, line: 299, type: !727, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6807)
!6807 = !{!6808}
!6808 = !DILocalVariable(name: "dev", arg: 1, scope: !6806, file: !674, line: 299, type: !703)
!6809 = !DILocation(line: 0, scope: !6806)
!6810 = !DILocation(line: 301, column: 2, scope: !6806)
!6811 = !DILocation(line: 302, column: 1, scope: !6806)
!6812 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !674, file: !674, line: 294, type: !727, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6813)
!6813 = !{!6814}
!6814 = !DILocalVariable(name: "dev", arg: 1, scope: !6812, file: !674, line: 294, type: !703)
!6815 = !DILocation(line: 0, scope: !6812)
!6816 = !DILocation(line: 296, column: 2, scope: !6812)
!6817 = !DILocation(line: 297, column: 1, scope: !6812)
!6818 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !674, file: !674, line: 397, type: !727, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6819)
!6819 = !{!6820}
!6820 = !DILocalVariable(name: "dev", arg: 1, scope: !6818, file: !674, line: 397, type: !703)
!6821 = !DILocation(line: 0, scope: !6818)
!6822 = !DILocation(line: 399, column: 2, scope: !6818)
!6823 = !DILocation(line: 400, column: 1, scope: !6818)
!6824 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !674, file: !674, line: 392, type: !727, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6825)
!6825 = !{!6826}
!6826 = !DILocalVariable(name: "dev", arg: 1, scope: !6824, file: !674, line: 392, type: !703)
!6827 = !DILocation(line: 0, scope: !6824)
!6828 = !DILocation(line: 394, column: 2, scope: !6824)
!6829 = !DILocation(line: 395, column: 1, scope: !6824)
!6830 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !674, file: !674, line: 289, type: !727, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6831)
!6831 = !{!6832}
!6832 = !DILocalVariable(name: "dev", arg: 1, scope: !6830, file: !674, line: 289, type: !703)
!6833 = !DILocation(line: 0, scope: !6830)
!6834 = !DILocation(line: 291, column: 2, scope: !6830)
!6835 = !DILocation(line: 292, column: 1, scope: !6830)
!6836 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !674, file: !674, line: 387, type: !727, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6837)
!6837 = !{!6838}
!6838 = !DILocalVariable(name: "dev", arg: 1, scope: !6836, file: !674, line: 387, type: !703)
!6839 = !DILocation(line: 0, scope: !6836)
!6840 = !DILocation(line: 389, column: 2, scope: !6836)
!6841 = !DILocation(line: 390, column: 1, scope: !6836)
!6842 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !674, file: !674, line: 382, type: !727, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6843)
!6843 = !{!6844}
!6844 = !DILocalVariable(name: "dev", arg: 1, scope: !6842, file: !674, line: 382, type: !703)
!6845 = !DILocation(line: 0, scope: !6842)
!6846 = !DILocation(line: 384, column: 2, scope: !6842)
!6847 = !DILocation(line: 385, column: 1, scope: !6842)
!6848 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !674, file: !674, line: 373, type: !727, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6849)
!6849 = !{!6850}
!6850 = !DILocalVariable(name: "dev", arg: 1, scope: !6848, file: !674, line: 373, type: !703)
!6851 = !DILocation(line: 0, scope: !6848)
!6852 = !DILocation(line: 375, column: 2, scope: !6848)
!6853 = !DILocation(line: 376, column: 1, scope: !6848)
!6854 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !674, file: !674, line: 284, type: !727, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6855)
!6855 = !{!6856}
!6856 = !DILocalVariable(name: "dev", arg: 1, scope: !6854, file: !674, line: 284, type: !703)
!6857 = !DILocation(line: 0, scope: !6854)
!6858 = !DILocation(line: 286, column: 2, scope: !6854)
!6859 = !DILocation(line: 287, column: 1, scope: !6854)
!6860 = distinct !DISubprogram(name: "stm32_exti_init", scope: !674, file: !674, line: 416, type: !701, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6861)
!6861 = !{!6862}
!6862 = !DILocalVariable(name: "dev", arg: 1, scope: !6860, file: !674, line: 416, type: !703)
!6863 = !DILocation(line: 0, scope: !6860)
!6864 = !DILocation(line: 418, column: 2, scope: !6860)
!6865 = !DILocation(line: 420, column: 2, scope: !6860)
!6866 = !DILocation(line: 0, scope: !726)
!6867 = !DILocation(line: 493, column: 2, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !726, file: !674, line: 493, column: 2)
!6869 = !DILocation(line: 497, column: 2, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !726, file: !674, line: 497, column: 2)
!6871 = !DILocation(line: 507, column: 2, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !726, file: !674, line: 507, column: 2)
!6873 = !DILocation(line: 512, column: 2, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !726, file: !674, line: 512, column: 2)
!6875 = !DILocation(line: 516, column: 2, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !726, file: !674, line: 516, column: 2)
!6877 = !DILocation(line: 523, column: 2, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !726, file: !674, line: 523, column: 2)
!6879 = !DILocation(line: 527, column: 2, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !726, file: !674, line: 527, column: 2)
!6881 = !DILocation(line: 581, column: 2, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !726, file: !674, line: 581, column: 2)
!6883 = !DILocation(line: 586, column: 2, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !726, file: !674, line: 586, column: 2)
!6885 = !DILocation(line: 591, column: 2, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !726, file: !674, line: 591, column: 2)
!6887 = !DILocation(line: 595, column: 2, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !726, file: !674, line: 595, column: 2)
!6889 = !DILocation(line: 607, column: 1, scope: !726)
!6890 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !674, file: !674, line: 112, type: !6776, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6891)
!6891 = !{!6892, !6893}
!6892 = !DILocalVariable(name: "line", arg: 1, scope: !6890, file: !674, line: 112, type: !109)
!6893 = !DILocalVariable(name: "irqnum", scope: !6890, file: !674, line: 114, type: !109)
!6894 = !DILocation(line: 0, scope: !6890)
!6895 = !DILocation(line: 121, column: 11, scope: !6890)
!6896 = !DILocation(line: 130, column: 26, scope: !6890)
!6897 = !DILocation(line: 130, column: 2, scope: !6890)
!6898 = !DILocation(line: 134, column: 2, scope: !6890)
!6899 = !DILocation(line: 135, column: 1, scope: !6890)
!6900 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !6787, file: !6787, line: 268, type: !3146, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6901)
!6901 = !{!6902}
!6902 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6900, file: !6787, line: 268, type: !110)
!6903 = !DILocation(line: 0, scope: !6900)
!6904 = !DILocation(line: 270, column: 3, scope: !6900)
!6905 = !DILocation(line: 271, column: 1, scope: !6900)
!6906 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !674, file: !674, line: 137, type: !6776, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6907)
!6907 = !{!6908}
!6908 = !DILocalVariable(name: "line", arg: 1, scope: !6906, file: !674, line: 137, type: !109)
!6909 = !DILocation(line: 0, scope: !6906)
!6910 = !DILocation(line: 141, column: 11, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6906, file: !674, line: 141, column: 6)
!6912 = !DILocation(line: 141, column: 6, scope: !6906)
!6913 = !DILocation(line: 145, column: 28, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6911, file: !674, line: 141, column: 17)
!6915 = !DILocation(line: 145, column: 3, scope: !6914)
!6916 = !DILocation(line: 147, column: 2, scope: !6914)
!6917 = !DILocation(line: 151, column: 1, scope: !6906)
!6918 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !6787, file: !6787, line: 309, type: !3146, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6919)
!6919 = !{!6920}
!6920 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6918, file: !6787, line: 309, type: !110)
!6921 = !DILocation(line: 0, scope: !6918)
!6922 = !DILocation(line: 311, column: 3, scope: !6918)
!6923 = !DILocation(line: 312, column: 1, scope: !6918)
!6924 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !674, file: !674, line: 202, type: !6925, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6927)
!6925 = !DISubroutineType(types: !6926)
!6926 = !{null, !109, !109}
!6927 = !{!6928, !6929}
!6928 = !DILocalVariable(name: "line", arg: 1, scope: !6924, file: !674, line: 202, type: !109)
!6929 = !DILocalVariable(name: "trigger", arg: 2, scope: !6924, file: !674, line: 202, type: !109)
!6930 = !DILocation(line: 0, scope: !6924)
!6931 = !DILocation(line: 211, column: 2, scope: !6924)
!6932 = !DILocation(line: 213, column: 36, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6924, file: !674, line: 211, column: 19)
!6934 = !DILocation(line: 213, column: 3, scope: !6933)
!6935 = !DILocation(line: 214, column: 3, scope: !6933)
!6936 = !DILocation(line: 215, column: 3, scope: !6933)
!6937 = !DILocation(line: 217, column: 35, scope: !6933)
!6938 = !DILocation(line: 217, column: 3, scope: !6933)
!6939 = !DILocation(line: 218, column: 3, scope: !6933)
!6940 = !DILocation(line: 219, column: 3, scope: !6933)
!6941 = !DILocation(line: 221, column: 36, scope: !6933)
!6942 = !DILocation(line: 221, column: 3, scope: !6933)
!6943 = !DILocation(line: 222, column: 3, scope: !6933)
!6944 = !DILocation(line: 223, column: 3, scope: !6933)
!6945 = !DILocation(line: 225, column: 35, scope: !6933)
!6946 = !DILocation(line: 225, column: 3, scope: !6933)
!6947 = !DILocation(line: 226, column: 3, scope: !6933)
!6948 = !DILocation(line: 227, column: 3, scope: !6933)
!6949 = !DILocation(line: 232, column: 1, scope: !6924)
!6950 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !6787, file: !6787, line: 573, type: !3146, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6951)
!6951 = !{!6952}
!6952 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6950, file: !6787, line: 573, type: !110)
!6953 = !DILocation(line: 0, scope: !6950)
!6954 = !DILocation(line: 575, column: 3, scope: !6950)
!6955 = !DILocation(line: 577, column: 1, scope: !6950)
!6956 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !6787, file: !6787, line: 703, type: !3146, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6957)
!6957 = !{!6958}
!6958 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6956, file: !6787, line: 703, type: !110)
!6959 = !DILocation(line: 0, scope: !6956)
!6960 = !DILocation(line: 705, column: 3, scope: !6956)
!6961 = !DILocation(line: 706, column: 1, scope: !6956)
!6962 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !6787, file: !6787, line: 529, type: !3146, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6963)
!6963 = !{!6964}
!6964 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6962, file: !6787, line: 529, type: !110)
!6965 = !DILocation(line: 0, scope: !6962)
!6966 = !DILocation(line: 531, column: 3, scope: !6962)
!6967 = !DILocation(line: 533, column: 1, scope: !6962)
!6968 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !6787, file: !6787, line: 661, type: !3146, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6969)
!6969 = !{!6970}
!6970 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6968, file: !6787, line: 661, type: !110)
!6971 = !DILocation(line: 0, scope: !6968)
!6972 = !DILocation(line: 663, column: 3, scope: !6968)
!6973 = !DILocation(line: 664, column: 1, scope: !6968)
!6974 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !674, file: !674, line: 433, type: !6975, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6977)
!6975 = !DISubroutineType(types: !6976)
!6976 = !{!109, !109, !714, !106}
!6977 = !{!6978, !6979, !6980, !6981, !6983}
!6978 = !DILocalVariable(name: "line", arg: 1, scope: !6974, file: !674, line: 433, type: !109)
!6979 = !DILocalVariable(name: "cb", arg: 2, scope: !6974, file: !674, line: 433, type: !714)
!6980 = !DILocalVariable(name: "arg", arg: 3, scope: !6974, file: !674, line: 433, type: !106)
!6981 = !DILocalVariable(name: "dev", scope: !6974, file: !674, line: 435, type: !6982)
!6982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !703)
!6983 = !DILocalVariable(name: "data", scope: !6974, file: !674, line: 436, type: !6741)
!6984 = !DILocation(line: 0, scope: !6974)
!6985 = !DILocation(line: 438, column: 21, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6974, file: !674, line: 438, column: 6)
!6987 = !DILocation(line: 438, column: 6, scope: !6986)
!6988 = !DILocation(line: 438, column: 6, scope: !6974)
!6989 = !DILocation(line: 442, column: 20, scope: !6974)
!6990 = !DILocation(line: 443, column: 17, scope: !6974)
!6991 = !DILocation(line: 443, column: 22, scope: !6974)
!6992 = !DILocation(line: 445, column: 2, scope: !6974)
!6993 = !DILocation(line: 446, column: 1, scope: !6974)
!6994 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !674, file: !674, line: 448, type: !6776, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !6995)
!6995 = !{!6996, !6997, !6998}
!6996 = !DILocalVariable(name: "line", arg: 1, scope: !6994, file: !674, line: 448, type: !109)
!6997 = !DILocalVariable(name: "dev", scope: !6994, file: !674, line: 450, type: !6982)
!6998 = !DILocalVariable(name: "data", scope: !6994, file: !674, line: 451, type: !6741)
!6999 = !DILocation(line: 0, scope: !6994)
!7000 = !DILocation(line: 453, column: 17, scope: !6994)
!7001 = !DILocation(line: 453, column: 20, scope: !6994)
!7002 = !DILocation(line: 454, column: 17, scope: !6994)
!7003 = !DILocation(line: 454, column: 22, scope: !6994)
!7004 = !DILocation(line: 455, column: 1, scope: !6994)
!7005 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !866, file: !866, line: 183, type: !904, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7006)
!7006 = !{!7007, !7008, !7009, !7010, !7011}
!7007 = !DILocalVariable(name: "dev", arg: 1, scope: !7005, file: !866, line: 183, type: !895)
!7008 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7005, file: !866, line: 184, type: !906)
!7009 = !DILocalVariable(name: "pclken", scope: !7005, file: !866, line: 186, type: !856)
!7010 = !DILocalVariable(name: "reg", scope: !7005, file: !866, line: 187, type: !1447)
!7011 = !DILocalVariable(name: "reg_val", scope: !7005, file: !866, line: 188, type: !110)
!7012 = !DILocation(line: 0, scope: !7005)
!7013 = !DILocation(line: 192, column: 6, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7005, file: !866, line: 192, column: 6)
!7015 = !DILocation(line: 192, column: 6, scope: !7005)
!7016 = !DILocation(line: 197, column: 52, scope: !7005)
!7017 = !DILocation(line: 197, column: 8, scope: !7005)
!7018 = !DILocation(line: 198, column: 12, scope: !7005)
!7019 = !DILocation(line: 199, column: 21, scope: !7005)
!7020 = !DILocation(line: 199, column: 10, scope: !7005)
!7021 = !DILocation(line: 200, column: 7, scope: !7005)
!7022 = !DILocation(line: 202, column: 2, scope: !7005)
!7023 = !DILocation(line: 203, column: 1, scope: !7005)
!7024 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !866, file: !866, line: 205, type: !904, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7025)
!7025 = !{!7026, !7027, !7028, !7029, !7030}
!7026 = !DILocalVariable(name: "dev", arg: 1, scope: !7024, file: !866, line: 205, type: !895)
!7027 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7024, file: !866, line: 206, type: !906)
!7028 = !DILocalVariable(name: "pclken", scope: !7024, file: !866, line: 208, type: !856)
!7029 = !DILocalVariable(name: "reg", scope: !7024, file: !866, line: 209, type: !1447)
!7030 = !DILocalVariable(name: "reg_val", scope: !7024, file: !866, line: 210, type: !110)
!7031 = !DILocation(line: 0, scope: !7024)
!7032 = !DILocation(line: 214, column: 6, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7024, file: !866, line: 214, column: 6)
!7034 = !DILocation(line: 214, column: 6, scope: !7024)
!7035 = !DILocation(line: 219, column: 52, scope: !7024)
!7036 = !DILocation(line: 219, column: 8, scope: !7024)
!7037 = !DILocation(line: 220, column: 12, scope: !7024)
!7038 = !DILocation(line: 221, column: 22, scope: !7024)
!7039 = !DILocation(line: 221, column: 13, scope: !7024)
!7040 = !DILocation(line: 221, column: 10, scope: !7024)
!7041 = !DILocation(line: 222, column: 7, scope: !7024)
!7042 = !DILocation(line: 224, column: 2, scope: !7024)
!7043 = !DILocation(line: 225, column: 1, scope: !7024)
!7044 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !866, file: !866, line: 262, type: !920, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7045)
!7045 = !{!7046, !7047, !7048, !7049, !7050, !7051, !7052, !7053}
!7046 = !DILocalVariable(name: "clock", arg: 1, scope: !7044, file: !866, line: 262, type: !895)
!7047 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7044, file: !866, line: 263, type: !906)
!7048 = !DILocalVariable(name: "rate", arg: 3, scope: !7044, file: !866, line: 264, type: !862)
!7049 = !DILocalVariable(name: "pclken", scope: !7044, file: !866, line: 266, type: !856)
!7050 = !DILocalVariable(name: "ahb_clock", scope: !7044, file: !866, line: 273, type: !110)
!7051 = !DILocalVariable(name: "apb1_clock", scope: !7044, file: !866, line: 274, type: !110)
!7052 = !DILocalVariable(name: "apb2_clock", scope: !7044, file: !866, line: 276, type: !110)
!7053 = !DILocalVariable(name: "ahb3_clock", scope: !7044, file: !866, line: 286, type: !110)
!7054 = !DILocation(line: 0, scope: !7044)
!7055 = !DILocation(line: 273, column: 23, scope: !7044)
!7056 = !DILocation(line: 299, column: 18, scope: !7044)
!7057 = !DILocation(line: 299, column: 2, scope: !7044)
!7058 = !DILocation(line: 274, column: 24, scope: !7044)
!7059 = !DILocation(line: 319, column: 3, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7044, file: !866, line: 299, column: 23)
!7061 = !DILocation(line: 276, column: 24, scope: !7044)
!7062 = !DILocation(line: 323, column: 3, scope: !7060)
!7063 = !DILocation(line: 346, column: 33, scope: !7060)
!7064 = !DILocation(line: 346, column: 11, scope: !7060)
!7065 = !DILocation(line: 350, column: 3, scope: !7060)
!7066 = !DILocation(line: 354, column: 33, scope: !7060)
!7067 = !DILocation(line: 354, column: 11, scope: !7060)
!7068 = !DILocation(line: 358, column: 3, scope: !7060)
!7069 = !DILocation(line: 374, column: 3, scope: !7060)
!7070 = !DILocation(line: 379, column: 3, scope: !7060)
!7071 = !DILocation(line: 0, scope: !7060)
!7072 = !DILocation(line: 396, column: 1, scope: !7044)
!7073 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !866, file: !866, line: 227, type: !936, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7074)
!7074 = !{!7075, !7076, !7077, !7078, !7079, !7080, !7081, !7082}
!7075 = !DILocalVariable(name: "dev", arg: 1, scope: !7073, file: !866, line: 227, type: !895)
!7076 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7073, file: !866, line: 228, type: !906)
!7077 = !DILocalVariable(name: "data", arg: 3, scope: !7073, file: !866, line: 229, type: !106)
!7078 = !DILocalVariable(name: "pclken", scope: !7073, file: !866, line: 233, type: !856)
!7079 = !DILocalVariable(name: "reg", scope: !7073, file: !866, line: 234, type: !1447)
!7080 = !DILocalVariable(name: "reg_val", scope: !7073, file: !866, line: 235, type: !110)
!7081 = !DILocalVariable(name: "dt_val", scope: !7073, file: !866, line: 235, type: !110)
!7082 = !DILocalVariable(name: "err", scope: !7073, file: !866, line: 236, type: !109)
!7083 = !DILocation(line: 0, scope: !7073)
!7084 = !DILocation(line: 241, column: 30, scope: !7073)
!7085 = !DILocation(line: 241, column: 8, scope: !7073)
!7086 = !DILocation(line: 242, column: 10, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7073, file: !866, line: 242, column: 6)
!7088 = !DILocation(line: 242, column: 6, scope: !7073)
!7089 = !DILocation(line: 247, column: 11, scope: !7073)
!7090 = !DILocation(line: 248, column: 6, scope: !7073)
!7091 = !DILocation(line: 247, column: 44, scope: !7073)
!7092 = !DILocation(line: 250, column: 6, scope: !7073)
!7093 = !DILocation(line: 249, column: 52, scope: !7073)
!7094 = !DILocation(line: 249, column: 8, scope: !7073)
!7095 = !DILocation(line: 251, column: 12, scope: !7073)
!7096 = !DILocation(line: 252, column: 10, scope: !7073)
!7097 = !DILocation(line: 253, column: 7, scope: !7073)
!7098 = !DILocation(line: 255, column: 2, scope: !7073)
!7099 = !DILocation(line: 260, column: 1, scope: !7073)
!7100 = distinct !DISubprogram(name: "enabled_clock", scope: !866, file: !866, line: 100, type: !7101, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7103)
!7101 = !DISubroutineType(types: !7102)
!7102 = !{!109, !110}
!7103 = !{!7104, !7105}
!7104 = !DILocalVariable(name: "src_clk", arg: 1, scope: !7100, file: !866, line: 100, type: !110)
!7105 = !DILocalVariable(name: "r", scope: !7100, file: !866, line: 102, type: !109)
!7106 = !DILocation(line: 0, scope: !7100)
!7107 = !DILocation(line: 104, column: 2, scope: !7100)
!7108 = !DILocation(line: 180, column: 2, scope: !7100)
!7109 = !DILocation(line: 181, column: 1, scope: !7100)
!7110 = distinct !DISubprogram(name: "get_bus_clock", scope: !866, file: !866, line: 79, type: !7111, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7113)
!7111 = !DISubroutineType(types: !7112)
!7112 = !{!110, !110, !110}
!7113 = !{!7114, !7115}
!7114 = !DILocalVariable(name: "clock", arg: 1, scope: !7110, file: !866, line: 79, type: !110)
!7115 = !DILocalVariable(name: "prescaler", arg: 2, scope: !7110, file: !866, line: 79, type: !110)
!7116 = !DILocation(line: 0, scope: !7110)
!7117 = !DILocation(line: 81, column: 15, scope: !7110)
!7118 = !DILocation(line: 81, column: 2, scope: !7110)
!7119 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !866, file: !866, line: 68, type: !7120, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7122)
!7120 = !DISubroutineType(types: !7121)
!7121 = !{!110, !110, !109, !109, !109}
!7122 = !{!7123, !7124, !7125, !7126}
!7123 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !7119, file: !866, line: 68, type: !110)
!7124 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !7119, file: !866, line: 69, type: !109)
!7125 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !7119, file: !866, line: 70, type: !109)
!7126 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !7119, file: !866, line: 71, type: !109)
!7127 = !DILocation(line: 0, scope: !7119)
!7128 = !DILocation(line: 75, column: 22, scope: !7119)
!7129 = !DILocation(line: 76, column: 13, scope: !7119)
!7130 = !DILocation(line: 75, column: 34, scope: !7119)
!7131 = !DILocation(line: 75, column: 2, scope: !7119)
!7132 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !866, file: !866, line: 641, type: !893, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7133)
!7133 = !{!7134, !7135, !7136}
!7134 = !DILocalVariable(name: "dev", arg: 1, scope: !7132, file: !866, line: 641, type: !895)
!7135 = !DILocalVariable(name: "old_flash_freq", scope: !7132, file: !866, line: 664, type: !110)
!7136 = !DILocalVariable(name: "new_flash_freq", scope: !7132, file: !866, line: 665, type: !110)
!7137 = !DILocation(line: 0, scope: !7132)
!7138 = !DILocation(line: 646, column: 2, scope: !7132)
!7139 = !DILocation(line: 667, column: 19, scope: !7132)
!7140 = !DILocation(line: 674, column: 21, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7132, file: !866, line: 674, column: 6)
!7142 = !DILocation(line: 674, column: 6, scope: !7132)
!7143 = !DILocation(line: 675, column: 3, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7141, file: !866, line: 674, column: 59)
!7145 = !DILocation(line: 676, column: 2, scope: !7144)
!7146 = !DILocation(line: 680, column: 2, scope: !7132)
!7147 = !DILocation(line: 683, column: 2, scope: !7132)
!7148 = !DILocation(line: 690, column: 3, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !866, line: 689, column: 9)
!7150 = distinct !DILexicalBlock(scope: !7132, file: !866, line: 685, column: 6)
!7151 = !DILocation(line: 695, column: 2, scope: !7132)
!7152 = !DILocation(line: 696, column: 2, scope: !7132)
!7153 = !DILocation(line: 696, column: 9, scope: !7132)
!7154 = !DILocation(line: 696, column: 34, scope: !7132)
!7155 = distinct !{!7155, !7152, !7156}
!7156 = !DILocation(line: 697, column: 2, scope: !7132)
!7157 = !DILocation(line: 720, column: 21, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7132, file: !866, line: 720, column: 6)
!7159 = !DILocation(line: 720, column: 6, scope: !7132)
!7160 = !DILocation(line: 721, column: 3, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7158, file: !866, line: 720, column: 60)
!7162 = !DILocation(line: 722, column: 2, scope: !7161)
!7163 = !DILocation(line: 725, column: 18, scope: !7132)
!7164 = !DILocation(line: 728, column: 2, scope: !7132)
!7165 = !DILocation(line: 730, column: 2, scope: !7132)
!7166 = !DILocation(line: 745, column: 2, scope: !7132)
!7167 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !7168, file: !7168, line: 3275, type: !5210, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7168 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7169 = !DILocation(line: 3277, column: 21, scope: !7167)
!7170 = !DILocation(line: 3277, column: 3, scope: !7167)
!7171 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !866, file: !866, line: 507, type: !2980, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7172 = !DILocation(line: 516, column: 4, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !866, line: 515, column: 10)
!7174 = distinct !DILexicalBlock(scope: !7175, file: !866, line: 513, column: 7)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !866, line: 510, column: 37)
!7176 = distinct !DILexicalBlock(scope: !7171, file: !866, line: 510, column: 6)
!7177 = !DILocation(line: 526, column: 3, scope: !7175)
!7178 = !DILocation(line: 527, column: 3, scope: !7175)
!7179 = !DILocation(line: 527, column: 10, scope: !7175)
!7180 = !DILocation(line: 527, column: 31, scope: !7175)
!7181 = distinct !{!7181, !7178, !7182}
!7182 = !DILocation(line: 529, column: 3, scope: !7175)
!7183 = !DILocation(line: 583, column: 3, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !866, line: 577, column: 37)
!7185 = distinct !DILexicalBlock(scope: !7171, file: !866, line: 577, column: 6)
!7186 = !DILocation(line: 584, column: 3, scope: !7184)
!7187 = !DILocation(line: 584, column: 10, scope: !7184)
!7188 = !DILocation(line: 584, column: 31, scope: !7184)
!7189 = distinct !{!7189, !7186, !7190}
!7190 = !DILocation(line: 585, column: 3, scope: !7184)
!7191 = !DILocation(line: 627, column: 1, scope: !7171)
!7192 = distinct !DISubprogram(name: "set_up_plls", scope: !866, file: !866, line: 448, type: !2980, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7193 = !DILocation(line: 460, column: 6, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7192, file: !866, line: 460, column: 6)
!7195 = !DILocation(line: 460, column: 31, scope: !7194)
!7196 = !DILocation(line: 460, column: 6, scope: !7192)
!7197 = !DILocation(line: 461, column: 3, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7194, file: !866, line: 460, column: 67)
!7199 = !DILocation(line: 462, column: 3, scope: !7198)
!7200 = !DILocation(line: 463, column: 2, scope: !7198)
!7201 = !DILocation(line: 464, column: 2, scope: !7192)
!7202 = !DILocation(line: 488, column: 2, scope: !7192)
!7203 = !DILocation(line: 492, column: 2, scope: !7192)
!7204 = !DILocation(line: 496, column: 2, scope: !7192)
!7205 = !DILocation(line: 499, column: 2, scope: !7192)
!7206 = !DILocation(line: 500, column: 2, scope: !7192)
!7207 = !DILocation(line: 500, column: 9, scope: !7192)
!7208 = !DILocation(line: 500, column: 30, scope: !7192)
!7209 = distinct !{!7209, !7206, !7210}
!7210 = !DILocation(line: 502, column: 2, scope: !7192)
!7211 = !DILocation(line: 505, column: 1, scope: !7192)
!7212 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7168, file: !7168, line: 3224, type: !3146, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7213)
!7213 = !{!7214}
!7214 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7212, file: !7168, line: 3224, type: !110)
!7215 = !DILocation(line: 0, scope: !7212)
!7216 = !DILocation(line: 3226, column: 3, scope: !7212)
!7217 = !DILocation(line: 3227, column: 1, scope: !7212)
!7218 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7168, file: !7168, line: 3188, type: !3146, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7219)
!7219 = !{!7220}
!7220 = !DILocalVariable(name: "Source", arg: 1, scope: !7218, file: !7168, line: 3188, type: !110)
!7221 = !DILocation(line: 0, scope: !7218)
!7222 = !DILocation(line: 3190, column: 3, scope: !7218)
!7223 = !DILocation(line: 3191, column: 1, scope: !7218)
!7224 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7168, file: !7168, line: 3204, type: !5210, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7225 = !DILocation(line: 3206, column: 21, scope: !7224)
!7226 = !DILocation(line: 3206, column: 3, scope: !7224)
!7227 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7168, file: !7168, line: 3240, type: !3146, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7228)
!7228 = !{!7229}
!7229 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7227, file: !7168, line: 3240, type: !110)
!7230 = !DILocation(line: 0, scope: !7227)
!7231 = !DILocation(line: 3242, column: 3, scope: !7227)
!7232 = !DILocation(line: 3243, column: 1, scope: !7227)
!7233 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7168, file: !7168, line: 3256, type: !3146, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7234)
!7234 = !{!7235}
!7235 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7233, file: !7168, line: 3256, type: !110)
!7236 = !DILocation(line: 0, scope: !7233)
!7237 = !DILocation(line: 3258, column: 3, scope: !7233)
!7238 = !DILocation(line: 3259, column: 1, scope: !7233)
!7239 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !866, file: !866, line: 409, type: !2980, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7240 = !DILocation(line: 412, column: 6, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7239, file: !866, line: 412, column: 6)
!7242 = !DILocation(line: 412, column: 27, scope: !7241)
!7243 = !DILocation(line: 412, column: 6, scope: !7239)
!7244 = !DILocation(line: 414, column: 3, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7241, file: !866, line: 412, column: 33)
!7246 = !DILocation(line: 415, column: 3, scope: !7245)
!7247 = !DILocation(line: 415, column: 10, scope: !7245)
!7248 = !DILocation(line: 415, column: 31, scope: !7245)
!7249 = distinct !{!7249, !7246, !7250}
!7250 = !DILocation(line: 417, column: 3, scope: !7245)
!7251 = !DILocation(line: 421, column: 2, scope: !7239)
!7252 = !DILocation(line: 422, column: 2, scope: !7239)
!7253 = !DILocation(line: 422, column: 9, scope: !7239)
!7254 = !DILocation(line: 422, column: 34, scope: !7239)
!7255 = distinct !{!7255, !7252, !7256}
!7256 = !DILocation(line: 423, column: 2, scope: !7239)
!7257 = !DILocation(line: 424, column: 1, scope: !7239)
!7258 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !7168, file: !7168, line: 4195, type: !2980, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7259 = !DILocation(line: 4197, column: 3, scope: !7258)
!7260 = !DILocation(line: 4198, column: 1, scope: !7258)
!7261 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7168, file: !7168, line: 4184, type: !2980, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7262 = !DILocation(line: 4186, column: 3, scope: !7261)
!7263 = !DILocation(line: 4187, column: 1, scope: !7261)
!7264 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7168, file: !7168, line: 4205, type: !5210, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7265 = !DILocation(line: 4207, column: 11, scope: !7264)
!7266 = !DILocation(line: 4207, column: 44, scope: !7264)
!7267 = !DILocation(line: 4207, column: 3, scope: !7264)
!7268 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7168, file: !7168, line: 3007, type: !5210, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7269 = !DILocation(line: 3009, column: 11, scope: !7268)
!7270 = !DILocation(line: 3009, column: 44, scope: !7268)
!7271 = !DILocation(line: 3009, column: 3, scope: !7268)
!7272 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7168, file: !7168, line: 2987, type: !2980, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7273 = !DILocation(line: 2989, column: 3, scope: !7272)
!7274 = !DILocation(line: 2990, column: 1, scope: !7272)
!7275 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7168, file: !7168, line: 2939, type: !2980, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7276 = !DILocation(line: 2941, column: 3, scope: !7275)
!7277 = !DILocation(line: 2942, column: 1, scope: !7275)
!7278 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7168, file: !7168, line: 2949, type: !2980, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7279 = !DILocation(line: 2951, column: 3, scope: !7278)
!7280 = !DILocation(line: 2952, column: 1, scope: !7278)
!7281 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7168, file: !7168, line: 2969, type: !5210, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7282 = !DILocation(line: 2971, column: 11, scope: !7281)
!7283 = !DILocation(line: 2971, column: 44, scope: !7281)
!7284 = !DILocation(line: 2971, column: 3, scope: !7281)
!7285 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !7168, file: !7168, line: 3143, type: !2980, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7286 = !DILocation(line: 3145, column: 3, scope: !7285)
!7287 = !DILocation(line: 3146, column: 1, scope: !7285)
!7288 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !7168, file: !7168, line: 3163, type: !5210, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !251)
!7289 = !DILocation(line: 3165, column: 11, scope: !7288)
!7290 = !DILocation(line: 3165, column: 46, scope: !7288)
!7291 = !DILocation(line: 3165, column: 3, scope: !7288)
!7292 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !7293, file: !7293, line: 40, type: !5210, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !251)
!7293 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7294 = !DILocation(line: 45, column: 3, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7296, file: !7293, line: 44, column: 44)
!7296 = distinct !DILexicalBlock(scope: !7297, file: !7293, line: 44, column: 13)
!7297 = distinct !DILexicalBlock(scope: !7292, file: !7293, line: 42, column: 6)
!7298 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !7293, file: !7293, line: 56, type: !2980, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !251)
!7299 = !DILocation(line: 58, column: 2, scope: !7298)
!7300 = !DILocation(line: 62, column: 1, scope: !7298)
!7301 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7168, file: !7168, line: 4304, type: !7302, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !7304)
!7302 = !DISubroutineType(types: !7303)
!7303 = !{null, !110, !110, !110, !110}
!7304 = !{!7305, !7306, !7307, !7308}
!7305 = !DILocalVariable(name: "Source", arg: 1, scope: !7301, file: !7168, line: 4304, type: !110)
!7306 = !DILocalVariable(name: "PLLM", arg: 2, scope: !7301, file: !7168, line: 4304, type: !110)
!7307 = !DILocalVariable(name: "PLLN", arg: 3, scope: !7301, file: !7168, line: 4304, type: !110)
!7308 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !7301, file: !7168, line: 4304, type: !110)
!7309 = !DILocation(line: 0, scope: !7301)
!7310 = !DILocation(line: 4306, column: 3, scope: !7301)
!7311 = !DILocation(line: 4308, column: 3, scope: !7301)
!7312 = !DILocation(line: 4310, column: 3, scope: !7301)
!7313 = !DILocation(line: 4312, column: 1, scope: !7301)
!7314 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !7293, file: !7293, line: 69, type: !2980, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !251)
!7315 = !DILocation(line: 72, column: 2, scope: !7314)
!7316 = !DILocation(line: 73, column: 1, scope: !7314)
!7317 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7318, file: !7318, line: 1185, type: !3146, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !7319)
!7318 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7319 = !{!7320, !7321}
!7320 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7317, file: !7318, line: 1185, type: !110)
!7321 = !DILocalVariable(name: "tmpreg", scope: !7317, file: !7318, line: 1187, type: !282)
!7322 = !DILocation(line: 0, scope: !7317)
!7323 = !DILocation(line: 1187, column: 3, scope: !7317)
!7324 = !DILocation(line: 1187, column: 17, scope: !7317)
!7325 = !DILocation(line: 1188, column: 3, scope: !7317)
!7326 = !DILocation(line: 1190, column: 12, scope: !7317)
!7327 = !DILocation(line: 1190, column: 10, scope: !7317)
!7328 = !DILocation(line: 1191, column: 9, scope: !7317)
!7329 = !DILocation(line: 1192, column: 1, scope: !7317)
!7330 = distinct !DISubprogram(name: "uart_console_init", scope: !997, file: !997, line: 588, type: !974, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !940, retainedNodes: !7331)
!7331 = !{!7332}
!7332 = !DILocalVariable(name: "arg", arg: 1, scope: !7330, file: !997, line: 588, type: !952)
!7333 = !DILocation(line: 0, scope: !7330)
!7334 = !DILocation(line: 593, column: 7, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7330, file: !997, line: 593, column: 6)
!7336 = !DILocation(line: 593, column: 6, scope: !7330)
!7337 = !DILocation(line: 597, column: 2, scope: !7330)
!7338 = !DILocation(line: 599, column: 2, scope: !7330)
!7339 = !DILocation(line: 600, column: 1, scope: !7330)
!7340 = distinct !DISubprogram(name: "device_is_ready", scope: !7341, file: !7341, line: 47, type: !7342, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !940, retainedNodes: !7344)
!7341 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!7342 = !DISubroutineType(types: !7343)
!7343 = !{!315, !952}
!7344 = !{!7345}
!7345 = !DILocalVariable(name: "dev", arg: 1, scope: !7340, file: !7341, line: 47, type: !952)
!7346 = !DILocation(line: 0, scope: !7340)
!7347 = !DILocation(line: 55, column: 2, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7340, file: !7341, line: 55, column: 2)
!7349 = !{i64 2155286454}
!7350 = !DILocation(line: 56, column: 9, scope: !7340)
!7351 = !DILocation(line: 56, column: 2, scope: !7340)
!7352 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !997, file: !997, line: 573, type: !2980, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !940, retainedNodes: !251)
!7353 = !DILocation(line: 576, column: 2, scope: !7352)
!7354 = !DILocation(line: 579, column: 2, scope: !7352)
!7355 = !DILocation(line: 581, column: 1, scope: !7352)
!7356 = distinct !DISubprogram(name: "console_out", scope: !997, file: !997, line: 77, type: !269, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !940, retainedNodes: !7357)
!7357 = !{!7358}
!7358 = !DILocalVariable(name: "c", arg: 1, scope: !7356, file: !997, line: 77, type: !109)
!7359 = !DILocation(line: 0, scope: !7356)
!7360 = !DILocation(line: 89, column: 11, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7356, file: !997, line: 89, column: 6)
!7362 = !DILocation(line: 89, column: 6, scope: !7356)
!7363 = !DILocation(line: 90, column: 3, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7361, file: !997, line: 89, column: 17)
!7365 = !DILocation(line: 91, column: 2, scope: !7364)
!7366 = !DILocation(line: 92, column: 34, scope: !7356)
!7367 = !DILocation(line: 92, column: 2, scope: !7356)
!7368 = !DILocation(line: 94, column: 2, scope: !7356)
!7369 = distinct !DISubprogram(name: "uart_poll_out", scope: !7370, file: !7370, line: 95, type: !970, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !940, retainedNodes: !7371)
!7370 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/synchronization")
!7371 = !{!7372, !7373}
!7372 = !DILocalVariable(name: "dev", arg: 1, scope: !7369, file: !7370, line: 95, type: !952)
!7373 = !DILocalVariable(name: "out_char", arg: 2, scope: !7369, file: !7370, line: 95, type: !179)
!7374 = !DILocation(line: 0, scope: !7369)
!7375 = !DILocation(line: 105, column: 2, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7369, file: !7370, line: 105, column: 2)
!7377 = !{i64 2155369845}
!7378 = !DILocation(line: 106, column: 2, scope: !7369)
!7379 = !DILocation(line: 107, column: 1, scope: !7369)
!7380 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !946, file: !946, line: 574, type: !970, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !940, retainedNodes: !7381)
!7381 = !{!7382, !7383, !7384}
!7382 = !DILocalVariable(name: "dev", arg: 1, scope: !7380, file: !946, line: 574, type: !952)
!7383 = !DILocalVariable(name: "out_char", arg: 2, scope: !7380, file: !946, line: 575, type: !179)
!7384 = !DILocalVariable(name: "api", scope: !7380, file: !946, line: 577, type: !943)
!7385 = !DILocation(line: 0, scope: !7380)
!7386 = !DILocation(line: 578, column: 40, scope: !7380)
!7387 = !DILocation(line: 580, column: 7, scope: !7380)
!7388 = !DILocation(line: 580, column: 2, scope: !7380)
!7389 = !DILocation(line: 581, column: 1, scope: !7380)
!7390 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !302, file: !302, line: 730, type: !7342, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !940, retainedNodes: !7391)
!7391 = !{!7392}
!7392 = !DILocalVariable(name: "dev", arg: 1, scope: !7390, file: !302, line: 730, type: !952)
!7393 = !DILocation(line: 0, scope: !7390)
!7394 = !DILocation(line: 732, column: 9, scope: !7390)
!7395 = !DILocation(line: 732, column: 2, scope: !7390)
!7396 = distinct !DISubprogram(name: "uart_register_input", scope: !997, file: !997, line: 560, type: !7397, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !940, retainedNodes: !7442)
!7397 = !DISubroutineType(types: !7398)
!7398 = !{null, !7399, !7399, !7439}
!7399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7400, size: 32)
!7400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 128, elements: !7401)
!7401 = !{!7402}
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7400, file: !118, line: 2209, baseType: !7403, size: 128)
!7403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 128, elements: !7404)
!7404 = !{!7405, !7418, !7420}
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7403, file: !118, line: 1710, baseType: !7406, size: 64)
!7406 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7407, line: 46, baseType: !7408)
!7407 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7407, line: 41, size: 64, elements: !7409)
!7409 = !{!7410, !7417}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7408, file: !7407, line: 42, baseType: !7411, size: 32)
!7411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7412, size: 32)
!7412 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7407, line: 39, baseType: !7413)
!7413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7407, line: 35, size: 32, elements: !7414)
!7414 = !{!7415}
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7413, file: !7407, line: 36, baseType: !7416, size: 32)
!7416 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7407, line: 32, baseType: !110)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7408, file: !7407, line: 43, baseType: !7411, size: 32, offset: 32)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7403, file: !118, line: 1711, baseType: !7419, offset: 64)
!7419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7403, file: !118, line: 1712, baseType: !7421, size: 64, offset: 64)
!7421 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7422)
!7422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7423)
!7423 = !{!7424}
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7422, file: !122, line: 232, baseType: !7425, size: 64)
!7425 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7426)
!7426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7427)
!7427 = !{!7428, !7434}
!7428 = !DIDerivedType(tag: DW_TAG_member, scope: !7426, file: !127, line: 38, baseType: !7429, size: 32)
!7429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7426, file: !127, line: 38, size: 32, elements: !7430)
!7430 = !{!7431, !7433}
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7429, file: !127, line: 39, baseType: !7432, size: 32)
!7432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7426, size: 32)
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7429, file: !127, line: 40, baseType: !7432, size: 32)
!7434 = !DIDerivedType(tag: DW_TAG_member, scope: !7426, file: !127, line: 42, baseType: !7435, size: 32, offset: 32)
!7435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7426, file: !127, line: 42, size: 32, elements: !7436)
!7436 = !{!7437, !7438}
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7435, file: !127, line: 43, baseType: !7432, size: 32)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7435, file: !127, line: 44, baseType: !7432, size: 32)
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7440, size: 32)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{!178, !1134, !178}
!7442 = !{!7443, !7444, !7445}
!7443 = !DILocalVariable(name: "avail", arg: 1, scope: !7396, file: !997, line: 560, type: !7399)
!7444 = !DILocalVariable(name: "lines", arg: 2, scope: !7396, file: !997, line: 560, type: !7399)
!7445 = !DILocalVariable(name: "completion", arg: 3, scope: !7396, file: !997, line: 561, type: !7439)
!7446 = !DILocation(line: 0, scope: !7396)
!7447 = !DILocation(line: 566, column: 1, scope: !7396)
!7448 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1178, file: !1178, line: 523, type: !1033, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7449)
!7449 = !{!7450, !7451, !7452, !7453, !7454}
!7450 = !DILocalVariable(name: "dev", arg: 1, scope: !7448, file: !1178, line: 523, type: !1035)
!7451 = !DILocalVariable(name: "pin", arg: 2, scope: !7448, file: !1178, line: 524, type: !1050)
!7452 = !DILocalVariable(name: "flags", arg: 3, scope: !7448, file: !1178, line: 524, type: !1051)
!7453 = !DILocalVariable(name: "err", scope: !7448, file: !1178, line: 526, type: !109)
!7454 = !DILocalVariable(name: "pincfg", scope: !7448, file: !1178, line: 527, type: !109)
!7455 = !DILocation(line: 0, scope: !7448)
!7456 = !DILocation(line: 527, column: 2, scope: !7448)
!7457 = !DILocation(line: 532, column: 8, scope: !7448)
!7458 = !DILocation(line: 533, column: 10, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7448, file: !1178, line: 533, column: 6)
!7460 = !DILocation(line: 533, column: 6, scope: !7448)
!7461 = !DILocation(line: 543, column: 13, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7448, file: !1178, line: 543, column: 6)
!7463 = !DILocation(line: 543, column: 28, scope: !7462)
!7464 = !DILocation(line: 543, column: 6, scope: !7448)
!7465 = !DILocation(line: 544, column: 14, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7467, file: !1178, line: 544, column: 7)
!7467 = distinct !DILexicalBlock(scope: !7462, file: !1178, line: 543, column: 34)
!7468 = !DILocation(line: 544, column: 39, scope: !7466)
!7469 = !DILocation(line: 544, column: 7, scope: !7467)
!7470 = !DILocation(line: 545, column: 38, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7466, file: !1178, line: 544, column: 45)
!7472 = !DILocation(line: 545, column: 4, scope: !7471)
!7473 = !DILocation(line: 546, column: 3, scope: !7471)
!7474 = !DILocation(line: 546, column: 21, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7466, file: !1178, line: 546, column: 14)
!7476 = !DILocation(line: 546, column: 45, scope: !7475)
!7477 = !DILocation(line: 546, column: 14, scope: !7466)
!7478 = !DILocation(line: 547, column: 40, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7475, file: !1178, line: 546, column: 51)
!7480 = !DILocation(line: 547, column: 4, scope: !7479)
!7481 = !DILocation(line: 548, column: 3, scope: !7479)
!7482 = !DILocation(line: 551, column: 32, scope: !7448)
!7483 = !DILocation(line: 551, column: 37, scope: !7448)
!7484 = !DILocation(line: 551, column: 2, scope: !7448)
!7485 = !DILocation(line: 554, column: 6, scope: !7448)
!7486 = !DILocation(line: 562, column: 1, scope: !7448)
!7487 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1178, file: !1178, line: 410, type: !7488, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7490)
!7488 = !DISubroutineType(types: !7489)
!7489 = !{!109, !1035, !862}
!7490 = !{!7491, !7492, !7493, !7495}
!7491 = !DILocalVariable(name: "dev", arg: 1, scope: !7487, file: !1178, line: 410, type: !1035)
!7492 = !DILocalVariable(name: "value", arg: 2, scope: !7487, file: !1178, line: 410, type: !862)
!7493 = !DILocalVariable(name: "cfg", scope: !7487, file: !1178, line: 412, type: !7494)
!7494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!7495 = !DILocalVariable(name: "gpio", scope: !7487, file: !1178, line: 413, type: !1108)
!7496 = !DILocation(line: 0, scope: !7487)
!7497 = !DILocation(line: 412, column: 45, scope: !7487)
!7498 = !DILocation(line: 413, column: 44, scope: !7487)
!7499 = !DILocation(line: 415, column: 11, scope: !7487)
!7500 = !DILocation(line: 415, column: 9, scope: !7487)
!7501 = !DILocation(line: 417, column: 2, scope: !7487)
!7502 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1178, file: !1178, line: 420, type: !1060, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7503)
!7503 = !{!7504, !7505, !7506, !7507, !7508, !7509}
!7504 = !DILocalVariable(name: "dev", arg: 1, scope: !7502, file: !1178, line: 420, type: !1035)
!7505 = !DILocalVariable(name: "mask", arg: 2, scope: !7502, file: !1178, line: 421, type: !1062)
!7506 = !DILocalVariable(name: "value", arg: 3, scope: !7502, file: !1178, line: 422, type: !1057)
!7507 = !DILocalVariable(name: "cfg", scope: !7502, file: !1178, line: 424, type: !7494)
!7508 = !DILocalVariable(name: "gpio", scope: !7502, file: !1178, line: 425, type: !1108)
!7509 = !DILocalVariable(name: "port_value", scope: !7502, file: !1178, line: 426, type: !110)
!7510 = !DILocation(line: 0, scope: !7502)
!7511 = !DILocation(line: 424, column: 45, scope: !7502)
!7512 = !DILocation(line: 425, column: 44, scope: !7502)
!7513 = !DILocation(line: 430, column: 15, scope: !7502)
!7514 = !DILocation(line: 431, column: 46, scope: !7502)
!7515 = !DILocation(line: 431, column: 44, scope: !7502)
!7516 = !DILocation(line: 431, column: 61, scope: !7502)
!7517 = !DILocation(line: 431, column: 53, scope: !7502)
!7518 = !DILocation(line: 431, column: 2, scope: !7502)
!7519 = !DILocation(line: 435, column: 2, scope: !7502)
!7520 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1178, file: !1178, line: 438, type: !1065, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7521)
!7521 = !{!7522, !7523, !7524, !7525}
!7522 = !DILocalVariable(name: "dev", arg: 1, scope: !7520, file: !1178, line: 438, type: !1035)
!7523 = !DILocalVariable(name: "pins", arg: 2, scope: !7520, file: !1178, line: 439, type: !1062)
!7524 = !DILocalVariable(name: "cfg", scope: !7520, file: !1178, line: 441, type: !7494)
!7525 = !DILocalVariable(name: "gpio", scope: !7520, file: !1178, line: 442, type: !1108)
!7526 = !DILocation(line: 0, scope: !7520)
!7527 = !DILocation(line: 441, column: 45, scope: !7520)
!7528 = !DILocation(line: 442, column: 44, scope: !7520)
!7529 = !DILocation(line: 448, column: 2, scope: !7520)
!7530 = !DILocation(line: 450, column: 2, scope: !7520)
!7531 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1178, file: !1178, line: 453, type: !1065, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7532)
!7532 = !{!7533, !7534, !7535, !7536}
!7533 = !DILocalVariable(name: "dev", arg: 1, scope: !7531, file: !1178, line: 453, type: !1035)
!7534 = !DILocalVariable(name: "pins", arg: 2, scope: !7531, file: !1178, line: 454, type: !1062)
!7535 = !DILocalVariable(name: "cfg", scope: !7531, file: !1178, line: 456, type: !7494)
!7536 = !DILocalVariable(name: "gpio", scope: !7531, file: !1178, line: 457, type: !1108)
!7537 = !DILocation(line: 0, scope: !7531)
!7538 = !DILocation(line: 456, column: 45, scope: !7531)
!7539 = !DILocation(line: 457, column: 44, scope: !7531)
!7540 = !DILocation(line: 467, column: 2, scope: !7531)
!7541 = !DILocation(line: 470, column: 2, scope: !7531)
!7542 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1178, file: !1178, line: 473, type: !1065, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7543)
!7543 = !{!7544, !7545, !7546, !7547}
!7544 = !DILocalVariable(name: "dev", arg: 1, scope: !7542, file: !1178, line: 473, type: !1035)
!7545 = !DILocalVariable(name: "pins", arg: 2, scope: !7542, file: !1178, line: 474, type: !1062)
!7546 = !DILocalVariable(name: "cfg", scope: !7542, file: !1178, line: 476, type: !7494)
!7547 = !DILocalVariable(name: "gpio", scope: !7542, file: !1178, line: 477, type: !1108)
!7548 = !DILocation(line: 0, scope: !7542)
!7549 = !DILocation(line: 476, column: 45, scope: !7542)
!7550 = !DILocation(line: 477, column: 44, scope: !7542)
!7551 = !DILocation(line: 484, column: 2, scope: !7542)
!7552 = !DILocation(line: 487, column: 2, scope: !7542)
!7553 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1178, file: !1178, line: 594, type: !1071, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7554)
!7554 = !{!7555, !7556, !7557, !7558, !7559, !7560, !7562, !7563, !7564}
!7555 = !DILocalVariable(name: "dev", arg: 1, scope: !7553, file: !1178, line: 594, type: !1035)
!7556 = !DILocalVariable(name: "pin", arg: 2, scope: !7553, file: !1178, line: 595, type: !1050)
!7557 = !DILocalVariable(name: "mode", arg: 3, scope: !7553, file: !1178, line: 596, type: !1009)
!7558 = !DILocalVariable(name: "trig", arg: 4, scope: !7553, file: !1178, line: 597, type: !1015)
!7559 = !DILocalVariable(name: "cfg", scope: !7553, file: !1178, line: 599, type: !7494)
!7560 = !DILocalVariable(name: "data", scope: !7553, file: !1178, line: 600, type: !7561)
!7561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!7562 = !DILocalVariable(name: "edge", scope: !7553, file: !1178, line: 601, type: !109)
!7563 = !DILocalVariable(name: "err", scope: !7553, file: !1178, line: 602, type: !109)
!7564 = !DILabel(scope: !7553, name: "exit", file: !1178, line: 643)
!7565 = !DILocation(line: 0, scope: !7553)
!7566 = !DILocation(line: 599, column: 45, scope: !7553)
!7567 = !DILocation(line: 604, column: 6, scope: !7553)
!7568 = !DILocation(line: 605, column: 34, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7570, file: !1178, line: 605, column: 7)
!7570 = distinct !DILexicalBlock(scope: !7571, file: !1178, line: 604, column: 38)
!7571 = distinct !DILexicalBlock(scope: !7553, file: !1178, line: 604, column: 6)
!7572 = !DILocation(line: 605, column: 7, scope: !7569)
!7573 = !DILocation(line: 605, column: 47, scope: !7569)
!7574 = !DILocation(line: 605, column: 39, scope: !7569)
!7575 = !DILocation(line: 605, column: 7, scope: !7570)
!7576 = !DILocation(line: 606, column: 4, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7569, file: !1178, line: 605, column: 53)
!7578 = !DILocation(line: 607, column: 4, scope: !7577)
!7579 = !DILocation(line: 608, column: 4, scope: !7577)
!7580 = !DILocation(line: 609, column: 3, scope: !7577)
!7581 = !DILocation(line: 600, column: 38, scope: !7553)
!7582 = !DILocation(line: 620, column: 30, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7553, file: !1178, line: 620, column: 6)
!7584 = !DILocation(line: 620, column: 6, scope: !7583)
!7585 = !DILocation(line: 620, column: 57, scope: !7583)
!7586 = !DILocation(line: 620, column: 6, scope: !7553)
!7587 = !DILocation(line: 625, column: 29, scope: !7553)
!7588 = !DILocation(line: 625, column: 2, scope: !7553)
!7589 = !DILocation(line: 627, column: 2, scope: !7553)
!7590 = !DILocation(line: 630, column: 3, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7553, file: !1178, line: 627, column: 16)
!7592 = !DILocation(line: 633, column: 3, scope: !7591)
!7593 = !DILocation(line: 636, column: 3, scope: !7591)
!7594 = !DILocation(line: 639, column: 2, scope: !7553)
!7595 = !DILocation(line: 641, column: 2, scope: !7553)
!7596 = !DILocation(line: 643, column: 1, scope: !7553)
!7597 = !DILocation(line: 644, column: 2, scope: !7553)
!7598 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1178, file: !1178, line: 647, type: !1075, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7599)
!7599 = !{!7600, !7601, !7602, !7603}
!7600 = !DILocalVariable(name: "dev", arg: 1, scope: !7598, file: !1178, line: 647, type: !1035)
!7601 = !DILocalVariable(name: "callback", arg: 2, scope: !7598, file: !1178, line: 648, type: !1077)
!7602 = !DILocalVariable(name: "set", arg: 3, scope: !7598, file: !1178, line: 649, type: !315)
!7603 = !DILocalVariable(name: "data", scope: !7598, file: !1178, line: 651, type: !7561)
!7604 = !DILocation(line: 0, scope: !7598)
!7605 = !DILocation(line: 651, column: 38, scope: !7598)
!7606 = !DILocation(line: 653, column: 37, scope: !7598)
!7607 = !DILocation(line: 653, column: 9, scope: !7598)
!7608 = !DILocation(line: 653, column: 2, scope: !7598)
!7609 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7610, file: !7610, line: 38, type: !7611, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7614)
!7610 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7611 = !DISubroutineType(types: !7612)
!7612 = !{!109, !7613, !1077, !315}
!7613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!7614 = !{!7615, !7616, !7617}
!7615 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7609, file: !7610, line: 38, type: !7613)
!7616 = !DILocalVariable(name: "callback", arg: 2, scope: !7609, file: !7610, line: 39, type: !1077)
!7617 = !DILocalVariable(name: "set", arg: 3, scope: !7609, file: !7610, line: 40, type: !315)
!7618 = !DILocation(line: 0, scope: !7609)
!7619 = !DILocation(line: 45, column: 7, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7609, file: !7610, line: 45, column: 6)
!7621 = !DILocation(line: 45, column: 6, scope: !7609)
!7622 = !DILocation(line: 46, column: 56, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !7610, line: 46, column: 7)
!7624 = distinct !DILexicalBlock(scope: !7620, file: !7610, line: 45, column: 38)
!7625 = !DILocation(line: 46, column: 8, scope: !7623)
!7626 = !DILocation(line: 46, column: 7, scope: !7624)
!7627 = !DILocation(line: 51, column: 13, scope: !7620)
!7628 = !DILocation(line: 56, column: 43, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !7610, line: 55, column: 11)
!7630 = distinct !DILexicalBlock(scope: !7609, file: !7610, line: 55, column: 6)
!7631 = !DILocation(line: 56, column: 3, scope: !7629)
!7632 = !DILocation(line: 57, column: 2, scope: !7629)
!7633 = !DILocation(line: 60, column: 1, scope: !7609)
!7634 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1082, file: !1082, line: 261, type: !7635, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7637)
!7635 = !DISubroutineType(types: !7636)
!7636 = !{!315, !7613}
!7637 = !{!7638}
!7638 = !DILocalVariable(name: "list", arg: 1, scope: !7634, file: !1082, line: 261, type: !7613)
!7639 = !DILocation(line: 0, scope: !7634)
!7640 = !DILocation(line: 261, column: 1, scope: !7634)
!7641 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1082, file: !1082, line: 417, type: !7642, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7644)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{!315, !7613, !1251}
!7644 = !{!7645, !7646, !7647, !7648}
!7645 = !DILocalVariable(name: "list", arg: 1, scope: !7641, file: !1082, line: 417, type: !7613)
!7646 = !DILocalVariable(name: "node", arg: 2, scope: !7641, file: !1082, line: 417, type: !1251)
!7647 = !DILocalVariable(name: "prev", scope: !7641, file: !1082, line: 417, type: !1251)
!7648 = !DILocalVariable(name: "test", scope: !7641, file: !1082, line: 417, type: !1251)
!7649 = !DILocation(line: 0, scope: !7641)
!7650 = !DILocation(line: 417, column: 1, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7641, file: !1082, line: 417, column: 1)
!7652 = !DILocation(line: 417, column: 1, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7651, file: !1082, line: 417, column: 1)
!7654 = !DILocation(line: 417, column: 1, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7656, file: !1082, line: 417, column: 1)
!7656 = distinct !DILexicalBlock(scope: !7653, file: !1082, line: 417, column: 1)
!7657 = !DILocation(line: 417, column: 1, scope: !7656)
!7658 = distinct !{!7658, !7650, !7650}
!7659 = !DILocation(line: 417, column: 1, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7655, file: !1082, line: 417, column: 1)
!7661 = !DILocation(line: 417, column: 1, scope: !7641)
!7662 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1082, file: !1082, line: 298, type: !7663, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7665)
!7663 = !DISubroutineType(types: !7664)
!7664 = !{null, !7613, !1251}
!7665 = !{!7666, !7667}
!7666 = !DILocalVariable(name: "list", arg: 1, scope: !7662, file: !1082, line: 298, type: !7613)
!7667 = !DILocalVariable(name: "node", arg: 2, scope: !7662, file: !1082, line: 298, type: !1251)
!7668 = !DILocation(line: 0, scope: !7662)
!7669 = !DILocation(line: 298, column: 1, scope: !7662)
!7670 = !DILocation(line: 298, column: 1, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7662, file: !1082, line: 298, column: 1)
!7672 = !DILocation(line: 298, column: 1, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7671, file: !1082, line: 298, column: 1)
!7674 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1082, file: !1082, line: 231, type: !7675, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7677)
!7675 = !DISubroutineType(types: !7676)
!7676 = !{!1251, !7613}
!7677 = !{!7678}
!7678 = !DILocalVariable(name: "list", arg: 1, scope: !7674, file: !1082, line: 231, type: !7613)
!7679 = !DILocation(line: 0, scope: !7674)
!7680 = !DILocation(line: 233, column: 15, scope: !7674)
!7681 = !DILocation(line: 233, column: 2, scope: !7674)
!7682 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1082, file: !1082, line: 209, type: !7683, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7685)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{null, !1251, !1251}
!7685 = !{!7686, !7687}
!7686 = !DILocalVariable(name: "parent", arg: 1, scope: !7682, file: !1082, line: 209, type: !1251)
!7687 = !DILocalVariable(name: "child", arg: 2, scope: !7682, file: !1082, line: 209, type: !1251)
!7688 = !DILocation(line: 0, scope: !7682)
!7689 = !DILocation(line: 211, column: 10, scope: !7682)
!7690 = !DILocation(line: 211, column: 15, scope: !7682)
!7691 = !DILocation(line: 212, column: 1, scope: !7682)
!7692 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1082, file: !1082, line: 214, type: !7663, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7693)
!7693 = !{!7694, !7695}
!7694 = !DILocalVariable(name: "list", arg: 1, scope: !7692, file: !1082, line: 214, type: !7613)
!7695 = !DILocalVariable(name: "node", arg: 2, scope: !7692, file: !1082, line: 214, type: !1251)
!7696 = !DILocation(line: 0, scope: !7692)
!7697 = !DILocation(line: 216, column: 8, scope: !7692)
!7698 = !DILocation(line: 216, column: 13, scope: !7692)
!7699 = !DILocation(line: 217, column: 1, scope: !7692)
!7700 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1082, file: !1082, line: 243, type: !7675, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7701)
!7701 = !{!7702}
!7702 = !DILocalVariable(name: "list", arg: 1, scope: !7700, file: !1082, line: 243, type: !7613)
!7703 = !DILocation(line: 0, scope: !7700)
!7704 = !DILocation(line: 245, column: 15, scope: !7700)
!7705 = !DILocation(line: 245, column: 2, scope: !7700)
!7706 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1082, file: !1082, line: 219, type: !7663, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7707)
!7707 = !{!7708, !7709}
!7708 = !DILocalVariable(name: "list", arg: 1, scope: !7706, file: !1082, line: 219, type: !7613)
!7709 = !DILocalVariable(name: "node", arg: 2, scope: !7706, file: !1082, line: 219, type: !1251)
!7710 = !DILocation(line: 0, scope: !7706)
!7711 = !DILocation(line: 221, column: 8, scope: !7706)
!7712 = !DILocation(line: 221, column: 13, scope: !7706)
!7713 = !DILocation(line: 222, column: 1, scope: !7706)
!7714 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1082, file: !1082, line: 401, type: !7715, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7717)
!7715 = !DISubroutineType(types: !7716)
!7716 = !{null, !7613, !1251, !1251}
!7717 = !{!7718, !7719, !7720}
!7718 = !DILocalVariable(name: "list", arg: 1, scope: !7714, file: !1082, line: 401, type: !7613)
!7719 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7714, file: !1082, line: 401, type: !1251)
!7720 = !DILocalVariable(name: "node", arg: 3, scope: !7714, file: !1082, line: 401, type: !1251)
!7721 = !DILocation(line: 0, scope: !7714)
!7722 = !DILocation(line: 401, column: 1, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7714, file: !1082, line: 401, column: 1)
!7724 = !DILocation(line: 0, scope: !7723)
!7725 = !DILocation(line: 401, column: 1, scope: !7714)
!7726 = !DILocation(line: 401, column: 1, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7723, file: !1082, line: 401, column: 1)
!7728 = !DILocation(line: 401, column: 1, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7727, file: !1082, line: 401, column: 1)
!7730 = !DILocation(line: 401, column: 1, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7729, file: !1082, line: 401, column: 1)
!7732 = !DILocation(line: 401, column: 1, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7723, file: !1082, line: 401, column: 1)
!7734 = !DILocation(line: 401, column: 1, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7733, file: !1082, line: 401, column: 1)
!7736 = !DILocation(line: 401, column: 1, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7735, file: !1082, line: 401, column: 1)
!7738 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1082, file: !1082, line: 285, type: !7739, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7741)
!7739 = !DISubroutineType(types: !7740)
!7740 = !{!1251, !1251}
!7741 = !{!7742}
!7742 = !DILocalVariable(name: "node", arg: 1, scope: !7738, file: !1082, line: 285, type: !1251)
!7743 = !DILocation(line: 0, scope: !7738)
!7744 = !DILocation(line: 285, column: 1, scope: !7738)
!7745 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1082, file: !1082, line: 274, type: !7739, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7746)
!7746 = !{!7747}
!7747 = !DILocalVariable(name: "node", arg: 1, scope: !7745, file: !1082, line: 274, type: !1251)
!7748 = !DILocation(line: 0, scope: !7745)
!7749 = !DILocation(line: 274, column: 1, scope: !7745)
!7750 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1082, file: !1082, line: 204, type: !7739, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7751)
!7751 = !{!7752}
!7752 = !DILocalVariable(name: "node", arg: 1, scope: !7750, file: !1082, line: 204, type: !1251)
!7753 = !DILocation(line: 0, scope: !7750)
!7754 = !DILocation(line: 206, column: 15, scope: !7750)
!7755 = !DILocation(line: 206, column: 2, scope: !7750)
!7756 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1178, file: !1178, line: 342, type: !269, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7757)
!7757 = !{!7758, !7759, !7760}
!7758 = !DILocalVariable(name: "pin", arg: 1, scope: !7756, file: !1178, line: 342, type: !109)
!7759 = !DILocalVariable(name: "line", scope: !7756, file: !1178, line: 344, type: !110)
!7760 = !DILocalVariable(name: "port", scope: !7756, file: !1178, line: 345, type: !109)
!7761 = !DILocation(line: 0, scope: !7756)
!7762 = !DILocation(line: 344, column: 18, scope: !7756)
!7763 = !{i32 983040, i32 0}
!7764 = !DILocation(line: 356, column: 9, scope: !7756)
!7765 = !DILocation(line: 370, column: 2, scope: !7756)
!7766 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1178, file: !1178, line: 37, type: !717, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7767)
!7767 = !{!7768, !7769, !7770}
!7768 = !DILocalVariable(name: "line", arg: 1, scope: !7766, file: !1178, line: 37, type: !109)
!7769 = !DILocalVariable(name: "arg", arg: 2, scope: !7766, file: !1178, line: 37, type: !106)
!7770 = !DILocalVariable(name: "data", scope: !7766, file: !1178, line: 39, type: !7561)
!7771 = !DILocation(line: 0, scope: !7766)
!7772 = !DILocation(line: 41, column: 29, scope: !7766)
!7773 = !DILocation(line: 41, column: 39, scope: !7766)
!7774 = !DILocation(line: 41, column: 44, scope: !7766)
!7775 = !DILocation(line: 41, column: 2, scope: !7766)
!7776 = !DILocation(line: 42, column: 1, scope: !7766)
!7777 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1178, file: !1178, line: 376, type: !7778, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7780)
!7778 = !DISubroutineType(types: !7779)
!7779 = !{!109, !109, !109}
!7780 = !{!7781, !7782, !7783, !7785, !7786}
!7781 = !DILocalVariable(name: "port", arg: 1, scope: !7777, file: !1178, line: 376, type: !109)
!7782 = !DILocalVariable(name: "pin", arg: 2, scope: !7777, file: !1178, line: 376, type: !109)
!7783 = !DILocalVariable(name: "clk", scope: !7777, file: !1178, line: 386, type: !7784)
!7784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1035)
!7785 = !DILocalVariable(name: "pclken", scope: !7777, file: !1178, line: 387, type: !1294)
!7786 = !DILocalVariable(name: "ret", scope: !7777, file: !1178, line: 396, type: !109)
!7787 = !DILocation(line: 0, scope: !7777)
!7788 = !DILocation(line: 387, column: 2, scope: !7777)
!7789 = !DILocation(line: 387, column: 22, scope: !7777)
!7790 = !DILocation(line: 399, column: 8, scope: !7777)
!7791 = !DILocation(line: 400, column: 10, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7777, file: !1178, line: 400, column: 6)
!7793 = !DILocation(line: 400, column: 6, scope: !7777)
!7794 = !DILocation(line: 405, column: 2, scope: !7777)
!7795 = !DILocation(line: 407, column: 2, scope: !7777)
!7796 = !DILocation(line: 408, column: 1, scope: !7777)
!7797 = distinct !DISubprogram(name: "clock_control_on", scope: !810, file: !810, line: 123, type: !1143, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7798)
!7798 = !{!7799, !7800, !7801}
!7799 = !DILocalVariable(name: "dev", arg: 1, scope: !7797, file: !810, line: 123, type: !1035)
!7800 = !DILocalVariable(name: "sys", arg: 2, scope: !7797, file: !810, line: 124, type: !906)
!7801 = !DILocalVariable(name: "api", scope: !7797, file: !810, line: 126, type: !1136)
!7802 = !DILocation(line: 0, scope: !7797)
!7803 = !DILocation(line: 127, column: 49, scope: !7797)
!7804 = !DILocation(line: 129, column: 14, scope: !7797)
!7805 = !DILocation(line: 129, column: 9, scope: !7797)
!7806 = !DILocation(line: 129, column: 2, scope: !7797)
!7807 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1178, file: !1178, line: 311, type: !6925, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7808)
!7808 = !{!7809, !7810, !7811}
!7809 = !DILocalVariable(name: "port", arg: 1, scope: !7807, file: !1178, line: 311, type: !109)
!7810 = !DILocalVariable(name: "pin", arg: 2, scope: !7807, file: !1178, line: 311, type: !109)
!7811 = !DILocalVariable(name: "line", scope: !7807, file: !1178, line: 313, type: !110)
!7812 = !DILocation(line: 0, scope: !7807)
!7813 = !DILocation(line: 313, column: 18, scope: !7807)
!7814 = !DILocation(line: 337, column: 2, scope: !7807)
!7815 = !DILocation(line: 340, column: 1, scope: !7807)
!7816 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1178, file: !1178, line: 295, type: !7817, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7819)
!7817 = !DISubroutineType(types: !7818)
!7818 = !{!110, !109}
!7819 = !{!7820}
!7820 = !DILocalVariable(name: "pin", arg: 1, scope: !7816, file: !1178, line: 295, type: !109)
!7821 = !DILocation(line: 0, scope: !7816)
!7822 = !DILocation(line: 307, column: 46, scope: !7816)
!7823 = !DILocation(line: 307, column: 27, scope: !7816)
!7824 = !DILocation(line: 307, column: 32, scope: !7816)
!7825 = !DILocation(line: 307, column: 14, scope: !7816)
!7826 = !DILocation(line: 307, column: 39, scope: !7816)
!7827 = !DILocation(line: 307, column: 2, scope: !7816)
!7828 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !4976, file: !4976, line: 671, type: !7829, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7831)
!7829 = !DISubroutineType(types: !7830)
!7830 = !{null, !110, !110}
!7831 = !{!7832, !7833}
!7832 = !DILocalVariable(name: "Port", arg: 1, scope: !7828, file: !4976, line: 671, type: !110)
!7833 = !DILocalVariable(name: "Line", arg: 2, scope: !7828, file: !4976, line: 671, type: !110)
!7834 = !DILocation(line: 0, scope: !7828)
!7835 = !DILocation(line: 673, column: 3, scope: !7828)
!7836 = !DILocalVariable(name: "value", arg: 1, scope: !7837, file: !5129, line: 373, type: !110)
!7837 = distinct !DISubprogram(name: "__RBIT", scope: !5129, file: !5129, line: 373, type: !6139, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7838)
!7838 = !{!7836, !7839}
!7839 = !DILocalVariable(name: "result", scope: !7837, file: !5129, line: 375, type: !110)
!7840 = !DILocation(line: 0, scope: !7837, inlinedAt: !7841)
!7841 = distinct !DILocation(line: 673, column: 3, scope: !7828)
!7842 = !DILocation(line: 380, column: 4, scope: !7837, inlinedAt: !7841)
!7843 = !{i64 3730533}
!7844 = !DILocalVariable(name: "value", arg: 1, scope: !7845, file: !5129, line: 403, type: !110)
!7845 = distinct !DISubprogram(name: "__CLZ", scope: !5129, file: !5129, line: 403, type: !7846, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7848)
!7846 = !DISubroutineType(types: !7847)
!7847 = !{!178, !110}
!7848 = !{!7844}
!7849 = !DILocation(line: 0, scope: !7845, inlinedAt: !7850)
!7850 = distinct !DILocation(line: 673, column: 3, scope: !7828)
!7851 = !DILocation(line: 414, column: 7, scope: !7845, inlinedAt: !7850)
!7852 = !DILocation(line: 674, column: 1, scope: !7828)
!7853 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7610, file: !7610, line: 69, type: !7854, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7856)
!7854 = !DISubroutineType(types: !7855)
!7855 = !{null, !7613, !1035, !110}
!7856 = !{!7857, !7858, !7859, !7860, !7861}
!7857 = !DILocalVariable(name: "list", arg: 1, scope: !7853, file: !7610, line: 69, type: !7613)
!7858 = !DILocalVariable(name: "port", arg: 2, scope: !7853, file: !7610, line: 70, type: !1035)
!7859 = !DILocalVariable(name: "pins", arg: 3, scope: !7853, file: !7610, line: 71, type: !110)
!7860 = !DILocalVariable(name: "cb", scope: !7853, file: !7610, line: 73, type: !1077)
!7861 = !DILocalVariable(name: "tmp", scope: !7853, file: !7610, line: 73, type: !1077)
!7862 = !DILocation(line: 0, scope: !7853)
!7863 = !DILocation(line: 75, column: 2, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7853, file: !7610, line: 75, column: 2)
!7865 = !DILocation(line: 0, scope: !7864)
!7866 = !DILocation(line: 76, column: 11, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !7610, line: 76, column: 7)
!7868 = distinct !DILexicalBlock(scope: !7869, file: !7610, line: 75, column: 57)
!7869 = distinct !DILexicalBlock(scope: !7864, file: !7610, line: 75, column: 2)
!7870 = !DILocation(line: 76, column: 20, scope: !7867)
!7871 = !DILocation(line: 76, column: 7, scope: !7868)
!7872 = !DILocation(line: 78, column: 8, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7867, file: !7610, line: 76, column: 28)
!7874 = !DILocation(line: 78, column: 4, scope: !7873)
!7875 = !DILocation(line: 79, column: 3, scope: !7873)
!7876 = !DILocation(line: 75, column: 2, scope: !7869)
!7877 = !DILocation(line: 81, column: 1, scope: !7853)
!7878 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !4976, file: !4976, line: 710, type: !6139, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7879)
!7879 = !{!7880}
!7880 = !DILocalVariable(name: "Line", arg: 1, scope: !7878, file: !4976, line: 710, type: !110)
!7881 = !DILocation(line: 0, scope: !7878)
!7882 = !DILocation(line: 712, column: 21, scope: !7878)
!7883 = !DILocation(line: 0, scope: !7837, inlinedAt: !7884)
!7884 = distinct !DILocation(line: 712, column: 76, scope: !7878)
!7885 = !DILocation(line: 380, column: 4, scope: !7837, inlinedAt: !7884)
!7886 = !DILocation(line: 0, scope: !7845, inlinedAt: !7887)
!7887 = distinct !DILocation(line: 712, column: 76, scope: !7878)
!7888 = !DILocation(line: 414, column: 7, scope: !7845, inlinedAt: !7887)
!7889 = !DILocation(line: 712, column: 73, scope: !7878)
!7890 = !DILocation(line: 712, column: 3, scope: !7878)
!7891 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !7892, file: !7892, line: 910, type: !7893, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7895)
!7892 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7893 = !DISubroutineType(types: !7894)
!7894 = !{null, !1108, !110}
!7895 = !{!7896, !7897}
!7896 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7891, file: !7892, line: 910, type: !1108)
!7897 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7891, file: !7892, line: 910, type: !110)
!7898 = !DILocation(line: 0, scope: !7891)
!7899 = !DILocation(line: 912, column: 3, scope: !7891)
!7900 = !DILocation(line: 913, column: 1, scope: !7891)
!7901 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !7892, file: !7892, line: 823, type: !7902, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7904)
!7902 = !DISubroutineType(types: !7903)
!7903 = !{!110, !1108}
!7904 = !{!7905}
!7905 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7901, file: !7892, line: 823, type: !1108)
!7906 = !DILocation(line: 0, scope: !7901)
!7907 = !DILocation(line: 825, column: 21, scope: !7901)
!7908 = !DILocation(line: 825, column: 3, scope: !7901)
!7909 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !7892, file: !7892, line: 812, type: !7893, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7910)
!7910 = !{!7911, !7912}
!7911 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7909, file: !7892, line: 812, type: !1108)
!7912 = !DILocalVariable(name: "PortValue", arg: 2, scope: !7909, file: !7892, line: 812, type: !110)
!7913 = !DILocation(line: 0, scope: !7909)
!7914 = !DILocation(line: 814, column: 3, scope: !7909)
!7915 = !DILocation(line: 815, column: 1, scope: !7909)
!7916 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !7892, file: !7892, line: 771, type: !7902, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7917)
!7917 = !{!7918}
!7918 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7916, file: !7892, line: 771, type: !1108)
!7919 = !DILocation(line: 0, scope: !7916)
!7920 = !DILocation(line: 773, column: 21, scope: !7916)
!7921 = !DILocation(line: 773, column: 3, scope: !7916)
!7922 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1178, file: !1178, line: 47, type: !7923, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7925)
!7923 = !DISubroutineType(types: !7924)
!7924 = !{!109, !1051, !2447}
!7925 = !{!7926, !7927}
!7926 = !DILocalVariable(name: "flags", arg: 1, scope: !7922, file: !1178, line: 47, type: !1051)
!7927 = !DILocalVariable(name: "pincfg", arg: 2, scope: !7922, file: !1178, line: 47, type: !2447)
!7928 = !DILocation(line: 0, scope: !7922)
!7929 = !DILocation(line: 50, column: 13, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7922, file: !1178, line: 50, column: 6)
!7931 = !DILocation(line: 50, column: 28, scope: !7930)
!7932 = !DILocation(line: 50, column: 6, scope: !7922)
!7933 = !DILocation(line: 53, column: 11, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7930, file: !1178, line: 50, column: 34)
!7935 = !DILocation(line: 55, column: 14, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7934, file: !1178, line: 55, column: 7)
!7937 = !DILocation(line: 55, column: 35, scope: !7936)
!7938 = !DILocation(line: 55, column: 7, scope: !7934)
!7939 = !DILocation(line: 56, column: 14, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7941, file: !1178, line: 56, column: 8)
!7941 = distinct !DILexicalBlock(scope: !7936, file: !1178, line: 55, column: 41)
!7942 = !DILocation(line: 56, column: 8, scope: !7941)
!7943 = !DILocation(line: 0, scope: !7936)
!7944 = !DILocation(line: 66, column: 14, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7934, file: !1178, line: 66, column: 7)
!7946 = !DILocation(line: 66, column: 30, scope: !7945)
!7947 = !DILocation(line: 66, column: 7, scope: !7934)
!7948 = !DILocation(line: 67, column: 12, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7945, file: !1178, line: 66, column: 36)
!7950 = !DILocation(line: 68, column: 3, scope: !7949)
!7951 = !DILocation(line: 68, column: 21, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7945, file: !1178, line: 68, column: 14)
!7953 = !DILocation(line: 68, column: 39, scope: !7952)
!7954 = !DILocation(line: 68, column: 14, scope: !7945)
!7955 = !DILocation(line: 69, column: 12, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7952, file: !1178, line: 68, column: 45)
!7957 = !DILocation(line: 70, column: 3, scope: !7956)
!7958 = !DILocation(line: 72, column: 21, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7930, file: !1178, line: 72, column: 14)
!7960 = !DILocation(line: 72, column: 35, scope: !7959)
!7961 = !DILocation(line: 72, column: 14, scope: !7930)
!7962 = !DILocation(line: 77, column: 14, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !1178, line: 77, column: 7)
!7964 = distinct !DILexicalBlock(scope: !7959, file: !1178, line: 72, column: 41)
!7965 = !DILocation(line: 77, column: 30, scope: !7963)
!7966 = !DILocation(line: 77, column: 7, scope: !7964)
!7967 = !DILocation(line: 0, scope: !7930)
!7968 = !DILocation(line: 90, column: 1, scope: !7922)
!7969 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1178, file: !1178, line: 157, type: !7970, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7972)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{null, !1035, !109, !109, !109}
!7972 = !{!7973, !7974, !7975, !7976, !7977, !7978, !7979, !7980, !7981, !7982, !7983}
!7973 = !DILocalVariable(name: "dev", arg: 1, scope: !7969, file: !1178, line: 157, type: !1035)
!7974 = !DILocalVariable(name: "pin", arg: 2, scope: !7969, file: !1178, line: 157, type: !109)
!7975 = !DILocalVariable(name: "conf", arg: 3, scope: !7969, file: !1178, line: 158, type: !109)
!7976 = !DILocalVariable(name: "func", arg: 4, scope: !7969, file: !1178, line: 158, type: !109)
!7977 = !DILocalVariable(name: "cfg", scope: !7969, file: !1178, line: 160, type: !7494)
!7978 = !DILocalVariable(name: "gpio", scope: !7969, file: !1178, line: 161, type: !1108)
!7979 = !DILocalVariable(name: "pin_ll", scope: !7969, file: !1178, line: 163, type: !109)
!7980 = !DILocalVariable(name: "mode", scope: !7969, file: !1178, line: 227, type: !32)
!7981 = !DILocalVariable(name: "otype", scope: !7969, file: !1178, line: 227, type: !32)
!7982 = !DILocalVariable(name: "ospeed", scope: !7969, file: !1178, line: 227, type: !32)
!7983 = !DILocalVariable(name: "pupd", scope: !7969, file: !1178, line: 227, type: !32)
!7984 = !DILocation(line: 0, scope: !7969)
!7985 = !DILocation(line: 160, column: 45, scope: !7969)
!7986 = !DILocation(line: 161, column: 44, scope: !7969)
!7987 = !DILocation(line: 163, column: 15, scope: !7969)
!7988 = !DILocation(line: 229, column: 14, scope: !7969)
!7989 = !DILocation(line: 246, column: 47, scope: !7969)
!7990 = !DILocation(line: 246, column: 2, scope: !7969)
!7991 = !DILocation(line: 248, column: 43, scope: !7969)
!7992 = !DILocation(line: 248, column: 2, scope: !7969)
!7993 = !DILocation(line: 250, column: 40, scope: !7969)
!7994 = !DILocation(line: 250, column: 2, scope: !7969)
!7995 = !DILocation(line: 252, column: 11, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7969, file: !1178, line: 252, column: 6)
!7997 = !DILocation(line: 252, column: 6, scope: !7969)
!7998 = !DILocation(line: 253, column: 11, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !8000, file: !1178, line: 253, column: 7)
!8000 = distinct !DILexicalBlock(scope: !7996, file: !1178, line: 252, column: 36)
!8001 = !DILocation(line: 253, column: 7, scope: !8000)
!8002 = !DILocation(line: 254, column: 4, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7999, file: !1178, line: 253, column: 16)
!8004 = !DILocation(line: 255, column: 3, scope: !8003)
!8005 = !DILocation(line: 256, column: 4, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7999, file: !1178, line: 255, column: 10)
!8007 = !DILocation(line: 260, column: 40, scope: !7969)
!8008 = !DILocation(line: 260, column: 2, scope: !7969)
!8009 = !DILocation(line: 265, column: 1, scope: !7969)
!8010 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1178, file: !1178, line: 137, type: !7817, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8011)
!8011 = !{!8012, !8013}
!8012 = !DILocalVariable(name: "pin", arg: 1, scope: !8010, file: !1178, line: 137, type: !109)
!8013 = !DILocalVariable(name: "pinval", scope: !8010, file: !1178, line: 139, type: !110)
!8014 = !DILocation(line: 0, scope: !8010)
!8015 = !DILocation(line: 149, column: 13, scope: !8010)
!8016 = !DILocation(line: 151, column: 2, scope: !8010)
!8017 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !7892, file: !7892, line: 342, type: !8018, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8020)
!8018 = !DISubroutineType(types: !8019)
!8019 = !{null, !1108, !110, !110}
!8020 = !{!8021, !8022, !8023}
!8021 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8017, file: !7892, line: 342, type: !1108)
!8022 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8017, file: !7892, line: 342, type: !110)
!8023 = !DILocalVariable(name: "OutputType", arg: 3, scope: !8017, file: !7892, line: 342, type: !110)
!8024 = !DILocation(line: 0, scope: !8017)
!8025 = !DILocation(line: 344, column: 3, scope: !8017)
!8026 = !DILocation(line: 345, column: 1, scope: !8017)
!8027 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !7892, file: !7892, line: 413, type: !8018, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8028)
!8028 = !{!8029, !8030, !8031}
!8029 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8027, file: !7892, line: 413, type: !1108)
!8030 = !DILocalVariable(name: "Pin", arg: 2, scope: !8027, file: !7892, line: 413, type: !110)
!8031 = !DILocalVariable(name: "Speed", arg: 3, scope: !8027, file: !7892, line: 413, type: !110)
!8032 = !DILocation(line: 0, scope: !8027)
!8033 = !DILocation(line: 415, column: 3, scope: !8027)
!8034 = !DILocation(line: 0, scope: !7837, inlinedAt: !8035)
!8035 = distinct !DILocation(line: 415, column: 3, scope: !8027)
!8036 = !DILocation(line: 380, column: 4, scope: !7837, inlinedAt: !8035)
!8037 = !DILocation(line: 0, scope: !7845, inlinedAt: !8038)
!8038 = distinct !DILocation(line: 415, column: 3, scope: !8027)
!8039 = !DILocation(line: 414, column: 7, scope: !7845, inlinedAt: !8038)
!8040 = !DILocation(line: 0, scope: !7837, inlinedAt: !8041)
!8041 = distinct !DILocation(line: 415, column: 3, scope: !8027)
!8042 = !DILocation(line: 0, scope: !7845, inlinedAt: !8043)
!8043 = distinct !DILocation(line: 415, column: 3, scope: !8027)
!8044 = !DILocation(line: 417, column: 1, scope: !8027)
!8045 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !7892, file: !7892, line: 484, type: !8018, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8046)
!8046 = !{!8047, !8048, !8049}
!8047 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8045, file: !7892, line: 484, type: !1108)
!8048 = !DILocalVariable(name: "Pin", arg: 2, scope: !8045, file: !7892, line: 484, type: !110)
!8049 = !DILocalVariable(name: "Pull", arg: 3, scope: !8045, file: !7892, line: 484, type: !110)
!8050 = !DILocation(line: 0, scope: !8045)
!8051 = !DILocation(line: 486, column: 3, scope: !8045)
!8052 = !DILocation(line: 0, scope: !7837, inlinedAt: !8053)
!8053 = distinct !DILocation(line: 486, column: 3, scope: !8045)
!8054 = !DILocation(line: 380, column: 4, scope: !7837, inlinedAt: !8053)
!8055 = !DILocation(line: 0, scope: !7845, inlinedAt: !8056)
!8056 = distinct !DILocation(line: 486, column: 3, scope: !8045)
!8057 = !DILocation(line: 414, column: 7, scope: !7845, inlinedAt: !8056)
!8058 = !DILocation(line: 0, scope: !7837, inlinedAt: !8059)
!8059 = distinct !DILocation(line: 486, column: 3, scope: !8045)
!8060 = !DILocation(line: 0, scope: !7845, inlinedAt: !8061)
!8061 = distinct !DILocation(line: 486, column: 3, scope: !8045)
!8062 = !DILocation(line: 487, column: 1, scope: !8045)
!8063 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !7892, file: !7892, line: 556, type: !8018, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8064)
!8064 = !{!8065, !8066, !8067}
!8065 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8063, file: !7892, line: 556, type: !1108)
!8066 = !DILocalVariable(name: "Pin", arg: 2, scope: !8063, file: !7892, line: 556, type: !110)
!8067 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8063, file: !7892, line: 556, type: !110)
!8068 = !DILocation(line: 0, scope: !8063)
!8069 = !DILocation(line: 558, column: 3, scope: !8063)
!8070 = !DILocation(line: 0, scope: !7837, inlinedAt: !8071)
!8071 = distinct !DILocation(line: 558, column: 3, scope: !8063)
!8072 = !DILocation(line: 380, column: 4, scope: !7837, inlinedAt: !8071)
!8073 = !DILocation(line: 0, scope: !7845, inlinedAt: !8074)
!8074 = distinct !DILocation(line: 558, column: 3, scope: !8063)
!8075 = !DILocation(line: 414, column: 7, scope: !7845, inlinedAt: !8074)
!8076 = !DILocation(line: 0, scope: !7837, inlinedAt: !8077)
!8077 = distinct !DILocation(line: 558, column: 3, scope: !8063)
!8078 = !DILocation(line: 0, scope: !7845, inlinedAt: !8079)
!8079 = distinct !DILocation(line: 558, column: 3, scope: !8063)
!8080 = !DILocation(line: 560, column: 1, scope: !8063)
!8081 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !7892, file: !7892, line: 633, type: !8018, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8082)
!8082 = !{!8083, !8084, !8085}
!8083 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8081, file: !7892, line: 633, type: !1108)
!8084 = !DILocalVariable(name: "Pin", arg: 2, scope: !8081, file: !7892, line: 633, type: !110)
!8085 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8081, file: !7892, line: 633, type: !110)
!8086 = !DILocation(line: 0, scope: !8081)
!8087 = !DILocation(line: 635, column: 3, scope: !8081)
!8088 = !DILocation(line: 0, scope: !7837, inlinedAt: !8089)
!8089 = distinct !DILocation(line: 635, column: 3, scope: !8081)
!8090 = !DILocation(line: 380, column: 4, scope: !7837, inlinedAt: !8089)
!8091 = !DILocation(line: 0, scope: !7845, inlinedAt: !8092)
!8092 = distinct !DILocation(line: 635, column: 3, scope: !8081)
!8093 = !DILocation(line: 414, column: 7, scope: !7845, inlinedAt: !8092)
!8094 = !DILocation(line: 0, scope: !7837, inlinedAt: !8095)
!8095 = distinct !DILocation(line: 635, column: 3, scope: !8081)
!8096 = !DILocation(line: 0, scope: !7845, inlinedAt: !8097)
!8097 = distinct !DILocation(line: 635, column: 3, scope: !8081)
!8098 = !DILocation(line: 637, column: 1, scope: !8081)
!8099 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !7892, file: !7892, line: 273, type: !8018, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8100)
!8100 = !{!8101, !8102, !8103}
!8101 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8099, file: !7892, line: 273, type: !1108)
!8102 = !DILocalVariable(name: "Pin", arg: 2, scope: !8099, file: !7892, line: 273, type: !110)
!8103 = !DILocalVariable(name: "Mode", arg: 3, scope: !8099, file: !7892, line: 273, type: !110)
!8104 = !DILocation(line: 0, scope: !8099)
!8105 = !DILocation(line: 275, column: 3, scope: !8099)
!8106 = !DILocation(line: 0, scope: !7837, inlinedAt: !8107)
!8107 = distinct !DILocation(line: 275, column: 3, scope: !8099)
!8108 = !DILocation(line: 380, column: 4, scope: !7837, inlinedAt: !8107)
!8109 = !DILocation(line: 0, scope: !7845, inlinedAt: !8110)
!8110 = distinct !DILocation(line: 275, column: 3, scope: !8099)
!8111 = !DILocation(line: 414, column: 7, scope: !7845, inlinedAt: !8110)
!8112 = !DILocation(line: 0, scope: !7837, inlinedAt: !8113)
!8113 = distinct !DILocation(line: 275, column: 3, scope: !8099)
!8114 = !DILocation(line: 0, scope: !7845, inlinedAt: !8115)
!8115 = distinct !DILocation(line: 275, column: 3, scope: !8099)
!8116 = !DILocation(line: 276, column: 1, scope: !8099)
!8117 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1178, file: !1178, line: 698, type: !1191, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8118)
!8118 = !{!8119, !8120, !8121}
!8119 = !DILocalVariable(name: "dev", arg: 1, scope: !8117, file: !1178, line: 698, type: !1035)
!8120 = !DILocalVariable(name: "data", scope: !8117, file: !1178, line: 700, type: !7561)
!8121 = !DILocalVariable(name: "ret", scope: !8117, file: !1178, line: 701, type: !109)
!8122 = !DILocation(line: 0, scope: !8117)
!8123 = !DILocation(line: 700, column: 38, scope: !8117)
!8124 = !DILocation(line: 703, column: 8, scope: !8117)
!8125 = !DILocation(line: 703, column: 12, scope: !8117)
!8126 = !DILocation(line: 705, column: 7, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8117, file: !1178, line: 705, column: 6)
!8128 = !DILocation(line: 705, column: 6, scope: !8117)
!8129 = !DILocation(line: 722, column: 8, scope: !8117)
!8130 = !DILocation(line: 723, column: 10, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8117, file: !1178, line: 723, column: 6)
!8132 = !DILocation(line: 723, column: 6, scope: !8117)
!8133 = !DILocation(line: 731, column: 1, scope: !8117)
!8134 = distinct !DISubprogram(name: "device_is_ready", scope: !7341, file: !7341, line: 47, type: !8135, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8137)
!8135 = !DISubroutineType(types: !8136)
!8136 = !{!315, !1035}
!8137 = !{!8138}
!8138 = !DILocalVariable(name: "dev", arg: 1, scope: !8134, file: !7341, line: 47, type: !1035)
!8139 = !DILocation(line: 0, scope: !8134)
!8140 = !DILocation(line: 55, column: 2, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8134, file: !7341, line: 55, column: 2)
!8142 = !{i64 2155277661}
!8143 = !DILocation(line: 56, column: 9, scope: !8134)
!8144 = !DILocation(line: 56, column: 2, scope: !8134)
!8145 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1178, file: !1178, line: 270, type: !8146, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8148)
!8146 = !DISubroutineType(types: !8147)
!8147 = !{!109, !1035, !315}
!8148 = !{!8149, !8150, !8151, !8152, !8153}
!8149 = !DILocalVariable(name: "dev", arg: 1, scope: !8145, file: !1178, line: 270, type: !1035)
!8150 = !DILocalVariable(name: "on", arg: 2, scope: !8145, file: !1178, line: 270, type: !315)
!8151 = !DILocalVariable(name: "cfg", scope: !8145, file: !1178, line: 272, type: !7494)
!8152 = !DILocalVariable(name: "ret", scope: !8145, file: !1178, line: 273, type: !109)
!8153 = !DILocalVariable(name: "clk", scope: !8145, file: !1178, line: 278, type: !7784)
!8154 = !DILocation(line: 0, scope: !8145)
!8155 = !DILocation(line: 272, column: 45, scope: !8145)
!8156 = !DILocation(line: 282, column: 38, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8158, file: !1178, line: 280, column: 10)
!8158 = distinct !DILexicalBlock(scope: !8145, file: !1178, line: 280, column: 6)
!8159 = !DILocation(line: 282, column: 6, scope: !8157)
!8160 = !DILocation(line: 281, column: 9, scope: !8157)
!8161 = !DILocation(line: 293, column: 1, scope: !8145)
!8162 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !302, file: !302, line: 730, type: !8135, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8163)
!8163 = !{!8164}
!8164 = !DILocalVariable(name: "dev", arg: 1, scope: !8162, file: !302, line: 730, type: !1035)
!8165 = !DILocation(line: 0, scope: !8162)
!8166 = !DILocation(line: 732, column: 9, scope: !8162)
!8167 = !DILocation(line: 732, column: 2, scope: !8162)
!8168 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1178, file: !1178, line: 496, type: !8169, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !8171)
!8169 = !DISubroutineType(types: !8170)
!8170 = !{!109, !1035, !109, !109, !109}
!8171 = !{!8172, !8173, !8174, !8175, !8176, !8177}
!8172 = !DILocalVariable(name: "dev", arg: 1, scope: !8168, file: !1178, line: 496, type: !1035)
!8173 = !DILocalVariable(name: "pin", arg: 2, scope: !8168, file: !1178, line: 496, type: !109)
!8174 = !DILocalVariable(name: "conf", arg: 3, scope: !8168, file: !1178, line: 496, type: !109)
!8175 = !DILocalVariable(name: "func", arg: 4, scope: !8168, file: !1178, line: 496, type: !109)
!8176 = !DILocalVariable(name: "ret", scope: !8168, file: !1178, line: 498, type: !109)
!8177 = !DILocalVariable(name: "gpio_out", scope: !8178, file: !1178, line: 508, type: !110)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !1178, line: 507, column: 27)
!8179 = distinct !DILexicalBlock(scope: !8168, file: !1178, line: 507, column: 6)
!8180 = !DILocation(line: 0, scope: !8168)
!8181 = !DILocation(line: 505, column: 2, scope: !8168)
!8182 = !DILocation(line: 507, column: 11, scope: !8179)
!8183 = !DILocation(line: 507, column: 6, scope: !8168)
!8184 = !DILocation(line: 508, column: 28, scope: !8178)
!8185 = !DILocation(line: 0, scope: !8178)
!8186 = !DILocation(line: 510, column: 16, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8178, file: !1178, line: 510, column: 7)
!8188 = !DILocation(line: 0, scope: !8187)
!8189 = !DILocation(line: 510, column: 7, scope: !8178)
!8190 = !DILocation(line: 511, column: 4, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8187, file: !1178, line: 510, column: 32)
!8192 = !DILocation(line: 512, column: 3, scope: !8191)
!8193 = !DILocation(line: 513, column: 4, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !1178, line: 512, column: 39)
!8195 = distinct !DILexicalBlock(scope: !8187, file: !1178, line: 512, column: 14)
!8196 = !DILocation(line: 514, column: 3, scope: !8194)
!8197 = !DILocation(line: 518, column: 1, scope: !8168)
!8198 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1451, file: !1451, line: 526, type: !1354, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8199)
!8199 = !{!8200, !8201, !8202}
!8200 = !DILocalVariable(name: "dev", arg: 1, scope: !8198, file: !1451, line: 526, type: !1356)
!8201 = !DILocalVariable(name: "c", arg: 2, scope: !8198, file: !1451, line: 526, type: !967)
!8202 = !DILocalVariable(name: "config", scope: !8198, file: !1451, line: 528, type: !8203)
!8203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!8204 = !DILocation(line: 0, scope: !8198)
!8205 = !DILocation(line: 528, column: 48, scope: !8198)
!8206 = !DILocation(line: 531, column: 40, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8198, file: !1451, line: 531, column: 6)
!8208 = !DILocation(line: 531, column: 6, scope: !8207)
!8209 = !DILocation(line: 531, column: 6, scope: !8198)
!8210 = !DILocation(line: 532, column: 34, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8207, file: !1451, line: 531, column: 48)
!8212 = !DILocation(line: 532, column: 3, scope: !8211)
!8213 = !DILocation(line: 533, column: 2, scope: !8211)
!8214 = !DILocation(line: 539, column: 42, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8198, file: !1451, line: 539, column: 6)
!8216 = !DILocation(line: 539, column: 7, scope: !8215)
!8217 = !DILocation(line: 539, column: 6, scope: !8198)
!8218 = !DILocation(line: 543, column: 52, scope: !8198)
!8219 = !DILocation(line: 543, column: 22, scope: !8198)
!8220 = !DILocation(line: 543, column: 5, scope: !8198)
!8221 = !DILocation(line: 545, column: 2, scope: !8198)
!8222 = !DILocation(line: 546, column: 1, scope: !8198)
!8223 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1451, file: !1451, line: 548, type: !1373, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8224)
!8224 = !{!8225, !8226, !8227, !8228}
!8225 = !DILocalVariable(name: "dev", arg: 1, scope: !8223, file: !1451, line: 548, type: !1356)
!8226 = !DILocalVariable(name: "c", arg: 2, scope: !8223, file: !1451, line: 549, type: !179)
!8227 = !DILocalVariable(name: "config", scope: !8223, file: !1451, line: 551, type: !8203)
!8228 = !DILocalVariable(name: "key", scope: !8223, file: !1451, line: 555, type: !32)
!8229 = !DILocation(line: 0, scope: !8223)
!8230 = !DILocation(line: 551, column: 48, scope: !8223)
!8231 = !DILocation(line: 562, column: 2, scope: !8223)
!8232 = !DILocation(line: 563, column: 41, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !1451, line: 563, column: 7)
!8234 = distinct !DILexicalBlock(scope: !8223, file: !1451, line: 562, column: 12)
!8235 = !DILocation(line: 563, column: 7, scope: !8233)
!8236 = !DILocation(line: 563, column: 7, scope: !8234)
!8237 = !DILocation(line: 55, column: 2, scope: !8238, inlinedAt: !8242)
!8238 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4955, file: !4955, line: 42, type: !4956, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8239)
!8239 = !{!8240, !8241}
!8240 = !DILocalVariable(name: "key", scope: !8238, file: !4955, line: 44, type: !32)
!8241 = !DILocalVariable(name: "tmp", scope: !8238, file: !4955, line: 53, type: !32)
!8242 = distinct !DILocation(line: 564, column: 10, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8233, file: !1451, line: 563, column: 49)
!8244 = !{i64 2327383}
!8245 = !DILocation(line: 0, scope: !8238, inlinedAt: !8242)
!8246 = !DILocation(line: 565, column: 42, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8243, file: !1451, line: 565, column: 8)
!8248 = !DILocation(line: 565, column: 8, scope: !8247)
!8249 = !DILocation(line: 565, column: 8, scope: !8243)
!8250 = !DILocalVariable(name: "key", arg: 1, scope: !8251, file: !4955, line: 84, type: !32)
!8251 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4955, file: !4955, line: 84, type: !4966, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8252)
!8252 = !{!8250}
!8253 = !DILocation(line: 0, scope: !8251, inlinedAt: !8254)
!8254 = distinct !DILocation(line: 568, column: 4, scope: !8243)
!8255 = !DILocation(line: 95, column: 2, scope: !8251, inlinedAt: !8254)
!8256 = !{i64 2328200}
!8257 = !DILocation(line: 569, column: 3, scope: !8243)
!8258 = distinct !{!8258, !8231, !8259}
!8259 = !DILocation(line: 570, column: 2, scope: !8223)
!8260 = !DILocation(line: 592, column: 33, scope: !8223)
!8261 = !DILocation(line: 592, column: 2, scope: !8223)
!8262 = !DILocation(line: 0, scope: !8251, inlinedAt: !8263)
!8263 = distinct !DILocation(line: 593, column: 2, scope: !8223)
!8264 = !DILocation(line: 95, column: 2, scope: !8251, inlinedAt: !8263)
!8265 = !DILocation(line: 594, column: 1, scope: !8223)
!8266 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1451, file: !1451, line: 596, type: !1377, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8267)
!8267 = !{!8268, !8269, !8270}
!8268 = !DILocalVariable(name: "dev", arg: 1, scope: !8266, file: !1451, line: 596, type: !1356)
!8269 = !DILocalVariable(name: "config", scope: !8266, file: !1451, line: 598, type: !8203)
!8270 = !DILocalVariable(name: "err", scope: !8266, file: !1451, line: 599, type: !110)
!8271 = !DILocation(line: 0, scope: !8266)
!8272 = !DILocation(line: 598, column: 48, scope: !8266)
!8273 = !DILocation(line: 606, column: 40, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8266, file: !1451, line: 606, column: 6)
!8275 = !DILocation(line: 606, column: 6, scope: !8274)
!8276 = !DILocation(line: 606, column: 6, scope: !8266)
!8277 = !DILocation(line: 610, column: 39, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8266, file: !1451, line: 610, column: 6)
!8279 = !DILocation(line: 610, column: 6, scope: !8278)
!8280 = !DILocation(line: 610, column: 6, scope: !8266)
!8281 = !DILocation(line: 614, column: 39, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8266, file: !1451, line: 614, column: 6)
!8283 = !DILocation(line: 614, column: 6, scope: !8282)
!8284 = !DILocation(line: 614, column: 6, scope: !8266)
!8285 = !DILocation(line: 619, column: 40, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8266, file: !1451, line: 619, column: 6)
!8287 = !DILocation(line: 619, column: 6, scope: !8286)
!8288 = !DILocation(line: 619, column: 6, scope: !8266)
!8289 = !DILocation(line: 623, column: 10, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8266, file: !1451, line: 623, column: 6)
!8291 = !DILocation(line: 623, column: 6, scope: !8266)
!8292 = !DILocation(line: 624, column: 34, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8290, file: !1451, line: 623, column: 24)
!8294 = !DILocation(line: 624, column: 3, scope: !8293)
!8295 = !DILocation(line: 625, column: 2, scope: !8293)
!8296 = !DILocation(line: 632, column: 10, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8266, file: !1451, line: 632, column: 6)
!8298 = !DILocation(line: 632, column: 6, scope: !8266)
!8299 = !DILocation(line: 633, column: 34, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8297, file: !1451, line: 632, column: 32)
!8301 = !DILocation(line: 633, column: 3, scope: !8300)
!8302 = !DILocation(line: 634, column: 2, scope: !8300)
!8303 = !DILocation(line: 636, column: 10, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8266, file: !1451, line: 636, column: 6)
!8305 = !DILocation(line: 636, column: 6, scope: !8266)
!8306 = !DILocation(line: 637, column: 33, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8304, file: !1451, line: 636, column: 31)
!8308 = !DILocation(line: 637, column: 3, scope: !8307)
!8309 = !DILocation(line: 638, column: 2, scope: !8307)
!8310 = !DILocation(line: 640, column: 10, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8266, file: !1451, line: 640, column: 6)
!8312 = !DILocation(line: 640, column: 6, scope: !8266)
!8313 = !DILocation(line: 641, column: 33, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8311, file: !1451, line: 640, column: 32)
!8315 = !DILocation(line: 641, column: 3, scope: !8314)
!8316 = !DILocation(line: 642, column: 2, scope: !8314)
!8317 = !DILocation(line: 646, column: 32, scope: !8266)
!8318 = !DILocation(line: 646, column: 2, scope: !8266)
!8319 = !DILocation(line: 648, column: 2, scope: !8266)
!8320 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1451, file: !1451, line: 419, type: !1381, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8321)
!8321 = !{!8322, !8323, !8324, !8325, !8327, !8328, !8329, !8330}
!8322 = !DILocalVariable(name: "dev", arg: 1, scope: !8320, file: !1451, line: 419, type: !1356)
!8323 = !DILocalVariable(name: "cfg", arg: 2, scope: !8320, file: !1451, line: 420, type: !1383)
!8324 = !DILocalVariable(name: "config", scope: !8320, file: !1451, line: 422, type: !8203)
!8325 = !DILocalVariable(name: "data", scope: !8320, file: !1451, line: 423, type: !8326)
!8326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!8327 = !DILocalVariable(name: "parity", scope: !8320, file: !1451, line: 424, type: !5397)
!8328 = !DILocalVariable(name: "stopbits", scope: !8320, file: !1451, line: 425, type: !5397)
!8329 = !DILocalVariable(name: "databits", scope: !8320, file: !1451, line: 426, type: !5397)
!8330 = !DILocalVariable(name: "flowctrl", scope: !8320, file: !1451, line: 428, type: !5397)
!8331 = !DILocation(line: 0, scope: !8320)
!8332 = !DILocation(line: 422, column: 48, scope: !8320)
!8333 = !DILocation(line: 423, column: 38, scope: !8320)
!8334 = !DILocation(line: 424, column: 56, scope: !8320)
!8335 = !DILocation(line: 424, column: 51, scope: !8320)
!8336 = !DILocation(line: 424, column: 26, scope: !8320)
!8337 = !DILocation(line: 425, column: 60, scope: !8320)
!8338 = !DILocation(line: 425, column: 55, scope: !8320)
!8339 = !DILocation(line: 425, column: 28, scope: !8320)
!8340 = !DILocation(line: 426, column: 60, scope: !8320)
!8341 = !DILocation(line: 426, column: 55, scope: !8320)
!8342 = !DILocation(line: 426, column: 28, scope: !8320)
!8343 = !DILocation(line: 428, column: 58, scope: !8320)
!8344 = !DILocation(line: 428, column: 53, scope: !8320)
!8345 = !DILocation(line: 428, column: 28, scope: !8320)
!8346 = !DILocation(line: 431, column: 44, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8320, file: !1451, line: 431, column: 6)
!8348 = !DILocation(line: 438, column: 22, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8320, file: !1451, line: 437, column: 6)
!8350 = !DILocation(line: 437, column: 6, scope: !8320)
!8351 = !DILocation(line: 448, column: 6, scope: !8320)
!8352 = !DILocation(line: 465, column: 47, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8320, file: !1451, line: 465, column: 6)
!8354 = !DILocation(line: 475, column: 21, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8320, file: !1451, line: 475, column: 6)
!8356 = !DILocation(line: 475, column: 6, scope: !8320)
!8357 = !DILocation(line: 476, column: 8, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !1451, line: 476, column: 7)
!8359 = distinct !DILexicalBlock(scope: !8355, file: !1451, line: 475, column: 49)
!8360 = !DILocation(line: 477, column: 34, scope: !8358)
!8361 = !DILocation(line: 476, column: 7, scope: !8359)
!8362 = !DILocation(line: 482, column: 27, scope: !8320)
!8363 = !DILocation(line: 482, column: 2, scope: !8320)
!8364 = !DILocation(line: 484, column: 16, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8320, file: !1451, line: 484, column: 6)
!8366 = !DILocation(line: 484, column: 13, scope: !8365)
!8367 = !DILocation(line: 484, column: 6, scope: !8320)
!8368 = !DILocation(line: 485, column: 3, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8365, file: !1451, line: 484, column: 44)
!8370 = !DILocation(line: 486, column: 2, scope: !8369)
!8371 = !DILocation(line: 488, column: 18, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8320, file: !1451, line: 488, column: 6)
!8373 = !DILocation(line: 488, column: 15, scope: !8372)
!8374 = !DILocation(line: 488, column: 6, scope: !8320)
!8375 = !DILocation(line: 489, column: 3, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8372, file: !1451, line: 488, column: 48)
!8377 = !DILocation(line: 490, column: 2, scope: !8376)
!8378 = !DILocation(line: 492, column: 18, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8320, file: !1451, line: 492, column: 6)
!8380 = !DILocation(line: 492, column: 15, scope: !8379)
!8381 = !DILocation(line: 492, column: 6, scope: !8320)
!8382 = !DILocation(line: 493, column: 3, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8379, file: !1451, line: 492, column: 48)
!8384 = !DILocation(line: 494, column: 2, scope: !8383)
!8385 = !DILocation(line: 496, column: 18, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8320, file: !1451, line: 496, column: 6)
!8387 = !DILocation(line: 496, column: 15, scope: !8386)
!8388 = !DILocation(line: 496, column: 6, scope: !8320)
!8389 = !DILocation(line: 497, column: 3, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8386, file: !1451, line: 496, column: 46)
!8391 = !DILocation(line: 498, column: 2, scope: !8390)
!8392 = !DILocation(line: 500, column: 11, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8320, file: !1451, line: 500, column: 6)
!8394 = !DILocation(line: 500, column: 29, scope: !8393)
!8395 = !DILocation(line: 500, column: 20, scope: !8393)
!8396 = !DILocation(line: 500, column: 6, scope: !8320)
!8397 = !DILocation(line: 501, column: 3, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8393, file: !1451, line: 500, column: 40)
!8399 = !DILocation(line: 502, column: 26, scope: !8398)
!8400 = !DILocation(line: 502, column: 19, scope: !8398)
!8401 = !DILocation(line: 503, column: 2, scope: !8398)
!8402 = !DILocation(line: 505, column: 26, scope: !8320)
!8403 = !DILocation(line: 505, column: 2, scope: !8320)
!8404 = !DILocation(line: 506, column: 2, scope: !8320)
!8405 = !DILocation(line: 507, column: 1, scope: !8320)
!8406 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1451, file: !1451, line: 509, type: !1394, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8407)
!8407 = !{!8408, !8409, !8410}
!8408 = !DILocalVariable(name: "dev", arg: 1, scope: !8406, file: !1451, line: 509, type: !1356)
!8409 = !DILocalVariable(name: "cfg", arg: 2, scope: !8406, file: !1451, line: 510, type: !1396)
!8410 = !DILocalVariable(name: "data", scope: !8406, file: !1451, line: 512, type: !8326)
!8411 = !DILocation(line: 0, scope: !8406)
!8412 = !DILocation(line: 512, column: 38, scope: !8406)
!8413 = !DILocation(line: 514, column: 24, scope: !8406)
!8414 = !DILocation(line: 514, column: 7, scope: !8406)
!8415 = !DILocation(line: 514, column: 16, scope: !8406)
!8416 = !DILocation(line: 515, column: 41, scope: !8406)
!8417 = !{i32 0, i32 1537}
!8418 = !DILocation(line: 515, column: 16, scope: !8406)
!8419 = !DILocation(line: 515, column: 7, scope: !8406)
!8420 = !DILocation(line: 515, column: 14, scope: !8406)
!8421 = !DILocation(line: 517, column: 3, scope: !8406)
!8422 = !{i32 0, i32 12289}
!8423 = !DILocation(line: 516, column: 19, scope: !8406)
!8424 = !DILocation(line: 516, column: 7, scope: !8406)
!8425 = !DILocation(line: 516, column: 17, scope: !8406)
!8426 = !DILocation(line: 519, column: 3, scope: !8406)
!8427 = !DILocation(line: 519, column: 33, scope: !8406)
!8428 = !DILocation(line: 518, column: 19, scope: !8406)
!8429 = !DILocation(line: 518, column: 7, scope: !8406)
!8430 = !DILocation(line: 518, column: 17, scope: !8406)
!8431 = !DILocation(line: 521, column: 3, scope: !8406)
!8432 = !{i32 0, i32 769}
!8433 = !DILocation(line: 520, column: 19, scope: !8406)
!8434 = !DILocation(line: 520, column: 7, scope: !8406)
!8435 = !DILocation(line: 520, column: 17, scope: !8406)
!8436 = !DILocation(line: 522, column: 2, scope: !8406)
!8437 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1451, file: !1451, line: 205, type: !8438, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8440)
!8438 = !DISubroutineType(types: !8439)
!8439 = !{!110, !1356}
!8440 = !{!8441, !8442}
!8441 = !DILocalVariable(name: "dev", arg: 1, scope: !8437, file: !1451, line: 205, type: !1356)
!8442 = !DILocalVariable(name: "config", scope: !8437, file: !1451, line: 207, type: !8203)
!8443 = !DILocation(line: 0, scope: !8437)
!8444 = !DILocation(line: 207, column: 48, scope: !8437)
!8445 = !DILocation(line: 209, column: 36, scope: !8437)
!8446 = !DILocation(line: 209, column: 9, scope: !8437)
!8447 = !DILocation(line: 209, column: 2, scope: !8437)
!8448 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1451, file: !1451, line: 270, type: !8449, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8451)
!8449 = !DISubroutineType(types: !8450)
!8450 = !{!1322, !110}
!8451 = !{!8452}
!8452 = !DILocalVariable(name: "parity", arg: 1, scope: !8448, file: !1451, line: 270, type: !110)
!8453 = !DILocation(line: 0, scope: !8448)
!8454 = !DILocation(line: 272, column: 2, scope: !8448)
!8455 = !DILocation(line: 281, column: 1, scope: !8448)
!8456 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1451, file: !1451, line: 220, type: !8438, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8457)
!8457 = !{!8458, !8459}
!8458 = !DILocalVariable(name: "dev", arg: 1, scope: !8456, file: !1451, line: 220, type: !1356)
!8459 = !DILocalVariable(name: "config", scope: !8456, file: !1451, line: 222, type: !8203)
!8460 = !DILocation(line: 0, scope: !8456)
!8461 = !DILocation(line: 222, column: 48, scope: !8456)
!8462 = !DILocation(line: 224, column: 44, scope: !8456)
!8463 = !DILocation(line: 224, column: 9, scope: !8456)
!8464 = !DILocation(line: 224, column: 2, scope: !8456)
!8465 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1451, file: !1451, line: 304, type: !8466, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8468)
!8466 = !DISubroutineType(types: !8467)
!8467 = !{!1336, !110}
!8468 = !{!8469}
!8469 = !DILocalVariable(name: "sb", arg: 1, scope: !8465, file: !1451, line: 304, type: !110)
!8470 = !DILocation(line: 0, scope: !8465)
!8471 = !DILocation(line: 306, column: 2, scope: !8465)
!8472 = !DILocation(line: 0, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8465, file: !1451, line: 306, column: 14)
!8474 = !DILocation(line: 323, column: 1, scope: !8465)
!8475 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1451, file: !1451, line: 235, type: !8438, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8476)
!8476 = !{!8477, !8478}
!8477 = !DILocalVariable(name: "dev", arg: 1, scope: !8475, file: !1451, line: 235, type: !1356)
!8478 = !DILocalVariable(name: "config", scope: !8475, file: !1451, line: 237, type: !8203)
!8479 = !DILocation(line: 0, scope: !8475)
!8480 = !DILocation(line: 237, column: 48, scope: !8475)
!8481 = !DILocation(line: 239, column: 39, scope: !8475)
!8482 = !DILocation(line: 239, column: 9, scope: !8475)
!8483 = !DILocation(line: 239, column: 2, scope: !8475)
!8484 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1451, file: !1451, line: 355, type: !8485, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8487)
!8485 = !DISubroutineType(types: !8486)
!8486 = !{!1329, !110, !110}
!8487 = !{!8488, !8489}
!8488 = !DILocalVariable(name: "db", arg: 1, scope: !8484, file: !1451, line: 355, type: !110)
!8489 = !DILocalVariable(name: "p", arg: 2, scope: !8484, file: !1451, line: 356, type: !110)
!8490 = !DILocation(line: 0, scope: !8484)
!8491 = !DILocation(line: 358, column: 2, scope: !8484)
!8492 = !DILocation(line: 384, column: 1, scope: !8484)
!8493 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1451, file: !1451, line: 250, type: !8438, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8494)
!8494 = !{!8495, !8496}
!8495 = !DILocalVariable(name: "dev", arg: 1, scope: !8493, file: !1451, line: 250, type: !1356)
!8496 = !DILocalVariable(name: "config", scope: !8493, file: !1451, line: 252, type: !8203)
!8497 = !DILocation(line: 0, scope: !8493)
!8498 = !DILocation(line: 252, column: 48, scope: !8493)
!8499 = !DILocation(line: 254, column: 40, scope: !8493)
!8500 = !DILocation(line: 254, column: 9, scope: !8493)
!8501 = !DILocation(line: 254, column: 2, scope: !8493)
!8502 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1451, file: !1451, line: 409, type: !8503, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8505)
!8503 = !DISubroutineType(types: !8504)
!8504 = !{!1342, !110}
!8505 = !{!8506}
!8506 = !DILocalVariable(name: "fc", arg: 1, scope: !8502, file: !1451, line: 409, type: !110)
!8507 = !DILocation(line: 0, scope: !8502)
!8508 = !DILocation(line: 411, column: 9, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8502, file: !1451, line: 411, column: 6)
!8510 = !DILocation(line: 416, column: 1, scope: !8502)
!8511 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8512, file: !8512, line: 967, type: !8513, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8515)
!8512 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8513 = !DISubroutineType(types: !8514)
!8514 = !{!110, !1397}
!8515 = !{!8516}
!8516 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8511, file: !8512, line: 967, type: !1397)
!8517 = !DILocation(line: 0, scope: !8511)
!8518 = !DILocation(line: 969, column: 21, scope: !8511)
!8519 = !DILocation(line: 969, column: 3, scope: !8511)
!8520 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8512, file: !8512, line: 601, type: !8513, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8521)
!8521 = !{!8522}
!8522 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8520, file: !8512, line: 601, type: !1397)
!8523 = !DILocation(line: 0, scope: !8520)
!8524 = !DILocation(line: 603, column: 21, scope: !8520)
!8525 = !DILocation(line: 603, column: 3, scope: !8520)
!8526 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8512, file: !8512, line: 820, type: !8513, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8527)
!8527 = !{!8528}
!8528 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8526, file: !8512, line: 820, type: !1397)
!8529 = !DILocation(line: 0, scope: !8526)
!8530 = !DILocation(line: 822, column: 21, scope: !8526)
!8531 = !DILocation(line: 822, column: 3, scope: !8526)
!8532 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8512, file: !8512, line: 547, type: !8513, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8533)
!8533 = !{!8534}
!8534 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8532, file: !8512, line: 547, type: !1397)
!8535 = !DILocation(line: 0, scope: !8532)
!8536 = !DILocation(line: 549, column: 21, scope: !8532)
!8537 = !DILocation(line: 549, column: 3, scope: !8532)
!8538 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1451, file: !1451, line: 257, type: !8539, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8541)
!8539 = !DISubroutineType(types: !8540)
!8540 = !{!110, !1322}
!8541 = !{!8542}
!8542 = !DILocalVariable(name: "parity", arg: 1, scope: !8538, file: !1451, line: 257, type: !1322)
!8543 = !DILocation(line: 0, scope: !8538)
!8544 = !DILocation(line: 259, column: 2, scope: !8538)
!8545 = !DILocation(line: 268, column: 1, scope: !8538)
!8546 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1451, file: !1451, line: 283, type: !8547, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8549)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{!110, !1336}
!8549 = !{!8550}
!8550 = !DILocalVariable(name: "sb", arg: 1, scope: !8546, file: !1451, line: 283, type: !1336)
!8551 = !DILocation(line: 0, scope: !8546)
!8552 = !DILocation(line: 285, column: 2, scope: !8546)
!8553 = !DILocation(line: 0, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8546, file: !1451, line: 285, column: 14)
!8555 = !DILocation(line: 302, column: 1, scope: !8546)
!8556 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1451, file: !1451, line: 325, type: !8557, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8559)
!8557 = !DISubroutineType(types: !8558)
!8558 = !{!110, !1329, !1322}
!8559 = !{!8560, !8561}
!8560 = !DILocalVariable(name: "db", arg: 1, scope: !8556, file: !1451, line: 325, type: !1329)
!8561 = !DILocalVariable(name: "p", arg: 2, scope: !8556, file: !1451, line: 326, type: !1322)
!8562 = !DILocation(line: 0, scope: !8556)
!8563 = !DILocation(line: 328, column: 2, scope: !8556)
!8564 = !DILocation(line: 353, column: 1, scope: !8556)
!8565 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1451, file: !1451, line: 393, type: !8566, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8568)
!8566 = !DISubroutineType(types: !8567)
!8567 = !{!110, !1342}
!8568 = !{!8569}
!8569 = !DILocalVariable(name: "fc", arg: 1, scope: !8565, file: !1451, line: 393, type: !1342)
!8570 = !DILocation(line: 0, scope: !8565)
!8571 = !DILocation(line: 395, column: 9, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8565, file: !1451, line: 395, column: 6)
!8573 = !DILocation(line: 400, column: 1, scope: !8565)
!8574 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8512, file: !8512, line: 424, type: !8575, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8577)
!8575 = !DISubroutineType(types: !8576)
!8576 = !{null, !1397}
!8577 = !{!8578}
!8578 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8574, file: !8512, line: 424, type: !1397)
!8579 = !DILocation(line: 0, scope: !8574)
!8580 = !DILocation(line: 426, column: 3, scope: !8574)
!8581 = !DILocation(line: 427, column: 1, scope: !8574)
!8582 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1451, file: !1451, line: 197, type: !8583, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8585)
!8583 = !DISubroutineType(types: !8584)
!8584 = !{null, !1356, !110}
!8585 = !{!8586, !8587, !8588}
!8586 = !DILocalVariable(name: "dev", arg: 1, scope: !8582, file: !1451, line: 197, type: !1356)
!8587 = !DILocalVariable(name: "parity", arg: 2, scope: !8582, file: !1451, line: 198, type: !110)
!8588 = !DILocalVariable(name: "config", scope: !8582, file: !1451, line: 200, type: !8203)
!8589 = !DILocation(line: 0, scope: !8582)
!8590 = !DILocation(line: 200, column: 48, scope: !8582)
!8591 = !DILocation(line: 202, column: 29, scope: !8582)
!8592 = !DILocation(line: 202, column: 2, scope: !8582)
!8593 = !DILocation(line: 203, column: 1, scope: !8582)
!8594 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1451, file: !1451, line: 212, type: !8583, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8595)
!8595 = !{!8596, !8597, !8598}
!8596 = !DILocalVariable(name: "dev", arg: 1, scope: !8594, file: !1451, line: 212, type: !1356)
!8597 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8594, file: !1451, line: 213, type: !110)
!8598 = !DILocalVariable(name: "config", scope: !8594, file: !1451, line: 215, type: !8203)
!8599 = !DILocation(line: 0, scope: !8594)
!8600 = !DILocation(line: 215, column: 48, scope: !8594)
!8601 = !DILocation(line: 217, column: 37, scope: !8594)
!8602 = !DILocation(line: 217, column: 2, scope: !8594)
!8603 = !DILocation(line: 218, column: 1, scope: !8594)
!8604 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1451, file: !1451, line: 227, type: !8583, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8605)
!8605 = !{!8606, !8607, !8608}
!8606 = !DILocalVariable(name: "dev", arg: 1, scope: !8604, file: !1451, line: 227, type: !1356)
!8607 = !DILocalVariable(name: "databits", arg: 2, scope: !8604, file: !1451, line: 228, type: !110)
!8608 = !DILocalVariable(name: "config", scope: !8604, file: !1451, line: 230, type: !8203)
!8609 = !DILocation(line: 0, scope: !8604)
!8610 = !DILocation(line: 230, column: 48, scope: !8604)
!8611 = !DILocation(line: 232, column: 32, scope: !8604)
!8612 = !DILocation(line: 232, column: 2, scope: !8604)
!8613 = !DILocation(line: 233, column: 1, scope: !8604)
!8614 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1451, file: !1451, line: 242, type: !8583, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8615)
!8615 = !{!8616, !8617, !8618}
!8616 = !DILocalVariable(name: "dev", arg: 1, scope: !8614, file: !1451, line: 242, type: !1356)
!8617 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8614, file: !1451, line: 243, type: !110)
!8618 = !DILocalVariable(name: "config", scope: !8614, file: !1451, line: 245, type: !8203)
!8619 = !DILocation(line: 0, scope: !8614)
!8620 = !DILocation(line: 245, column: 48, scope: !8614)
!8621 = !DILocation(line: 247, column: 33, scope: !8614)
!8622 = !DILocation(line: 247, column: 2, scope: !8614)
!8623 = !DILocation(line: 248, column: 1, scope: !8614)
!8624 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1451, file: !1451, line: 107, type: !8583, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8625)
!8625 = !{!8626, !8627, !8628, !8629, !8630}
!8626 = !DILocalVariable(name: "dev", arg: 1, scope: !8624, file: !1451, line: 107, type: !1356)
!8627 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8624, file: !1451, line: 107, type: !110)
!8628 = !DILocalVariable(name: "config", scope: !8624, file: !1451, line: 109, type: !8203)
!8629 = !DILocalVariable(name: "data", scope: !8624, file: !1451, line: 110, type: !8326)
!8630 = !DILocalVariable(name: "clock_rate", scope: !8624, file: !1451, line: 112, type: !110)
!8631 = !DILocation(line: 0, scope: !8624)
!8632 = !DILocation(line: 109, column: 48, scope: !8624)
!8633 = !DILocation(line: 110, column: 38, scope: !8624)
!8634 = !DILocation(line: 112, column: 2, scope: !8624)
!8635 = !DILocation(line: 123, column: 36, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8637, file: !1451, line: 123, column: 7)
!8637 = distinct !DILexicalBlock(scope: !8638, file: !1451, line: 122, column: 9)
!8638 = distinct !DILexicalBlock(scope: !8624, file: !1451, line: 115, column: 6)
!8639 = !DILocation(line: 124, column: 42, scope: !8636)
!8640 = !DILocation(line: 123, column: 7, scope: !8636)
!8641 = !DILocation(line: 125, column: 22, scope: !8636)
!8642 = !DILocation(line: 123, column: 7, scope: !8637)
!8643 = !DILocation(line: 176, column: 36, scope: !8624)
!8644 = !DILocation(line: 176, column: 3, scope: !8624)
!8645 = !DILocation(line: 179, column: 32, scope: !8624)
!8646 = !DILocation(line: 180, column: 10, scope: !8624)
!8647 = !DILocation(line: 179, column: 3, scope: !8624)
!8648 = !DILocation(line: 195, column: 1, scope: !8624)
!8649 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8512, file: !8512, line: 410, type: !8575, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8650)
!8650 = !{!8651}
!8651 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8649, file: !8512, line: 410, type: !1397)
!8652 = !DILocation(line: 0, scope: !8649)
!8653 = !DILocation(line: 412, column: 3, scope: !8649)
!8654 = !DILocation(line: 413, column: 1, scope: !8649)
!8655 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !810, file: !810, line: 216, type: !1430, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8656)
!8656 = !{!8657, !8658, !8659, !8660}
!8657 = !DILocalVariable(name: "dev", arg: 1, scope: !8655, file: !810, line: 216, type: !1356)
!8658 = !DILocalVariable(name: "sys", arg: 2, scope: !8655, file: !810, line: 217, type: !906)
!8659 = !DILocalVariable(name: "rate", arg: 3, scope: !8655, file: !810, line: 218, type: !862)
!8660 = !DILocalVariable(name: "api", scope: !8655, file: !810, line: 220, type: !1408)
!8661 = !DILocation(line: 0, scope: !8655)
!8662 = !DILocation(line: 221, column: 49, scope: !8655)
!8663 = !DILocation(line: 223, column: 11, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8655, file: !810, line: 223, column: 6)
!8665 = !DILocation(line: 223, column: 20, scope: !8664)
!8666 = !DILocation(line: 223, column: 6, scope: !8655)
!8667 = !DILocation(line: 227, column: 9, scope: !8655)
!8668 = !DILocation(line: 227, column: 2, scope: !8655)
!8669 = !DILocation(line: 228, column: 1, scope: !8655)
!8670 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8512, file: !8512, line: 615, type: !8671, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8673)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{null, !1397, !110}
!8673 = !{!8674, !8675}
!8674 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8670, file: !8512, line: 615, type: !1397)
!8675 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8670, file: !8512, line: 615, type: !110)
!8676 = !DILocation(line: 0, scope: !8670)
!8677 = !DILocation(line: 617, column: 3, scope: !8670)
!8678 = !DILocation(line: 618, column: 1, scope: !8670)
!8679 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8512, file: !8512, line: 1020, type: !8680, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8682)
!8680 = !DISubroutineType(types: !8681)
!8681 = !{null, !1397, !110, !110, !110}
!8682 = !{!8683, !8684, !8685, !8686}
!8683 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8679, file: !8512, line: 1020, type: !1397)
!8684 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8679, file: !8512, line: 1020, type: !110)
!8685 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8679, file: !8512, line: 1020, type: !110)
!8686 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8679, file: !8512, line: 1021, type: !110)
!8687 = !DILocation(line: 0, scope: !8679)
!8688 = !DILocation(line: 1029, column: 30, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !8512, line: 1028, column: 3)
!8690 = distinct !DILexicalBlock(scope: !8679, file: !8512, line: 1023, column: 7)
!8691 = !DILocation(line: 1029, column: 19, scope: !8689)
!8692 = !DILocation(line: 1029, column: 13, scope: !8689)
!8693 = !DILocation(line: 1029, column: 17, scope: !8689)
!8694 = !DILocation(line: 1031, column: 1, scope: !8679)
!8695 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8512, file: !8512, line: 949, type: !8671, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8696)
!8696 = !{!8697, !8698}
!8697 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8695, file: !8512, line: 949, type: !1397)
!8698 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8695, file: !8512, line: 949, type: !110)
!8699 = !DILocation(line: 0, scope: !8695)
!8700 = !DILocation(line: 951, column: 3, scope: !8695)
!8701 = !DILocation(line: 952, column: 1, scope: !8695)
!8702 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8512, file: !8512, line: 588, type: !8671, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8703)
!8703 = !{!8704, !8705}
!8704 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8702, file: !8512, line: 588, type: !1397)
!8705 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8702, file: !8512, line: 588, type: !110)
!8706 = !DILocation(line: 0, scope: !8702)
!8707 = !DILocation(line: 590, column: 3, scope: !8702)
!8708 = !DILocation(line: 591, column: 1, scope: !8702)
!8709 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8512, file: !8512, line: 805, type: !8671, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8710)
!8710 = !{!8711, !8712}
!8711 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8709, file: !8512, line: 805, type: !1397)
!8712 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8709, file: !8512, line: 805, type: !110)
!8713 = !DILocation(line: 0, scope: !8709)
!8714 = !DILocation(line: 807, column: 3, scope: !8709)
!8715 = !DILocation(line: 808, column: 1, scope: !8709)
!8716 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8512, file: !8512, line: 532, type: !8671, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8717)
!8717 = !{!8718, !8719}
!8718 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8716, file: !8512, line: 532, type: !1397)
!8719 = !DILocalVariable(name: "Parity", arg: 2, scope: !8716, file: !8512, line: 532, type: !110)
!8720 = !DILocation(line: 0, scope: !8716)
!8721 = !DILocation(line: 534, column: 3, scope: !8716)
!8722 = !DILocation(line: 535, column: 1, scope: !8716)
!8723 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8512, file: !8512, line: 1770, type: !8513, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8724)
!8724 = !{!8725}
!8725 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8723, file: !8512, line: 1770, type: !1397)
!8726 = !DILocation(line: 0, scope: !8723)
!8727 = !DILocation(line: 1772, column: 11, scope: !8723)
!8728 = !DILocation(line: 1772, column: 46, scope: !8723)
!8729 = !DILocation(line: 1772, column: 3, scope: !8723)
!8730 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8512, file: !8512, line: 1737, type: !8513, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8731)
!8731 = !{!8732}
!8732 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8730, file: !8512, line: 1737, type: !1397)
!8733 = !DILocation(line: 0, scope: !8730)
!8734 = !DILocation(line: 1739, column: 11, scope: !8730)
!8735 = !DILocation(line: 1739, column: 3, scope: !8730)
!8736 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8512, file: !8512, line: 1748, type: !8513, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8737)
!8737 = !{!8738}
!8738 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8736, file: !8512, line: 1748, type: !1397)
!8739 = !DILocation(line: 0, scope: !8736)
!8740 = !DILocation(line: 1750, column: 11, scope: !8736)
!8741 = !DILocation(line: 1750, column: 45, scope: !8736)
!8742 = !DILocation(line: 1750, column: 3, scope: !8736)
!8743 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8512, file: !8512, line: 1827, type: !8513, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8744)
!8744 = !{!8745}
!8745 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8743, file: !8512, line: 1827, type: !1397)
!8746 = !DILocation(line: 0, scope: !8743)
!8747 = !DILocation(line: 1829, column: 11, scope: !8743)
!8748 = !DILocation(line: 1829, column: 46, scope: !8743)
!8749 = !DILocation(line: 1829, column: 3, scope: !8743)
!8750 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8512, file: !8512, line: 1992, type: !8575, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8751)
!8751 = !{!8752}
!8752 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8750, file: !8512, line: 1992, type: !1397)
!8753 = !DILocation(line: 0, scope: !8750)
!8754 = !DILocation(line: 1994, column: 3, scope: !8750)
!8755 = !DILocation(line: 1995, column: 1, scope: !8750)
!8756 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8512, file: !8512, line: 1934, type: !8575, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8757)
!8757 = !{!8758, !8759}
!8758 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8756, file: !8512, line: 1934, type: !1397)
!8759 = !DILocalVariable(name: "tmpreg", scope: !8756, file: !8512, line: 1936, type: !282)
!8760 = !DILocation(line: 0, scope: !8756)
!8761 = !DILocation(line: 1936, column: 3, scope: !8756)
!8762 = !DILocation(line: 1936, column: 17, scope: !8756)
!8763 = !DILocation(line: 1937, column: 20, scope: !8756)
!8764 = !DILocation(line: 1937, column: 10, scope: !8756)
!8765 = !DILocation(line: 1938, column: 10, scope: !8756)
!8766 = !DILocation(line: 1939, column: 20, scope: !8756)
!8767 = !DILocation(line: 1939, column: 10, scope: !8756)
!8768 = !DILocation(line: 1940, column: 10, scope: !8756)
!8769 = !DILocation(line: 1941, column: 1, scope: !8756)
!8770 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8512, file: !8512, line: 1877, type: !8575, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8771)
!8771 = !{!8772, !8773}
!8772 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8770, file: !8512, line: 1877, type: !1397)
!8773 = !DILocalVariable(name: "tmpreg", scope: !8770, file: !8512, line: 1879, type: !282)
!8774 = !DILocation(line: 0, scope: !8770)
!8775 = !DILocation(line: 1879, column: 3, scope: !8770)
!8776 = !DILocation(line: 1879, column: 17, scope: !8770)
!8777 = !DILocation(line: 1880, column: 20, scope: !8770)
!8778 = !DILocation(line: 1880, column: 10, scope: !8770)
!8779 = !DILocation(line: 1881, column: 10, scope: !8770)
!8780 = !DILocation(line: 1882, column: 20, scope: !8770)
!8781 = !DILocation(line: 1882, column: 10, scope: !8770)
!8782 = !DILocation(line: 1883, column: 10, scope: !8770)
!8783 = !DILocation(line: 1884, column: 1, scope: !8770)
!8784 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8512, file: !8512, line: 1896, type: !8575, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8785)
!8785 = !{!8786, !8787}
!8786 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8784, file: !8512, line: 1896, type: !1397)
!8787 = !DILocalVariable(name: "tmpreg", scope: !8784, file: !8512, line: 1898, type: !282)
!8788 = !DILocation(line: 0, scope: !8784)
!8789 = !DILocation(line: 1898, column: 3, scope: !8784)
!8790 = !DILocation(line: 1898, column: 17, scope: !8784)
!8791 = !DILocation(line: 1899, column: 20, scope: !8784)
!8792 = !DILocation(line: 1899, column: 10, scope: !8784)
!8793 = !DILocation(line: 1900, column: 10, scope: !8784)
!8794 = !DILocation(line: 1901, column: 20, scope: !8784)
!8795 = !DILocation(line: 1901, column: 10, scope: !8784)
!8796 = !DILocation(line: 1902, column: 10, scope: !8784)
!8797 = !DILocation(line: 1903, column: 1, scope: !8784)
!8798 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8512, file: !8512, line: 1915, type: !8575, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8799)
!8799 = !{!8800, !8801}
!8800 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8798, file: !8512, line: 1915, type: !1397)
!8801 = !DILocalVariable(name: "tmpreg", scope: !8798, file: !8512, line: 1917, type: !282)
!8802 = !DILocation(line: 0, scope: !8798)
!8803 = !DILocation(line: 1917, column: 3, scope: !8798)
!8804 = !DILocation(line: 1917, column: 17, scope: !8798)
!8805 = !DILocation(line: 1918, column: 20, scope: !8798)
!8806 = !DILocation(line: 1918, column: 10, scope: !8798)
!8807 = !DILocation(line: 1919, column: 10, scope: !8798)
!8808 = !DILocation(line: 1920, column: 20, scope: !8798)
!8809 = !DILocation(line: 1920, column: 10, scope: !8798)
!8810 = !DILocation(line: 1921, column: 10, scope: !8798)
!8811 = !DILocation(line: 1922, column: 1, scope: !8798)
!8812 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8512, file: !8512, line: 1814, type: !8513, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8813)
!8813 = !{!8814}
!8814 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8812, file: !8512, line: 1814, type: !1397)
!8815 = !DILocation(line: 0, scope: !8812)
!8816 = !DILocation(line: 1816, column: 11, scope: !8812)
!8817 = !DILocation(line: 1816, column: 46, scope: !8812)
!8818 = !DILocation(line: 1816, column: 3, scope: !8812)
!8819 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8512, file: !8512, line: 2426, type: !8820, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8822)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{null, !1397, !178}
!8822 = !{!8823, !8824}
!8823 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8819, file: !8512, line: 2426, type: !1397)
!8824 = !DILocalVariable(name: "Value", arg: 2, scope: !8819, file: !8512, line: 2426, type: !178)
!8825 = !DILocation(line: 0, scope: !8819)
!8826 = !DILocation(line: 2428, column: 16, scope: !8819)
!8827 = !DILocation(line: 2428, column: 11, scope: !8819)
!8828 = !DILocation(line: 2428, column: 14, scope: !8819)
!8829 = !DILocation(line: 2429, column: 1, scope: !8819)
!8830 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8512, file: !8512, line: 1792, type: !8513, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8831)
!8831 = !{!8832}
!8832 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8830, file: !8512, line: 1792, type: !1397)
!8833 = !DILocation(line: 0, scope: !8830)
!8834 = !DILocation(line: 1794, column: 11, scope: !8830)
!8835 = !DILocation(line: 1794, column: 47, scope: !8830)
!8836 = !DILocation(line: 1794, column: 3, scope: !8830)
!8837 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8512, file: !8512, line: 2403, type: !8838, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8840)
!8838 = !DISubroutineType(types: !8839)
!8839 = !{!178, !1397}
!8840 = !{!8841}
!8841 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8837, file: !8512, line: 2403, type: !1397)
!8842 = !DILocation(line: 0, scope: !8837)
!8843 = !DILocation(line: 2405, column: 20, scope: !8837)
!8844 = !DILocation(line: 2405, column: 10, scope: !8837)
!8845 = !DILocation(line: 2405, column: 3, scope: !8837)
!8846 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1451, file: !1451, line: 1583, type: !1377, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8847)
!8847 = !{!8848, !8849, !8850, !8851, !8852, !8853}
!8848 = !DILocalVariable(name: "dev", arg: 1, scope: !8846, file: !1451, line: 1583, type: !1356)
!8849 = !DILocalVariable(name: "config", scope: !8846, file: !1451, line: 1585, type: !8203)
!8850 = !DILocalVariable(name: "data", scope: !8846, file: !1451, line: 1586, type: !8326)
!8851 = !DILocalVariable(name: "ll_parity", scope: !8846, file: !1451, line: 1587, type: !110)
!8852 = !DILocalVariable(name: "ll_datawidth", scope: !8846, file: !1451, line: 1588, type: !110)
!8853 = !DILocalVariable(name: "err", scope: !8846, file: !1451, line: 1589, type: !109)
!8854 = !DILocation(line: 0, scope: !8846)
!8855 = !DILocation(line: 1585, column: 48, scope: !8846)
!8856 = !DILocation(line: 1586, column: 38, scope: !8846)
!8857 = !DILocation(line: 1591, column: 2, scope: !8846)
!8858 = !DILocation(line: 1593, column: 29, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8846, file: !1451, line: 1593, column: 6)
!8860 = !DILocation(line: 1593, column: 7, scope: !8859)
!8861 = !DILocation(line: 1593, column: 6, scope: !8846)
!8862 = !DILocation(line: 1599, column: 31, scope: !8846)
!8863 = !DILocation(line: 1599, column: 71, scope: !8846)
!8864 = !DILocation(line: 1599, column: 8, scope: !8846)
!8865 = !DILocation(line: 1600, column: 10, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8846, file: !1451, line: 1600, column: 6)
!8867 = !DILocation(line: 1600, column: 6, scope: !8846)
!8868 = !DILocation(line: 1616, column: 36, scope: !8846)
!8869 = !DILocation(line: 1616, column: 8, scope: !8846)
!8870 = !DILocation(line: 1617, column: 10, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8846, file: !1451, line: 1617, column: 6)
!8872 = !DILocation(line: 1617, column: 6, scope: !8846)
!8873 = !DILocation(line: 1621, column: 27, scope: !8846)
!8874 = !DILocation(line: 1621, column: 2, scope: !8846)
!8875 = !DILocation(line: 1624, column: 40, scope: !8846)
!8876 = !DILocation(line: 1624, column: 2, scope: !8846)
!8877 = !DILocation(line: 1630, column: 14, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8846, file: !1451, line: 1630, column: 6)
!8879 = !DILocation(line: 1630, column: 6, scope: !8846)
!8880 = !DILocation(line: 1638, column: 2, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8882, file: !1451, line: 1634, column: 34)
!8882 = distinct !DILexicalBlock(scope: !8878, file: !1451, line: 1634, column: 13)
!8883 = !DILocation(line: 0, scope: !8878)
!8884 = !DILocation(line: 1649, column: 35, scope: !8846)
!8885 = !DILocation(line: 1649, column: 2, scope: !8846)
!8886 = !DILocation(line: 1654, column: 14, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8846, file: !1451, line: 1654, column: 6)
!8888 = !DILocation(line: 1654, column: 6, scope: !8846)
!8889 = !DILocation(line: 1655, column: 3, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8887, file: !1451, line: 1654, column: 31)
!8891 = !DILocation(line: 1656, column: 2, scope: !8890)
!8892 = !DILocation(line: 1659, column: 37, scope: !8846)
!8893 = !DILocation(line: 1659, column: 2, scope: !8846)
!8894 = !DILocation(line: 1662, column: 14, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8846, file: !1451, line: 1662, column: 6)
!8896 = !DILocation(line: 1662, column: 6, scope: !8846)
!8897 = !DILocation(line: 1663, column: 37, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8895, file: !1451, line: 1662, column: 27)
!8899 = !DILocation(line: 1663, column: 3, scope: !8898)
!8900 = !DILocation(line: 1664, column: 2, scope: !8898)
!8901 = !DILocation(line: 1684, column: 26, scope: !8846)
!8902 = !DILocation(line: 1684, column: 2, scope: !8846)
!8903 = !DILocation(line: 1722, column: 2, scope: !8846)
!8904 = !DILocation(line: 1724, column: 1, scope: !8846)
!8905 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1451, file: !1451, line: 651, type: !8906, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8908)
!8906 = !DISubroutineType(types: !8907)
!8907 = !{null, !1356}
!8908 = !{!8909, !8910, !8911}
!8909 = !DILocalVariable(name: "dev", arg: 1, scope: !8905, file: !1451, line: 651, type: !1356)
!8910 = !DILocalVariable(name: "data", scope: !8905, file: !1451, line: 653, type: !8326)
!8911 = !DILocalVariable(name: "clk", scope: !8905, file: !1451, line: 654, type: !8912)
!8912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1356)
!8913 = !DILocation(line: 0, scope: !8905)
!8914 = !DILocation(line: 653, column: 38, scope: !8905)
!8915 = !DILocation(line: 656, column: 8, scope: !8905)
!8916 = !DILocation(line: 656, column: 14, scope: !8905)
!8917 = !DILocation(line: 657, column: 1, scope: !8905)
!8918 = distinct !DISubprogram(name: "device_is_ready", scope: !7341, file: !7341, line: 47, type: !8919, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8921)
!8919 = !DISubroutineType(types: !8920)
!8920 = !{!315, !1356}
!8921 = !{!8922}
!8922 = !DILocalVariable(name: "dev", arg: 1, scope: !8918, file: !7341, line: 47, type: !1356)
!8923 = !DILocation(line: 0, scope: !8918)
!8924 = !DILocation(line: 55, column: 2, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8918, file: !7341, line: 55, column: 2)
!8926 = !{i64 2155368824}
!8927 = !DILocation(line: 56, column: 9, scope: !8918)
!8928 = !DILocation(line: 56, column: 2, scope: !8918)
!8929 = distinct !DISubprogram(name: "clock_control_on", scope: !810, file: !810, line: 123, type: !1415, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8930)
!8930 = !{!8931, !8932, !8933}
!8931 = !DILocalVariable(name: "dev", arg: 1, scope: !8929, file: !810, line: 123, type: !1356)
!8932 = !DILocalVariable(name: "sys", arg: 2, scope: !8929, file: !810, line: 124, type: !906)
!8933 = !DILocalVariable(name: "api", scope: !8929, file: !810, line: 126, type: !1408)
!8934 = !DILocation(line: 0, scope: !8929)
!8935 = !DILocation(line: 127, column: 49, scope: !8929)
!8936 = !DILocation(line: 129, column: 14, scope: !8929)
!8937 = !DILocation(line: 129, column: 9, scope: !8929)
!8938 = !DILocation(line: 129, column: 2, scope: !8929)
!8939 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1502, file: !1502, line: 342, type: !8940, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8942)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{!109, !1552, !178}
!8942 = !{!8943, !8944, !8945, !8946}
!8943 = !DILocalVariable(name: "config", arg: 1, scope: !8939, file: !1502, line: 342, type: !1552)
!8944 = !DILocalVariable(name: "id", arg: 2, scope: !8939, file: !1502, line: 343, type: !178)
!8945 = !DILocalVariable(name: "ret", scope: !8939, file: !1502, line: 345, type: !109)
!8946 = !DILocalVariable(name: "state", scope: !8939, file: !1502, line: 346, type: !1505)
!8947 = !DILocation(line: 0, scope: !8939)
!8948 = !DILocation(line: 346, column: 2, scope: !8939)
!8949 = !DILocation(line: 348, column: 8, scope: !8939)
!8950 = !DILocation(line: 349, column: 10, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8939, file: !1502, line: 349, column: 6)
!8952 = !DILocation(line: 349, column: 6, scope: !8939)
!8953 = !DILocation(line: 353, column: 44, scope: !8939)
!8954 = !DILocation(line: 353, column: 9, scope: !8939)
!8955 = !DILocation(line: 353, column: 2, scope: !8939)
!8956 = !DILocation(line: 354, column: 1, scope: !8939)
!8957 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8512, file: !8512, line: 497, type: !8671, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8958)
!8958 = !{!8959, !8960, !8961}
!8959 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8957, file: !8512, line: 497, type: !1397)
!8960 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !8957, file: !8512, line: 497, type: !110)
!8961 = !DILocalVariable(name: "val", scope: !8962, file: !8512, line: 499, type: !110)
!8962 = distinct !DILexicalBlock(scope: !8957, file: !8512, line: 499, column: 3)
!8963 = !DILocation(line: 0, scope: !8957)
!8964 = !DILocation(line: 499, column: 3, scope: !8962)
!8965 = !DILocalVariable(name: "addr", arg: 1, scope: !8966, file: !5129, line: 476, type: !1447)
!8966 = distinct !DISubprogram(name: "__LDREXW", scope: !5129, file: !5129, line: 476, type: !8967, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8969)
!8967 = !DISubroutineType(types: !8968)
!8968 = !{!110, !1447}
!8969 = !{!8965, !8970}
!8970 = !DILocalVariable(name: "result", scope: !8966, file: !5129, line: 478, type: !110)
!8971 = !DILocation(line: 0, scope: !8966, inlinedAt: !8972)
!8972 = distinct !DILocation(line: 499, column: 3, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8962, file: !8512, line: 499, column: 3)
!8974 = !DILocation(line: 480, column: 4, scope: !8966, inlinedAt: !8972)
!8975 = !{i64 3758140}
!8976 = !DILocation(line: 499, column: 3, scope: !8973)
!8977 = !DILocation(line: 0, scope: !8962)
!8978 = !DILocalVariable(name: "value", arg: 1, scope: !8979, file: !5129, line: 527, type: !110)
!8979 = distinct !DISubprogram(name: "__STREXW", scope: !5129, file: !5129, line: 527, type: !8980, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8982)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{!110, !110, !1447}
!8982 = !{!8978, !8983, !8984}
!8983 = !DILocalVariable(name: "addr", arg: 2, scope: !8979, file: !5129, line: 527, type: !1447)
!8984 = !DILocalVariable(name: "result", scope: !8979, file: !5129, line: 529, type: !110)
!8985 = !DILocation(line: 0, scope: !8979, inlinedAt: !8986)
!8986 = distinct !DILocation(line: 499, column: 3, scope: !8962)
!8987 = !DILocation(line: 531, column: 4, scope: !8979, inlinedAt: !8986)
!8988 = !{i64 3759576}
!8989 = distinct !{!8989, !8964, !8964}
!8990 = !DILocation(line: 500, column: 1, scope: !8957)
!8991 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8512, file: !8512, line: 850, type: !8680, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8992)
!8992 = !{!8993, !8994, !8995, !8996}
!8993 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8991, file: !8512, line: 850, type: !1397)
!8994 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8991, file: !8512, line: 850, type: !110)
!8995 = !DILocalVariable(name: "Parity", arg: 3, scope: !8991, file: !8512, line: 850, type: !110)
!8996 = !DILocalVariable(name: "StopBits", arg: 4, scope: !8991, file: !8512, line: 851, type: !110)
!8997 = !DILocation(line: 0, scope: !8991)
!8998 = !DILocation(line: 853, column: 3, scope: !8991)
!8999 = !DILocation(line: 854, column: 3, scope: !8991)
!9000 = !DILocation(line: 855, column: 1, scope: !8991)
!9001 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8512, file: !8512, line: 1337, type: !8575, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !9002)
!9002 = !{!9003}
!9003 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9001, file: !8512, line: 1337, type: !1397)
!9004 = !DILocation(line: 0, scope: !9001)
!9005 = !DILocation(line: 1339, column: 3, scope: !9001)
!9006 = !DILocation(line: 1340, column: 1, scope: !9001)
!9007 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1502, file: !1502, line: 316, type: !9008, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !9010)
!9008 = !DISubroutineType(types: !9009)
!9009 = !{!109, !1552, !1505}
!9010 = !{!9011, !9012, !9013}
!9011 = !DILocalVariable(name: "config", arg: 1, scope: !9007, file: !1502, line: 317, type: !1552)
!9012 = !DILocalVariable(name: "state", arg: 2, scope: !9007, file: !1502, line: 318, type: !1505)
!9013 = !DILocalVariable(name: "reg", scope: !9007, file: !1502, line: 320, type: !22)
!9014 = !DILocation(line: 0, scope: !9007)
!9015 = !DILocation(line: 329, column: 39, scope: !9007)
!9016 = !DILocation(line: 329, column: 52, scope: !9007)
!9017 = !DILocation(line: 329, column: 9, scope: !9007)
!9018 = !DILocation(line: 329, column: 2, scope: !9007)
!9019 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !302, file: !302, line: 730, type: !8919, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !9020)
!9020 = !{!9021}
!9021 = !DILocalVariable(name: "dev", arg: 1, scope: !9019, file: !302, line: 730, type: !1356)
!9022 = !DILocation(line: 0, scope: !9019)
!9023 = !DILocation(line: 732, column: 9, scope: !9019)
!9024 = !DILocation(line: 732, column: 2, scope: !9019)
!9025 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1667, file: !1667, line: 270, type: !1673, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !9026)
!9026 = !{!9027}
!9027 = !DILocalVariable(name: "dev", arg: 1, scope: !9025, file: !1667, line: 270, type: !1675)
!9028 = !DILocation(line: 0, scope: !9025)
!9029 = !DILocation(line: 274, column: 2, scope: !9025)
!9030 = !DILocation(line: 275, column: 12, scope: !9025)
!9031 = !DILocation(line: 276, column: 15, scope: !9025)
!9032 = !DILocation(line: 277, column: 16, scope: !9025)
!9033 = !DILocation(line: 278, column: 15, scope: !9025)
!9034 = !DILocation(line: 279, column: 16, scope: !9025)
!9035 = !DILocation(line: 282, column: 2, scope: !9025)
!9036 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !5163, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !9037)
!9037 = !{!9038, !9039}
!9038 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9036, file: !495, line: 1814, type: !760)
!9039 = !DILocalVariable(name: "priority", arg: 2, scope: !9036, file: !495, line: 1814, type: !110)
!9040 = !DILocation(line: 0, scope: !9036)
!9041 = !DILocation(line: 1822, column: 46, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9043, file: !495, line: 1821, column: 3)
!9043 = distinct !DILexicalBlock(scope: !9036, file: !495, line: 1816, column: 7)
!9044 = !DILocation(line: 1824, column: 1, scope: !9036)
!9045 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1667, file: !1667, line: 118, type: !5066, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !9046)
!9046 = !{!9047, !9048}
!9047 = !DILocalVariable(name: "arg", arg: 1, scope: !9045, file: !1667, line: 118, type: !106)
!9048 = !DILocalVariable(name: "dticks", scope: !9045, file: !1667, line: 121, type: !110)
!9049 = !DILocation(line: 0, scope: !9045)
!9050 = !DILocation(line: 124, column: 2, scope: !9045)
!9051 = !DILocation(line: 129, column: 17, scope: !9045)
!9052 = !DILocation(line: 129, column: 14, scope: !9045)
!9053 = !DILocation(line: 130, column: 15, scope: !9045)
!9054 = !DILocation(line: 145, column: 27, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !1667, line: 132, column: 16)
!9056 = distinct !DILexicalBlock(scope: !9045, file: !1667, line: 132, column: 6)
!9057 = !DILocation(line: 145, column: 25, scope: !9055)
!9058 = !DILocation(line: 145, column: 45, scope: !9055)
!9059 = !DILocation(line: 146, column: 30, scope: !9055)
!9060 = !DILocation(line: 146, column: 20, scope: !9055)
!9061 = !DILocation(line: 147, column: 3, scope: !9055)
!9062 = !DILocation(line: 151, column: 2, scope: !9045)
!9063 = !DILocation(line: 152, column: 1, scope: !9045)
!9064 = distinct !DISubprogram(name: "elapsed", scope: !1667, file: !1667, line: 85, type: !5210, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !9065)
!9065 = !{!9066, !9067, !9068}
!9066 = !DILocalVariable(name: "val1", scope: !9064, file: !1667, line: 87, type: !110)
!9067 = !DILocalVariable(name: "ctrl", scope: !9064, file: !1667, line: 88, type: !110)
!9068 = !DILocalVariable(name: "val2", scope: !9064, file: !1667, line: 89, type: !110)
!9069 = !DILocation(line: 87, column: 27, scope: !9064)
!9070 = !DILocation(line: 0, scope: !9064)
!9071 = !DILocation(line: 88, column: 27, scope: !9064)
!9072 = !DILocation(line: 89, column: 27, scope: !9064)
!9073 = !DILocation(line: 105, column: 12, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9064, file: !1667, line: 105, column: 6)
!9075 = !DILocation(line: 106, column: 6, scope: !9074)
!9076 = !DILocation(line: 107, column: 16, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9074, file: !1667, line: 106, column: 24)
!9078 = !DILocation(line: 111, column: 18, scope: !9077)
!9079 = !DILocation(line: 112, column: 2, scope: !9077)
!9080 = !DILocation(line: 114, column: 20, scope: !9064)
!9081 = !DILocation(line: 114, column: 30, scope: !9064)
!9082 = !DILocation(line: 114, column: 28, scope: !9064)
!9083 = !DILocation(line: 114, column: 2, scope: !9064)
!9084 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1667, file: !1667, line: 154, type: !9085, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !9087)
!9085 = !DISubroutineType(types: !9086)
!9086 = !{null, !734, !315}
!9087 = !{!9088, !9089, !9090, !9091, !9092, !9093, !9094, !9099, !9100}
!9088 = !DILocalVariable(name: "ticks", arg: 1, scope: !9084, file: !1667, line: 154, type: !734)
!9089 = !DILocalVariable(name: "idle", arg: 2, scope: !9084, file: !1667, line: 154, type: !315)
!9090 = !DILocalVariable(name: "delay", scope: !9084, file: !1667, line: 169, type: !110)
!9091 = !DILocalVariable(name: "val1", scope: !9084, file: !1667, line: 170, type: !110)
!9092 = !DILocalVariable(name: "val2", scope: !9084, file: !1667, line: 170, type: !110)
!9093 = !DILocalVariable(name: "last_load_", scope: !9084, file: !1667, line: 171, type: !110)
!9094 = !DILocalVariable(name: "key", scope: !9084, file: !1667, line: 176, type: !9095)
!9095 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !9096)
!9096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !9097)
!9097 = !{!9098}
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9096, file: !250, line: 33, baseType: !109, size: 32)
!9099 = !DILocalVariable(name: "pending", scope: !9084, file: !1667, line: 178, type: !110)
!9100 = !DILocalVariable(name: "unannounced", scope: !9084, file: !1667, line: 185, type: !110)
!9101 = !DILocation(line: 0, scope: !9084)
!9102 = !DILocation(line: 162, column: 49, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9084, file: !1667, line: 162, column: 6)
!9104 = !DILocation(line: 163, column: 17, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9103, file: !1667, line: 162, column: 78)
!9106 = !DILocation(line: 164, column: 13, scope: !9105)
!9107 = !DILocation(line: 165, column: 3, scope: !9105)
!9108 = !DILocation(line: 171, column: 24, scope: !9084)
!9109 = !DILocation(line: 173, column: 10, scope: !9084)
!9110 = !DILocation(line: 174, column: 10, scope: !9084)
!9111 = !DILocalVariable(name: "l", arg: 1, scope: !9112, file: !250, line: 136, type: !9115)
!9112 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !9113, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !9116)
!9113 = !DISubroutineType(types: !9114)
!9114 = !{!9095, !9115}
!9115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 32)
!9116 = !{!9111, !9117}
!9117 = !DILocalVariable(name: "k", scope: !9112, file: !250, line: 139, type: !9095)
!9118 = !DILocation(line: 0, scope: !9112, inlinedAt: !9119)
!9119 = distinct !DILocation(line: 176, column: 25, scope: !9084)
!9120 = !DILocation(line: 55, column: 2, scope: !9121, inlinedAt: !9125)
!9121 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4955, file: !4955, line: 42, type: !4956, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !9122)
!9122 = !{!9123, !9124}
!9123 = !DILocalVariable(name: "key", scope: !9121, file: !4955, line: 44, type: !32)
!9124 = !DILocalVariable(name: "tmp", scope: !9121, file: !4955, line: 53, type: !32)
!9125 = distinct !DILocation(line: 145, column: 10, scope: !9112, inlinedAt: !9119)
!9126 = !{i64 2278992}
!9127 = !DILocation(line: 0, scope: !9121, inlinedAt: !9125)
!9128 = !DILocation(line: 178, column: 21, scope: !9084)
!9129 = !DILocation(line: 180, column: 18, scope: !9084)
!9130 = !DILocation(line: 182, column: 14, scope: !9084)
!9131 = !DILocation(line: 183, column: 15, scope: !9084)
!9132 = !DILocation(line: 185, column: 39, scope: !9084)
!9133 = !DILocation(line: 185, column: 37, scope: !9084)
!9134 = !DILocation(line: 187, column: 27, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9084, file: !1667, line: 187, column: 6)
!9136 = !DILocation(line: 187, column: 6, scope: !9084)
!9137 = !DILocation(line: 202, column: 27, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9135, file: !1667, line: 195, column: 9)
!9139 = !DILocation(line: 202, column: 48, scope: !9138)
!9140 = !DILocation(line: 203, column: 9, scope: !9138)
!9141 = !DILocation(line: 204, column: 11, scope: !9138)
!9142 = !DILocation(line: 205, column: 13, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9138, file: !1667, line: 205, column: 7)
!9144 = !DILocation(line: 205, column: 7, scope: !9138)
!9145 = !DILocation(line: 0, scope: !9135)
!9146 = !DILocation(line: 212, column: 18, scope: !9084)
!9147 = !DILocation(line: 214, column: 28, scope: !9084)
!9148 = !DILocation(line: 214, column: 16, scope: !9084)
!9149 = !DILocation(line: 215, column: 15, scope: !9084)
!9150 = !DILocation(line: 227, column: 11, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9084, file: !1667, line: 227, column: 6)
!9152 = !DILocation(line: 227, column: 6, scope: !9084)
!9153 = !DILocation(line: 228, column: 15, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9151, file: !1667, line: 227, column: 19)
!9155 = !DILocation(line: 228, column: 38, scope: !9154)
!9156 = !DILocation(line: 228, column: 24, scope: !9154)
!9157 = !DILocation(line: 229, column: 2, scope: !9154)
!9158 = !DILocation(line: 230, column: 24, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9151, file: !1667, line: 229, column: 9)
!9160 = !DILocation(line: 230, column: 15, scope: !9159)
!9161 = !DILocation(line: 0, scope: !9151)
!9162 = !DILocalVariable(name: "key", arg: 2, scope: !9163, file: !250, line: 190, type: !9095)
!9163 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !9164, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !9166)
!9164 = !DISubroutineType(types: !9165)
!9165 = !{null, !9115, !9095}
!9166 = !{!9167, !9162}
!9167 = !DILocalVariable(name: "l", arg: 1, scope: !9163, file: !250, line: 189, type: !9115)
!9168 = !DILocation(line: 0, scope: !9163, inlinedAt: !9169)
!9169 = distinct !DILocation(line: 232, column: 2, scope: !9084)
!9170 = !DILocalVariable(name: "key", arg: 1, scope: !9171, file: !4955, line: 84, type: !32)
!9171 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4955, file: !4955, line: 84, type: !4966, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !9172)
!9172 = !{!9170}
!9173 = !DILocation(line: 0, scope: !9171, inlinedAt: !9174)
!9174 = distinct !DILocation(line: 215, column: 2, scope: !9163, inlinedAt: !9169)
!9175 = !DILocation(line: 95, column: 2, scope: !9171, inlinedAt: !9174)
!9176 = !{i64 2279809}
!9177 = !DILocation(line: 234, column: 1, scope: !9084)
!9178 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1667, file: !1667, line: 236, type: !5210, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !9179)
!9179 = !{!9180, !9181}
!9180 = !DILocalVariable(name: "key", scope: !9178, file: !1667, line: 242, type: !9095)
!9181 = !DILocalVariable(name: "cyc", scope: !9178, file: !1667, line: 243, type: !110)
!9182 = !DILocation(line: 0, scope: !9112, inlinedAt: !9183)
!9183 = distinct !DILocation(line: 242, column: 25, scope: !9178)
!9184 = !DILocation(line: 55, column: 2, scope: !9121, inlinedAt: !9185)
!9185 = distinct !DILocation(line: 145, column: 10, scope: !9112, inlinedAt: !9183)
!9186 = !DILocation(line: 0, scope: !9121, inlinedAt: !9185)
!9187 = !DILocation(line: 0, scope: !9178)
!9188 = !DILocation(line: 243, column: 17, scope: !9178)
!9189 = !DILocation(line: 243, column: 29, scope: !9178)
!9190 = !DILocation(line: 243, column: 27, scope: !9178)
!9191 = !DILocation(line: 243, column: 43, scope: !9178)
!9192 = !DILocation(line: 243, column: 41, scope: !9178)
!9193 = !DILocation(line: 0, scope: !9163, inlinedAt: !9194)
!9194 = distinct !DILocation(line: 245, column: 2, scope: !9178)
!9195 = !DILocation(line: 0, scope: !9171, inlinedAt: !9196)
!9196 = distinct !DILocation(line: 215, column: 2, scope: !9163, inlinedAt: !9194)
!9197 = !DILocation(line: 95, column: 2, scope: !9171, inlinedAt: !9196)
!9198 = !DILocation(line: 246, column: 13, scope: !9178)
!9199 = !DILocation(line: 246, column: 2, scope: !9178)
!9200 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1667, file: !1667, line: 249, type: !5210, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !9201)
!9201 = !{!9202, !9203}
!9202 = !DILocalVariable(name: "key", scope: !9200, file: !1667, line: 251, type: !9095)
!9203 = !DILocalVariable(name: "ret", scope: !9200, file: !1667, line: 252, type: !110)
!9204 = !DILocation(line: 0, scope: !9112, inlinedAt: !9205)
!9205 = distinct !DILocation(line: 251, column: 25, scope: !9200)
!9206 = !DILocation(line: 55, column: 2, scope: !9121, inlinedAt: !9207)
!9207 = distinct !DILocation(line: 145, column: 10, scope: !9112, inlinedAt: !9205)
!9208 = !DILocation(line: 0, scope: !9121, inlinedAt: !9207)
!9209 = !DILocation(line: 0, scope: !9200)
!9210 = !DILocation(line: 252, column: 17, scope: !9200)
!9211 = !DILocation(line: 252, column: 29, scope: !9200)
!9212 = !DILocation(line: 252, column: 27, scope: !9200)
!9213 = !DILocation(line: 0, scope: !9163, inlinedAt: !9214)
!9214 = distinct !DILocation(line: 254, column: 2, scope: !9200)
!9215 = !DILocation(line: 0, scope: !9171, inlinedAt: !9216)
!9216 = distinct !DILocation(line: 215, column: 2, scope: !9163, inlinedAt: !9214)
!9217 = !DILocation(line: 95, column: 2, scope: !9171, inlinedAt: !9216)
!9218 = !DILocation(line: 255, column: 2, scope: !9200)
!9219 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1667, file: !1667, line: 258, type: !2980, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !251)
!9220 = !DILocation(line: 260, column: 6, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9219, file: !1667, line: 260, column: 6)
!9222 = !DILocation(line: 260, column: 16, scope: !9221)
!9223 = !DILocation(line: 260, column: 6, scope: !9219)
!9224 = !DILocation(line: 261, column: 17, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9221, file: !1667, line: 260, column: 34)
!9226 = !DILocation(line: 262, column: 2, scope: !9225)
!9227 = !DILocation(line: 263, column: 1, scope: !9219)
!9228 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1667, file: !1667, line: 265, type: !2980, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1589, retainedNodes: !251)
!9229 = !DILocation(line: 267, column: 16, scope: !9228)
!9230 = !DILocation(line: 268, column: 1, scope: !9228)
!9231 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9232, file: !9232, line: 9, type: !9233, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !9256)
!9232 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9233 = !DISubroutineType(types: !9234)
!9234 = !{!109, !9235, !178, !9255}
!9235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9236, size: 32)
!9236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9237)
!9237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1502, line: 60, size: 64, elements: !9238)
!9238 = !{!9239, !9254}
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9237, file: !1502, line: 69, baseType: !9240, size: 32)
!9240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9241, size: 32)
!9241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9242)
!9242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1502, line: 50, size: 64, elements: !9243)
!9243 = !{!9244, !9252, !9253}
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9242, file: !1502, line: 52, baseType: !9245, size: 32)
!9245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9246, size: 32)
!9246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9247)
!9247 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1513, line: 37, baseType: !9248)
!9248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1513, line: 32, size: 64, elements: !9249)
!9249 = !{!9250, !9251}
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9248, file: !1513, line: 34, baseType: !110, size: 32)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9248, file: !1513, line: 36, baseType: !110, size: 32, offset: 32)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9242, file: !1502, line: 54, baseType: !178, size: 8, offset: 32)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9242, file: !1502, line: 56, baseType: !178, size: 8, offset: 40)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9237, file: !1502, line: 71, baseType: !178, size: 8, offset: 32)
!9255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9240, size: 32)
!9256 = !{!9257, !9258, !9259}
!9257 = !DILocalVariable(name: "config", arg: 1, scope: !9231, file: !9232, line: 9, type: !9235)
!9258 = !DILocalVariable(name: "id", arg: 2, scope: !9231, file: !9232, line: 9, type: !178)
!9259 = !DILocalVariable(name: "state", arg: 3, scope: !9231, file: !9232, line: 10, type: !9255)
!9260 = !DILocation(line: 0, scope: !9231)
!9261 = !DILocation(line: 12, column: 20, scope: !9231)
!9262 = !DILocation(line: 13, column: 27, scope: !9231)
!9263 = !DILocation(line: 13, column: 42, scope: !9231)
!9264 = !DILocation(line: 13, column: 19, scope: !9231)
!9265 = !DILocation(line: 13, column: 16, scope: !9231)
!9266 = !DILocation(line: 13, column: 2, scope: !9231)
!9267 = distinct !{!9267, !9266, !9268}
!9268 = !DILocation(line: 19, column: 2, scope: !9231)
!9269 = !DILocation(line: 14, column: 23, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9271, file: !9232, line: 14, column: 7)
!9271 = distinct !DILexicalBlock(scope: !9231, file: !9232, line: 13, column: 54)
!9272 = !DILocation(line: 14, column: 10, scope: !9270)
!9273 = !DILocation(line: 18, column: 11, scope: !9271)
!9274 = !DILocation(line: 14, column: 7, scope: !9271)
!9275 = !DILocation(line: 22, column: 1, scope: !9231)
!9276 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1784, file: !1784, line: 193, type: !9277, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !9286)
!9277 = !DISubroutineType(types: !9278)
!9278 = !{!109, !9279, !178, !22}
!9279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9280, size: 32)
!9280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9281)
!9281 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1513, line: 37, baseType: !9282)
!9282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1513, line: 32, size: 64, elements: !9283)
!9283 = !{!9284, !9285}
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9282, file: !1513, line: 34, baseType: !110, size: 32)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9282, file: !1513, line: 36, baseType: !110, size: 32, offset: 32)
!9286 = !{!9287, !9288, !9289, !9290, !9291, !9292, !9293, !9294, !9296}
!9287 = !DILocalVariable(name: "pins", arg: 1, scope: !9276, file: !1784, line: 193, type: !9279)
!9288 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9276, file: !1784, line: 193, type: !178)
!9289 = !DILocalVariable(name: "reg", arg: 3, scope: !9276, file: !1784, line: 194, type: !22)
!9290 = !DILocalVariable(name: "pin", scope: !9276, file: !1784, line: 196, type: !110)
!9291 = !DILocalVariable(name: "mux", scope: !9276, file: !1784, line: 196, type: !110)
!9292 = !DILocalVariable(name: "pin_cgf", scope: !9276, file: !1784, line: 197, type: !110)
!9293 = !DILocalVariable(name: "ret", scope: !9276, file: !1784, line: 198, type: !109)
!9294 = !DILocalVariable(name: "i", scope: !9295, file: !1784, line: 209, type: !178)
!9295 = distinct !DILexicalBlock(scope: !9276, file: !1784, line: 209, column: 2)
!9296 = !DILocalVariable(name: "gpio_out", scope: !9297, file: !1784, line: 239, type: !110)
!9297 = distinct !DILexicalBlock(scope: !9298, file: !1784, line: 238, column: 55)
!9298 = distinct !DILexicalBlock(scope: !9299, file: !1784, line: 238, column: 14)
!9299 = distinct !DILexicalBlock(scope: !9300, file: !1784, line: 236, column: 14)
!9300 = distinct !DILexicalBlock(scope: !9301, file: !1784, line: 234, column: 7)
!9301 = distinct !DILexicalBlock(scope: !9302, file: !1784, line: 209, column: 41)
!9302 = distinct !DILexicalBlock(scope: !9295, file: !1784, line: 209, column: 2)
!9303 = !DILocation(line: 0, scope: !9276)
!9304 = !DILocation(line: 0, scope: !9295)
!9305 = !DILocation(line: 209, column: 25, scope: !9302)
!9306 = !DILocation(line: 209, column: 2, scope: !9295)
!9307 = distinct !{!9307, !9306, !9308}
!9308 = !DILocation(line: 259, column: 2, scope: !9295)
!9309 = !DILocation(line: 210, column: 17, scope: !9301)
!9310 = !DILocation(line: 234, column: 7, scope: !9300)
!9311 = !DILocation(line: 234, column: 33, scope: !9300)
!9312 = !DILocation(line: 234, column: 7, scope: !9301)
!9313 = !DILocation(line: 235, column: 22, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9300, file: !1784, line: 234, column: 49)
!9315 = !DILocation(line: 235, column: 29, scope: !9314)
!9316 = !DILocation(line: 236, column: 3, scope: !9314)
!9317 = !DILocation(line: 236, column: 14, scope: !9300)
!9318 = !DILocation(line: 239, column: 32, scope: !9297)
!9319 = !DILocation(line: 0, scope: !9297)
!9320 = !DILocation(line: 241, column: 8, scope: !9297)
!9321 = !DILocation(line: 246, column: 3, scope: !9297)
!9322 = !DILocation(line: 252, column: 9, scope: !9301)
!9323 = !DILocation(line: 255, column: 9, scope: !9301)
!9324 = !DILocation(line: 256, column: 11, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9301, file: !1784, line: 256, column: 7)
!9326 = !DILocation(line: 209, column: 37, scope: !9302)
!9327 = !DILocation(line: 256, column: 7, scope: !9301)
!9328 = !DILocation(line: 262, column: 1, scope: !9276)
!9329 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1784, file: !1784, line: 176, type: !9330, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !9332)
!9330 = !DISubroutineType(types: !9331)
!9331 = !{!109, !110, !110, !110}
!9332 = !{!9333, !9334, !9335, !9336}
!9333 = !DILocalVariable(name: "pin", arg: 1, scope: !9329, file: !1784, line: 176, type: !110)
!9334 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !9329, file: !1784, line: 176, type: !110)
!9335 = !DILocalVariable(name: "pin_func", arg: 3, scope: !9329, file: !1784, line: 176, type: !110)
!9336 = !DILocalVariable(name: "port_device", scope: !9329, file: !1784, line: 178, type: !1714)
!9337 = !DILocation(line: 0, scope: !9329)
!9338 = !DILocation(line: 180, column: 22, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9329, file: !1784, line: 180, column: 6)
!9340 = !DILocation(line: 180, column: 6, scope: !9329)
!9341 = !DILocation(line: 180, column: 6, scope: !9339)
!9342 = !DILocation(line: 184, column: 16, scope: !9329)
!9343 = !DILocation(line: 186, column: 19, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9329, file: !1784, line: 186, column: 6)
!9345 = !DILocation(line: 186, column: 28, scope: !9344)
!9346 = !DILocation(line: 186, column: 33, scope: !9344)
!9347 = !DILocation(line: 186, column: 6, scope: !9329)
!9348 = !DILocation(line: 190, column: 43, scope: !9329)
!9349 = !DILocation(line: 190, column: 9, scope: !9329)
!9350 = !DILocation(line: 190, column: 2, scope: !9329)
!9351 = !DILocation(line: 191, column: 1, scope: !9329)
!9352 = distinct !DISubprogram(name: "device_is_ready", scope: !7341, file: !7341, line: 47, type: !9353, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !9355)
!9353 = !DISubroutineType(types: !9354)
!9354 = !{!315, !1714}
!9355 = !{!9356}
!9356 = !DILocalVariable(name: "dev", arg: 1, scope: !9352, file: !7341, line: 47, type: !1714)
!9357 = !DILocation(line: 0, scope: !9352)
!9358 = !DILocation(line: 55, column: 2, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9352, file: !7341, line: 55, column: 2)
!9360 = !{i64 2149513001}
!9361 = !DILocation(line: 56, column: 9, scope: !9352)
!9362 = !DILocation(line: 56, column: 2, scope: !9352)
!9363 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !302, file: !302, line: 730, type: !9353, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1702, retainedNodes: !9364)
!9364 = !{!9365}
!9365 = !DILocalVariable(name: "dev", arg: 1, scope: !9363, file: !302, line: 730, type: !1714)
!9366 = !DILocation(line: 0, scope: !9363)
!9367 = !DILocation(line: 732, column: 9, scope: !9363)
!9368 = !DILocation(line: 732, column: 2, scope: !9363)
!9369 = distinct !DISubprogram(name: "SystemInit", scope: !1836, file: !1836, line: 167, type: !2980, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1792, retainedNodes: !251)
!9370 = !DILocation(line: 182, column: 1, scope: !9369)
!9371 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1836, file: !1836, line: 220, type: !2980, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1792, retainedNodes: !9372)
!9372 = !{!9373, !9374, !9375, !9376, !9377}
!9373 = !DILocalVariable(name: "tmp", scope: !9371, file: !1836, line: 222, type: !110)
!9374 = !DILocalVariable(name: "pllvco", scope: !9371, file: !1836, line: 222, type: !110)
!9375 = !DILocalVariable(name: "pllp", scope: !9371, file: !1836, line: 222, type: !110)
!9376 = !DILocalVariable(name: "pllsource", scope: !9371, file: !1836, line: 222, type: !110)
!9377 = !DILocalVariable(name: "pllm", scope: !9371, file: !1836, line: 222, type: !110)
!9378 = !DILocation(line: 0, scope: !9371)
!9379 = !DILocation(line: 225, column: 14, scope: !9371)
!9380 = !DILocation(line: 225, column: 19, scope: !9371)
!9381 = !DILocation(line: 227, column: 3, scope: !9371)
!9382 = !DILocation(line: 240, column: 25, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9371, file: !1836, line: 228, column: 3)
!9384 = !DILocation(line: 241, column: 19, scope: !9383)
!9385 = !DILocation(line: 241, column: 27, scope: !9383)
!9386 = !DILocation(line: 0, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9383, file: !1836, line: 243, column: 11)
!9388 = !DILocation(line: 254, column: 22, scope: !9383)
!9389 = !DILocation(line: 254, column: 62, scope: !9383)
!9390 = !DILocation(line: 255, column: 31, scope: !9383)
!9391 = !DILocation(line: 256, column: 7, scope: !9383)
!9392 = !DILocation(line: 0, scope: !9383)
!9393 = !DILocation(line: 263, column: 30, scope: !9371)
!9394 = !DILocation(line: 263, column: 52, scope: !9371)
!9395 = !DILocation(line: 263, column: 9, scope: !9371)
!9396 = !DILocation(line: 265, column: 19, scope: !9371)
!9397 = !DILocation(line: 266, column: 1, scope: !9371)
!9398 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !9399, file: !9399, line: 87, type: !9400, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9439)
!9399 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9400 = !DISubroutineType(types: !9401)
!9401 = !{!9402, !9403}
!9402 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2814, line: 44, baseType: !2813)
!9403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9404, size: 32)
!9404 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !9405, line: 172, baseType: !9406)
!9405 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9405, line: 121, size: 736, elements: !9407)
!9407 = !{!9408, !9409, !9418, !9426, !9427, !9428, !9429, !9430, !9431, !9432, !9433, !9434, !9435, !9436, !9437, !9438}
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !9406, file: !9405, line: 123, baseType: !110, size: 32)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !9406, file: !9405, line: 126, baseType: !9410, size: 160, offset: 32)
!9410 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !9405, line: 97, baseType: !9411)
!9411 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9405, line: 79, size: 160, elements: !9412)
!9412 = !{!9413, !9414, !9415, !9416, !9417}
!9413 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !9411, file: !9405, line: 81, baseType: !110, size: 32)
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !9411, file: !9405, line: 84, baseType: !110, size: 32, offset: 32)
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !9411, file: !9405, line: 87, baseType: !110, size: 32, offset: 64)
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !9411, file: !9405, line: 90, baseType: !110, size: 32, offset: 96)
!9417 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !9411, file: !9405, line: 94, baseType: !110, size: 32, offset: 128)
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !9406, file: !9405, line: 129, baseType: !9419, size: 128, offset: 192)
!9419 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !9405, line: 116, baseType: !9420)
!9420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9405, line: 102, size: 128, elements: !9421)
!9421 = !{!9422, !9423, !9424, !9425}
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !9420, file: !9405, line: 104, baseType: !110, size: 32)
!9423 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !9420, file: !9405, line: 107, baseType: !110, size: 32, offset: 32)
!9424 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !9420, file: !9405, line: 110, baseType: !110, size: 32, offset: 64)
!9425 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !9420, file: !9405, line: 113, baseType: !110, size: 32, offset: 96)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !9406, file: !9405, line: 132, baseType: !110, size: 32, offset: 320)
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !9406, file: !9405, line: 136, baseType: !110, size: 32, offset: 352)
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !9406, file: !9405, line: 140, baseType: !110, size: 32, offset: 384)
!9429 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !9406, file: !9405, line: 143, baseType: !110, size: 32, offset: 416)
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !9406, file: !9405, line: 146, baseType: !110, size: 32, offset: 448)
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !9406, file: !9405, line: 149, baseType: !110, size: 32, offset: 480)
!9432 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !9406, file: !9405, line: 152, baseType: !110, size: 32, offset: 512)
!9433 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !9406, file: !9405, line: 155, baseType: !110, size: 32, offset: 544)
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !9406, file: !9405, line: 158, baseType: !110, size: 32, offset: 576)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !9406, file: !9405, line: 161, baseType: !110, size: 32, offset: 608)
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !9406, file: !9405, line: 164, baseType: !110, size: 32, offset: 640)
!9437 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !9406, file: !9405, line: 167, baseType: !110, size: 32, offset: 672)
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !9406, file: !9405, line: 170, baseType: !178, size: 8, offset: 704)
!9439 = !{!9440, !9441, !9442, !9443, !9444, !9445, !9446, !9447, !9448, !9449, !9450}
!9440 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9398, file: !9399, line: 87, type: !9403)
!9441 = !DILocalVariable(name: "tickstart", scope: !9398, file: !9399, line: 89, type: !110)
!9442 = !DILocalVariable(name: "tmpreg1", scope: !9398, file: !9399, line: 90, type: !110)
!9443 = !DILocalVariable(name: "plli2sp", scope: !9398, file: !9399, line: 91, type: !110)
!9444 = !DILocalVariable(name: "plli2sq", scope: !9398, file: !9399, line: 92, type: !110)
!9445 = !DILocalVariable(name: "plli2sr", scope: !9398, file: !9399, line: 93, type: !110)
!9446 = !DILocalVariable(name: "pllsaip", scope: !9398, file: !9399, line: 94, type: !110)
!9447 = !DILocalVariable(name: "pllsaiq", scope: !9398, file: !9399, line: 95, type: !110)
!9448 = !DILocalVariable(name: "plli2sused", scope: !9398, file: !9399, line: 96, type: !110)
!9449 = !DILocalVariable(name: "pllsaiused", scope: !9398, file: !9399, line: 97, type: !110)
!9450 = !DILocalVariable(name: "tmpreg", scope: !9451, file: !9399, line: 184, type: !282)
!9451 = distinct !DILexicalBlock(scope: !9452, file: !9399, line: 184, column: 5)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !9399, line: 179, column: 3)
!9453 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 178, column: 6)
!9454 = !DILocation(line: 0, scope: !9398)
!9455 = !DILocation(line: 103, column: 23, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 103, column: 6)
!9457 = !DILocation(line: 103, column: 45, scope: !9456)
!9458 = !DILocation(line: 103, column: 71, scope: !9456)
!9459 = !DILocation(line: 103, column: 6, scope: !9398)
!9460 = !DILocation(line: 109, column: 5, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9456, file: !9399, line: 104, column: 3)
!9462 = !DILocation(line: 111, column: 23, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9461, file: !9399, line: 111, column: 8)
!9464 = !DILocation(line: 111, column: 45, scope: !9463)
!9465 = !DILocation(line: 111, column: 8, scope: !9461)
!9466 = !DILocation(line: 119, column: 23, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 119, column: 6)
!9468 = !DILocation(line: 119, column: 45, scope: !9467)
!9469 = !DILocation(line: 119, column: 71, scope: !9467)
!9470 = !DILocation(line: 119, column: 6, scope: !9398)
!9471 = !DILocation(line: 125, column: 5, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9467, file: !9399, line: 120, column: 3)
!9473 = !DILocation(line: 127, column: 23, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9472, file: !9399, line: 127, column: 8)
!9475 = !DILocation(line: 127, column: 45, scope: !9474)
!9476 = !DILocation(line: 127, column: 8, scope: !9472)
!9477 = !DILocation(line: 135, column: 23, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 135, column: 6)
!9479 = !DILocation(line: 135, column: 45, scope: !9478)
!9480 = !DILocation(line: 135, column: 67, scope: !9478)
!9481 = !DILocation(line: 135, column: 6, scope: !9398)
!9482 = !DILocation(line: 141, column: 5, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9478, file: !9399, line: 136, column: 3)
!9484 = !DILocation(line: 143, column: 23, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9483, file: !9399, line: 143, column: 8)
!9486 = !DILocation(line: 143, column: 42, scope: !9485)
!9487 = !DILocation(line: 143, column: 8, scope: !9483)
!9488 = !DILocation(line: 148, column: 42, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9483, file: !9399, line: 148, column: 8)
!9490 = !DILocation(line: 148, column: 8, scope: !9483)
!9491 = !DILocation(line: 156, column: 23, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 156, column: 6)
!9493 = !DILocation(line: 156, column: 45, scope: !9492)
!9494 = !DILocation(line: 156, column: 67, scope: !9492)
!9495 = !DILocation(line: 156, column: 6, scope: !9398)
!9496 = !DILocation(line: 162, column: 5, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9492, file: !9399, line: 157, column: 3)
!9498 = !DILocation(line: 165, column: 23, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9497, file: !9399, line: 165, column: 8)
!9500 = !DILocation(line: 165, column: 42, scope: !9499)
!9501 = !DILocation(line: 165, column: 8, scope: !9497)
!9502 = !DILocation(line: 170, column: 42, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9497, file: !9399, line: 170, column: 8)
!9504 = !DILocation(line: 170, column: 8, scope: !9497)
!9505 = !DILocation(line: 178, column: 23, scope: !9453)
!9506 = !DILocation(line: 178, column: 45, scope: !9453)
!9507 = !DILocation(line: 178, column: 66, scope: !9453)
!9508 = !DILocation(line: 178, column: 6, scope: !9398)
!9509 = !DILocation(line: 184, column: 5, scope: !9451)
!9510 = !DILocation(line: 184, column: 5, scope: !9452)
!9511 = !DILocation(line: 187, column: 13, scope: !9452)
!9512 = !DILocation(line: 190, column: 17, scope: !9452)
!9513 = !DILocation(line: 192, column: 5, scope: !9452)
!9514 = !DILocation(line: 192, column: 17, scope: !9452)
!9515 = !DILocation(line: 192, column: 20, scope: !9452)
!9516 = !DILocation(line: 192, column: 34, scope: !9452)
!9517 = !DILocation(line: 194, column: 11, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9519, file: !9399, line: 194, column: 10)
!9519 = distinct !DILexicalBlock(scope: !9452, file: !9399, line: 193, column: 5)
!9520 = !DILocation(line: 194, column: 25, scope: !9518)
!9521 = !DILocation(line: 194, column: 39, scope: !9518)
!9522 = !DILocation(line: 194, column: 10, scope: !9519)
!9523 = distinct !{!9523, !9513, !9524}
!9524 = !DILocation(line: 198, column: 5, scope: !9452)
!9525 = !DILocation(line: 200, column: 21, scope: !9452)
!9526 = !DILocation(line: 200, column: 26, scope: !9452)
!9527 = !DILocation(line: 201, column: 17, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9452, file: !9399, line: 201, column: 8)
!9529 = !DILocation(line: 201, column: 33, scope: !9528)
!9530 = !DILocation(line: 201, column: 66, scope: !9528)
!9531 = !DILocation(line: 201, column: 84, scope: !9528)
!9532 = !DILocation(line: 201, column: 47, scope: !9528)
!9533 = !DILocation(line: 201, column: 8, scope: !9452)
!9534 = !DILocation(line: 204, column: 23, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9528, file: !9399, line: 202, column: 5)
!9536 = !DILocation(line: 204, column: 28, scope: !9535)
!9537 = !DILocation(line: 206, column: 7, scope: !9535)
!9538 = !DILocation(line: 207, column: 7, scope: !9535)
!9539 = !DILocation(line: 209, column: 17, scope: !9535)
!9540 = !DILocation(line: 212, column: 10, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9535, file: !9399, line: 212, column: 10)
!9542 = !DILocation(line: 212, column: 10, scope: !9535)
!9543 = !DILocation(line: 215, column: 21, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9541, file: !9399, line: 213, column: 7)
!9545 = !DILocation(line: 218, column: 9, scope: !9544)
!9546 = !DILocation(line: 218, column: 15, scope: !9544)
!9547 = !DILocation(line: 218, column: 51, scope: !9544)
!9548 = !DILocation(line: 220, column: 15, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9550, file: !9399, line: 220, column: 14)
!9550 = distinct !DILexicalBlock(scope: !9544, file: !9399, line: 219, column: 9)
!9551 = !DILocation(line: 220, column: 29, scope: !9549)
!9552 = !DILocation(line: 220, column: 43, scope: !9549)
!9553 = !DILocation(line: 220, column: 14, scope: !9550)
!9554 = distinct !{!9554, !9545, !9555}
!9555 = !DILocation(line: 224, column: 9, scope: !9544)
!9556 = !DILocation(line: 227, column: 5, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9452, file: !9399, line: 227, column: 5)
!9558 = !DILocation(line: 232, column: 23, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 232, column: 6)
!9560 = !DILocation(line: 228, column: 3, scope: !9452)
!9561 = !DILocation(line: 232, column: 45, scope: !9559)
!9562 = !DILocation(line: 232, column: 66, scope: !9559)
!9563 = !DILocation(line: 232, column: 6, scope: !9398)
!9564 = !DILocation(line: 235, column: 5, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9559, file: !9399, line: 233, column: 3)
!9566 = !DILocation(line: 240, column: 23, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 240, column: 6)
!9568 = !DILocation(line: 236, column: 3, scope: !9565)
!9569 = !DILocation(line: 240, column: 45, scope: !9567)
!9570 = !DILocation(line: 240, column: 70, scope: !9567)
!9571 = !DILocation(line: 240, column: 6, scope: !9398)
!9572 = !DILocation(line: 246, column: 5, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9567, file: !9399, line: 241, column: 3)
!9574 = !DILocation(line: 251, column: 23, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 251, column: 6)
!9576 = !DILocation(line: 247, column: 3, scope: !9573)
!9577 = !DILocation(line: 251, column: 45, scope: !9575)
!9578 = !DILocation(line: 251, column: 66, scope: !9575)
!9579 = !DILocation(line: 251, column: 6, scope: !9398)
!9580 = !DILocation(line: 257, column: 5, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9575, file: !9399, line: 252, column: 3)
!9582 = !DILocation(line: 262, column: 23, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 262, column: 6)
!9584 = !DILocation(line: 258, column: 3, scope: !9581)
!9585 = !DILocation(line: 262, column: 45, scope: !9583)
!9586 = !DILocation(line: 262, column: 68, scope: !9583)
!9587 = !DILocation(line: 262, column: 6, scope: !9398)
!9588 = !DILocation(line: 268, column: 5, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9583, file: !9399, line: 263, column: 3)
!9590 = !DILocation(line: 271, column: 23, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9589, file: !9399, line: 271, column: 8)
!9592 = !DILocation(line: 271, column: 43, scope: !9591)
!9593 = !DILocation(line: 271, column: 8, scope: !9589)
!9594 = !DILocation(line: 279, column: 23, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 279, column: 6)
!9596 = !DILocation(line: 279, column: 45, scope: !9595)
!9597 = !DILocation(line: 279, column: 67, scope: !9595)
!9598 = !DILocation(line: 279, column: 6, scope: !9398)
!9599 = !DILocation(line: 285, column: 5, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9595, file: !9399, line: 280, column: 3)
!9601 = !DILocation(line: 290, column: 23, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 290, column: 6)
!9603 = !DILocation(line: 286, column: 3, scope: !9600)
!9604 = !DILocation(line: 290, column: 45, scope: !9602)
!9605 = !DILocation(line: 290, column: 70, scope: !9602)
!9606 = !DILocation(line: 290, column: 6, scope: !9398)
!9607 = !DILocation(line: 296, column: 5, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9602, file: !9399, line: 291, column: 3)
!9609 = !DILocation(line: 298, column: 23, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9608, file: !9399, line: 298, column: 8)
!9611 = !DILocation(line: 298, column: 43, scope: !9610)
!9612 = !DILocation(line: 298, column: 8, scope: !9608)
!9613 = !DILocation(line: 308, column: 44, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 308, column: 6)
!9615 = !DILocation(line: 308, column: 18, scope: !9614)
!9616 = !DILocation(line: 308, column: 25, scope: !9614)
!9617 = !DILocation(line: 308, column: 65, scope: !9614)
!9618 = !DILocation(line: 308, column: 6, scope: !9398)
!9619 = !DILocation(line: 311, column: 5, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9614, file: !9399, line: 309, column: 3)
!9621 = !DILocation(line: 313, column: 17, scope: !9620)
!9622 = !DILocation(line: 315, column: 5, scope: !9620)
!9623 = !DILocation(line: 315, column: 11, scope: !9620)
!9624 = !DILocation(line: 317, column: 11, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9626, file: !9399, line: 317, column: 10)
!9626 = distinct !DILexicalBlock(scope: !9620, file: !9399, line: 316, column: 5)
!9627 = !DILocation(line: 317, column: 25, scope: !9625)
!9628 = !DILocation(line: 317, column: 39, scope: !9625)
!9629 = !DILocation(line: 317, column: 10, scope: !9626)
!9630 = distinct !{!9630, !9622, !9631}
!9631 = !DILocation(line: 322, column: 5, scope: !9620)
!9632 = !DILocation(line: 329, column: 27, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9620, file: !9399, line: 329, column: 8)
!9634 = !DILocation(line: 329, column: 49, scope: !9633)
!9635 = !DILocation(line: 329, column: 75, scope: !9633)
!9636 = !DILocation(line: 329, column: 102, scope: !9633)
!9637 = !DILocation(line: 329, column: 121, scope: !9633)
!9638 = !DILocation(line: 329, column: 143, scope: !9633)
!9639 = !DILocation(line: 329, column: 176, scope: !9633)
!9640 = !DILocation(line: 330, column: 49, scope: !9633)
!9641 = !DILocation(line: 330, column: 75, scope: !9633)
!9642 = !DILocation(line: 330, column: 102, scope: !9633)
!9643 = !DILocation(line: 330, column: 121, scope: !9633)
!9644 = !DILocation(line: 330, column: 143, scope: !9633)
!9645 = !DILocation(line: 329, column: 8, scope: !9620)
!9646 = !DILocation(line: 336, column: 26, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9633, file: !9399, line: 331, column: 5)
!9648 = !DILocation(line: 336, column: 100, scope: !9647)
!9649 = !DILocation(line: 337, column: 24, scope: !9647)
!9650 = !DILocation(line: 337, column: 61, scope: !9647)
!9651 = !DILocation(line: 341, column: 7, scope: !9647)
!9652 = !DILocation(line: 345, column: 27, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9620, file: !9399, line: 345, column: 8)
!9654 = !DILocation(line: 342, column: 5, scope: !9647)
!9655 = !DILocation(line: 345, column: 49, scope: !9653)
!9656 = !DILocation(line: 345, column: 71, scope: !9653)
!9657 = !DILocation(line: 345, column: 94, scope: !9653)
!9658 = !DILocation(line: 345, column: 113, scope: !9653)
!9659 = !DILocation(line: 345, column: 132, scope: !9653)
!9660 = !DILocation(line: 345, column: 162, scope: !9653)
!9661 = !DILocation(line: 346, column: 49, scope: !9653)
!9662 = !DILocation(line: 346, column: 71, scope: !9653)
!9663 = !DILocation(line: 346, column: 94, scope: !9653)
!9664 = !DILocation(line: 346, column: 113, scope: !9653)
!9665 = !DILocation(line: 346, column: 132, scope: !9653)
!9666 = !DILocation(line: 345, column: 8, scope: !9620)
!9667 = !DILocation(line: 354, column: 26, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9653, file: !9399, line: 347, column: 5)
!9669 = !DILocation(line: 354, column: 100, scope: !9668)
!9670 = !DILocation(line: 355, column: 24, scope: !9668)
!9671 = !DILocation(line: 355, column: 61, scope: !9668)
!9672 = !DILocation(line: 360, column: 7, scope: !9668)
!9673 = !DILocation(line: 363, column: 7, scope: !9668)
!9674 = !DILocation(line: 367, column: 26, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9620, file: !9399, line: 367, column: 8)
!9676 = !DILocation(line: 364, column: 5, scope: !9668)
!9677 = !DILocation(line: 367, column: 48, scope: !9675)
!9678 = !DILocation(line: 367, column: 73, scope: !9675)
!9679 = !DILocation(line: 367, column: 99, scope: !9675)
!9680 = !DILocation(line: 367, column: 118, scope: !9675)
!9681 = !DILocation(line: 367, column: 138, scope: !9675)
!9682 = !DILocation(line: 367, column: 8, scope: !9620)
!9683 = !DILocation(line: 372, column: 26, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9675, file: !9399, line: 368, column: 5)
!9685 = !DILocation(line: 373, column: 24, scope: !9684)
!9686 = !DILocation(line: 373, column: 61, scope: !9684)
!9687 = !DILocation(line: 377, column: 7, scope: !9684)
!9688 = !DILocation(line: 381, column: 24, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9620, file: !9399, line: 381, column: 8)
!9690 = !DILocation(line: 378, column: 5, scope: !9684)
!9691 = !DILocation(line: 381, column: 45, scope: !9689)
!9692 = !DILocation(line: 381, column: 69, scope: !9689)
!9693 = !DILocation(line: 381, column: 8, scope: !9620)
!9694 = !DILocation(line: 390, column: 7, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9689, file: !9399, line: 382, column: 5)
!9696 = !DILocation(line: 391, column: 5, scope: !9695)
!9697 = !DILocation(line: 394, column: 5, scope: !9620)
!9698 = !DILocation(line: 396, column: 17, scope: !9620)
!9699 = !DILocation(line: 398, column: 5, scope: !9620)
!9700 = !DILocation(line: 398, column: 11, scope: !9620)
!9701 = !DILocation(line: 398, column: 51, scope: !9620)
!9702 = !DILocation(line: 400, column: 11, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9704, file: !9399, line: 400, column: 10)
!9704 = distinct !DILexicalBlock(scope: !9620, file: !9399, line: 399, column: 5)
!9705 = !DILocation(line: 400, column: 25, scope: !9703)
!9706 = !DILocation(line: 400, column: 39, scope: !9703)
!9707 = !DILocation(line: 400, column: 10, scope: !9704)
!9708 = distinct !{!9708, !9699, !9709}
!9709 = !DILocation(line: 405, column: 5, scope: !9620)
!9710 = !DILocation(line: 411, column: 17, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9398, file: !9399, line: 411, column: 6)
!9712 = !DILocation(line: 411, column: 6, scope: !9398)
!9713 = !DILocation(line: 414, column: 5, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9711, file: !9399, line: 412, column: 3)
!9715 = !DILocation(line: 416, column: 17, scope: !9714)
!9716 = !DILocation(line: 418, column: 5, scope: !9714)
!9717 = !DILocation(line: 418, column: 11, scope: !9714)
!9718 = !DILocation(line: 420, column: 11, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9720, file: !9399, line: 420, column: 10)
!9720 = distinct !DILexicalBlock(scope: !9714, file: !9399, line: 419, column: 5)
!9721 = !DILocation(line: 420, column: 25, scope: !9719)
!9722 = !DILocation(line: 420, column: 39, scope: !9719)
!9723 = !DILocation(line: 420, column: 10, scope: !9720)
!9724 = distinct !{!9724, !9716, !9725}
!9725 = !DILocation(line: 425, column: 5, scope: !9714)
!9726 = !DILocation(line: 432, column: 27, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9714, file: !9399, line: 432, column: 8)
!9728 = !DILocation(line: 432, column: 49, scope: !9727)
!9729 = !DILocation(line: 432, column: 71, scope: !9727)
!9730 = !DILocation(line: 432, column: 94, scope: !9727)
!9731 = !DILocation(line: 432, column: 113, scope: !9727)
!9732 = !DILocation(line: 432, column: 132, scope: !9727)
!9733 = !DILocation(line: 432, column: 162, scope: !9727)
!9734 = !DILocation(line: 433, column: 49, scope: !9727)
!9735 = !DILocation(line: 433, column: 71, scope: !9727)
!9736 = !DILocation(line: 433, column: 94, scope: !9727)
!9737 = !DILocation(line: 433, column: 113, scope: !9727)
!9738 = !DILocation(line: 433, column: 132, scope: !9727)
!9739 = !DILocation(line: 432, column: 8, scope: !9714)
!9740 = !DILocation(line: 441, column: 26, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9727, file: !9399, line: 434, column: 5)
!9742 = !DILocation(line: 441, column: 100, scope: !9741)
!9743 = !DILocation(line: 445, column: 7, scope: !9741)
!9744 = !DILocation(line: 448, column: 7, scope: !9741)
!9745 = !DILocation(line: 453, column: 26, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9714, file: !9399, line: 453, column: 8)
!9747 = !DILocation(line: 449, column: 5, scope: !9741)
!9748 = !DILocation(line: 453, column: 48, scope: !9746)
!9749 = !DILocation(line: 453, column: 71, scope: !9746)
!9750 = !DILocation(line: 453, column: 95, scope: !9746)
!9751 = !DILocation(line: 453, column: 114, scope: !9746)
!9752 = !DILocation(line: 453, column: 134, scope: !9746)
!9753 = !DILocation(line: 453, column: 8, scope: !9714)
!9754 = !DILocation(line: 458, column: 24, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9746, file: !9399, line: 454, column: 5)
!9756 = !DILocation(line: 458, column: 61, scope: !9755)
!9757 = !DILocation(line: 462, column: 7, scope: !9755)
!9758 = !DILocation(line: 463, column: 5, scope: !9755)
!9759 = !DILocation(line: 466, column: 5, scope: !9714)
!9760 = !DILocation(line: 468, column: 17, scope: !9714)
!9761 = !DILocation(line: 470, column: 5, scope: !9714)
!9762 = !DILocation(line: 470, column: 11, scope: !9714)
!9763 = !DILocation(line: 470, column: 39, scope: !9714)
!9764 = !DILocation(line: 472, column: 11, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !9399, line: 472, column: 10)
!9766 = distinct !DILexicalBlock(scope: !9714, file: !9399, line: 471, column: 5)
!9767 = !DILocation(line: 472, column: 25, scope: !9765)
!9768 = !DILocation(line: 472, column: 39, scope: !9765)
!9769 = !DILocation(line: 472, column: 10, scope: !9766)
!9770 = distinct !{!9770, !9761, !9771}
!9771 = !DILocation(line: 477, column: 5, scope: !9714)
!9772 = !DILocation(line: 480, column: 1, scope: !9398)
!9773 = !DISubprogram(name: "HAL_GetTick", scope: !9774, file: !9774, line: 234, type: !5210, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!9774 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9775 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !9399, file: !9399, line: 489, type: !9776, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9778)
!9776 = !DISubroutineType(types: !9777)
!9777 = !{null, !9403}
!9778 = !{!9779, !9780}
!9779 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9775, file: !9399, line: 489, type: !9403)
!9780 = !DILocalVariable(name: "tempreg", scope: !9775, file: !9399, line: 491, type: !110)
!9781 = !DILocation(line: 0, scope: !9775)
!9782 = !DILocation(line: 494, column: 18, scope: !9775)
!9783 = !DILocation(line: 494, column: 39, scope: !9775)
!9784 = !DILocation(line: 502, column: 52, scope: !9775)
!9785 = !DILocation(line: 502, column: 63, scope: !9775)
!9786 = !DILocation(line: 502, column: 25, scope: !9775)
!9787 = !DILocation(line: 502, column: 33, scope: !9775)
!9788 = !DILocation(line: 503, column: 52, scope: !9775)
!9789 = !DILocation(line: 503, column: 89, scope: !9775)
!9790 = !DILocation(line: 503, column: 25, scope: !9775)
!9791 = !DILocation(line: 503, column: 33, scope: !9775)
!9792 = !DILocation(line: 504, column: 54, scope: !9775)
!9793 = !DILocation(line: 504, column: 128, scope: !9775)
!9794 = !DILocation(line: 504, column: 25, scope: !9775)
!9795 = !DILocation(line: 504, column: 33, scope: !9775)
!9796 = !DILocation(line: 505, column: 52, scope: !9775)
!9797 = !DILocation(line: 505, column: 89, scope: !9775)
!9798 = !DILocation(line: 505, column: 25, scope: !9775)
!9799 = !DILocation(line: 505, column: 33, scope: !9775)
!9800 = !DILocation(line: 506, column: 52, scope: !9775)
!9801 = !DILocation(line: 506, column: 89, scope: !9775)
!9802 = !DILocation(line: 506, column: 25, scope: !9775)
!9803 = !DILocation(line: 506, column: 33, scope: !9775)
!9804 = !DILocation(line: 508, column: 52, scope: !9775)
!9805 = !DILocation(line: 508, column: 63, scope: !9775)
!9806 = !DILocation(line: 508, column: 25, scope: !9775)
!9807 = !DILocation(line: 508, column: 33, scope: !9775)
!9808 = !DILocation(line: 509, column: 52, scope: !9775)
!9809 = !DILocation(line: 509, column: 89, scope: !9775)
!9810 = !DILocation(line: 509, column: 25, scope: !9775)
!9811 = !DILocation(line: 509, column: 33, scope: !9775)
!9812 = !DILocation(line: 510, column: 54, scope: !9775)
!9813 = !DILocation(line: 510, column: 128, scope: !9775)
!9814 = !DILocation(line: 510, column: 25, scope: !9775)
!9815 = !DILocation(line: 510, column: 33, scope: !9775)
!9816 = !DILocation(line: 511, column: 52, scope: !9775)
!9817 = !DILocation(line: 511, column: 89, scope: !9775)
!9818 = !DILocation(line: 511, column: 25, scope: !9775)
!9819 = !DILocation(line: 511, column: 33, scope: !9775)
!9820 = !DILocation(line: 513, column: 48, scope: !9775)
!9821 = !DILocation(line: 513, column: 56, scope: !9775)
!9822 = !DILocation(line: 513, column: 18, scope: !9775)
!9823 = !DILocation(line: 513, column: 29, scope: !9775)
!9824 = !DILocation(line: 514, column: 48, scope: !9775)
!9825 = !DILocation(line: 514, column: 82, scope: !9775)
!9826 = !DILocation(line: 514, column: 18, scope: !9775)
!9827 = !DILocation(line: 514, column: 29, scope: !9775)
!9828 = !DILocation(line: 517, column: 39, scope: !9775)
!9829 = !DILocation(line: 517, column: 18, scope: !9775)
!9830 = !DILocation(line: 517, column: 37, scope: !9775)
!9831 = !DILocation(line: 520, column: 39, scope: !9775)
!9832 = !DILocation(line: 520, column: 18, scope: !9775)
!9833 = !DILocation(line: 520, column: 37, scope: !9775)
!9834 = !DILocation(line: 523, column: 42, scope: !9775)
!9835 = !DILocation(line: 523, column: 18, scope: !9775)
!9836 = !DILocation(line: 523, column: 40, scope: !9775)
!9837 = !DILocation(line: 526, column: 42, scope: !9775)
!9838 = !DILocation(line: 526, column: 18, scope: !9775)
!9839 = !DILocation(line: 526, column: 40, scope: !9775)
!9840 = !DILocation(line: 529, column: 19, scope: !9775)
!9841 = !DILocation(line: 529, column: 24, scope: !9775)
!9842 = !DILocation(line: 530, column: 67, scope: !9775)
!9843 = !DILocation(line: 530, column: 72, scope: !9775)
!9844 = !DILocation(line: 530, column: 59, scope: !9775)
!9845 = !DILocation(line: 530, column: 18, scope: !9775)
!9846 = !DILocation(line: 530, column: 36, scope: !9775)
!9847 = !DILocation(line: 533, column: 38, scope: !9775)
!9848 = !DILocation(line: 533, column: 18, scope: !9775)
!9849 = !DILocation(line: 533, column: 36, scope: !9775)
!9850 = !DILocation(line: 536, column: 42, scope: !9775)
!9851 = !DILocation(line: 536, column: 18, scope: !9775)
!9852 = !DILocation(line: 536, column: 40, scope: !9775)
!9853 = !DILocation(line: 539, column: 40, scope: !9775)
!9854 = !DILocation(line: 539, column: 18, scope: !9775)
!9855 = !DILocation(line: 539, column: 38, scope: !9775)
!9856 = !DILocation(line: 542, column: 39, scope: !9775)
!9857 = !DILocation(line: 542, column: 18, scope: !9775)
!9858 = !DILocation(line: 542, column: 37, scope: !9775)
!9859 = !DILocation(line: 545, column: 40, scope: !9775)
!9860 = !DILocation(line: 545, column: 18, scope: !9775)
!9861 = !DILocation(line: 545, column: 38, scope: !9775)
!9862 = !DILocation(line: 548, column: 13, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9775, file: !9399, line: 548, column: 7)
!9864 = !DILocation(line: 548, column: 7, scope: !9775)
!9865 = !DILocation(line: 550, column: 20, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9863, file: !9399, line: 549, column: 3)
!9867 = !DILocation(line: 550, column: 37, scope: !9866)
!9868 = !DILocation(line: 556, column: 1, scope: !9775)
!9869 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !9399, file: !9399, line: 569, type: !6139, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9870)
!9870 = !{!9871, !9872, !9873, !9874, !9875, !9876, !9877}
!9871 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !9869, file: !9399, line: 569, type: !110)
!9872 = !DILocalVariable(name: "tmpreg1", scope: !9869, file: !9399, line: 571, type: !110)
!9873 = !DILocalVariable(name: "frequency", scope: !9869, file: !9399, line: 573, type: !110)
!9874 = !DILocalVariable(name: "vcoinput", scope: !9869, file: !9399, line: 575, type: !110)
!9875 = !DILocalVariable(name: "saiclocksource", scope: !9869, file: !9399, line: 577, type: !110)
!9876 = !DILocalVariable(name: "srcclk", scope: !9869, file: !9399, line: 578, type: !110)
!9877 = !DILocalVariable(name: "vcooutput", scope: !9869, file: !9399, line: 580, type: !110)
!9878 = !DILocation(line: 0, scope: !9869)
!9879 = !DILocation(line: 581, column: 3, scope: !9869)
!9880 = !DILocation(line: 586, column: 29, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9882, file: !9399, line: 585, column: 5)
!9882 = distinct !DILexicalBlock(scope: !9869, file: !9399, line: 582, column: 3)
!9883 = !DILocation(line: 588, column: 7, scope: !9881)
!9884 = !DILocation(line: 594, column: 20, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9886, file: !9399, line: 594, column: 14)
!9886 = distinct !DILexicalBlock(scope: !9887, file: !9399, line: 591, column: 9)
!9887 = distinct !DILexicalBlock(scope: !9881, file: !9399, line: 589, column: 7)
!9888 = !DILocation(line: 0, scope: !9885)
!9889 = !DILocation(line: 606, column: 27, scope: !9886)
!9890 = !DILocation(line: 606, column: 64, scope: !9886)
!9891 = !DILocation(line: 607, column: 42, scope: !9886)
!9892 = !DILocation(line: 607, column: 79, scope: !9886)
!9893 = !DILocation(line: 607, column: 33, scope: !9886)
!9894 = !DILocation(line: 607, column: 86, scope: !9886)
!9895 = !DILocation(line: 610, column: 29, scope: !9886)
!9896 = !DILocation(line: 610, column: 63, scope: !9886)
!9897 = !DILocation(line: 610, column: 70, scope: !9886)
!9898 = !DILocation(line: 611, column: 32, scope: !9886)
!9899 = !DILocation(line: 612, column: 11, scope: !9886)
!9900 = !DILocation(line: 619, column: 20, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9902, file: !9399, line: 619, column: 14)
!9902 = distinct !DILexicalBlock(scope: !9887, file: !9399, line: 616, column: 9)
!9903 = !DILocation(line: 0, scope: !9901)
!9904 = !DILocation(line: 632, column: 27, scope: !9902)
!9905 = !DILocation(line: 632, column: 64, scope: !9902)
!9906 = !DILocation(line: 633, column: 42, scope: !9902)
!9907 = !DILocation(line: 633, column: 79, scope: !9902)
!9908 = !DILocation(line: 633, column: 33, scope: !9902)
!9909 = !DILocation(line: 633, column: 86, scope: !9902)
!9910 = !DILocation(line: 636, column: 28, scope: !9902)
!9911 = !DILocation(line: 636, column: 36, scope: !9902)
!9912 = !DILocation(line: 636, column: 62, scope: !9902)
!9913 = !DILocation(line: 637, column: 32, scope: !9902)
!9914 = !DILocation(line: 638, column: 11, scope: !9902)
!9915 = !DILocation(line: 645, column: 20, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9917, file: !9399, line: 645, column: 14)
!9917 = distinct !DILexicalBlock(scope: !9887, file: !9399, line: 642, column: 9)
!9918 = !DILocation(line: 0, scope: !9916)
!9919 = !DILocation(line: 658, column: 27, scope: !9917)
!9920 = !DILocation(line: 658, column: 55, scope: !9917)
!9921 = !DILocation(line: 659, column: 42, scope: !9917)
!9922 = !DILocation(line: 659, column: 70, scope: !9917)
!9923 = !DILocation(line: 659, column: 33, scope: !9917)
!9924 = !DILocation(line: 659, column: 77, scope: !9917)
!9925 = !DILocation(line: 660, column: 11, scope: !9917)
!9926 = !DILocation(line: 665, column: 11, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9887, file: !9399, line: 663, column: 9)
!9928 = !DILocation(line: 669, column: 20, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9930, file: !9399, line: 669, column: 14)
!9930 = distinct !DILexicalBlock(scope: !9887, file: !9399, line: 668, column: 9)
!9931 = !DILocation(line: 691, column: 16, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9882, file: !9399, line: 689, column: 5)
!9933 = !DILocation(line: 692, column: 7, scope: !9932)
!9934 = !DILocation(line: 706, column: 20, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9936, file: !9399, line: 706, column: 14)
!9936 = distinct !DILexicalBlock(scope: !9937, file: !9399, line: 703, column: 9)
!9937 = distinct !DILexicalBlock(scope: !9932, file: !9399, line: 693, column: 7)
!9938 = !DILocation(line: 0, scope: !9935)
!9939 = !DILocation(line: 718, column: 53, scope: !9936)
!9940 = !DILocation(line: 718, column: 90, scope: !9936)
!9941 = !DILocation(line: 718, column: 43, scope: !9936)
!9942 = !DILocation(line: 720, column: 53, scope: !9936)
!9943 = !DILocation(line: 720, column: 90, scope: !9936)
!9944 = !DILocation(line: 720, column: 44, scope: !9936)
!9945 = !DILocation(line: 721, column: 11, scope: !9936)
!9946 = !DILocation(line: 728, column: 20, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9948, file: !9399, line: 728, column: 14)
!9948 = distinct !DILexicalBlock(scope: !9937, file: !9399, line: 725, column: 9)
!9949 = !DILocation(line: 0, scope: !9947)
!9950 = !DILocation(line: 740, column: 53, scope: !9948)
!9951 = !DILocation(line: 740, column: 81, scope: !9948)
!9952 = !DILocation(line: 740, column: 43, scope: !9948)
!9953 = !DILocation(line: 742, column: 53, scope: !9948)
!9954 = !DILocation(line: 742, column: 81, scope: !9948)
!9955 = !DILocation(line: 742, column: 44, scope: !9948)
!9956 = !DILocation(line: 743, column: 11, scope: !9948)
!9957 = !DILocation(line: 748, column: 20, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9959, file: !9399, line: 748, column: 14)
!9959 = distinct !DILexicalBlock(scope: !9937, file: !9399, line: 747, column: 9)
!9960 = !DILocation(line: 770, column: 16, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9882, file: !9399, line: 768, column: 5)
!9962 = !DILocation(line: 771, column: 7, scope: !9961)
!9963 = !DILocation(line: 785, column: 20, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9965, file: !9399, line: 785, column: 14)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !9399, line: 782, column: 9)
!9966 = distinct !DILexicalBlock(scope: !9961, file: !9399, line: 772, column: 7)
!9967 = !DILocation(line: 0, scope: !9964)
!9968 = !DILocation(line: 797, column: 53, scope: !9965)
!9969 = !DILocation(line: 797, column: 90, scope: !9965)
!9970 = !DILocation(line: 797, column: 43, scope: !9965)
!9971 = !DILocation(line: 799, column: 53, scope: !9965)
!9972 = !DILocation(line: 799, column: 90, scope: !9965)
!9973 = !DILocation(line: 799, column: 44, scope: !9965)
!9974 = !DILocation(line: 800, column: 11, scope: !9965)
!9975 = !DILocation(line: 807, column: 20, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !9399, line: 807, column: 14)
!9977 = distinct !DILexicalBlock(scope: !9966, file: !9399, line: 804, column: 9)
!9978 = !DILocation(line: 0, scope: !9976)
!9979 = !DILocation(line: 819, column: 53, scope: !9977)
!9980 = !DILocation(line: 819, column: 81, scope: !9977)
!9981 = !DILocation(line: 819, column: 43, scope: !9977)
!9982 = !DILocation(line: 821, column: 53, scope: !9977)
!9983 = !DILocation(line: 821, column: 81, scope: !9977)
!9984 = !DILocation(line: 821, column: 44, scope: !9977)
!9985 = !DILocation(line: 822, column: 11, scope: !9977)
!9986 = !DILocation(line: 827, column: 20, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9988, file: !9399, line: 827, column: 14)
!9988 = distinct !DILexicalBlock(scope: !9966, file: !9399, line: 826, column: 9)
!9989 = !DILocation(line: 847, column: 3, scope: !9869)
!9990 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !9399, file: !9399, line: 2766, type: !9991, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9993)
!9991 = !DISubroutineType(types: !9992)
!9992 = !{null, !178}
!9993 = !{!9994}
!9994 = !DILocalVariable(name: "Mode", arg: 1, scope: !9990, file: !9399, line: 2766, type: !178)
!9995 = !DILocation(line: 0, scope: !9990)
!9996 = !DILocation(line: 2770, column: 11, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9990, file: !9399, line: 2770, column: 6)
!9998 = !DILocation(line: 0, scope: !9997)
!9999 = !DILocation(line: 2770, column: 6, scope: !9990)
!10000 = !DILocation(line: 2778, column: 1, scope: !9990)
!10001 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !9399, file: !9399, line: 2803, type: !10002, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10005)
!10002 = !DISubroutineType(types: !10003)
!10003 = !{!9402, !10004}
!10004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9410, size: 32)
!10005 = !{!10006, !10007}
!10006 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !10001, file: !9399, line: 2803, type: !10004)
!10007 = !DILocalVariable(name: "tickstart", scope: !10001, file: !9399, line: 2805, type: !110)
!10008 = !DILocation(line: 0, scope: !10001)
!10009 = !DILocation(line: 2821, column: 3, scope: !10001)
!10010 = !DILocation(line: 2824, column: 15, scope: !10001)
!10011 = !DILocation(line: 2825, column: 3, scope: !10001)
!10012 = !DILocation(line: 2825, column: 9, scope: !10001)
!10013 = !DILocation(line: 2827, column: 9, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10015, file: !9399, line: 2827, column: 8)
!10015 = distinct !DILexicalBlock(scope: !10001, file: !9399, line: 2826, column: 3)
!10016 = !DILocation(line: 2827, column: 23, scope: !10014)
!10017 = !DILocation(line: 2827, column: 37, scope: !10014)
!10018 = !DILocation(line: 2827, column: 8, scope: !10015)
!10019 = distinct !{!10019, !10011, !10020}
!10020 = !DILocation(line: 2832, column: 3, scope: !10001)
!10021 = !DILocation(line: 2840, column: 3, scope: !10001)
!10022 = !DILocation(line: 2866, column: 3, scope: !10001)
!10023 = !DILocation(line: 2869, column: 15, scope: !10001)
!10024 = !DILocation(line: 2870, column: 3, scope: !10001)
!10025 = !DILocation(line: 2870, column: 9, scope: !10001)
!10026 = !DILocation(line: 2870, column: 48, scope: !10001)
!10027 = !DILocation(line: 2872, column: 9, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10029, file: !9399, line: 2872, column: 8)
!10029 = distinct !DILexicalBlock(scope: !10001, file: !9399, line: 2871, column: 3)
!10030 = !DILocation(line: 2872, column: 23, scope: !10028)
!10031 = !DILocation(line: 2872, column: 37, scope: !10028)
!10032 = !DILocation(line: 2872, column: 8, scope: !10029)
!10033 = distinct !{!10033, !10024, !10034}
!10034 = !DILocation(line: 2877, column: 3, scope: !10001)
!10035 = !DILocation(line: 2880, column: 1, scope: !10001)
!10036 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !9399, file: !9399, line: 2886, type: !10037, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10039)
!10037 = !DISubroutineType(types: !10038)
!10038 = !{!9402}
!10039 = !{!10040}
!10040 = !DILocalVariable(name: "tickstart", scope: !10036, file: !9399, line: 2888, type: !110)
!10041 = !DILocation(line: 2891, column: 3, scope: !10036)
!10042 = !DILocation(line: 2894, column: 15, scope: !10036)
!10043 = !DILocation(line: 0, scope: !10036)
!10044 = !DILocation(line: 2895, column: 3, scope: !10036)
!10045 = !DILocation(line: 2895, column: 9, scope: !10036)
!10046 = !DILocation(line: 2895, column: 45, scope: !10036)
!10047 = !DILocation(line: 2897, column: 9, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !9399, line: 2897, column: 8)
!10049 = distinct !DILexicalBlock(scope: !10036, file: !9399, line: 2896, column: 3)
!10050 = !DILocation(line: 2897, column: 23, scope: !10048)
!10051 = !DILocation(line: 2897, column: 36, scope: !10048)
!10052 = !DILocation(line: 2897, column: 8, scope: !10049)
!10053 = distinct !{!10053, !10044, !10054}
!10054 = !DILocation(line: 2902, column: 3, scope: !10036)
!10055 = !DILocation(line: 2905, column: 1, scope: !10036)
!10056 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !9399, file: !9399, line: 2916, type: !10057, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10060)
!10057 = !DISubroutineType(types: !10058)
!10058 = !{!9402, !10059}
!10059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9419, size: 32)
!10060 = !{!10061, !10062}
!10061 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !10056, file: !9399, line: 2916, type: !10059)
!10062 = !DILocalVariable(name: "tickstart", scope: !10056, file: !9399, line: 2918, type: !110)
!10063 = !DILocation(line: 0, scope: !10056)
!10064 = !DILocation(line: 2934, column: 3, scope: !10056)
!10065 = !DILocation(line: 2937, column: 15, scope: !10056)
!10066 = !DILocation(line: 2938, column: 3, scope: !10056)
!10067 = !DILocation(line: 2938, column: 9, scope: !10056)
!10068 = !DILocation(line: 2940, column: 9, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10070, file: !9399, line: 2940, column: 8)
!10070 = distinct !DILexicalBlock(scope: !10056, file: !9399, line: 2939, column: 3)
!10071 = !DILocation(line: 2940, column: 23, scope: !10069)
!10072 = !DILocation(line: 2940, column: 37, scope: !10069)
!10073 = !DILocation(line: 2940, column: 8, scope: !10070)
!10074 = distinct !{!10074, !10066, !10075}
!10075 = !DILocation(line: 2945, column: 3, scope: !10056)
!10076 = !DILocation(line: 2953, column: 3, scope: !10056)
!10077 = !DILocation(line: 2970, column: 3, scope: !10056)
!10078 = !DILocation(line: 2973, column: 15, scope: !10056)
!10079 = !DILocation(line: 2974, column: 3, scope: !10056)
!10080 = !DILocation(line: 2974, column: 9, scope: !10056)
!10081 = !DILocation(line: 2974, column: 37, scope: !10056)
!10082 = !DILocation(line: 2976, column: 9, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10084, file: !9399, line: 2976, column: 8)
!10084 = distinct !DILexicalBlock(scope: !10056, file: !9399, line: 2975, column: 3)
!10085 = !DILocation(line: 2976, column: 23, scope: !10083)
!10086 = !DILocation(line: 2976, column: 37, scope: !10083)
!10087 = !DILocation(line: 2976, column: 8, scope: !10084)
!10088 = distinct !{!10088, !10079, !10089}
!10089 = !DILocation(line: 2981, column: 3, scope: !10056)
!10090 = !DILocation(line: 2984, column: 1, scope: !10056)
!10091 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !9399, file: !9399, line: 2990, type: !10037, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10092)
!10092 = !{!10093}
!10093 = !DILocalVariable(name: "tickstart", scope: !10091, file: !9399, line: 2992, type: !110)
!10094 = !DILocation(line: 2995, column: 3, scope: !10091)
!10095 = !DILocation(line: 2998, column: 15, scope: !10091)
!10096 = !DILocation(line: 0, scope: !10091)
!10097 = !DILocation(line: 2999, column: 3, scope: !10091)
!10098 = !DILocation(line: 2999, column: 9, scope: !10091)
!10099 = !DILocation(line: 3001, column: 9, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10101, file: !9399, line: 3001, column: 8)
!10101 = distinct !DILexicalBlock(scope: !10091, file: !9399, line: 3000, column: 3)
!10102 = !DILocation(line: 3001, column: 23, scope: !10100)
!10103 = !DILocation(line: 3001, column: 36, scope: !10100)
!10104 = !DILocation(line: 3001, column: 8, scope: !10101)
!10105 = distinct !{!10105, !10097, !10106}
!10106 = !DILocation(line: 3006, column: 3, scope: !10091)
!10107 = !DILocation(line: 3009, column: 1, scope: !10091)
!10108 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9399, file: !9399, line: 3051, type: !5210, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10109)
!10109 = !{!10110, !10111, !10112, !10113, !10114}
!10110 = !DILocalVariable(name: "pllm", scope: !10108, file: !9399, line: 3053, type: !110)
!10111 = !DILocalVariable(name: "pllvco", scope: !10108, file: !9399, line: 3054, type: !110)
!10112 = !DILocalVariable(name: "pllp", scope: !10108, file: !9399, line: 3055, type: !110)
!10113 = !DILocalVariable(name: "pllr", scope: !10108, file: !9399, line: 3056, type: !110)
!10114 = !DILocalVariable(name: "sysclockfreq", scope: !10108, file: !9399, line: 3057, type: !110)
!10115 = !DILocation(line: 0, scope: !10108)
!10116 = !DILocation(line: 3060, column: 16, scope: !10108)
!10117 = !DILocation(line: 3060, column: 3, scope: !10108)
!10118 = !DILocation(line: 3076, column: 19, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !9399, line: 3073, column: 5)
!10120 = distinct !DILexicalBlock(scope: !10108, file: !9399, line: 3061, column: 3)
!10121 = !DILocation(line: 3076, column: 27, scope: !10119)
!10122 = !DILocation(line: 3077, column: 10, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10119, file: !9399, line: 3077, column: 10)
!10124 = !DILocation(line: 0, scope: !10123)
!10125 = !DILocation(line: 3087, column: 23, scope: !10119)
!10126 = !DILocation(line: 3087, column: 82, scope: !10119)
!10127 = !DILocation(line: 3089, column: 28, scope: !10119)
!10128 = !DILocation(line: 3090, column: 7, scope: !10119)
!10129 = !DILocation(line: 3096, column: 19, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10120, file: !9399, line: 3093, column: 5)
!10131 = !DILocation(line: 3096, column: 27, scope: !10130)
!10132 = !DILocation(line: 3097, column: 10, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10130, file: !9399, line: 3097, column: 10)
!10134 = !DILocation(line: 0, scope: !10133)
!10135 = !DILocation(line: 3107, column: 21, scope: !10130)
!10136 = !DILocation(line: 3107, column: 49, scope: !10130)
!10137 = !DILocation(line: 3109, column: 28, scope: !10130)
!10138 = !DILocation(line: 3110, column: 7, scope: !10130)
!10139 = !DILocation(line: 0, scope: !10120)
!10140 = !DILocation(line: 3118, column: 3, scope: !10108)
!10141 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9399, file: !9399, line: 3143, type: !10037, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10142)
!10142 = !{!10143}
!10143 = !DILocalVariable(name: "tickstart", scope: !10141, file: !9399, line: 3145, type: !110)
!10144 = !DILocation(line: 3148, column: 15, scope: !10141)
!10145 = !DILocation(line: 0, scope: !10141)
!10146 = !DILocation(line: 3151, column: 3, scope: !10141)
!10147 = !DILocation(line: 3154, column: 3, scope: !10141)
!10148 = !DILocation(line: 3154, column: 10, scope: !10141)
!10149 = !DILocation(line: 3154, column: 43, scope: !10141)
!10150 = !DILocation(line: 3156, column: 10, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10152, file: !9399, line: 3156, column: 9)
!10152 = distinct !DILexicalBlock(scope: !10141, file: !9399, line: 3155, column: 3)
!10153 = !DILocation(line: 3156, column: 24, scope: !10151)
!10154 = !DILocation(line: 3156, column: 37, scope: !10151)
!10155 = !DILocation(line: 3156, column: 9, scope: !10152)
!10156 = distinct !{!10156, !10147, !10157}
!10157 = !DILocation(line: 3160, column: 3, scope: !10141)
!10158 = !DILocation(line: 3163, column: 3, scope: !10141)
!10159 = !DILocation(line: 3166, column: 15, scope: !10141)
!10160 = !DILocation(line: 3169, column: 3, scope: !10141)
!10161 = !DILocation(line: 3172, column: 3, scope: !10141)
!10162 = !DILocation(line: 3172, column: 10, scope: !10141)
!10163 = !DILocation(line: 3172, column: 44, scope: !10141)
!10164 = !DILocation(line: 3174, column: 24, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10166, file: !9399, line: 3174, column: 9)
!10166 = distinct !DILexicalBlock(scope: !10141, file: !9399, line: 3173, column: 3)
!10167 = !DILocation(line: 3174, column: 37, scope: !10165)
!10168 = !DILocation(line: 3174, column: 9, scope: !10166)
!10169 = distinct !{!10169, !10161, !10170}
!10170 = !DILocation(line: 3178, column: 3, scope: !10141)
!10171 = !DILocation(line: 3184, column: 3, scope: !10141)
!10172 = !DILocation(line: 3187, column: 3, scope: !10141)
!10173 = !DILocation(line: 3187, column: 10, scope: !10141)
!10174 = !DILocation(line: 3187, column: 43, scope: !10141)
!10175 = !DILocation(line: 3189, column: 24, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10177, file: !9399, line: 3189, column: 9)
!10177 = distinct !DILexicalBlock(scope: !10141, file: !9399, line: 3188, column: 3)
!10178 = !DILocation(line: 3189, column: 37, scope: !10176)
!10179 = !DILocation(line: 3189, column: 9, scope: !10177)
!10180 = distinct !{!10180, !10172, !10181}
!10181 = !DILocation(line: 3193, column: 3, scope: !10141)
!10182 = !DILocation(line: 3199, column: 3, scope: !10141)
!10183 = !DILocation(line: 3202, column: 3, scope: !10141)
!10184 = !DILocation(line: 3202, column: 10, scope: !10141)
!10185 = !DILocation(line: 3202, column: 43, scope: !10141)
!10186 = !DILocation(line: 3204, column: 24, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10188, file: !9399, line: 3204, column: 9)
!10188 = distinct !DILexicalBlock(scope: !10141, file: !9399, line: 3203, column: 3)
!10189 = !DILocation(line: 3204, column: 37, scope: !10187)
!10190 = !DILocation(line: 3204, column: 9, scope: !10188)
!10191 = distinct !{!10191, !10183, !10192}
!10192 = !DILocation(line: 3208, column: 3, scope: !10141)
!10193 = !DILocation(line: 3215, column: 3, scope: !10141)
!10194 = !DILocation(line: 3218, column: 3, scope: !10141)
!10195 = !DILocation(line: 3218, column: 10, scope: !10141)
!10196 = !DILocation(line: 3218, column: 46, scope: !10141)
!10197 = !DILocation(line: 3220, column: 24, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10199, file: !9399, line: 3220, column: 9)
!10199 = distinct !DILexicalBlock(scope: !10141, file: !9399, line: 3219, column: 3)
!10200 = !DILocation(line: 3220, column: 37, scope: !10198)
!10201 = !DILocation(line: 3220, column: 9, scope: !10199)
!10202 = distinct !{!10202, !10194, !10203}
!10203 = !DILocation(line: 3224, column: 3, scope: !10141)
!10204 = !DILocation(line: 3232, column: 3, scope: !10141)
!10205 = !DILocation(line: 3235, column: 3, scope: !10141)
!10206 = !DILocation(line: 3235, column: 10, scope: !10141)
!10207 = !DILocation(line: 3235, column: 46, scope: !10141)
!10208 = !DILocation(line: 3237, column: 10, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !9399, line: 3237, column: 9)
!10210 = distinct !DILexicalBlock(scope: !10141, file: !9399, line: 3236, column: 3)
!10211 = !DILocation(line: 3237, column: 24, scope: !10209)
!10212 = !DILocation(line: 3237, column: 37, scope: !10209)
!10213 = !DILocation(line: 3237, column: 9, scope: !10210)
!10214 = distinct !{!10214, !10205, !10215}
!10215 = !DILocation(line: 3241, column: 3, scope: !10141)
!10216 = !DILocation(line: 3247, column: 16, scope: !10141)
!10217 = !DILocation(line: 3257, column: 19, scope: !10141)
!10218 = !DILocation(line: 3270, column: 19, scope: !10141)
!10219 = !DILocation(line: 3274, column: 3, scope: !10141)
!10220 = !DILocation(line: 3277, column: 3, scope: !10141)
!10221 = !DILocation(line: 3281, column: 3, scope: !10141)
!10222 = !DILocation(line: 3285, column: 3, scope: !10141)
!10223 = !DILocation(line: 3288, column: 3, scope: !10141)
!10224 = !DILocation(line: 3292, column: 3, scope: !10141)
!10225 = !DILocation(line: 3296, column: 3, scope: !10141)
!10226 = !DILocation(line: 3299, column: 3, scope: !10141)
!10227 = !DILocation(line: 3302, column: 19, scope: !10141)
!10228 = !DILocation(line: 3305, column: 19, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10141, file: !9399, line: 3305, column: 6)
!10230 = !DILocation(line: 3305, column: 6, scope: !10229)
!10231 = !DILocation(line: 3305, column: 31, scope: !10229)
!10232 = !DILocation(line: 0, scope: !10229)
!10233 = !DILocation(line: 3313, column: 1, scope: !10141)
!10234 = !DISubprogram(name: "HAL_InitTick", scope: !9774, file: !9774, line: 223, type: !10235, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!10235 = !DISubroutineType(types: !10236)
!10236 = !{!9402, !110}
!10237 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9399, file: !9399, line: 3333, type: !10238, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10262)
!10238 = !DISubroutineType(types: !10239)
!10239 = !{!9402, !10240}
!10240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10241, size: 32)
!10241 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10242, line: 70, baseType: !10243)
!10242 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10242, line: 49, size: 416, elements: !10244)
!10244 = !{!10245, !10246, !10247, !10248, !10249, !10250, !10251}
!10245 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10243, file: !10242, line: 51, baseType: !110, size: 32)
!10246 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10243, file: !10242, line: 54, baseType: !110, size: 32, offset: 32)
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10243, file: !10242, line: 57, baseType: !110, size: 32, offset: 64)
!10248 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10243, file: !10242, line: 60, baseType: !110, size: 32, offset: 96)
!10249 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10243, file: !10242, line: 63, baseType: !110, size: 32, offset: 128)
!10250 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10243, file: !10242, line: 66, baseType: !110, size: 32, offset: 160)
!10251 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10243, file: !10242, line: 69, baseType: !10252, size: 224, offset: 192)
!10252 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9405, line: 73, baseType: !10253)
!10253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9405, line: 45, size: 224, elements: !10254)
!10254 = !{!10255, !10256, !10257, !10258, !10259, !10260, !10261}
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10253, file: !9405, line: 47, baseType: !110, size: 32)
!10256 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10253, file: !9405, line: 50, baseType: !110, size: 32, offset: 32)
!10257 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10253, file: !9405, line: 53, baseType: !110, size: 32, offset: 64)
!10258 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10253, file: !9405, line: 56, baseType: !110, size: 32, offset: 96)
!10259 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10253, file: !9405, line: 60, baseType: !110, size: 32, offset: 128)
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10253, file: !9405, line: 63, baseType: !110, size: 32, offset: 160)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !10253, file: !9405, line: 68, baseType: !110, size: 32, offset: 192)
!10262 = !{!10263, !10264, !10265, !10266, !10270}
!10263 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10237, file: !9399, line: 3333, type: !10240)
!10264 = !DILocalVariable(name: "tickstart", scope: !10237, file: !9399, line: 3335, type: !110)
!10265 = !DILocalVariable(name: "pll_config", scope: !10237, file: !9399, line: 3335, type: !110)
!10266 = !DILocalVariable(name: "pwrclkchanged", scope: !10267, file: !9399, line: 3517, type: !10269)
!10267 = distinct !DILexicalBlock(scope: !10268, file: !9399, line: 3516, column: 3)
!10268 = distinct !DILexicalBlock(scope: !10237, file: !9399, line: 3515, column: 6)
!10269 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !805, line: 188, baseType: !2820)
!10270 = !DILocalVariable(name: "tmpreg", scope: !10271, file: !9399, line: 3526, type: !282)
!10271 = distinct !DILexicalBlock(scope: !10272, file: !9399, line: 3526, column: 7)
!10272 = distinct !DILexicalBlock(scope: !10273, file: !9399, line: 3525, column: 5)
!10273 = distinct !DILexicalBlock(scope: !10267, file: !9399, line: 3524, column: 8)
!10274 = !DILocation(line: 0, scope: !10237)
!10275 = !DILocation(line: 3338, column: 24, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10237, file: !9399, line: 3338, column: 6)
!10277 = !DILocation(line: 3338, column: 6, scope: !10237)
!10278 = !DILocation(line: 3346, column: 27, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10237, file: !9399, line: 3346, column: 6)
!10280 = !DILocation(line: 3346, column: 43, scope: !10279)
!10281 = !DILocation(line: 3346, column: 69, scope: !10279)
!10282 = !DILocation(line: 3346, column: 6, scope: !10237)
!10283 = !DILocation(line: 3352, column: 9, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10285, file: !9399, line: 3352, column: 8)
!10285 = distinct !DILexicalBlock(scope: !10279, file: !9399, line: 3347, column: 3)
!10286 = !DILocation(line: 3352, column: 39, scope: !10284)
!10287 = !DILocation(line: 3352, column: 128, scope: !10284)
!10288 = !DILocation(line: 3353, column: 9, scope: !10284)
!10289 = !DILocation(line: 3353, column: 39, scope: !10284)
!10290 = !DILocation(line: 3353, column: 60, scope: !10284)
!10291 = !DILocation(line: 3353, column: 70, scope: !10284)
!10292 = !DILocation(line: 3353, column: 78, scope: !10284)
!10293 = !DILocation(line: 3353, column: 100, scope: !10284)
!10294 = !DILocation(line: 3353, column: 128, scope: !10284)
!10295 = !DILocation(line: 3354, column: 9, scope: !10284)
!10296 = !DILocation(line: 3354, column: 39, scope: !10284)
!10297 = !DILocation(line: 3354, column: 61, scope: !10284)
!10298 = !DILocation(line: 3354, column: 71, scope: !10284)
!10299 = !DILocation(line: 3354, column: 79, scope: !10284)
!10300 = !DILocation(line: 3354, column: 101, scope: !10284)
!10301 = !DILocation(line: 3352, column: 8, scope: !10285)
!10302 = !DILocation(line: 3360, column: 11, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10304, file: !9399, line: 3360, column: 10)
!10304 = distinct !DILexicalBlock(scope: !10284, file: !9399, line: 3359, column: 5)
!10305 = !DILocation(line: 3360, column: 57, scope: !10303)
!10306 = !DILocation(line: 3360, column: 80, scope: !10303)
!10307 = !DILocation(line: 3360, column: 89, scope: !10303)
!10308 = !DILocation(line: 3360, column: 10, scope: !10304)
!10309 = !DILocation(line: 3368, column: 7, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10311, file: !9399, line: 3368, column: 7)
!10311 = distinct !DILexicalBlock(scope: !10312, file: !9399, line: 3368, column: 7)
!10312 = distinct !DILexicalBlock(scope: !10284, file: !9399, line: 3366, column: 5)
!10313 = !DILocation(line: 3368, column: 7, scope: !10311)
!10314 = !DILocation(line: 3368, column: 7, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10310, file: !9399, line: 3368, column: 7)
!10316 = !DILocation(line: 3368, column: 7, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10318, file: !9399, line: 3368, column: 7)
!10318 = distinct !DILexicalBlock(scope: !10310, file: !9399, line: 3368, column: 7)
!10319 = !DILocation(line: 3368, column: 7, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10318, file: !9399, line: 3368, column: 7)
!10321 = !DILocation(line: 0, scope: !10310)
!10322 = !DILocation(line: 3371, column: 30, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10312, file: !9399, line: 3371, column: 10)
!10324 = !DILocation(line: 3371, column: 40, scope: !10323)
!10325 = !DILocation(line: 0, scope: !10323)
!10326 = !DILocation(line: 3371, column: 10, scope: !10312)
!10327 = !DILocation(line: 3377, column: 15, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10323, file: !9399, line: 3372, column: 7)
!10329 = !DILocation(line: 3377, column: 51, scope: !10328)
!10330 = !DILocation(line: 3377, column: 9, scope: !10328)
!10331 = !DILocation(line: 3379, column: 15, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10333, file: !9399, line: 3379, column: 14)
!10333 = distinct !DILexicalBlock(scope: !10328, file: !9399, line: 3378, column: 9)
!10334 = !DILocation(line: 3379, column: 29, scope: !10332)
!10335 = !DILocation(line: 3379, column: 43, scope: !10332)
!10336 = !DILocation(line: 3379, column: 14, scope: !10333)
!10337 = distinct !{!10337, !10330, !10338}
!10338 = !DILocation(line: 3383, column: 9, scope: !10328)
!10339 = !DILocation(line: 3391, column: 15, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10323, file: !9399, line: 3386, column: 7)
!10341 = !DILocation(line: 3391, column: 9, scope: !10340)
!10342 = !DILocation(line: 3393, column: 15, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10344, file: !9399, line: 3393, column: 14)
!10344 = distinct !DILexicalBlock(scope: !10340, file: !9399, line: 3392, column: 9)
!10345 = !DILocation(line: 3393, column: 29, scope: !10343)
!10346 = !DILocation(line: 3393, column: 43, scope: !10343)
!10347 = !DILocation(line: 3393, column: 14, scope: !10344)
!10348 = distinct !{!10348, !10341, !10349}
!10349 = !DILocation(line: 3397, column: 9, scope: !10340)
!10350 = !DILocation(line: 3402, column: 27, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10237, file: !9399, line: 3402, column: 6)
!10352 = !DILocation(line: 3402, column: 43, scope: !10351)
!10353 = !DILocation(line: 3402, column: 69, scope: !10351)
!10354 = !DILocation(line: 3402, column: 6, scope: !10237)
!10355 = !DILocation(line: 3410, column: 9, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10357, file: !9399, line: 3410, column: 8)
!10357 = distinct !DILexicalBlock(scope: !10351, file: !9399, line: 3403, column: 3)
!10358 = !DILocation(line: 3410, column: 39, scope: !10356)
!10359 = !DILocation(line: 3410, column: 128, scope: !10356)
!10360 = !DILocation(line: 3411, column: 9, scope: !10356)
!10361 = !DILocation(line: 3411, column: 39, scope: !10356)
!10362 = !DILocation(line: 3411, column: 60, scope: !10356)
!10363 = !DILocation(line: 3411, column: 70, scope: !10356)
!10364 = !DILocation(line: 3411, column: 78, scope: !10356)
!10365 = !DILocation(line: 3411, column: 100, scope: !10356)
!10366 = !DILocation(line: 3411, column: 128, scope: !10356)
!10367 = !DILocation(line: 3412, column: 9, scope: !10356)
!10368 = !DILocation(line: 3412, column: 39, scope: !10356)
!10369 = !DILocation(line: 3412, column: 61, scope: !10356)
!10370 = !DILocation(line: 3412, column: 71, scope: !10356)
!10371 = !DILocation(line: 3412, column: 79, scope: !10356)
!10372 = !DILocation(line: 3412, column: 101, scope: !10356)
!10373 = !DILocation(line: 3410, column: 8, scope: !10357)
!10374 = !DILocation(line: 3419, column: 11, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10376, file: !9399, line: 3419, column: 10)
!10376 = distinct !DILexicalBlock(scope: !10356, file: !9399, line: 3417, column: 5)
!10377 = !DILocation(line: 3419, column: 57, scope: !10375)
!10378 = !DILocation(line: 3419, column: 80, scope: !10375)
!10379 = !DILocation(line: 3419, column: 89, scope: !10375)
!10380 = !DILocation(line: 3419, column: 10, scope: !10376)
!10381 = !DILocation(line: 3433, column: 30, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10383, file: !9399, line: 3433, column: 10)
!10383 = distinct !DILexicalBlock(scope: !10356, file: !9399, line: 3431, column: 5)
!10384 = !DILocation(line: 3433, column: 39, scope: !10382)
!10385 = !DILocation(line: 3433, column: 10, scope: !10383)
!10386 = !DILocation(line: 3436, column: 9, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10382, file: !9399, line: 3434, column: 7)
!10388 = !DILocation(line: 3439, column: 21, scope: !10387)
!10389 = !DILocation(line: 3442, column: 9, scope: !10387)
!10390 = !DILocation(line: 3442, column: 15, scope: !10387)
!10391 = !DILocation(line: 3442, column: 51, scope: !10387)
!10392 = !DILocation(line: 3444, column: 15, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !9399, line: 3444, column: 14)
!10394 = distinct !DILexicalBlock(scope: !10387, file: !9399, line: 3443, column: 9)
!10395 = !DILocation(line: 3444, column: 29, scope: !10393)
!10396 = !DILocation(line: 3444, column: 43, scope: !10393)
!10397 = !DILocation(line: 3444, column: 14, scope: !10394)
!10398 = distinct !{!10398, !10389, !10399}
!10399 = !DILocation(line: 3448, column: 9, scope: !10387)
!10400 = !DILocation(line: 3456, column: 9, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10382, file: !9399, line: 3454, column: 7)
!10402 = !DILocation(line: 3459, column: 21, scope: !10401)
!10403 = !DILocation(line: 3462, column: 9, scope: !10401)
!10404 = !DILocation(line: 3462, column: 15, scope: !10401)
!10405 = !DILocation(line: 3464, column: 15, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10407, file: !9399, line: 3464, column: 14)
!10407 = distinct !DILexicalBlock(scope: !10401, file: !9399, line: 3463, column: 9)
!10408 = !DILocation(line: 3464, column: 29, scope: !10406)
!10409 = !DILocation(line: 3464, column: 43, scope: !10406)
!10410 = !DILocation(line: 3464, column: 14, scope: !10407)
!10411 = distinct !{!10411, !10403, !10412}
!10412 = !DILocation(line: 3468, column: 9, scope: !10401)
!10413 = !DILocation(line: 0, scope: !10356)
!10414 = !DILocation(line: 3473, column: 27, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10237, file: !9399, line: 3473, column: 6)
!10416 = !DILocation(line: 3473, column: 43, scope: !10415)
!10417 = !DILocation(line: 3473, column: 69, scope: !10415)
!10418 = !DILocation(line: 3473, column: 6, scope: !10237)
!10419 = !DILocation(line: 3479, column: 28, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10421, file: !9399, line: 3479, column: 8)
!10421 = distinct !DILexicalBlock(scope: !10415, file: !9399, line: 3474, column: 3)
!10422 = !DILocation(line: 3479, column: 37, scope: !10420)
!10423 = !DILocation(line: 3479, column: 8, scope: !10421)
!10424 = !DILocation(line: 3482, column: 7, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10420, file: !9399, line: 3480, column: 5)
!10426 = !DILocation(line: 3485, column: 19, scope: !10425)
!10427 = !DILocation(line: 3488, column: 7, scope: !10425)
!10428 = !DILocation(line: 3488, column: 13, scope: !10425)
!10429 = !DILocation(line: 3488, column: 49, scope: !10425)
!10430 = !DILocation(line: 3490, column: 13, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10432, file: !9399, line: 3490, column: 12)
!10432 = distinct !DILexicalBlock(scope: !10425, file: !9399, line: 3489, column: 7)
!10433 = !DILocation(line: 3490, column: 27, scope: !10431)
!10434 = !DILocation(line: 3490, column: 41, scope: !10431)
!10435 = !DILocation(line: 3490, column: 12, scope: !10432)
!10436 = distinct !{!10436, !10427, !10437}
!10437 = !DILocation(line: 3494, column: 7, scope: !10425)
!10438 = !DILocation(line: 3499, column: 7, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10420, file: !9399, line: 3497, column: 5)
!10440 = !DILocation(line: 3502, column: 19, scope: !10439)
!10441 = !DILocation(line: 3505, column: 7, scope: !10439)
!10442 = !DILocation(line: 3505, column: 13, scope: !10439)
!10443 = !DILocation(line: 3507, column: 13, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !9399, line: 3507, column: 12)
!10445 = distinct !DILexicalBlock(scope: !10439, file: !9399, line: 3506, column: 7)
!10446 = !DILocation(line: 3507, column: 27, scope: !10444)
!10447 = !DILocation(line: 3507, column: 41, scope: !10444)
!10448 = !DILocation(line: 3507, column: 12, scope: !10445)
!10449 = distinct !{!10449, !10441, !10450}
!10450 = !DILocation(line: 3511, column: 7, scope: !10439)
!10451 = !DILocation(line: 3515, column: 27, scope: !10268)
!10452 = !DILocation(line: 3515, column: 43, scope: !10268)
!10453 = !DILocation(line: 3515, column: 69, scope: !10268)
!10454 = !DILocation(line: 3515, column: 6, scope: !10237)
!10455 = !DILocation(line: 0, scope: !10267)
!10456 = !DILocation(line: 3524, column: 8, scope: !10273)
!10457 = !DILocation(line: 3524, column: 8, scope: !10267)
!10458 = !DILocation(line: 3526, column: 7, scope: !10271)
!10459 = !DILocation(line: 3526, column: 7, scope: !10272)
!10460 = !DILocation(line: 3528, column: 5, scope: !10272)
!10461 = !DILocation(line: 3530, column: 8, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10267, file: !9399, line: 3530, column: 8)
!10463 = !DILocation(line: 3530, column: 8, scope: !10267)
!10464 = !DILocation(line: 3533, column: 7, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10462, file: !9399, line: 3531, column: 5)
!10466 = !DILocation(line: 3536, column: 19, scope: !10465)
!10467 = !DILocation(line: 3538, column: 7, scope: !10465)
!10468 = !DILocation(line: 3538, column: 13, scope: !10465)
!10469 = !DILocation(line: 3540, column: 13, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10471, file: !9399, line: 3540, column: 12)
!10471 = distinct !DILexicalBlock(scope: !10465, file: !9399, line: 3539, column: 7)
!10472 = !DILocation(line: 3540, column: 27, scope: !10470)
!10473 = !DILocation(line: 3540, column: 40, scope: !10470)
!10474 = !DILocation(line: 3540, column: 12, scope: !10471)
!10475 = distinct !{!10475, !10467, !10476}
!10476 = !DILocation(line: 3544, column: 7, scope: !10465)
!10477 = !DILocation(line: 3548, column: 5, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10479, file: !9399, line: 3548, column: 5)
!10479 = distinct !DILexicalBlock(scope: !10267, file: !9399, line: 3548, column: 5)
!10480 = !DILocation(line: 3548, column: 5, scope: !10479)
!10481 = !DILocation(line: 3548, column: 5, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10478, file: !9399, line: 3548, column: 5)
!10483 = !DILocation(line: 3548, column: 5, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !9399, line: 3548, column: 5)
!10485 = distinct !DILexicalBlock(scope: !10478, file: !9399, line: 3548, column: 5)
!10486 = !DILocation(line: 3548, column: 5, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10485, file: !9399, line: 3548, column: 5)
!10488 = !DILocation(line: 0, scope: !10478)
!10489 = !DILocation(line: 3550, column: 28, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10267, file: !9399, line: 3550, column: 8)
!10491 = !DILocation(line: 3550, column: 38, scope: !10490)
!10492 = !DILocation(line: 0, scope: !10490)
!10493 = !DILocation(line: 3550, column: 8, scope: !10267)
!10494 = !DILocation(line: 3556, column: 13, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10490, file: !9399, line: 3551, column: 5)
!10496 = !DILocation(line: 3556, column: 49, scope: !10495)
!10497 = !DILocation(line: 3556, column: 7, scope: !10495)
!10498 = !DILocation(line: 3558, column: 13, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10500, file: !9399, line: 3558, column: 12)
!10500 = distinct !DILexicalBlock(scope: !10495, file: !9399, line: 3557, column: 7)
!10501 = !DILocation(line: 3558, column: 27, scope: !10499)
!10502 = !DILocation(line: 3558, column: 41, scope: !10499)
!10503 = !DILocation(line: 3558, column: 12, scope: !10500)
!10504 = distinct !{!10504, !10497, !10505}
!10505 = !DILocation(line: 3562, column: 7, scope: !10495)
!10506 = !DILocation(line: 3570, column: 13, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10490, file: !9399, line: 3565, column: 5)
!10508 = !DILocation(line: 3570, column: 7, scope: !10507)
!10509 = !DILocation(line: 3572, column: 13, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10511, file: !9399, line: 3572, column: 12)
!10511 = distinct !DILexicalBlock(scope: !10507, file: !9399, line: 3571, column: 7)
!10512 = !DILocation(line: 3572, column: 27, scope: !10510)
!10513 = !DILocation(line: 3572, column: 41, scope: !10510)
!10514 = !DILocation(line: 3572, column: 12, scope: !10511)
!10515 = distinct !{!10515, !10508, !10516}
!10516 = !DILocation(line: 3576, column: 7, scope: !10507)
!10517 = !DILocation(line: 3580, column: 8, scope: !10267)
!10518 = !DILocation(line: 3582, column: 7, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10520, file: !9399, line: 3581, column: 5)
!10520 = distinct !DILexicalBlock(scope: !10267, file: !9399, line: 3580, column: 8)
!10521 = !DILocation(line: 3583, column: 5, scope: !10519)
!10522 = !DILocation(line: 3588, column: 31, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10237, file: !9399, line: 3588, column: 7)
!10524 = !DILocation(line: 3588, column: 41, scope: !10523)
!10525 = !DILocation(line: 3588, column: 7, scope: !10237)
!10526 = !DILocation(line: 3591, column: 8, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10528, file: !9399, line: 3591, column: 8)
!10528 = distinct !DILexicalBlock(scope: !10523, file: !9399, line: 3589, column: 3)
!10529 = !DILocation(line: 3591, column: 38, scope: !10527)
!10530 = !DILocation(line: 3591, column: 8, scope: !10528)
!10531 = !DILocation(line: 3593, column: 44, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10533, file: !9399, line: 3593, column: 10)
!10533 = distinct !DILexicalBlock(scope: !10527, file: !9399, line: 3592, column: 5)
!10534 = !DILocation(line: 0, scope: !10532)
!10535 = !DILocation(line: 3593, column: 10, scope: !10533)
!10536 = !DILocation(line: 3610, column: 15, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10532, file: !9399, line: 3594, column: 7)
!10538 = !DILocation(line: 3610, column: 9, scope: !10537)
!10539 = !DILocation(line: 3612, column: 15, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10541, file: !9399, line: 3612, column: 14)
!10541 = distinct !DILexicalBlock(scope: !10537, file: !9399, line: 3611, column: 9)
!10542 = !DILocation(line: 3612, column: 29, scope: !10540)
!10543 = !DILocation(line: 3612, column: 43, scope: !10540)
!10544 = !DILocation(line: 3612, column: 14, scope: !10541)
!10545 = distinct !{!10545, !10538, !10546}
!10546 = !DILocation(line: 3616, column: 9, scope: !10537)
!10547 = !DILocation(line: 3619, column: 9, scope: !10537)
!10548 = !DILocation(line: 3626, column: 9, scope: !10537)
!10549 = !DILocation(line: 3629, column: 21, scope: !10537)
!10550 = !DILocation(line: 3632, column: 9, scope: !10537)
!10551 = !DILocation(line: 3632, column: 15, scope: !10537)
!10552 = !DILocation(line: 3632, column: 51, scope: !10537)
!10553 = !DILocation(line: 3634, column: 15, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10555, file: !9399, line: 3634, column: 14)
!10555 = distinct !DILexicalBlock(scope: !10537, file: !9399, line: 3633, column: 9)
!10556 = !DILocation(line: 3634, column: 29, scope: !10554)
!10557 = !DILocation(line: 3634, column: 43, scope: !10554)
!10558 = !DILocation(line: 3634, column: 14, scope: !10555)
!10559 = distinct !{!10559, !10550, !10560}
!10560 = !DILocation(line: 3638, column: 9, scope: !10537)
!10561 = !DILocation(line: 3649, column: 15, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10532, file: !9399, line: 3641, column: 7)
!10563 = !DILocation(line: 3649, column: 9, scope: !10562)
!10564 = !DILocation(line: 3651, column: 15, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10566, file: !9399, line: 3651, column: 14)
!10566 = distinct !DILexicalBlock(scope: !10562, file: !9399, line: 3650, column: 9)
!10567 = !DILocation(line: 3651, column: 29, scope: !10565)
!10568 = !DILocation(line: 3651, column: 43, scope: !10565)
!10569 = !DILocation(line: 3651, column: 14, scope: !10566)
!10570 = distinct !{!10570, !10563, !10571}
!10571 = !DILocation(line: 3655, column: 9, scope: !10562)
!10572 = !DILocation(line: 3661, column: 44, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10574, file: !9399, line: 3661, column: 10)
!10574 = distinct !DILexicalBlock(scope: !10527, file: !9399, line: 3659, column: 5)
!10575 = !DILocation(line: 3661, column: 10, scope: !10574)
!10576 = !DILocation(line: 3668, column: 27, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10573, file: !9399, line: 3666, column: 7)
!10578 = !DILocation(line: 3671, column: 14, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10577, file: !9399, line: 3670, column: 13)
!10580 = !DILocation(line: 3671, column: 81, scope: !10579)
!10581 = !DILocation(line: 3671, column: 55, scope: !10579)
!10582 = !DILocation(line: 3671, column: 92, scope: !10579)
!10583 = !DILocation(line: 3672, column: 14, scope: !10579)
!10584 = !DILocation(line: 3672, column: 80, scope: !10579)
!10585 = !DILocation(line: 3672, column: 53, scope: !10579)
!10586 = !DILocation(line: 3672, column: 111, scope: !10579)
!10587 = !DILocation(line: 3673, column: 14, scope: !10579)
!10588 = !DILocation(line: 3673, column: 80, scope: !10579)
!10589 = !DILocation(line: 3673, column: 86, scope: !10579)
!10590 = !DILocation(line: 3673, column: 53, scope: !10579)
!10591 = !DILocation(line: 3673, column: 111, scope: !10579)
!10592 = !DILocation(line: 3674, column: 14, scope: !10579)
!10593 = !DILocation(line: 3674, column: 82, scope: !10579)
!10594 = !DILocation(line: 3674, column: 101, scope: !10579)
!10595 = !DILocation(line: 3674, column: 53, scope: !10579)
!10596 = !DILocation(line: 3674, column: 126, scope: !10579)
!10597 = !DILocation(line: 3675, column: 14, scope: !10579)
!10598 = !DILocation(line: 3675, column: 80, scope: !10579)
!10599 = !DILocation(line: 3675, column: 85, scope: !10579)
!10600 = !DILocation(line: 3675, column: 53, scope: !10579)
!10601 = !DILocation(line: 3675, column: 111, scope: !10579)
!10602 = !DILocation(line: 3676, column: 14, scope: !10579)
!10603 = !DILocation(line: 3676, column: 80, scope: !10579)
!10604 = !DILocation(line: 3676, column: 85, scope: !10579)
!10605 = !DILocation(line: 3676, column: 53, scope: !10579)
!10606 = !DILocation(line: 3670, column: 13, scope: !10577)
!10607 = !DILocation(line: 3691, column: 3, scope: !10237)
!10608 = !DILocation(line: 3692, column: 1, scope: !10237)
!10609 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9399, file: !9399, line: 3703, type: !10610, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10612)
!10610 = !DISubroutineType(types: !10611)
!10611 = !{null, !10240}
!10612 = !{!10613}
!10613 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10609, file: !9399, line: 3703, type: !10240)
!10614 = !DILocation(line: 0, scope: !10609)
!10615 = !DILocation(line: 3706, column: 22, scope: !10609)
!10616 = !DILocation(line: 3706, column: 37, scope: !10609)
!10617 = !DILocation(line: 3709, column: 12, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10609, file: !9399, line: 3709, column: 6)
!10619 = !DILocation(line: 3709, column: 15, scope: !10618)
!10620 = !DILocation(line: 3709, column: 31, scope: !10618)
!10621 = !DILocation(line: 3709, column: 6, scope: !10609)
!10622 = !DILocation(line: 3711, column: 24, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10618, file: !9399, line: 3710, column: 3)
!10624 = !DILocation(line: 3711, column: 33, scope: !10623)
!10625 = !DILocation(line: 3712, column: 3, scope: !10623)
!10626 = !DILocation(line: 3713, column: 17, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10618, file: !9399, line: 3713, column: 11)
!10628 = !DILocation(line: 3713, column: 20, scope: !10627)
!10629 = !DILocation(line: 3713, column: 35, scope: !10627)
!10630 = !DILocation(line: 0, scope: !10627)
!10631 = !DILocation(line: 3713, column: 11, scope: !10618)
!10632 = !DILocation(line: 3715, column: 33, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10627, file: !9399, line: 3714, column: 3)
!10634 = !DILocation(line: 3716, column: 3, scope: !10633)
!10635 = !DILocation(line: 3719, column: 33, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10627, file: !9399, line: 3718, column: 3)
!10637 = !DILocation(line: 3723, column: 12, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10609, file: !9399, line: 3723, column: 6)
!10639 = !DILocation(line: 3723, column: 15, scope: !10638)
!10640 = !DILocation(line: 3729, column: 24, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10638, file: !9399, line: 3728, column: 3)
!10642 = !DILocation(line: 3729, column: 33, scope: !10641)
!10643 = !DILocation(line: 3732, column: 61, scope: !10609)
!10644 = !DILocation(line: 3732, column: 81, scope: !10609)
!10645 = !DILocation(line: 3732, column: 22, scope: !10609)
!10646 = !DILocation(line: 3732, column: 42, scope: !10609)
!10647 = !DILocation(line: 3735, column: 12, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10609, file: !9399, line: 3735, column: 6)
!10649 = !DILocation(line: 3735, column: 17, scope: !10648)
!10650 = !DILocation(line: 3735, column: 35, scope: !10648)
!10651 = !DILocation(line: 3735, column: 6, scope: !10609)
!10652 = !DILocation(line: 3737, column: 24, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10648, file: !9399, line: 3736, column: 3)
!10654 = !DILocation(line: 3737, column: 33, scope: !10653)
!10655 = !DILocation(line: 3738, column: 3, scope: !10653)
!10656 = !DILocation(line: 3739, column: 17, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10648, file: !9399, line: 3739, column: 11)
!10658 = !DILocation(line: 3739, column: 22, scope: !10657)
!10659 = !DILocation(line: 3739, column: 39, scope: !10657)
!10660 = !DILocation(line: 0, scope: !10657)
!10661 = !DILocation(line: 3739, column: 11, scope: !10648)
!10662 = !DILocation(line: 3741, column: 33, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10657, file: !9399, line: 3740, column: 3)
!10664 = !DILocation(line: 3742, column: 3, scope: !10663)
!10665 = !DILocation(line: 3745, column: 33, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10657, file: !9399, line: 3744, column: 3)
!10667 = !DILocation(line: 3749, column: 12, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10609, file: !9399, line: 3749, column: 6)
!10669 = !DILocation(line: 3749, column: 16, scope: !10668)
!10670 = !DILocation(line: 3755, column: 24, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10668, file: !9399, line: 3754, column: 3)
!10672 = !DILocation(line: 3755, column: 33, scope: !10671)
!10673 = !DILocation(line: 3759, column: 12, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10609, file: !9399, line: 3759, column: 6)
!10675 = !DILocation(line: 3759, column: 15, scope: !10674)
!10676 = !DILocation(line: 3759, column: 30, scope: !10674)
!10677 = !DILocation(line: 3759, column: 6, scope: !10609)
!10678 = !DILocation(line: 3765, column: 28, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10674, file: !9399, line: 3764, column: 3)
!10680 = !DILocation(line: 3765, column: 37, scope: !10679)
!10681 = !DILocation(line: 3767, column: 54, scope: !10609)
!10682 = !DILocation(line: 3767, column: 62, scope: !10609)
!10683 = !DILocation(line: 3767, column: 26, scope: !10609)
!10684 = !DILocation(line: 3767, column: 36, scope: !10609)
!10685 = !DILocation(line: 3768, column: 49, scope: !10609)
!10686 = !DILocation(line: 3768, column: 57, scope: !10609)
!10687 = !DILocation(line: 3768, column: 26, scope: !10609)
!10688 = !DILocation(line: 3768, column: 31, scope: !10609)
!10689 = !DILocation(line: 3769, column: 50, scope: !10609)
!10690 = !DILocation(line: 3769, column: 78, scope: !10609)
!10691 = !DILocation(line: 3769, column: 26, scope: !10609)
!10692 = !DILocation(line: 3769, column: 31, scope: !10609)
!10693 = !DILocation(line: 3770, column: 52, scope: !10609)
!10694 = !DILocation(line: 3770, column: 102, scope: !10609)
!10695 = !DILocation(line: 3770, column: 109, scope: !10609)
!10696 = !DILocation(line: 3770, column: 26, scope: !10609)
!10697 = !DILocation(line: 3770, column: 31, scope: !10609)
!10698 = !DILocation(line: 3771, column: 50, scope: !10609)
!10699 = !DILocation(line: 3771, column: 78, scope: !10609)
!10700 = !DILocation(line: 3771, column: 26, scope: !10609)
!10701 = !DILocation(line: 3771, column: 31, scope: !10609)
!10702 = !DILocation(line: 3772, column: 50, scope: !10609)
!10703 = !DILocation(line: 3772, column: 78, scope: !10609)
!10704 = !DILocation(line: 3772, column: 26, scope: !10609)
!10705 = !DILocation(line: 3772, column: 31, scope: !10609)
!10706 = !DILocation(line: 3773, column: 1, scope: !10609)
!10707 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !10708, file: !10708, line: 257, type: !3146, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10709)
!10708 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10709 = !{!10710}
!10710 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10707, file: !10708, line: 257, type: !110)
!10711 = !DILocation(line: 0, scope: !10707)
!10712 = !DILocation(line: 260, column: 3, scope: !10707)
!10713 = !DILocation(line: 261, column: 1, scope: !10707)
!10714 = distinct !DISubprogram(name: "LL_InitTick", scope: !10715, file: !10715, line: 260, type: !7829, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10716)
!10715 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10716 = !{!10717, !10718}
!10717 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10714, file: !10715, line: 260, type: !110)
!10718 = !DILocalVariable(name: "Ticks", arg: 2, scope: !10714, file: !10715, line: 260, type: !110)
!10719 = !DILocation(line: 0, scope: !10714)
!10720 = !DILocation(line: 263, column: 46, scope: !10714)
!10721 = !DILocation(line: 263, column: 55, scope: !10714)
!10722 = !DILocation(line: 263, column: 18, scope: !10714)
!10723 = !DILocation(line: 264, column: 18, scope: !10714)
!10724 = !DILocation(line: 265, column: 18, scope: !10714)
!10725 = !DILocation(line: 267, column: 1, scope: !10714)
!10726 = distinct !DISubprogram(name: "LL_mDelay", scope: !10708, file: !10708, line: 273, type: !3146, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10727)
!10727 = !{!10728, !10729}
!10728 = !DILocalVariable(name: "Delay", arg: 1, scope: !10726, file: !10708, line: 273, type: !110)
!10729 = !DILocalVariable(name: "tmp", scope: !10726, file: !10708, line: 275, type: !282)
!10730 = !DILocation(line: 0, scope: !10726)
!10731 = !DILocation(line: 275, column: 3, scope: !10726)
!10732 = !DILocation(line: 275, column: 18, scope: !10726)
!10733 = !DILocation(line: 275, column: 33, scope: !10726)
!10734 = !DILocation(line: 277, column: 10, scope: !10726)
!10735 = !DILocation(line: 280, column: 12, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10726, file: !10708, line: 280, column: 6)
!10737 = !DILocation(line: 285, column: 3, scope: !10726)
!10738 = !DILocation(line: 287, column: 18, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10740, file: !10708, line: 287, column: 8)
!10740 = distinct !DILexicalBlock(scope: !10726, file: !10708, line: 286, column: 3)
!10741 = !DILocation(line: 292, column: 1, scope: !10726)
!10742 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !10708, file: !10708, line: 323, type: !3146, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10743)
!10743 = !{!10744}
!10744 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10742, file: !10708, line: 323, type: !110)
!10745 = !DILocation(line: 0, scope: !10742)
!10746 = !DILocation(line: 326, column: 19, scope: !10742)
!10747 = !DILocation(line: 327, column: 1, scope: !10742)
!10748 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !10708, file: !10708, line: 338, type: !10749, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10752)
!10749 = !DISubroutineType(types: !10750)
!10750 = !{!10751, !110}
!10751 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !805, line: 201, baseType: !804)
!10752 = !{!10753, !10754, !10755, !10756, !10757}
!10753 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !10748, file: !10708, line: 338, type: !110)
!10754 = !DILocalVariable(name: "timeout", scope: !10748, file: !10708, line: 340, type: !110)
!10755 = !DILocalVariable(name: "getlatency", scope: !10748, file: !10708, line: 341, type: !110)
!10756 = !DILocalVariable(name: "latency", scope: !10748, file: !10708, line: 342, type: !110)
!10757 = !DILocalVariable(name: "status", scope: !10748, file: !10708, line: 343, type: !10751)
!10758 = !DILocation(line: 0, scope: !10748)
!10759 = !DILocation(line: 347, column: 21, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10748, file: !10708, line: 347, column: 6)
!10761 = !DILocation(line: 347, column: 6, scope: !10748)
!10762 = !DILocation(line: 353, column: 8, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10764, file: !10708, line: 353, column: 8)
!10764 = distinct !DILexicalBlock(scope: !10760, file: !10708, line: 352, column: 3)
!10765 = !DILocation(line: 353, column: 40, scope: !10763)
!10766 = !DILocation(line: 353, column: 8, scope: !10764)
!10767 = !DILocation(line: 356, column: 26, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10769, file: !10708, line: 356, column: 10)
!10769 = distinct !DILexicalBlock(scope: !10763, file: !10708, line: 354, column: 5)
!10770 = !DILocation(line: 356, column: 55, scope: !10768)
!10771 = !DILocation(line: 362, column: 55, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10769, file: !10708, line: 362, column: 10)
!10773 = !DILocation(line: 368, column: 55, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10769, file: !10708, line: 368, column: 10)
!10775 = !DILocation(line: 374, column: 26, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10769, file: !10708, line: 374, column: 10)
!10777 = !DILocation(line: 374, column: 55, scope: !10776)
!10778 = !DILocation(line: 380, column: 28, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10780, file: !10708, line: 380, column: 12)
!10780 = distinct !DILexicalBlock(scope: !10776, file: !10708, line: 379, column: 7)
!10781 = !DILocation(line: 380, column: 57, scope: !10779)
!10782 = !DILocation(line: 387, column: 8, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10764, file: !10708, line: 387, column: 8)
!10784 = !DILocation(line: 387, column: 40, scope: !10783)
!10785 = !DILocation(line: 387, column: 8, scope: !10764)
!10786 = !DILocation(line: 390, column: 26, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10788, file: !10708, line: 390, column: 10)
!10788 = distinct !DILexicalBlock(scope: !10783, file: !10708, line: 388, column: 5)
!10789 = !DILocation(line: 390, column: 55, scope: !10787)
!10790 = !DILocation(line: 396, column: 26, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10788, file: !10708, line: 396, column: 10)
!10792 = !DILocation(line: 396, column: 55, scope: !10791)
!10793 = !DILocation(line: 402, column: 26, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10788, file: !10708, line: 402, column: 10)
!10795 = !DILocation(line: 402, column: 55, scope: !10794)
!10796 = !DILocation(line: 407, column: 26, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10788, file: !10708, line: 407, column: 10)
!10798 = !DILocation(line: 407, column: 55, scope: !10797)
!10799 = !DILocation(line: 413, column: 28, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10801, file: !10708, line: 413, column: 12)
!10801 = distinct !DILexicalBlock(scope: !10797, file: !10708, line: 412, column: 7)
!10802 = !DILocation(line: 413, column: 57, scope: !10800)
!10803 = !DILocation(line: 0, scope: !10764)
!10804 = !DILocation(line: 420, column: 8, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10764, file: !10708, line: 420, column: 8)
!10806 = !DILocation(line: 420, column: 40, scope: !10805)
!10807 = !DILocation(line: 420, column: 8, scope: !10764)
!10808 = !DILocation(line: 423, column: 26, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10810, file: !10708, line: 423, column: 10)
!10810 = distinct !DILexicalBlock(scope: !10805, file: !10708, line: 421, column: 5)
!10811 = !DILocation(line: 423, column: 55, scope: !10809)
!10812 = !DILocation(line: 429, column: 26, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10810, file: !10708, line: 429, column: 10)
!10814 = !DILocation(line: 429, column: 55, scope: !10813)
!10815 = !DILocation(line: 435, column: 28, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10817, file: !10708, line: 435, column: 12)
!10817 = distinct !DILexicalBlock(scope: !10813, file: !10708, line: 434, column: 7)
!10818 = !DILocation(line: 435, column: 57, scope: !10816)
!10819 = !DILocation(line: 444, column: 5, scope: !10764)
!10820 = !DILocation(line: 448, column: 5, scope: !10764)
!10821 = !DILocation(line: 451, column: 18, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10764, file: !10708, line: 449, column: 5)
!10823 = !DILocation(line: 452, column: 12, scope: !10822)
!10824 = !DILocation(line: 453, column: 26, scope: !10764)
!10825 = !DILocation(line: 453, column: 38, scope: !10764)
!10826 = !DILocation(line: 453, column: 5, scope: !10822)
!10827 = distinct !{!10827, !10820, !10828}
!10828 = !DILocation(line: 453, column: 54, scope: !10764)
!10829 = !DILocation(line: 0, scope: !10760)
!10830 = !DILocation(line: 464, column: 3, scope: !10748)
!10831 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !10832, file: !10832, line: 519, type: !5210, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!10832 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10833 = !DILocation(line: 521, column: 21, scope: !10831)
!10834 = !DILocation(line: 521, column: 3, scope: !10831)
!10835 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !4976, file: !4976, line: 1543, type: !3146, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10836)
!10836 = !{!10837}
!10837 = !DILocalVariable(name: "Latency", arg: 1, scope: !10835, file: !4976, line: 1543, type: !110)
!10838 = !DILocation(line: 0, scope: !10835)
!10839 = !DILocation(line: 1545, column: 3, scope: !10835)
!10840 = !DILocation(line: 1546, column: 1, scope: !10835)
!10841 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !4976, file: !4976, line: 1569, type: !5210, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!10842 = !DILocation(line: 1571, column: 21, scope: !10841)
!10843 = !DILocation(line: 1571, column: 3, scope: !10841)
!10844 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !10708, file: !10708, line: 483, type: !10845, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10861)
!10845 = !DISubroutineType(types: !10846)
!10846 = !{!10751, !10847, !10854}
!10847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10848, size: 32)
!10848 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !10715, line: 114, baseType: !10849)
!10849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10715, line: 94, size: 96, elements: !10850)
!10850 = !{!10851, !10852, !10853}
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10849, file: !10715, line: 96, baseType: !110, size: 32)
!10852 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10849, file: !10715, line: 102, baseType: !110, size: 32, offset: 32)
!10853 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10849, file: !10715, line: 109, baseType: !110, size: 32, offset: 64)
!10854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10855, size: 32)
!10855 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !10715, line: 139, baseType: !10856)
!10856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10715, line: 119, size: 96, elements: !10857)
!10857 = !{!10858, !10859, !10860}
!10858 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10856, file: !10715, line: 121, baseType: !110, size: 32)
!10859 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10856, file: !10715, line: 127, baseType: !110, size: 32, offset: 32)
!10860 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10856, file: !10715, line: 133, baseType: !110, size: 32, offset: 64)
!10861 = !{!10862, !10863, !10864, !10865}
!10862 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10844, file: !10708, line: 483, type: !10847)
!10863 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10844, file: !10708, line: 484, type: !10854)
!10864 = !DILocalVariable(name: "status", scope: !10844, file: !10708, line: 486, type: !10751)
!10865 = !DILocalVariable(name: "pllfreq", scope: !10844, file: !10708, line: 487, type: !110)
!10866 = !DILocation(line: 0, scope: !10844)
!10867 = !DILocation(line: 490, column: 6, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10844, file: !10708, line: 490, column: 6)
!10869 = !DILocation(line: 490, column: 25, scope: !10868)
!10870 = !DILocation(line: 490, column: 6, scope: !10844)
!10871 = !DILocation(line: 493, column: 15, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10868, file: !10708, line: 491, column: 3)
!10873 = !DILocation(line: 496, column: 8, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10872, file: !10708, line: 496, column: 8)
!10875 = !DILocation(line: 496, column: 29, scope: !10874)
!10876 = !DILocation(line: 496, column: 8, scope: !10872)
!10877 = !DILocation(line: 498, column: 7, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10874, file: !10708, line: 497, column: 5)
!10879 = !DILocation(line: 499, column: 7, scope: !10878)
!10880 = !DILocation(line: 499, column: 14, scope: !10878)
!10881 = !DILocation(line: 499, column: 35, scope: !10878)
!10882 = distinct !{!10882, !10879, !10883}
!10883 = !DILocation(line: 502, column: 7, scope: !10878)
!10884 = !DILocation(line: 506, column: 76, scope: !10872)
!10885 = !DILocation(line: 506, column: 103, scope: !10872)
!10886 = !DILocation(line: 507, column: 54, scope: !10872)
!10887 = !DILocation(line: 506, column: 5, scope: !10872)
!10888 = !DILocation(line: 510, column: 14, scope: !10872)
!10889 = !DILocation(line: 511, column: 3, scope: !10872)
!10890 = !DILocation(line: 0, scope: !10868)
!10891 = !DILocation(line: 518, column: 3, scope: !10844)
!10892 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !10708, file: !10708, line: 642, type: !10893, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10895)
!10893 = !DISubroutineType(types: !10894)
!10894 = !{!10751}
!10895 = !{!10896}
!10896 = !DILocalVariable(name: "status", scope: !10892, file: !10708, line: 644, type: !10751)
!10897 = !DILocation(line: 0, scope: !10892)
!10898 = !DILocation(line: 647, column: 6, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10892, file: !10708, line: 647, column: 6)
!10900 = !DILocation(line: 647, column: 27, scope: !10899)
!10901 = !DILocation(line: 655, column: 6, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10892, file: !10708, line: 655, column: 6)
!10903 = !DILocation(line: 655, column: 30, scope: !10902)
!10904 = !DILocation(line: 663, column: 6, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10892, file: !10708, line: 663, column: 6)
!10906 = !DILocation(line: 663, column: 30, scope: !10905)
!10907 = !DILocation(line: 663, column: 6, scope: !10892)
!10908 = !DILocation(line: 669, column: 3, scope: !10892)
!10909 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !10708, file: !10708, line: 611, type: !10910, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10912)
!10910 = !DISubroutineType(types: !10911)
!10911 = !{!110, !110, !10847}
!10912 = !{!10913, !10914, !10915}
!10913 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10909, file: !10708, line: 611, type: !110)
!10914 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10909, file: !10708, line: 611, type: !10847)
!10915 = !DILocalVariable(name: "pllfreq", scope: !10909, file: !10708, line: 613, type: !110)
!10916 = !DILocation(line: 0, scope: !10909)
!10917 = !DILocation(line: 622, column: 56, scope: !10909)
!10918 = !DILocation(line: 622, column: 61, scope: !10909)
!10919 = !DILocation(line: 622, column: 32, scope: !10909)
!10920 = !DILocation(line: 626, column: 45, scope: !10909)
!10921 = !DILocation(line: 626, column: 50, scope: !10909)
!10922 = !DILocation(line: 626, column: 21, scope: !10909)
!10923 = !DILocation(line: 630, column: 47, scope: !10909)
!10924 = !DILocation(line: 630, column: 82, scope: !10909)
!10925 = !DILocation(line: 630, column: 21, scope: !10909)
!10926 = !DILocation(line: 633, column: 3, scope: !10909)
!10927 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7168, file: !7168, line: 3007, type: !5210, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!10928 = !DILocation(line: 3009, column: 11, scope: !10927)
!10929 = !DILocation(line: 3009, column: 44, scope: !10927)
!10930 = !DILocation(line: 3009, column: 3, scope: !10927)
!10931 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7168, file: !7168, line: 2987, type: !2980, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!10932 = !DILocation(line: 2989, column: 3, scope: !10931)
!10933 = !DILocation(line: 2990, column: 1, scope: !10931)
!10934 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7168, file: !7168, line: 4304, type: !7302, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10935)
!10935 = !{!10936, !10937, !10938, !10939}
!10936 = !DILocalVariable(name: "Source", arg: 1, scope: !10934, file: !7168, line: 4304, type: !110)
!10937 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10934, file: !7168, line: 4304, type: !110)
!10938 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10934, file: !7168, line: 4304, type: !110)
!10939 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10934, file: !7168, line: 4304, type: !110)
!10940 = !DILocation(line: 0, scope: !10934)
!10941 = !DILocation(line: 4306, column: 3, scope: !10934)
!10942 = !DILocation(line: 4308, column: 3, scope: !10934)
!10943 = !DILocation(line: 4310, column: 3, scope: !10934)
!10944 = !DILocation(line: 4312, column: 1, scope: !10934)
!10945 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !10708, file: !10708, line: 681, type: !10946, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10948)
!10946 = !DISubroutineType(types: !10947)
!10947 = !{!10751, !110, !10854}
!10948 = !{!10949, !10950, !10951, !10952}
!10949 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10945, file: !10708, line: 681, type: !110)
!10950 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10945, file: !10708, line: 681, type: !10854)
!10951 = !DILocalVariable(name: "status", scope: !10945, file: !10708, line: 683, type: !10751)
!10952 = !DILocalVariable(name: "hclk_frequency", scope: !10945, file: !10708, line: 684, type: !110)
!10953 = !DILocation(line: 0, scope: !10945)
!10954 = !DILocation(line: 691, column: 20, scope: !10945)
!10955 = !DILocation(line: 694, column: 6, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10945, file: !10708, line: 694, column: 6)
!10957 = !DILocation(line: 694, column: 22, scope: !10956)
!10958 = !DILocation(line: 694, column: 6, scope: !10945)
!10959 = !DILocation(line: 697, column: 14, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10956, file: !10708, line: 695, column: 3)
!10961 = !DILocation(line: 701, column: 13, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10945, file: !10708, line: 701, column: 6)
!10963 = !DILocation(line: 701, column: 6, scope: !10945)
!10964 = !DILocation(line: 704, column: 5, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10962, file: !10708, line: 702, column: 3)
!10966 = !DILocation(line: 705, column: 5, scope: !10965)
!10967 = !DILocation(line: 705, column: 12, scope: !10965)
!10968 = !DILocation(line: 705, column: 33, scope: !10965)
!10969 = distinct !{!10969, !10966, !10970}
!10970 = !DILocation(line: 708, column: 5, scope: !10965)
!10971 = !DILocation(line: 711, column: 49, scope: !10965)
!10972 = !DILocation(line: 711, column: 5, scope: !10965)
!10973 = !DILocation(line: 712, column: 5, scope: !10965)
!10974 = !DILocation(line: 713, column: 5, scope: !10965)
!10975 = !DILocation(line: 713, column: 12, scope: !10965)
!10976 = !DILocation(line: 713, column: 37, scope: !10965)
!10977 = distinct !{!10977, !10974, !10978}
!10978 = !DILocation(line: 716, column: 5, scope: !10965)
!10979 = !DILocation(line: 719, column: 50, scope: !10965)
!10980 = !DILocation(line: 719, column: 5, scope: !10965)
!10981 = !DILocation(line: 720, column: 50, scope: !10965)
!10982 = !DILocation(line: 720, column: 5, scope: !10965)
!10983 = !DILocation(line: 721, column: 3, scope: !10965)
!10984 = !DILocation(line: 724, column: 6, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10945, file: !10708, line: 724, column: 6)
!10986 = !DILocation(line: 724, column: 22, scope: !10985)
!10987 = !DILocation(line: 724, column: 6, scope: !10945)
!10988 = !DILocation(line: 727, column: 14, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10985, file: !10708, line: 725, column: 3)
!10990 = !DILocation(line: 728, column: 3, scope: !10989)
!10991 = !DILocation(line: 731, column: 13, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10945, file: !10708, line: 731, column: 6)
!10993 = !DILocation(line: 731, column: 6, scope: !10945)
!10994 = !DILocation(line: 733, column: 5, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10992, file: !10708, line: 732, column: 3)
!10996 = !DILocation(line: 734, column: 3, scope: !10995)
!10997 = !DILocation(line: 736, column: 3, scope: !10945)
!10998 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7168, file: !7168, line: 4184, type: !2980, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!10999 = !DILocation(line: 4186, column: 3, scope: !10998)
!11000 = !DILocation(line: 4187, column: 1, scope: !10998)
!11001 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7168, file: !7168, line: 4205, type: !5210, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!11002 = !DILocation(line: 4207, column: 11, scope: !11001)
!11003 = !DILocation(line: 4207, column: 44, scope: !11001)
!11004 = !DILocation(line: 4207, column: 3, scope: !11001)
!11005 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7168, file: !7168, line: 3224, type: !3146, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !11006)
!11006 = !{!11007}
!11007 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11005, file: !7168, line: 3224, type: !110)
!11008 = !DILocation(line: 0, scope: !11005)
!11009 = !DILocation(line: 3226, column: 3, scope: !11005)
!11010 = !DILocation(line: 3227, column: 1, scope: !11005)
!11011 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7168, file: !7168, line: 3188, type: !3146, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !11012)
!11012 = !{!11013}
!11013 = !DILocalVariable(name: "Source", arg: 1, scope: !11011, file: !7168, line: 3188, type: !110)
!11014 = !DILocation(line: 0, scope: !11011)
!11015 = !DILocation(line: 3190, column: 3, scope: !11011)
!11016 = !DILocation(line: 3191, column: 1, scope: !11011)
!11017 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7168, file: !7168, line: 3204, type: !5210, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!11018 = !DILocation(line: 3206, column: 21, scope: !11017)
!11019 = !DILocation(line: 3206, column: 3, scope: !11017)
!11020 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7168, file: !7168, line: 3240, type: !3146, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !11021)
!11021 = !{!11022}
!11022 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11020, file: !7168, line: 3240, type: !110)
!11023 = !DILocation(line: 0, scope: !11020)
!11024 = !DILocation(line: 3242, column: 3, scope: !11020)
!11025 = !DILocation(line: 3243, column: 1, scope: !11020)
!11026 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7168, file: !7168, line: 3256, type: !3146, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !11027)
!11027 = !{!11028}
!11028 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11026, file: !7168, line: 3256, type: !110)
!11029 = !DILocation(line: 0, scope: !11026)
!11030 = !DILocation(line: 3258, column: 3, scope: !11026)
!11031 = !DILocation(line: 3259, column: 1, scope: !11026)
!11032 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !7168, file: !7168, line: 5969, type: !5210, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!11033 = !DILocation(line: 5971, column: 11, scope: !11032)
!11034 = !DILocation(line: 5971, column: 47, scope: !11032)
!11035 = !DILocation(line: 5971, column: 3, scope: !11032)
!11036 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !7168, file: !7168, line: 5153, type: !5210, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!11037 = !DILocation(line: 5155, column: 11, scope: !11036)
!11038 = !DILocation(line: 5155, column: 47, scope: !11036)
!11039 = !DILocation(line: 5155, column: 3, scope: !11036)
!11040 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !10708, file: !10708, line: 540, type: !11041, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !11043)
!11041 = !DISubroutineType(types: !11042)
!11042 = !{!10751, !110, !110, !10847, !10854}
!11043 = !{!11044, !11045, !11046, !11047, !11048, !11049}
!11044 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11040, file: !10708, line: 540, type: !110)
!11045 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11040, file: !10708, line: 540, type: !110)
!11046 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11040, file: !10708, line: 541, type: !10847)
!11047 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11040, file: !10708, line: 541, type: !10854)
!11048 = !DILocalVariable(name: "status", scope: !11040, file: !10708, line: 543, type: !10751)
!11049 = !DILocalVariable(name: "pllfreq", scope: !11040, file: !10708, line: 544, type: !110)
!11050 = !DILocation(line: 0, scope: !11040)
!11051 = !DILocation(line: 551, column: 6, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11040, file: !10708, line: 551, column: 6)
!11053 = !DILocation(line: 551, column: 25, scope: !11052)
!11054 = !DILocation(line: 551, column: 6, scope: !11040)
!11055 = !DILocation(line: 554, column: 15, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11052, file: !10708, line: 552, column: 3)
!11057 = !DILocation(line: 557, column: 8, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11056, file: !10708, line: 557, column: 8)
!11059 = !DILocation(line: 557, column: 29, scope: !11058)
!11060 = !DILocation(line: 557, column: 8, scope: !11056)
!11061 = !DILocation(line: 560, column: 20, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11063, file: !10708, line: 560, column: 10)
!11063 = distinct !DILexicalBlock(scope: !11058, file: !10708, line: 558, column: 5)
!11064 = !DILocation(line: 560, column: 10, scope: !11063)
!11065 = !DILocation(line: 562, column: 9, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11062, file: !10708, line: 561, column: 7)
!11067 = !DILocation(line: 563, column: 7, scope: !11066)
!11068 = !DILocation(line: 566, column: 9, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11062, file: !10708, line: 565, column: 7)
!11070 = !DILocation(line: 570, column: 7, scope: !11063)
!11071 = !DILocation(line: 571, column: 7, scope: !11063)
!11072 = !DILocation(line: 571, column: 14, scope: !11063)
!11073 = !DILocation(line: 571, column: 35, scope: !11063)
!11074 = distinct !{!11074, !11071, !11075}
!11075 = !DILocation(line: 574, column: 7, scope: !11063)
!11076 = !DILocation(line: 578, column: 76, scope: !11056)
!11077 = !DILocation(line: 578, column: 103, scope: !11056)
!11078 = !DILocation(line: 579, column: 54, scope: !11056)
!11079 = !DILocation(line: 578, column: 5, scope: !11056)
!11080 = !DILocation(line: 582, column: 14, scope: !11056)
!11081 = !DILocation(line: 583, column: 3, scope: !11056)
!11082 = !DILocation(line: 0, scope: !11052)
!11083 = !DILocation(line: 590, column: 3, scope: !11040)
!11084 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7168, file: !7168, line: 2969, type: !5210, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!11085 = !DILocation(line: 2971, column: 11, scope: !11084)
!11086 = !DILocation(line: 2971, column: 44, scope: !11084)
!11087 = !DILocation(line: 2971, column: 3, scope: !11084)
!11088 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !7168, file: !7168, line: 2929, type: !2980, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!11089 = !DILocation(line: 2931, column: 3, scope: !11088)
!11090 = !DILocation(line: 2932, column: 1, scope: !11088)
!11091 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7168, file: !7168, line: 2939, type: !2980, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!11092 = !DILocation(line: 2941, column: 3, scope: !11091)
!11093 = !DILocation(line: 2942, column: 1, scope: !11091)
!11094 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7168, file: !7168, line: 2949, type: !2980, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !251)
!11095 = !DILocation(line: 2951, column: 3, scope: !11094)
!11096 = !DILocation(line: 2952, column: 1, scope: !11094)
!11097 = distinct !DISubprogram(name: "z_device_state_init", scope: !11098, file: !11098, line: 23, type: !2980, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !11099)
!11098 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11099 = !{!11100}
!11100 = !DILocalVariable(name: "dev", scope: !11097, file: !11098, line: 25, type: !11101)
!11101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11102, size: 32)
!11102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11103)
!11103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !302, line: 378, size: 192, elements: !11104)
!11104 = !{!11105, !11106, !11107, !11108, !11114, !11115}
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11103, file: !302, line: 380, baseType: !305, size: 32)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11103, file: !302, line: 382, baseType: !13, size: 32, offset: 32)
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11103, file: !302, line: 384, baseType: !13, size: 32, offset: 64)
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11103, file: !302, line: 386, baseType: !11109, size: 32, offset: 96)
!11109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11110, size: 32)
!11110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !302, line: 351, size: 16, elements: !11111)
!11111 = !{!11112, !11113}
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11110, file: !302, line: 359, baseType: !178, size: 8)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11110, file: !302, line: 364, baseType: !315, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11103, file: !302, line: 388, baseType: !106, size: 32, offset: 128)
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11103, file: !302, line: 396, baseType: !318, size: 32, offset: 160)
!11116 = !DILocation(line: 0, scope: !11097)
!11117 = !DILocation(line: 31, column: 1, scope: !11097)
!11118 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11098, file: !11098, line: 33, type: !11119, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !11121)
!11119 = !DISubroutineType(types: !11120)
!11120 = !{!11101, !305}
!11121 = !{!11122, !11123}
!11122 = !DILocalVariable(name: "name", arg: 1, scope: !11118, file: !11098, line: 33, type: !305)
!11123 = !DILocalVariable(name: "dev", scope: !11118, file: !11098, line: 35, type: !11101)
!11124 = !DILocation(line: 0, scope: !11118)
!11125 = !DILocation(line: 40, column: 12, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11118, file: !11098, line: 40, column: 6)
!11127 = !DILocation(line: 40, column: 21, scope: !11126)
!11128 = !DILocation(line: 40, column: 25, scope: !11126)
!11129 = !DILocation(line: 40, column: 33, scope: !11126)
!11130 = !DILocation(line: 40, column: 6, scope: !11118)
!11131 = !DILocation(line: 55, column: 2, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11118, file: !11098, line: 55, column: 2)
!11133 = !DILocation(line: 50, column: 7, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11135, file: !11098, line: 50, column: 7)
!11135 = distinct !DILexicalBlock(scope: !11136, file: !11098, line: 49, column: 57)
!11136 = distinct !DILexicalBlock(scope: !11137, file: !11098, line: 49, column: 2)
!11137 = distinct !DILexicalBlock(scope: !11118, file: !11098, line: 49, column: 2)
!11138 = !DILocation(line: 50, column: 30, scope: !11134)
!11139 = !DILocation(line: 50, column: 39, scope: !11134)
!11140 = !DILocation(line: 50, column: 44, scope: !11134)
!11141 = !DILocation(line: 50, column: 7, scope: !11135)
!11142 = !DILocation(line: 49, column: 53, scope: !11136)
!11143 = !DILocation(line: 49, column: 33, scope: !11136)
!11144 = !DILocation(line: 49, column: 2, scope: !11137)
!11145 = distinct !{!11145, !11144, !11146}
!11146 = !DILocation(line: 53, column: 2, scope: !11137)
!11147 = !DILocation(line: 56, column: 7, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11149, file: !11098, line: 56, column: 7)
!11149 = distinct !DILexicalBlock(scope: !11150, file: !11098, line: 55, column: 57)
!11150 = distinct !DILexicalBlock(scope: !11132, file: !11098, line: 55, column: 2)
!11151 = !DILocation(line: 56, column: 30, scope: !11148)
!11152 = !DILocation(line: 56, column: 52, scope: !11148)
!11153 = !DILocation(line: 56, column: 34, scope: !11148)
!11154 = !DILocation(line: 56, column: 58, scope: !11148)
!11155 = !DILocation(line: 56, column: 7, scope: !11149)
!11156 = !DILocation(line: 55, column: 53, scope: !11150)
!11157 = !DILocation(line: 55, column: 33, scope: !11150)
!11158 = distinct !{!11158, !11131, !11159}
!11159 = !DILocation(line: 59, column: 2, scope: !11132)
!11160 = !DILocation(line: 62, column: 1, scope: !11118)
!11161 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11098, file: !11098, line: 93, type: !11162, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !11164)
!11162 = !DISubroutineType(types: !11163)
!11163 = !{!315, !11101}
!11164 = !{!11165}
!11165 = !DILocalVariable(name: "dev", arg: 1, scope: !11161, file: !11098, line: 93, type: !11101)
!11166 = !DILocation(line: 0, scope: !11161)
!11167 = !DILocation(line: 99, column: 10, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11161, file: !11098, line: 99, column: 6)
!11169 = !DILocation(line: 99, column: 6, scope: !11161)
!11170 = !DILocation(line: 103, column: 14, scope: !11161)
!11171 = !DILocation(line: 103, column: 21, scope: !11161)
!11172 = !DILocation(line: 103, column: 33, scope: !11161)
!11173 = !DILocation(line: 103, column: 49, scope: !11161)
!11174 = !DILocation(line: 103, column: 58, scope: !11161)
!11175 = !DILocation(line: 104, column: 1, scope: !11161)
!11176 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11098, file: !11098, line: 87, type: !11177, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !11180)
!11177 = !DISubroutineType(types: !11178)
!11178 = !{!107, !11179}
!11179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11101, size: 32)
!11180 = !{!11181}
!11181 = !DILocalVariable(name: "devices", arg: 1, scope: !11176, file: !11098, line: 87, type: !11179)
!11182 = !DILocation(line: 0, scope: !11176)
!11183 = !DILocation(line: 89, column: 11, scope: !11176)
!11184 = !DILocation(line: 90, column: 2, scope: !11176)
!11185 = distinct !DISubprogram(name: "device_required_foreach", scope: !11098, file: !11098, line: 125, type: !11186, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !11192)
!11186 = !DISubroutineType(types: !11187)
!11187 = !{!109, !11101, !11188, !106}
!11188 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !302, line: 471, baseType: !11189)
!11189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11190, size: 32)
!11190 = !DISubroutineType(types: !11191)
!11191 = !{!109, !11101, !106}
!11192 = !{!11193, !11194, !11195, !11196, !11197}
!11193 = !DILocalVariable(name: "dev", arg: 1, scope: !11185, file: !11098, line: 125, type: !11101)
!11194 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11185, file: !11098, line: 126, type: !11188)
!11195 = !DILocalVariable(name: "context", arg: 3, scope: !11185, file: !11098, line: 127, type: !106)
!11196 = !DILocalVariable(name: "handle_count", scope: !11185, file: !11098, line: 129, type: !107)
!11197 = !DILocalVariable(name: "handles", scope: !11185, file: !11098, line: 130, type: !318)
!11198 = !DILocation(line: 0, scope: !11185)
!11199 = !DILocation(line: 129, column: 2, scope: !11185)
!11200 = !DILocation(line: 129, column: 9, scope: !11185)
!11201 = !DILocation(line: 130, column: 35, scope: !11185)
!11202 = !DILocation(line: 132, column: 33, scope: !11185)
!11203 = !DILocation(line: 132, column: 9, scope: !11185)
!11204 = !DILocation(line: 133, column: 1, scope: !11185)
!11205 = !DILocation(line: 132, column: 2, scope: !11185)
!11206 = distinct !DISubprogram(name: "device_required_handles_get", scope: !302, file: !302, line: 493, type: !11207, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !11209)
!11207 = !DISubroutineType(types: !11208)
!11208 = !{!318, !11101, !2454}
!11209 = !{!11210, !11211, !11212, !11213}
!11210 = !DILocalVariable(name: "dev", arg: 1, scope: !11206, file: !302, line: 493, type: !11101)
!11211 = !DILocalVariable(name: "count", arg: 2, scope: !11206, file: !302, line: 493, type: !2454)
!11212 = !DILocalVariable(name: "rv", scope: !11206, file: !302, line: 495, type: !318)
!11213 = !DILocalVariable(name: "i", scope: !11214, file: !302, line: 498, type: !107)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !302, line: 497, column: 18)
!11215 = distinct !DILexicalBlock(scope: !11206, file: !302, line: 497, column: 6)
!11216 = !DILocation(line: 0, scope: !11206)
!11217 = !DILocation(line: 495, column: 35, scope: !11206)
!11218 = !DILocation(line: 497, column: 9, scope: !11215)
!11219 = !DILocation(line: 497, column: 6, scope: !11206)
!11220 = !DILocation(line: 0, scope: !11214)
!11221 = !DILocation(line: 500, column: 11, scope: !11214)
!11222 = !DILocation(line: 500, column: 40, scope: !11214)
!11223 = !DILocation(line: 502, column: 4, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11214, file: !302, line: 501, column: 40)
!11225 = distinct !{!11225, !11226, !11227}
!11226 = !DILocation(line: 500, column: 3, scope: !11214)
!11227 = !DILocation(line: 503, column: 3, scope: !11214)
!11228 = !DILocation(line: 504, column: 10, scope: !11214)
!11229 = !DILocation(line: 505, column: 2, scope: !11214)
!11230 = !DILocation(line: 507, column: 2, scope: !11206)
!11231 = distinct !DISubprogram(name: "device_visitor", scope: !11098, file: !11098, line: 106, type: !11232, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !11234)
!11232 = !DISubroutineType(types: !11233)
!11233 = !{!109, !318, !107, !11188, !106}
!11234 = !{!11235, !11236, !11237, !11238, !11239, !11241, !11244, !11245}
!11235 = !DILocalVariable(name: "handles", arg: 1, scope: !11231, file: !11098, line: 106, type: !318)
!11236 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11231, file: !11098, line: 107, type: !107)
!11237 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11231, file: !11098, line: 108, type: !11188)
!11238 = !DILocalVariable(name: "context", arg: 4, scope: !11231, file: !11098, line: 109, type: !106)
!11239 = !DILocalVariable(name: "i", scope: !11240, file: !11098, line: 112, type: !107)
!11240 = distinct !DILexicalBlock(scope: !11231, file: !11098, line: 112, column: 2)
!11241 = !DILocalVariable(name: "dh", scope: !11242, file: !11098, line: 113, type: !320)
!11242 = distinct !DILexicalBlock(scope: !11243, file: !11098, line: 112, column: 44)
!11243 = distinct !DILexicalBlock(scope: !11240, file: !11098, line: 112, column: 2)
!11244 = !DILocalVariable(name: "rdev", scope: !11242, file: !11098, line: 114, type: !11101)
!11245 = !DILocalVariable(name: "rc", scope: !11242, file: !11098, line: 115, type: !109)
!11246 = !DILocation(line: 0, scope: !11231)
!11247 = !DILocation(line: 0, scope: !11240)
!11248 = !DILocation(line: 112, column: 23, scope: !11243)
!11249 = !DILocation(line: 112, column: 2, scope: !11240)
!11250 = distinct !{!11250, !11249, !11251}
!11251 = !DILocation(line: 120, column: 2, scope: !11240)
!11252 = !DILocation(line: 113, column: 24, scope: !11242)
!11253 = !DILocation(line: 0, scope: !11242)
!11254 = !DILocation(line: 114, column: 31, scope: !11242)
!11255 = !DILocation(line: 115, column: 12, scope: !11242)
!11256 = !DILocation(line: 117, column: 10, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11242, file: !11098, line: 117, column: 7)
!11258 = !DILocation(line: 112, column: 39, scope: !11243)
!11259 = !DILocation(line: 123, column: 1, scope: !11231)
!11260 = distinct !DISubprogram(name: "device_from_handle", scope: !302, file: !302, line: 439, type: !11261, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !11263)
!11261 = !DISubroutineType(types: !11262)
!11262 = !{!11101, !320}
!11263 = !{!11264, !11265, !11266}
!11264 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11260, file: !302, line: 439, type: !320)
!11265 = !DILocalVariable(name: "dev", scope: !11260, file: !302, line: 443, type: !11101)
!11266 = !DILocalVariable(name: "numdev", scope: !11260, file: !302, line: 444, type: !107)
!11267 = !DILocation(line: 0, scope: !11260)
!11268 = !DILocation(line: 446, column: 7, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11260, file: !302, line: 446, column: 6)
!11270 = !DILocation(line: 446, column: 18, scope: !11269)
!11271 = !DILocation(line: 446, column: 23, scope: !11269)
!11272 = !DILocation(line: 450, column: 2, scope: !11260)
!11273 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11098, file: !11098, line: 135, type: !11186, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !11274)
!11274 = !{!11275, !11276, !11277, !11278, !11279}
!11275 = !DILocalVariable(name: "dev", arg: 1, scope: !11273, file: !11098, line: 135, type: !11101)
!11276 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11273, file: !11098, line: 136, type: !11188)
!11277 = !DILocalVariable(name: "context", arg: 3, scope: !11273, file: !11098, line: 137, type: !106)
!11278 = !DILocalVariable(name: "handle_count", scope: !11273, file: !11098, line: 139, type: !107)
!11279 = !DILocalVariable(name: "handles", scope: !11273, file: !11098, line: 140, type: !318)
!11280 = !DILocation(line: 0, scope: !11273)
!11281 = !DILocation(line: 139, column: 2, scope: !11273)
!11282 = !DILocation(line: 139, column: 9, scope: !11273)
!11283 = !DILocation(line: 140, column: 35, scope: !11273)
!11284 = !DILocation(line: 142, column: 33, scope: !11273)
!11285 = !DILocation(line: 142, column: 9, scope: !11273)
!11286 = !DILocation(line: 143, column: 1, scope: !11273)
!11287 = !DILocation(line: 142, column: 2, scope: !11273)
!11288 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !302, file: !302, line: 573, type: !11207, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !11289)
!11289 = !{!11290, !11291, !11292, !11293, !11294}
!11290 = !DILocalVariable(name: "dev", arg: 1, scope: !11288, file: !302, line: 573, type: !11101)
!11291 = !DILocalVariable(name: "count", arg: 2, scope: !11288, file: !302, line: 573, type: !2454)
!11292 = !DILocalVariable(name: "rv", scope: !11288, file: !302, line: 575, type: !318)
!11293 = !DILocalVariable(name: "region", scope: !11288, file: !302, line: 576, type: !107)
!11294 = !DILocalVariable(name: "i", scope: !11288, file: !302, line: 577, type: !107)
!11295 = !DILocation(line: 0, scope: !11288)
!11296 = !DILocation(line: 575, column: 35, scope: !11288)
!11297 = !DILocation(line: 579, column: 9, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11288, file: !302, line: 579, column: 6)
!11299 = !DILocation(line: 579, column: 6, scope: !11288)
!11300 = !DILocation(line: 582, column: 8, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11302, file: !302, line: 582, column: 8)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !302, line: 581, column: 23)
!11303 = distinct !DILexicalBlock(scope: !11298, file: !302, line: 579, column: 18)
!11304 = !DILocation(line: 582, column: 12, scope: !11301)
!11305 = !DILocation(line: 585, column: 6, scope: !11302)
!11306 = !DILocation(line: 0, scope: !11303)
!11307 = !DILocation(line: 581, column: 17, scope: !11303)
!11308 = !DILocation(line: 581, column: 3, scope: !11303)
!11309 = !DILocation(line: 588, column: 10, scope: !11303)
!11310 = !DILocation(line: 588, column: 16, scope: !11303)
!11311 = !DILocation(line: 589, column: 4, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11303, file: !302, line: 588, column: 39)
!11313 = !DILocation(line: 588, column: 3, scope: !11303)
!11314 = distinct !{!11314, !11313, !11315}
!11315 = !DILocation(line: 590, column: 3, scope: !11303)
!11316 = !DILocation(line: 591, column: 10, scope: !11303)
!11317 = !DILocation(line: 592, column: 2, scope: !11303)
!11318 = !DILocation(line: 575, column: 25, scope: !11288)
!11319 = !DILocation(line: 594, column: 2, scope: !11288)
!11320 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1849, file: !1849, line: 49, type: !11321, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1846, retainedNodes: !251)
!11321 = !DISubroutineType(types: !11322)
!11322 = !{!2447}
!11323 = !DILocation(line: 51, column: 10, scope: !11320)
!11324 = !DILocation(line: 51, column: 20, scope: !11320)
!11325 = !DILocation(line: 51, column: 2, scope: !11320)
!11326 = distinct !DISubprogram(name: "coredump", scope: !2947, file: !2947, line: 209, type: !11327, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11475)
!11327 = !DISubroutineType(types: !11328)
!11328 = !{null, !32, !11329, !11373}
!11329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11330, size: 32)
!11330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11331)
!11331 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2579, line: 141, baseType: !11332)
!11332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2579, line: 97, size: 256, elements: !11333)
!11333 = !{!11334}
!11334 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11332, file: !2579, line: 107, baseType: !11335, size: 256)
!11335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2579, line: 98, size: 256, elements: !11336)
!11336 = !{!11337, !11342, !11347, !11352, !11357, !11362, !11367, !11372}
!11337 = !DIDerivedType(tag: DW_TAG_member, scope: !11335, file: !2579, line: 99, baseType: !11338, size: 32)
!11338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11335, file: !2579, line: 99, size: 32, elements: !11339)
!11339 = !{!11340, !11341}
!11340 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11338, file: !2579, line: 99, baseType: !110, size: 32)
!11341 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11338, file: !2579, line: 99, baseType: !110, size: 32)
!11342 = !DIDerivedType(tag: DW_TAG_member, scope: !11335, file: !2579, line: 100, baseType: !11343, size: 32, offset: 32)
!11343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11335, file: !2579, line: 100, size: 32, elements: !11344)
!11344 = !{!11345, !11346}
!11345 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11343, file: !2579, line: 100, baseType: !110, size: 32)
!11346 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11343, file: !2579, line: 100, baseType: !110, size: 32)
!11347 = !DIDerivedType(tag: DW_TAG_member, scope: !11335, file: !2579, line: 101, baseType: !11348, size: 32, offset: 64)
!11348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11335, file: !2579, line: 101, size: 32, elements: !11349)
!11349 = !{!11350, !11351}
!11350 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11348, file: !2579, line: 101, baseType: !110, size: 32)
!11351 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11348, file: !2579, line: 101, baseType: !110, size: 32)
!11352 = !DIDerivedType(tag: DW_TAG_member, scope: !11335, file: !2579, line: 102, baseType: !11353, size: 32, offset: 96)
!11353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11335, file: !2579, line: 102, size: 32, elements: !11354)
!11354 = !{!11355, !11356}
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11353, file: !2579, line: 102, baseType: !110, size: 32)
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11353, file: !2579, line: 102, baseType: !110, size: 32)
!11357 = !DIDerivedType(tag: DW_TAG_member, scope: !11335, file: !2579, line: 103, baseType: !11358, size: 32, offset: 128)
!11358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11335, file: !2579, line: 103, size: 32, elements: !11359)
!11359 = !{!11360, !11361}
!11360 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11358, file: !2579, line: 103, baseType: !110, size: 32)
!11361 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11358, file: !2579, line: 103, baseType: !110, size: 32)
!11362 = !DIDerivedType(tag: DW_TAG_member, scope: !11335, file: !2579, line: 104, baseType: !11363, size: 32, offset: 160)
!11363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11335, file: !2579, line: 104, size: 32, elements: !11364)
!11364 = !{!11365, !11366}
!11365 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11363, file: !2579, line: 104, baseType: !110, size: 32)
!11366 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11363, file: !2579, line: 104, baseType: !110, size: 32)
!11367 = !DIDerivedType(tag: DW_TAG_member, scope: !11335, file: !2579, line: 105, baseType: !11368, size: 32, offset: 192)
!11368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11335, file: !2579, line: 105, size: 32, elements: !11369)
!11369 = !{!11370, !11371}
!11370 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11368, file: !2579, line: 105, baseType: !110, size: 32)
!11371 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11368, file: !2579, line: 105, baseType: !110, size: 32)
!11372 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11335, file: !2579, line: 106, baseType: !110, size: 32, offset: 224)
!11373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11374, size: 32)
!11374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1344, elements: !11375)
!11375 = !{!11376, !11435, !11447, !11448, !11449, !11450, !11451, !11457, !11470}
!11376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11374, file: !156, line: 247, baseType: !11377, size: 448)
!11377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 448, elements: !11378)
!11378 = !{!11379, !11403, !11410, !11411, !11412, !11421, !11422, !11423, !11424}
!11379 = !DIDerivedType(tag: DW_TAG_member, scope: !11377, file: !156, line: 60, baseType: !11380, size: 64)
!11380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11377, file: !156, line: 60, size: 64, elements: !11381)
!11381 = !{!11382, !11397}
!11382 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11380, file: !156, line: 61, baseType: !11383, size: 64)
!11383 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !11384)
!11384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !11385)
!11385 = !{!11386, !11392}
!11386 = !DIDerivedType(tag: DW_TAG_member, scope: !11384, file: !127, line: 38, baseType: !11387, size: 32)
!11387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11384, file: !127, line: 38, size: 32, elements: !11388)
!11388 = !{!11389, !11391}
!11389 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11387, file: !127, line: 39, baseType: !11390, size: 32)
!11390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11384, size: 32)
!11391 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11387, file: !127, line: 40, baseType: !11390, size: 32)
!11392 = !DIDerivedType(tag: DW_TAG_member, scope: !11384, file: !127, line: 42, baseType: !11393, size: 32, offset: 32)
!11393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11384, file: !127, line: 42, size: 32, elements: !11394)
!11394 = !{!11395, !11396}
!11395 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11393, file: !127, line: 43, baseType: !11390, size: 32)
!11396 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11393, file: !127, line: 44, baseType: !11390, size: 32)
!11397 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11380, file: !156, line: 62, baseType: !11398, size: 64)
!11398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !11399)
!11399 = !{!11400}
!11400 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11398, file: !168, line: 50, baseType: !11401, size: 64)
!11401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11402, size: 64, elements: !173)
!11402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11398, size: 32)
!11403 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11377, file: !156, line: 68, baseType: !11404, size: 32, offset: 64)
!11404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11405, size: 32)
!11405 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !11406)
!11406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !11407)
!11407 = !{!11408}
!11408 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11406, file: !122, line: 232, baseType: !11409, size: 64)
!11409 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !11384)
!11410 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11377, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!11411 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11377, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!11412 = !DIDerivedType(tag: DW_TAG_member, scope: !11377, file: !156, line: 90, baseType: !11413, size: 16, offset: 112)
!11413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11377, file: !156, line: 90, size: 16, elements: !11414)
!11414 = !{!11415, !11420}
!11415 = !DIDerivedType(tag: DW_TAG_member, scope: !11413, file: !156, line: 91, baseType: !11416, size: 16)
!11416 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11413, file: !156, line: 91, size: 16, elements: !11417)
!11417 = !{!11418, !11419}
!11418 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11416, file: !156, line: 96, baseType: !188, size: 8)
!11419 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11416, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!11420 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11413, file: !156, line: 100, baseType: !192, size: 16)
!11421 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11377, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!11422 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_mask", scope: !11377, file: !156, line: 123, baseType: !178, size: 8, offset: 160)
!11423 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11377, file: !156, line: 127, baseType: !106, size: 32, offset: 192)
!11424 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11377, file: !156, line: 131, baseType: !11425, size: 192, offset: 256)
!11425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !11426)
!11426 = !{!11427, !11428, !11434}
!11427 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11425, file: !122, line: 245, baseType: !11383, size: 64)
!11428 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11425, file: !122, line: 246, baseType: !11429, size: 32, offset: 64)
!11429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !11430)
!11430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11431, size: 32)
!11431 = !DISubroutineType(types: !11432)
!11432 = !{null, !11433}
!11433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11425, size: 32)
!11434 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11425, file: !122, line: 249, baseType: !104, size: 64, offset: 128)
!11435 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11374, file: !156, line: 250, baseType: !11436, size: 288, offset: 448)
!11436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !11437)
!11437 = !{!11438, !11439, !11440, !11441, !11442, !11443, !11444, !11445, !11446}
!11438 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11436, file: !210, line: 26, baseType: !110, size: 32)
!11439 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11436, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!11440 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11436, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!11441 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11436, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!11442 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11436, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!11443 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11436, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!11444 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11436, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!11445 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11436, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11436, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!11447 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11374, file: !156, line: 253, baseType: !106, size: 32, offset: 736)
!11448 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11374, file: !156, line: 256, baseType: !11405, size: 64, offset: 768)
!11449 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11374, file: !156, line: 279, baseType: !224, size: 256, offset: 832)
!11450 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11374, file: !156, line: 294, baseType: !109, size: 32, offset: 1088)
!11451 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11374, file: !156, line: 300, baseType: !11452, size: 96, offset: 1120)
!11452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !11453)
!11453 = !{!11454, !11455, !11456}
!11454 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11452, file: !156, line: 153, baseType: !22, size: 32)
!11455 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11452, file: !156, line: 162, baseType: !107, size: 32, offset: 32)
!11456 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11452, file: !156, line: 168, baseType: !107, size: 32, offset: 64)
!11457 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11374, file: !156, line: 325, baseType: !11458, size: 32, offset: 1216)
!11458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11459, size: 32)
!11459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 160, elements: !11460)
!11460 = !{!11461, !11467, !11468}
!11461 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11459, file: !118, line: 5074, baseType: !11462, size: 96)
!11462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !11463)
!11463 = !{!11464, !11465, !11466}
!11464 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11462, file: !240, line: 57, baseType: !243, size: 32)
!11465 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11462, file: !240, line: 58, baseType: !106, size: 32, offset: 32)
!11466 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11462, file: !240, line: 59, baseType: !107, size: 32, offset: 64)
!11467 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11459, file: !118, line: 5075, baseType: !11405, size: 64, offset: 96)
!11468 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11459, file: !118, line: 5076, baseType: !11469, offset: 160)
!11469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!11470 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11374, file: !156, line: 343, baseType: !11471, size: 64, offset: 1248)
!11471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !210, line: 60, size: 64, elements: !11472)
!11472 = !{!11473, !11474}
!11473 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11471, file: !210, line: 63, baseType: !110, size: 32)
!11474 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11471, file: !210, line: 66, baseType: !110, size: 32, offset: 32)
!11475 = !{!11476, !11477, !11478}
!11476 = !DILocalVariable(name: "reason", arg: 1, scope: !11326, file: !2947, line: 209, type: !32)
!11477 = !DILocalVariable(name: "esf", arg: 2, scope: !11326, file: !2947, line: 209, type: !11329)
!11478 = !DILocalVariable(name: "thread", arg: 3, scope: !11326, file: !2947, line: 210, type: !11373)
!11479 = !DILocation(line: 0, scope: !11326)
!11480 = !DILocation(line: 212, column: 1, scope: !11326)
!11481 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2947, file: !2947, line: 214, type: !11482, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11484)
!11482 = !DISubroutineType(types: !11483)
!11483 = !{null, !22, !22}
!11484 = !{!11485, !11486}
!11485 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11481, file: !2947, line: 214, type: !22)
!11486 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11481, file: !2947, line: 214, type: !22)
!11487 = !DILocation(line: 0, scope: !11481)
!11488 = !DILocation(line: 216, column: 1, scope: !11481)
!11489 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2947, file: !2947, line: 218, type: !11490, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11492)
!11490 = !DISubroutineType(types: !11491)
!11491 = !{null, !1890, !107}
!11492 = !{!11493, !11494}
!11493 = !DILocalVariable(name: "buf", arg: 1, scope: !11489, file: !2947, line: 218, type: !1890)
!11494 = !DILocalVariable(name: "buflen", arg: 2, scope: !11489, file: !2947, line: 218, type: !107)
!11495 = !DILocation(line: 0, scope: !11489)
!11496 = !DILocation(line: 220, column: 1, scope: !11489)
!11497 = distinct !DISubprogram(name: "coredump_query", scope: !2947, file: !2947, line: 222, type: !11498, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11500)
!11498 = !DISubroutineType(types: !11499)
!11499 = !{!109, !2946, !106}
!11500 = !{!11501, !11502}
!11501 = !DILocalVariable(name: "query_id", arg: 1, scope: !11497, file: !2947, line: 222, type: !2946)
!11502 = !DILocalVariable(name: "arg", arg: 2, scope: !11497, file: !2947, line: 222, type: !106)
!11503 = !DILocation(line: 0, scope: !11497)
!11504 = !DILocation(line: 224, column: 2, scope: !11497)
!11505 = distinct !DISubprogram(name: "coredump_cmd", scope: !2947, file: !2947, line: 227, type: !11506, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11508)
!11506 = !DISubroutineType(types: !11507)
!11507 = !{!109, !2953, !106}
!11508 = !{!11509, !11510}
!11509 = !DILocalVariable(name: "query_id", arg: 1, scope: !11505, file: !2947, line: 227, type: !2953)
!11510 = !DILocalVariable(name: "arg", arg: 2, scope: !11505, file: !2947, line: 227, type: !106)
!11511 = !DILocation(line: 0, scope: !11505)
!11512 = !DILocation(line: 229, column: 2, scope: !11505)
!11513 = distinct !DISubprogram(name: "arch_system_halt", scope: !11514, file: !11514, line: 23, type: !4966, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11515)
!11514 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11515 = !{!11516}
!11516 = !DILocalVariable(name: "reason", arg: 1, scope: !11513, file: !11514, line: 23, type: !32)
!11517 = !DILocation(line: 0, scope: !11513)
!11518 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !11523)
!11519 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4955, file: !4955, line: 42, type: !4956, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11520)
!11520 = !{!11521, !11522}
!11521 = !DILocalVariable(name: "key", scope: !11519, file: !4955, line: 44, type: !32)
!11522 = !DILocalVariable(name: "tmp", scope: !11519, file: !4955, line: 53, type: !32)
!11523 = distinct !DILocation(line: 31, column: 8, scope: !11513)
!11524 = !{i64 2279943}
!11525 = !DILocation(line: 0, scope: !11519, inlinedAt: !11523)
!11526 = !DILocation(line: 32, column: 2, scope: !11513)
!11527 = !DILocation(line: 32, column: 2, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !11514, line: 32, column: 2)
!11529 = distinct !DILexicalBlock(scope: !11513, file: !11514, line: 32, column: 2)
!11530 = distinct !{!11530, !11531, !11532}
!11531 = !DILocation(line: 32, column: 2, scope: !11529)
!11532 = !DILocation(line: 34, column: 2, scope: !11529)
!11533 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11514, file: !11514, line: 39, type: !11534, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11536)
!11534 = !DISubroutineType(types: !11535)
!11535 = !{null, !32, !11329}
!11536 = !{!11537, !11538}
!11537 = !DILocalVariable(name: "reason", arg: 1, scope: !11533, file: !11514, line: 39, type: !32)
!11538 = !DILocalVariable(name: "esf", arg: 2, scope: !11533, file: !11514, line: 40, type: !11329)
!11539 = !DILocation(line: 0, scope: !11533)
!11540 = !DILocation(line: 46, column: 2, scope: !11533)
!11541 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11514, file: !11514, line: 81, type: !4966, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11542)
!11542 = !{!11543}
!11543 = !DILocalVariable(name: "reason", arg: 1, scope: !11541, file: !11514, line: 81, type: !32)
!11544 = !DILocation(line: 0, scope: !11541)
!11545 = !DILocation(line: 83, column: 2, scope: !11541)
!11546 = distinct !DISubprogram(name: "z_fatal_error", scope: !11514, file: !11514, line: 96, type: !11534, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11547)
!11547 = !{!11548, !11549, !11550, !11551}
!11548 = !DILocalVariable(name: "reason", arg: 1, scope: !11546, file: !11514, line: 96, type: !32)
!11549 = !DILocalVariable(name: "esf", arg: 2, scope: !11546, file: !11514, line: 96, type: !11329)
!11550 = !DILocalVariable(name: "key", scope: !11546, file: !11514, line: 102, type: !32)
!11551 = !DILocalVariable(name: "thread", scope: !11546, file: !11514, line: 103, type: !11373)
!11552 = !DILocation(line: 0, scope: !11546)
!11553 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !11554)
!11554 = distinct !DILocation(line: 102, column: 21, scope: !11546)
!11555 = !DILocation(line: 0, scope: !11519, inlinedAt: !11554)
!11556 = !DILocation(line: 119, column: 11, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11546, file: !11514, line: 119, column: 6)
!11558 = !DILocation(line: 119, column: 20, scope: !11557)
!11559 = !DILocation(line: 131, column: 2, scope: !11546)
!11560 = !DILocation(line: 151, column: 7, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11562, file: !11514, line: 146, column: 32)
!11562 = distinct !DILexicalBlock(scope: !11546, file: !11514, line: 146, column: 6)
!11563 = !DILocation(line: 151, column: 21, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11561, file: !11514, line: 151, column: 7)
!11565 = !DILocation(line: 104, column: 4, scope: !11546)
!11566 = !DILocalVariable(name: "key", arg: 1, scope: !11567, file: !4955, line: 84, type: !32)
!11567 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4955, file: !4955, line: 84, type: !4966, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11568)
!11568 = !{!11566}
!11569 = !DILocation(line: 0, scope: !11567, inlinedAt: !11570)
!11570 = distinct !DILocation(line: 186, column: 2, scope: !11546)
!11571 = !DILocation(line: 95, column: 2, scope: !11567, inlinedAt: !11570)
!11572 = !{i64 2280760}
!11573 = !DILocation(line: 189, column: 3, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11575, file: !11514, line: 188, column: 41)
!11575 = distinct !DILexicalBlock(scope: !11546, file: !11514, line: 188, column: 6)
!11576 = !DILocation(line: 191, column: 1, scope: !11546)
!11577 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !11578, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !251)
!11578 = !DISubroutineType(types: !11579)
!11579 = !{!11580}
!11580 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !11373)
!11581 = !DILocation(line: 535, column: 9, scope: !11577)
!11582 = !DILocation(line: 535, column: 2, scope: !11577)
!11583 = distinct !DISubprogram(name: "k_thread_abort", scope: !3123, file: !3123, line: 188, type: !11584, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !11586)
!11584 = !DISubroutineType(types: !11585)
!11585 = !{null, !11580}
!11586 = !{!11587}
!11587 = !DILocalVariable(name: "thread", arg: 1, scope: !11583, file: !3123, line: 188, type: !11580)
!11588 = !DILocation(line: 0, scope: !11583)
!11589 = !DILocation(line: 197, column: 2, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11583, file: !3123, line: 197, column: 2)
!11591 = !{i64 2155061517}
!11592 = !DILocation(line: 198, column: 2, scope: !11583)
!11593 = !DILocation(line: 199, column: 1, scope: !11583)
!11594 = distinct !DISubprogram(name: "z_current_get", scope: !3123, file: !3123, line: 173, type: !11578, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2943, retainedNodes: !251)
!11595 = !DILocation(line: 180, column: 2, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11594, file: !3123, line: 180, column: 2)
!11597 = !{i64 2155061449}
!11598 = !DILocation(line: 181, column: 9, scope: !11594)
!11599 = !DILocation(line: 181, column: 2, scope: !11594)
!11600 = distinct !DISubprogram(name: "z_early_memset", scope: !1857, file: !1857, line: 108, type: !11601, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11603)
!11601 = !DISubroutineType(types: !11602)
!11602 = !{null, !106, !109, !107}
!11603 = !{!11604, !11605, !11606}
!11604 = !DILocalVariable(name: "dst", arg: 1, scope: !11600, file: !1857, line: 108, type: !106)
!11605 = !DILocalVariable(name: "c", arg: 2, scope: !11600, file: !1857, line: 108, type: !109)
!11606 = !DILocalVariable(name: "n", arg: 3, scope: !11600, file: !1857, line: 108, type: !107)
!11607 = !DILocation(line: 0, scope: !11600)
!11608 = !DILocation(line: 110, column: 9, scope: !11600)
!11609 = !DILocation(line: 111, column: 1, scope: !11600)
!11610 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1857, file: !1857, line: 121, type: !11611, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11613)
!11611 = !DISubroutineType(types: !11612)
!11612 = !{null, !106, !13, !107}
!11613 = !{!11614, !11615, !11616}
!11614 = !DILocalVariable(name: "dst", arg: 1, scope: !11610, file: !1857, line: 121, type: !106)
!11615 = !DILocalVariable(name: "src", arg: 2, scope: !11610, file: !1857, line: 121, type: !13)
!11616 = !DILocalVariable(name: "n", arg: 3, scope: !11610, file: !1857, line: 121, type: !107)
!11617 = !DILocation(line: 0, scope: !11610)
!11618 = !DILocation(line: 123, column: 9, scope: !11610)
!11619 = !DILocation(line: 124, column: 1, scope: !11610)
!11620 = distinct !DISubprogram(name: "z_bss_zero", scope: !1857, file: !1857, line: 132, type: !2980, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !251)
!11621 = !DILocation(line: 143, column: 2, scope: !11620)
!11622 = !DILocation(line: 168, column: 1, scope: !11620)
!11623 = distinct !DISubprogram(name: "z_init_cpu", scope: !1857, file: !1857, line: 372, type: !6776, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11624)
!11624 = !{!11625}
!11625 = !DILocalVariable(name: "id", arg: 1, scope: !11623, file: !1857, line: 372, type: !109)
!11626 = !DILocation(line: 0, scope: !11623)
!11627 = !DILocation(line: 374, column: 2, scope: !11623)
!11628 = !DILocation(line: 375, column: 34, scope: !11623)
!11629 = !DILocation(line: 375, column: 19, scope: !11623)
!11630 = !DILocation(line: 375, column: 31, scope: !11623)
!11631 = !DILocation(line: 376, column: 24, scope: !11623)
!11632 = !DILocation(line: 376, column: 19, scope: !11623)
!11633 = !DILocation(line: 376, column: 22, scope: !11623)
!11634 = !DILocation(line: 378, column: 26, scope: !11623)
!11635 = !DILocation(line: 378, column: 4, scope: !11623)
!11636 = !DILocation(line: 378, column: 50, scope: !11623)
!11637 = !DILocation(line: 377, column: 19, scope: !11623)
!11638 = !DILocation(line: 377, column: 29, scope: !11623)
!11639 = !DILocation(line: 384, column: 1, scope: !11623)
!11640 = distinct !DISubprogram(name: "init_idle_thread", scope: !1857, file: !1857, line: 343, type: !6776, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11641)
!11641 = !{!11642, !11643, !11644, !11647}
!11642 = !DILocalVariable(name: "i", arg: 1, scope: !11640, file: !1857, line: 343, type: !109)
!11643 = !DILocalVariable(name: "thread", scope: !11640, file: !1857, line: 345, type: !1950)
!11644 = !DILocalVariable(name: "stack", scope: !11640, file: !1857, line: 346, type: !11645)
!11645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11646, size: 32)
!11646 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3223, line: 44, baseType: !2066)
!11647 = !DILocalVariable(name: "tname", scope: !11640, file: !1857, line: 354, type: !1134)
!11648 = !DILocation(line: 0, scope: !11640)
!11649 = !DILocation(line: 345, column: 29, scope: !11640)
!11650 = !DILocation(line: 346, column: 28, scope: !11640)
!11651 = !DILocation(line: 362, column: 37, scope: !11640)
!11652 = !DILocation(line: 362, column: 36, scope: !11640)
!11653 = !DILocation(line: 361, column: 2, scope: !11640)
!11654 = !DILocation(line: 365, column: 2, scope: !11640)
!11655 = !DILocation(line: 370, column: 1, scope: !11640)
!11656 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !11657, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11659)
!11657 = !DISubroutineType(types: !11658)
!11658 = !{!1134, !11645}
!11659 = !{!11660}
!11660 = !DILocalVariable(name: "sym", arg: 1, scope: !11656, file: !147, line: 331, type: !11645)
!11661 = !DILocation(line: 0, scope: !11656)
!11662 = !DILocation(line: 333, column: 21, scope: !11656)
!11663 = !DILocation(line: 333, column: 2, scope: !11656)
!11664 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11665, file: !11665, line: 155, type: !11666, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11668)
!11665 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11666 = !DISubroutineType(types: !11667)
!11667 = !{null, !1950}
!11668 = !{!11669}
!11669 = !DILocalVariable(name: "thread", arg: 1, scope: !11664, file: !11665, line: 155, type: !1950)
!11670 = !DILocation(line: 0, scope: !11664)
!11671 = !DILocation(line: 157, column: 15, scope: !11664)
!11672 = !DILocation(line: 157, column: 28, scope: !11664)
!11673 = !DILocation(line: 158, column: 1, scope: !11664)
!11674 = distinct !DISubprogram(name: "z_cstart", scope: !1857, file: !1857, line: 501, type: !2980, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11675)
!11675 = !{!11676}
!11676 = !DILocalVariable(name: "dummy_thread", scope: !11674, file: !1857, line: 518, type: !1951)
!11677 = !DILocation(line: 507, column: 2, scope: !11674)
!11678 = !DILocation(line: 43, column: 14, scope: !11679, inlinedAt: !11683)
!11679 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11680, file: !11680, line: 40, type: !2980, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11681)
!11680 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11681 = !{!11682}
!11682 = !DILocalVariable(name: "msp", scope: !11679, file: !11680, line: 42, type: !110)
!11683 = distinct !DILocation(line: 44, column: 2, scope: !11684, inlinedAt: !11686)
!11684 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11685, file: !11685, line: 42, type: !2980, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !251)
!11685 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11686 = distinct !DILocation(line: 510, column: 2, scope: !11674)
!11687 = !DILocation(line: 43, column: 3, scope: !11679, inlinedAt: !11683)
!11688 = !DILocation(line: 43, column: 60, scope: !11679, inlinedAt: !11683)
!11689 = !DILocation(line: 0, scope: !11679, inlinedAt: !11683)
!11690 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11691, file: !5129, line: 1153, type: !110)
!11691 = distinct !DISubprogram(name: "__set_MSP", scope: !5129, file: !5129, line: 1153, type: !3146, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11692)
!11692 = !{!11690}
!11693 = !DILocation(line: 0, scope: !11691, inlinedAt: !11694)
!11694 = distinct !DILocation(line: 46, column: 2, scope: !11679, inlinedAt: !11683)
!11695 = !DILocation(line: 1155, column: 3, scope: !11691, inlinedAt: !11694)
!11696 = !{i64 3745882}
!11697 = !DILocation(line: 62, column: 11, scope: !11679, inlinedAt: !11683)
!11698 = !DILocation(line: 102, column: 2, scope: !11699, inlinedAt: !11700)
!11699 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !5925, file: !5925, line: 97, type: !2980, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !251)
!11700 = distinct !DILocation(line: 45, column: 2, scope: !11684, inlinedAt: !11686)
!11701 = !DILocation(line: 108, column: 2, scope: !11699, inlinedAt: !11700)
!11702 = !DILocation(line: 112, column: 2, scope: !11699, inlinedAt: !11700)
!11703 = !DILocation(line: 113, column: 2, scope: !11699, inlinedAt: !11700)
!11704 = !DILocation(line: 114, column: 2, scope: !11699, inlinedAt: !11700)
!11705 = !DILocation(line: 116, column: 2, scope: !11699, inlinedAt: !11700)
!11706 = !DILocation(line: 123, column: 13, scope: !11699, inlinedAt: !11700)
!11707 = !DILocation(line: 46, column: 2, scope: !11684, inlinedAt: !11686)
!11708 = !DILocation(line: 47, column: 2, scope: !11684, inlinedAt: !11686)
!11709 = !DILocation(line: 174, column: 12, scope: !11710, inlinedAt: !11711)
!11710 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !5925, file: !5925, line: 169, type: !2980, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !251)
!11711 = distinct !DILocation(line: 48, column: 2, scope: !11684, inlinedAt: !11686)
!11712 = !DILocation(line: 179, column: 12, scope: !11710, inlinedAt: !11711)
!11713 = !DILocation(line: 50, column: 2, scope: !11684, inlinedAt: !11686)
!11714 = !DILocation(line: 57, column: 2, scope: !11684, inlinedAt: !11686)
!11715 = !DILocation(line: 518, column: 2, scope: !11674)
!11716 = !DILocation(line: 518, column: 18, scope: !11674)
!11717 = !DILocation(line: 520, column: 2, scope: !11674)
!11718 = !DILocation(line: 523, column: 2, scope: !11674)
!11719 = !DILocation(line: 526, column: 2, scope: !11674)
!11720 = !DILocation(line: 527, column: 2, scope: !11674)
!11721 = !DILocation(line: 543, column: 24, scope: !11674)
!11722 = !DILocation(line: 543, column: 2, scope: !11674)
!11723 = !DILocation(line: 0, scope: !2083)
!11724 = !DILocation(line: 246, column: 15, scope: !2101)
!11725 = !DILocation(line: 246, column: 36, scope: !2100)
!11726 = !DILocation(line: 246, column: 2, scope: !2101)
!11727 = !DILocation(line: 247, column: 37, scope: !2099)
!11728 = !DILocation(line: 0, scope: !2099)
!11729 = !DILocation(line: 248, column: 19, scope: !2099)
!11730 = !DILocation(line: 248, column: 12, scope: !2099)
!11731 = !DILocation(line: 250, column: 11, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !2099, file: !1857, line: 250, column: 7)
!11733 = !DILocation(line: 250, column: 7, scope: !2099)
!11734 = !DILocation(line: 254, column: 11, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11736, file: !1857, line: 254, column: 8)
!11736 = distinct !DILexicalBlock(scope: !11732, file: !1857, line: 250, column: 20)
!11737 = !DILocation(line: 254, column: 8, scope: !11736)
!11738 = !DILocation(line: 255, column: 9, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11735, file: !1857, line: 254, column: 17)
!11740 = !DILocation(line: 258, column: 9, scope: !11739)
!11741 = !DILocation(line: 261, column: 28, scope: !11739)
!11742 = !DILocation(line: 261, column: 10, scope: !11739)
!11743 = !DILocation(line: 261, column: 17, scope: !11739)
!11744 = !DILocation(line: 261, column: 26, scope: !11739)
!11745 = !DILocation(line: 262, column: 4, scope: !11739)
!11746 = !DILocation(line: 263, column: 9, scope: !11736)
!11747 = !DILocation(line: 263, column: 16, scope: !11736)
!11748 = !DILocation(line: 263, column: 28, scope: !11736)
!11749 = !DILocation(line: 264, column: 3, scope: !11736)
!11750 = !DILocation(line: 246, column: 60, scope: !2100)
!11751 = distinct !{!11751, !11726, !11752}
!11752 = !DILocation(line: 265, column: 2, scope: !2101)
!11753 = !DILocation(line: 266, column: 1, scope: !2083)
!11754 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !5163, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11755)
!11755 = !{!11756, !11757}
!11756 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11754, file: !495, line: 1814, type: !760)
!11757 = !DILocalVariable(name: "priority", arg: 2, scope: !11754, file: !495, line: 1814, type: !110)
!11758 = !DILocation(line: 0, scope: !11754)
!11759 = !DILocation(line: 1822, column: 48, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11761, file: !495, line: 1821, column: 3)
!11761 = distinct !DILexicalBlock(scope: !11754, file: !495, line: 1816, column: 7)
!11762 = !DILocation(line: 1822, column: 32, scope: !11760)
!11763 = !DILocation(line: 1822, column: 40, scope: !11760)
!11764 = !DILocation(line: 1822, column: 5, scope: !11760)
!11765 = !DILocation(line: 1822, column: 46, scope: !11760)
!11766 = !DILocation(line: 1824, column: 1, scope: !11754)
!11767 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11685, file: !11685, line: 32, type: !2980, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!11768 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11769, file: !11769, line: 215, type: !11666, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11770)
!11769 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11770 = !{!11771}
!11771 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11768, file: !11769, line: 215, type: !1950)
!11772 = !DILocation(line: 0, scope: !11768)
!11773 = !DILocation(line: 217, column: 21, scope: !11768)
!11774 = !DILocation(line: 217, column: 34, scope: !11768)
!11775 = !DILocation(line: 219, column: 21, scope: !11768)
!11776 = !DILocation(line: 219, column: 30, scope: !11768)
!11777 = !DILocation(line: 221, column: 21, scope: !11768)
!11778 = !DILocation(line: 221, column: 34, scope: !11768)
!11779 = !DILocation(line: 223, column: 27, scope: !11768)
!11780 = !DILocation(line: 223, column: 33, scope: !11768)
!11781 = !DILocation(line: 224, column: 27, scope: !11768)
!11782 = !DILocation(line: 224, column: 32, scope: !11768)
!11783 = !DILocation(line: 232, column: 16, scope: !11768)
!11784 = !DILocation(line: 232, column: 30, scope: !11768)
!11785 = !DILocation(line: 239, column: 24, scope: !11768)
!11786 = !DILocation(line: 240, column: 1, scope: !11768)
!11787 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1857, file: !1857, line: 399, type: !11788, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11790)
!11788 = !DISubroutineType(types: !11789)
!11789 = !{!1134}
!11790 = !{!11791}
!11791 = !DILocalVariable(name: "stack_ptr", scope: !11787, file: !1857, line: 401, type: !1134)
!11792 = !DILocation(line: 404, column: 2, scope: !11787)
!11793 = !DILocation(line: 416, column: 24, scope: !11787)
!11794 = !DILocation(line: 418, column: 14, scope: !11787)
!11795 = !DILocation(line: 0, scope: !11787)
!11796 = !DILocation(line: 423, column: 2, scope: !11787)
!11797 = !DILocation(line: 424, column: 2, scope: !11787)
!11798 = !DILocation(line: 426, column: 2, scope: !11787)
!11799 = !DILocation(line: 428, column: 2, scope: !11787)
!11800 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1857, file: !1857, line: 432, type: !11801, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11803)
!11801 = !DISubroutineType(types: !11802)
!11802 = !{null, !1134}
!11803 = !{!11804}
!11804 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11800, file: !1857, line: 432, type: !1134)
!11805 = !DILocation(line: 0, scope: !11800)
!11806 = !DILocation(line: 435, column: 2, scope: !11800)
!11807 = !DILocation(line: 445, column: 2, scope: !11800)
!11808 = distinct !DISubprogram(name: "bg_thread_main", scope: !1857, file: !1857, line: 277, type: !3193, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1853, retainedNodes: !11809)
!11809 = !{!11810, !11811, !11812}
!11810 = !DILocalVariable(name: "unused1", arg: 1, scope: !11808, file: !1857, line: 277, type: !106)
!11811 = !DILocalVariable(name: "unused2", arg: 2, scope: !11808, file: !1857, line: 277, type: !106)
!11812 = !DILocalVariable(name: "unused3", arg: 3, scope: !11808, file: !1857, line: 277, type: !106)
!11813 = !DILocation(line: 0, scope: !11808)
!11814 = !DILocation(line: 291, column: 20, scope: !11808)
!11815 = !DILocation(line: 293, column: 2, scope: !11808)
!11816 = !DILocation(line: 297, column: 2, scope: !11808)
!11817 = !DILocation(line: 305, column: 2, scope: !11808)
!11818 = !DILocation(line: 307, column: 2, scope: !11808)
!11819 = !DILocation(line: 330, column: 8, scope: !11808)
!11820 = !DILocation(line: 333, column: 34, scope: !11808)
!11821 = !DILocation(line: 339, column: 1, scope: !11808)
!11822 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2112, file: !2112, line: 45, type: !11823, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !11831)
!11823 = !DISubroutineType(types: !11824)
!11824 = !{null, !11825, !106}
!11825 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !11826)
!11826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11827, size: 32)
!11827 = !DISubroutineType(types: !11828)
!11828 = !{null, !11829, !106}
!11829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11830, size: 32)
!11830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2117)
!11831 = !{!11832, !11833}
!11832 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11822, file: !2112, line: 45, type: !11825)
!11833 = !DILocalVariable(name: "user_data", arg: 2, scope: !11822, file: !2112, line: 45, type: !106)
!11834 = !DILocation(line: 0, scope: !11822)
!11835 = !DILocation(line: 71, column: 1, scope: !11822)
!11836 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2112, file: !2112, line: 73, type: !11823, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !11837)
!11837 = !{!11838, !11839}
!11838 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11836, file: !2112, line: 73, type: !11825)
!11839 = !DILocalVariable(name: "user_data", arg: 2, scope: !11836, file: !2112, line: 73, type: !106)
!11840 = !DILocation(line: 0, scope: !11836)
!11841 = !DILocation(line: 95, column: 1, scope: !11836)
!11842 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2112, file: !2112, line: 97, type: !5926, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !251)
!11843 = !DILocation(line: 1031, column: 3, scope: !11844, inlinedAt: !11847)
!11844 = distinct !DISubprogram(name: "__get_IPSR", scope: !5129, file: !5129, line: 1027, type: !5210, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !11845)
!11845 = !{!11846}
!11846 = !DILocalVariable(name: "result", scope: !11844, file: !5129, line: 1029, type: !110)
!11847 = distinct !DILocation(line: 48, column: 10, scope: !11848, inlinedAt: !11849)
!11848 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5925, file: !5925, line: 46, type: !5926, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !251)
!11849 = distinct !DILocation(line: 99, column: 9, scope: !11842)
!11850 = !{i64 3751533}
!11851 = !DILocation(line: 0, scope: !11844, inlinedAt: !11847)
!11852 = !DILocation(line: 48, column: 9, scope: !11848, inlinedAt: !11849)
!11853 = !DILocation(line: 99, column: 2, scope: !11842)
!11854 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2112, file: !2112, line: 106, type: !2980, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !251)
!11855 = !DILocation(line: 108, column: 2, scope: !11854)
!11856 = !DILocation(line: 108, column: 17, scope: !11854)
!11857 = !DILocation(line: 108, column: 30, scope: !11854)
!11858 = !DILocation(line: 109, column: 1, scope: !11854)
!11859 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2112, file: !2112, line: 116, type: !2980, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !251)
!11860 = !DILocation(line: 118, column: 2, scope: !11859)
!11861 = !DILocation(line: 118, column: 17, scope: !11859)
!11862 = !DILocation(line: 118, column: 30, scope: !11859)
!11863 = !DILocation(line: 119, column: 1, scope: !11859)
!11864 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2112, file: !2112, line: 126, type: !5926, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !251)
!11865 = !DILocation(line: 128, column: 10, scope: !11864)
!11866 = !DILocation(line: 128, column: 25, scope: !11864)
!11867 = !DILocation(line: 128, column: 38, scope: !11864)
!11868 = !DILocation(line: 128, column: 53, scope: !11864)
!11869 = !DILocation(line: 128, column: 2, scope: !11864)
!11870 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2112, file: !2112, line: 187, type: !11871, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !11873)
!11871 = !DISubroutineType(types: !11872)
!11872 = !{!109, !2116, !305}
!11873 = !{!11874, !11875}
!11874 = !DILocalVariable(name: "thread", arg: 1, scope: !11870, file: !2112, line: 187, type: !2116)
!11875 = !DILocalVariable(name: "value", arg: 2, scope: !11870, file: !2112, line: 187, type: !305)
!11876 = !DILocation(line: 0, scope: !11870)
!11877 = !DILocation(line: 190, column: 13, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11870, file: !2112, line: 190, column: 6)
!11879 = !DILocation(line: 190, column: 6, scope: !11870)
!11880 = !DILocation(line: 194, column: 10, scope: !11870)
!11881 = !DILocation(line: 194, column: 2, scope: !11870)
!11882 = !DILocation(line: 195, column: 2, scope: !11870)
!11883 = !DILocation(line: 195, column: 47, scope: !11870)
!11884 = !DILocation(line: 199, column: 2, scope: !11870)
!11885 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2112, file: !2112, line: 238, type: !11886, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !11888)
!11886 = !DISubroutineType(types: !11887)
!11887 = !{!305, !2116}
!11888 = !{!11889}
!11889 = !DILocalVariable(name: "thread", arg: 1, scope: !11885, file: !2112, line: 238, type: !2116)
!11890 = !DILocation(line: 0, scope: !11885)
!11891 = !DILocation(line: 241, column: 23, scope: !11885)
!11892 = !DILocation(line: 241, column: 2, scope: !11885)
!11893 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2112, file: !2112, line: 248, type: !11894, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !11896)
!11894 = !DISubroutineType(types: !11895)
!11895 = !{!109, !2115, !1134, !107}
!11896 = !{!11897, !11898, !11899}
!11897 = !DILocalVariable(name: "thread", arg: 1, scope: !11893, file: !2112, line: 248, type: !2115)
!11898 = !DILocalVariable(name: "buf", arg: 2, scope: !11893, file: !2112, line: 248, type: !1134)
!11899 = !DILocalVariable(name: "size", arg: 3, scope: !11893, file: !2112, line: 248, type: !107)
!11900 = !DILocation(line: 0, scope: !11893)
!11901 = !DILocation(line: 251, column: 15, scope: !11893)
!11902 = !DILocation(line: 251, column: 2, scope: !11893)
!11903 = !DILocation(line: 252, column: 2, scope: !11893)
!11904 = !DILocation(line: 0, scope: !2111)
!11905 = !DILocation(line: 281, column: 11, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !2111, file: !2112, line: 281, column: 6)
!11907 = !DILocation(line: 281, column: 20, scope: !11906)
!11908 = !DILocation(line: 275, column: 45, scope: !2111)
!11909 = !DILocation(line: 285, column: 10, scope: !2111)
!11910 = !DILocation(line: 0, scope: !2234)
!11911 = !DILocation(line: 293, column: 39, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !2234, file: !2112, line: 293, column: 2)
!11913 = !DILocation(line: 293, column: 2, scope: !2234)
!11914 = !DILocation(line: 273, column: 14, scope: !2111)
!11915 = !DILocation(line: 309, column: 2, scope: !2111)
!11916 = !DILocation(line: 309, column: 11, scope: !2111)
!11917 = !DILocation(line: 311, column: 2, scope: !2111)
!11918 = !DILocation(line: 293, column: 26, scope: !11912)
!11919 = !DILocation(line: 294, column: 9, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11912, file: !2112, line: 293, column: 54)
!11921 = !DILocation(line: 295, column: 21, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11920, file: !2112, line: 295, column: 7)
!11923 = !DILocation(line: 295, column: 28, scope: !11922)
!11924 = !DILocation(line: 295, column: 7, scope: !11920)
!11925 = !DILocation(line: 299, column: 25, scope: !11920)
!11926 = !DILocation(line: 299, column: 41, scope: !11920)
!11927 = !DILocation(line: 300, column: 7, scope: !11920)
!11928 = !DILocation(line: 300, column: 26, scope: !11920)
!11929 = !DILocation(line: 299, column: 10, scope: !11920)
!11930 = !DILocation(line: 299, column: 7, scope: !11920)
!11931 = !DILocation(line: 302, column: 16, scope: !11920)
!11932 = !DILocation(line: 304, column: 20, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11920, file: !2112, line: 304, column: 7)
!11934 = !DILocation(line: 304, column: 7, scope: !11920)
!11935 = !DILocation(line: 305, column: 26, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11933, file: !2112, line: 304, column: 26)
!11937 = !DILocation(line: 305, column: 42, scope: !11936)
!11938 = !DILocation(line: 305, column: 11, scope: !11936)
!11939 = !DILocation(line: 305, column: 8, scope: !11936)
!11940 = !DILocation(line: 306, column: 3, scope: !11936)
!11941 = !DILocation(line: 293, column: 50, scope: !11912)
!11942 = !DILocation(line: 312, column: 1, scope: !2111)
!11943 = distinct !DISubprogram(name: "copy_bytes", scope: !2112, file: !2112, line: 261, type: !11944, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !11946)
!11944 = !DISubroutineType(types: !11945)
!11945 = !{!107, !1134, !107, !305, !107}
!11946 = !{!11947, !11948, !11949, !11950, !11951}
!11947 = !DILocalVariable(name: "dest", arg: 1, scope: !11943, file: !2112, line: 261, type: !1134)
!11948 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11943, file: !2112, line: 261, type: !107)
!11949 = !DILocalVariable(name: "src", arg: 3, scope: !11943, file: !2112, line: 261, type: !305)
!11950 = !DILocalVariable(name: "src_size", arg: 4, scope: !11943, file: !2112, line: 261, type: !107)
!11951 = !DILocalVariable(name: "bytes_to_copy", scope: !11943, file: !2112, line: 263, type: !107)
!11952 = !DILocation(line: 0, scope: !11943)
!11953 = !DILocation(line: 265, column: 18, scope: !11943)
!11954 = !DILocation(line: 266, column: 2, scope: !11943)
!11955 = !DILocation(line: 268, column: 2, scope: !11943)
!11956 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2112, file: !2112, line: 383, type: !11957, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !11959)
!11957 = !DISubroutineType(types: !11958)
!11958 = !{null, !2116}
!11959 = !{!11960}
!11960 = !DILocalVariable(name: "thread", arg: 1, scope: !11956, file: !2112, line: 383, type: !2116)
!11961 = !DILocation(line: 0, scope: !11956)
!11962 = !DILocation(line: 387, column: 2, scope: !11956)
!11963 = !DILocation(line: 388, column: 1, scope: !11956)
!11964 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2112, file: !2112, line: 528, type: !11965, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !11972)
!11965 = !DISubroutineType(types: !11966)
!11966 = !{!1134, !2116, !11967, !107, !3224, !106, !106, !106, !109, !110, !305}
!11967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11968, size: 32)
!11968 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3223, line: 44, baseType: !11969)
!11969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !11970)
!11970 = !{!11971}
!11971 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11969, file: !147, line: 48, baseType: !150, size: 8)
!11972 = !{!11973, !11974, !11975, !11976, !11977, !11978, !11979, !11980, !11981, !11982, !11983}
!11973 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11964, file: !2112, line: 528, type: !2116)
!11974 = !DILocalVariable(name: "stack", arg: 2, scope: !11964, file: !2112, line: 529, type: !11967)
!11975 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11964, file: !2112, line: 529, type: !107)
!11976 = !DILocalVariable(name: "entry", arg: 4, scope: !11964, file: !2112, line: 530, type: !3224)
!11977 = !DILocalVariable(name: "p1", arg: 5, scope: !11964, file: !2112, line: 531, type: !106)
!11978 = !DILocalVariable(name: "p2", arg: 6, scope: !11964, file: !2112, line: 531, type: !106)
!11979 = !DILocalVariable(name: "p3", arg: 7, scope: !11964, file: !2112, line: 531, type: !106)
!11980 = !DILocalVariable(name: "prio", arg: 8, scope: !11964, file: !2112, line: 532, type: !109)
!11981 = !DILocalVariable(name: "options", arg: 9, scope: !11964, file: !2112, line: 532, type: !110)
!11982 = !DILocalVariable(name: "name", arg: 10, scope: !11964, file: !2112, line: 532, type: !305)
!11983 = !DILocalVariable(name: "stack_ptr", scope: !11964, file: !2112, line: 534, type: !1134)
!11984 = !DILocation(line: 0, scope: !11964)
!11985 = !DILocation(line: 550, column: 28, scope: !11964)
!11986 = !DILocation(line: 550, column: 2, scope: !11964)
!11987 = !DILocation(line: 553, column: 34, scope: !11964)
!11988 = !DILocation(line: 553, column: 2, scope: !11964)
!11989 = !DILocation(line: 554, column: 14, scope: !11964)
!11990 = !DILocation(line: 564, column: 2, scope: !11964)
!11991 = !DILocation(line: 567, column: 14, scope: !11964)
!11992 = !DILocation(line: 567, column: 24, scope: !11964)
!11993 = !DILocation(line: 594, column: 11, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11964, file: !2112, line: 594, column: 6)
!11995 = !DILocation(line: 0, scope: !11994)
!11996 = !DILocation(line: 594, column: 6, scope: !11964)
!11997 = !DILocation(line: 595, column: 3, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11994, file: !2112, line: 594, column: 20)
!11999 = !DILocation(line: 598, column: 3, scope: !11998)
!12000 = !DILocation(line: 598, column: 52, scope: !11998)
!12001 = !DILocation(line: 599, column: 2, scope: !11998)
!12002 = !DILocation(line: 600, column: 23, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !11994, file: !2112, line: 599, column: 9)
!12004 = !DILocation(line: 607, column: 20, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12006, file: !2112, line: 606, column: 9)
!12006 = distinct !DILexicalBlock(scope: !11964, file: !2112, line: 604, column: 6)
!12007 = !DILocation(line: 607, column: 29, scope: !12005)
!12008 = !DILocation(line: 612, column: 7, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11964, file: !2112, line: 612, column: 6)
!12010 = !DILocation(line: 612, column: 6, scope: !11964)
!12011 = !DILocation(line: 627, column: 40, scope: !11964)
!12012 = !DILocation(line: 637, column: 2, scope: !11964)
!12013 = !DILocation(line: 613, column: 15, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12009, file: !2112, line: 612, column: 17)
!12015 = !DILocation(line: 613, column: 29, scope: !12014)
!12016 = !DILocation(line: 638, column: 1, scope: !11964)
!12017 = distinct !DISubprogram(name: "z_waitq_init", scope: !12018, file: !12018, line: 47, type: !12019, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12021)
!12018 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12019 = !DISubroutineType(types: !12020)
!12020 = !{null, !2147}
!12021 = !{!12022}
!12022 = !DILocalVariable(name: "w", arg: 1, scope: !12017, file: !12018, line: 47, type: !2147)
!12023 = !DILocation(line: 0, scope: !12017)
!12024 = !DILocation(line: 49, column: 21, scope: !12017)
!12025 = !DILocation(line: 49, column: 2, scope: !12017)
!12026 = !DILocation(line: 50, column: 1, scope: !12017)
!12027 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2112, file: !2112, line: 791, type: !12028, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12031)
!12028 = !DISubroutineType(types: !12029)
!12029 = !{null, !12030, !109, !110, !32}
!12030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!12031 = !{!12032, !12033, !12034, !12035}
!12032 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12027, file: !2112, line: 791, type: !12030)
!12033 = !DILocalVariable(name: "priority", arg: 2, scope: !12027, file: !2112, line: 791, type: !109)
!12034 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12027, file: !2112, line: 792, type: !110)
!12035 = !DILocalVariable(name: "options", arg: 4, scope: !12027, file: !2112, line: 792, type: !32)
!12036 = !DILocation(line: 0, scope: !12027)
!12037 = !DILocation(line: 795, column: 15, scope: !12027)
!12038 = !DILocation(line: 795, column: 25, scope: !12027)
!12039 = !DILocation(line: 796, column: 30, scope: !12027)
!12040 = !DILocation(line: 796, column: 15, scope: !12027)
!12041 = !DILocation(line: 796, column: 28, scope: !12027)
!12042 = !DILocation(line: 797, column: 30, scope: !12027)
!12043 = !DILocation(line: 797, column: 15, scope: !12027)
!12044 = !DILocation(line: 797, column: 28, scope: !12027)
!12045 = !DILocation(line: 799, column: 22, scope: !12027)
!12046 = !DILocation(line: 799, column: 15, scope: !12027)
!12047 = !DILocation(line: 799, column: 20, scope: !12027)
!12048 = !DILocation(line: 801, column: 15, scope: !12027)
!12049 = !DILocation(line: 801, column: 28, scope: !12027)
!12050 = !DILocation(line: 814, column: 2, scope: !12027)
!12051 = !DILocation(line: 815, column: 1, scope: !12027)
!12052 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2112, file: !2112, line: 449, type: !12053, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12055)
!12053 = !DISubroutineType(types: !12054)
!12054 = !{!1134, !2116, !11967, !107}
!12055 = !{!12056, !12057, !12058, !12059, !12060, !12061, !12062, !12063}
!12056 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12052, file: !2112, line: 449, type: !2116)
!12057 = !DILocalVariable(name: "stack", arg: 2, scope: !12052, file: !2112, line: 450, type: !11967)
!12058 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12052, file: !2112, line: 450, type: !107)
!12059 = !DILocalVariable(name: "stack_obj_size", scope: !12052, file: !2112, line: 452, type: !107)
!12060 = !DILocalVariable(name: "stack_buf_size", scope: !12052, file: !2112, line: 452, type: !107)
!12061 = !DILocalVariable(name: "stack_ptr", scope: !12052, file: !2112, line: 453, type: !1134)
!12062 = !DILocalVariable(name: "stack_buf_start", scope: !12052, file: !2112, line: 453, type: !1134)
!12063 = !DILocalVariable(name: "delta", scope: !12052, file: !2112, line: 454, type: !107)
!12064 = !DILocation(line: 0, scope: !12052)
!12065 = !DILocation(line: 465, column: 20, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12052, file: !2112, line: 463, column: 2)
!12067 = !DILocation(line: 466, column: 21, scope: !12066)
!12068 = !DILocation(line: 473, column: 28, scope: !12052)
!12069 = !DILocation(line: 514, column: 33, scope: !12052)
!12070 = !DILocation(line: 514, column: 25, scope: !12052)
!12071 = !DILocation(line: 514, column: 31, scope: !12052)
!12072 = !DILocation(line: 515, column: 25, scope: !12052)
!12073 = !DILocation(line: 515, column: 30, scope: !12052)
!12074 = !DILocation(line: 516, column: 25, scope: !12052)
!12075 = !DILocation(line: 516, column: 31, scope: !12052)
!12076 = !DILocation(line: 520, column: 2, scope: !12052)
!12077 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !12078, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12080)
!12078 = !DISubroutineType(types: !12079)
!12079 = !{!1134, !11967}
!12080 = !{!12081}
!12081 = !DILocalVariable(name: "sym", arg: 1, scope: !12077, file: !147, line: 331, type: !11967)
!12082 = !DILocation(line: 0, scope: !12077)
!12083 = !DILocation(line: 333, column: 21, scope: !12077)
!12084 = !DILocation(line: 333, column: 2, scope: !12077)
!12085 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12086, file: !12086, line: 40, type: !12087, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12089)
!12086 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12087 = !DISubroutineType(types: !12088)
!12088 = !{null, !12030}
!12089 = !{!12090}
!12090 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12085, file: !12086, line: 40, type: !12030)
!12091 = !DILocation(line: 0, scope: !12085)
!12092 = !DILocation(line: 42, column: 31, scope: !12085)
!12093 = !DILocation(line: 42, column: 2, scope: !12085)
!12094 = !DILocation(line: 43, column: 1, scope: !12085)
!12095 = distinct !DISubprogram(name: "z_init_timeout", scope: !12086, file: !12086, line: 25, type: !2174, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12096)
!12096 = !{!12097}
!12097 = !DILocalVariable(name: "to", arg: 1, scope: !12095, file: !12086, line: 25, type: !2176)
!12098 = !DILocation(line: 0, scope: !12095)
!12099 = !DILocation(line: 27, column: 22, scope: !12095)
!12100 = !DILocation(line: 27, column: 2, scope: !12095)
!12101 = !DILocation(line: 28, column: 1, scope: !12095)
!12102 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !12103, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12105)
!12103 = !DISubroutineType(types: !12104)
!12104 = !{null, !2221}
!12105 = !{!12106}
!12106 = !DILocalVariable(name: "node", arg: 1, scope: !12102, file: !127, line: 211, type: !2221)
!12107 = !DILocation(line: 0, scope: !12102)
!12108 = !DILocation(line: 213, column: 8, scope: !12102)
!12109 = !DILocation(line: 213, column: 13, scope: !12102)
!12110 = !DILocation(line: 214, column: 8, scope: !12102)
!12111 = !DILocation(line: 214, column: 13, scope: !12102)
!12112 = !DILocation(line: 215, column: 1, scope: !12102)
!12113 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !12114, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12117)
!12114 = !DISubroutineType(types: !12115)
!12115 = !{null, !12116}
!12116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 32)
!12117 = !{!12118}
!12118 = !DILocalVariable(name: "list", arg: 1, scope: !12113, file: !127, line: 197, type: !12116)
!12119 = !DILocation(line: 0, scope: !12113)
!12120 = !DILocation(line: 199, column: 8, scope: !12113)
!12121 = !DILocation(line: 199, column: 13, scope: !12113)
!12122 = !DILocation(line: 200, column: 8, scope: !12113)
!12123 = !DILocation(line: 200, column: 13, scope: !12113)
!12124 = !DILocation(line: 201, column: 1, scope: !12113)
!12125 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2112, file: !2112, line: 641, type: !12126, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12132)
!12126 = !DISubroutineType(types: !12127)
!12127 = !{!2115, !2116, !11967, !107, !3224, !106, !106, !106, !109, !110, !12128}
!12128 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !12129)
!12129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !12130)
!12130 = !{!12131}
!12131 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12129, file: !103, line: 66, baseType: !102, size: 64)
!12132 = !{!12133, !12134, !12135, !12136, !12137, !12138, !12139, !12140, !12141, !12142}
!12133 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12125, file: !2112, line: 641, type: !2116)
!12134 = !DILocalVariable(name: "stack", arg: 2, scope: !12125, file: !2112, line: 642, type: !11967)
!12135 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12125, file: !2112, line: 643, type: !107)
!12136 = !DILocalVariable(name: "entry", arg: 4, scope: !12125, file: !2112, line: 643, type: !3224)
!12137 = !DILocalVariable(name: "p1", arg: 5, scope: !12125, file: !2112, line: 644, type: !106)
!12138 = !DILocalVariable(name: "p2", arg: 6, scope: !12125, file: !2112, line: 644, type: !106)
!12139 = !DILocalVariable(name: "p3", arg: 7, scope: !12125, file: !2112, line: 644, type: !106)
!12140 = !DILocalVariable(name: "prio", arg: 8, scope: !12125, file: !2112, line: 645, type: !109)
!12141 = !DILocalVariable(name: "options", arg: 9, scope: !12125, file: !2112, line: 645, type: !110)
!12142 = !DILocalVariable(name: "delay", arg: 10, scope: !12125, file: !2112, line: 645, type: !12128)
!12143 = !DILocation(line: 0, scope: !12125)
!12144 = !DILocation(line: 649, column: 2, scope: !12125)
!12145 = !DILocation(line: 652, column: 7, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12125, file: !2112, line: 652, column: 6)
!12147 = !DILocation(line: 652, column: 6, scope: !12125)
!12148 = !DILocation(line: 653, column: 3, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12146, file: !2112, line: 652, column: 39)
!12150 = !DILocation(line: 654, column: 2, scope: !12149)
!12151 = !DILocation(line: 656, column: 2, scope: !12125)
!12152 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2112, file: !2112, line: 401, type: !12153, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12155)
!12153 = !DISubroutineType(types: !12154)
!12154 = !{null, !2116, !12128}
!12155 = !{!12156, !12157}
!12156 = !DILocalVariable(name: "thread", arg: 1, scope: !12152, file: !2112, line: 401, type: !2116)
!12157 = !DILocalVariable(name: "delay", arg: 2, scope: !12152, file: !2112, line: 401, type: !12128)
!12158 = !DILocation(line: 0, scope: !12152)
!12159 = !DILocation(line: 404, column: 6, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12152, file: !2112, line: 404, column: 6)
!12161 = !DILocation(line: 404, column: 6, scope: !12152)
!12162 = !DILocation(line: 405, column: 3, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12160, file: !2112, line: 404, column: 38)
!12164 = !DILocation(line: 406, column: 2, scope: !12163)
!12165 = !DILocation(line: 407, column: 3, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12160, file: !2112, line: 406, column: 9)
!12167 = !DILocation(line: 413, column: 1, scope: !12152)
!12168 = distinct !DISubprogram(name: "k_thread_start", scope: !3123, file: !3123, line: 205, type: !12169, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12171)
!12169 = !DISubroutineType(types: !12170)
!12170 = !{null, !2115}
!12171 = !{!12172}
!12172 = !DILocalVariable(name: "thread", arg: 1, scope: !12168, file: !3123, line: 205, type: !2115)
!12173 = !DILocation(line: 0, scope: !12168)
!12174 = !DILocation(line: 214, column: 2, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12168, file: !3123, line: 214, column: 2)
!12176 = !{i64 2155086741}
!12177 = !DILocation(line: 215, column: 2, scope: !12168)
!12178 = !DILocation(line: 216, column: 1, scope: !12168)
!12179 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12086, file: !12086, line: 47, type: !12153, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12180)
!12180 = !{!12181, !12182}
!12181 = !DILocalVariable(name: "thread", arg: 1, scope: !12179, file: !12086, line: 47, type: !2116)
!12182 = !DILocalVariable(name: "ticks", arg: 2, scope: !12179, file: !12086, line: 47, type: !12128)
!12183 = !DILocation(line: 0, scope: !12179)
!12184 = !DILocation(line: 49, column: 30, scope: !12179)
!12185 = !DILocation(line: 49, column: 2, scope: !12179)
!12186 = !DILocation(line: 50, column: 1, scope: !12179)
!12187 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2112, file: !2112, line: 748, type: !2980, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12188)
!12188 = !{!12189, !12207}
!12189 = !DILocalVariable(name: "thread_data", scope: !12190, file: !2112, line: 750, type: !12191)
!12190 = distinct !DILexicalBlock(scope: !12187, file: !2112, line: 750, column: 2)
!12191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12192, size: 32)
!12192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !12193)
!12193 = !{!12194, !12195, !12196, !12197, !12198, !12199, !12200, !12201, !12202, !12203, !12204, !12206}
!12194 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12192, file: !118, line: 621, baseType: !2116, size: 32)
!12195 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12192, file: !118, line: 622, baseType: !11967, size: 32, offset: 32)
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12192, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!12197 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12192, file: !118, line: 624, baseType: !3224, size: 32, offset: 96)
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12192, file: !118, line: 625, baseType: !106, size: 32, offset: 128)
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12192, file: !118, line: 626, baseType: !106, size: 32, offset: 160)
!12200 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12192, file: !118, line: 627, baseType: !106, size: 32, offset: 192)
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12192, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!12202 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12192, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!12203 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12192, file: !118, line: 630, baseType: !734, size: 32, offset: 288)
!12204 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12192, file: !118, line: 631, baseType: !12205, size: 32, offset: 320)
!12205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 32)
!12206 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12192, file: !118, line: 632, baseType: !305, size: 32, offset: 352)
!12207 = !DILocalVariable(name: "thread_data", scope: !12208, file: !2112, line: 781, type: !12191)
!12208 = distinct !DILexicalBlock(scope: !12187, file: !2112, line: 781, column: 2)
!12209 = !DILocation(line: 0, scope: !12190)
!12210 = !DILocation(line: 750, column: 2, scope: !12190)
!12211 = !DILocation(line: 780, column: 2, scope: !12187)
!12212 = !DILocation(line: 0, scope: !12208)
!12213 = !DILocation(line: 781, column: 2, scope: !12208)
!12214 = !DILocation(line: 752, column: 17, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12216, file: !2112, line: 750, column: 38)
!12216 = distinct !DILexicalBlock(scope: !12190, file: !2112, line: 750, column: 2)
!12217 = !DILocation(line: 753, column: 17, scope: !12215)
!12218 = !DILocation(line: 754, column: 17, scope: !12215)
!12219 = !DILocation(line: 755, column: 17, scope: !12215)
!12220 = !DILocation(line: 756, column: 17, scope: !12215)
!12221 = !DILocation(line: 757, column: 17, scope: !12215)
!12222 = !DILocation(line: 758, column: 17, scope: !12215)
!12223 = !DILocation(line: 759, column: 17, scope: !12215)
!12224 = !DILocation(line: 760, column: 17, scope: !12215)
!12225 = !DILocation(line: 761, column: 17, scope: !12215)
!12226 = !DILocation(line: 751, column: 3, scope: !12215)
!12227 = !DILocation(line: 763, column: 16, scope: !12215)
!12228 = !DILocation(line: 763, column: 29, scope: !12215)
!12229 = !DILocation(line: 763, column: 39, scope: !12215)
!12230 = !DILocation(line: 750, column: 2, scope: !12216)
!12231 = !DILocation(line: 750, column: 2, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12216, file: !2112, line: 750, column: 2)
!12233 = distinct !{!12233, !12210, !12234}
!12234 = !DILocation(line: 764, column: 2, scope: !12190)
!12235 = !DILocation(line: 787, column: 2, scope: !12187)
!12236 = !DILocation(line: 788, column: 1, scope: !12187)
!12237 = !DILocation(line: 782, column: 20, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12239, file: !2112, line: 782, column: 7)
!12239 = distinct !DILexicalBlock(scope: !12240, file: !2112, line: 781, column: 38)
!12240 = distinct !DILexicalBlock(scope: !12208, file: !2112, line: 781, column: 2)
!12241 = !DILocation(line: 782, column: 31, scope: !12238)
!12242 = !DILocation(line: 782, column: 7, scope: !12239)
!12243 = !DILocation(line: 783, column: 37, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12238, file: !2112, line: 782, column: 51)
!12245 = !DILocation(line: 784, column: 10, scope: !12244)
!12246 = !DILocation(line: 783, column: 4, scope: !12244)
!12247 = !DILocation(line: 785, column: 3, scope: !12244)
!12248 = !DILocation(line: 781, column: 2, scope: !12240)
!12249 = !DILocation(line: 781, column: 2, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12240, file: !2112, line: 781, column: 2)
!12251 = distinct !{!12251, !12213, !12252}
!12252 = !DILocation(line: 786, column: 2, scope: !12208)
!12253 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12254, file: !12254, line: 403, type: !12255, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12257)
!12254 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12255 = !DISubroutineType(types: !12256)
!12256 = !{!111, !111}
!12257 = !{!12258}
!12258 = !DILocalVariable(name: "t", arg: 1, scope: !12253, file: !12254, line: 403, type: !111)
!12259 = !DILocation(line: 0, scope: !12253)
!12260 = !DILocalVariable(name: "t", arg: 1, scope: !12261, file: !12254, line: 102, type: !111)
!12261 = distinct !DISubprogram(name: "z_tmcvt", scope: !12254, file: !12254, line: 102, type: !12262, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12264)
!12262 = !DISubroutineType(types: !12263)
!12263 = !{!111, !111, !110, !110, !315, !315, !315, !315}
!12264 = !{!12260, !12265, !12266, !12267, !12268, !12269, !12270, !12271, !12272, !12273, !12274}
!12265 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12261, file: !12254, line: 102, type: !110)
!12266 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12261, file: !12254, line: 103, type: !110)
!12267 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12261, file: !12254, line: 103, type: !315)
!12268 = !DILocalVariable(name: "result32", arg: 5, scope: !12261, file: !12254, line: 104, type: !315)
!12269 = !DILocalVariable(name: "round_up", arg: 6, scope: !12261, file: !12254, line: 104, type: !315)
!12270 = !DILocalVariable(name: "round_off", arg: 7, scope: !12261, file: !12254, line: 105, type: !315)
!12271 = !DILocalVariable(name: "mul_ratio", scope: !12261, file: !12254, line: 107, type: !315)
!12272 = !DILocalVariable(name: "div_ratio", scope: !12261, file: !12254, line: 109, type: !315)
!12273 = !DILocalVariable(name: "off", scope: !12261, file: !12254, line: 116, type: !111)
!12274 = !DILocalVariable(name: "rdivisor", scope: !12275, file: !12254, line: 119, type: !110)
!12275 = distinct !DILexicalBlock(scope: !12276, file: !12254, line: 118, column: 18)
!12276 = distinct !DILexicalBlock(scope: !12261, file: !12254, line: 118, column: 6)
!12277 = !DILocation(line: 0, scope: !12261, inlinedAt: !12278)
!12278 = distinct !DILocation(line: 406, column: 9, scope: !12253)
!12279 = !DILocation(line: 145, column: 13, scope: !12280, inlinedAt: !12278)
!12280 = distinct !DILexicalBlock(scope: !12281, file: !12254, line: 144, column: 10)
!12281 = distinct !DILexicalBlock(scope: !12282, file: !12254, line: 142, column: 7)
!12282 = distinct !DILexicalBlock(scope: !12283, file: !12254, line: 141, column: 24)
!12283 = distinct !DILexicalBlock(scope: !12284, file: !12254, line: 141, column: 13)
!12284 = distinct !DILexicalBlock(scope: !12261, file: !12254, line: 134, column: 6)
!12285 = !DILocation(line: 406, column: 2, scope: !12253)
!12286 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2112, file: !2112, line: 817, type: !3452, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12287)
!12287 = !{!12288, !12289, !12290, !12291}
!12288 = !DILocalVariable(name: "entry", arg: 1, scope: !12286, file: !2112, line: 817, type: !3224)
!12289 = !DILocalVariable(name: "p1", arg: 2, scope: !12286, file: !2112, line: 818, type: !106)
!12290 = !DILocalVariable(name: "p2", arg: 3, scope: !12286, file: !2112, line: 818, type: !106)
!12291 = !DILocalVariable(name: "p3", arg: 4, scope: !12286, file: !2112, line: 818, type: !106)
!12292 = !DILocation(line: 0, scope: !12286)
!12293 = !DILocation(line: 822, column: 2, scope: !12286)
!12294 = !DILocation(line: 822, column: 17, scope: !12286)
!12295 = !DILocation(line: 822, column: 30, scope: !12286)
!12296 = !DILocation(line: 823, column: 2, scope: !12286)
!12297 = !DILocation(line: 845, column: 2, scope: !12286)
!12298 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2112, file: !2112, line: 888, type: !12299, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12301)
!12299 = !DISubroutineType(types: !12300)
!12300 = !{!109, !2116}
!12301 = !{!12302}
!12302 = !DILocalVariable(name: "thread", arg: 1, scope: !12298, file: !2112, line: 888, type: !2116)
!12303 = !DILocation(line: 0, scope: !12298)
!12304 = !DILocation(line: 893, column: 2, scope: !12298)
!12305 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2112, file: !2112, line: 897, type: !12306, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12308)
!12306 = !DISubroutineType(types: !12307)
!12307 = !{!109, !2116, !32}
!12308 = !{!12309, !12310}
!12309 = !DILocalVariable(name: "thread", arg: 1, scope: !12305, file: !2112, line: 897, type: !2116)
!12310 = !DILocalVariable(name: "options", arg: 2, scope: !12305, file: !2112, line: 897, type: !32)
!12311 = !DILocation(line: 0, scope: !12305)
!12312 = !DILocation(line: 902, column: 2, scope: !12305)
!12313 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2112, file: !2112, line: 1072, type: !12314, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12319)
!12314 = !DISubroutineType(types: !12315)
!12315 = !{!109, !2115, !12316}
!12316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12317, size: 32)
!12317 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !156, line: 234, baseType: !12318)
!12318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !156, line: 192, elements: !251)
!12319 = !{!12320, !12321}
!12320 = !DILocalVariable(name: "thread", arg: 1, scope: !12313, file: !2112, line: 1072, type: !2115)
!12321 = !DILocalVariable(name: "stats", arg: 2, scope: !12313, file: !2112, line: 1073, type: !12316)
!12322 = !DILocation(line: 0, scope: !12313)
!12323 = !DILocation(line: 1075, column: 14, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12313, file: !2112, line: 1075, column: 6)
!12325 = !DILocation(line: 1075, column: 23, scope: !12324)
!12326 = !DILocation(line: 1086, column: 1, scope: !12313)
!12327 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2112, file: !2112, line: 1088, type: !12328, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12330)
!12328 = !DISubroutineType(types: !12329)
!12329 = !{!109, !12316}
!12330 = !{!12331}
!12331 = !DILocalVariable(name: "stats", arg: 1, scope: !12327, file: !2112, line: 1088, type: !12316)
!12332 = !DILocation(line: 0, scope: !12327)
!12333 = !DILocation(line: 1094, column: 12, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12327, file: !2112, line: 1094, column: 6)
!12335 = !DILocation(line: 1120, column: 1, scope: !12327)
!12336 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12337, file: !12337, line: 20, type: !2980, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2961, retainedNodes: !251)
!12337 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12338 = !DILocation(line: 30, column: 2, scope: !12336)
!12339 = !DILocation(line: 31, column: 1, scope: !12336)
!12340 = distinct !DISubprogram(name: "idle", scope: !12337, file: !12337, line: 33, type: !3193, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2961, retainedNodes: !12341)
!12341 = !{!12342, !12343, !12344}
!12342 = !DILocalVariable(name: "unused1", arg: 1, scope: !12340, file: !12337, line: 33, type: !106)
!12343 = !DILocalVariable(name: "unused2", arg: 2, scope: !12340, file: !12337, line: 33, type: !106)
!12344 = !DILocalVariable(name: "unused3", arg: 3, scope: !12340, file: !12337, line: 33, type: !106)
!12345 = !DILocation(line: 0, scope: !12340)
!12346 = !DILocation(line: 41, column: 2, scope: !12340)
!12347 = !DILocation(line: 55, column: 2, scope: !12348, inlinedAt: !12352)
!12348 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4955, file: !4955, line: 42, type: !4956, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2961, retainedNodes: !12349)
!12349 = !{!12350, !12351}
!12350 = !DILocalVariable(name: "key", scope: !12348, file: !4955, line: 44, type: !32)
!12351 = !DILocalVariable(name: "tmp", scope: !12348, file: !4955, line: 53, type: !32)
!12352 = distinct !DILocation(line: 62, column: 10, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12340, file: !12337, line: 41, column: 15)
!12354 = !{i64 2278285}
!12355 = !DILocation(line: 0, scope: !12348, inlinedAt: !12352)
!12356 = !DILocation(line: 86, column: 3, scope: !12353)
!12357 = distinct !{!12357, !12346, !12358}
!12358 = !DILocation(line: 105, column: 2, scope: !12340)
!12359 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !2980, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2961, retainedNodes: !251)
!12360 = !DILocation(line: 5629, column: 2, scope: !12359)
!12361 = !DILocation(line: 5630, column: 1, scope: !12359)
!12362 = !DISubprogram(name: "arch_cpu_idle", scope: !3223, file: !3223, line: 167, type: !2980, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12363 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2257, file: !2257, line: 41, type: !12364, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !12377)
!12364 = !DISubroutineType(types: !12365)
!12365 = !{!109, !12366, !32, !32}
!12366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12367, size: 32)
!12367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !118, line: 2909, size: 128, elements: !12368)
!12368 = !{!12369, !12375, !12376}
!12369 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12367, file: !118, line: 2910, baseType: !12370, size: 64)
!12370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !12371)
!12371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !12372)
!12372 = !{!12373}
!12373 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12371, file: !122, line: 232, baseType: !12374, size: 64)
!12374 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2243)
!12375 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !12367, file: !118, line: 2911, baseType: !32, size: 32, offset: 64)
!12376 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !12367, file: !118, line: 2912, baseType: !32, size: 32, offset: 96)
!12377 = !{!12378, !12379, !12380}
!12378 = !DILocalVariable(name: "sem", arg: 1, scope: !12363, file: !2257, line: 41, type: !12366)
!12379 = !DILocalVariable(name: "initial_count", arg: 2, scope: !12363, file: !2257, line: 41, type: !32)
!12380 = !DILocalVariable(name: "limit", arg: 3, scope: !12363, file: !2257, line: 42, type: !32)
!12381 = !DILocation(line: 0, scope: !12363)
!12382 = !DILocation(line: 47, column: 2, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12363, file: !2257, line: 47, column: 2)
!12384 = !DILocation(line: 53, column: 7, scope: !12363)
!12385 = !DILocation(line: 53, column: 13, scope: !12363)
!12386 = !DILocation(line: 54, column: 7, scope: !12363)
!12387 = !DILocation(line: 54, column: 13, scope: !12363)
!12388 = !DILocation(line: 58, column: 21, scope: !12363)
!12389 = !DILocation(line: 58, column: 2, scope: !12363)
!12390 = !DILocation(line: 64, column: 2, scope: !12363)
!12391 = !DILocation(line: 65, column: 1, scope: !12363)
!12392 = distinct !DISubprogram(name: "z_waitq_init", scope: !12018, file: !12018, line: 47, type: !12393, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !12396)
!12393 = !DISubroutineType(types: !12394)
!12394 = !{null, !12395}
!12395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12370, size: 32)
!12396 = !{!12397}
!12397 = !DILocalVariable(name: "w", arg: 1, scope: !12392, file: !12018, line: 47, type: !12395)
!12398 = !DILocation(line: 0, scope: !12392)
!12399 = !DILocation(line: 49, column: 21, scope: !12392)
!12400 = !DILocation(line: 49, column: 2, scope: !12392)
!12401 = !DILocation(line: 50, column: 1, scope: !12392)
!12402 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !12403, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !12406)
!12403 = !DISubroutineType(types: !12404)
!12404 = !{null, !12405}
!12405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12374, size: 32)
!12406 = !{!12407}
!12407 = !DILocalVariable(name: "list", arg: 1, scope: !12402, file: !127, line: 197, type: !12405)
!12408 = !DILocation(line: 0, scope: !12402)
!12409 = !DILocation(line: 199, column: 8, scope: !12402)
!12410 = !DILocation(line: 199, column: 13, scope: !12402)
!12411 = !DILocation(line: 200, column: 8, scope: !12402)
!12412 = !DILocation(line: 200, column: 13, scope: !12402)
!12413 = !DILocation(line: 201, column: 1, scope: !12402)
!12414 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2257, file: !2257, line: 86, type: !12415, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !12417)
!12415 = !DISubroutineType(types: !12416)
!12416 = !{null, !12366}
!12417 = !{!12418, !12419, !12424}
!12418 = !DILocalVariable(name: "sem", arg: 1, scope: !12414, file: !2257, line: 86, type: !12366)
!12419 = !DILocalVariable(name: "key", scope: !12414, file: !2257, line: 88, type: !12420)
!12420 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !12421)
!12421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !12422)
!12422 = !{!12423}
!12423 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12421, file: !250, line: 33, baseType: !109, size: 32)
!12424 = !DILocalVariable(name: "thread", scope: !12414, file: !2257, line: 89, type: !12425)
!12425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12426, size: 32)
!12426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1344, elements: !12427)
!12427 = !{!12428, !12467, !12479, !12480, !12481, !12482, !12483, !12489, !12501}
!12428 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12426, file: !156, line: 247, baseType: !12429, size: 448)
!12429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 448, elements: !12430)
!12430 = !{!12431, !12441, !12442, !12443, !12444, !12453, !12454, !12455, !12456}
!12431 = !DIDerivedType(tag: DW_TAG_member, scope: !12429, file: !156, line: 60, baseType: !12432, size: 64)
!12432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12429, file: !156, line: 60, size: 64, elements: !12433)
!12433 = !{!12434, !12435}
!12434 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12432, file: !156, line: 61, baseType: !2242, size: 64)
!12435 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12432, file: !156, line: 62, baseType: !12436, size: 64)
!12436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !12437)
!12437 = !{!12438}
!12438 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12436, file: !168, line: 50, baseType: !12439, size: 64)
!12439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12440, size: 64, elements: !173)
!12440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12436, size: 32)
!12441 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12429, file: !156, line: 68, baseType: !12395, size: 32, offset: 64)
!12442 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12429, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!12443 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12429, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!12444 = !DIDerivedType(tag: DW_TAG_member, scope: !12429, file: !156, line: 90, baseType: !12445, size: 16, offset: 112)
!12445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12429, file: !156, line: 90, size: 16, elements: !12446)
!12446 = !{!12447, !12452}
!12447 = !DIDerivedType(tag: DW_TAG_member, scope: !12445, file: !156, line: 91, baseType: !12448, size: 16)
!12448 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12445, file: !156, line: 91, size: 16, elements: !12449)
!12449 = !{!12450, !12451}
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12448, file: !156, line: 96, baseType: !188, size: 8)
!12451 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12448, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!12452 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12445, file: !156, line: 100, baseType: !192, size: 16)
!12453 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12429, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!12454 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_mask", scope: !12429, file: !156, line: 123, baseType: !178, size: 8, offset: 160)
!12455 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12429, file: !156, line: 127, baseType: !106, size: 32, offset: 192)
!12456 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12429, file: !156, line: 131, baseType: !12457, size: 192, offset: 256)
!12457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !12458)
!12458 = !{!12459, !12460, !12466}
!12459 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12457, file: !122, line: 245, baseType: !2242, size: 64)
!12460 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12457, file: !122, line: 246, baseType: !12461, size: 32, offset: 64)
!12461 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !12462)
!12462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12463, size: 32)
!12463 = !DISubroutineType(types: !12464)
!12464 = !{null, !12465}
!12465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12457, size: 32)
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12457, file: !122, line: 249, baseType: !104, size: 64, offset: 128)
!12467 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12426, file: !156, line: 250, baseType: !12468, size: 288, offset: 448)
!12468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !210, line: 25, size: 288, elements: !12469)
!12469 = !{!12470, !12471, !12472, !12473, !12474, !12475, !12476, !12477, !12478}
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12468, file: !210, line: 26, baseType: !110, size: 32)
!12471 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12468, file: !210, line: 27, baseType: !110, size: 32, offset: 32)
!12472 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12468, file: !210, line: 28, baseType: !110, size: 32, offset: 64)
!12473 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12468, file: !210, line: 29, baseType: !110, size: 32, offset: 96)
!12474 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12468, file: !210, line: 30, baseType: !110, size: 32, offset: 128)
!12475 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12468, file: !210, line: 31, baseType: !110, size: 32, offset: 160)
!12476 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12468, file: !210, line: 32, baseType: !110, size: 32, offset: 192)
!12477 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12468, file: !210, line: 33, baseType: !110, size: 32, offset: 224)
!12478 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12468, file: !210, line: 34, baseType: !110, size: 32, offset: 256)
!12479 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12426, file: !156, line: 253, baseType: !106, size: 32, offset: 736)
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12426, file: !156, line: 256, baseType: !12370, size: 64, offset: 768)
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12426, file: !156, line: 279, baseType: !224, size: 256, offset: 832)
!12482 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12426, file: !156, line: 294, baseType: !109, size: 32, offset: 1088)
!12483 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12426, file: !156, line: 300, baseType: !12484, size: 96, offset: 1120)
!12484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !12485)
!12485 = !{!12486, !12487, !12488}
!12486 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12484, file: !156, line: 153, baseType: !22, size: 32)
!12487 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12484, file: !156, line: 162, baseType: !107, size: 32, offset: 32)
!12488 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12484, file: !156, line: 168, baseType: !107, size: 32, offset: 64)
!12489 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12426, file: !156, line: 325, baseType: !12490, size: 32, offset: 1216)
!12490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12491, size: 32)
!12491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 160, elements: !12492)
!12492 = !{!12493, !12499, !12500}
!12493 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12491, file: !118, line: 5074, baseType: !12494, size: 96)
!12494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !12495)
!12495 = !{!12496, !12497, !12498}
!12496 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12494, file: !240, line: 57, baseType: !243, size: 32)
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12494, file: !240, line: 58, baseType: !106, size: 32, offset: 32)
!12498 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12494, file: !240, line: 59, baseType: !107, size: 32, offset: 64)
!12499 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12491, file: !118, line: 5075, baseType: !12370, size: 64, offset: 96)
!12500 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12491, file: !118, line: 5076, baseType: !2258, offset: 160)
!12501 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12426, file: !156, line: 343, baseType: !12502, size: 64, offset: 1248)
!12502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !210, line: 60, size: 64, elements: !12503)
!12503 = !{!12504, !12505}
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12502, file: !210, line: 63, baseType: !110, size: 32)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12502, file: !210, line: 66, baseType: !110, size: 32, offset: 32)
!12506 = !DILocation(line: 0, scope: !12414)
!12507 = !DILocalVariable(name: "l", arg: 1, scope: !12508, file: !250, line: 136, type: !12511)
!12508 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !12509, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !12512)
!12509 = !DISubroutineType(types: !12510)
!12510 = !{!12420, !12511}
!12511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!12512 = !{!12507, !12513}
!12513 = !DILocalVariable(name: "k", scope: !12508, file: !250, line: 139, type: !12420)
!12514 = !DILocation(line: 0, scope: !12508, inlinedAt: !12515)
!12515 = distinct !DILocation(line: 88, column: 25, scope: !12414)
!12516 = !DILocation(line: 55, column: 2, scope: !12517, inlinedAt: !12521)
!12517 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4955, file: !4955, line: 42, type: !4956, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !12518)
!12518 = !{!12519, !12520}
!12519 = !DILocalVariable(name: "key", scope: !12517, file: !4955, line: 44, type: !32)
!12520 = !DILocalVariable(name: "tmp", scope: !12517, file: !4955, line: 53, type: !32)
!12521 = distinct !DILocation(line: 145, column: 10, scope: !12508, inlinedAt: !12515)
!12522 = !{i64 2279847}
!12523 = !DILocation(line: 0, scope: !12517, inlinedAt: !12521)
!12524 = !DILocation(line: 93, column: 39, scope: !12414)
!12525 = !DILocation(line: 93, column: 11, scope: !12414)
!12526 = !DILocation(line: 95, column: 13, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12414, file: !2257, line: 95, column: 6)
!12528 = !DILocation(line: 95, column: 6, scope: !12414)
!12529 = !DILocalVariable(name: "thread", arg: 1, scope: !12530, file: !11685, line: 65, type: !12425)
!12530 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11685, file: !11685, line: 65, type: !12531, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !12533)
!12531 = !DISubroutineType(types: !12532)
!12532 = !{null, !12425, !32}
!12533 = !{!12529, !12534}
!12534 = !DILocalVariable(name: "value", arg: 2, scope: !12530, file: !11685, line: 65, type: !32)
!12535 = !DILocation(line: 0, scope: !12530, inlinedAt: !12536)
!12536 = distinct !DILocation(line: 96, column: 3, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12527, file: !2257, line: 95, column: 22)
!12538 = !DILocation(line: 67, column: 15, scope: !12530, inlinedAt: !12536)
!12539 = !DILocation(line: 67, column: 33, scope: !12530, inlinedAt: !12536)
!12540 = !DILocation(line: 97, column: 3, scope: !12537)
!12541 = !DILocation(line: 98, column: 2, scope: !12537)
!12542 = !DILocation(line: 99, column: 23, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12527, file: !2257, line: 98, column: 9)
!12544 = !DILocation(line: 99, column: 37, scope: !12543)
!12545 = !DILocation(line: 99, column: 29, scope: !12543)
!12546 = !DILocation(line: 99, column: 17, scope: !12543)
!12547 = !DILocation(line: 99, column: 14, scope: !12543)
!12548 = !DILocation(line: 103, column: 2, scope: !12414)
!12549 = !DILocation(line: 106, column: 1, scope: !12414)
!12550 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2257, file: !2257, line: 117, type: !12551, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !12557)
!12551 = !DISubroutineType(types: !12552)
!12552 = !{!109, !12366, !12553}
!12553 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !12554)
!12554 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !12555)
!12555 = !{!12556}
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12554, file: !103, line: 66, baseType: !102, size: 64)
!12557 = !{!12558, !12559, !12560, !12561, !12562}
!12558 = !DILocalVariable(name: "sem", arg: 1, scope: !12550, file: !2257, line: 117, type: !12366)
!12559 = !DILocalVariable(name: "timeout", arg: 2, scope: !12550, file: !2257, line: 117, type: !12553)
!12560 = !DILocalVariable(name: "ret", scope: !12550, file: !2257, line: 119, type: !109)
!12561 = !DILocalVariable(name: "key", scope: !12550, file: !2257, line: 124, type: !12420)
!12562 = !DILabel(scope: !12550, name: "out", file: !2257, line: 145)
!12563 = !DILocation(line: 0, scope: !12550)
!12564 = !DILocation(line: 0, scope: !12508, inlinedAt: !12565)
!12565 = distinct !DILocation(line: 124, column: 25, scope: !12550)
!12566 = !DILocation(line: 55, column: 2, scope: !12517, inlinedAt: !12567)
!12567 = distinct !DILocation(line: 145, column: 10, scope: !12508, inlinedAt: !12565)
!12568 = !DILocation(line: 0, scope: !12517, inlinedAt: !12567)
!12569 = !DILocation(line: 128, column: 6, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12550, file: !2257, line: 128, column: 6)
!12571 = !DILocation(line: 128, column: 6, scope: !12550)
!12572 = !{!"branch_weights", i32 1, i32 2000}
!12573 = !DILocation(line: 129, column: 13, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12570, file: !2257, line: 128, column: 31)
!12575 = !DILocalVariable(name: "key", arg: 2, scope: !12576, file: !250, line: 190, type: !12420)
!12576 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !12577, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !12579)
!12577 = !DISubroutineType(types: !12578)
!12578 = !{null, !12511, !12420}
!12579 = !{!12580, !12575}
!12580 = !DILocalVariable(name: "l", arg: 1, scope: !12576, file: !250, line: 189, type: !12511)
!12581 = !DILocation(line: 0, scope: !12576, inlinedAt: !12582)
!12582 = distinct !DILocation(line: 130, column: 3, scope: !12574)
!12583 = !DILocalVariable(name: "key", arg: 1, scope: !12584, file: !4955, line: 84, type: !32)
!12584 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4955, file: !4955, line: 84, type: !4966, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !12585)
!12585 = !{!12583}
!12586 = !DILocation(line: 0, scope: !12584, inlinedAt: !12587)
!12587 = distinct !DILocation(line: 215, column: 2, scope: !12576, inlinedAt: !12582)
!12588 = !DILocation(line: 95, column: 2, scope: !12584, inlinedAt: !12587)
!12589 = !{i64 2280664}
!12590 = !DILocation(line: 132, column: 3, scope: !12574)
!12591 = !DILocation(line: 135, column: 6, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12550, file: !2257, line: 135, column: 6)
!12593 = !DILocation(line: 135, column: 6, scope: !12550)
!12594 = !DILocation(line: 0, scope: !12576, inlinedAt: !12595)
!12595 = distinct !DILocation(line: 136, column: 3, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12592, file: !2257, line: 135, column: 40)
!12597 = !DILocation(line: 0, scope: !12584, inlinedAt: !12598)
!12598 = distinct !DILocation(line: 215, column: 2, scope: !12576, inlinedAt: !12595)
!12599 = !DILocation(line: 95, column: 2, scope: !12584, inlinedAt: !12598)
!12600 = !DILocation(line: 138, column: 3, scope: !12596)
!12601 = !DILocation(line: 143, column: 38, scope: !12550)
!12602 = !DILocation(line: 143, column: 8, scope: !12550)
!12603 = !DILocation(line: 143, column: 2, scope: !12550)
!12604 = !DILocation(line: 145, column: 1, scope: !12550)
!12605 = !DILocation(line: 148, column: 2, scope: !12550)
!12606 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2257, file: !2257, line: 151, type: !12415, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !12607)
!12607 = !{!12608, !12609, !12610}
!12608 = !DILocalVariable(name: "sem", arg: 1, scope: !12606, file: !2257, line: 151, type: !12366)
!12609 = !DILocalVariable(name: "thread", scope: !12606, file: !2257, line: 153, type: !12425)
!12610 = !DILocalVariable(name: "key", scope: !12606, file: !2257, line: 154, type: !12420)
!12611 = !DILocation(line: 0, scope: !12606)
!12612 = !DILocation(line: 0, scope: !12508, inlinedAt: !12613)
!12613 = distinct !DILocation(line: 154, column: 25, scope: !12606)
!12614 = !DILocation(line: 55, column: 2, scope: !12517, inlinedAt: !12615)
!12615 = distinct !DILocation(line: 145, column: 10, scope: !12508, inlinedAt: !12613)
!12616 = !DILocation(line: 0, scope: !12517, inlinedAt: !12615)
!12617 = !DILocation(line: 157, column: 12, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12606, file: !2257, line: 156, column: 15)
!12619 = !DILocation(line: 158, column: 14, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12618, file: !2257, line: 158, column: 7)
!12621 = !DILocation(line: 158, column: 7, scope: !12618)
!12622 = !DILocation(line: 0, scope: !12530, inlinedAt: !12623)
!12623 = distinct !DILocation(line: 161, column: 3, scope: !12618)
!12624 = !DILocation(line: 67, column: 15, scope: !12530, inlinedAt: !12623)
!12625 = !DILocation(line: 67, column: 33, scope: !12530, inlinedAt: !12623)
!12626 = !DILocation(line: 162, column: 3, scope: !12618)
!12627 = distinct !{!12627, !12628, !12629}
!12628 = !DILocation(line: 156, column: 2, scope: !12606)
!12629 = !DILocation(line: 163, column: 2, scope: !12606)
!12630 = !DILocation(line: 164, column: 7, scope: !12606)
!12631 = !DILocation(line: 164, column: 13, scope: !12606)
!12632 = !DILocation(line: 170, column: 2, scope: !12606)
!12633 = !DILocation(line: 171, column: 1, scope: !12606)
!12634 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2371, file: !2371, line: 93, type: !12635, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12637)
!12635 = !DISubroutineType(types: !12636)
!12636 = !{!734, !2264, !2264}
!12637 = !{!12638, !12639, !12640, !12641}
!12638 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12634, file: !2371, line: 93, type: !2264)
!12639 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12634, file: !2371, line: 94, type: !2264)
!12640 = !DILocalVariable(name: "b1", scope: !12634, file: !2371, line: 97, type: !734)
!12641 = !DILocalVariable(name: "b2", scope: !12634, file: !2371, line: 98, type: !734)
!12642 = !DILocation(line: 0, scope: !12634)
!12643 = !DILocation(line: 97, column: 30, scope: !12634)
!12644 = !DILocation(line: 98, column: 30, scope: !12634)
!12645 = !DILocation(line: 100, column: 9, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12634, file: !2371, line: 100, column: 6)
!12647 = !DILocation(line: 100, column: 6, scope: !12634)
!12648 = !DILocation(line: 125, column: 1, scope: !12634)
!12649 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2371, file: !2371, line: 428, type: !12650, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12652)
!12650 = !DISubroutineType(types: !12651)
!12651 = !{null, !2264}
!12652 = !{!12653}
!12653 = !DILocalVariable(name: "curr", arg: 1, scope: !12649, file: !2371, line: 428, type: !2264)
!12654 = !DILocation(line: 0, scope: !12649)
!12655 = !DILocation(line: 434, column: 6, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12649, file: !2371, line: 434, column: 6)
!12657 = !DILocation(line: 434, column: 23, scope: !12656)
!12658 = !DILocation(line: 434, column: 6, scope: !12649)
!12659 = !DILocation(line: 435, column: 50, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12656, file: !2371, line: 434, column: 29)
!12661 = !DILocation(line: 435, column: 48, scope: !12660)
!12662 = !DILocation(line: 435, column: 29, scope: !12660)
!12663 = !DILocation(line: 436, column: 24, scope: !12660)
!12664 = !DILocation(line: 436, column: 3, scope: !12660)
!12665 = !DILocation(line: 437, column: 2, scope: !12660)
!12666 = !DILocation(line: 438, column: 1, scope: !12649)
!12667 = distinct !DISubprogram(name: "slice_time", scope: !2371, file: !2371, line: 407, type: !12668, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12670)
!12668 = !DISubroutineType(types: !12669)
!12669 = !{!109, !2264}
!12670 = !{!12671, !12672}
!12671 = !DILocalVariable(name: "curr", arg: 1, scope: !12667, file: !2371, line: 407, type: !2264)
!12672 = !DILocalVariable(name: "ret", scope: !12667, file: !2371, line: 409, type: !109)
!12673 = !DILocation(line: 0, scope: !12667)
!12674 = !DILocation(line: 409, column: 12, scope: !12667)
!12675 = !DILocation(line: 416, column: 2, scope: !12667)
!12676 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2371, file: !2371, line: 440, type: !12677, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12679)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{null, !734, !109}
!12679 = !{!12680, !12681, !12682, !12688}
!12680 = !DILocalVariable(name: "slice", arg: 1, scope: !12676, file: !2371, line: 440, type: !734)
!12681 = !DILocalVariable(name: "prio", arg: 2, scope: !12676, file: !2371, line: 440, type: !109)
!12682 = !DILocalVariable(name: "__i", scope: !12683, file: !2371, line: 442, type: !12684)
!12683 = distinct !DILexicalBlock(scope: !12676, file: !2371, line: 442, column: 2)
!12684 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !12685)
!12685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !12686)
!12686 = !{!12687}
!12687 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12685, file: !250, line: 33, baseType: !109, size: 32)
!12688 = !DILocalVariable(name: "__key", scope: !12683, file: !2371, line: 442, type: !12684)
!12689 = !DILocation(line: 0, scope: !12676)
!12690 = !DILocation(line: 0, scope: !12683)
!12691 = !DILocalVariable(name: "l", arg: 1, scope: !12692, file: !250, line: 136, type: !12695)
!12692 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !12693, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12696)
!12693 = !DISubroutineType(types: !12694)
!12694 = !{!12684, !12695}
!12695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!12696 = !{!12691, !12697}
!12697 = !DILocalVariable(name: "k", scope: !12692, file: !250, line: 139, type: !12684)
!12698 = !DILocation(line: 0, scope: !12692, inlinedAt: !12699)
!12699 = distinct !DILocation(line: 442, column: 2, scope: !12683)
!12700 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !12705)
!12701 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4955, file: !4955, line: 42, type: !4956, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12702)
!12702 = !{!12703, !12704}
!12703 = !DILocalVariable(name: "key", scope: !12701, file: !4955, line: 44, type: !32)
!12704 = !DILocalVariable(name: "tmp", scope: !12701, file: !4955, line: 53, type: !32)
!12705 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !12699)
!12706 = !{i64 2322256}
!12707 = !DILocation(line: 0, scope: !12701, inlinedAt: !12705)
!12708 = !DILocation(line: 443, column: 29, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12710, file: !2371, line: 442, column: 26)
!12710 = distinct !DILexicalBlock(scope: !12683, file: !2371, line: 442, column: 2)
!12711 = !DILocation(line: 444, column: 17, scope: !12709)
!12712 = !DILocation(line: 445, column: 51, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12709, file: !2371, line: 445, column: 7)
!12714 = !DILocation(line: 445, column: 7, scope: !12709)
!12715 = !DILocation(line: 0, scope: !12709)
!12716 = !DILocation(line: 451, column: 18, scope: !12709)
!12717 = !DILocation(line: 452, column: 3, scope: !12709)
!12718 = !DILocalVariable(name: "key", arg: 2, scope: !12719, file: !250, line: 190, type: !12684)
!12719 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !12720, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12722)
!12720 = !DISubroutineType(types: !12721)
!12721 = !{null, !12695, !12684}
!12722 = !{!12723, !12718}
!12723 = !DILocalVariable(name: "l", arg: 1, scope: !12719, file: !250, line: 189, type: !12695)
!12724 = !DILocation(line: 0, scope: !12719, inlinedAt: !12725)
!12725 = distinct !DILocation(line: 442, column: 2, scope: !12710)
!12726 = !DILocalVariable(name: "key", arg: 1, scope: !12727, file: !4955, line: 84, type: !32)
!12727 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4955, file: !4955, line: 84, type: !4966, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12728)
!12728 = !{!12726}
!12729 = !DILocation(line: 0, scope: !12727, inlinedAt: !12730)
!12730 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !12725)
!12731 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !12730)
!12732 = !{i64 2323073}
!12733 = !DILocation(line: 454, column: 1, scope: !12676)
!12734 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12254, file: !12254, line: 389, type: !6139, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12735)
!12735 = !{!12736}
!12736 = !DILocalVariable(name: "t", arg: 1, scope: !12734, file: !12254, line: 389, type: !110)
!12737 = !DILocation(line: 0, scope: !12734)
!12738 = !DILocalVariable(name: "t", arg: 1, scope: !12739, file: !12254, line: 102, type: !111)
!12739 = distinct !DISubprogram(name: "z_tmcvt", scope: !12254, file: !12254, line: 102, type: !12262, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12740)
!12740 = !{!12738, !12741, !12742, !12743, !12744, !12745, !12746, !12747, !12748, !12749, !12750}
!12741 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12739, file: !12254, line: 102, type: !110)
!12742 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12739, file: !12254, line: 103, type: !110)
!12743 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12739, file: !12254, line: 103, type: !315)
!12744 = !DILocalVariable(name: "result32", arg: 5, scope: !12739, file: !12254, line: 104, type: !315)
!12745 = !DILocalVariable(name: "round_up", arg: 6, scope: !12739, file: !12254, line: 104, type: !315)
!12746 = !DILocalVariable(name: "round_off", arg: 7, scope: !12739, file: !12254, line: 105, type: !315)
!12747 = !DILocalVariable(name: "mul_ratio", scope: !12739, file: !12254, line: 107, type: !315)
!12748 = !DILocalVariable(name: "div_ratio", scope: !12739, file: !12254, line: 109, type: !315)
!12749 = !DILocalVariable(name: "off", scope: !12739, file: !12254, line: 116, type: !111)
!12750 = !DILocalVariable(name: "rdivisor", scope: !12751, file: !12254, line: 119, type: !110)
!12751 = distinct !DILexicalBlock(scope: !12752, file: !12254, line: 118, column: 18)
!12752 = distinct !DILexicalBlock(scope: !12739, file: !12254, line: 118, column: 6)
!12753 = !DILocation(line: 0, scope: !12739, inlinedAt: !12754)
!12754 = distinct !DILocation(line: 392, column: 9, scope: !12734)
!12755 = !DILocation(line: 143, column: 25, scope: !12756, inlinedAt: !12754)
!12756 = distinct !DILexicalBlock(scope: !12757, file: !12254, line: 142, column: 17)
!12757 = distinct !DILexicalBlock(scope: !12758, file: !12254, line: 142, column: 7)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !12254, line: 141, column: 24)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !12254, line: 141, column: 13)
!12760 = distinct !DILexicalBlock(scope: !12739, file: !12254, line: 134, column: 6)
!12761 = !DILocation(line: 392, column: 2, scope: !12734)
!12762 = distinct !DISubprogram(name: "z_time_slice", scope: !2371, file: !2371, line: 502, type: !6776, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12763)
!12763 = !{!12764, !12765}
!12764 = !DILocalVariable(name: "ticks", arg: 1, scope: !12762, file: !2371, line: 502, type: !109)
!12765 = !DILocalVariable(name: "key", scope: !12762, file: !2371, line: 511, type: !12684)
!12766 = !DILocation(line: 0, scope: !12762)
!12767 = !DILocation(line: 0, scope: !12692, inlinedAt: !12768)
!12768 = distinct !DILocation(line: 511, column: 25, scope: !12762)
!12769 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !12770)
!12770 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !12768)
!12771 = !DILocation(line: 0, scope: !12701, inlinedAt: !12770)
!12772 = !DILocation(line: 514, column: 6, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12762, file: !2371, line: 514, column: 6)
!12774 = !DILocation(line: 514, column: 25, scope: !12773)
!12775 = !DILocation(line: 514, column: 22, scope: !12773)
!12776 = !DILocation(line: 514, column: 6, scope: !12762)
!12777 = !DILocation(line: 515, column: 3, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12773, file: !2371, line: 514, column: 35)
!12779 = !DILocation(line: 0, scope: !12719, inlinedAt: !12780)
!12780 = distinct !DILocation(line: 516, column: 3, scope: !12778)
!12781 = !DILocation(line: 0, scope: !12727, inlinedAt: !12782)
!12782 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !12780)
!12783 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !12782)
!12784 = !DILocation(line: 517, column: 3, scope: !12778)
!12785 = !DILocation(line: 519, column: 18, scope: !12762)
!12786 = !DILocation(line: 522, column: 6, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12762, file: !2371, line: 522, column: 6)
!12788 = !DILocation(line: 522, column: 27, scope: !12787)
!12789 = !DILocation(line: 522, column: 30, scope: !12787)
!12790 = !DILocation(line: 522, column: 6, scope: !12762)
!12791 = !DILocation(line: 523, column: 30, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12793, file: !2371, line: 523, column: 7)
!12793 = distinct !DILexicalBlock(scope: !12787, file: !2371, line: 522, column: 51)
!12794 = !DILocation(line: 523, column: 13, scope: !12792)
!12795 = !DILocation(line: 523, column: 7, scope: !12793)
!12796 = !DILocation(line: 530, column: 10, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12792, file: !2371, line: 523, column: 43)
!12798 = !DILocation(line: 531, column: 3, scope: !12797)
!12799 = !DILocation(line: 532, column: 30, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12792, file: !2371, line: 531, column: 10)
!12801 = !DILocation(line: 535, column: 29, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12787, file: !2371, line: 534, column: 9)
!12803 = !DILocation(line: 0, scope: !12719, inlinedAt: !12804)
!12804 = distinct !DILocation(line: 537, column: 2, scope: !12762)
!12805 = !DILocation(line: 0, scope: !12727, inlinedAt: !12806)
!12806 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !12804)
!12807 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !12806)
!12808 = !DILocation(line: 538, column: 1, scope: !12762)
!12809 = distinct !DISubprogram(name: "sliceable", scope: !2371, file: !2371, line: 468, type: !12810, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12812)
!12810 = !DISubroutineType(types: !12811)
!12811 = !{!315, !2264}
!12812 = !{!12813, !12814}
!12813 = !DILocalVariable(name: "thread", arg: 1, scope: !12809, file: !2371, line: 468, type: !2264)
!12814 = !DILocalVariable(name: "ret", scope: !12809, file: !2371, line: 470, type: !315)
!12815 = !DILocation(line: 0, scope: !12809)
!12816 = !DILocation(line: 470, column: 13, scope: !12809)
!12817 = !DILocation(line: 471, column: 3, scope: !12809)
!12818 = !DILocation(line: 471, column: 7, scope: !12809)
!12819 = !DILocation(line: 472, column: 3, scope: !12809)
!12820 = !DILocation(line: 472, column: 37, scope: !12809)
!12821 = !DILocation(line: 472, column: 24, scope: !12809)
!12822 = !DILocation(line: 472, column: 43, scope: !12809)
!12823 = !DILocation(line: 472, column: 7, scope: !12809)
!12824 = !DILocation(line: 473, column: 3, scope: !12809)
!12825 = !DILocation(line: 473, column: 7, scope: !12809)
!12826 = !DILocation(line: 473, column: 6, scope: !12809)
!12827 = !DILocation(line: 479, column: 2, scope: !12809)
!12828 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2371, file: !2371, line: 482, type: !12829, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12831)
!12829 = !DISubroutineType(types: !12830)
!12830 = !{!12684, !12684}
!12831 = !{!12832, !12833}
!12832 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12828, file: !2371, line: 482, type: !12684)
!12833 = !DILocalVariable(name: "curr", scope: !12828, file: !2371, line: 484, type: !2264)
!12834 = !DILocation(line: 0, scope: !12828)
!12835 = !DILocation(line: 484, column: 26, scope: !12828)
!12836 = !DILocation(line: 493, column: 7, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12828, file: !2371, line: 493, column: 6)
!12838 = !DILocation(line: 493, column: 6, scope: !12828)
!12839 = !DILocation(line: 494, column: 3, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12837, file: !2371, line: 493, column: 49)
!12841 = !DILocation(line: 495, column: 2, scope: !12840)
!12842 = !DILocation(line: 496, column: 2, scope: !12828)
!12843 = !DILocation(line: 499, column: 1, scope: !12828)
!12844 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11665, file: !11665, line: 106, type: !12810, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12845)
!12845 = !{!12846, !12847}
!12846 = !DILocalVariable(name: "thread", arg: 1, scope: !12844, file: !11665, line: 106, type: !2264)
!12847 = !DILocalVariable(name: "state", scope: !12844, file: !11665, line: 108, type: !178)
!12848 = !DILocation(line: 0, scope: !12844)
!12849 = !DILocation(line: 108, column: 31, scope: !12844)
!12850 = !DILocation(line: 110, column: 16, scope: !12844)
!12851 = !DILocation(line: 111, column: 41, scope: !12844)
!12852 = !DILocation(line: 110, column: 2, scope: !12844)
!12853 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2371, file: !2371, line: 393, type: !12650, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12854)
!12854 = !{!12855}
!12855 = !DILocalVariable(name: "thread", arg: 1, scope: !12853, file: !2371, line: 393, type: !2264)
!12856 = !DILocation(line: 0, scope: !12853)
!12857 = !DILocation(line: 395, column: 6, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12853, file: !2371, line: 395, column: 6)
!12859 = !DILocation(line: 395, column: 6, scope: !12853)
!12860 = !DILocalVariable(name: "thread", arg: 1, scope: !12861, file: !2371, line: 264, type: !2264)
!12861 = distinct !DISubprogram(name: "dequeue_thread", scope: !2371, file: !2371, line: 264, type: !12650, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12862)
!12862 = !{!12860}
!12863 = !DILocation(line: 0, scope: !12861, inlinedAt: !12864)
!12864 = distinct !DILocation(line: 396, column: 3, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12858, file: !2371, line: 395, column: 34)
!12866 = !DILocation(line: 266, column: 15, scope: !12861, inlinedAt: !12864)
!12867 = !DILocation(line: 266, column: 28, scope: !12861, inlinedAt: !12864)
!12868 = !DILocalVariable(name: "thread", arg: 1, scope: !12869, file: !2371, line: 232, type: !2264)
!12869 = distinct !DISubprogram(name: "runq_remove", scope: !2371, file: !2371, line: 232, type: !12650, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12870)
!12870 = !{!12868}
!12871 = !DILocation(line: 0, scope: !12869, inlinedAt: !12872)
!12872 = distinct !DILocation(line: 268, column: 3, scope: !12873, inlinedAt: !12864)
!12873 = distinct !DILexicalBlock(scope: !12874, file: !2371, line: 267, column: 35)
!12874 = distinct !DILexicalBlock(scope: !12861, file: !2371, line: 267, column: 6)
!12875 = !DILocation(line: 234, column: 2, scope: !12869, inlinedAt: !12872)
!12876 = !DILocation(line: 397, column: 2, scope: !12865)
!12877 = !DILocalVariable(name: "thread", arg: 1, scope: !12878, file: !2371, line: 250, type: !2264)
!12878 = distinct !DISubprogram(name: "queue_thread", scope: !2371, file: !2371, line: 250, type: !12650, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12879)
!12879 = !{!12877}
!12880 = !DILocation(line: 0, scope: !12878, inlinedAt: !12881)
!12881 = distinct !DILocation(line: 398, column: 2, scope: !12853)
!12882 = !DILocation(line: 252, column: 15, scope: !12878, inlinedAt: !12881)
!12883 = !DILocation(line: 252, column: 28, scope: !12878, inlinedAt: !12881)
!12884 = !DILocalVariable(name: "thread", arg: 1, scope: !12885, file: !2371, line: 227, type: !2264)
!12885 = distinct !DISubprogram(name: "runq_add", scope: !2371, file: !2371, line: 227, type: !12650, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12886)
!12886 = !{!12884}
!12887 = !DILocation(line: 0, scope: !12885, inlinedAt: !12888)
!12888 = distinct !DILocation(line: 254, column: 3, scope: !12889, inlinedAt: !12881)
!12889 = distinct !DILexicalBlock(scope: !12890, file: !2371, line: 253, column: 35)
!12890 = distinct !DILexicalBlock(scope: !12878, file: !2371, line: 253, column: 6)
!12891 = !DILocalVariable(name: "pq", arg: 1, scope: !12892, file: !2371, line: 181, type: !12895)
!12892 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2371, file: !2371, line: 181, type: !12893, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12896)
!12893 = !DISubroutineType(types: !12894)
!12894 = !{null, !12895, !2264}
!12895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 32)
!12896 = !{!12891, !12897, !12898}
!12897 = !DILocalVariable(name: "thread", arg: 2, scope: !12892, file: !2371, line: 182, type: !2264)
!12898 = !DILocalVariable(name: "t", scope: !12892, file: !2371, line: 184, type: !2264)
!12899 = !DILocation(line: 0, scope: !12892, inlinedAt: !12900)
!12900 = distinct !DILocation(line: 229, column: 2, scope: !12885, inlinedAt: !12888)
!12901 = !DILocation(line: 188, column: 2, scope: !12902, inlinedAt: !12900)
!12902 = distinct !DILexicalBlock(scope: !12892, file: !2371, line: 188, column: 2)
!12903 = !DILocation(line: 188, column: 2, scope: !12904, inlinedAt: !12900)
!12904 = distinct !DILexicalBlock(scope: !12902, file: !2371, line: 188, column: 2)
!12905 = !DILocation(line: 0, scope: !12902, inlinedAt: !12900)
!12906 = !DILocation(line: 189, column: 7, scope: !12907, inlinedAt: !12900)
!12907 = distinct !DILexicalBlock(scope: !12908, file: !2371, line: 189, column: 7)
!12908 = distinct !DILexicalBlock(scope: !12904, file: !2371, line: 188, column: 56)
!12909 = !DILocation(line: 189, column: 35, scope: !12907, inlinedAt: !12900)
!12910 = !DILocation(line: 189, column: 7, scope: !12908, inlinedAt: !12900)
!12911 = !DILocation(line: 191, column: 21, scope: !12912, inlinedAt: !12900)
!12912 = distinct !DILexicalBlock(scope: !12907, file: !2371, line: 189, column: 40)
!12913 = !DILocation(line: 190, column: 4, scope: !12912, inlinedAt: !12900)
!12914 = !DILocation(line: 192, column: 4, scope: !12912, inlinedAt: !12900)
!12915 = distinct !{!12915, !12901, !12916}
!12916 = !DILocation(line: 194, column: 2, scope: !12902, inlinedAt: !12900)
!12917 = !DILocation(line: 196, column: 37, scope: !12892, inlinedAt: !12900)
!12918 = !DILocation(line: 196, column: 2, scope: !12892, inlinedAt: !12900)
!12919 = !DILocation(line: 197, column: 1, scope: !12892, inlinedAt: !12900)
!12920 = !DILocation(line: 399, column: 25, scope: !12853)
!12921 = !DILocation(line: 399, column: 22, scope: !12853)
!12922 = !DILocation(line: 399, column: 2, scope: !12853)
!12923 = !DILocation(line: 400, column: 1, scope: !12853)
!12924 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11665, file: !11665, line: 136, type: !12810, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12925)
!12925 = !{!12926}
!12926 = !DILocalVariable(name: "thread", arg: 1, scope: !12924, file: !11665, line: 136, type: !2264)
!12927 = !DILocation(line: 0, scope: !12924)
!12928 = !DILocation(line: 138, column: 9, scope: !12924)
!12929 = !DILocation(line: 138, column: 2, scope: !12924)
!12930 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2371, file: !2371, line: 1137, type: !12893, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12931)
!12931 = !{!12932, !12933}
!12932 = !DILocalVariable(name: "pq", arg: 1, scope: !12930, file: !2371, line: 1137, type: !12895)
!12933 = !DILocalVariable(name: "thread", arg: 2, scope: !12930, file: !2371, line: 1137, type: !2264)
!12934 = !DILocation(line: 0, scope: !12930)
!12935 = !DILocation(line: 1141, column: 33, scope: !12930)
!12936 = !DILocation(line: 1141, column: 2, scope: !12930)
!12937 = !DILocation(line: 1142, column: 1, scope: !12930)
!12938 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !12939, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12941)
!12939 = !DISubroutineType(types: !12940)
!12940 = !{!2367, !12895}
!12941 = !{!12942}
!12942 = !DILocalVariable(name: "list", arg: 1, scope: !12938, file: !127, line: 294, type: !12895)
!12943 = !DILocation(line: 0, scope: !12938)
!12944 = !DILocation(line: 296, column: 9, scope: !12938)
!12945 = !DILocation(line: 296, column: 49, scope: !12938)
!12946 = !DILocation(line: 296, column: 2, scope: !12938)
!12947 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !12948, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12950)
!12948 = !DISubroutineType(types: !12949)
!12949 = !{null, !2367, !2367}
!12950 = !{!12951, !12952, !12953}
!12951 = !DILocalVariable(name: "successor", arg: 1, scope: !12947, file: !127, line: 443, type: !2367)
!12952 = !DILocalVariable(name: "node", arg: 2, scope: !12947, file: !127, line: 443, type: !2367)
!12953 = !DILocalVariable(name: "prev", scope: !12947, file: !127, line: 445, type: !12954)
!12954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2367)
!12955 = !DILocation(line: 0, scope: !12947)
!12956 = !DILocation(line: 445, column: 39, scope: !12947)
!12957 = !DILocation(line: 447, column: 8, scope: !12947)
!12958 = !DILocation(line: 447, column: 13, scope: !12947)
!12959 = !DILocation(line: 448, column: 8, scope: !12947)
!12960 = !DILocation(line: 448, column: 13, scope: !12947)
!12961 = !DILocation(line: 449, column: 8, scope: !12947)
!12962 = !DILocation(line: 449, column: 13, scope: !12947)
!12963 = !DILocation(line: 450, column: 18, scope: !12947)
!12964 = !DILocation(line: 451, column: 1, scope: !12947)
!12965 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !12966, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12968)
!12966 = !DISubroutineType(types: !12967)
!12967 = !{!2367, !12895, !2367}
!12968 = !{!12969, !12970}
!12969 = !DILocalVariable(name: "list", arg: 1, scope: !12965, file: !127, line: 341, type: !12895)
!12970 = !DILocalVariable(name: "node", arg: 2, scope: !12965, file: !127, line: 342, type: !2367)
!12971 = !DILocation(line: 0, scope: !12965)
!12972 = !DILocation(line: 344, column: 15, scope: !12965)
!12973 = !DILocation(line: 344, column: 9, scope: !12965)
!12974 = !DILocation(line: 344, column: 26, scope: !12965)
!12975 = !DILocation(line: 344, column: 2, scope: !12965)
!12976 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !12977, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12979)
!12977 = !DISubroutineType(types: !12978)
!12978 = !{null, !12895, !2367}
!12979 = !{!12980, !12981, !12982}
!12980 = !DILocalVariable(name: "list", arg: 1, scope: !12976, file: !127, line: 404, type: !12895)
!12981 = !DILocalVariable(name: "node", arg: 2, scope: !12976, file: !127, line: 404, type: !2367)
!12982 = !DILocalVariable(name: "tail", scope: !12976, file: !127, line: 406, type: !12954)
!12983 = !DILocation(line: 0, scope: !12976)
!12984 = !DILocation(line: 406, column: 34, scope: !12976)
!12985 = !DILocation(line: 408, column: 8, scope: !12976)
!12986 = !DILocation(line: 408, column: 13, scope: !12976)
!12987 = !DILocation(line: 409, column: 8, scope: !12976)
!12988 = !DILocation(line: 409, column: 13, scope: !12976)
!12989 = !DILocation(line: 411, column: 8, scope: !12976)
!12990 = !DILocation(line: 411, column: 13, scope: !12976)
!12991 = !DILocation(line: 412, column: 13, scope: !12976)
!12992 = !DILocation(line: 413, column: 1, scope: !12976)
!12993 = distinct !DISubprogram(name: "update_cache", scope: !2371, file: !2371, line: 559, type: !6776, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !12994)
!12994 = !{!12995, !12996}
!12995 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12993, file: !2371, line: 559, type: !109)
!12996 = !DILocalVariable(name: "thread", scope: !12993, file: !2371, line: 562, type: !2264)
!12997 = !DILocation(line: 0, scope: !12993)
!12998 = !DILocalVariable(name: "pq", arg: 1, scope: !12999, file: !2371, line: 165, type: !12895)
!12999 = distinct !DISubprogram(name: "_priq_dumb_mask_best", scope: !2371, file: !2371, line: 165, type: !13000, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13002)
!13000 = !DISubroutineType(types: !13001)
!13001 = !{!2264, !12895}
!13002 = !{!12998, !13003}
!13003 = !DILocalVariable(name: "thread", scope: !12999, file: !2371, line: 170, type: !2264)
!13004 = !DILocation(line: 0, scope: !12999, inlinedAt: !13005)
!13005 = distinct !DILocation(line: 239, column: 9, scope: !13006, inlinedAt: !13009)
!13006 = distinct !DISubprogram(name: "runq_best", scope: !2371, file: !2371, line: 237, type: !13007, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !251)
!13007 = !DISubroutineType(types: !13008)
!13008 = !{!2264}
!13009 = distinct !DILocation(line: 314, column: 28, scope: !13010, inlinedAt: !13013)
!13010 = distinct !DISubprogram(name: "next_up", scope: !2371, file: !2371, line: 312, type: !13007, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13011)
!13011 = !{!13012}
!13012 = !DILocalVariable(name: "thread", scope: !13010, file: !2371, line: 314, type: !2264)
!13013 = distinct !DILocation(line: 562, column: 28, scope: !12993)
!13014 = !DILocation(line: 172, column: 2, scope: !13015, inlinedAt: !13005)
!13015 = distinct !DILexicalBlock(scope: !12999, file: !2371, line: 172, column: 2)
!13016 = !DILocation(line: 172, column: 2, scope: !13017, inlinedAt: !13005)
!13017 = distinct !DILexicalBlock(scope: !13015, file: !2371, line: 172, column: 2)
!13018 = !DILocation(line: 173, column: 21, scope: !13019, inlinedAt: !13005)
!13019 = distinct !DILexicalBlock(scope: !13020, file: !2371, line: 173, column: 7)
!13020 = distinct !DILexicalBlock(scope: !13017, file: !2371, line: 172, column: 61)
!13021 = !DILocation(line: 173, column: 8, scope: !13019, inlinedAt: !13005)
!13022 = !DILocation(line: 173, column: 30, scope: !13019, inlinedAt: !13005)
!13023 = !DILocation(line: 173, column: 55, scope: !13019, inlinedAt: !13005)
!13024 = !DILocation(line: 173, column: 7, scope: !13020, inlinedAt: !13005)
!13025 = distinct !{!13025, !13014, !13026}
!13026 = !DILocation(line: 176, column: 2, scope: !13015, inlinedAt: !13005)
!13027 = !DILocation(line: 0, scope: !13015, inlinedAt: !13005)
!13028 = !DILocation(line: 0, scope: !13010, inlinedAt: !13013)
!13029 = !DILocation(line: 340, column: 17, scope: !13010, inlinedAt: !13013)
!13030 = !DILocation(line: 340, column: 9, scope: !13010, inlinedAt: !13013)
!13031 = !DILocalVariable(name: "thread", arg: 1, scope: !13032, file: !2371, line: 127, type: !2264)
!13032 = distinct !DISubprogram(name: "should_preempt", scope: !2371, file: !2371, line: 127, type: !13033, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13035)
!13033 = !DISubroutineType(types: !13034)
!13034 = !{!315, !2264, !109}
!13035 = !{!13031, !13036}
!13036 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13032, file: !2371, line: 128, type: !109)
!13037 = !DILocation(line: 0, scope: !13032, inlinedAt: !13038)
!13038 = distinct !DILocation(line: 564, column: 6, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !12993, file: !2371, line: 564, column: 6)
!13040 = !DILocation(line: 133, column: 17, scope: !13041, inlinedAt: !13038)
!13041 = distinct !DILexicalBlock(scope: !13032, file: !2371, line: 133, column: 6)
!13042 = !DILocation(line: 0, scope: !13039)
!13043 = !DILocation(line: 133, column: 6, scope: !13032, inlinedAt: !13038)
!13044 = !DILocation(line: 140, column: 6, scope: !13045, inlinedAt: !13038)
!13045 = distinct !DILexicalBlock(scope: !13032, file: !2371, line: 140, column: 6)
!13046 = !DILocation(line: 140, column: 6, scope: !13032, inlinedAt: !13038)
!13047 = !DILocation(line: 150, column: 9, scope: !13048, inlinedAt: !13038)
!13048 = distinct !DILexicalBlock(scope: !13032, file: !2371, line: 149, column: 6)
!13049 = !DILocation(line: 149, column: 6, scope: !13032, inlinedAt: !13038)
!13050 = !DILocation(line: 157, column: 6, scope: !13051, inlinedAt: !13038)
!13051 = distinct !DILexicalBlock(scope: !13032, file: !2371, line: 157, column: 6)
!13052 = !DILocation(line: 564, column: 6, scope: !12993)
!13053 = !DILocation(line: 566, column: 14, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13055, file: !2371, line: 566, column: 7)
!13055 = distinct !DILexicalBlock(scope: !13039, file: !2371, line: 564, column: 42)
!13056 = !DILocation(line: 566, column: 7, scope: !13055)
!13057 = !DILocation(line: 567, column: 4, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13054, file: !2371, line: 566, column: 27)
!13059 = !DILocation(line: 568, column: 3, scope: !13058)
!13060 = !DILocation(line: 585, column: 1, scope: !12993)
!13061 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11665, file: !11665, line: 115, type: !12810, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13062)
!13062 = !{!13063}
!13063 = !DILocalVariable(name: "thread", arg: 1, scope: !13061, file: !11665, line: 115, type: !2264)
!13064 = !DILocation(line: 0, scope: !13061)
!13065 = !DILocation(line: 117, column: 46, scope: !13061)
!13066 = !DILocation(line: 117, column: 10, scope: !13061)
!13067 = !DILocation(line: 117, column: 9, scope: !13061)
!13068 = !DILocation(line: 117, column: 2, scope: !13061)
!13069 = distinct !DISubprogram(name: "is_preempt", scope: !2371, file: !2371, line: 62, type: !12668, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13070)
!13070 = !{!13071}
!13071 = !DILocalVariable(name: "thread", arg: 1, scope: !13069, file: !2371, line: 62, type: !2264)
!13072 = !DILocation(line: 0, scope: !13069)
!13073 = !DILocation(line: 65, column: 22, scope: !13069)
!13074 = !DILocation(line: 65, column: 30, scope: !13069)
!13075 = !DILocation(line: 65, column: 2, scope: !13069)
!13076 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12086, file: !12086, line: 35, type: !13077, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13081)
!13077 = !DISubroutineType(types: !13078)
!13078 = !{!315, !13079}
!13079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13080, size: 32)
!13080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2316)
!13081 = !{!13082}
!13082 = !DILocalVariable(name: "to", arg: 1, scope: !13076, file: !12086, line: 35, type: !13079)
!13083 = !DILocation(line: 0, scope: !13076)
!13084 = !DILocation(line: 37, column: 35, scope: !13076)
!13085 = !DILocation(line: 37, column: 10, scope: !13076)
!13086 = !DILocation(line: 37, column: 9, scope: !13076)
!13087 = !DILocation(line: 37, column: 2, scope: !13076)
!13088 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !13089, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13093)
!13089 = !DISubroutineType(types: !13090)
!13090 = !{!315, !13091}
!13091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13092, size: 32)
!13092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2274)
!13093 = !{!13094}
!13094 = !DILocalVariable(name: "node", arg: 1, scope: !13088, file: !127, line: 225, type: !13091)
!13095 = !DILocation(line: 0, scope: !13088)
!13096 = !DILocation(line: 227, column: 15, scope: !13088)
!13097 = !DILocation(line: 227, column: 20, scope: !13088)
!13098 = !DILocation(line: 227, column: 2, scope: !13088)
!13099 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !12966, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13100)
!13100 = !{!13101, !13102}
!13101 = !DILocalVariable(name: "list", arg: 1, scope: !13099, file: !127, line: 325, type: !12895)
!13102 = !DILocalVariable(name: "node", arg: 2, scope: !13099, file: !127, line: 326, type: !2367)
!13103 = !DILocation(line: 0, scope: !13099)
!13104 = !DILocation(line: 328, column: 24, scope: !13099)
!13105 = !DILocation(line: 328, column: 15, scope: !13099)
!13106 = !DILocation(line: 328, column: 9, scope: !13099)
!13107 = !DILocation(line: 328, column: 45, scope: !13099)
!13108 = !DILocation(line: 328, column: 2, scope: !13099)
!13109 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !13110, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13112)
!13110 = !DISubroutineType(types: !13111)
!13111 = !{!315, !12895}
!13112 = !{!13113}
!13113 = !DILocalVariable(name: "list", arg: 1, scope: !13109, file: !127, line: 266, type: !12895)
!13114 = !DILocation(line: 0, scope: !13109)
!13115 = !DILocation(line: 268, column: 15, scope: !13109)
!13116 = !DILocation(line: 268, column: 20, scope: !13109)
!13117 = !DILocation(line: 268, column: 2, scope: !13109)
!13118 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !13119, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13121)
!13119 = !DISubroutineType(types: !13120)
!13120 = !{null, !2367}
!13121 = !{!13122, !13123, !13124}
!13122 = !DILocalVariable(name: "node", arg: 1, scope: !13118, file: !127, line: 496, type: !2367)
!13123 = !DILocalVariable(name: "prev", scope: !13118, file: !127, line: 498, type: !12954)
!13124 = !DILocalVariable(name: "next", scope: !13118, file: !127, line: 499, type: !12954)
!13125 = !DILocation(line: 0, scope: !13118)
!13126 = !DILocation(line: 498, column: 34, scope: !13118)
!13127 = !DILocation(line: 499, column: 34, scope: !13118)
!13128 = !DILocation(line: 501, column: 8, scope: !13118)
!13129 = !DILocation(line: 501, column: 13, scope: !13118)
!13130 = !DILocation(line: 502, column: 8, scope: !13118)
!13131 = !DILocation(line: 502, column: 13, scope: !13118)
!13132 = !DILocation(line: 503, column: 2, scope: !13118)
!13133 = !DILocation(line: 504, column: 1, scope: !13118)
!13134 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13119, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13135)
!13135 = !{!13136}
!13136 = !DILocalVariable(name: "node", arg: 1, scope: !13134, file: !127, line: 211, type: !2367)
!13137 = !DILocation(line: 0, scope: !13134)
!13138 = !DILocation(line: 213, column: 8, scope: !13134)
!13139 = !DILocation(line: 213, column: 13, scope: !13134)
!13140 = !DILocation(line: 214, column: 8, scope: !13134)
!13141 = !DILocation(line: 214, column: 13, scope: !13134)
!13142 = !DILocation(line: 215, column: 1, scope: !13134)
!13143 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11665, file: !11665, line: 131, type: !13144, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13146)
!13144 = !DISubroutineType(types: !13145)
!13145 = !{!315, !2264, !110}
!13146 = !{!13147, !13148}
!13147 = !DILocalVariable(name: "thread", arg: 1, scope: !13143, file: !11665, line: 131, type: !2264)
!13148 = !DILocalVariable(name: "state", arg: 2, scope: !13143, file: !11665, line: 131, type: !110)
!13149 = !DILocation(line: 0, scope: !13143)
!13150 = !DILocation(line: 133, column: 23, scope: !13143)
!13151 = !DILocation(line: 133, column: 45, scope: !13143)
!13152 = !DILocation(line: 133, column: 2, scope: !13143)
!13153 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11665, file: !11665, line: 211, type: !13154, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13156)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{!315, !109, !109}
!13156 = !{!13157, !13158}
!13157 = !DILocalVariable(name: "prio", arg: 1, scope: !13153, file: !11665, line: 211, type: !109)
!13158 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13153, file: !11665, line: 211, type: !109)
!13159 = !DILocation(line: 0, scope: !13153)
!13160 = !DILocation(line: 213, column: 9, scope: !13153)
!13161 = !DILocation(line: 213, column: 2, scope: !13153)
!13162 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11665, file: !11665, line: 83, type: !12810, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13163)
!13163 = !{!13164}
!13164 = !DILocalVariable(name: "thread", arg: 1, scope: !13162, file: !11665, line: 83, type: !2264)
!13165 = !DILocation(line: 0, scope: !13162)
!13166 = !DILocation(line: 89, column: 16, scope: !13162)
!13167 = !DILocation(line: 89, column: 2, scope: !13162)
!13168 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11665, file: !11665, line: 206, type: !13154, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13169)
!13169 = !{!13170, !13171}
!13170 = !DILocalVariable(name: "prio1", arg: 1, scope: !13168, file: !11665, line: 206, type: !109)
!13171 = !DILocalVariable(name: "prio2", arg: 2, scope: !13168, file: !11665, line: 206, type: !109)
!13172 = !DILocation(line: 0, scope: !13168)
!13173 = !DILocation(line: 208, column: 15, scope: !13168)
!13174 = !DILocation(line: 208, column: 2, scope: !13168)
!13175 = distinct !DISubprogram(name: "z_ready_thread", scope: !2371, file: !2371, line: 635, type: !12650, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13176)
!13176 = !{!13177, !13178, !13180}
!13177 = !DILocalVariable(name: "thread", arg: 1, scope: !13175, file: !2371, line: 635, type: !2264)
!13178 = !DILocalVariable(name: "__i", scope: !13179, file: !2371, line: 637, type: !12684)
!13179 = distinct !DILexicalBlock(scope: !13175, file: !2371, line: 637, column: 2)
!13180 = !DILocalVariable(name: "__key", scope: !13179, file: !2371, line: 637, type: !12684)
!13181 = !DILocation(line: 0, scope: !13175)
!13182 = !DILocation(line: 0, scope: !13179)
!13183 = !DILocation(line: 0, scope: !12692, inlinedAt: !13184)
!13184 = distinct !DILocation(line: 637, column: 2, scope: !13179)
!13185 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13186)
!13186 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13184)
!13187 = !DILocation(line: 0, scope: !12701, inlinedAt: !13186)
!13188 = !DILocation(line: 639, column: 4, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13190, file: !2371, line: 638, column: 41)
!13190 = distinct !DILexicalBlock(scope: !13191, file: !2371, line: 638, column: 7)
!13191 = distinct !DILexicalBlock(scope: !13192, file: !2371, line: 637, column: 26)
!13192 = distinct !DILexicalBlock(scope: !13179, file: !2371, line: 637, column: 2)
!13193 = !DILocation(line: 0, scope: !12719, inlinedAt: !13194)
!13194 = distinct !DILocation(line: 637, column: 2, scope: !13192)
!13195 = !DILocation(line: 0, scope: !12727, inlinedAt: !13196)
!13196 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13194)
!13197 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13196)
!13198 = !DILocation(line: 642, column: 1, scope: !13175)
!13199 = distinct !DISubprogram(name: "ready_thread", scope: !2371, file: !2371, line: 617, type: !12650, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13200)
!13200 = !{!13201}
!13201 = !DILocalVariable(name: "thread", arg: 1, scope: !13199, file: !2371, line: 617, type: !2264)
!13202 = !DILocation(line: 0, scope: !13199)
!13203 = !DILocation(line: 626, column: 7, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13199, file: !2371, line: 626, column: 6)
!13205 = !DILocation(line: 626, column: 34, scope: !13204)
!13206 = !DILocation(line: 626, column: 37, scope: !13204)
!13207 = !DILocation(line: 626, column: 6, scope: !13199)
!13208 = !DILocation(line: 0, scope: !12878, inlinedAt: !13209)
!13209 = distinct !DILocation(line: 629, column: 3, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13204, file: !2371, line: 626, column: 64)
!13211 = !DILocation(line: 252, column: 15, scope: !12878, inlinedAt: !13209)
!13212 = !DILocation(line: 252, column: 28, scope: !12878, inlinedAt: !13209)
!13213 = !DILocation(line: 0, scope: !12885, inlinedAt: !13214)
!13214 = distinct !DILocation(line: 254, column: 3, scope: !12889, inlinedAt: !13209)
!13215 = !DILocation(line: 0, scope: !12892, inlinedAt: !13216)
!13216 = distinct !DILocation(line: 229, column: 2, scope: !12885, inlinedAt: !13214)
!13217 = !DILocation(line: 188, column: 2, scope: !12902, inlinedAt: !13216)
!13218 = !DILocation(line: 188, column: 2, scope: !12904, inlinedAt: !13216)
!13219 = !DILocation(line: 0, scope: !12902, inlinedAt: !13216)
!13220 = !DILocation(line: 189, column: 7, scope: !12907, inlinedAt: !13216)
!13221 = !DILocation(line: 189, column: 35, scope: !12907, inlinedAt: !13216)
!13222 = !DILocation(line: 189, column: 7, scope: !12908, inlinedAt: !13216)
!13223 = !DILocation(line: 191, column: 21, scope: !12912, inlinedAt: !13216)
!13224 = !DILocation(line: 190, column: 4, scope: !12912, inlinedAt: !13216)
!13225 = !DILocation(line: 192, column: 4, scope: !12912, inlinedAt: !13216)
!13226 = distinct !{!13226, !13217, !13227}
!13227 = !DILocation(line: 194, column: 2, scope: !12902, inlinedAt: !13216)
!13228 = !DILocation(line: 196, column: 37, scope: !12892, inlinedAt: !13216)
!13229 = !DILocation(line: 196, column: 2, scope: !12892, inlinedAt: !13216)
!13230 = !DILocation(line: 197, column: 1, scope: !12892, inlinedAt: !13216)
!13231 = !DILocation(line: 630, column: 3, scope: !13210)
!13232 = !DILocation(line: 632, column: 2, scope: !13210)
!13233 = !DILocation(line: 633, column: 1, scope: !13199)
!13234 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11665, file: !11665, line: 120, type: !12810, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13235)
!13235 = !{!13236}
!13236 = !DILocalVariable(name: "thread", arg: 1, scope: !13234, file: !11665, line: 120, type: !2264)
!13237 = !DILocation(line: 0, scope: !13234)
!13238 = !DILocation(line: 122, column: 12, scope: !13234)
!13239 = !DILocation(line: 122, column: 62, scope: !13234)
!13240 = !DILocation(line: 123, column: 4, scope: !13234)
!13241 = !DILocation(line: 122, column: 2, scope: !13234)
!13242 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2371, file: !2371, line: 644, type: !12650, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13243)
!13243 = !{!13244, !13245, !13247}
!13244 = !DILocalVariable(name: "thread", arg: 1, scope: !13242, file: !2371, line: 644, type: !2264)
!13245 = !DILocalVariable(name: "__i", scope: !13246, file: !2371, line: 646, type: !12684)
!13246 = distinct !DILexicalBlock(scope: !13242, file: !2371, line: 646, column: 2)
!13247 = !DILocalVariable(name: "__key", scope: !13246, file: !2371, line: 646, type: !12684)
!13248 = !DILocation(line: 0, scope: !13242)
!13249 = !DILocation(line: 0, scope: !13246)
!13250 = !DILocation(line: 0, scope: !12692, inlinedAt: !13251)
!13251 = distinct !DILocation(line: 646, column: 2, scope: !13246)
!13252 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13253)
!13253 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13251)
!13254 = !DILocation(line: 0, scope: !12701, inlinedAt: !13253)
!13255 = !DILocation(line: 647, column: 3, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13257, file: !2371, line: 646, column: 26)
!13257 = distinct !DILexicalBlock(scope: !13246, file: !2371, line: 646, column: 2)
!13258 = !DILocation(line: 0, scope: !12719, inlinedAt: !13259)
!13259 = distinct !DILocation(line: 646, column: 2, scope: !13257)
!13260 = !DILocation(line: 0, scope: !12727, inlinedAt: !13261)
!13261 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13259)
!13262 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13261)
!13263 = !DILocation(line: 649, column: 1, scope: !13242)
!13264 = distinct !DISubprogram(name: "z_sched_start", scope: !2371, file: !2371, line: 651, type: !12650, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13265)
!13265 = !{!13266, !13267}
!13266 = !DILocalVariable(name: "thread", arg: 1, scope: !13264, file: !2371, line: 651, type: !2264)
!13267 = !DILocalVariable(name: "key", scope: !13264, file: !2371, line: 653, type: !12684)
!13268 = !DILocation(line: 0, scope: !13264)
!13269 = !DILocation(line: 0, scope: !12692, inlinedAt: !13270)
!13270 = distinct !DILocation(line: 653, column: 25, scope: !13264)
!13271 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13272)
!13272 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13270)
!13273 = !DILocation(line: 0, scope: !12701, inlinedAt: !13272)
!13274 = !DILocation(line: 655, column: 6, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13264, file: !2371, line: 655, column: 6)
!13276 = !DILocation(line: 655, column: 6, scope: !13264)
!13277 = !DILocation(line: 0, scope: !12719, inlinedAt: !13278)
!13278 = distinct !DILocation(line: 656, column: 3, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13275, file: !2371, line: 655, column: 36)
!13280 = !DILocation(line: 0, scope: !12727, inlinedAt: !13281)
!13281 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13278)
!13282 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13281)
!13283 = !DILocation(line: 657, column: 3, scope: !13279)
!13284 = !DILocation(line: 660, column: 2, scope: !13264)
!13285 = !DILocation(line: 661, column: 2, scope: !13264)
!13286 = !DILocation(line: 662, column: 2, scope: !13264)
!13287 = !DILocation(line: 663, column: 1, scope: !13264)
!13288 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11665, file: !11665, line: 126, type: !12810, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13289)
!13289 = !{!13290}
!13290 = !DILocalVariable(name: "thread", arg: 1, scope: !13288, file: !11665, line: 126, type: !2264)
!13291 = !DILocation(line: 0, scope: !13288)
!13292 = !DILocation(line: 128, column: 23, scope: !13288)
!13293 = !DILocation(line: 128, column: 36, scope: !13288)
!13294 = !DILocation(line: 128, column: 56, scope: !13288)
!13295 = !DILocation(line: 128, column: 2, scope: !13288)
!13296 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11665, file: !11665, line: 155, type: !12650, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13297)
!13297 = !{!13298}
!13298 = !DILocalVariable(name: "thread", arg: 1, scope: !13296, file: !11665, line: 155, type: !2264)
!13299 = !DILocation(line: 0, scope: !13296)
!13300 = !DILocation(line: 157, column: 15, scope: !13296)
!13301 = !DILocation(line: 157, column: 28, scope: !13296)
!13302 = !DILocation(line: 158, column: 1, scope: !13296)
!13303 = distinct !DISubprogram(name: "z_reschedule", scope: !2371, file: !2371, line: 967, type: !12720, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13304)
!13304 = !{!13305, !13306}
!13305 = !DILocalVariable(name: "lock", arg: 1, scope: !13303, file: !2371, line: 967, type: !12695)
!13306 = !DILocalVariable(name: "key", arg: 2, scope: !13303, file: !2371, line: 967, type: !12684)
!13307 = !DILocation(line: 0, scope: !13303)
!13308 = !DILocation(line: 969, column: 6, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13303, file: !2371, line: 969, column: 6)
!13310 = !DILocation(line: 969, column: 23, scope: !13309)
!13311 = !DILocation(line: 969, column: 26, scope: !13309)
!13312 = !DILocation(line: 969, column: 6, scope: !13303)
!13313 = !DILocalVariable(name: "key", arg: 2, scope: !13314, file: !11769, line: 193, type: !12684)
!13314 = distinct !DISubprogram(name: "z_swap", scope: !11769, file: !11769, line: 193, type: !13315, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13317)
!13315 = !DISubroutineType(types: !13316)
!13316 = !{!109, !12695, !12684}
!13317 = !{!13318, !13313}
!13318 = !DILocalVariable(name: "lock", arg: 1, scope: !13314, file: !11769, line: 193, type: !12695)
!13319 = !DILocation(line: 0, scope: !13314, inlinedAt: !13320)
!13320 = distinct !DILocation(line: 970, column: 3, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13309, file: !2371, line: 969, column: 39)
!13322 = !DILocation(line: 196, column: 9, scope: !13314, inlinedAt: !13320)
!13323 = !DILocation(line: 971, column: 2, scope: !13321)
!13324 = !DILocation(line: 0, scope: !12719, inlinedAt: !13325)
!13325 = distinct !DILocation(line: 972, column: 3, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13309, file: !2371, line: 971, column: 9)
!13327 = !DILocation(line: 0, scope: !12727, inlinedAt: !13328)
!13328 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13325)
!13329 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13328)
!13330 = !DILocation(line: 975, column: 1, scope: !13303)
!13331 = distinct !DISubprogram(name: "resched", scope: !2371, file: !2371, line: 940, type: !13332, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13334)
!13332 = !DISubroutineType(types: !13333)
!13333 = !{!315, !110}
!13334 = !{!13335}
!13335 = !DILocalVariable(name: "key", arg: 1, scope: !13331, file: !2371, line: 940, type: !110)
!13336 = !DILocation(line: 0, scope: !13331)
!13337 = !DILocalVariable(name: "key", arg: 1, scope: !13338, file: !4955, line: 112, type: !32)
!13338 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4955, file: !4955, line: 112, type: !13339, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13341)
!13339 = !DISubroutineType(types: !13340)
!13340 = !{!315, !32}
!13341 = !{!13337}
!13342 = !DILocation(line: 0, scope: !13338, inlinedAt: !13343)
!13343 = distinct !DILocation(line: 946, column: 9, scope: !13331)
!13344 = !DILocation(line: 115, column: 13, scope: !13338, inlinedAt: !13343)
!13345 = !DILocation(line: 946, column: 32, scope: !13331)
!13346 = !DILocation(line: 1031, column: 3, scope: !13347, inlinedAt: !13350)
!13347 = distinct !DISubprogram(name: "__get_IPSR", scope: !5129, file: !5129, line: 1027, type: !5210, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13348)
!13348 = !{!13349}
!13349 = !DILocalVariable(name: "result", scope: !13347, file: !5129, line: 1029, type: !110)
!13350 = distinct !DILocation(line: 48, column: 10, scope: !13351, inlinedAt: !13352)
!13351 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5925, file: !5925, line: 46, type: !5926, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !251)
!13352 = distinct !DILocation(line: 946, column: 36, scope: !13331)
!13353 = !{i64 3768690}
!13354 = !DILocation(line: 0, scope: !13347, inlinedAt: !13350)
!13355 = !DILocation(line: 48, column: 9, scope: !13351, inlinedAt: !13352)
!13356 = !DILocation(line: 946, column: 2, scope: !13331)
!13357 = distinct !DISubprogram(name: "need_swap", scope: !2371, file: !2371, line: 953, type: !5926, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13358)
!13358 = !{!13359}
!13359 = !DILocalVariable(name: "new_thread", scope: !13357, file: !2371, line: 959, type: !2264)
!13360 = !DILocation(line: 962, column: 31, scope: !13357)
!13361 = !DILocation(line: 0, scope: !13357)
!13362 = !DILocation(line: 963, column: 23, scope: !13357)
!13363 = !DILocation(line: 963, column: 20, scope: !13357)
!13364 = !DILocation(line: 963, column: 2, scope: !13357)
!13365 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11769, file: !11769, line: 181, type: !5139, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13366)
!13366 = !{!13367, !13368}
!13367 = !DILocalVariable(name: "key", arg: 1, scope: !13365, file: !11769, line: 181, type: !32)
!13368 = !DILocalVariable(name: "ret", scope: !13365, file: !11769, line: 183, type: !109)
!13369 = !DILocation(line: 0, scope: !13365)
!13370 = !DILocation(line: 185, column: 8, scope: !13365)
!13371 = !DILocation(line: 186, column: 2, scope: !13365)
!13372 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2371, file: !2371, line: 665, type: !12650, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13373)
!13373 = !{!13374, !13375, !13377}
!13374 = !DILocalVariable(name: "thread", arg: 1, scope: !13372, file: !2371, line: 665, type: !2264)
!13375 = !DILocalVariable(name: "__i", scope: !13376, file: !2371, line: 671, type: !12684)
!13376 = distinct !DILexicalBlock(scope: !13372, file: !2371, line: 671, column: 2)
!13377 = !DILocalVariable(name: "__key", scope: !13376, file: !2371, line: 671, type: !12684)
!13378 = !DILocation(line: 0, scope: !13372)
!13379 = !DILocation(line: 669, column: 8, scope: !13372)
!13380 = !DILocation(line: 0, scope: !13376)
!13381 = !DILocation(line: 0, scope: !12692, inlinedAt: !13382)
!13382 = distinct !DILocation(line: 671, column: 2, scope: !13376)
!13383 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13384)
!13384 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13382)
!13385 = !DILocation(line: 0, scope: !12701, inlinedAt: !13384)
!13386 = !DILocation(line: 672, column: 7, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13388, file: !2371, line: 672, column: 7)
!13388 = distinct !DILexicalBlock(scope: !13389, file: !2371, line: 671, column: 26)
!13389 = distinct !DILexicalBlock(scope: !13376, file: !2371, line: 671, column: 2)
!13390 = !DILocation(line: 672, column: 7, scope: !13388)
!13391 = !DILocation(line: 0, scope: !12861, inlinedAt: !13392)
!13392 = distinct !DILocation(line: 673, column: 4, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13387, file: !2371, line: 672, column: 35)
!13394 = !DILocation(line: 266, column: 15, scope: !12861, inlinedAt: !13392)
!13395 = !DILocation(line: 266, column: 28, scope: !12861, inlinedAt: !13392)
!13396 = !DILocation(line: 0, scope: !12869, inlinedAt: !13397)
!13397 = distinct !DILocation(line: 268, column: 3, scope: !12873, inlinedAt: !13392)
!13398 = !DILocation(line: 234, column: 2, scope: !12869, inlinedAt: !13397)
!13399 = !DILocation(line: 674, column: 3, scope: !13393)
!13400 = !DILocation(line: 675, column: 3, scope: !13388)
!13401 = !DILocation(line: 676, column: 26, scope: !13388)
!13402 = !DILocation(line: 676, column: 23, scope: !13388)
!13403 = !DILocation(line: 676, column: 3, scope: !13388)
!13404 = !DILocation(line: 0, scope: !12719, inlinedAt: !13405)
!13405 = distinct !DILocation(line: 671, column: 2, scope: !13389)
!13406 = !DILocation(line: 0, scope: !12727, inlinedAt: !13407)
!13407 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13405)
!13408 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13407)
!13409 = !DILocation(line: 679, column: 16, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13372, file: !2371, line: 679, column: 6)
!13411 = !DILocation(line: 679, column: 13, scope: !13410)
!13412 = !DILocation(line: 679, column: 6, scope: !13372)
!13413 = !DILocation(line: 680, column: 3, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13410, file: !2371, line: 679, column: 26)
!13415 = !DILocation(line: 681, column: 2, scope: !13414)
!13416 = !DILocation(line: 684, column: 1, scope: !13372)
!13417 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12086, file: !12086, line: 52, type: !12668, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13418)
!13418 = !{!13419}
!13419 = !DILocalVariable(name: "thread", arg: 1, scope: !13417, file: !12086, line: 52, type: !2264)
!13420 = !DILocation(line: 0, scope: !13417)
!13421 = !DILocation(line: 54, column: 39, scope: !13417)
!13422 = !DILocation(line: 54, column: 9, scope: !13417)
!13423 = !DILocation(line: 54, column: 2, scope: !13417)
!13424 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11665, file: !11665, line: 141, type: !12650, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13425)
!13425 = !{!13426}
!13426 = !DILocalVariable(name: "thread", arg: 1, scope: !13424, file: !11665, line: 141, type: !2264)
!13427 = !DILocation(line: 0, scope: !13424)
!13428 = !DILocation(line: 143, column: 15, scope: !13424)
!13429 = !DILocation(line: 143, column: 28, scope: !13424)
!13430 = !DILocation(line: 146, column: 1, scope: !13424)
!13431 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11665, file: !11665, line: 73, type: !2980, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !251)
!13432 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13433)
!13433 = distinct !DILocation(line: 75, column: 30, scope: !13431)
!13434 = !DILocation(line: 0, scope: !12701, inlinedAt: !13433)
!13435 = !DILocation(line: 75, column: 9, scope: !13431)
!13436 = !DILocation(line: 76, column: 1, scope: !13431)
!13437 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2371, file: !2371, line: 977, type: !3146, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13438)
!13438 = !{!13439}
!13439 = !DILocalVariable(name: "key", arg: 1, scope: !13437, file: !2371, line: 977, type: !110)
!13440 = !DILocation(line: 0, scope: !13437)
!13441 = !DILocation(line: 979, column: 6, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13437, file: !2371, line: 979, column: 6)
!13443 = !DILocation(line: 979, column: 6, scope: !13437)
!13444 = !DILocation(line: 980, column: 3, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13442, file: !2371, line: 979, column: 20)
!13446 = !DILocation(line: 981, column: 2, scope: !13445)
!13447 = !DILocation(line: 0, scope: !12727, inlinedAt: !13448)
!13448 = distinct !DILocation(line: 982, column: 3, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13442, file: !2371, line: 981, column: 9)
!13450 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13448)
!13451 = !DILocation(line: 985, column: 1, scope: !13437)
!13452 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2371, file: !2371, line: 695, type: !12650, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13453)
!13453 = !{!13454, !13455}
!13454 = !DILocalVariable(name: "thread", arg: 1, scope: !13452, file: !2371, line: 695, type: !2264)
!13455 = !DILocalVariable(name: "key", scope: !13452, file: !2371, line: 699, type: !12684)
!13456 = !DILocation(line: 0, scope: !13452)
!13457 = !DILocation(line: 0, scope: !12692, inlinedAt: !13458)
!13458 = distinct !DILocation(line: 699, column: 25, scope: !13452)
!13459 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13460)
!13460 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13458)
!13461 = !DILocation(line: 0, scope: !12701, inlinedAt: !13460)
!13462 = !DILocation(line: 702, column: 7, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13452, file: !2371, line: 702, column: 6)
!13464 = !DILocation(line: 702, column: 6, scope: !13452)
!13465 = !DILocation(line: 0, scope: !12719, inlinedAt: !13466)
!13466 = distinct !DILocation(line: 703, column: 3, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13463, file: !2371, line: 702, column: 38)
!13468 = !DILocation(line: 0, scope: !12727, inlinedAt: !13469)
!13469 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13466)
!13470 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13469)
!13471 = !DILocation(line: 704, column: 3, scope: !13467)
!13472 = !DILocation(line: 707, column: 2, scope: !13452)
!13473 = !DILocation(line: 708, column: 2, scope: !13452)
!13474 = !DILocation(line: 710, column: 2, scope: !13452)
!13475 = !DILocation(line: 713, column: 1, scope: !13452)
!13476 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11665, file: !11665, line: 96, type: !12810, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13477)
!13477 = !{!13478}
!13478 = !DILocalVariable(name: "thread", arg: 1, scope: !13476, file: !11665, line: 96, type: !2264)
!13479 = !DILocation(line: 0, scope: !13476)
!13480 = !DILocation(line: 98, column: 23, scope: !13476)
!13481 = !DILocation(line: 98, column: 36, scope: !13476)
!13482 = !DILocation(line: 98, column: 57, scope: !13476)
!13483 = !DILocation(line: 98, column: 2, scope: !13476)
!13484 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11665, file: !11665, line: 148, type: !12650, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13485)
!13485 = !{!13486}
!13486 = !DILocalVariable(name: "thread", arg: 1, scope: !13484, file: !11665, line: 148, type: !2264)
!13487 = !DILocation(line: 0, scope: !13484)
!13488 = !DILocation(line: 150, column: 15, scope: !13484)
!13489 = !DILocation(line: 150, column: 28, scope: !13484)
!13490 = !DILocation(line: 153, column: 1, scope: !13484)
!13491 = distinct !DISubprogram(name: "z_pend_thread", scope: !2371, file: !2371, line: 770, type: !13492, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13498)
!13492 = !DISubroutineType(types: !13493)
!13493 = !{null, !2264, !2295, !13494}
!13494 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !13495)
!13495 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !13496)
!13496 = !{!13497}
!13497 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13495, file: !103, line: 66, baseType: !102, size: 64)
!13498 = !{!13499, !13500, !13501, !13502, !13504}
!13499 = !DILocalVariable(name: "thread", arg: 1, scope: !13491, file: !2371, line: 770, type: !2264)
!13500 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13491, file: !2371, line: 770, type: !2295)
!13501 = !DILocalVariable(name: "timeout", arg: 3, scope: !13491, file: !2371, line: 771, type: !13494)
!13502 = !DILocalVariable(name: "__i", scope: !13503, file: !2371, line: 774, type: !12684)
!13503 = distinct !DILexicalBlock(scope: !13491, file: !2371, line: 774, column: 2)
!13504 = !DILocalVariable(name: "__key", scope: !13503, file: !2371, line: 774, type: !12684)
!13505 = !DILocation(line: 0, scope: !13491)
!13506 = !DILocation(line: 0, scope: !13503)
!13507 = !DILocation(line: 0, scope: !12692, inlinedAt: !13508)
!13508 = distinct !DILocation(line: 774, column: 2, scope: !13503)
!13509 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13510)
!13510 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13508)
!13511 = !DILocation(line: 0, scope: !12701, inlinedAt: !13510)
!13512 = !DILocation(line: 775, column: 3, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13514, file: !2371, line: 774, column: 26)
!13514 = distinct !DILexicalBlock(scope: !13503, file: !2371, line: 774, column: 2)
!13515 = !DILocation(line: 0, scope: !12719, inlinedAt: !13516)
!13516 = distinct !DILocation(line: 774, column: 2, scope: !13514)
!13517 = !DILocation(line: 0, scope: !12727, inlinedAt: !13518)
!13518 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13516)
!13519 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13518)
!13520 = !DILocation(line: 777, column: 1, scope: !13491)
!13521 = distinct !DISubprogram(name: "pend_locked", scope: !2371, file: !2371, line: 760, type: !13492, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13522)
!13522 = !{!13523, !13524, !13525}
!13523 = !DILocalVariable(name: "thread", arg: 1, scope: !13521, file: !2371, line: 760, type: !2264)
!13524 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13521, file: !2371, line: 760, type: !2295)
!13525 = !DILocalVariable(name: "timeout", arg: 3, scope: !13521, file: !2371, line: 761, type: !13494)
!13526 = !DILocation(line: 0, scope: !13521)
!13527 = !DILocation(line: 766, column: 2, scope: !13521)
!13528 = !DILocation(line: 767, column: 2, scope: !13521)
!13529 = !DILocation(line: 768, column: 1, scope: !13521)
!13530 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2371, file: !2371, line: 740, type: !13531, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13533)
!13531 = !DISubroutineType(types: !13532)
!13532 = !{null, !2264, !2295}
!13533 = !{!13534, !13535}
!13534 = !DILocalVariable(name: "thread", arg: 1, scope: !13530, file: !2371, line: 740, type: !2264)
!13535 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13530, file: !2371, line: 740, type: !2295)
!13536 = !DILocation(line: 0, scope: !13530)
!13537 = !DILocation(line: 742, column: 2, scope: !13530)
!13538 = !DILocation(line: 743, column: 2, scope: !13530)
!13539 = !DILocation(line: 747, column: 13, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13530, file: !2371, line: 747, column: 6)
!13541 = !DILocation(line: 747, column: 6, scope: !13530)
!13542 = !DILocation(line: 748, column: 16, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13540, file: !2371, line: 747, column: 22)
!13544 = !DILocation(line: 748, column: 26, scope: !13543)
!13545 = !DILocation(line: 749, column: 28, scope: !13543)
!13546 = !DILocation(line: 0, scope: !12892, inlinedAt: !13547)
!13547 = distinct !DILocation(line: 749, column: 3, scope: !13543)
!13548 = !DILocation(line: 188, column: 2, scope: !12902, inlinedAt: !13547)
!13549 = !DILocation(line: 188, column: 2, scope: !12904, inlinedAt: !13547)
!13550 = !DILocation(line: 0, scope: !12902, inlinedAt: !13547)
!13551 = !DILocation(line: 189, column: 7, scope: !12907, inlinedAt: !13547)
!13552 = !DILocation(line: 189, column: 35, scope: !12907, inlinedAt: !13547)
!13553 = !DILocation(line: 189, column: 7, scope: !12908, inlinedAt: !13547)
!13554 = !DILocation(line: 191, column: 21, scope: !12912, inlinedAt: !13547)
!13555 = !DILocation(line: 190, column: 4, scope: !12912, inlinedAt: !13547)
!13556 = !DILocation(line: 192, column: 4, scope: !12912, inlinedAt: !13547)
!13557 = distinct !{!13557, !13548, !13558}
!13558 = !DILocation(line: 194, column: 2, scope: !12902, inlinedAt: !13547)
!13559 = !DILocation(line: 196, column: 37, scope: !12892, inlinedAt: !13547)
!13560 = !DILocation(line: 196, column: 2, scope: !12892, inlinedAt: !13547)
!13561 = !DILocation(line: 197, column: 1, scope: !12892, inlinedAt: !13547)
!13562 = !DILocation(line: 751, column: 1, scope: !13530)
!13563 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2371, file: !2371, line: 753, type: !13564, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13566)
!13564 = !DISubroutineType(types: !13565)
!13565 = !{null, !2264, !13494}
!13566 = !{!13567, !13568}
!13567 = !DILocalVariable(name: "thread", arg: 1, scope: !13563, file: !2371, line: 753, type: !2264)
!13568 = !DILocalVariable(name: "timeout", arg: 2, scope: !13563, file: !2371, line: 753, type: !13494)
!13569 = !DILocation(line: 0, scope: !13563)
!13570 = !DILocation(line: 755, column: 7, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13563, file: !2371, line: 755, column: 6)
!13572 = !DILocation(line: 755, column: 6, scope: !13563)
!13573 = !DILocation(line: 756, column: 3, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13571, file: !2371, line: 755, column: 41)
!13575 = !DILocation(line: 757, column: 2, scope: !13574)
!13576 = !DILocation(line: 758, column: 1, scope: !13563)
!13577 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12086, file: !12086, line: 47, type: !13564, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13578)
!13578 = !{!13579, !13580}
!13579 = !DILocalVariable(name: "thread", arg: 1, scope: !13577, file: !12086, line: 47, type: !2264)
!13580 = !DILocalVariable(name: "ticks", arg: 2, scope: !13577, file: !12086, line: 47, type: !13494)
!13581 = !DILocation(line: 0, scope: !13577)
!13582 = !DILocation(line: 49, column: 30, scope: !13577)
!13583 = !DILocation(line: 49, column: 2, scope: !13577)
!13584 = !DILocation(line: 50, column: 1, scope: !13577)
!13585 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2371, file: !2371, line: 795, type: !2322, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13586)
!13586 = !{!13587, !13588, !13589, !13591, !13592}
!13587 = !DILocalVariable(name: "timeout", arg: 1, scope: !13585, file: !2371, line: 795, type: !2324)
!13588 = !DILocalVariable(name: "thread", scope: !13585, file: !2371, line: 797, type: !2264)
!13589 = !DILocalVariable(name: "__i", scope: !13590, file: !2371, line: 800, type: !12684)
!13590 = distinct !DILexicalBlock(scope: !13585, file: !2371, line: 800, column: 2)
!13591 = !DILocalVariable(name: "__key", scope: !13590, file: !2371, line: 800, type: !12684)
!13592 = !DILocalVariable(name: "killed", scope: !13593, file: !2371, line: 801, type: !315)
!13593 = distinct !DILexicalBlock(scope: !13594, file: !2371, line: 800, column: 26)
!13594 = distinct !DILexicalBlock(scope: !13590, file: !2371, line: 800, column: 2)
!13595 = !DILocation(line: 0, scope: !13585)
!13596 = !DILocation(line: 797, column: 28, scope: !13585)
!13597 = !DILocation(line: 0, scope: !13590)
!13598 = !DILocation(line: 0, scope: !12692, inlinedAt: !13599)
!13599 = distinct !DILocation(line: 800, column: 2, scope: !13590)
!13600 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13601)
!13601 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13599)
!13602 = !DILocation(line: 0, scope: !12701, inlinedAt: !13601)
!13603 = !DILocation(line: 801, column: 27, scope: !13593)
!13604 = !DILocation(line: 801, column: 32, scope: !13593)
!13605 = !DILocation(line: 801, column: 61, scope: !13593)
!13606 = !DILocation(line: 0, scope: !13593)
!13607 = !DILocation(line: 804, column: 7, scope: !13593)
!13608 = !DILocation(line: 805, column: 21, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13610, file: !2371, line: 805, column: 8)
!13610 = distinct !DILexicalBlock(scope: !13611, file: !2371, line: 804, column: 16)
!13611 = distinct !DILexicalBlock(scope: !13593, file: !2371, line: 804, column: 7)
!13612 = !DILocation(line: 805, column: 31, scope: !13609)
!13613 = !DILocation(line: 805, column: 8, scope: !13610)
!13614 = !DILocation(line: 806, column: 5, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13609, file: !2371, line: 805, column: 40)
!13616 = !DILocation(line: 807, column: 4, scope: !13615)
!13617 = !DILocation(line: 808, column: 4, scope: !13610)
!13618 = !DILocation(line: 809, column: 4, scope: !13610)
!13619 = !DILocation(line: 810, column: 4, scope: !13610)
!13620 = !DILocation(line: 811, column: 3, scope: !13610)
!13621 = !DILocation(line: 0, scope: !12719, inlinedAt: !13622)
!13622 = distinct !DILocation(line: 800, column: 2, scope: !13594)
!13623 = !DILocation(line: 0, scope: !12727, inlinedAt: !13624)
!13624 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13622)
!13625 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13624)
!13626 = !DILocation(line: 813, column: 1, scope: !13585)
!13627 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2371, file: !2371, line: 779, type: !12650, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13628)
!13628 = !{!13629}
!13629 = !DILocalVariable(name: "thread", arg: 1, scope: !13627, file: !2371, line: 779, type: !2264)
!13630 = !DILocation(line: 0, scope: !13627)
!13631 = !DILocation(line: 781, column: 2, scope: !13627)
!13632 = !DILocation(line: 782, column: 2, scope: !13627)
!13633 = !DILocation(line: 783, column: 15, scope: !13627)
!13634 = !DILocation(line: 783, column: 25, scope: !13627)
!13635 = !DILocation(line: 784, column: 1, scope: !13627)
!13636 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11665, file: !11665, line: 165, type: !12650, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13637)
!13637 = !{!13638}
!13638 = !DILocalVariable(name: "thread", arg: 1, scope: !13636, file: !11665, line: 165, type: !2264)
!13639 = !DILocation(line: 0, scope: !13636)
!13640 = !DILocation(line: 167, column: 15, scope: !13636)
!13641 = !DILocation(line: 167, column: 28, scope: !13636)
!13642 = !DILocation(line: 168, column: 1, scope: !13636)
!13643 = distinct !DISubprogram(name: "unready_thread", scope: !2371, file: !2371, line: 731, type: !12650, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13644)
!13644 = !{!13645}
!13645 = !DILocalVariable(name: "thread", arg: 1, scope: !13643, file: !2371, line: 731, type: !2264)
!13646 = !DILocation(line: 0, scope: !13643)
!13647 = !DILocation(line: 733, column: 6, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13643, file: !2371, line: 733, column: 6)
!13649 = !DILocation(line: 733, column: 6, scope: !13643)
!13650 = !DILocation(line: 0, scope: !12861, inlinedAt: !13651)
!13651 = distinct !DILocation(line: 734, column: 3, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13648, file: !2371, line: 733, column: 34)
!13653 = !DILocation(line: 266, column: 15, scope: !12861, inlinedAt: !13651)
!13654 = !DILocation(line: 266, column: 28, scope: !12861, inlinedAt: !13651)
!13655 = !DILocation(line: 0, scope: !12869, inlinedAt: !13656)
!13656 = distinct !DILocation(line: 268, column: 3, scope: !12873, inlinedAt: !13651)
!13657 = !DILocation(line: 234, column: 2, scope: !12869, inlinedAt: !13656)
!13658 = !DILocation(line: 735, column: 2, scope: !13652)
!13659 = !DILocation(line: 736, column: 25, scope: !13643)
!13660 = !DILocation(line: 736, column: 22, scope: !13643)
!13661 = !DILocation(line: 736, column: 2, scope: !13643)
!13662 = !DILocation(line: 737, column: 1, scope: !13643)
!13663 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11665, file: !11665, line: 160, type: !12650, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13664)
!13664 = !{!13665}
!13665 = !DILocalVariable(name: "thread", arg: 1, scope: !13663, file: !11665, line: 160, type: !2264)
!13666 = !DILocation(line: 0, scope: !13663)
!13667 = !DILocation(line: 162, column: 15, scope: !13663)
!13668 = !DILocation(line: 162, column: 28, scope: !13663)
!13669 = !DILocation(line: 163, column: 1, scope: !13663)
!13670 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2371, file: !2371, line: 786, type: !12650, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13671)
!13671 = !{!13672, !13673, !13675}
!13672 = !DILocalVariable(name: "thread", arg: 1, scope: !13670, file: !2371, line: 786, type: !2264)
!13673 = !DILocalVariable(name: "__i", scope: !13674, file: !2371, line: 788, type: !12684)
!13674 = distinct !DILexicalBlock(scope: !13670, file: !2371, line: 788, column: 2)
!13675 = !DILocalVariable(name: "__key", scope: !13674, file: !2371, line: 788, type: !12684)
!13676 = !DILocation(line: 0, scope: !13670)
!13677 = !DILocation(line: 0, scope: !13674)
!13678 = !DILocation(line: 0, scope: !12692, inlinedAt: !13679)
!13679 = distinct !DILocation(line: 788, column: 2, scope: !13674)
!13680 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13681)
!13681 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13679)
!13682 = !DILocation(line: 0, scope: !12701, inlinedAt: !13681)
!13683 = !DILocation(line: 789, column: 3, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !2371, line: 788, column: 26)
!13685 = distinct !DILexicalBlock(scope: !13674, file: !2371, line: 788, column: 2)
!13686 = !DILocation(line: 0, scope: !12719, inlinedAt: !13687)
!13687 = distinct !DILocation(line: 788, column: 2, scope: !13685)
!13688 = !DILocation(line: 0, scope: !12727, inlinedAt: !13689)
!13689 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13687)
!13690 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13689)
!13691 = !DILocation(line: 791, column: 1, scope: !13670)
!13692 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2371, file: !2371, line: 816, type: !13693, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13695)
!13693 = !DISubroutineType(types: !13694)
!13694 = !{!109, !110, !2295, !13494}
!13695 = !{!13696, !13697, !13698, !13699, !13700, !13702}
!13696 = !DILocalVariable(name: "key", arg: 1, scope: !13692, file: !2371, line: 816, type: !110)
!13697 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13692, file: !2371, line: 816, type: !2295)
!13698 = !DILocalVariable(name: "timeout", arg: 3, scope: !13692, file: !2371, line: 816, type: !13494)
!13699 = !DILocalVariable(name: "ret", scope: !13692, file: !2371, line: 828, type: !109)
!13700 = !DILocalVariable(name: "__i", scope: !13701, file: !2371, line: 829, type: !12684)
!13701 = distinct !DILexicalBlock(scope: !13692, file: !2371, line: 829, column: 2)
!13702 = !DILocalVariable(name: "__key", scope: !13701, file: !2371, line: 829, type: !12684)
!13703 = !DILocation(line: 0, scope: !13692)
!13704 = !DILocation(line: 823, column: 14, scope: !13692)
!13705 = !DILocation(line: 823, column: 2, scope: !13692)
!13706 = !DILocation(line: 826, column: 20, scope: !13692)
!13707 = !DILocation(line: 826, column: 18, scope: !13692)
!13708 = !DILocation(line: 828, column: 12, scope: !13692)
!13709 = !DILocation(line: 0, scope: !13701)
!13710 = !DILocation(line: 0, scope: !12692, inlinedAt: !13711)
!13711 = distinct !DILocation(line: 829, column: 2, scope: !13701)
!13712 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13713)
!13713 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13711)
!13714 = !DILocation(line: 0, scope: !12701, inlinedAt: !13713)
!13715 = !DILocation(line: 830, column: 7, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13717, file: !2371, line: 830, column: 7)
!13717 = distinct !DILexicalBlock(scope: !13718, file: !2371, line: 829, column: 26)
!13718 = distinct !DILexicalBlock(scope: !13701, file: !2371, line: 829, column: 2)
!13719 = !DILocation(line: 830, column: 26, scope: !13716)
!13720 = !DILocation(line: 830, column: 23, scope: !13716)
!13721 = !DILocation(line: 830, column: 7, scope: !13717)
!13722 = !DILocation(line: 831, column: 20, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13716, file: !2371, line: 830, column: 36)
!13724 = !DILocation(line: 832, column: 3, scope: !13723)
!13725 = !DILocation(line: 0, scope: !12719, inlinedAt: !13726)
!13726 = distinct !DILocation(line: 829, column: 2, scope: !13718)
!13727 = !DILocation(line: 0, scope: !12727, inlinedAt: !13728)
!13728 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13726)
!13729 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13728)
!13730 = !DILocation(line: 834, column: 2, scope: !13692)
!13731 = distinct !DISubprogram(name: "z_pend_curr", scope: !2371, file: !2371, line: 840, type: !13732, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13734)
!13732 = !DISubroutineType(types: !13733)
!13733 = !{!109, !12695, !12684, !2295, !13494}
!13734 = !{!13735, !13736, !13737, !13738}
!13735 = !DILocalVariable(name: "lock", arg: 1, scope: !13731, file: !2371, line: 840, type: !12695)
!13736 = !DILocalVariable(name: "key", arg: 2, scope: !13731, file: !2371, line: 840, type: !12684)
!13737 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13731, file: !2371, line: 841, type: !2295)
!13738 = !DILocalVariable(name: "timeout", arg: 4, scope: !13731, file: !2371, line: 841, type: !13494)
!13739 = !DILocation(line: 0, scope: !13731)
!13740 = !DILocation(line: 844, column: 20, scope: !13731)
!13741 = !DILocation(line: 844, column: 18, scope: !13731)
!13742 = !DILocation(line: 0, scope: !12692, inlinedAt: !13743)
!13743 = distinct !DILocation(line: 856, column: 9, scope: !13731)
!13744 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13745)
!13745 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13743)
!13746 = !DILocation(line: 0, scope: !12701, inlinedAt: !13745)
!13747 = !DILocation(line: 857, column: 14, scope: !13731)
!13748 = !DILocation(line: 857, column: 2, scope: !13731)
!13749 = !DILocation(line: 0, scope: !13314, inlinedAt: !13750)
!13750 = distinct !DILocation(line: 859, column: 9, scope: !13731)
!13751 = !DILocation(line: 196, column: 9, scope: !13314, inlinedAt: !13750)
!13752 = !DILocation(line: 859, column: 2, scope: !13731)
!13753 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2371, file: !2371, line: 862, type: !13754, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13756)
!13754 = !DISubroutineType(types: !13755)
!13755 = !{!2264, !2295}
!13756 = !{!13757, !13758, !13759, !13761}
!13757 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13753, file: !2371, line: 862, type: !2295)
!13758 = !DILocalVariable(name: "thread", scope: !13753, file: !2371, line: 864, type: !2264)
!13759 = !DILocalVariable(name: "__i", scope: !13760, file: !2371, line: 866, type: !12684)
!13760 = distinct !DILexicalBlock(scope: !13753, file: !2371, line: 866, column: 2)
!13761 = !DILocalVariable(name: "__key", scope: !13760, file: !2371, line: 866, type: !12684)
!13762 = !DILocation(line: 0, scope: !13753)
!13763 = !DILocation(line: 0, scope: !13760)
!13764 = !DILocation(line: 0, scope: !12692, inlinedAt: !13765)
!13765 = distinct !DILocation(line: 866, column: 2, scope: !13760)
!13766 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13767)
!13767 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13765)
!13768 = !DILocation(line: 0, scope: !12701, inlinedAt: !13767)
!13769 = !DILocation(line: 867, column: 12, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13771, file: !2371, line: 866, column: 26)
!13771 = distinct !DILexicalBlock(scope: !13760, file: !2371, line: 866, column: 2)
!13772 = !DILocation(line: 869, column: 14, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13770, file: !2371, line: 869, column: 7)
!13774 = !DILocation(line: 869, column: 7, scope: !13770)
!13775 = !DILocation(line: 870, column: 4, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13773, file: !2371, line: 869, column: 23)
!13777 = !DILocation(line: 871, column: 3, scope: !13776)
!13778 = !DILocation(line: 0, scope: !12719, inlinedAt: !13779)
!13779 = distinct !DILocation(line: 866, column: 2, scope: !13771)
!13780 = !DILocation(line: 0, scope: !12727, inlinedAt: !13781)
!13781 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13779)
!13782 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13781)
!13783 = !DILocation(line: 874, column: 2, scope: !13753)
!13784 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2371, file: !2371, line: 1144, type: !13000, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13785)
!13785 = !{!13786, !13787, !13788}
!13786 = !DILocalVariable(name: "pq", arg: 1, scope: !13784, file: !2371, line: 1144, type: !12895)
!13787 = !DILocalVariable(name: "thread", scope: !13784, file: !2371, line: 1146, type: !2264)
!13788 = !DILocalVariable(name: "n", scope: !13784, file: !2371, line: 1147, type: !2367)
!13789 = !DILocation(line: 0, scope: !13784)
!13790 = !DILocation(line: 1147, column: 19, scope: !13784)
!13791 = !DILocation(line: 1152, column: 2, scope: !13784)
!13792 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2371, file: !2371, line: 877, type: !13754, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13793)
!13793 = !{!13794, !13795, !13796, !13798}
!13794 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13792, file: !2371, line: 877, type: !2295)
!13795 = !DILocalVariable(name: "thread", scope: !13792, file: !2371, line: 879, type: !2264)
!13796 = !DILocalVariable(name: "__i", scope: !13797, file: !2371, line: 881, type: !12684)
!13797 = distinct !DILexicalBlock(scope: !13792, file: !2371, line: 881, column: 2)
!13798 = !DILocalVariable(name: "__key", scope: !13797, file: !2371, line: 881, type: !12684)
!13799 = !DILocation(line: 0, scope: !13792)
!13800 = !DILocation(line: 0, scope: !13797)
!13801 = !DILocation(line: 0, scope: !12692, inlinedAt: !13802)
!13802 = distinct !DILocation(line: 881, column: 2, scope: !13797)
!13803 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13802)
!13805 = !DILocation(line: 0, scope: !12701, inlinedAt: !13804)
!13806 = !DILocation(line: 882, column: 12, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13808, file: !2371, line: 881, column: 26)
!13808 = distinct !DILexicalBlock(scope: !13797, file: !2371, line: 881, column: 2)
!13809 = !DILocation(line: 884, column: 14, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13807, file: !2371, line: 884, column: 7)
!13811 = !DILocation(line: 884, column: 7, scope: !13807)
!13812 = !DILocation(line: 885, column: 4, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13810, file: !2371, line: 884, column: 23)
!13814 = !DILocation(line: 886, column: 10, scope: !13813)
!13815 = !DILocation(line: 887, column: 3, scope: !13813)
!13816 = !DILocation(line: 0, scope: !12719, inlinedAt: !13817)
!13817 = distinct !DILocation(line: 881, column: 2, scope: !13808)
!13818 = !DILocation(line: 0, scope: !12727, inlinedAt: !13819)
!13819 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13817)
!13820 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13819)
!13821 = !DILocation(line: 890, column: 2, scope: !13792)
!13822 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2371, file: !2371, line: 893, type: !12650, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13823)
!13823 = !{!13824}
!13824 = !DILocalVariable(name: "thread", arg: 1, scope: !13822, file: !2371, line: 893, type: !2264)
!13825 = !DILocation(line: 0, scope: !13822)
!13826 = !DILocation(line: 0, scope: !13670, inlinedAt: !13827)
!13827 = distinct !DILocation(line: 895, column: 2, scope: !13822)
!13828 = !DILocation(line: 0, scope: !13674, inlinedAt: !13827)
!13829 = !DILocation(line: 0, scope: !12692, inlinedAt: !13830)
!13830 = distinct !DILocation(line: 788, column: 2, scope: !13674, inlinedAt: !13827)
!13831 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13832)
!13832 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13830)
!13833 = !DILocation(line: 0, scope: !12701, inlinedAt: !13832)
!13834 = !DILocation(line: 789, column: 3, scope: !13684, inlinedAt: !13827)
!13835 = !DILocation(line: 0, scope: !12719, inlinedAt: !13836)
!13836 = distinct !DILocation(line: 788, column: 2, scope: !13685, inlinedAt: !13827)
!13837 = !DILocation(line: 0, scope: !12727, inlinedAt: !13838)
!13838 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13836)
!13839 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13838)
!13840 = !DILocation(line: 896, column: 8, scope: !13822)
!13841 = !DILocation(line: 897, column: 1, scope: !13822)
!13842 = distinct !DISubprogram(name: "z_set_prio", scope: !2371, file: !2371, line: 902, type: !13033, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13843)
!13843 = !{!13844, !13845, !13846, !13847, !13849}
!13844 = !DILocalVariable(name: "thread", arg: 1, scope: !13842, file: !2371, line: 902, type: !2264)
!13845 = !DILocalVariable(name: "prio", arg: 2, scope: !13842, file: !2371, line: 902, type: !109)
!13846 = !DILocalVariable(name: "need_sched", scope: !13842, file: !2371, line: 904, type: !315)
!13847 = !DILocalVariable(name: "__i", scope: !13848, file: !2371, line: 906, type: !12684)
!13848 = distinct !DILexicalBlock(scope: !13842, file: !2371, line: 906, column: 2)
!13849 = !DILocalVariable(name: "__key", scope: !13848, file: !2371, line: 906, type: !12684)
!13850 = !DILocation(line: 0, scope: !13842)
!13851 = !DILocation(line: 0, scope: !13848)
!13852 = !DILocation(line: 0, scope: !12692, inlinedAt: !13853)
!13853 = distinct !DILocation(line: 906, column: 2, scope: !13848)
!13854 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13855)
!13855 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13853)
!13856 = !DILocation(line: 0, scope: !12701, inlinedAt: !13855)
!13857 = !DILocation(line: 907, column: 16, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13859, file: !2371, line: 906, column: 26)
!13859 = distinct !DILexicalBlock(scope: !13848, file: !2371, line: 906, column: 2)
!13860 = !DILocation(line: 909, column: 7, scope: !13858)
!13861 = !DILocation(line: 0, scope: !12861, inlinedAt: !13862)
!13862 = distinct !DILocation(line: 912, column: 5, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13864, file: !2371, line: 911, column: 63)
!13864 = distinct !DILexicalBlock(scope: !13865, file: !2371, line: 911, column: 8)
!13865 = distinct !DILexicalBlock(scope: !13866, file: !2371, line: 909, column: 19)
!13866 = distinct !DILexicalBlock(scope: !13858, file: !2371, line: 909, column: 7)
!13867 = !DILocation(line: 266, column: 28, scope: !12861, inlinedAt: !13862)
!13868 = !DILocation(line: 0, scope: !12869, inlinedAt: !13869)
!13869 = distinct !DILocation(line: 268, column: 3, scope: !12873, inlinedAt: !13862)
!13870 = !DILocation(line: 234, column: 2, scope: !12869, inlinedAt: !13869)
!13871 = !DILocation(line: 913, column: 23, scope: !13863)
!13872 = !DILocation(line: 0, scope: !12878, inlinedAt: !13873)
!13873 = distinct !DILocation(line: 914, column: 5, scope: !13863)
!13874 = !DILocation(line: 252, column: 28, scope: !12878, inlinedAt: !13873)
!13875 = !DILocation(line: 0, scope: !12885, inlinedAt: !13876)
!13876 = distinct !DILocation(line: 254, column: 3, scope: !12889, inlinedAt: !13873)
!13877 = !DILocation(line: 0, scope: !12892, inlinedAt: !13878)
!13878 = distinct !DILocation(line: 229, column: 2, scope: !12885, inlinedAt: !13876)
!13879 = !DILocation(line: 188, column: 2, scope: !12902, inlinedAt: !13878)
!13880 = !DILocation(line: 188, column: 2, scope: !12904, inlinedAt: !13878)
!13881 = !DILocation(line: 0, scope: !12902, inlinedAt: !13878)
!13882 = !DILocation(line: 189, column: 7, scope: !12907, inlinedAt: !13878)
!13883 = !DILocation(line: 189, column: 35, scope: !12907, inlinedAt: !13878)
!13884 = !DILocation(line: 189, column: 7, scope: !12908, inlinedAt: !13878)
!13885 = !DILocation(line: 190, column: 4, scope: !12912, inlinedAt: !13878)
!13886 = !DILocation(line: 192, column: 4, scope: !12912, inlinedAt: !13878)
!13887 = distinct !{!13887, !13879, !13888}
!13888 = !DILocation(line: 194, column: 2, scope: !12902, inlinedAt: !13878)
!13889 = !DILocation(line: 196, column: 2, scope: !12892, inlinedAt: !13878)
!13890 = !DILocation(line: 197, column: 1, scope: !12892, inlinedAt: !13878)
!13891 = !DILocation(line: 918, column: 4, scope: !13865)
!13892 = !DILocation(line: 919, column: 3, scope: !13865)
!13893 = !DILocation(line: 920, column: 22, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13866, file: !2371, line: 919, column: 10)
!13895 = !DILocation(line: 0, scope: !12719, inlinedAt: !13896)
!13896 = distinct !DILocation(line: 906, column: 2, scope: !13859)
!13897 = !DILocation(line: 0, scope: !12727, inlinedAt: !13898)
!13898 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13896)
!13899 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13898)
!13900 = !DILocation(line: 926, column: 2, scope: !13842)
!13901 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2371, file: !2371, line: 929, type: !13902, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13904)
!13902 = !DISubroutineType(types: !13903)
!13903 = !{null, !2264, !109}
!13904 = !{!13905, !13906, !13907}
!13905 = !DILocalVariable(name: "thread", arg: 1, scope: !13901, file: !2371, line: 929, type: !2264)
!13906 = !DILocalVariable(name: "prio", arg: 2, scope: !13901, file: !2371, line: 929, type: !109)
!13907 = !DILocalVariable(name: "need_sched", scope: !13901, file: !2371, line: 931, type: !315)
!13908 = !DILocation(line: 0, scope: !13901)
!13909 = !DILocation(line: 931, column: 20, scope: !13901)
!13910 = !DILocation(line: 935, column: 17, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13901, file: !2371, line: 935, column: 6)
!13912 = !DILocation(line: 935, column: 20, scope: !13911)
!13913 = !DILocation(line: 935, column: 35, scope: !13911)
!13914 = !DILocation(line: 935, column: 48, scope: !13911)
!13915 = !DILocation(line: 935, column: 6, scope: !13901)
!13916 = !DILocation(line: 936, column: 3, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13911, file: !2371, line: 935, column: 55)
!13918 = !DILocation(line: 937, column: 2, scope: !13917)
!13919 = !DILocation(line: 938, column: 1, scope: !13901)
!13920 = distinct !DISubprogram(name: "k_sched_lock", scope: !2371, file: !2371, line: 987, type: !2980, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13921)
!13921 = !{!13922, !13924}
!13922 = !DILocalVariable(name: "__i", scope: !13923, file: !2371, line: 989, type: !12684)
!13923 = distinct !DILexicalBlock(scope: !13920, file: !2371, line: 989, column: 2)
!13924 = !DILocalVariable(name: "__key", scope: !13923, file: !2371, line: 989, type: !12684)
!13925 = !DILocation(line: 0, scope: !13923)
!13926 = !DILocation(line: 0, scope: !12692, inlinedAt: !13927)
!13927 = distinct !DILocation(line: 989, column: 2, scope: !13923)
!13928 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13929)
!13929 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13927)
!13930 = !DILocation(line: 0, scope: !12701, inlinedAt: !13929)
!13931 = !DILocation(line: 992, column: 3, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13933, file: !2371, line: 989, column: 26)
!13933 = distinct !DILexicalBlock(scope: !13923, file: !2371, line: 989, column: 2)
!13934 = !DILocation(line: 0, scope: !12719, inlinedAt: !13935)
!13935 = distinct !DILocation(line: 989, column: 2, scope: !13933)
!13936 = !DILocation(line: 0, scope: !12727, inlinedAt: !13937)
!13937 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13935)
!13938 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13937)
!13939 = !DILocation(line: 994, column: 1, scope: !13920)
!13940 = distinct !DISubprogram(name: "z_sched_lock", scope: !11665, file: !11665, line: 251, type: !2980, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !251)
!13941 = !DILocation(line: 256, column: 4, scope: !13940)
!13942 = !DILocation(line: 256, column: 19, scope: !13940)
!13943 = !DILocation(line: 256, column: 2, scope: !13940)
!13944 = !DILocation(line: 258, column: 2, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13940, file: !11665, line: 258, column: 2)
!13946 = !{i64 2155185917}
!13947 = !DILocation(line: 259, column: 1, scope: !13940)
!13948 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2371, file: !2371, line: 996, type: !2980, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13949)
!13949 = !{!13950, !13952}
!13950 = !DILocalVariable(name: "__i", scope: !13951, file: !2371, line: 998, type: !12684)
!13951 = distinct !DILexicalBlock(scope: !13948, file: !2371, line: 998, column: 2)
!13952 = !DILocalVariable(name: "__key", scope: !13951, file: !2371, line: 998, type: !12684)
!13953 = !DILocation(line: 0, scope: !13951)
!13954 = !DILocation(line: 0, scope: !12692, inlinedAt: !13955)
!13955 = distinct !DILocation(line: 998, column: 2, scope: !13951)
!13956 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !13957)
!13957 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !13955)
!13958 = !DILocation(line: 0, scope: !12701, inlinedAt: !13957)
!13959 = !DILocation(line: 1002, column: 5, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13961, file: !2371, line: 998, column: 26)
!13961 = distinct !DILexicalBlock(scope: !13951, file: !2371, line: 998, column: 2)
!13962 = !DILocation(line: 1002, column: 20, scope: !13960)
!13963 = !DILocation(line: 1002, column: 3, scope: !13960)
!13964 = !DILocation(line: 1003, column: 3, scope: !13960)
!13965 = !DILocation(line: 0, scope: !12719, inlinedAt: !13966)
!13966 = distinct !DILocation(line: 998, column: 2, scope: !13961)
!13967 = !DILocation(line: 0, scope: !12727, inlinedAt: !13968)
!13968 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !13966)
!13969 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !13968)
!13970 = !DILocation(line: 1011, column: 2, scope: !13948)
!13971 = !DILocation(line: 1012, column: 1, scope: !13948)
!13972 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2371, file: !2371, line: 1014, type: !13007, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !251)
!13973 = !DILocation(line: 1028, column: 25, scope: !13972)
!13974 = !DILocation(line: 1028, column: 2, scope: !13972)
!13975 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2371, file: !2371, line: 1155, type: !13976, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !13978)
!13976 = !DISubroutineType(types: !13977)
!13977 = !{!315, !2293, !2293}
!13978 = !{!13979, !13980, !13981, !13982, !13983}
!13979 = !DILocalVariable(name: "a", arg: 1, scope: !13975, file: !2371, line: 1155, type: !2293)
!13980 = !DILocalVariable(name: "b", arg: 2, scope: !13975, file: !2371, line: 1155, type: !2293)
!13981 = !DILocalVariable(name: "thread_a", scope: !13975, file: !2371, line: 1157, type: !2264)
!13982 = !DILocalVariable(name: "thread_b", scope: !13975, file: !2371, line: 1157, type: !2264)
!13983 = !DILocalVariable(name: "cmp", scope: !13975, file: !2371, line: 1158, type: !734)
!13984 = !DILocation(line: 0, scope: !13975)
!13985 = !DILocation(line: 1160, column: 13, scope: !13975)
!13986 = !DILocation(line: 1161, column: 13, scope: !13975)
!13987 = !DILocation(line: 1163, column: 8, scope: !13975)
!13988 = !DILocation(line: 1165, column: 10, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13975, file: !2371, line: 1165, column: 6)
!13990 = !DILocation(line: 1165, column: 6, scope: !13975)
!13991 = !DILocation(line: 1167, column: 17, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13989, file: !2371, line: 1167, column: 13)
!13993 = !DILocation(line: 1167, column: 13, scope: !13989)
!13994 = !DILocation(line: 1170, column: 25, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13992, file: !2371, line: 1169, column: 9)
!13996 = !DILocation(line: 1170, column: 52, scope: !13995)
!13997 = !DILocation(line: 1170, column: 35, scope: !13995)
!13998 = !DILocation(line: 1170, column: 3, scope: !13995)
!13999 = !DILocation(line: 0, scope: !13989)
!14000 = !DILocation(line: 1173, column: 1, scope: !13975)
!14001 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2371, file: !2371, line: 1175, type: !14002, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14017)
!14002 = !DISubroutineType(types: !14003)
!14003 = !{null, !14004, !2264}
!14004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14005, size: 32)
!14005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14006, line: 37, size: 128, elements: !14007)
!14006 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14007 = !{!14008, !14016}
!14008 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14005, file: !14006, line: 38, baseType: !14009, size: 96)
!14009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !168, line: 83, size: 96, elements: !14010)
!14010 = !{!14011, !14012, !14015}
!14011 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14009, file: !168, line: 84, baseType: !2293, size: 32)
!14012 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14009, file: !168, line: 85, baseType: !14013, size: 32, offset: 32)
!14013 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !168, line: 81, baseType: !14014)
!14014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13976, size: 32)
!14015 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14009, file: !168, line: 86, baseType: !109, size: 32, offset: 64)
!14016 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14005, file: !14006, line: 39, baseType: !109, size: 32, offset: 96)
!14017 = !{!14018, !14019, !14020, !14021, !14030}
!14018 = !DILocalVariable(name: "pq", arg: 1, scope: !14001, file: !2371, line: 1175, type: !14004)
!14019 = !DILocalVariable(name: "thread", arg: 2, scope: !14001, file: !2371, line: 1175, type: !2264)
!14020 = !DILocalVariable(name: "t", scope: !14001, file: !2371, line: 1177, type: !2264)
!14021 = !DILocalVariable(name: "__f", scope: !14022, file: !2371, line: 1190, type: !14025)
!14022 = distinct !DILexicalBlock(scope: !14023, file: !2371, line: 1190, column: 3)
!14023 = distinct !DILexicalBlock(scope: !14024, file: !2371, line: 1189, column: 27)
!14024 = distinct !DILexicalBlock(scope: !14001, file: !2371, line: 1189, column: 6)
!14025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !168, line: 155, size: 96, elements: !14026)
!14026 = !{!14027, !14028, !14029}
!14027 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14025, file: !168, line: 156, baseType: !2366, size: 32)
!14028 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14025, file: !168, line: 157, baseType: !1890, size: 32, offset: 32)
!14029 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14025, file: !168, line: 158, baseType: !734, size: 32, offset: 64)
!14030 = !DILocalVariable(name: "n", scope: !14031, file: !2371, line: 1190, type: !2293)
!14031 = distinct !DILexicalBlock(scope: !14032, file: !2371, line: 1190, column: 3)
!14032 = distinct !DILexicalBlock(scope: !14022, file: !2371, line: 1190, column: 3)
!14033 = !DILocation(line: 0, scope: !14001)
!14034 = !DILocation(line: 1181, column: 31, scope: !14001)
!14035 = !DILocation(line: 1181, column: 45, scope: !14001)
!14036 = !DILocation(line: 1181, column: 15, scope: !14001)
!14037 = !DILocation(line: 1181, column: 25, scope: !14001)
!14038 = !DILocation(line: 1189, column: 11, scope: !14024)
!14039 = !DILocation(line: 1189, column: 7, scope: !14024)
!14040 = !DILocation(line: 1189, column: 6, scope: !14001)
!14041 = !DILocation(line: 1190, column: 3, scope: !14022)
!14042 = !DILocation(line: 1190, column: 3, scope: !14031)
!14043 = !DILocation(line: 0, scope: !14031)
!14044 = !DILocation(line: 1190, column: 3, scope: !14032)
!14045 = !DILocation(line: 1193, column: 2, scope: !14023)
!14046 = !DILocation(line: 1191, column: 42, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14032, file: !2371, line: 1190, column: 54)
!14048 = !DILocation(line: 1191, column: 12, scope: !14047)
!14049 = !DILocation(line: 1191, column: 22, scope: !14047)
!14050 = distinct !{!14050, !14041, !14051}
!14051 = !DILocation(line: 1192, column: 3, scope: !14022)
!14052 = !DILocation(line: 1195, column: 17, scope: !14001)
!14053 = !DILocation(line: 1195, column: 37, scope: !14001)
!14054 = !DILocation(line: 1195, column: 2, scope: !14001)
!14055 = !DILocation(line: 1196, column: 1, scope: !14001)
!14056 = !DISubprogram(name: "z_rb_foreach_next", scope: !168, file: !168, line: 176, type: !14057, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14057 = !DISubroutineType(types: !14058)
!14058 = !{!2293, !14059, !14060}
!14059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14009, size: 32)
!14060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14025, size: 32)
!14061 = !DISubprogram(name: "rb_insert", scope: !168, file: !168, line: 105, type: !14062, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14062 = !DISubroutineType(types: !14063)
!14063 = !{null, !14059, !2293}
!14064 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2371, file: !2371, line: 1198, type: !14002, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14065)
!14065 = !{!14066, !14067}
!14066 = !DILocalVariable(name: "pq", arg: 1, scope: !14064, file: !2371, line: 1198, type: !14004)
!14067 = !DILocalVariable(name: "thread", arg: 2, scope: !14064, file: !2371, line: 1198, type: !2264)
!14068 = !DILocation(line: 0, scope: !14064)
!14069 = !DILocation(line: 1202, column: 17, scope: !14064)
!14070 = !DILocation(line: 1202, column: 37, scope: !14064)
!14071 = !DILocation(line: 1202, column: 2, scope: !14064)
!14072 = !DILocation(line: 1204, column: 16, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14064, file: !2371, line: 1204, column: 6)
!14074 = !DILocation(line: 1204, column: 7, scope: !14073)
!14075 = !DILocation(line: 1204, column: 6, scope: !14064)
!14076 = !DILocation(line: 1205, column: 7, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14073, file: !2371, line: 1204, column: 22)
!14078 = !DILocation(line: 1205, column: 22, scope: !14077)
!14079 = !DILocation(line: 1206, column: 2, scope: !14077)
!14080 = !DILocation(line: 1207, column: 1, scope: !14064)
!14081 = !DISubprogram(name: "rb_remove", scope: !168, file: !168, line: 110, type: !14062, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14082 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2371, file: !2371, line: 1209, type: !14083, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14085)
!14083 = !DISubroutineType(types: !14084)
!14084 = !{!2264, !14004}
!14085 = !{!14086, !14087, !14088}
!14086 = !DILocalVariable(name: "pq", arg: 1, scope: !14082, file: !2371, line: 1209, type: !14004)
!14087 = !DILocalVariable(name: "thread", scope: !14082, file: !2371, line: 1211, type: !2264)
!14088 = !DILocalVariable(name: "n", scope: !14082, file: !2371, line: 1212, type: !2293)
!14089 = !DILocation(line: 0, scope: !14082)
!14090 = !DILocation(line: 1212, column: 37, scope: !14082)
!14091 = !DILocation(line: 1212, column: 21, scope: !14082)
!14092 = !DILocation(line: 1217, column: 2, scope: !14082)
!14093 = distinct !DISubprogram(name: "rb_get_min", scope: !168, file: !168, line: 115, type: !14094, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14096)
!14094 = !DISubroutineType(types: !14095)
!14095 = !{!2293, !14059}
!14096 = !{!14097}
!14097 = !DILocalVariable(name: "tree", arg: 1, scope: !14093, file: !168, line: 115, type: !14059)
!14098 = !DILocation(line: 0, scope: !14093)
!14099 = !DILocation(line: 117, column: 9, scope: !14093)
!14100 = !DILocation(line: 117, column: 2, scope: !14093)
!14101 = !DISubprogram(name: "z_rb_get_minmax", scope: !168, file: !168, line: 100, type: !14102, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14102 = !DISubroutineType(types: !14103)
!14103 = !{!2293, !14059, !178}
!14104 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2371, file: !2371, line: 1246, type: !14105, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14113)
!14105 = !DISubroutineType(types: !14106)
!14106 = !{!2264, !14107}
!14107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14108, size: 32)
!14108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14006, line: 53, size: 2080, elements: !14109)
!14109 = !{!14110, !14112}
!14110 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14108, file: !14006, line: 54, baseType: !14111, size: 2048)
!14111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2300, size: 2048, elements: !225)
!14112 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14108, file: !14006, line: 55, baseType: !32, size: 32, offset: 2048)
!14113 = !{!14114, !14115, !14116, !14117}
!14114 = !DILocalVariable(name: "pq", arg: 1, scope: !14104, file: !2371, line: 1246, type: !14107)
!14115 = !DILocalVariable(name: "thread", scope: !14104, file: !2371, line: 1252, type: !2264)
!14116 = !DILocalVariable(name: "l", scope: !14104, file: !2371, line: 1253, type: !12895)
!14117 = !DILocalVariable(name: "n", scope: !14104, file: !2371, line: 1254, type: !2367)
!14118 = !DILocation(line: 0, scope: !14104)
!14119 = !DILocation(line: 1248, column: 11, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14104, file: !2371, line: 1248, column: 6)
!14121 = !DILocation(line: 1248, column: 7, scope: !14120)
!14122 = !DILocation(line: 1248, column: 6, scope: !14104)
!14123 = !DILocation(line: 1253, column: 31, scope: !14104)
!14124 = !DILocation(line: 1253, column: 20, scope: !14104)
!14125 = !DILocation(line: 1254, column: 19, scope: !14104)
!14126 = !DILocation(line: 1260, column: 1, scope: !14104)
!14127 = distinct !DISubprogram(name: "z_unpend_all", scope: !2371, file: !2371, line: 1262, type: !14128, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14130)
!14128 = !DISubroutineType(types: !14129)
!14129 = !{!109, !2295}
!14130 = !{!14131, !14132, !14133}
!14131 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14127, file: !2371, line: 1262, type: !2295)
!14132 = !DILocalVariable(name: "need_sched", scope: !14127, file: !2371, line: 1264, type: !109)
!14133 = !DILocalVariable(name: "thread", scope: !14127, file: !2371, line: 1265, type: !2264)
!14134 = !DILocation(line: 0, scope: !14127)
!14135 = !DILocation(line: 1267, column: 19, scope: !14127)
!14136 = !DILocation(line: 1267, column: 41, scope: !14127)
!14137 = !DILocation(line: 1267, column: 2, scope: !14127)
!14138 = !DILocation(line: 1268, column: 3, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14127, file: !2371, line: 1267, column: 50)
!14140 = !DILocation(line: 1269, column: 3, scope: !14139)
!14141 = distinct !{!14141, !14137, !14142}
!14142 = !DILocation(line: 1271, column: 2, scope: !14127)
!14143 = !DILocation(line: 1273, column: 2, scope: !14127)
!14144 = distinct !DISubprogram(name: "z_waitq_head", scope: !12018, file: !12018, line: 52, type: !13754, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14145)
!14145 = !{!14146}
!14146 = !DILocalVariable(name: "w", arg: 1, scope: !14144, file: !12018, line: 52, type: !2295)
!14147 = !DILocation(line: 0, scope: !14144)
!14148 = !DILocation(line: 54, column: 52, scope: !14144)
!14149 = !DILocation(line: 54, column: 28, scope: !14144)
!14150 = !DILocation(line: 54, column: 9, scope: !14144)
!14151 = !DILocation(line: 54, column: 2, scope: !14144)
!14152 = distinct !DISubprogram(name: "init_ready_q", scope: !2371, file: !2371, line: 1276, type: !14153, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14160)
!14153 = !DISubroutineType(types: !14154)
!14154 = !{null, !14155}
!14155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14156, size: 32)
!14156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !14157)
!14157 = !{!14158, !14159}
!14158 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14156, file: !122, line: 86, baseType: !2264, size: 32)
!14159 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14156, file: !122, line: 90, baseType: !2300, size: 64, offset: 32)
!14160 = !{!14161}
!14161 = !DILocalVariable(name: "rq", arg: 1, scope: !14152, file: !2371, line: 1276, type: !14155)
!14162 = !DILocation(line: 0, scope: !14152)
!14163 = !DILocation(line: 1289, column: 22, scope: !14152)
!14164 = !DILocation(line: 1289, column: 2, scope: !14152)
!14165 = !DILocation(line: 1291, column: 1, scope: !14152)
!14166 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !14167, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14169)
!14167 = !DISubroutineType(types: !14168)
!14168 = !{null, !12895}
!14169 = !{!14170}
!14170 = !DILocalVariable(name: "list", arg: 1, scope: !14166, file: !127, line: 197, type: !12895)
!14171 = !DILocation(line: 0, scope: !14166)
!14172 = !DILocation(line: 199, column: 8, scope: !14166)
!14173 = !DILocation(line: 199, column: 13, scope: !14166)
!14174 = !DILocation(line: 200, column: 8, scope: !14166)
!14175 = !DILocation(line: 200, column: 13, scope: !14166)
!14176 = !DILocation(line: 201, column: 1, scope: !14166)
!14177 = distinct !DISubprogram(name: "z_sched_init", scope: !2371, file: !2371, line: 1293, type: !2980, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !251)
!14178 = !DILocation(line: 1302, column: 2, scope: !14177)
!14179 = !DILocation(line: 1306, column: 2, scope: !14177)
!14180 = !DILocation(line: 1309, column: 1, scope: !14177)
!14181 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2371, file: !2371, line: 1311, type: !14182, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14185)
!14182 = !DISubroutineType(types: !14183)
!14183 = !{!109, !14184}
!14184 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2264)
!14185 = !{!14186}
!14186 = !DILocalVariable(name: "thread", arg: 1, scope: !14181, file: !2371, line: 1311, type: !14184)
!14187 = !DILocation(line: 0, scope: !14181)
!14188 = !DILocation(line: 1313, column: 22, scope: !14181)
!14189 = !DILocation(line: 1313, column: 9, scope: !14181)
!14190 = !DILocation(line: 1313, column: 2, scope: !14181)
!14191 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2371, file: !2371, line: 1325, type: !14192, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14194)
!14192 = !DISubroutineType(types: !14193)
!14193 = !{null, !14184, !109}
!14194 = !{!14195, !14196, !14197}
!14195 = !DILocalVariable(name: "thread", arg: 1, scope: !14191, file: !2371, line: 1325, type: !14184)
!14196 = !DILocalVariable(name: "prio", arg: 2, scope: !14191, file: !2371, line: 1325, type: !109)
!14197 = !DILocalVariable(name: "th", scope: !14191, file: !2371, line: 1334, type: !2264)
!14198 = !DILocation(line: 0, scope: !14191)
!14199 = !DILocation(line: 1336, column: 2, scope: !14191)
!14200 = !DILocation(line: 1337, column: 1, scope: !14191)
!14201 = distinct !DISubprogram(name: "k_can_yield", scope: !2371, file: !2371, line: 1384, type: !5926, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !251)
!14202 = !DILocation(line: 1386, column: 11, scope: !14201)
!14203 = !DILocation(line: 1386, column: 29, scope: !14201)
!14204 = !DILocation(line: 1386, column: 32, scope: !14201)
!14205 = !DILocation(line: 1386, column: 46, scope: !14201)
!14206 = !DILocation(line: 1387, column: 28, scope: !14201)
!14207 = !DILocation(line: 1387, column: 4, scope: !14201)
!14208 = !DILocation(line: 1386, column: 2, scope: !14201)
!14209 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !5926, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !251)
!14210 = !DILocation(line: 993, column: 10, scope: !14209)
!14211 = !DILocation(line: 993, column: 2, scope: !14209)
!14212 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2371, file: !2371, line: 1390, type: !2980, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14213)
!14213 = !{!14214}
!14214 = !DILocalVariable(name: "key", scope: !14212, file: !2371, line: 1396, type: !12684)
!14215 = !DILocation(line: 0, scope: !12692, inlinedAt: !14216)
!14216 = distinct !DILocation(line: 1396, column: 25, scope: !14212)
!14217 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !14218)
!14218 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !14216)
!14219 = !DILocation(line: 0, scope: !12701, inlinedAt: !14218)
!14220 = !DILocation(line: 0, scope: !14212)
!14221 = !DILocation(line: 1400, column: 18, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14223, file: !2371, line: 1399, column: 36)
!14223 = distinct !DILexicalBlock(scope: !14212, file: !2371, line: 1398, column: 6)
!14224 = !DILocation(line: 0, scope: !12861, inlinedAt: !14225)
!14225 = distinct !DILocation(line: 1400, column: 3, scope: !14222)
!14226 = !DILocation(line: 266, column: 15, scope: !12861, inlinedAt: !14225)
!14227 = !DILocation(line: 266, column: 28, scope: !12861, inlinedAt: !14225)
!14228 = !DILocation(line: 0, scope: !12869, inlinedAt: !14229)
!14229 = distinct !DILocation(line: 268, column: 3, scope: !12873, inlinedAt: !14225)
!14230 = !DILocation(line: 234, column: 2, scope: !12869, inlinedAt: !14229)
!14231 = !DILocation(line: 1402, column: 15, scope: !14212)
!14232 = !DILocation(line: 0, scope: !12878, inlinedAt: !14233)
!14233 = distinct !DILocation(line: 1402, column: 2, scope: !14212)
!14234 = !DILocation(line: 252, column: 15, scope: !12878, inlinedAt: !14233)
!14235 = !DILocation(line: 252, column: 28, scope: !12878, inlinedAt: !14233)
!14236 = !DILocation(line: 0, scope: !12885, inlinedAt: !14237)
!14237 = distinct !DILocation(line: 254, column: 3, scope: !12889, inlinedAt: !14233)
!14238 = !DILocation(line: 0, scope: !12892, inlinedAt: !14239)
!14239 = distinct !DILocation(line: 229, column: 2, scope: !12885, inlinedAt: !14237)
!14240 = !DILocation(line: 188, column: 2, scope: !12902, inlinedAt: !14239)
!14241 = !DILocation(line: 188, column: 2, scope: !12904, inlinedAt: !14239)
!14242 = !DILocation(line: 0, scope: !12902, inlinedAt: !14239)
!14243 = !DILocation(line: 189, column: 7, scope: !12907, inlinedAt: !14239)
!14244 = !DILocation(line: 189, column: 35, scope: !12907, inlinedAt: !14239)
!14245 = !DILocation(line: 189, column: 7, scope: !12908, inlinedAt: !14239)
!14246 = !DILocation(line: 191, column: 21, scope: !12912, inlinedAt: !14239)
!14247 = !DILocation(line: 190, column: 4, scope: !12912, inlinedAt: !14239)
!14248 = !DILocation(line: 192, column: 4, scope: !12912, inlinedAt: !14239)
!14249 = distinct !{!14249, !14240, !14250}
!14250 = !DILocation(line: 194, column: 2, scope: !12902, inlinedAt: !14239)
!14251 = !DILocation(line: 196, column: 37, scope: !12892, inlinedAt: !14239)
!14252 = !DILocation(line: 196, column: 2, scope: !12892, inlinedAt: !14239)
!14253 = !DILocation(line: 197, column: 1, scope: !12892, inlinedAt: !14239)
!14254 = !DILocation(line: 1403, column: 2, scope: !14212)
!14255 = !DILocation(line: 0, scope: !13314, inlinedAt: !14256)
!14256 = distinct !DILocation(line: 1404, column: 2, scope: !14212)
!14257 = !DILocation(line: 196, column: 9, scope: !13314, inlinedAt: !14256)
!14258 = !DILocation(line: 1405, column: 1, scope: !14212)
!14259 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2371, file: !2371, line: 1459, type: !14260, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14262)
!14260 = !DISubroutineType(types: !14261)
!14261 = !{!734, !13494}
!14262 = !{!14263, !14264, !14265}
!14263 = !DILocalVariable(name: "timeout", arg: 1, scope: !14259, file: !2371, line: 1459, type: !13494)
!14264 = !DILocalVariable(name: "ticks", scope: !14259, file: !2371, line: 1461, type: !102)
!14265 = !DILocalVariable(name: "ret", scope: !14259, file: !2371, line: 1480, type: !734)
!14266 = !DILocation(line: 0, scope: !14259)
!14267 = !DILocation(line: 1468, column: 6, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14259, file: !2371, line: 1468, column: 6)
!14269 = !DILocation(line: 1468, column: 6, scope: !14259)
!14270 = !DILocation(line: 1469, column: 20, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14268, file: !2371, line: 1468, column: 40)
!14272 = !DILocation(line: 1469, column: 3, scope: !14271)
!14273 = !DILocation(line: 1473, column: 3, scope: !14271)
!14274 = !DILocation(line: 1478, column: 10, scope: !14259)
!14275 = !DILocation(line: 1480, column: 16, scope: !14259)
!14276 = !DILocation(line: 1485, column: 1, scope: !14259)
!14277 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3123, file: !3123, line: 310, type: !14278, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14280)
!14278 = !DISubroutineType(types: !14279)
!14279 = !{null, !14184}
!14280 = !{!14281}
!14281 = !DILocalVariable(name: "thread", arg: 1, scope: !14277, file: !3123, line: 310, type: !14184)
!14282 = !DILocation(line: 0, scope: !14277)
!14283 = !DILocation(line: 319, column: 2, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14277, file: !3123, line: 319, column: 2)
!14285 = !{i64 2155104306}
!14286 = !DILocation(line: 320, column: 2, scope: !14277)
!14287 = !DILocation(line: 321, column: 1, scope: !14277)
!14288 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2371, file: !2371, line: 1415, type: !14289, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14291)
!14289 = !DISubroutineType(types: !14290)
!14290 = !{!734, !102}
!14291 = !{!14292, !14293, !14294, !14295}
!14292 = !DILocalVariable(name: "ticks", arg: 1, scope: !14288, file: !2371, line: 1415, type: !102)
!14293 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14288, file: !2371, line: 1418, type: !110)
!14294 = !DILocalVariable(name: "timeout", scope: !14288, file: !2371, line: 1430, type: !13494)
!14295 = !DILocalVariable(name: "key", scope: !14288, file: !2371, line: 1437, type: !12684)
!14296 = !DILocation(line: 0, scope: !14288)
!14297 = !DILocation(line: 1425, column: 12, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14288, file: !2371, line: 1425, column: 6)
!14299 = !DILocation(line: 1425, column: 6, scope: !14288)
!14300 = !DILocation(line: 1426, column: 3, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14298, file: !2371, line: 1425, column: 18)
!14302 = !DILocation(line: 1427, column: 3, scope: !14301)
!14303 = !DILocation(line: 1431, column: 24, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14288, file: !2371, line: 1431, column: 6)
!14305 = !DILocation(line: 1431, column: 6, scope: !14288)
!14306 = !DILocation(line: 1432, column: 35, scope: !14307)
!14307 = distinct !DILexicalBlock(scope: !14304, file: !2371, line: 1431, column: 30)
!14308 = !DILocation(line: 1432, column: 27, scope: !14307)
!14309 = !DILocation(line: 1433, column: 2, scope: !14307)
!14310 = !DILocation(line: 1434, column: 27, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14304, file: !2371, line: 1433, column: 9)
!14312 = !DILocation(line: 0, scope: !14304)
!14313 = !DILocation(line: 0, scope: !12692, inlinedAt: !14314)
!14314 = distinct !DILocation(line: 1437, column: 25, scope: !14288)
!14315 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !14316)
!14316 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !14314)
!14317 = !DILocation(line: 0, scope: !12701, inlinedAt: !14316)
!14318 = !DILocation(line: 1440, column: 20, scope: !14288)
!14319 = !DILocation(line: 1440, column: 18, scope: !14288)
!14320 = !DILocation(line: 1442, column: 2, scope: !14288)
!14321 = !DILocation(line: 1443, column: 23, scope: !14288)
!14322 = !DILocation(line: 1443, column: 2, scope: !14288)
!14323 = !DILocation(line: 1444, column: 29, scope: !14288)
!14324 = !DILocation(line: 1444, column: 2, scope: !14288)
!14325 = !DILocation(line: 0, scope: !13314, inlinedAt: !14326)
!14326 = distinct !DILocation(line: 1446, column: 8, scope: !14288)
!14327 = !DILocation(line: 196, column: 9, scope: !13314, inlinedAt: !14326)
!14328 = !DILocation(line: 1450, column: 10, scope: !14288)
!14329 = !DILocation(line: 1450, column: 45, scope: !14288)
!14330 = !DILocation(line: 1450, column: 43, scope: !14288)
!14331 = !DILocation(line: 1451, column: 6, scope: !14288)
!14332 = !DILocation(line: 1457, column: 1, scope: !14288)
!14333 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12254, file: !12254, line: 1103, type: !12255, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14334)
!14334 = !{!14335}
!14335 = !DILocalVariable(name: "t", arg: 1, scope: !14333, file: !12254, line: 1103, type: !111)
!14336 = !DILocation(line: 0, scope: !14333)
!14337 = !DILocation(line: 0, scope: !12739, inlinedAt: !14338)
!14338 = distinct !DILocation(line: 1106, column: 9, scope: !14333)
!14339 = !DILocation(line: 139, column: 13, scope: !14340, inlinedAt: !14338)
!14340 = distinct !DILexicalBlock(scope: !14341, file: !12254, line: 138, column: 10)
!14341 = distinct !DILexicalBlock(scope: !14342, file: !12254, line: 136, column: 7)
!14342 = distinct !DILexicalBlock(scope: !12760, file: !12254, line: 134, column: 17)
!14343 = !DILocation(line: 1106, column: 2, scope: !14333)
!14344 = distinct !DISubprogram(name: "k_yield", scope: !3123, file: !3123, line: 140, type: !2980, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !251)
!14345 = !DILocation(line: 148, column: 2, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14344, file: !3123, line: 148, column: 2)
!14347 = !{i64 2155103626}
!14348 = !DILocation(line: 149, column: 2, scope: !14344)
!14349 = !DILocation(line: 150, column: 1, scope: !14344)
!14350 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2371, file: !2371, line: 1495, type: !14351, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14353)
!14351 = !DISubroutineType(types: !14352)
!14352 = !{!734, !109}
!14353 = !{!14354, !14355}
!14354 = !DILocalVariable(name: "us", arg: 1, scope: !14350, file: !2371, line: 1495, type: !109)
!14355 = !DILocalVariable(name: "ticks", scope: !14350, file: !2371, line: 1497, type: !734)
!14356 = !DILocation(line: 0, scope: !14350)
!14357 = !DILocation(line: 1501, column: 31, scope: !14350)
!14358 = !DILocation(line: 1501, column: 10, scope: !14350)
!14359 = !DILocation(line: 1502, column: 23, scope: !14350)
!14360 = !DILocation(line: 1502, column: 10, scope: !14350)
!14361 = !DILocation(line: 1506, column: 31, scope: !14350)
!14362 = !DILocation(line: 1506, column: 9, scope: !14350)
!14363 = !DILocation(line: 1506, column: 2, scope: !14350)
!14364 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12254, file: !12254, line: 571, type: !12255, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14365)
!14365 = !{!14366}
!14366 = !DILocalVariable(name: "t", arg: 1, scope: !14364, file: !12254, line: 571, type: !111)
!14367 = !DILocation(line: 0, scope: !14364)
!14368 = !DILocation(line: 0, scope: !12739, inlinedAt: !14369)
!14369 = distinct !DILocation(line: 574, column: 9, scope: !14364)
!14370 = !DILocation(line: 135, column: 5, scope: !14342, inlinedAt: !14369)
!14371 = !DILocation(line: 139, column: 13, scope: !14340, inlinedAt: !14369)
!14372 = !DILocation(line: 574, column: 2, scope: !14364)
!14373 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12254, file: !12254, line: 1187, type: !12255, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14374)
!14374 = !{!14375}
!14375 = !DILocalVariable(name: "t", arg: 1, scope: !14373, file: !12254, line: 1187, type: !111)
!14376 = !DILocation(line: 0, scope: !14373)
!14377 = !DILocation(line: 0, scope: !12739, inlinedAt: !14378)
!14378 = distinct !DILocation(line: 1190, column: 9, scope: !14373)
!14379 = !DILocation(line: 145, column: 13, scope: !14380, inlinedAt: !14378)
!14380 = distinct !DILexicalBlock(scope: !12757, file: !12254, line: 144, column: 10)
!14381 = !DILocation(line: 1190, column: 2, scope: !14373)
!14382 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2371, file: !2371, line: 1517, type: !14278, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14383)
!14383 = !{!14384}
!14384 = !DILocalVariable(name: "thread", arg: 1, scope: !14382, file: !2371, line: 1517, type: !14184)
!14385 = !DILocation(line: 0, scope: !14382)
!14386 = !DILocation(line: 1521, column: 6, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14382, file: !2371, line: 1521, column: 6)
!14388 = !DILocation(line: 1521, column: 6, scope: !14382)
!14389 = !DILocation(line: 1525, column: 6, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14382, file: !2371, line: 1525, column: 6)
!14391 = !DILocation(line: 1525, column: 37, scope: !14390)
!14392 = !DILocation(line: 1525, column: 6, scope: !14382)
!14393 = !DILocation(line: 1527, column: 20, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14395, file: !2371, line: 1527, column: 7)
!14395 = distinct !DILexicalBlock(scope: !14390, file: !2371, line: 1525, column: 42)
!14396 = !DILocation(line: 1527, column: 33, scope: !14394)
!14397 = !DILocation(line: 1527, column: 7, scope: !14395)
!14398 = !DILocation(line: 1532, column: 2, scope: !14382)
!14399 = !DILocation(line: 1533, column: 2, scope: !14382)
!14400 = !DILocation(line: 1031, column: 3, scope: !13347, inlinedAt: !14401)
!14401 = distinct !DILocation(line: 48, column: 10, scope: !13351, inlinedAt: !14402)
!14402 = distinct !DILocation(line: 1537, column: 7, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14382, file: !2371, line: 1537, column: 6)
!14404 = !DILocation(line: 0, scope: !13347, inlinedAt: !14401)
!14405 = !DILocation(line: 48, column: 9, scope: !13351, inlinedAt: !14402)
!14406 = !DILocation(line: 1537, column: 6, scope: !14382)
!14407 = !DILocation(line: 1538, column: 3, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14403, file: !2371, line: 1537, column: 25)
!14409 = !DILocation(line: 1539, column: 2, scope: !14408)
!14410 = !DILocation(line: 1540, column: 1, scope: !14382)
!14411 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11665, file: !11665, line: 101, type: !12810, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14412)
!14412 = !{!14413}
!14413 = !DILocalVariable(name: "thread", arg: 1, scope: !14411, file: !11665, line: 101, type: !2264)
!14414 = !DILocation(line: 0, scope: !14411)
!14415 = !DILocation(line: 103, column: 23, scope: !14411)
!14416 = !DILocation(line: 103, column: 36, scope: !14411)
!14417 = !DILocation(line: 103, column: 55, scope: !14411)
!14418 = !DILocation(line: 103, column: 2, scope: !14411)
!14419 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2371, file: !2371, line: 1567, type: !14420, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14422)
!14420 = !DISubroutineType(types: !14421)
!14421 = !{!14184}
!14422 = !{!14423}
!14423 = !DILocalVariable(name: "ret", scope: !14419, file: !2371, line: 1577, type: !14184)
!14424 = !DILocation(line: 1577, column: 30, scope: !14419)
!14425 = !DILocation(line: 0, scope: !14419)
!14426 = !DILocation(line: 1582, column: 2, scope: !14419)
!14427 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2371, file: !2371, line: 1593, type: !6201, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !251)
!14428 = !DILocation(line: 1031, column: 3, scope: !13347, inlinedAt: !14429)
!14429 = distinct !DILocation(line: 48, column: 10, scope: !13351, inlinedAt: !14430)
!14430 = distinct !DILocation(line: 1595, column: 10, scope: !14427)
!14431 = !DILocation(line: 0, scope: !13347, inlinedAt: !14429)
!14432 = !DILocation(line: 48, column: 9, scope: !13351, inlinedAt: !14430)
!14433 = !DILocation(line: 1595, column: 27, scope: !14427)
!14434 = !DILocation(line: 1595, column: 41, scope: !14427)
!14435 = !DILocation(line: 1595, column: 30, scope: !14427)
!14436 = !DILocation(line: 1595, column: 2, scope: !14427)
!14437 = distinct !DISubprogram(name: "k_thread_cpu_mask_clear", scope: !2371, file: !2371, line: 1641, type: !14182, scopeLine: 1642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14438)
!14438 = !{!14439}
!14439 = !DILocalVariable(name: "thread", arg: 1, scope: !14437, file: !2371, line: 1641, type: !14184)
!14440 = !DILocation(line: 0, scope: !14437)
!14441 = !DILocation(line: 1643, column: 9, scope: !14437)
!14442 = !DILocation(line: 1643, column: 2, scope: !14437)
!14443 = distinct !DISubprogram(name: "cpu_mask_mod", scope: !2371, file: !2371, line: 1613, type: !14444, scopeLine: 1614, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14446)
!14444 = !DISubroutineType(types: !14445)
!14445 = !{!109, !14184, !110, !110}
!14446 = !{!14447, !14448, !14449, !14450, !14451, !14453}
!14447 = !DILocalVariable(name: "thread", arg: 1, scope: !14443, file: !2371, line: 1613, type: !14184)
!14448 = !DILocalVariable(name: "enable_mask", arg: 2, scope: !14443, file: !2371, line: 1613, type: !110)
!14449 = !DILocalVariable(name: "disable_mask", arg: 3, scope: !14443, file: !2371, line: 1613, type: !110)
!14450 = !DILocalVariable(name: "ret", scope: !14443, file: !2371, line: 1615, type: !109)
!14451 = !DILocalVariable(name: "__i", scope: !14452, file: !2371, line: 1622, type: !12684)
!14452 = distinct !DILexicalBlock(scope: !14443, file: !2371, line: 1622, column: 2)
!14453 = !DILocalVariable(name: "__key", scope: !14452, file: !2371, line: 1622, type: !12684)
!14454 = !DILocation(line: 0, scope: !14443)
!14455 = !DILocation(line: 0, scope: !14452)
!14456 = !DILocation(line: 0, scope: !12692, inlinedAt: !14457)
!14457 = distinct !DILocation(line: 1622, column: 2, scope: !14452)
!14458 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !14459)
!14459 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !14457)
!14460 = !DILocation(line: 0, scope: !12701, inlinedAt: !14459)
!14461 = !DILocation(line: 1623, column: 7, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14463, file: !2371, line: 1623, column: 7)
!14463 = distinct !DILexicalBlock(scope: !14464, file: !2371, line: 1622, column: 26)
!14464 = distinct !DILexicalBlock(scope: !14452, file: !2371, line: 1622, column: 2)
!14465 = !DILocation(line: 1623, column: 7, scope: !14463)
!14466 = !DILocation(line: 1624, column: 26, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14462, file: !2371, line: 1623, column: 51)
!14468 = !DILocation(line: 1625, column: 27, scope: !14467)
!14469 = !DILocation(line: 1626, column: 3, scope: !14467)
!14470 = !DILocation(line: 0, scope: !12719, inlinedAt: !14471)
!14471 = distinct !DILocation(line: 1622, column: 2, scope: !14464)
!14472 = !DILocation(line: 0, scope: !12727, inlinedAt: !14473)
!14473 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !14471)
!14474 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !14473)
!14475 = !DILocation(line: 1638, column: 2, scope: !14443)
!14476 = distinct !DISubprogram(name: "k_thread_cpu_mask_enable_all", scope: !2371, file: !2371, line: 1646, type: !14182, scopeLine: 1647, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14477)
!14477 = !{!14478}
!14478 = !DILocalVariable(name: "thread", arg: 1, scope: !14476, file: !2371, line: 1646, type: !14184)
!14479 = !DILocation(line: 0, scope: !14476)
!14480 = !DILocation(line: 1648, column: 9, scope: !14476)
!14481 = !DILocation(line: 1648, column: 2, scope: !14476)
!14482 = distinct !DISubprogram(name: "k_thread_cpu_mask_enable", scope: !2371, file: !2371, line: 1651, type: !14483, scopeLine: 1652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14485)
!14483 = !DISubroutineType(types: !14484)
!14484 = !{!109, !14184, !109}
!14485 = !{!14486, !14487}
!14486 = !DILocalVariable(name: "thread", arg: 1, scope: !14482, file: !2371, line: 1651, type: !14184)
!14487 = !DILocalVariable(name: "cpu", arg: 2, scope: !14482, file: !2371, line: 1651, type: !109)
!14488 = !DILocation(line: 0, scope: !14482)
!14489 = !DILocation(line: 1653, column: 30, scope: !14482)
!14490 = !DILocation(line: 1653, column: 9, scope: !14482)
!14491 = !DILocation(line: 1653, column: 2, scope: !14482)
!14492 = distinct !DISubprogram(name: "k_thread_cpu_mask_disable", scope: !2371, file: !2371, line: 1656, type: !14483, scopeLine: 1657, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14493)
!14493 = !{!14494, !14495}
!14494 = !DILocalVariable(name: "thread", arg: 1, scope: !14492, file: !2371, line: 1656, type: !14184)
!14495 = !DILocalVariable(name: "cpu", arg: 2, scope: !14492, file: !2371, line: 1656, type: !109)
!14496 = !DILocation(line: 0, scope: !14492)
!14497 = !DILocation(line: 1658, column: 33, scope: !14492)
!14498 = !DILocation(line: 1658, column: 9, scope: !14492)
!14499 = !DILocation(line: 1658, column: 2, scope: !14492)
!14500 = distinct !DISubprogram(name: "k_thread_cpu_pin", scope: !2371, file: !2371, line: 1661, type: !14483, scopeLine: 1662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14501)
!14501 = !{!14502, !14503, !14504}
!14502 = !DILocalVariable(name: "thread", arg: 1, scope: !14500, file: !2371, line: 1661, type: !14184)
!14503 = !DILocalVariable(name: "cpu", arg: 2, scope: !14500, file: !2371, line: 1661, type: !109)
!14504 = !DILocalVariable(name: "ret", scope: !14500, file: !2371, line: 1663, type: !109)
!14505 = !DILocation(line: 0, scope: !14500)
!14506 = !DILocation(line: 1665, column: 8, scope: !14500)
!14507 = !DILocation(line: 1666, column: 10, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14500, file: !2371, line: 1666, column: 6)
!14509 = !DILocation(line: 1666, column: 6, scope: !14500)
!14510 = !DILocation(line: 1667, column: 10, scope: !14511)
!14511 = distinct !DILexicalBlock(scope: !14508, file: !2371, line: 1666, column: 16)
!14512 = !DILocation(line: 1667, column: 3, scope: !14511)
!14513 = !DILocation(line: 1670, column: 1, scope: !14500)
!14514 = distinct !DISubprogram(name: "z_thread_abort", scope: !2371, file: !2371, line: 1725, type: !12650, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14515)
!14515 = !{!14516, !14517}
!14516 = !DILocalVariable(name: "thread", arg: 1, scope: !14514, file: !2371, line: 1725, type: !2264)
!14517 = !DILocalVariable(name: "key", scope: !14514, file: !2371, line: 1727, type: !12684)
!14518 = !DILocation(line: 0, scope: !14514)
!14519 = !DILocation(line: 0, scope: !12692, inlinedAt: !14520)
!14520 = distinct !DILocation(line: 1727, column: 25, scope: !14514)
!14521 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !14522)
!14522 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !14520)
!14523 = !DILocation(line: 0, scope: !12701, inlinedAt: !14522)
!14524 = !DILocation(line: 1729, column: 20, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14514, file: !2371, line: 1729, column: 6)
!14526 = !DILocation(line: 1729, column: 33, scope: !14525)
!14527 = !DILocation(line: 1729, column: 48, scope: !14525)
!14528 = !DILocation(line: 1729, column: 6, scope: !14514)
!14529 = !DILocation(line: 0, scope: !12719, inlinedAt: !14530)
!14530 = distinct !DILocation(line: 1730, column: 3, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14525, file: !2371, line: 1729, column: 54)
!14532 = !DILocation(line: 0, scope: !12727, inlinedAt: !14533)
!14533 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !14530)
!14534 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !14533)
!14535 = !DILocation(line: 1732, column: 3, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14531, file: !2371, line: 1732, column: 3)
!14537 = !{i64 2155842771, i64 2155842787, i64 2155842813, i64 2155842841, i64 2155842861}
!14538 = !DILocation(line: 1733, column: 3, scope: !14531)
!14539 = !DILocation(line: 1736, column: 20, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14514, file: !2371, line: 1736, column: 6)
!14541 = !DILocation(line: 1736, column: 33, scope: !14540)
!14542 = !DILocation(line: 1736, column: 49, scope: !14540)
!14543 = !DILocation(line: 1736, column: 6, scope: !14514)
!14544 = !DILocation(line: 0, scope: !12719, inlinedAt: !14545)
!14545 = distinct !DILocation(line: 1737, column: 3, scope: !14546)
!14546 = distinct !DILexicalBlock(scope: !14540, file: !2371, line: 1736, column: 56)
!14547 = !DILocation(line: 0, scope: !12727, inlinedAt: !14548)
!14548 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !14545)
!14549 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !14548)
!14550 = !DILocation(line: 1738, column: 3, scope: !14546)
!14551 = !DILocation(line: 1775, column: 2, scope: !14514)
!14552 = !DILocation(line: 1776, column: 16, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14514, file: !2371, line: 1776, column: 6)
!14554 = !DILocation(line: 1776, column: 13, scope: !14553)
!14555 = !DILocation(line: 1776, column: 25, scope: !14553)
!14556 = !DILocation(line: 1031, column: 3, scope: !13347, inlinedAt: !14557)
!14557 = distinct !DILocation(line: 48, column: 10, scope: !13351, inlinedAt: !14558)
!14558 = distinct !DILocation(line: 1776, column: 29, scope: !14553)
!14559 = !DILocation(line: 0, scope: !13347, inlinedAt: !14557)
!14560 = !DILocation(line: 48, column: 9, scope: !13351, inlinedAt: !14558)
!14561 = !DILocation(line: 1776, column: 6, scope: !14514)
!14562 = !DILocation(line: 0, scope: !13314, inlinedAt: !14563)
!14563 = distinct !DILocation(line: 1777, column: 3, scope: !14564)
!14564 = distinct !DILexicalBlock(scope: !14553, file: !2371, line: 1776, column: 47)
!14565 = !DILocation(line: 196, column: 9, scope: !13314, inlinedAt: !14563)
!14566 = !DILocation(line: 1779, column: 2, scope: !14564)
!14567 = !DILocation(line: 0, scope: !12719, inlinedAt: !14568)
!14568 = distinct !DILocation(line: 1780, column: 2, scope: !14514)
!14569 = !DILocation(line: 0, scope: !12727, inlinedAt: !14570)
!14570 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !14568)
!14571 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !14570)
!14572 = !DILocation(line: 1781, column: 1, scope: !14514)
!14573 = distinct !DISubprogram(name: "end_thread", scope: !2371, file: !2371, line: 1690, type: !12650, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14574)
!14574 = !{!14575}
!14575 = !DILocalVariable(name: "thread", arg: 1, scope: !14573, file: !2371, line: 1690, type: !2264)
!14576 = !DILocation(line: 0, scope: !14573)
!14577 = !DILocation(line: 1695, column: 20, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14573, file: !2371, line: 1695, column: 6)
!14579 = !DILocation(line: 1695, column: 33, scope: !14578)
!14580 = !DILocation(line: 1695, column: 49, scope: !14578)
!14581 = !DILocation(line: 1695, column: 6, scope: !14573)
!14582 = !DILocation(line: 1697, column: 29, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14578, file: !2371, line: 1695, column: 56)
!14584 = !DILocation(line: 1698, column: 7, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14583, file: !2371, line: 1698, column: 7)
!14586 = !DILocation(line: 1698, column: 7, scope: !14583)
!14587 = !DILocation(line: 0, scope: !12861, inlinedAt: !14588)
!14588 = distinct !DILocation(line: 1699, column: 4, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14585, file: !2371, line: 1698, column: 35)
!14590 = !DILocation(line: 266, column: 28, scope: !12861, inlinedAt: !14588)
!14591 = !DILocation(line: 0, scope: !12869, inlinedAt: !14592)
!14592 = distinct !DILocation(line: 268, column: 3, scope: !12873, inlinedAt: !14588)
!14593 = !DILocation(line: 234, column: 2, scope: !12869, inlinedAt: !14592)
!14594 = !DILocation(line: 1700, column: 3, scope: !14589)
!14595 = !DILocation(line: 1701, column: 20, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14583, file: !2371, line: 1701, column: 7)
!14597 = !DILocation(line: 1701, column: 30, scope: !14596)
!14598 = !DILocation(line: 1701, column: 7, scope: !14583)
!14599 = !DILocation(line: 1702, column: 4, scope: !14600)
!14600 = distinct !DILexicalBlock(scope: !14596, file: !2371, line: 1701, column: 39)
!14601 = !DILocation(line: 1703, column: 3, scope: !14600)
!14602 = !DILocation(line: 1704, column: 9, scope: !14583)
!14603 = !DILocation(line: 1705, column: 23, scope: !14583)
!14604 = !DILocation(line: 1705, column: 3, scope: !14583)
!14605 = !DILocation(line: 1706, column: 3, scope: !14583)
!14606 = !DILocation(line: 1722, column: 2, scope: !14583)
!14607 = !DILocation(line: 1723, column: 1, scope: !14573)
!14608 = distinct !DISubprogram(name: "unpend_all", scope: !2371, file: !2371, line: 1674, type: !14609, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14611)
!14609 = !DISubroutineType(types: !14610)
!14610 = !{null, !2295}
!14611 = !{!14612, !14613}
!14612 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14608, file: !2371, line: 1674, type: !2295)
!14613 = !DILocalVariable(name: "thread", scope: !14608, file: !2371, line: 1676, type: !2264)
!14614 = !DILocation(line: 0, scope: !14608)
!14615 = !DILocation(line: 1678, column: 19, scope: !14608)
!14616 = !DILocation(line: 1678, column: 41, scope: !14608)
!14617 = !DILocation(line: 1678, column: 2, scope: !14608)
!14618 = !DILocation(line: 1679, column: 3, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14608, file: !2371, line: 1678, column: 50)
!14620 = !DILocation(line: 1680, column: 9, scope: !14619)
!14621 = !DILocalVariable(name: "thread", arg: 1, scope: !14622, file: !11685, line: 65, type: !2264)
!14622 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11685, file: !11685, line: 65, type: !14623, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14625)
!14623 = !DISubroutineType(types: !14624)
!14624 = !{null, !2264, !32}
!14625 = !{!14621, !14626}
!14626 = !DILocalVariable(name: "value", arg: 2, scope: !14622, file: !11685, line: 65, type: !32)
!14627 = !DILocation(line: 0, scope: !14622, inlinedAt: !14628)
!14628 = distinct !DILocation(line: 1681, column: 3, scope: !14619)
!14629 = !DILocation(line: 67, column: 15, scope: !14622, inlinedAt: !14628)
!14630 = !DILocation(line: 67, column: 33, scope: !14622, inlinedAt: !14628)
!14631 = !DILocation(line: 1682, column: 3, scope: !14619)
!14632 = distinct !{!14632, !14617, !14633}
!14633 = !DILocation(line: 1683, column: 2, scope: !14608)
!14634 = !DILocation(line: 1684, column: 1, scope: !14608)
!14635 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2371, file: !2371, line: 1794, type: !14636, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14638)
!14636 = !DISubroutineType(types: !14637)
!14637 = !{!109, !2264, !13494}
!14638 = !{!14639, !14640, !14641, !14642}
!14639 = !DILocalVariable(name: "thread", arg: 1, scope: !14635, file: !2371, line: 1794, type: !2264)
!14640 = !DILocalVariable(name: "timeout", arg: 2, scope: !14635, file: !2371, line: 1794, type: !13494)
!14641 = !DILocalVariable(name: "key", scope: !14635, file: !2371, line: 1796, type: !12684)
!14642 = !DILocalVariable(name: "ret", scope: !14635, file: !2371, line: 1797, type: !109)
!14643 = !DILocation(line: 0, scope: !14635)
!14644 = !DILocation(line: 0, scope: !12692, inlinedAt: !14645)
!14645 = distinct !DILocation(line: 1796, column: 25, scope: !14635)
!14646 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !14647)
!14647 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !14645)
!14648 = !DILocation(line: 0, scope: !12701, inlinedAt: !14647)
!14649 = !DILocation(line: 1801, column: 20, scope: !14650)
!14650 = distinct !DILexicalBlock(scope: !14635, file: !2371, line: 1801, column: 6)
!14651 = !DILocation(line: 1801, column: 33, scope: !14650)
!14652 = !DILocation(line: 1801, column: 49, scope: !14650)
!14653 = !DILocation(line: 1801, column: 6, scope: !14635)
!14654 = !DILocation(line: 1803, column: 13, scope: !14655)
!14655 = distinct !DILexicalBlock(scope: !14650, file: !2371, line: 1803, column: 13)
!14656 = !DILocation(line: 1803, column: 13, scope: !14650)
!14657 = !DILocation(line: 1805, column: 24, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14655, file: !2371, line: 1805, column: 13)
!14659 = !DILocation(line: 1805, column: 21, scope: !14658)
!14660 = !DILocation(line: 1805, column: 34, scope: !14658)
!14661 = !DILocation(line: 1806, column: 20, scope: !14658)
!14662 = !DILocation(line: 1806, column: 44, scope: !14658)
!14663 = !DILocation(line: 1806, column: 30, scope: !14658)
!14664 = !DILocation(line: 1805, column: 13, scope: !14655)
!14665 = !DILocation(line: 1810, column: 42, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14658, file: !2371, line: 1808, column: 9)
!14667 = !DILocation(line: 1810, column: 3, scope: !14666)
!14668 = !DILocation(line: 1811, column: 22, scope: !14666)
!14669 = !DILocation(line: 1811, column: 3, scope: !14666)
!14670 = !DILocation(line: 0, scope: !13314, inlinedAt: !14671)
!14671 = distinct !DILocation(line: 1814, column: 9, scope: !14666)
!14672 = !DILocation(line: 196, column: 9, scope: !13314, inlinedAt: !14671)
!14673 = !DILocation(line: 1817, column: 3, scope: !14666)
!14674 = !DILocation(line: 0, scope: !14650)
!14675 = !DILocation(line: 0, scope: !12719, inlinedAt: !14676)
!14676 = distinct !DILocation(line: 1822, column: 2, scope: !14635)
!14677 = !DILocation(line: 0, scope: !12727, inlinedAt: !14678)
!14678 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !14676)
!14679 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !14678)
!14680 = !DILocation(line: 1823, column: 2, scope: !14635)
!14681 = !DILocation(line: 1824, column: 1, scope: !14635)
!14682 = distinct !DISubprogram(name: "z_sched_wake", scope: !2371, file: !2371, line: 1882, type: !14683, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14685)
!14683 = !DISubroutineType(types: !14684)
!14684 = !{!315, !2295, !109, !106}
!14685 = !{!14686, !14687, !14688, !14689, !14690, !14691, !14693}
!14686 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14682, file: !2371, line: 1882, type: !2295)
!14687 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14682, file: !2371, line: 1882, type: !109)
!14688 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14682, file: !2371, line: 1882, type: !106)
!14689 = !DILocalVariable(name: "thread", scope: !14682, file: !2371, line: 1884, type: !2264)
!14690 = !DILocalVariable(name: "ret", scope: !14682, file: !2371, line: 1885, type: !315)
!14691 = !DILocalVariable(name: "__i", scope: !14692, file: !2371, line: 1887, type: !12684)
!14692 = distinct !DILexicalBlock(scope: !14682, file: !2371, line: 1887, column: 2)
!14693 = !DILocalVariable(name: "__key", scope: !14692, file: !2371, line: 1887, type: !12684)
!14694 = !DILocation(line: 0, scope: !14682)
!14695 = !DILocation(line: 0, scope: !14692)
!14696 = !DILocation(line: 0, scope: !12692, inlinedAt: !14697)
!14697 = distinct !DILocation(line: 1887, column: 2, scope: !14692)
!14698 = !DILocation(line: 55, column: 2, scope: !12701, inlinedAt: !14699)
!14699 = distinct !DILocation(line: 145, column: 10, scope: !12692, inlinedAt: !14697)
!14700 = !DILocation(line: 0, scope: !12701, inlinedAt: !14699)
!14701 = !DILocation(line: 1888, column: 12, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14703, file: !2371, line: 1887, column: 26)
!14703 = distinct !DILexicalBlock(scope: !14692, file: !2371, line: 1887, column: 2)
!14704 = !DILocation(line: 1890, column: 14, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14702, file: !2371, line: 1890, column: 7)
!14706 = !DILocation(line: 1890, column: 7, scope: !14702)
!14707 = !DILocalVariable(name: "thread", arg: 1, scope: !14708, file: !14709, line: 134, type: !2264)
!14708 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14709, file: !14709, line: 134, type: !14710, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14712)
!14709 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14710 = !DISubroutineType(types: !14711)
!14711 = !{null, !2264, !32, !106}
!14712 = !{!14707, !14713, !14714}
!14713 = !DILocalVariable(name: "value", arg: 2, scope: !14708, file: !14709, line: 135, type: !32)
!14714 = !DILocalVariable(name: "data", arg: 3, scope: !14708, file: !14709, line: 136, type: !106)
!14715 = !DILocation(line: 0, scope: !14708, inlinedAt: !14716)
!14716 = distinct !DILocation(line: 1891, column: 4, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14705, file: !2371, line: 1890, column: 23)
!14718 = !DILocation(line: 0, scope: !14622, inlinedAt: !14719)
!14719 = distinct !DILocation(line: 138, column: 2, scope: !14708, inlinedAt: !14716)
!14720 = !DILocation(line: 67, column: 15, scope: !14622, inlinedAt: !14719)
!14721 = !DILocation(line: 67, column: 33, scope: !14622, inlinedAt: !14719)
!14722 = !DILocation(line: 139, column: 15, scope: !14708, inlinedAt: !14716)
!14723 = !DILocation(line: 139, column: 25, scope: !14708, inlinedAt: !14716)
!14724 = !DILocation(line: 1894, column: 4, scope: !14717)
!14725 = !DILocation(line: 1895, column: 10, scope: !14717)
!14726 = !DILocation(line: 1896, column: 4, scope: !14717)
!14727 = !DILocation(line: 1898, column: 3, scope: !14717)
!14728 = !DILocation(line: 0, scope: !12719, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 1887, column: 2, scope: !14703)
!14730 = !DILocation(line: 0, scope: !12727, inlinedAt: !14731)
!14731 = distinct !DILocation(line: 215, column: 2, scope: !12719, inlinedAt: !14729)
!14732 = !DILocation(line: 95, column: 2, scope: !12727, inlinedAt: !14731)
!14733 = !DILocation(line: 1901, column: 2, scope: !14682)
!14734 = distinct !DISubprogram(name: "z_sched_wait", scope: !2371, file: !2371, line: 1904, type: !14735, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2261, retainedNodes: !14738)
!14735 = !DISubroutineType(types: !14736)
!14736 = !{!109, !12695, !12684, !2295, !13494, !14737}
!14737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!14738 = !{!14739, !14740, !14741, !14742, !14743, !14744}
!14739 = !DILocalVariable(name: "lock", arg: 1, scope: !14734, file: !2371, line: 1904, type: !12695)
!14740 = !DILocalVariable(name: "key", arg: 2, scope: !14734, file: !2371, line: 1904, type: !12684)
!14741 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14734, file: !2371, line: 1905, type: !2295)
!14742 = !DILocalVariable(name: "timeout", arg: 4, scope: !14734, file: !2371, line: 1905, type: !13494)
!14743 = !DILocalVariable(name: "data", arg: 5, scope: !14734, file: !2371, line: 1905, type: !14737)
!14744 = !DILocalVariable(name: "ret", scope: !14734, file: !2371, line: 1907, type: !109)
!14745 = !DILocation(line: 0, scope: !14734)
!14746 = !DILocation(line: 1907, column: 12, scope: !14734)
!14747 = !DILocation(line: 1909, column: 11, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14734, file: !2371, line: 1909, column: 6)
!14749 = !DILocation(line: 1909, column: 6, scope: !14734)
!14750 = !DILocation(line: 1910, column: 11, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14748, file: !2371, line: 1909, column: 20)
!14752 = !DILocation(line: 1910, column: 26, scope: !14751)
!14753 = !DILocation(line: 1910, column: 9, scope: !14751)
!14754 = !DILocation(line: 1911, column: 2, scope: !14751)
!14755 = !DILocation(line: 1912, column: 2, scope: !14734)
!14756 = distinct !DISubprogram(name: "z_data_copy", scope: !14757, file: !14757, line: 22, type: !2980, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !251)
!14757 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14758 = !DILocation(line: 24, column: 2, scope: !14756)
!14759 = !DILocation(line: 27, column: 2, scope: !14756)
!14760 = !DILocation(line: 71, column: 1, scope: !14756)
!14761 = distinct !DISubprogram(name: "z_add_timeout", scope: !2408, file: !2408, line: 88, type: !14762, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14768)
!14762 = !DISubroutineType(types: !14763)
!14763 = !{null, !2381, !2400, !14764}
!14764 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !14765)
!14765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !14766)
!14766 = !{!14767}
!14767 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14765, file: !103, line: 66, baseType: !102, size: 64)
!14768 = !{!14769, !14770, !14771, !14772, !14778, !14779, !14782, !14785}
!14769 = !DILocalVariable(name: "to", arg: 1, scope: !14761, file: !2408, line: 88, type: !2381)
!14770 = !DILocalVariable(name: "fn", arg: 2, scope: !14761, file: !2408, line: 88, type: !2400)
!14771 = !DILocalVariable(name: "timeout", arg: 3, scope: !14761, file: !2408, line: 89, type: !14764)
!14772 = !DILocalVariable(name: "__i", scope: !14773, file: !2408, line: 102, type: !14774)
!14773 = distinct !DILexicalBlock(scope: !14761, file: !2408, line: 102, column: 2)
!14774 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !14775)
!14775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !14776)
!14776 = !{!14777}
!14777 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14775, file: !250, line: 33, baseType: !109, size: 32)
!14778 = !DILocalVariable(name: "__key", scope: !14773, file: !2408, line: 102, type: !14774)
!14779 = !DILocalVariable(name: "t", scope: !14780, file: !2408, line: 103, type: !2381)
!14780 = distinct !DILexicalBlock(scope: !14781, file: !2408, line: 102, column: 24)
!14781 = distinct !DILexicalBlock(scope: !14773, file: !2408, line: 102, column: 2)
!14782 = !DILocalVariable(name: "ticks", scope: !14783, file: !2408, line: 107, type: !102)
!14783 = distinct !DILexicalBlock(scope: !14784, file: !2408, line: 106, column: 39)
!14784 = distinct !DILexicalBlock(scope: !14780, file: !2408, line: 105, column: 7)
!14785 = !DILocalVariable(name: "next_time", scope: !14786, file: !2408, line: 137, type: !734)
!14786 = distinct !DILexicalBlock(scope: !14787, file: !2408, line: 127, column: 22)
!14787 = distinct !DILexicalBlock(scope: !14780, file: !2408, line: 127, column: 7)
!14788 = !DILocation(line: 0, scope: !14761)
!14789 = !DILocation(line: 91, column: 6, scope: !14790)
!14790 = distinct !DILexicalBlock(scope: !14761, file: !2408, line: 91, column: 6)
!14791 = !DILocation(line: 91, column: 6, scope: !14761)
!14792 = !DILocation(line: 100, column: 6, scope: !14761)
!14793 = !DILocation(line: 100, column: 9, scope: !14761)
!14794 = !DILocation(line: 0, scope: !14773)
!14795 = !DILocalVariable(name: "l", arg: 1, scope: !14796, file: !250, line: 136, type: !14799)
!14796 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !14797, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14800)
!14797 = !DISubroutineType(types: !14798)
!14798 = !{!14774, !14799}
!14799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!14800 = !{!14795, !14801}
!14801 = !DILocalVariable(name: "k", scope: !14796, file: !250, line: 139, type: !14774)
!14802 = !DILocation(line: 0, scope: !14796, inlinedAt: !14803)
!14803 = distinct !DILocation(line: 102, column: 2, scope: !14773)
!14804 = !DILocation(line: 55, column: 2, scope: !14805, inlinedAt: !14809)
!14805 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4955, file: !4955, line: 42, type: !4956, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14806)
!14806 = !{!14807, !14808}
!14807 = !DILocalVariable(name: "key", scope: !14805, file: !4955, line: 44, type: !32)
!14808 = !DILocalVariable(name: "tmp", scope: !14805, file: !4955, line: 53, type: !32)
!14809 = distinct !DILocation(line: 145, column: 10, scope: !14796, inlinedAt: !14803)
!14810 = !{i64 2283798}
!14811 = !DILocation(line: 0, scope: !14805, inlinedAt: !14809)
!14812 = !DILocation(line: 106, column: 33, scope: !14784)
!14813 = !DILocation(line: 105, column: 7, scope: !14780)
!14814 = !DILocation(line: 107, column: 50, scope: !14783)
!14815 = !DILocation(line: 107, column: 48, scope: !14783)
!14816 = !DILocation(line: 0, scope: !14783)
!14817 = !DILocation(line: 109, column: 17, scope: !14783)
!14818 = !DILocation(line: 110, column: 3, scope: !14783)
!14819 = !DILocation(line: 111, column: 31, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14784, file: !2408, line: 110, column: 10)
!14821 = !DILocation(line: 111, column: 37, scope: !14820)
!14822 = !DILocation(line: 111, column: 35, scope: !14820)
!14823 = !DILocation(line: 0, scope: !14784)
!14824 = !DILocation(line: 109, column: 8, scope: !14783)
!14825 = !DILocation(line: 109, column: 15, scope: !14783)
!14826 = !DILocation(line: 114, column: 12, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14780, file: !2408, line: 114, column: 3)
!14828 = !DILocation(line: 0, scope: !14780)
!14829 = !DILocation(line: 114, column: 3, scope: !14827)
!14830 = !DILocation(line: 115, column: 24, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14832, file: !2408, line: 115, column: 8)
!14832 = distinct !DILexicalBlock(scope: !14833, file: !2408, line: 114, column: 45)
!14833 = distinct !DILexicalBlock(scope: !14827, file: !2408, line: 114, column: 3)
!14834 = !DILocation(line: 115, column: 11, scope: !14831)
!14835 = !DILocation(line: 115, column: 18, scope: !14831)
!14836 = !DILocation(line: 115, column: 8, scope: !14832)
!14837 = !DILocation(line: 116, column: 15, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14831, file: !2408, line: 115, column: 32)
!14839 = !DILocation(line: 117, column: 26, scope: !14838)
!14840 = !DILocation(line: 117, column: 37, scope: !14838)
!14841 = !DILocation(line: 117, column: 5, scope: !14838)
!14842 = !DILocation(line: 123, column: 7, scope: !14780)
!14843 = !DILocation(line: 120, column: 15, scope: !14832)
!14844 = !DILocation(line: 114, column: 36, scope: !14833)
!14845 = distinct !{!14845, !14829, !14846}
!14846 = !DILocation(line: 121, column: 3, scope: !14827)
!14847 = !DILocation(line: 124, column: 41, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14849, file: !2408, line: 123, column: 18)
!14849 = distinct !DILexicalBlock(scope: !14780, file: !2408, line: 123, column: 7)
!14850 = !DILocation(line: 124, column: 4, scope: !14848)
!14851 = !DILocation(line: 125, column: 3, scope: !14848)
!14852 = !DILocation(line: 127, column: 13, scope: !14787)
!14853 = !DILocation(line: 127, column: 10, scope: !14787)
!14854 = !DILocation(line: 127, column: 7, scope: !14780)
!14855 = !DILocation(line: 137, column: 24, scope: !14786)
!14856 = !DILocation(line: 0, scope: !14786)
!14857 = !DILocation(line: 139, column: 18, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14786, file: !2408, line: 139, column: 8)
!14859 = !DILocation(line: 139, column: 23, scope: !14858)
!14860 = !DILocation(line: 141, column: 5, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14858, file: !2408, line: 140, column: 48)
!14862 = !DILocation(line: 142, column: 4, scope: !14861)
!14863 = !DILocalVariable(name: "key", arg: 2, scope: !14864, file: !250, line: 190, type: !14774)
!14864 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !14865, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14867)
!14865 = !DISubroutineType(types: !14866)
!14866 = !{null, !14799, !14774}
!14867 = !{!14868, !14863}
!14868 = !DILocalVariable(name: "l", arg: 1, scope: !14864, file: !250, line: 189, type: !14799)
!14869 = !DILocation(line: 0, scope: !14864, inlinedAt: !14870)
!14870 = distinct !DILocation(line: 102, column: 2, scope: !14781)
!14871 = !DILocalVariable(name: "key", arg: 1, scope: !14872, file: !4955, line: 84, type: !32)
!14872 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4955, file: !4955, line: 84, type: !4966, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14873)
!14873 = !{!14871}
!14874 = !DILocation(line: 0, scope: !14872, inlinedAt: !14875)
!14875 = distinct !DILocation(line: 215, column: 2, scope: !14864, inlinedAt: !14870)
!14876 = !DILocation(line: 95, column: 2, scope: !14872, inlinedAt: !14875)
!14877 = !{i64 2284615}
!14878 = !DILocation(line: 148, column: 1, scope: !14761)
!14879 = distinct !DISubprogram(name: "elapsed", scope: !2408, file: !2408, line: 62, type: !14880, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !251)
!14880 = !DISubroutineType(types: !14881)
!14881 = !{!734}
!14882 = !DILocation(line: 64, column: 9, scope: !14879)
!14883 = !DILocation(line: 64, column: 28, scope: !14879)
!14884 = !DILocation(line: 64, column: 35, scope: !14879)
!14885 = !DILocation(line: 64, column: 2, scope: !14879)
!14886 = distinct !DISubprogram(name: "first", scope: !2408, file: !2408, line: 39, type: !14887, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14889)
!14887 = !DISubroutineType(types: !14888)
!14888 = !{!2381}
!14889 = !{!14890}
!14890 = !DILocalVariable(name: "t", scope: !14886, file: !2408, line: 41, type: !14891)
!14891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!14892 = !DILocation(line: 41, column: 19, scope: !14886)
!14893 = !DILocation(line: 0, scope: !14886)
!14894 = !DILocation(line: 43, column: 9, scope: !14886)
!14895 = !DILocation(line: 43, column: 2, scope: !14886)
!14896 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14897, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14899)
!14897 = !DISubroutineType(types: !14898)
!14898 = !{null, !14891, !14891}
!14899 = !{!14900, !14901, !14902}
!14900 = !DILocalVariable(name: "successor", arg: 1, scope: !14896, file: !127, line: 443, type: !14891)
!14901 = !DILocalVariable(name: "node", arg: 2, scope: !14896, file: !127, line: 443, type: !14891)
!14902 = !DILocalVariable(name: "prev", scope: !14896, file: !127, line: 445, type: !14903)
!14903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14891)
!14904 = !DILocation(line: 0, scope: !14896)
!14905 = !DILocation(line: 445, column: 39, scope: !14896)
!14906 = !DILocation(line: 447, column: 8, scope: !14896)
!14907 = !DILocation(line: 447, column: 13, scope: !14896)
!14908 = !DILocation(line: 448, column: 8, scope: !14896)
!14909 = !DILocation(line: 448, column: 13, scope: !14896)
!14910 = !DILocation(line: 449, column: 8, scope: !14896)
!14911 = !DILocation(line: 449, column: 13, scope: !14896)
!14912 = !DILocation(line: 450, column: 18, scope: !14896)
!14913 = !DILocation(line: 451, column: 1, scope: !14896)
!14914 = distinct !DISubprogram(name: "next", scope: !2408, file: !2408, line: 46, type: !14915, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14917)
!14915 = !DISubroutineType(types: !14916)
!14916 = !{!2381, !2381}
!14917 = !{!14918, !14919}
!14918 = !DILocalVariable(name: "t", arg: 1, scope: !14914, file: !2408, line: 46, type: !2381)
!14919 = !DILocalVariable(name: "n", scope: !14914, file: !2408, line: 48, type: !14891)
!14920 = !DILocation(line: 0, scope: !14914)
!14921 = !DILocation(line: 48, column: 58, scope: !14914)
!14922 = !DILocation(line: 48, column: 19, scope: !14914)
!14923 = !DILocation(line: 50, column: 9, scope: !14914)
!14924 = !DILocation(line: 50, column: 2, scope: !14914)
!14925 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !14926, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14929)
!14926 = !DISubroutineType(types: !14927)
!14927 = !{null, !14928, !14891}
!14928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 32)
!14929 = !{!14930, !14931, !14932}
!14930 = !DILocalVariable(name: "list", arg: 1, scope: !14925, file: !127, line: 404, type: !14928)
!14931 = !DILocalVariable(name: "node", arg: 2, scope: !14925, file: !127, line: 404, type: !14891)
!14932 = !DILocalVariable(name: "tail", scope: !14925, file: !127, line: 406, type: !14903)
!14933 = !DILocation(line: 0, scope: !14925)
!14934 = !DILocation(line: 406, column: 34, scope: !14925)
!14935 = !DILocation(line: 408, column: 8, scope: !14925)
!14936 = !DILocation(line: 408, column: 13, scope: !14925)
!14937 = !DILocation(line: 409, column: 8, scope: !14925)
!14938 = !DILocation(line: 409, column: 13, scope: !14925)
!14939 = !DILocation(line: 411, column: 8, scope: !14925)
!14940 = !DILocation(line: 411, column: 13, scope: !14925)
!14941 = !DILocation(line: 412, column: 13, scope: !14925)
!14942 = !DILocation(line: 413, column: 1, scope: !14925)
!14943 = distinct !DISubprogram(name: "next_timeout", scope: !2408, file: !2408, line: 67, type: !14880, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14944)
!14944 = !{!14945, !14946, !14947}
!14945 = !DILocalVariable(name: "to", scope: !14943, file: !2408, line: 69, type: !2381)
!14946 = !DILocalVariable(name: "ticks_elapsed", scope: !14943, file: !2408, line: 70, type: !734)
!14947 = !DILocalVariable(name: "ret", scope: !14943, file: !2408, line: 71, type: !734)
!14948 = !DILocation(line: 69, column: 24, scope: !14943)
!14949 = !DILocation(line: 0, scope: !14943)
!14950 = !DILocation(line: 70, column: 26, scope: !14943)
!14951 = !DILocation(line: 73, column: 10, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14943, file: !2408, line: 73, column: 6)
!14953 = !DILocation(line: 73, column: 19, scope: !14952)
!14954 = !DILocation(line: 74, column: 21, scope: !14952)
!14955 = !DILocation(line: 74, column: 30, scope: !14952)
!14956 = !DILocation(line: 74, column: 28, scope: !14952)
!14957 = !DILocation(line: 74, column: 45, scope: !14952)
!14958 = !DILocation(line: 73, column: 6, scope: !14943)
!14959 = !DILocation(line: 77, column: 9, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14952, file: !2408, line: 76, column: 9)
!14961 = !DILocation(line: 0, scope: !14952)
!14962 = !DILocation(line: 81, column: 20, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14943, file: !2408, line: 81, column: 6)
!14964 = !DILocation(line: 81, column: 6, scope: !14963)
!14965 = !DILocation(line: 81, column: 32, scope: !14963)
!14966 = !DILocation(line: 85, column: 2, scope: !14943)
!14967 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !14968, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14970)
!14968 = !DISubroutineType(types: !14969)
!14969 = !{!14891, !14928, !14891}
!14970 = !{!14971, !14972}
!14971 = !DILocalVariable(name: "list", arg: 1, scope: !14967, file: !127, line: 341, type: !14928)
!14972 = !DILocalVariable(name: "node", arg: 2, scope: !14967, file: !127, line: 342, type: !14891)
!14973 = !DILocation(line: 0, scope: !14967)
!14974 = !DILocation(line: 344, column: 15, scope: !14967)
!14975 = !DILocation(line: 344, column: 9, scope: !14967)
!14976 = !DILocation(line: 344, column: 26, scope: !14967)
!14977 = !DILocation(line: 344, column: 2, scope: !14967)
!14978 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !14968, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14979)
!14979 = !{!14980, !14981}
!14980 = !DILocalVariable(name: "list", arg: 1, scope: !14978, file: !127, line: 325, type: !14928)
!14981 = !DILocalVariable(name: "node", arg: 2, scope: !14978, file: !127, line: 326, type: !14891)
!14982 = !DILocation(line: 0, scope: !14978)
!14983 = !DILocation(line: 328, column: 24, scope: !14978)
!14984 = !DILocation(line: 328, column: 15, scope: !14978)
!14985 = !DILocation(line: 328, column: 9, scope: !14978)
!14986 = !DILocation(line: 328, column: 45, scope: !14978)
!14987 = !DILocation(line: 328, column: 2, scope: !14978)
!14988 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14989, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14991)
!14989 = !DISubroutineType(types: !14990)
!14990 = !{!14891, !14928}
!14991 = !{!14992}
!14992 = !DILocalVariable(name: "list", arg: 1, scope: !14988, file: !127, line: 294, type: !14928)
!14993 = !DILocation(line: 0, scope: !14988)
!14994 = !DILocation(line: 296, column: 9, scope: !14988)
!14995 = !DILocation(line: 296, column: 2, scope: !14988)
!14996 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14997, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !14999)
!14997 = !DISubroutineType(types: !14998)
!14998 = !{!315, !14928}
!14999 = !{!15000}
!15000 = !DILocalVariable(name: "list", arg: 1, scope: !14996, file: !127, line: 266, type: !14928)
!15001 = !DILocation(line: 0, scope: !14996)
!15002 = !DILocation(line: 268, column: 15, scope: !14996)
!15003 = !DILocation(line: 268, column: 20, scope: !14996)
!15004 = !DILocation(line: 268, column: 2, scope: !14996)
!15005 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2408, file: !2408, line: 150, type: !15006, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15008)
!15006 = !DISubroutineType(types: !15007)
!15007 = !{!109, !2381}
!15008 = !{!15009, !15010, !15011, !15013}
!15009 = !DILocalVariable(name: "to", arg: 1, scope: !15005, file: !2408, line: 150, type: !2381)
!15010 = !DILocalVariable(name: "ret", scope: !15005, file: !2408, line: 152, type: !109)
!15011 = !DILocalVariable(name: "__i", scope: !15012, file: !2408, line: 154, type: !14774)
!15012 = distinct !DILexicalBlock(scope: !15005, file: !2408, line: 154, column: 2)
!15013 = !DILocalVariable(name: "__key", scope: !15012, file: !2408, line: 154, type: !14774)
!15014 = !DILocation(line: 0, scope: !15005)
!15015 = !DILocation(line: 0, scope: !15012)
!15016 = !DILocation(line: 0, scope: !14796, inlinedAt: !15017)
!15017 = distinct !DILocation(line: 154, column: 2, scope: !15012)
!15018 = !DILocation(line: 55, column: 2, scope: !14805, inlinedAt: !15019)
!15019 = distinct !DILocation(line: 145, column: 10, scope: !14796, inlinedAt: !15017)
!15020 = !DILocation(line: 0, scope: !14805, inlinedAt: !15019)
!15021 = !DILocation(line: 155, column: 7, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !15023, file: !2408, line: 155, column: 7)
!15023 = distinct !DILexicalBlock(scope: !15024, file: !2408, line: 154, column: 24)
!15024 = distinct !DILexicalBlock(scope: !15012, file: !2408, line: 154, column: 2)
!15025 = !DILocation(line: 155, column: 7, scope: !15023)
!15026 = !DILocation(line: 156, column: 4, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15022, file: !2408, line: 155, column: 39)
!15028 = !DILocation(line: 158, column: 3, scope: !15027)
!15029 = !DILocation(line: 0, scope: !14864, inlinedAt: !15030)
!15030 = distinct !DILocation(line: 154, column: 2, scope: !15024)
!15031 = !DILocation(line: 0, scope: !14872, inlinedAt: !15032)
!15032 = distinct !DILocation(line: 215, column: 2, scope: !14864, inlinedAt: !15030)
!15033 = !DILocation(line: 95, column: 2, scope: !14872, inlinedAt: !15032)
!15034 = !DILocation(line: 161, column: 2, scope: !15005)
!15035 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !15036, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15040)
!15036 = !DISubroutineType(types: !15037)
!15037 = !{!315, !15038}
!15038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15039, size: 32)
!15039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2385)
!15040 = !{!15041}
!15041 = !DILocalVariable(name: "node", arg: 1, scope: !15035, file: !127, line: 225, type: !15038)
!15042 = !DILocation(line: 0, scope: !15035)
!15043 = !DILocation(line: 227, column: 15, scope: !15035)
!15044 = !DILocation(line: 227, column: 20, scope: !15035)
!15045 = !DILocation(line: 227, column: 2, scope: !15035)
!15046 = distinct !DISubprogram(name: "remove_timeout", scope: !2408, file: !2408, line: 53, type: !2402, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15047)
!15047 = !{!15048}
!15048 = !DILocalVariable(name: "t", arg: 1, scope: !15046, file: !2408, line: 53, type: !2381)
!15049 = !DILocation(line: 0, scope: !15046)
!15050 = !DILocation(line: 55, column: 6, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15046, file: !2408, line: 55, column: 6)
!15052 = !DILocation(line: 55, column: 14, scope: !15051)
!15053 = !DILocation(line: 55, column: 6, scope: !15046)
!15054 = !DILocation(line: 56, column: 25, scope: !15055)
!15055 = distinct !DILexicalBlock(scope: !15051, file: !2408, line: 55, column: 23)
!15056 = !DILocation(line: 56, column: 12, scope: !15055)
!15057 = !DILocation(line: 56, column: 19, scope: !15055)
!15058 = !DILocation(line: 57, column: 2, scope: !15055)
!15059 = !DILocation(line: 59, column: 23, scope: !15046)
!15060 = !DILocation(line: 59, column: 2, scope: !15046)
!15061 = !DILocation(line: 60, column: 1, scope: !15046)
!15062 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !15063, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15065)
!15063 = !DISubroutineType(types: !15064)
!15064 = !{null, !14891}
!15065 = !{!15066, !15067, !15068}
!15066 = !DILocalVariable(name: "node", arg: 1, scope: !15062, file: !127, line: 496, type: !14891)
!15067 = !DILocalVariable(name: "prev", scope: !15062, file: !127, line: 498, type: !14903)
!15068 = !DILocalVariable(name: "next", scope: !15062, file: !127, line: 499, type: !14903)
!15069 = !DILocation(line: 0, scope: !15062)
!15070 = !DILocation(line: 498, column: 34, scope: !15062)
!15071 = !DILocation(line: 499, column: 34, scope: !15062)
!15072 = !DILocation(line: 501, column: 8, scope: !15062)
!15073 = !DILocation(line: 501, column: 13, scope: !15062)
!15074 = !DILocation(line: 502, column: 8, scope: !15062)
!15075 = !DILocation(line: 502, column: 13, scope: !15062)
!15076 = !DILocation(line: 503, column: 2, scope: !15062)
!15077 = !DILocation(line: 504, column: 1, scope: !15062)
!15078 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !15063, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15079)
!15079 = !{!15080}
!15080 = !DILocalVariable(name: "node", arg: 1, scope: !15078, file: !127, line: 211, type: !14891)
!15081 = !DILocation(line: 0, scope: !15078)
!15082 = !DILocation(line: 213, column: 8, scope: !15078)
!15083 = !DILocation(line: 213, column: 13, scope: !15078)
!15084 = !DILocation(line: 214, column: 8, scope: !15078)
!15085 = !DILocation(line: 214, column: 13, scope: !15078)
!15086 = !DILocation(line: 215, column: 1, scope: !15078)
!15087 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2408, file: !2408, line: 183, type: !15088, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15092)
!15088 = !DISubroutineType(types: !15089)
!15089 = !{!102, !15090}
!15090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15091, size: 32)
!15091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2382)
!15092 = !{!15093, !15094, !15095, !15097}
!15093 = !DILocalVariable(name: "timeout", arg: 1, scope: !15087, file: !2408, line: 183, type: !15090)
!15094 = !DILocalVariable(name: "ticks", scope: !15087, file: !2408, line: 185, type: !102)
!15095 = !DILocalVariable(name: "__i", scope: !15096, file: !2408, line: 187, type: !14774)
!15096 = distinct !DILexicalBlock(scope: !15087, file: !2408, line: 187, column: 2)
!15097 = !DILocalVariable(name: "__key", scope: !15096, file: !2408, line: 187, type: !14774)
!15098 = !DILocation(line: 0, scope: !15087)
!15099 = !DILocation(line: 0, scope: !15096)
!15100 = !DILocation(line: 0, scope: !14796, inlinedAt: !15101)
!15101 = distinct !DILocation(line: 187, column: 2, scope: !15096)
!15102 = !DILocation(line: 55, column: 2, scope: !14805, inlinedAt: !15103)
!15103 = distinct !DILocation(line: 145, column: 10, scope: !14796, inlinedAt: !15101)
!15104 = !DILocation(line: 0, scope: !14805, inlinedAt: !15103)
!15105 = !DILocation(line: 188, column: 11, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15107, file: !2408, line: 187, column: 24)
!15107 = distinct !DILexicalBlock(scope: !15096, file: !2408, line: 187, column: 2)
!15108 = !DILocation(line: 0, scope: !14864, inlinedAt: !15109)
!15109 = distinct !DILocation(line: 187, column: 2, scope: !15107)
!15110 = !DILocation(line: 0, scope: !14872, inlinedAt: !15111)
!15111 = distinct !DILocation(line: 215, column: 2, scope: !14864, inlinedAt: !15109)
!15112 = !DILocation(line: 95, column: 2, scope: !14872, inlinedAt: !15111)
!15113 = !DILocation(line: 191, column: 2, scope: !15087)
!15114 = distinct !DISubprogram(name: "timeout_rem", scope: !2408, file: !2408, line: 165, type: !15088, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15115)
!15115 = !{!15116, !15117, !15118}
!15116 = !DILocalVariable(name: "timeout", arg: 1, scope: !15114, file: !2408, line: 165, type: !15090)
!15117 = !DILocalVariable(name: "ticks", scope: !15114, file: !2408, line: 167, type: !102)
!15118 = !DILocalVariable(name: "t", scope: !15119, file: !2408, line: 173, type: !2381)
!15119 = distinct !DILexicalBlock(scope: !15114, file: !2408, line: 173, column: 2)
!15120 = !DILocation(line: 0, scope: !15114)
!15121 = !DILocation(line: 169, column: 6, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15114, file: !2408, line: 169, column: 6)
!15123 = !DILocation(line: 169, column: 6, scope: !15114)
!15124 = !DILocation(line: 173, column: 28, scope: !15119)
!15125 = !DILocation(line: 0, scope: !15119)
!15126 = !DILocation(line: 173, column: 39, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15119, file: !2408, line: 173, column: 2)
!15128 = !DILocation(line: 173, column: 2, scope: !15119)
!15129 = !DILocation(line: 174, column: 15, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15127, file: !2408, line: 173, column: 61)
!15131 = !DILocation(line: 174, column: 9, scope: !15130)
!15132 = !DILocation(line: 175, column: 15, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15130, file: !2408, line: 175, column: 7)
!15134 = !DILocation(line: 175, column: 7, scope: !15130)
!15135 = !DILocation(line: 173, column: 52, scope: !15127)
!15136 = distinct !{!15136, !15128, !15137}
!15137 = !DILocation(line: 178, column: 2, scope: !15119)
!15138 = !DILocation(line: 180, column: 17, scope: !15114)
!15139 = !DILocation(line: 180, column: 15, scope: !15114)
!15140 = !DILocation(line: 180, column: 2, scope: !15114)
!15141 = !DILocation(line: 181, column: 1, scope: !15114)
!15142 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12086, file: !12086, line: 35, type: !15143, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15145)
!15143 = !DISubroutineType(types: !15144)
!15144 = !{!315, !15090}
!15145 = !{!15146}
!15146 = !DILocalVariable(name: "to", arg: 1, scope: !15142, file: !12086, line: 35, type: !15090)
!15147 = !DILocation(line: 0, scope: !15142)
!15148 = !DILocation(line: 37, column: 35, scope: !15142)
!15149 = !DILocation(line: 37, column: 10, scope: !15142)
!15150 = !DILocation(line: 37, column: 9, scope: !15142)
!15151 = !DILocation(line: 37, column: 2, scope: !15142)
!15152 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2408, file: !2408, line: 194, type: !15088, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15153)
!15153 = !{!15154, !15155, !15156, !15158}
!15154 = !DILocalVariable(name: "timeout", arg: 1, scope: !15152, file: !2408, line: 194, type: !15090)
!15155 = !DILocalVariable(name: "ticks", scope: !15152, file: !2408, line: 196, type: !102)
!15156 = !DILocalVariable(name: "__i", scope: !15157, file: !2408, line: 198, type: !14774)
!15157 = distinct !DILexicalBlock(scope: !15152, file: !2408, line: 198, column: 2)
!15158 = !DILocalVariable(name: "__key", scope: !15157, file: !2408, line: 198, type: !14774)
!15159 = !DILocation(line: 0, scope: !15152)
!15160 = !DILocation(line: 0, scope: !15157)
!15161 = !DILocation(line: 0, scope: !14796, inlinedAt: !15162)
!15162 = distinct !DILocation(line: 198, column: 2, scope: !15157)
!15163 = !DILocation(line: 55, column: 2, scope: !14805, inlinedAt: !15164)
!15164 = distinct !DILocation(line: 145, column: 10, scope: !14796, inlinedAt: !15162)
!15165 = !DILocation(line: 0, scope: !14805, inlinedAt: !15164)
!15166 = !DILocation(line: 199, column: 11, scope: !15167)
!15167 = distinct !DILexicalBlock(scope: !15168, file: !2408, line: 198, column: 24)
!15168 = distinct !DILexicalBlock(scope: !15157, file: !2408, line: 198, column: 2)
!15169 = !DILocation(line: 199, column: 23, scope: !15167)
!15170 = !DILocation(line: 0, scope: !14864, inlinedAt: !15171)
!15171 = distinct !DILocation(line: 198, column: 2, scope: !15168)
!15172 = !DILocation(line: 0, scope: !14872, inlinedAt: !15173)
!15173 = distinct !DILocation(line: 215, column: 2, scope: !14864, inlinedAt: !15171)
!15174 = !DILocation(line: 95, column: 2, scope: !14872, inlinedAt: !15173)
!15175 = !DILocation(line: 199, column: 21, scope: !15167)
!15176 = !DILocation(line: 202, column: 2, scope: !15152)
!15177 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2408, file: !2408, line: 205, type: !14880, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15178)
!15178 = !{!15179, !15180, !15182}
!15179 = !DILocalVariable(name: "ret", scope: !15177, file: !2408, line: 207, type: !734)
!15180 = !DILocalVariable(name: "__i", scope: !15181, file: !2408, line: 209, type: !14774)
!15181 = distinct !DILexicalBlock(scope: !15177, file: !2408, line: 209, column: 2)
!15182 = !DILocalVariable(name: "__key", scope: !15181, file: !2408, line: 209, type: !14774)
!15183 = !DILocation(line: 0, scope: !15177)
!15184 = !DILocation(line: 0, scope: !15181)
!15185 = !DILocation(line: 0, scope: !14796, inlinedAt: !15186)
!15186 = distinct !DILocation(line: 209, column: 2, scope: !15181)
!15187 = !DILocation(line: 55, column: 2, scope: !14805, inlinedAt: !15188)
!15188 = distinct !DILocation(line: 145, column: 10, scope: !14796, inlinedAt: !15186)
!15189 = !DILocation(line: 0, scope: !14805, inlinedAt: !15188)
!15190 = !DILocation(line: 210, column: 9, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15192, file: !2408, line: 209, column: 24)
!15192 = distinct !DILexicalBlock(scope: !15181, file: !2408, line: 209, column: 2)
!15193 = !DILocation(line: 0, scope: !14864, inlinedAt: !15194)
!15194 = distinct !DILocation(line: 209, column: 2, scope: !15192)
!15195 = !DILocation(line: 0, scope: !14872, inlinedAt: !15196)
!15196 = distinct !DILocation(line: 215, column: 2, scope: !14864, inlinedAt: !15194)
!15197 = !DILocation(line: 95, column: 2, scope: !14872, inlinedAt: !15196)
!15198 = !DILocation(line: 212, column: 2, scope: !15177)
!15199 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2408, file: !2408, line: 215, type: !9085, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15200)
!15200 = !{!15201, !15202, !15203, !15205, !15206, !15209, !15210}
!15201 = !DILocalVariable(name: "ticks", arg: 1, scope: !15199, file: !2408, line: 215, type: !734)
!15202 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15199, file: !2408, line: 215, type: !315)
!15203 = !DILocalVariable(name: "__i", scope: !15204, file: !2408, line: 217, type: !14774)
!15204 = distinct !DILexicalBlock(scope: !15199, file: !2408, line: 217, column: 2)
!15205 = !DILocalVariable(name: "__key", scope: !15204, file: !2408, line: 217, type: !14774)
!15206 = !DILocalVariable(name: "next_to", scope: !15207, file: !2408, line: 218, type: !109)
!15207 = distinct !DILexicalBlock(scope: !15208, file: !2408, line: 217, column: 24)
!15208 = distinct !DILexicalBlock(scope: !15204, file: !2408, line: 217, column: 2)
!15209 = !DILocalVariable(name: "sooner", scope: !15207, file: !2408, line: 219, type: !315)
!15210 = !DILocalVariable(name: "imminent", scope: !15207, file: !2408, line: 221, type: !315)
!15211 = !DILocation(line: 0, scope: !15199)
!15212 = !DILocation(line: 0, scope: !15204)
!15213 = !DILocation(line: 0, scope: !14796, inlinedAt: !15214)
!15214 = distinct !DILocation(line: 217, column: 2, scope: !15204)
!15215 = !DILocation(line: 55, column: 2, scope: !14805, inlinedAt: !15216)
!15216 = distinct !DILocation(line: 145, column: 10, scope: !14796, inlinedAt: !15214)
!15217 = !DILocation(line: 0, scope: !14805, inlinedAt: !15216)
!15218 = !DILocation(line: 218, column: 17, scope: !15207)
!15219 = !DILocation(line: 0, scope: !15207)
!15220 = !DILocation(line: 221, column: 27, scope: !15207)
!15221 = !DILocation(line: 233, column: 17, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15207, file: !2408, line: 233, column: 7)
!15223 = !DILocation(line: 234, column: 26, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15222, file: !2408, line: 233, column: 56)
!15225 = !DILocation(line: 234, column: 4, scope: !15224)
!15226 = !DILocation(line: 235, column: 3, scope: !15224)
!15227 = !DILocation(line: 0, scope: !14864, inlinedAt: !15228)
!15228 = distinct !DILocation(line: 217, column: 2, scope: !15208)
!15229 = !DILocation(line: 0, scope: !14872, inlinedAt: !15230)
!15230 = distinct !DILocation(line: 215, column: 2, scope: !14864, inlinedAt: !15228)
!15231 = !DILocation(line: 95, column: 2, scope: !14872, inlinedAt: !15230)
!15232 = !DILocation(line: 237, column: 1, scope: !15199)
!15233 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2408, file: !2408, line: 239, type: !15234, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15236)
!15234 = !DISubroutineType(types: !15235)
!15235 = !{null, !734}
!15236 = !{!15237, !15238, !15239, !15241}
!15237 = !DILocalVariable(name: "ticks", arg: 1, scope: !15233, file: !2408, line: 239, type: !734)
!15238 = !DILocalVariable(name: "key", scope: !15233, file: !2408, line: 245, type: !14774)
!15239 = !DILocalVariable(name: "t", scope: !15240, file: !2408, line: 262, type: !2381)
!15240 = distinct !DILexicalBlock(scope: !15233, file: !2408, line: 261, column: 67)
!15241 = !DILocalVariable(name: "dt", scope: !15240, file: !2408, line: 263, type: !109)
!15242 = !DILocation(line: 0, scope: !15233)
!15243 = !DILocation(line: 242, column: 2, scope: !15233)
!15244 = !DILocation(line: 0, scope: !14796, inlinedAt: !15245)
!15245 = distinct !DILocation(line: 245, column: 25, scope: !15233)
!15246 = !DILocation(line: 55, column: 2, scope: !14805, inlinedAt: !15247)
!15247 = distinct !DILocation(line: 145, column: 10, scope: !14796, inlinedAt: !15245)
!15248 = !DILocation(line: 0, scope: !14805, inlinedAt: !15247)
!15249 = !DILocation(line: 261, column: 9, scope: !15233)
!15250 = !DILocation(line: 261, column: 17, scope: !15233)
!15251 = !DILocation(line: 261, column: 25, scope: !15233)
!15252 = !DILocation(line: 261, column: 37, scope: !15233)
!15253 = !DILocation(line: 261, column: 47, scope: !15233)
!15254 = !DILocation(line: 261, column: 44, scope: !15233)
!15255 = !DILocation(line: 261, column: 2, scope: !15233)
!15256 = !DILocation(line: 0, scope: !15240)
!15257 = !DILocation(line: 263, column: 12, scope: !15240)
!15258 = !DILocation(line: 265, column: 16, scope: !15240)
!15259 = !DILocation(line: 265, column: 13, scope: !15240)
!15260 = !DILocation(line: 266, column: 13, scope: !15240)
!15261 = !DILocation(line: 267, column: 3, scope: !15240)
!15262 = !DILocation(line: 0, scope: !14864, inlinedAt: !15263)
!15263 = distinct !DILocation(line: 269, column: 3, scope: !15240)
!15264 = !DILocation(line: 0, scope: !14872, inlinedAt: !15265)
!15265 = distinct !DILocation(line: 215, column: 2, scope: !14864, inlinedAt: !15263)
!15266 = !DILocation(line: 95, column: 2, scope: !14872, inlinedAt: !15265)
!15267 = !DILocation(line: 270, column: 6, scope: !15240)
!15268 = !DILocation(line: 270, column: 3, scope: !15240)
!15269 = !DILocation(line: 0, scope: !14796, inlinedAt: !15270)
!15270 = distinct !DILocation(line: 271, column: 9, scope: !15240)
!15271 = !DILocation(line: 55, column: 2, scope: !14805, inlinedAt: !15272)
!15272 = distinct !DILocation(line: 145, column: 10, scope: !14796, inlinedAt: !15270)
!15273 = !DILocation(line: 0, scope: !14805, inlinedAt: !15272)
!15274 = !DILocation(line: 272, column: 22, scope: !15240)
!15275 = distinct !{!15275, !15255, !15276}
!15276 = !DILocation(line: 273, column: 2, scope: !15233)
!15277 = !DILocation(line: 276, column: 19, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15279, file: !2408, line: 275, column: 23)
!15279 = distinct !DILexicalBlock(scope: !15233, file: !2408, line: 275, column: 6)
!15280 = !DILocation(line: 277, column: 2, scope: !15278)
!15281 = !DILocation(line: 279, column: 15, scope: !15233)
!15282 = !DILocation(line: 279, column: 12, scope: !15233)
!15283 = !DILocation(line: 280, column: 21, scope: !15233)
!15284 = !DILocation(line: 282, column: 24, scope: !15233)
!15285 = !DILocation(line: 282, column: 2, scope: !15233)
!15286 = !DILocation(line: 0, scope: !14864, inlinedAt: !15287)
!15287 = distinct !DILocation(line: 284, column: 2, scope: !15233)
!15288 = !DILocation(line: 0, scope: !14872, inlinedAt: !15289)
!15289 = distinct !DILocation(line: 215, column: 2, scope: !14864, inlinedAt: !15287)
!15290 = !DILocation(line: 95, column: 2, scope: !14872, inlinedAt: !15289)
!15291 = !DILocation(line: 285, column: 1, scope: !15233)
!15292 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2408, file: !2408, line: 287, type: !15293, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15295)
!15293 = !DISubroutineType(types: !15294)
!15294 = !{!104}
!15295 = !{!15296, !15297, !15299}
!15296 = !DILocalVariable(name: "t", scope: !15292, file: !2408, line: 289, type: !111)
!15297 = !DILocalVariable(name: "__i", scope: !15298, file: !2408, line: 291, type: !14774)
!15298 = distinct !DILexicalBlock(scope: !15292, file: !2408, line: 291, column: 2)
!15299 = !DILocalVariable(name: "__key", scope: !15298, file: !2408, line: 291, type: !14774)
!15300 = !DILocation(line: 0, scope: !15292)
!15301 = !DILocation(line: 0, scope: !15298)
!15302 = !DILocation(line: 0, scope: !14796, inlinedAt: !15303)
!15303 = distinct !DILocation(line: 291, column: 2, scope: !15298)
!15304 = !DILocation(line: 55, column: 2, scope: !14805, inlinedAt: !15305)
!15305 = distinct !DILocation(line: 145, column: 10, scope: !14796, inlinedAt: !15303)
!15306 = !DILocation(line: 0, scope: !14805, inlinedAt: !15305)
!15307 = !DILocation(line: 292, column: 7, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15309, file: !2408, line: 291, column: 24)
!15309 = distinct !DILexicalBlock(scope: !15298, file: !2408, line: 291, column: 2)
!15310 = !DILocation(line: 292, column: 19, scope: !15308)
!15311 = !DILocation(line: 0, scope: !14864, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 291, column: 2, scope: !15309)
!15313 = !DILocation(line: 0, scope: !14872, inlinedAt: !15314)
!15314 = distinct !DILocation(line: 215, column: 2, scope: !14864, inlinedAt: !15312)
!15315 = !DILocation(line: 95, column: 2, scope: !14872, inlinedAt: !15314)
!15316 = !DILocation(line: 292, column: 17, scope: !15308)
!15317 = !DILocation(line: 294, column: 2, scope: !15292)
!15318 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2408, file: !2408, line: 297, type: !5210, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !251)
!15319 = !DILocation(line: 300, column: 19, scope: !15318)
!15320 = !DILocation(line: 300, column: 9, scope: !15318)
!15321 = !DILocation(line: 300, column: 2, scope: !15318)
!15322 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2408, file: !2408, line: 306, type: !15293, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !251)
!15323 = !DILocation(line: 308, column: 9, scope: !15322)
!15324 = !DILocation(line: 308, column: 2, scope: !15322)
!15325 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2408, file: !2408, line: 319, type: !3146, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15326)
!15326 = !{!15327, !15328, !15329, !15330}
!15327 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15325, file: !2408, line: 319, type: !110)
!15328 = !DILocalVariable(name: "start_cycles", scope: !15325, file: !2408, line: 328, type: !110)
!15329 = !DILocalVariable(name: "cycles_to_wait", scope: !15325, file: !2408, line: 331, type: !110)
!15330 = !DILocalVariable(name: "current_cycles", scope: !15331, file: !2408, line: 338, type: !110)
!15331 = distinct !DILexicalBlock(scope: !15332, file: !2408, line: 337, column: 11)
!15332 = distinct !DILexicalBlock(scope: !15333, file: !2408, line: 337, column: 2)
!15333 = distinct !DILexicalBlock(scope: !15325, file: !2408, line: 337, column: 2)
!15334 = !DILocation(line: 0, scope: !15325)
!15335 = !DILocation(line: 322, column: 19, scope: !15336)
!15336 = distinct !DILexicalBlock(scope: !15325, file: !2408, line: 322, column: 6)
!15337 = !DILocation(line: 322, column: 6, scope: !15325)
!15338 = !DILocation(line: 328, column: 26, scope: !15325)
!15339 = !DILocation(line: 333, column: 43, scope: !15325)
!15340 = !DILocation(line: 337, column: 2, scope: !15325)
!15341 = !DILocation(line: 338, column: 29, scope: !15331)
!15342 = !DILocation(line: 0, scope: !15331)
!15343 = !DILocation(line: 341, column: 23, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15331, file: !2408, line: 341, column: 7)
!15345 = !DILocation(line: 341, column: 39, scope: !15344)
!15346 = !DILocation(line: 349, column: 1, scope: !15325)
!15347 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !5210, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !251)
!15348 = !DILocation(line: 1677, column: 9, scope: !15347)
!15349 = !DILocation(line: 1677, column: 2, scope: !15347)
!15350 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !15351, file: !15351, line: 24, type: !5210, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !251)
!15351 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15352 = !DILocation(line: 26, column: 9, scope: !15350)
!15353 = !DILocation(line: 26, column: 2, scope: !15350)
!15354 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2408, file: !2408, line: 364, type: !15355, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2378, retainedNodes: !15357)
!15355 = !DISubroutineType(types: !15356)
!15356 = !{!111, !14764}
!15357 = !{!15358, !15359}
!15358 = !DILocalVariable(name: "timeout", arg: 1, scope: !15354, file: !2408, line: 364, type: !14764)
!15359 = !DILocalVariable(name: "dt", scope: !15354, file: !2408, line: 366, type: !102)
!15360 = !DILocation(line: 0, scope: !15354)
!15361 = !DILocation(line: 368, column: 6, scope: !15354)
!15362 = !DILocation(line: 371, column: 10, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !15364, file: !2408, line: 370, column: 47)
!15364 = distinct !DILexicalBlock(scope: !15365, file: !2408, line: 370, column: 13)
!15365 = distinct !DILexicalBlock(scope: !15354, file: !2408, line: 368, column: 6)
!15366 = !DILocation(line: 371, column: 3, scope: !15363)
!15367 = !DILocation(line: 376, column: 58, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15369, file: !2408, line: 376, column: 7)
!15369 = distinct !DILexicalBlock(scope: !15364, file: !2408, line: 372, column: 9)
!15370 = !DILocation(line: 376, column: 7, scope: !15369)
!15371 = !DILocation(line: 376, column: 43, scope: !15368)
!15372 = !DILocation(line: 377, column: 4, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15368, file: !2408, line: 376, column: 64)
!15374 = !DILocation(line: 379, column: 10, scope: !15369)
!15375 = !DILocation(line: 379, column: 33, scope: !15369)
!15376 = !DILocation(line: 379, column: 31, scope: !15369)
!15377 = !DILocation(line: 379, column: 3, scope: !15369)
!15378 = !DILocation(line: 0, scope: !15365)
!15379 = !DILocation(line: 381, column: 1, scope: !15354)
!15380 = distinct !DISubprogram(name: "boot_banner", scope: !15381, file: !15381, line: 26, type: !2980, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !251)
!15381 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15382 = !DILocation(line: 34, column: 2, scope: !15380)
!15383 = !DILocation(line: 36, column: 1, scope: !15380)
