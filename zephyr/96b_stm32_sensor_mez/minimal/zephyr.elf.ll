; ModuleID = 'build/96b_stm32_sensor_mez/minimal/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.1 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.1, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.1, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.1, %union.anon.1 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.1*, %union.anon.1* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230124 to i8*), void (i8*)* inttoptr (i32 134228253 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230124 to i8*), void (i8*)* inttoptr (i32 134228233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230124 to i8*), void (i8*)* inttoptr (i32 134228223 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230124 to i8*), void (i8*)* inttoptr (i32 134228323 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230124 to i8*), void (i8*)* inttoptr (i32 134228313 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230124 to i8*), void (i8*)* inttoptr (i32 134228303 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230124 to i8*), void (i8*)* inttoptr (i32 134228293 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230124 to i8*), void (i8*)* inttoptr (i32 134228283 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230124 to i8*), void (i8*)* inttoptr (i32 134228273 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230124 to i8*), void (i8*)* inttoptr (i32 134228263 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230124 to i8*), void (i8*)* inttoptr (i32 134228243 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.1 { i32 101384192 } }], align 4, !dbg !195
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !203
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !349
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !385
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), %union.anon.1 { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), %union.anon.1 { i32 285933600 } }], align 4, !dbg !395
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !400
@.str.25 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !420
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !622
@.str.26 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !583
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !566
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !539
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !555
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !585
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !599
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !601
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !603
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !605
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !607
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !609
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !611
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !613
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !615
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !617
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !627
@.str.28 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !660
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !758
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !747
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !799
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !647
@.str.37 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !865
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1144
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1114
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1100
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1045
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !645
@.str.1.38 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1146
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1118
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1116
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1059
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !643
@.str.2 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1159
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1122
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1120
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1065
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !641
@.str.3 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1161
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1126
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1124
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1074
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !639
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1163
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1130
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1128
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1080
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !637
@.str.5 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1165
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1134
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1132
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1086
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !635
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1167
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1138
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1136
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1092
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !633
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1169
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1142
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1140
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1098
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !655
@.str.42 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1171
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1390
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1345
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1392
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1318
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1320
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !653
@.str.1.43 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1399
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1347
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1424
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.43, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1329
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1331
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !651
@.str.2.44 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1426
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1349
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1436
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.44, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1335
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1337
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !649
@.str.3.47 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1438
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1351
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1448
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.47, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1341
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1343
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1353
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1361
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1384
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1387
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !731
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1416
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1418
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1420
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1422
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1428
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1430
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1432
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1434
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1440
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1442
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1444
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1446
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1450
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1561
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1563
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1559
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1530
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1565
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1043
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.38, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1057
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1063
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1072
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1078
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1084
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1090
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1096
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1655
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1699
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1702
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1709
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1716
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1926
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1935
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1942
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1947
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.97 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.100, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.102, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.103, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.104, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.98, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.105, i32 0, i32 0)], align 4, !dbg !1975
@.str.99 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.100 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.101 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.102 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.103 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.104 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.98 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.105 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2087
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2100
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2208
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2211
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2213
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1940
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1937
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2215
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2251
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1804
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2249
@.str.158 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2819 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2823, !srcloc !2824
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2825, !srcloc !2826
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2827, !srcloc !2828
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2829, !srcloc !2830
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2831, !srcloc !2832
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2833, !srcloc !2834
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2835, !srcloc !2836
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2837, !srcloc !2838
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2839, !srcloc !2840
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2841, !srcloc !2842
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2843, !srcloc !2844
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2845, !srcloc !2846
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2847, !srcloc !2848
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2849, !srcloc !2850
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2851, !srcloc !2852
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2853, !srcloc !2854
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2855, !srcloc !2856
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2857, !srcloc !2858
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2859, !srcloc !2860
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2861, !srcloc !2862
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2863, !srcloc !2864
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2865, !srcloc !2866
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2867, !srcloc !2868
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2869, !srcloc !2870
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2871, !srcloc !2872
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2873, !srcloc !2874
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2875, !srcloc !2876
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2877, !srcloc !2880
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2881, !srcloc !2882
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2883, !srcloc !2884
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2885, !srcloc !2886
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2887, !srcloc !2888
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2889, !srcloc !2890
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2891, !srcloc !2892
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2893, !srcloc !2894
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2895, !srcloc !2896
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2897, !srcloc !2898
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2899, !srcloc !2900
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2901, !srcloc !2902
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2903, !srcloc !2904
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2905, !srcloc !2906
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2907, !srcloc !2908
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2909, !srcloc !2910
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !2911, !srcloc !2912
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !2913, !srcloc !2914
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !2915, !srcloc !2916
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !2917, !srcloc !2918
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !2919, !srcloc !2920
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !2921, !srcloc !2922
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2923, !srcloc !2924
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !2925, !srcloc !2926
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2927, !srcloc !2928
  ret void, !dbg !2929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @main() local_unnamed_addr #2 !dbg !2932 {
  ret void, !dbg !2934
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2937, metadata !DIExpression()), !dbg !2938
  ret i32 0, !dbg !2939
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !2940 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2944, metadata !DIExpression()), !dbg !2945
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2946
  ret void, !dbg !2947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !2948 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2951
  ret i8* %1, !dbg !2952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2953 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2965, metadata !DIExpression()), !dbg !2976
  call void @llvm.dbg.value(metadata i8* %0, metadata !2964, metadata !DIExpression()), !dbg !2976
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !2977
  ret void, !dbg !2979
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !2980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2984, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.value(metadata i8* %1, metadata !2985, metadata !DIExpression()), !dbg !2986
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2987
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !2987
  ret i32 %4, !dbg !2988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !2989 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3001, metadata !DIExpression()), !dbg !3002
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !2998, metadata !DIExpression()), !dbg !3002
  call void @llvm.dbg.value(metadata i8* %1, metadata !2999, metadata !DIExpression()), !dbg !3002
  call void @llvm.dbg.value(metadata i8* %2, metadata !3000, metadata !DIExpression()), !dbg !3002
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3003
  ret void, !dbg !3004
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3005 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3009, metadata !DIExpression()), !dbg !3012
  call void @llvm.dbg.value(metadata i32 %1, metadata !3010, metadata !DIExpression()), !dbg !3012
  call void @llvm.dbg.value(metadata i32 0, metadata !3011, metadata !DIExpression()), !dbg !3012
  %3 = icmp eq i32 %1, 0, !dbg !3013
  br i1 %3, label %13, label %4, !dbg !3016

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3011, metadata !DIExpression()), !dbg !3012
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3017
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3019
  %8 = load i8, i8* %7, align 1, !dbg !3019
  %9 = zext i8 %8 to i32, !dbg !3019
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3017
  %11 = add nuw i32 %5, 1, !dbg !3020
  call void @llvm.dbg.value(metadata i32 %11, metadata !3011, metadata !DIExpression()), !dbg !3012
  %12 = icmp eq i32 %11, %1, !dbg !3013
  br i1 %12, label %13, label %4, !dbg !3016, !llvm.loop !3021

13:                                               ; preds = %4, %2
  ret void, !dbg !3023
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3024 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3028, metadata !DIExpression()), !dbg !3030
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3031
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3031
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3029, metadata !DIExpression()), !dbg !3032
  call void @llvm.va_start(i8* nonnull %3), !dbg !3033
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3034
  %5 = load i32, i32* %4, align 4, !dbg !3034
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3034
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3034
  call void @llvm.va_end(i8* nonnull %3), !dbg !3035
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3036
  ret void, !dbg !3036
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3037 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3041, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i32 %1, metadata !3042, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i8* %2, metadata !3043, metadata !DIExpression()), !dbg !3046
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3047
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3047
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3044, metadata !DIExpression()), !dbg !3048
  call void @llvm.va_start(i8* nonnull %5), !dbg !3049
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3050
  %7 = load i32, i32* %6, align 4, !dbg !3050
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3050
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3050
  call void @llvm.dbg.value(metadata i32 %9, metadata !3045, metadata !DIExpression()), !dbg !3046
  call void @llvm.va_end(i8* nonnull %5), !dbg !3051
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3052
  ret i32 %9, !dbg !3053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3054 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3061, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata i8* %0, metadata !3058, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata i32 %1, metadata !3059, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata i8* %2, metadata !3060, metadata !DIExpression()), !dbg !3068
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3069
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3069
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3062, metadata !DIExpression()), !dbg !3070
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3071
  store i8* %0, i8** %7, align 4, !dbg !3071
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3071
  store i32 %1, i32* %8, align 4, !dbg !3071
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3071
  store i32 0, i32* %9, align 4, !dbg !3071
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3072
  %10 = load i32, i32* %9, align 4, !dbg !3073
  %11 = load i32, i32* %8, align 4, !dbg !3075
  %12 = icmp slt i32 %10, %11, !dbg !3076
  br i1 %12, label %13, label %15, !dbg !3077

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3078
  store i8 0, i8* %14, align 1, !dbg !3080
  br label %15, !dbg !3081

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3082
  ret i32 %10, !dbg !3083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3089, metadata !DIExpression()), !dbg !3091
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3090, metadata !DIExpression()), !dbg !3091
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3092
  %4 = load i8*, i8** %3, align 4, !dbg !3092
  %5 = icmp eq i8* %4, null, !dbg !3094
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3095
  br i1 %5, label %12, label %8, !dbg !3096

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3097
  %10 = load i32, i32* %9, align 4, !dbg !3097
  %11 = icmp slt i32 %7, %10, !dbg !3098
  br i1 %11, label %15, label %12, !dbg !3099

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3100
  %14 = add nsw i32 %7, 1, !dbg !3102
  store i32 %14, i32* %13, align 4, !dbg !3102
  br label %25, !dbg !3103

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3104
  %17 = icmp eq i32 %7, %16, !dbg !3106
  br i1 %17, label %18, label %21, !dbg !3107

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3108
  store i32 %19, i32* %6, align 4, !dbg !3108
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3110
  store i8 0, i8* %20, align 1, !dbg !3111
  br label %25, !dbg !3112

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3113
  %23 = add nsw i32 %7, 1, !dbg !3115
  store i32 %23, i32* %6, align 4, !dbg !3115
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3116
  store i8 %22, i8* %24, align 1, !dbg !3117
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3118
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #9 !dbg !3119 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3129, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata i8* %1, metadata !3130, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata i8* %2, metadata !3131, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata i8* %3, metadata !3132, metadata !DIExpression()), !dbg !3133
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3134
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3135
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !3136
  unreachable, !dbg !3137
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #10 !dbg !3138 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3242
  ret %struct.k_thread* %1, !dbg !3243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3244 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3249, metadata !DIExpression()), !dbg !3250
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3251, !srcloc !3253
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3254
  ret void, !dbg !3255
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #10 !dbg !3256 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3257, !srcloc !3259
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3260
  ret %struct.k_thread* %1, !dbg !3261
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3262 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3275, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3272, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i8* %1, metadata !3273, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i8* %2, metadata !3274, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %4, metadata !3276, metadata !DIExpression()), !dbg !3403
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3404
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3404
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3277, metadata !DIExpression()), !dbg !3405
  call void @llvm.dbg.value(metadata i32 0, metadata !3281, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i1 undef, metadata !3283, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3403
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3406

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3406

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3407
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3275, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i8* %30, metadata !3274, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %29, metadata !3281, metadata !DIExpression()), !dbg !3403
  %31 = load i8, i8* %30, align 1, !dbg !3408
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3406

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3408
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3409
  call void @llvm.dbg.value(metadata i8* %34, metadata !3274, metadata !DIExpression()), !dbg !3403
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !3409
  call void @llvm.dbg.value(metadata i32 %35, metadata !3285, metadata !DIExpression()), !dbg !3410
  %36 = icmp slt i32 %35, 0, !dbg !3411
  %37 = add i32 %29, 1, !dbg !3409
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3403
  br i1 %36, label %365, label %28, !llvm.loop !3413

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3415
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3290, metadata !DIExpression()), !dbg !3416
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3416
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3335, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3338, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i8* %30, metadata !3341, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i32 -1, metadata !3342, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i32 -1, metadata !3343, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i8* null, metadata !3344, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i8* %14, metadata !3345, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i8 0, metadata !3346, metadata !DIExpression()), !dbg !3417
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !3418
  call void @llvm.dbg.value(metadata i8* %39, metadata !3274, metadata !DIExpression()), !dbg !3403
  %40 = load i24, i24* %15, align 8, !dbg !3419
  %41 = and i24 %40, 256, !dbg !3419
  %42 = icmp eq i24 %41, 0, !dbg !3419
  br i1 %42, label %51, label %43, !dbg !3421

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3422
  call void @llvm.dbg.value(metadata i8* %44, metadata !3275, metadata !DIExpression()), !dbg !3403
  %45 = bitcast i8* %27 to i32*, !dbg !3422
  %46 = load i32, i32* %45, align 4, !dbg !3422
  call void @llvm.dbg.value(metadata i32 %46, metadata !3342, metadata !DIExpression()), !dbg !3417
  %47 = icmp slt i32 %46, 0, !dbg !3424
  br i1 %47, label %48, label %56, !dbg !3426

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3427
  store i24 %49, i24* %15, align 8, !dbg !3427
  %50 = sub nsw i32 0, %46, !dbg !3429
  call void @llvm.dbg.value(metadata i32 %50, metadata !3342, metadata !DIExpression()), !dbg !3417
  br label %56, !dbg !3430

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3431
  %53 = icmp eq i24 %52, 0, !dbg !3431
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3433
  br label %56, !dbg !3433

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3434
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3417
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3275, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %58, metadata !3342, metadata !DIExpression()), !dbg !3417
  %60 = and i24 %57, 1024, !dbg !3434
  %61 = icmp eq i24 %60, 0, !dbg !3434
  br i1 %61, label %69, label %62, !dbg !3435

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3436
  call void @llvm.dbg.value(metadata i8* %63, metadata !3275, metadata !DIExpression()), !dbg !3403
  %64 = bitcast i8* %59 to i32*, !dbg !3436
  %65 = load i32, i32* %64, align 4, !dbg !3436
  call void @llvm.dbg.value(metadata i32 %65, metadata !3347, metadata !DIExpression()), !dbg !3437
  %66 = icmp slt i32 %65, 0, !dbg !3438
  br i1 %66, label %67, label %74, !dbg !3440

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3441
  store i24 %68, i24* %15, align 8, !dbg !3441
  br label %74, !dbg !3443

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3444
  %71 = icmp eq i24 %70, 0, !dbg !3444
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3446
  br label %74, !dbg !3446

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3447
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3417
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3417
  call void @llvm.dbg.value(metadata i8* %77, metadata !3275, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %76, metadata !3343, metadata !DIExpression()), !dbg !3417
  store i32 0, i32* %16, align 4, !dbg !3448
  store i32 0, i32* %17, align 8, !dbg !3449
  %78 = lshr i24 %75, 16, !dbg !3447
  call void @llvm.dbg.value(metadata i24 %78, metadata !3350, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3417
  %79 = lshr i24 %75, 11, !dbg !3450
  %80 = and i24 %79, 15, !dbg !3450
  %81 = zext i24 %80 to i32, !dbg !3450
  call void @llvm.dbg.value(metadata i32 %81, metadata !3351, metadata !DIExpression()), !dbg !3417
  %82 = trunc i24 %78 to i3, !dbg !3451
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3451

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3452

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3455
  call void @llvm.dbg.value(metadata i8* %85, metadata !3275, metadata !DIExpression()), !dbg !3403
  %86 = bitcast i8* %77 to i32*, !dbg !3455
  %87 = load i32, i32* %86, align 4, !dbg !3455
  %88 = sext i32 %87 to i64, !dbg !3455
  store i64 %88, i64* %20, align 8, !dbg !3457
  br label %115, !dbg !3458

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3459
  call void @llvm.dbg.value(metadata i8* %90, metadata !3275, metadata !DIExpression()), !dbg !3403
  %91 = bitcast i8* %77 to i32*, !dbg !3459
  %92 = load i32, i32* %91, align 4, !dbg !3459
  %93 = sext i32 %92 to i64, !dbg !3459
  store i64 %93, i64* %20, align 8, !dbg !3462
  br label %115, !dbg !3463

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3464
  %96 = add i32 %95, 7, !dbg !3464
  %97 = and i32 %96, -8, !dbg !3464
  %98 = inttoptr i32 %97 to i8*, !dbg !3464
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3464
  call void @llvm.dbg.value(metadata i8* %99, metadata !3275, metadata !DIExpression()), !dbg !3403
  %100 = inttoptr i32 %97 to i64*, !dbg !3464
  %101 = load i64, i64* %100, align 8, !dbg !3464
  store i64 %101, i64* %20, align 8, !dbg !3465
  br label %115, !dbg !3466

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3467
  %104 = add i32 %103, 7, !dbg !3467
  %105 = and i32 %104, -8, !dbg !3467
  %106 = inttoptr i32 %105 to i8*, !dbg !3467
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3467
  call void @llvm.dbg.value(metadata i8* %107, metadata !3275, metadata !DIExpression()), !dbg !3403
  %108 = inttoptr i32 %105 to i64*, !dbg !3467
  %109 = load i64, i64* %108, align 8, !dbg !3467
  store i64 %109, i64* %20, align 8, !dbg !3468
  br label %115, !dbg !3469

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3470
  call void @llvm.dbg.value(metadata i8* %111, metadata !3275, metadata !DIExpression()), !dbg !3403
  %112 = bitcast i8* %77 to i32*, !dbg !3470
  %113 = load i32, i32* %112, align 4, !dbg !3470
  %114 = sext i32 %113 to i64, !dbg !3471
  store i64 %114, i64* %20, align 8, !dbg !3472
  br label %115, !dbg !3473

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3474
  call void @llvm.dbg.value(metadata i8* %117, metadata !3275, metadata !DIExpression()), !dbg !3403
  %118 = trunc i24 %79 to i4, !dbg !3475
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3475

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3476
  %121 = ashr exact i64 %120, 56, !dbg !3476
  store i64 %121, i64* %20, align 8, !dbg !3479
  br label %177, !dbg !3480

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3481
  %124 = ashr exact i64 %123, 48, !dbg !3481
  store i64 %124, i64* %20, align 8, !dbg !3484
  br label %177, !dbg !3485

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3486

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3489
  call void @llvm.dbg.value(metadata i8* %127, metadata !3275, metadata !DIExpression()), !dbg !3403
  %128 = bitcast i8* %77 to i32*, !dbg !3489
  %129 = load i32, i32* %128, align 4, !dbg !3489
  %130 = zext i32 %129 to i64, !dbg !3489
  store i64 %130, i64* %20, align 8, !dbg !3491
  br label %157, !dbg !3492

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3493
  call void @llvm.dbg.value(metadata i8* %132, metadata !3275, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i8* %132, metadata !3275, metadata !DIExpression()), !dbg !3403
  %133 = bitcast i8* %77 to i32*, !dbg !3493
  %134 = load i32, i32* %133, align 4, !dbg !3493
  %135 = zext i32 %134 to i64, !dbg !3493
  store i64 %135, i64* %20, align 8, !dbg !3493
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3495
  %138 = add i32 %137, 7, !dbg !3495
  %139 = and i32 %138, -8, !dbg !3495
  %140 = inttoptr i32 %139 to i8*, !dbg !3495
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3495
  call void @llvm.dbg.value(metadata i8* %141, metadata !3275, metadata !DIExpression()), !dbg !3403
  %142 = inttoptr i32 %139 to i64*, !dbg !3495
  %143 = load i64, i64* %142, align 8, !dbg !3495
  store i64 %143, i64* %20, align 8, !dbg !3496
  br label %157, !dbg !3497

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3498
  %146 = add i32 %145, 7, !dbg !3498
  %147 = and i32 %146, -8, !dbg !3498
  %148 = inttoptr i32 %147 to i8*, !dbg !3498
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3498
  call void @llvm.dbg.value(metadata i8* %149, metadata !3275, metadata !DIExpression()), !dbg !3403
  %150 = inttoptr i32 %147 to i64*, !dbg !3498
  %151 = load i64, i64* %150, align 8, !dbg !3498
  store i64 %151, i64* %20, align 8, !dbg !3499
  br label %157, !dbg !3500

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3501
  call void @llvm.dbg.value(metadata i8* %153, metadata !3275, metadata !DIExpression()), !dbg !3403
  %154 = bitcast i8* %77 to i32*, !dbg !3501
  %155 = load i32, i32* %154, align 4, !dbg !3501
  %156 = zext i32 %155 to i64, !dbg !3502
  store i64 %156, i64* %20, align 8, !dbg !3503
  br label %157, !dbg !3504

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3505
  call void @llvm.dbg.value(metadata i8* %159, metadata !3275, metadata !DIExpression()), !dbg !3403
  %160 = trunc i24 %79 to i4, !dbg !3506
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3506

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3507
  store i64 %162, i64* %20, align 8, !dbg !3510
  br label %177, !dbg !3511

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3512
  store i64 %164, i64* %20, align 8, !dbg !3515
  br label %177, !dbg !3516

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3517
  %167 = add i32 %166, 7, !dbg !3517
  %168 = and i32 %167, -8, !dbg !3517
  %169 = inttoptr i32 %168 to i8*, !dbg !3517
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3517
  call void @llvm.dbg.value(metadata i8* %170, metadata !3275, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i8* %170, metadata !3275, metadata !DIExpression()), !dbg !3403
  %171 = inttoptr i32 %168 to double*, !dbg !3517
  %172 = load double, double* %171, align 8, !dbg !3517
  store double %172, double* %19, align 8, !dbg !3517
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3521
  call void @llvm.dbg.value(metadata i8* %174, metadata !3275, metadata !DIExpression()), !dbg !3403
  %175 = bitcast i8* %77 to i8**, !dbg !3521
  %176 = load i8*, i8** %175, align 4, !dbg !3521
  store i8* %176, i8** %18, align 8, !dbg !3524
  br label %177, !dbg !3525

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3417
  call void @llvm.dbg.value(metadata i8* %178, metadata !3275, metadata !DIExpression()), !dbg !3403
  %179 = and i24 %75, 3, !dbg !3526
  %180 = icmp eq i24 %179, 0, !dbg !3526
  br i1 %180, label %185, label %181, !dbg !3526

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !3527
  call void @llvm.dbg.value(metadata i32 %182, metadata !3352, metadata !DIExpression()), !dbg !3528
  %183 = icmp slt i32 %182, 0, !dbg !3529
  %184 = add i32 %182, %29, !dbg !3527
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3403
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3531
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3532

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !3533
  call void @llvm.dbg.value(metadata i32 %188, metadata !3356, metadata !DIExpression()), !dbg !3534
  %189 = icmp slt i32 %188, 0, !dbg !3535
  %190 = add i32 %29, 1, !dbg !3533
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3403
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3537
  call void @llvm.dbg.value(metadata i8* %192, metadata !3344, metadata !DIExpression()), !dbg !3417
  %193 = icmp sgt i32 %76, -1, !dbg !3538
  br i1 %193, label %194, label %196, !dbg !3540

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !3541
  call void @llvm.dbg.value(metadata i32 %195, metadata !3359, metadata !DIExpression()), !dbg !3543
  br label %241, !dbg !3544

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !3545
  call void @llvm.dbg.value(metadata i32 %197, metadata !3359, metadata !DIExpression()), !dbg !3543
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3344, metadata !DIExpression()), !dbg !3417
  %199 = load i64, i64* %20, align 8, !dbg !3547
  %200 = trunc i64 %199 to i8, !dbg !3548
  store i8 %200, i8* %10, align 1, !dbg !3549
  call void @llvm.dbg.value(metadata i8* %23, metadata !3345, metadata !DIExpression()), !dbg !3417
  br label %245, !dbg !3550

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3551
  %203 = icmp eq i24 %202, 0, !dbg !3551
  %204 = trunc i24 %75 to i8, !dbg !3553
  %205 = shl i8 %204, 1, !dbg !3553
  %206 = and i8 %205, 32, !dbg !3553
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3553
  call void @llvm.dbg.value(metadata i8 %207, metadata !3346, metadata !DIExpression()), !dbg !3417
  %208 = load i64, i64* %20, align 8, !dbg !3554
  call void @llvm.dbg.value(metadata i64 %208, metadata !3282, metadata !DIExpression()), !dbg !3403
  %209 = icmp slt i64 %208, 0, !dbg !3555
  br i1 %209, label %210, label %212, !dbg !3557

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3346, metadata !DIExpression()), !dbg !3417
  %211 = sub nsw i64 0, %208, !dbg !3558
  store i64 %211, i64* %20, align 8, !dbg !3560
  br label %212, !dbg !3561

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3417
  call void @llvm.dbg.value(metadata i8 %213, metadata !3346, metadata !DIExpression()), !dbg !3417
  %214 = load i64, i64* %20, align 8, !dbg !3562
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !3563
  call void @llvm.dbg.value(metadata i8* %215, metadata !3344, metadata !DIExpression()), !dbg !3417
  br label %216, !dbg !3564

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3565
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3566
  call void @llvm.dbg.value(metadata i8* %218, metadata !3344, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i8 %217, metadata !3346, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.label(metadata !3402), !dbg !3567
  %219 = icmp sgt i32 %76, -1, !dbg !3568
  br i1 %219, label %222, label %220, !dbg !3569

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3570
  br label %245, !dbg !3569

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3572
  %224 = sub i32 %22, %223, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %224, metadata !3361, metadata !DIExpression()), !dbg !3573
  %225 = load i24, i24* %15, align 8, !dbg !3574
  %226 = and i24 %225, -65, !dbg !3574
  store i24 %226, i24* %15, align 8, !dbg !3574
  %227 = icmp ugt i32 %76, %224, !dbg !3575
  br i1 %227, label %228, label %245, !dbg !3577

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3578
  store i32 %229, i32* %16, align 4, !dbg !3580
  br label %245, !dbg !3581

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3582
  %232 = icmp eq i8* %231, null, !dbg !3584
  br i1 %232, label %245, label %233, !dbg !3585

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3586
  %235 = zext i32 %234 to i64, !dbg !3586
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !3588
  call void @llvm.dbg.value(metadata i8* %236, metadata !3344, metadata !DIExpression()), !dbg !3417
  %237 = load i24, i24* %15, align 8, !dbg !3589
  %238 = or i24 %237, 1048576, !dbg !3589
  store i24 %238, i24* %15, align 8, !dbg !3589
  store i8 120, i8* %21, align 1, !dbg !3590
  br label %216, !dbg !3591

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3592
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !3595
  br label %363, !dbg !3596

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3597
  call void @llvm.dbg.value(metadata i32 %242, metadata !3359, metadata !DIExpression()), !dbg !3543
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3598
  call void @llvm.dbg.value(metadata i32 -1, metadata !3343, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i32 %29, metadata !3281, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i8* %192, metadata !3344, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i8* %243, metadata !3345, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i8 0, metadata !3346, metadata !DIExpression()), !dbg !3417
  %244 = icmp eq i8* %192, null, !dbg !3599
  br i1 %244, label %363, label %245, !dbg !3601, !llvm.loop !3413

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3570
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3417
  call void @llvm.dbg.value(metadata i32 0, metadata !3365, metadata !DIExpression()), !dbg !3417
  %250 = zext i8 %249 to i32, !dbg !3602
  %251 = icmp eq i8 %249, 0, !dbg !3604
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3417
  call void @llvm.dbg.value(metadata i32 undef, metadata !3364, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3417
  call void @llvm.dbg.value(metadata i32 undef, metadata !3364, metadata !DIExpression()), !dbg !3417
  %252 = icmp sgt i32 %58, 0, !dbg !3605
  br i1 %252, label %253, label %302, !dbg !3606

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3570
  %255 = icmp eq i24 %254, 0, !dbg !3570
  %256 = ptrtoint i8* %248 to i32, !dbg !3607
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3417
  %257 = ptrtoint i8* %247 to i32, !dbg !3607
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3417
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3417
  %258 = xor i1 %251, true, !dbg !3608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3417
  %259 = sext i1 %258 to i32, !dbg !3608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3417
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3417
  %260 = lshr i24 %246, 19, !dbg !3609
  %261 = and i24 %260, 1, !dbg !3609
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3609
  %263 = zext i24 %262 to i32, !dbg !3609
  %264 = add i32 %257, %259, !dbg !3609
  %265 = add i32 %256, %263, !dbg !3609
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3417
  %266 = and i24 %246, 4194304, !dbg !3610
  %267 = icmp eq i24 %266, 0, !dbg !3610
  %268 = load i32, i32* %16, align 4, !dbg !3612
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3417
  call void @llvm.dbg.value(metadata i32 undef, metadata !3364, metadata !DIExpression()), !dbg !3417
  %269 = load i32, i32* %17, align 8, !dbg !3613
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3613
  call void @llvm.dbg.value(metadata i32 undef, metadata !3364, metadata !DIExpression()), !dbg !3417
  %271 = add i32 %264, %58, !dbg !3613
  %272 = add i32 %265, %268, !dbg !3613
  %273 = add i32 %272, %270, !dbg !3614
  %274 = sub i32 %271, %273, !dbg !3614
  call void @llvm.dbg.value(metadata i32 %274, metadata !3342, metadata !DIExpression()), !dbg !3417
  %275 = and i24 %246, 4, !dbg !3615
  %276 = icmp eq i24 %275, 0, !dbg !3615
  br i1 %276, label %277, label %302, !dbg !3616

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3366, metadata !DIExpression()), !dbg !3617
  %278 = and i24 %246, 64, !dbg !3618
  %279 = icmp eq i24 %278, 0, !dbg !3618
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3619
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3619
  %282 = select i1 %279, i32 32, i32 48, !dbg !3619
  br i1 %280, label %287, label %283, !dbg !3619

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !3620
  call void @llvm.dbg.value(metadata i32 %284, metadata !3371, metadata !DIExpression()), !dbg !3621
  %285 = icmp slt i32 %284, 0, !dbg !3622
  %286 = add i32 %29, 1, !dbg !3620
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3403
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3417
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3407
  call void @llvm.dbg.value(metadata i32 %290, metadata !3281, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i8 undef, metadata !3366, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i8 %288, metadata !3346, metadata !DIExpression()), !dbg !3417
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3624
  %292 = add i32 %291, -1, !dbg !3624
  br label %293, !dbg !3624

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3625
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3407
  call void @llvm.dbg.value(metadata i32 %295, metadata !3281, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %294, metadata !3342, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i32 %294, metadata !3342, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3417
  %296 = icmp sgt i32 %294, 0, !dbg !3626
  br i1 %296, label %297, label %302, !dbg !3624

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !3627
  call void @llvm.dbg.value(metadata i32 %298, metadata !3342, metadata !DIExpression()), !dbg !3417
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !3628
  call void @llvm.dbg.value(metadata i32 %299, metadata !3377, metadata !DIExpression()), !dbg !3629
  %300 = icmp slt i32 %299, 0, !dbg !3630
  %301 = add i32 %295, 1, !dbg !3628
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3403
  br i1 %300, label %361, label %293, !llvm.loop !3632

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3417
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3417
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3407
  call void @llvm.dbg.value(metadata i32 %305, metadata !3281, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %304, metadata !3342, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i8 %303, metadata !3346, metadata !DIExpression()), !dbg !3417
  %306 = icmp eq i8 %303, 0, !dbg !3634
  br i1 %306, label %312, label %307, !dbg !3635

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !3636
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %309, metadata !3380, metadata !DIExpression()), !dbg !3638
  %310 = icmp slt i32 %309, 0, !dbg !3639
  %311 = add i32 %305, 1, !dbg !3637
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3403
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3407
  call void @llvm.dbg.value(metadata i32 %313, metadata !3281, metadata !DIExpression()), !dbg !3403
  %314 = lshr i24 %246, 20, !dbg !3641
  %315 = lshr i24 %246, 19, !dbg !3642
  %316 = or i24 %314, %315, !dbg !3643
  %317 = and i24 %316, 1, !dbg !3643
  %318 = icmp eq i24 %317, 0, !dbg !3643
  br i1 %318, label %323, label %319, !dbg !3644

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %320, metadata !3384, metadata !DIExpression()), !dbg !3646
  %321 = icmp slt i32 %320, 0, !dbg !3647
  %322 = add i32 %313, 1, !dbg !3645
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3403
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3407
  call void @llvm.dbg.value(metadata i32 %324, metadata !3281, metadata !DIExpression()), !dbg !3403
  %325 = and i24 %246, 1048576, !dbg !3649
  %326 = icmp eq i24 %325, 0, !dbg !3649
  br i1 %326, label %333, label %327, !dbg !3650

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !3651
  %329 = zext i8 %328 to i32, !dbg !3651
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !3651
  call void @llvm.dbg.value(metadata i32 %330, metadata !3390, metadata !DIExpression()), !dbg !3652
  %331 = icmp slt i32 %330, 0, !dbg !3653
  %332 = add i32 %324, 1, !dbg !3651
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3403
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3407
  call void @llvm.dbg.value(metadata i32 %334, metadata !3281, metadata !DIExpression()), !dbg !3403
  %335 = load i32, i32* %16, align 4, !dbg !3655
  call void @llvm.dbg.value(metadata i32 %335, metadata !3365, metadata !DIExpression()), !dbg !3417
  br label %336, !dbg !3656

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !3657
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3407
  call void @llvm.dbg.value(metadata i32 %338, metadata !3281, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %337, metadata !3365, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3417
  %339 = icmp sgt i32 %337, 0, !dbg !3658
  br i1 %339, label %340, label %345, !dbg !3656

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !3659
  call void @llvm.dbg.value(metadata i32 %341, metadata !3365, metadata !DIExpression()), !dbg !3417
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !3660
  call void @llvm.dbg.value(metadata i32 %342, metadata !3394, metadata !DIExpression()), !dbg !3661
  %343 = icmp slt i32 %342, 0, !dbg !3662
  %344 = add i32 %338, 1, !dbg !3660
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3403
  br i1 %343, label %361, label %336, !llvm.loop !3664

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %346, metadata !3397, metadata !DIExpression()), !dbg !3667
  %347 = icmp slt i32 %346, 0, !dbg !3668
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3403
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %349, metadata !3281, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %304, metadata !3342, metadata !DIExpression()), !dbg !3417
  %350 = icmp sgt i32 %304, 0, !dbg !3670
  br i1 %350, label %351, label %363, !dbg !3671

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !3671
  %353 = add i32 %352, %338, !dbg !3671
  br label %354, !dbg !3671

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %355, metadata !3342, metadata !DIExpression()), !dbg !3417
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !3672
  call void @llvm.dbg.value(metadata i32 %356, metadata !3399, metadata !DIExpression()), !dbg !3673
  %357 = icmp slt i32 %356, 0, !dbg !3674
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !3676
  call void @llvm.dbg.value(metadata i32 undef, metadata !3281, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %359, metadata !3342, metadata !DIExpression()), !dbg !3417
  %360 = icmp sgt i32 %355, 1, !dbg !3670
  br i1 %360, label %354, label %363, !dbg !3671, !llvm.loop !3677

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3281, metadata !DIExpression()), !dbg !3403
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3414
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3407
  call void @llvm.dbg.value(metadata i32 %364, metadata !3281, metadata !DIExpression()), !dbg !3403
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3414
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3403
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3679
  ret i32 %366, !dbg !3679
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #11

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !3680 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3684, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i8* %1, metadata !3685, metadata !DIExpression()), !dbg !3686
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !3687
  store i24 0, i24* %3, align 4, !dbg !3687
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3687
  store i8 0, i8* %4, align 1, !dbg !3687
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3687
  store i32 0, i32* %5, align 4, !dbg !3687
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3687
  store i32 0, i32* %6, align 4, !dbg !3687
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3688
  call void @llvm.dbg.value(metadata i8* %7, metadata !3685, metadata !DIExpression()), !dbg !3686
  %8 = load i8, i8* %7, align 1, !dbg !3689
  %9 = icmp eq i8 %8, 37, !dbg !3691
  br i1 %9, label %10, label %12, !dbg !3692

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3693
  call void @llvm.dbg.value(metadata i8* %11, metadata !3685, metadata !DIExpression()), !dbg !3686
  store i8 37, i8* %4, align 1, !dbg !3695
  br label %18, !dbg !3696

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !3697
  call void @llvm.dbg.value(metadata i8* %13, metadata !3685, metadata !DIExpression()), !dbg !3686
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !3698
  call void @llvm.dbg.value(metadata i8* %14, metadata !3685, metadata !DIExpression()), !dbg !3686
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !3699
  call void @llvm.dbg.value(metadata i8* %15, metadata !3685, metadata !DIExpression()), !dbg !3686
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !3700
  call void @llvm.dbg.value(metadata i8* %16, metadata !3685, metadata !DIExpression()), !dbg !3686
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !3701
  call void @llvm.dbg.value(metadata i8* %17, metadata !3685, metadata !DIExpression()), !dbg !3686
  br label %18, !dbg !3702

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !3686
  ret i8* %19, !dbg !3703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !3704 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3708, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i8* %1, metadata !3709, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i8* %2, metadata !3710, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i8* %3, metadata !3711, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i32 0, metadata !3712, metadata !DIExpression()), !dbg !3715
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !3716

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !3717
  call void @llvm.dbg.value(metadata i32 %9, metadata !3712, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i8* %8, metadata !3710, metadata !DIExpression()), !dbg !3715
  %10 = icmp ult i8* %8, %3, !dbg !3718
  br i1 %10, label %11, label %13, !dbg !3719

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !3720
  br label %17, !dbg !3719

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !3721

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !3722
  %16 = icmp eq i8 %15, 0, !dbg !3721
  br i1 %16, label %24, label %17, !dbg !3716

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !3720
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3723
  call void @llvm.dbg.value(metadata i8* %19, metadata !3710, metadata !DIExpression()), !dbg !3715
  %20 = zext i8 %18 to i32, !dbg !3724
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !3725
  call void @llvm.dbg.value(metadata i32 %21, metadata !3713, metadata !DIExpression()), !dbg !3726
  %22 = icmp slt i32 %21, 0, !dbg !3727
  %23 = add i32 %9, 1, !dbg !3729
  call void @llvm.dbg.value(metadata i32 undef, metadata !3712, metadata !DIExpression()), !dbg !3715
  br i1 %22, label %24, label %7, !llvm.loop !3730

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !3715
  ret i32 %25, !dbg !3732
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #12 !dbg !3733 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3737, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !3738, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i8* %2, metadata !3739, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i8* %3, metadata !3740, metadata !DIExpression()), !dbg !3747
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !3748
  %6 = load i8, i8* %5, align 1, !dbg !3748
  %7 = zext i8 %6 to i32, !dbg !3749
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !3750
  %9 = icmp eq i32 %8, 0, !dbg !3750
  call void @llvm.dbg.value(metadata i1 %9, metadata !3741, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3747
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !3751
  call void @llvm.dbg.value(metadata i32 %10, metadata !3742, metadata !DIExpression()), !dbg !3747
  %11 = ptrtoint i8* %3 to i32, !dbg !3752
  %12 = ptrtoint i8* %2 to i32, !dbg !3752
  %13 = sub i32 %11, %12, !dbg !3752
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !3753
  call void @llvm.dbg.value(metadata i8* %14, metadata !3744, metadata !DIExpression()), !dbg !3747
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !3754

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !3747
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !3737, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i8* %18, metadata !3744, metadata !DIExpression()), !dbg !3747
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !3755
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %25, metadata !3745, metadata !DIExpression()), !dbg !3757
  %26 = icmp ult i32 %25, 10, !dbg !3758
  %27 = select i1 %26, i32 48, i32 %16, !dbg !3759
  %28 = add i32 %27, %25, !dbg !3757
  %29 = trunc i32 %28 to i8, !dbg !3759
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !3760
  call void @llvm.dbg.value(metadata i8* %30, metadata !3744, metadata !DIExpression()), !dbg !3747
  store i8 %29, i8* %30, align 1, !dbg !3761
  call void @llvm.dbg.value(metadata i64 %22, metadata !3737, metadata !DIExpression()), !dbg !3747
  %31 = icmp uge i64 %19, %15, !dbg !3762
  %32 = icmp ugt i8* %30, %2, !dbg !3763
  %33 = and i1 %31, %32, !dbg !3763
  br i1 %33, label %17, label %34, !dbg !3764, !llvm.loop !3765

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !3767
  %36 = load i24, i24* %35, align 4, !dbg !3767
  %37 = and i24 %36, 32, !dbg !3767
  %38 = icmp eq i24 %37, 0, !dbg !3767
  br i1 %38, label %44, label %39, !dbg !3769

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !3770

40:                                               ; preds = %39
  br label %41, !dbg !3772

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !3776
  store i24 %43, i24* %35, align 4, !dbg !3776
  br label %44, !dbg !3777

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !3777
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !3778 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3784, metadata !DIExpression()), !dbg !3787
  call void @llvm.dbg.value(metadata i8* %1, metadata !3785, metadata !DIExpression()), !dbg !3787
  call void @llvm.dbg.value(metadata i32 %2, metadata !3786, metadata !DIExpression()), !dbg !3787
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3788
  %5 = load i24, i24* %4, align 4, !dbg !3788
  %6 = lshr i24 %5, 11, !dbg !3788
  %7 = and i24 %6, 15, !dbg !3788
  %8 = zext i24 %7 to i32, !dbg !3788
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !3789

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !3790
  store i32 %2, i32* %10, align 4, !dbg !3792
  br label %28, !dbg !3793

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !3794
  store i8 %12, i8* %1, align 1, !dbg !3795
  br label %28, !dbg !3796

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !3797
  %15 = bitcast i8* %1 to i16*, !dbg !3798
  store i16 %14, i16* %15, align 2, !dbg !3799
  br label %28, !dbg !3800

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !3801
  store i32 %2, i32* %17, align 4, !dbg !3802
  br label %28, !dbg !3803

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !3804
  %20 = bitcast i8* %1 to i64*, !dbg !3805
  store i64 %19, i64* %20, align 8, !dbg !3806
  br label %28, !dbg !3807

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !3808
  %23 = bitcast i8* %1 to i64*, !dbg !3809
  store i64 %22, i64* %23, align 8, !dbg !3810
  br label %28, !dbg !3811

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !3812
  store i32 %2, i32* %25, align 4, !dbg !3813
  br label %28, !dbg !3814

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !3815
  store i32 %2, i32* %27, align 4, !dbg !3816
  br label %28, !dbg !3817

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !3818
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #2 !dbg !3819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3822, metadata !DIExpression()), !dbg !3823
  %2 = add i32 %0, -65, !dbg !3824
  %3 = icmp ult i32 %2, 26, !dbg !3825
  %4 = zext i1 %3 to i32, !dbg !3825
  ret i32 %4, !dbg !3826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #2 !dbg !3827 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3831, metadata !DIExpression()), !dbg !3832
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !3833

2:                                                ; preds = %1
  br label %4, !dbg !3834

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !3836

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !3837
  ret i32 %5, !dbg !3838
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #12 !dbg !3839 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3841, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i8* %1, metadata !3842, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i8 1, metadata !3843, metadata !DIExpression()), !dbg !3844
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !3845

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !3843, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i8* %5, metadata !3842, metadata !DIExpression()), !dbg !3844
  %6 = load i8, i8* %5, align 1, !dbg !3846
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !3848

7:                                                ; preds = %4
  br label %11, !dbg !3849

8:                                                ; preds = %4
  br label %11, !dbg !3851

9:                                                ; preds = %4
  br label %11, !dbg !3852

10:                                               ; preds = %4
  br label %11, !dbg !3853

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !3854
  %14 = or i24 %13, %12, !dbg !3854
  store i24 %14, i24* %3, align 4, !dbg !3854
  call void @llvm.dbg.value(metadata i8 poison, metadata !3843, metadata !DIExpression()), !dbg !3844
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !3842, metadata !DIExpression()), !dbg !3844
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !3843, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i8* %15, metadata !3842, metadata !DIExpression()), !dbg !3844
  %17 = load i24, i24* %3, align 4, !dbg !3855
  %18 = and i24 %17, 68, !dbg !3857
  %19 = icmp eq i24 %18, 68, !dbg !3857
  br i1 %19, label %20, label %22, !dbg !3857

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !3858
  store i24 %21, i24* %3, align 4, !dbg !3858
  br label %22, !dbg !3860

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !3861
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !3862 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3864, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i8* %1, metadata !3865, metadata !DIExpression()), !dbg !3868
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3869
  %5 = load i24, i24* %4, align 4, !dbg !3870
  %6 = or i24 %5, 128, !dbg !3870
  store i24 %6, i24* %4, align 4, !dbg !3870
  call void @llvm.dbg.value(metadata i8* %1, metadata !3865, metadata !DIExpression()), !dbg !3868
  %7 = load i8, i8* %1, align 1, !dbg !3871
  %8 = icmp eq i8 %7, 42, !dbg !3873
  br i1 %8, label %9, label %12, !dbg !3874

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !3875
  store i24 %10, i24* %4, align 4, !dbg !3875
  call void @llvm.dbg.value(metadata i8* %1, metadata !3865, metadata !DIExpression()), !dbg !3868
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3877
  call void @llvm.dbg.value(metadata i8* %11, metadata !3865, metadata !DIExpression()), !dbg !3868
  store i8* %11, i8** %3, align 4, !dbg !3877
  br label %29, !dbg !3878

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3866, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i8** %3, metadata !3865, metadata !DIExpression(DW_OP_deref)), !dbg !3868
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !3879
  call void @llvm.dbg.value(metadata i32 %13, metadata !3867, metadata !DIExpression()), !dbg !3868
  %14 = load i8*, i8** %3, align 4, !dbg !3880
  call void @llvm.dbg.value(metadata i8* %14, metadata !3865, metadata !DIExpression()), !dbg !3868
  %15 = icmp eq i8* %14, %1, !dbg !3882
  br i1 %15, label %29, label %16, !dbg !3883

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !3884
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3886
  store i32 %13, i32* %18, align 4, !dbg !3887
  %19 = lshr i32 %13, 31, !dbg !3888
  %20 = lshr i24 %17, 1, !dbg !3889
  %21 = and i24 %20, 1, !dbg !3889
  %22 = zext i24 %21 to i32, !dbg !3889
  %23 = or i32 %19, %22, !dbg !3889
  %24 = trunc i32 %23 to i24, !dbg !3889
  %25 = shl nuw nsw i24 %24, 1, !dbg !3889
  %26 = and i24 %17, -131, !dbg !3889
  %27 = or i24 %26, 128, !dbg !3889
  %28 = or i24 %25, %27, !dbg !3889
  store i24 %28, i24* %4, align 4, !dbg !3889
  br label %29, !dbg !3890

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !3868
  ret i8* %30, !dbg !3891
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !3892 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3894, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i8* %1, metadata !3895, metadata !DIExpression()), !dbg !3897
  %4 = load i8, i8* %1, align 1, !dbg !3898
  %5 = icmp eq i8 %4, 46, !dbg !3899
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !3900
  %7 = load i24, i24* %6, align 4, !dbg !3901
  %8 = select i1 %5, i24 512, i24 0, !dbg !3901
  %9 = and i24 %7, -513, !dbg !3901
  %10 = or i24 %9, %8, !dbg !3901
  store i24 %10, i24* %6, align 4, !dbg !3901
  br i1 %5, label %11, label %32, !dbg !3902

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3895, metadata !DIExpression()), !dbg !3897
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3903
  call void @llvm.dbg.value(metadata i8* %12, metadata !3895, metadata !DIExpression()), !dbg !3897
  store i8* %12, i8** %3, align 4, !dbg !3903
  %13 = load i8, i8* %12, align 1, !dbg !3904
  %14 = icmp eq i8 %13, 42, !dbg !3906
  br i1 %14, label %15, label %18, !dbg !3907

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !3908
  store i24 %16, i24* %6, align 4, !dbg !3908
  call void @llvm.dbg.value(metadata i8* %12, metadata !3895, metadata !DIExpression()), !dbg !3897
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3910
  call void @llvm.dbg.value(metadata i8* %17, metadata !3895, metadata !DIExpression()), !dbg !3897
  store i8* %17, i8** %3, align 4, !dbg !3910
  br label %32, !dbg !3911

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !3895, metadata !DIExpression(DW_OP_deref)), !dbg !3897
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !3912
  call void @llvm.dbg.value(metadata i32 %19, metadata !3896, metadata !DIExpression()), !dbg !3897
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3913
  store i32 %19, i32* %20, align 4, !dbg !3914
  %21 = lshr i32 %19, 31, !dbg !3915
  %22 = load i24, i24* %6, align 4, !dbg !3916
  %23 = lshr i24 %22, 1, !dbg !3916
  %24 = and i24 %23, 1, !dbg !3916
  %25 = zext i24 %24 to i32, !dbg !3916
  %26 = or i32 %21, %25, !dbg !3916
  %27 = trunc i32 %26 to i24, !dbg !3916
  %28 = shl nuw nsw i24 %27, 1, !dbg !3916
  %29 = and i24 %22, -3, !dbg !3916
  %30 = or i24 %28, %29, !dbg !3916
  store i24 %30, i24* %6, align 4, !dbg !3916
  %31 = load i8*, i8** %3, align 4, !dbg !3917
  call void @llvm.dbg.value(metadata i8* %31, metadata !3895, metadata !DIExpression()), !dbg !3897
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !3897
  ret i8* %33, !dbg !3918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !3919 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3921, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.value(metadata i8* %1, metadata !3922, metadata !DIExpression()), !dbg !3923
  %3 = load i8, i8* %1, align 1, !dbg !3924
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !3925

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3926
  call void @llvm.dbg.value(metadata i8* %5, metadata !3922, metadata !DIExpression()), !dbg !3923
  %6 = load i8, i8* %5, align 1, !dbg !3929
  %7 = icmp eq i8 %6, 104, !dbg !3930
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !3931
  %9 = load i24, i24* %8, align 4, !dbg !3931
  %10 = and i24 %9, -30721, !dbg !3931
  br i1 %7, label %11, label %14, !dbg !3932

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !3933
  store i24 %12, i24* %8, align 4, !dbg !3933
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3935
  call void @llvm.dbg.value(metadata i8* %13, metadata !3922, metadata !DIExpression()), !dbg !3923
  br label %56, !dbg !3936

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !3937
  store i24 %15, i24* %8, align 4, !dbg !3937
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3939
  call void @llvm.dbg.value(metadata i8* %17, metadata !3922, metadata !DIExpression()), !dbg !3923
  %18 = load i8, i8* %17, align 1, !dbg !3941
  %19 = icmp eq i8 %18, 108, !dbg !3942
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !3943
  %21 = load i24, i24* %20, align 4, !dbg !3943
  %22 = and i24 %21, -30721, !dbg !3943
  br i1 %19, label %23, label %26, !dbg !3944

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !3945
  store i24 %24, i24* %20, align 4, !dbg !3945
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3947
  call void @llvm.dbg.value(metadata i8* %25, metadata !3922, metadata !DIExpression()), !dbg !3923
  br label %56, !dbg !3948

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !3949
  store i24 %27, i24* %20, align 4, !dbg !3949
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !3951
  %30 = load i24, i24* %29, align 4, !dbg !3952
  %31 = and i24 %30, -30721, !dbg !3952
  %32 = or i24 %31, 10240, !dbg !3952
  store i24 %32, i24* %29, align 4, !dbg !3952
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3953
  call void @llvm.dbg.value(metadata i8* %33, metadata !3922, metadata !DIExpression()), !dbg !3923
  br label %56, !dbg !3954

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !3955
  %36 = load i24, i24* %35, align 4, !dbg !3956
  %37 = and i24 %36, -30721, !dbg !3956
  %38 = or i24 %37, 12288, !dbg !3956
  store i24 %38, i24* %35, align 4, !dbg !3956
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3957
  call void @llvm.dbg.value(metadata i8* %39, metadata !3922, metadata !DIExpression()), !dbg !3923
  br label %56, !dbg !3958

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !3959
  %42 = load i24, i24* %41, align 4, !dbg !3960
  %43 = and i24 %42, -30721, !dbg !3960
  %44 = or i24 %43, 14336, !dbg !3960
  store i24 %44, i24* %41, align 4, !dbg !3960
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3961
  call void @llvm.dbg.value(metadata i8* %45, metadata !3922, metadata !DIExpression()), !dbg !3923
  br label %56, !dbg !3962

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !3963
  %48 = load i24, i24* %47, align 4, !dbg !3964
  %49 = and i24 %48, -30723, !dbg !3964
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3965
  call void @llvm.dbg.value(metadata i8* %50, metadata !3922, metadata !DIExpression()), !dbg !3923
  %51 = or i24 %49, 16386, !dbg !3966
  store i24 %51, i24* %47, align 4, !dbg !3966
  br label %56, !dbg !3967

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !3968
  %54 = load i24, i24* %53, align 4, !dbg !3969
  %55 = and i24 %54, -30721, !dbg !3969
  store i24 %55, i24* %53, align 4, !dbg !3969
  br label %56, !dbg !3970

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !3922, metadata !DIExpression()), !dbg !3923
  ret i8* %57, !dbg !3971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !3972 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3974, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata i8* %1, metadata !3975, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata i8 0, metadata !3976, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata i8* %1, metadata !3975, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3979
  %3 = load i8, i8* %1, align 1, !dbg !3980
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3981
  store i8 %3, i8* %4, align 1, !dbg !3982
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !3983

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !3984

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !3985
  %9 = load i24, i24* %8, align 4, !dbg !3985
  %10 = and i24 %9, -458753, !dbg !3985
  %11 = or i24 %10, %7, !dbg !3985
  call void @llvm.dbg.label(metadata !3977), !dbg !3986
  %12 = and i24 %9, 30720, !dbg !3987
  %13 = icmp eq i24 %12, 16384, !dbg !3987
  %14 = zext i1 %13 to i24, !dbg !3989
  %15 = or i24 %11, %14, !dbg !3989
  %16 = icmp eq i8 %3, 99, !dbg !3990
  br i1 %16, label %17, label %43, !dbg !3992

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !3993
  %19 = icmp ne i24 %18, 0, !dbg !3993
  call void @llvm.dbg.value(metadata i1 %19, metadata !3976, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3979
  br label %43, !dbg !3995

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !3996
  %22 = load i24, i24* %21, align 4, !dbg !3997
  %23 = and i24 %22, -458753, !dbg !3997
  %24 = or i24 %23, 262144, !dbg !3997
  call void @llvm.dbg.value(metadata i8 1, metadata !3976, metadata !DIExpression()), !dbg !3979
  br label %43, !dbg !3998

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4001
  %27 = load i24, i24* %26, align 4, !dbg !4002
  %28 = and i24 %27, -458753, !dbg !4002
  %29 = or i24 %28, 196608, !dbg !4002
  %30 = and i24 %27, 30720, !dbg !4003
  %31 = icmp eq i24 %30, 16384, !dbg !4003
  br label %43, !dbg !4005

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4006
  %34 = load i24, i24* %33, align 4, !dbg !4007
  %35 = and i24 %34, -458753, !dbg !4007
  %36 = or i24 %35, 196608, !dbg !4007
  %37 = and i24 %34, 30720, !dbg !4008
  %38 = icmp ne i24 %37, 0, !dbg !4008
  br label %43, !dbg !4010

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4011
  %41 = load i24, i24* %40, align 4, !dbg !4012
  %42 = or i24 %41, 1, !dbg !4012
  br label %43, !dbg !4013

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4014
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4015
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4016
  call void @llvm.dbg.value(metadata i8* %48, metadata !3975, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata i8 poison, metadata !3976, metadata !DIExpression()), !dbg !3979
  %49 = lshr i24 %44, 1, !dbg !4014
  %50 = and i24 %49, 1, !dbg !4014
  %51 = zext i24 %50 to i32, !dbg !4014
  %52 = or i32 %51, %47, !dbg !4014
  %53 = trunc i32 %52 to i24, !dbg !4014
  %54 = shl nuw nsw i24 %53, 1, !dbg !4014
  %55 = and i24 %44, -3, !dbg !4014
  %56 = or i24 %54, %55, !dbg !4014
  store i24 %56, i24* %46, align 4, !dbg !4014
  ret i8* %48, !dbg !4017
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #12 !dbg !4018 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4023, metadata !DIExpression()), !dbg !4026
  %2 = load i8*, i8** %0, align 4, !dbg !4027
  call void @llvm.dbg.value(metadata i8* %2, metadata !4024, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.value(metadata i32 0, metadata !4025, metadata !DIExpression()), !dbg !4026
  %3 = load i8, i8* %2, align 1, !dbg !4028
  %4 = zext i8 %3 to i32, !dbg !4029
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !4030
  %6 = icmp eq i32 %5, 0, !dbg !4031
  br i1 %6, label %19, label %7, !dbg !4031

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4025, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.value(metadata i8* %10, metadata !4024, metadata !DIExpression()), !dbg !4026
  %11 = mul i32 %9, 10, !dbg !4032
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4034
  call void @llvm.dbg.value(metadata i8* %12, metadata !4024, metadata !DIExpression()), !dbg !4026
  %13 = add i32 %11, -48, !dbg !4035
  %14 = add i32 %13, %8, !dbg !4036
  call void @llvm.dbg.value(metadata i32 %14, metadata !4025, metadata !DIExpression()), !dbg !4026
  %15 = load i8, i8* %12, align 1, !dbg !4028
  %16 = zext i8 %15 to i32, !dbg !4029
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !4030
  %18 = icmp eq i32 %17, 0, !dbg !4031
  br i1 %18, label %19, label %7, !dbg !4031, !llvm.loop !4037

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4026
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4026
  store i8* %20, i8** %0, align 4, !dbg !4039
  ret i32 %21, !dbg !4040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #2 !dbg !4041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4043, metadata !DIExpression()), !dbg !4044
  %2 = add i32 %0, -48, !dbg !4045
  %3 = icmp ult i32 %2, 10, !dbg !4046
  %4 = zext i1 %3 to i32, !dbg !4046
  ret i32 %4, !dbg !4047
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4048 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4050, !srcloc !4051
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4052, !srcloc !4053
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4054, !srcloc !4055
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4056, !srcloc !4057
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4058, !srcloc !4059
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4060, !srcloc !4061
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4062, !srcloc !4063
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4064, !srcloc !4065
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4066, !srcloc !4067
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4068, !srcloc !4069
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4070, !srcloc !4071
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4072, !srcloc !4073
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4074, !srcloc !4075
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4076, !srcloc !4077
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4078, !srcloc !4079
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4080, !srcloc !4081
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4082, !srcloc !4083
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4084, !srcloc !4085
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4086, !srcloc !4087
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4088, !srcloc !4089
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4090, !srcloc !4091
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4092, !srcloc !4093
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4094, !srcloc !4095
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4096, !srcloc !4097
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4098, !srcloc !4099
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4100, !srcloc !4101
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4102, !srcloc !4103
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4104, !srcloc !4105
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4106, !srcloc !4107
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !4108, !srcloc !4109
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4110, !srcloc !4111
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4112, !srcloc !4113
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4114, !srcloc !4115
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !4116, !srcloc !4117
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !4118, !srcloc !4119
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !4120, !srcloc !4121
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !4122, !srcloc !4123
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4124, !srcloc !4125
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4126, !srcloc !4127
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4128, !srcloc !4129
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !4130, !srcloc !4131
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4132, !srcloc !4133
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !4134, !srcloc !4135
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4136, !srcloc !4137
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4138, !srcloc !4139
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !4140, !srcloc !4141
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4142, !srcloc !4143
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4144, !srcloc !4145
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4146, !srcloc !4147
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !4148, !srcloc !4149
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4150, !srcloc !4151
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4152, !srcloc !4153
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4154, !srcloc !4155
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4156, !srcloc !4157
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4158, !srcloc !4159
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4160, !srcloc !4161
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4162, !srcloc !4163
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4164, !srcloc !4165
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4166, !srcloc !4167
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4168, !srcloc !4169
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4170, !srcloc !4171
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4172, !srcloc !4173
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4174, !srcloc !4175
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4176, !srcloc !4177
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4178, !srcloc !4179
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4180, !srcloc !4181
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4182, !srcloc !4183
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4184, !srcloc !4185
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4186, !srcloc !4187
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4188, !srcloc !4189
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4190, !srcloc !4191
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4192, !srcloc !4193
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4194, !srcloc !4195
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4196, !srcloc !4197
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4198, !srcloc !4199
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4200, !srcloc !4201
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4202, !srcloc !4203
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4204, !srcloc !4205
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4206, !srcloc !4207
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4208, !srcloc !4209
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4210, !srcloc !4211
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4212, !srcloc !4213
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4214, !srcloc !4215
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4216, !srcloc !4217
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4218, !srcloc !4219
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4220, !srcloc !4221
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4222, !srcloc !4223
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4224, !srcloc !4225
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !4226, !srcloc !4227
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4228, !srcloc !4229
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4230, !srcloc !4231
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4232, !srcloc !4233
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4234, !srcloc !4235
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4236, !srcloc !4237
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !4238, !srcloc !4239
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4240, !srcloc !4241
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4242, !srcloc !4243
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4244, !srcloc !4245
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4246, !srcloc !4247
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4248, !srcloc !4249
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4250, !srcloc !4251
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4252, !srcloc !4253
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4254, !srcloc !4255
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4256, !srcloc !4257
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4258, !srcloc !4259
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4260, !srcloc !4261
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4262, !srcloc !4263
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4264, !srcloc !4265
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4266, !srcloc !4267
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4268, !srcloc !4269
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4270, !srcloc !4271
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4272, !srcloc !4273
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4274, !srcloc !4275
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4276, !srcloc !4277
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4278, !srcloc !4279
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4280, !srcloc !4281
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4282, !srcloc !4283
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4284, !srcloc !4285
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4286, !srcloc !4287
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4288, !srcloc !4289
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4290, !srcloc !4291
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4292, !srcloc !4293
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4294, !srcloc !4295
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4296, !srcloc !4297
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4298, !srcloc !4299
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4300, !srcloc !4301
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4302, !srcloc !4303
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4304, !srcloc !4305
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4306, !srcloc !4307
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4308, !srcloc !4309
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4310, !srcloc !4311
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4312, !srcloc !4313
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4314, !srcloc !4315
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4316, !srcloc !4317
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4318, !srcloc !4319
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4320, !srcloc !4321
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4322, !srcloc !4323
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4324, !srcloc !4325
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4326, !srcloc !4327
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4328, !srcloc !4329
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4330, !srcloc !4331
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4332, !srcloc !4333
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4334, !srcloc !4335
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4336, !srcloc !4337
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4338, !srcloc !4339
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4340, !srcloc !4341
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4342, !srcloc !4343
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4344, !srcloc !4345
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4346, !srcloc !4347
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4348, !srcloc !4349
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4350, !srcloc !4351
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !4352, !srcloc !4353
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4354, !srcloc !4355
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4356, !srcloc !4357
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4358, !srcloc !4359
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4360, !srcloc !4361
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4362, !srcloc !4363
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4364, !srcloc !4365
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4366, !srcloc !4367
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4368, !srcloc !4369
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4370, !srcloc !4371
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4372, !srcloc !4373
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4374, !srcloc !4375
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4376, !srcloc !4377
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4378, !srcloc !4379
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4380, !srcloc !4381
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4382, !srcloc !4383
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4384, !srcloc !4385
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4386, !srcloc !4387
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4388, !srcloc !4389
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4390, !srcloc !4391
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4392, !srcloc !4393
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4394, !srcloc !4395
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4396, !srcloc !4397
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4398, !srcloc !4399
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4400, !srcloc !4401
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4402, !srcloc !4403
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4404, !srcloc !4405
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4406, !srcloc !4407
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4408, !srcloc !4409
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4410, !srcloc !4411
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4412, !srcloc !4413
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4414, !srcloc !4415
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4416, !srcloc !4417
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4418, !srcloc !4419
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4420, !srcloc !4421
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4422, !srcloc !4423
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4424, !srcloc !4425
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4426, !srcloc !4427
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4428, !srcloc !4429
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4430, !srcloc !4431
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4432, !srcloc !4433
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4434, !srcloc !4435
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4436, !srcloc !4437
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4438, !srcloc !4439
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4440, !srcloc !4441
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4442, !srcloc !4443
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4444, !srcloc !4445
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4446, !srcloc !4447
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4448, !srcloc !4449
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4450, !srcloc !4451
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4452, !srcloc !4453
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !4454, !srcloc !4455
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4456, !srcloc !4457
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4458, !srcloc !4459
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4460, !srcloc !4461
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4462, !srcloc !4463
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4464, !srcloc !4465
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4466, !srcloc !4467
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4468, !srcloc !4469
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4470, !srcloc !4471
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4472, !srcloc !4473
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4474, !srcloc !4475
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4476, !srcloc !4477
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4478, !srcloc !4479
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !4480, !srcloc !4481
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4482, !srcloc !4483
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !4484, !srcloc !4485
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4486, !srcloc !4487
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4488, !srcloc !4489
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4490, !srcloc !4491
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4492, !srcloc !4493
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4494, !srcloc !4495
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4496, !srcloc !4497
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4498, !srcloc !4499
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4500, !srcloc !4501
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4502, !srcloc !4503
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4504, !srcloc !4505
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4506, !srcloc !4507
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4508, !srcloc !4509
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4510, !srcloc !4511
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4512, !srcloc !4513
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4514, !srcloc !4515
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4516, !srcloc !4517
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4518, !srcloc !4519
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4520, !srcloc !4521
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4522, !srcloc !4523
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4524, !srcloc !4525
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4526, !srcloc !4527
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4528, !srcloc !4529
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4530, !srcloc !4531
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4532, !srcloc !4533
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4534, !srcloc !4535
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4536, !srcloc !4537
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4538, !srcloc !4539
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4540, !srcloc !4541
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4542, !srcloc !4543
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4544, !srcloc !4545
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4546, !srcloc !4547
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4548, !srcloc !4549
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4550, !srcloc !4551
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4552, !srcloc !4553
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4554, !srcloc !4555
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4556, !srcloc !4557
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4558, !srcloc !4559
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4560, !srcloc !4561
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4562, !srcloc !4563
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4564, !srcloc !4565
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4566, !srcloc !4567
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4568, !srcloc !4569
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !4570, !srcloc !4571
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !4572, !srcloc !4573
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !4574, !srcloc !4575
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !4576, !srcloc !4577
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !4578, !srcloc !4579
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !4580, !srcloc !4581
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !4582, !srcloc !4583
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !4584, !srcloc !4585
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !4586, !srcloc !4587
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !4588, !srcloc !4589
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !4590, !srcloc !4591
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !4592, !srcloc !4593
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !4594, !srcloc !4595
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !4596, !srcloc !4597
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !4598, !srcloc !4599
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !4600, !srcloc !4601
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !4602, !srcloc !4603
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !4604, !srcloc !4605
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !4606, !srcloc !4607
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !4608, !srcloc !4609
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !4610, !srcloc !4611
  ret void, !dbg !4612
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4613 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4615, metadata !DIExpression()), !dbg !4617
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !4618
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !4619
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4620, !srcloc !4629
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4620
  call void @llvm.dbg.value(metadata i32 %3, metadata !4626, metadata !DIExpression()) #23, !dbg !4630
  call void @llvm.dbg.value(metadata i32 undef, metadata !4627, metadata !DIExpression()) #23, !dbg !4630
  call void @llvm.dbg.value(metadata i32 %3, metadata !4616, metadata !DIExpression()), !dbg !4617
  call void @llvm.dbg.value(metadata i32 %3, metadata !4631, metadata !DIExpression()) #23, !dbg !4636
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !4638, !srcloc !4639
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !4640
  ret i32 0, !dbg !4641
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !4642 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4644
  %2 = or i32 %1, 512, !dbg !4644
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4644
  ret void, !dbg !4645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !4646 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4647
  %2 = or i32 %1, 1024, !dbg !4647
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4647
  ret void, !dbg !4648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #2 !dbg !4649 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4651, metadata !DIExpression()), !dbg !4652
  ret i32 0, !dbg !4653
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !4654 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4703, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !4704, metadata !DIExpression()), !dbg !4705
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !4706
  ret void, !dbg !4707
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !4708 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !4725, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !4726, metadata !DIExpression()), !dbg !4728
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4729
  %4 = load i32, i32* %3, align 4, !dbg !4729
  call void @llvm.dbg.value(metadata i32 %4, metadata !4727, metadata !DIExpression()), !dbg !4728
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !4730
  ret void, !dbg !4731
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !4732 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4736, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i8* %0, metadata !4737, metadata !DIExpression()), !dbg !4739
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !4740
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !4740
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !4738, metadata !DIExpression()), !dbg !4741
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !4741
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4742
  %5 = bitcast i8* %4 to i32*, !dbg !4742
  %6 = load i32, i32* %5, align 4, !dbg !4742
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !4743
  store i32 %6, i32* %7, align 4, !dbg !4744
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !4745
  unreachable, !dbg !4746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !4747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4750, metadata !DIExpression()), !dbg !4751
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !4752
  ret void, !dbg !4753
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4758, metadata !DIExpression()), !dbg !4759
  %2 = icmp sgt i32 %0, -1, !dbg !4760
  br i1 %2, label %3, label %8, !dbg !4762

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4763, !srcloc !4765
  %4 = and i32 %0, 31, !dbg !4766
  %5 = shl nuw i32 1, %4, !dbg !4767
  %6 = lshr i32 %0, 5, !dbg !4768
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4769
  store volatile i32 %5, i32* %7, align 4, !dbg !4770
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4771, !srcloc !4772
  br label %8, !dbg !4773

8:                                                ; preds = %3, %1
  ret void, !dbg !4774
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !4775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4777, metadata !DIExpression()), !dbg !4778
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !4779
  ret void, !dbg !4780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4783, metadata !DIExpression()), !dbg !4784
  %2 = icmp sgt i32 %0, -1, !dbg !4785
  br i1 %2, label %3, label %8, !dbg !4787

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4788
  %5 = shl nuw i32 1, %4, !dbg !4790
  %6 = lshr i32 %0, 5, !dbg !4791
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4792
  store volatile i32 %5, i32* %7, align 4, !dbg !4793
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4794, !srcloc !4798
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4799, !srcloc !4802
  br label %8, !dbg !4803

8:                                                ; preds = %3, %1
  ret void, !dbg !4804
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !4805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4809, metadata !DIExpression()), !dbg !4810
  %2 = lshr i32 %0, 5, !dbg !4811
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !4812
  %4 = load volatile i32, i32* %3, align 4, !dbg !4812
  %5 = and i32 %0, 31, !dbg !4813
  %6 = shl nuw i32 1, %5, !dbg !4813
  %7 = and i32 %4, %6, !dbg !4814
  ret i32 %7, !dbg !4815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !4816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4820, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i32 %1, metadata !4821, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i32 %2, metadata !4822, metadata !DIExpression()), !dbg !4823
  %4 = add i32 %1, 1, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %4, metadata !4821, metadata !DIExpression()), !dbg !4823
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !4827
  ret void, !dbg !4828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4833, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 %1, metadata !4834, metadata !DIExpression()), !dbg !4835
  %3 = trunc i32 %1 to i8, !dbg !4836
  %4 = shl i8 %3, 4, !dbg !4836
  %5 = and i32 %0, 15, !dbg !4838
  %6 = add nsw i32 %5, -4, !dbg !4838
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4838
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4838
  %9 = icmp slt i32 %0, 0, !dbg !4838
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4838
  store volatile i8 %4, i8* %10, align 1, !dbg !4836
  ret void, !dbg !4839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !4840 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4842, metadata !DIExpression()), !dbg !4843
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !4844
  ret void, !dbg !4845
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !4846 {
  tail call void @z_SysNmiOnReset() #25, !dbg !4848
  tail call void @z_arm_int_exit() #25, !dbg !4849
  ret void, !dbg !4850
}

; Function Attrs: optsize
declare !dbg !4851 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !4852 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #9 !dbg !4854 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !4856
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !4857
  tail call void @z_bss_zero() #25, !dbg !4858
  tail call void @z_data_copy() #25, !dbg !4859
  tail call void @z_arm_interrupt_init() #25, !dbg !4860
  tail call void @z_cstart() #27, !dbg !4861
  unreachable, !dbg !4861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !4862 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !4863
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4864, !srcloc !4867
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4868, !srcloc !4871
  ret void, !dbg !4872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !4873 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4874
  %2 = and i32 %1, -15728641, !dbg !4874
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4874
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !4875, !srcloc !4882
  call void @llvm.dbg.value(metadata i32 %3, metadata !4880, metadata !DIExpression()) #23, !dbg !4883
  %4 = and i32 %3, -5, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %4, metadata !4885, metadata !DIExpression()) #23, !dbg !4890
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !4892, !srcloc !4893
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4894, !srcloc !4871
  ret void, !dbg !4896
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !4897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4900, metadata !DIExpression()), !dbg !4901
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4902
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !4903
  store i32 %0, i32* %3, align 4, !dbg !4904
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !4905
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !4906
  store i32 %4, i32* %5, align 4, !dbg !4907
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4908
  %7 = or i32 %6, 268435456, !dbg !4908
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4908
  call void @llvm.dbg.value(metadata i32 0, metadata !4909, metadata !DIExpression()) #23, !dbg !4912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !4914, !srcloc !4915
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4916
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !4917
  %10 = load i32, i32* %9, align 4, !dbg !4917
  ret i32 %10, !dbg !4918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !4919 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5029, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5030, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %2, metadata !5031, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5032, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %4, metadata !5033, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %5, metadata !5034, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %6, metadata !5035, metadata !DIExpression()), !dbg !5037
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5038
  call void @llvm.dbg.value(metadata i8* %8, metadata !5036, metadata !DIExpression()), !dbg !5037
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5039
  %10 = bitcast i8* %9 to i32*, !dbg !5039
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5040
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5041
  %12 = bitcast i8* %8 to i32*, !dbg !5042
  store i32 %11, i32* %12, align 4, !dbg !5043
  %13 = ptrtoint i8* %4 to i32, !dbg !5044
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5045
  %15 = bitcast i8* %14 to i32*, !dbg !5045
  store i32 %13, i32* %15, align 4, !dbg !5046
  %16 = ptrtoint i8* %5 to i32, !dbg !5047
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5048
  %18 = bitcast i8* %17 to i32*, !dbg !5048
  store i32 %16, i32* %18, align 4, !dbg !5049
  %19 = ptrtoint i8* %6 to i32, !dbg !5050
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5051
  %21 = bitcast i8* %20 to i32*, !dbg !5051
  store i32 %19, i32* %21, align 4, !dbg !5052
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5053
  %23 = bitcast i8* %22 to i32*, !dbg !5053
  store i32 16777216, i32* %23, align 4, !dbg !5054
  %24 = ptrtoint i8* %8 to i32, !dbg !5055
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5056
  store i32 %24, i32* %25, align 8, !dbg !5057
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5058
  store i32 0, i32* %26, align 4, !dbg !5059
  ret void, !dbg !5060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !5061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5066, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.value(metadata i32 %1, metadata !5067, metadata !DIExpression()), !dbg !5072
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5073
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5068, metadata !DIExpression()), !dbg !5072
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5074
  br i1 %4, label %19, label %5, !dbg !5076

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5071, metadata !DIExpression()), !dbg !5072
  %6 = icmp eq i32 %0, -22, !dbg !5077
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5077
  %8 = load i32, i32* %7, align 4, !dbg !5077
  br i1 %6, label %16, label %9, !dbg !5079

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5077
  %11 = icmp ule i32 %10, %0, !dbg !5077
  %12 = icmp ugt i32 %8, %0, !dbg !5077
  %13 = and i1 %12, %11, !dbg !5077
  %14 = icmp ugt i32 %8, %1, !dbg !5077
  %15 = and i1 %14, %13, !dbg !5077
  br i1 %15, label %18, label %19, !dbg !5077

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5077
  br i1 %17, label %18, label %19, !dbg !5079

18:                                               ; preds = %9, %16
  br label %19, !dbg !5080

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5072
  ret i32 %20, !dbg !5082
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #9 !dbg !5083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5087, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i8* %1, metadata !5088, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5089, metadata !DIExpression()), !dbg !5090
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5091
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !5092
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5093, !srcloc !5094
  unreachable, !dbg !5095
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5096 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5114, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 %1, metadata !5115, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 %2, metadata !5116, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5117, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 0, metadata !5118, metadata !DIExpression()), !dbg !5124
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5125
  %9 = and i32 %8, 511, !dbg !5126
  call void @llvm.dbg.value(metadata i32 %9, metadata !5119, metadata !DIExpression()), !dbg !5124
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5127
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5127
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5128
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5128
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5123, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i32 0, metadata !5130, metadata !DIExpression()) #23, !dbg !5133
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5135, !srcloc !5136
  call void @llvm.dbg.value(metadata i8* %6, metadata !5121, metadata !DIExpression(DW_OP_deref)), !dbg !5124
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !5137
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5122, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i8* %5, metadata !5120, metadata !DIExpression(DW_OP_deref)), !dbg !5124
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !5138
  call void @llvm.dbg.value(metadata i32 %12, metadata !5118, metadata !DIExpression()), !dbg !5124
  %13 = load i8, i8* %5, align 1, !dbg !5139, !range !5141
  call void @llvm.dbg.value(metadata i8 %13, metadata !5120, metadata !DIExpression()), !dbg !5124
  %14 = icmp eq i8 %13, 0, !dbg !5139
  br i1 %14, label %15, label %32, !dbg !5142

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5143
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !5144
  %18 = load i8, i8* %6, align 1, !dbg !5145, !range !5141
  call void @llvm.dbg.value(metadata i8 %18, metadata !5121, metadata !DIExpression()), !dbg !5124
  %19 = icmp eq i8 %18, 0, !dbg !5145
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5147
  %21 = load i32, i32* %20, align 4, !dbg !5147
  br i1 %19, label %27, label %22, !dbg !5148

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5149
  %24 = icmp eq i32 %23, 0, !dbg !5152
  br i1 %24, label %25, label %31, !dbg !5153

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5154
  br label %29, !dbg !5156

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5157
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5147
  br label %31, !dbg !5159

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !5159
  br label %32, !dbg !5160

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5160
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5160
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5160
  ret void, !dbg !5160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !5161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5166, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i32 %1, metadata !5167, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i32 %2, metadata !5168, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8* %3, metadata !5169, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8 0, metadata !5170, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5171, metadata !DIExpression()), !dbg !5172
  store i8 0, i8* %3, align 1, !dbg !5173
  %5 = icmp ult i32 %2, -16777216, !dbg !5174
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5176
  br i1 %8, label %16, label %9, !dbg !5176

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5177
  %11 = icmp eq i32 %10, 0, !dbg !5177
  br i1 %11, label %12, label %13, !dbg !5179

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5171, metadata !DIExpression()), !dbg !5172
  store i8 1, i8* %3, align 1, !dbg !5182
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5172
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5171, metadata !DIExpression()), !dbg !5172
  br label %16, !dbg !5185

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5172
  ret %struct.__esf* %17, !dbg !5186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5187 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5191, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i32 %1, metadata !5192, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i8* %2, metadata !5193, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i32 0, metadata !5194, metadata !DIExpression()), !dbg !5195
  store i8 0, i8* %2, align 1, !dbg !5196
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5197

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !5198
  call void @llvm.dbg.value(metadata i32 %5, metadata !5194, metadata !DIExpression()), !dbg !5195
  br label %11, !dbg !5200

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5201
  call void @llvm.dbg.value(metadata i32 %7, metadata !5194, metadata !DIExpression()), !dbg !5195
  br label %11, !dbg !5202

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5203
  call void @llvm.dbg.value(metadata i32 0, metadata !5194, metadata !DIExpression()), !dbg !5195
  br label %11, !dbg !5204

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !5205
  call void @llvm.dbg.value(metadata i32 0, metadata !5194, metadata !DIExpression()), !dbg !5195
  br label %11, !dbg !5206

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !5207
  br label %11, !dbg !5208

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5209
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5210 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5214, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i8* %1, metadata !5215, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i32 0, metadata !5216, metadata !DIExpression()), !dbg !5217
  store i8 0, i8* %1, align 1, !dbg !5218
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5219
  %4 = and i32 %3, 2, !dbg !5221
  %5 = icmp eq i32 %4, 0, !dbg !5222
  br i1 %5, label %6, label %33, !dbg !5223

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5224
  %8 = icmp sgt i32 %7, -1, !dbg !5226
  br i1 %8, label %9, label %33, !dbg !5227

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5228
  %11 = and i32 %10, 1073741824, !dbg !5230
  %12 = icmp eq i32 %11, 0, !dbg !5231
  br i1 %12, label %33, label %13, !dbg !5232

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !5233
  br i1 %14, label %15, label %18, !dbg !5236

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5237
  %17 = load i32, i32* %16, align 4, !dbg !5237
  call void @llvm.dbg.value(metadata i32 %17, metadata !5216, metadata !DIExpression()), !dbg !5217
  br label %33, !dbg !5239

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5240
  %20 = and i32 %19, 255, !dbg !5242
  %21 = icmp eq i32 %20, 0, !dbg !5243
  br i1 %21, label %24, label %22, !dbg !5244

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5245
  call void @llvm.dbg.value(metadata i32 %23, metadata !5216, metadata !DIExpression()), !dbg !5217
  br label %33, !dbg !5247

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5248
  %26 = and i32 %25, 65280, !dbg !5250
  %27 = icmp eq i32 %26, 0, !dbg !5251
  br i1 %27, label %29, label %28, !dbg !5252

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5253
  call void @llvm.dbg.value(metadata i32 0, metadata !5216, metadata !DIExpression()), !dbg !5217
  br label %33, !dbg !5255

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5256
  %31 = icmp ult i32 %30, 65536, !dbg !5258
  br i1 %31, label %33, label %32, !dbg !5259

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #24, !dbg !5260
  call void @llvm.dbg.value(metadata i32 0, metadata !5216, metadata !DIExpression()), !dbg !5217
  br label %33, !dbg !5262

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5217
  call void @llvm.dbg.value(metadata i32 %34, metadata !5216, metadata !DIExpression()), !dbg !5217
  ret i32 %34, !dbg !5263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5264 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5266, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i32 %1, metadata !5267, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i8* %2, metadata !5268, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i32 0, metadata !5269, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i32 -22, metadata !5270, metadata !DIExpression()), !dbg !5279
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5280
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5282
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5284
  %7 = and i32 %6, 2, !dbg !5285
  %8 = icmp eq i32 %7, 0, !dbg !5286
  br i1 %8, label %19, label %9, !dbg !5287

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5288
  call void @llvm.dbg.value(metadata i32 %10, metadata !5271, metadata !DIExpression()), !dbg !5289
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5290
  %12 = and i32 %11, 128, !dbg !5292
  %13 = icmp eq i32 %12, 0, !dbg !5293
  br i1 %13, label %19, label %14, !dbg !5294

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5270, metadata !DIExpression()), !dbg !5279
  %15 = icmp eq i32 %1, 0, !dbg !5295
  br i1 %15, label %19, label %16, !dbg !5298

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5299
  %18 = and i32 %17, -129, !dbg !5299
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5299
  br label %19, !dbg !5301

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5279
  call void @llvm.dbg.value(metadata i32 %20, metadata !5270, metadata !DIExpression()), !dbg !5279
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5302
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5304
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5306
  %24 = and i32 %23, 16, !dbg !5307
  %25 = icmp eq i32 %24, 0, !dbg !5307
  br i1 %25, label %26, label %30, !dbg !5308

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5309
  %28 = and i32 %27, 2, !dbg !5310
  %29 = icmp eq i32 %28, 0, !dbg !5310
  br i1 %29, label %39, label %30, !dbg !5311

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5312
  %32 = and i32 %31, 2048, !dbg !5313
  %33 = icmp eq i32 %32, 0, !dbg !5313
  br i1 %33, label %39, label %34, !dbg !5314

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5315
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !5316
  call void @llvm.dbg.value(metadata i32 %36, metadata !5274, metadata !DIExpression()), !dbg !5317
  %37 = icmp eq i32 %36, 0, !dbg !5318
  br i1 %37, label %39, label %38, !dbg !5320

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5321, metadata !DIExpression()) #23, !dbg !5324
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5327, !srcloc !5328
  call void @llvm.dbg.value(metadata i32 2, metadata !5269, metadata !DIExpression()), !dbg !5279
  br label %39, !dbg !5329

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5279
  call void @llvm.dbg.value(metadata i32 %40, metadata !5269, metadata !DIExpression()), !dbg !5279
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5330
  %42 = and i32 %41, 32, !dbg !5332
  %43 = icmp eq i32 %42, 0, !dbg !5333
  br i1 %43, label %47, label %44, !dbg !5334

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5335
  %46 = and i32 %45, -8193, !dbg !5335
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5335
  br label %47, !dbg !5337

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5338
  %49 = or i32 %48, 255, !dbg !5338
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5338
  store i8 0, i8* %2, align 1, !dbg !5339
  ret i32 %40, !dbg !5340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !5341 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5345, metadata !DIExpression()), !dbg !5352
  call void @llvm.dbg.value(metadata i32 %0, metadata !5346, metadata !DIExpression()), !dbg !5352
  call void @llvm.dbg.value(metadata i8* %1, metadata !5347, metadata !DIExpression()), !dbg !5352
  call void @llvm.dbg.value(metadata i32 0, metadata !5348, metadata !DIExpression()), !dbg !5352
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5353
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5355
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5357
  %6 = and i32 %5, 512, !dbg !5358
  %7 = icmp eq i32 %6, 0, !dbg !5358
  br i1 %7, label %18, label %8, !dbg !5359

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5360
  call void @llvm.dbg.value(metadata i32 %9, metadata !5349, metadata !DIExpression()), !dbg !5361
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5362
  %11 = and i32 %10, 32768, !dbg !5364
  %12 = icmp ne i32 %11, 0, !dbg !5365
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5366
  br i1 %14, label %15, label %18, !dbg !5366

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5367
  %17 = and i32 %16, -32769, !dbg !5367
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5367
  br label %18, !dbg !5371

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5372
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5374
  %21 = and i32 %20, 256, !dbg !5376
  %22 = icmp eq i32 %21, 0, !dbg !5377
  br i1 %22, label %23, label %25, !dbg !5378

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5379
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5381
  %27 = or i32 %26, 65280, !dbg !5381
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5381
  store i8 0, i8* %1, align 1, !dbg !5382
  ret void, !dbg !5383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !5384 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5390, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 0, metadata !5391, metadata !DIExpression()), !dbg !5392
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5393
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5395
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5397
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5399
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5401
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5403
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5405
  %8 = or i32 %7, -65536, !dbg !5405
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5405
  ret void, !dbg !5406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !5407 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5411, metadata !DIExpression()), !dbg !5413
  call void @llvm.dbg.value(metadata i8* %0, metadata !5412, metadata !DIExpression()), !dbg !5413
  store i8 0, i8* %0, align 1, !dbg !5414
  ret void, !dbg !5415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5416 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5420, metadata !DIExpression()), !dbg !5423
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5424
  %3 = load i32, i32* %2, align 4, !dbg !5424
  %4 = inttoptr i32 %3 to i16*, !dbg !5425
  call void @llvm.dbg.value(metadata i16* %4, metadata !5421, metadata !DIExpression()), !dbg !5423
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5426
  %6 = or i32 %5, 256, !dbg !5426
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5426
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5427, !srcloc !5430
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5431, !srcloc !5434
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5435
  %8 = load i16, i16* %7, align 2, !dbg !5436
  call void @llvm.dbg.value(metadata i16 %8, metadata !5422, metadata !DIExpression()), !dbg !5423
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5437
  %10 = and i32 %9, -257, !dbg !5437
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5437
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5438, !srcloc !5430
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5440, !srcloc !5434
  %11 = icmp eq i16 %8, -8446, !dbg !5442
  ret i1 %11, !dbg !5444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !5445 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5446
  %2 = or i32 %1, 16, !dbg !5446
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5446
  ret void, !dbg !5447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !5448 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5451, metadata !DIExpression()), !dbg !5452
  br label %1, !dbg !5453

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5451, metadata !DIExpression()), !dbg !5452
  tail call fastcc void @__NVIC_SetPriority.8(i32 noundef %2) #24, !dbg !5455
  %3 = add nuw nsw i32 %2, 1, !dbg !5458
  call void @llvm.dbg.value(metadata i32 %3, metadata !5451, metadata !DIExpression()), !dbg !5452
  %4 = icmp eq i32 %3, 97, !dbg !5459
  br i1 %4, label %5, label %1, !dbg !5453, !llvm.loop !5460

5:                                                ; preds = %1
  ret void, !dbg !5462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.8(i32 noundef %0) unnamed_addr #13 !dbg !5463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5465, metadata !DIExpression()), !dbg !5467
  call void @llvm.dbg.value(metadata i32 1, metadata !5466, metadata !DIExpression()), !dbg !5467
  %2 = and i32 %0, 15, !dbg !5468
  %3 = add nsw i32 %2, -4, !dbg !5468
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5468
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5468
  %6 = icmp slt i32 %0, 0, !dbg !5468
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5468
  store volatile i8 16, i8* %7, align 1, !dbg !5469
  ret void, !dbg !5471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5472 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5578, metadata !DIExpression()), !dbg !5579
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5580
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !5582
  br i1 %3, label %4, label %12, !dbg !5583

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !5584, !srcloc !5596
  call void @llvm.dbg.value(metadata i32 %5, metadata !5587, metadata !DIExpression()) #23, !dbg !5597
  %6 = icmp eq i32 %5, 0, !dbg !5598
  br i1 %6, label %12, label %7, !dbg !5599

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5600
  %9 = or i32 %8, 268435456, !dbg !5600
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5600
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5602
  %11 = and i32 %10, -32769, !dbg !5602
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5602
  br label %12, !dbg !5603

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5604
  ret void, !dbg !5605
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !5606 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !5607
  ret void, !dbg !5608
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !329, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i8 0, metadata !330, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i32 64, metadata !332, metadata !DIExpression()), !dbg !5609
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !5610
  %3 = load i32, i32* %2, align 4, !dbg !5610
  %4 = add i32 %3, -64, !dbg !5612
  call void @llvm.dbg.value(metadata i32 %4, metadata !331, metadata !DIExpression()), !dbg !5609
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !5613
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !5614
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !5615
  call void @llvm.dbg.value(metadata i8 1, metadata !330, metadata !DIExpression()), !dbg !5609
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !5616
  ret void, !dbg !5617
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !5618 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5619
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5620, !srcloc !5623
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5624, !srcloc !5627
  ret void, !dbg !5628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !5629 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !5630, !srcloc !5633
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5634
  ret void, !dbg !5635
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !5636 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5651, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.value(metadata i8 %1, metadata !5652, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.value(metadata i32 %2, metadata !5653, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.value(metadata i32 %3, metadata !5654, metadata !DIExpression()), !dbg !5655
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !5656
  ret void, !dbg !5658
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5659 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5664, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.value(metadata i8 %1, metadata !5665, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.value(metadata i32 undef, metadata !5666, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.value(metadata i32 undef, metadata !5667, metadata !DIExpression()), !dbg !5669
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5670
  call void @llvm.dbg.value(metadata i8 %3, metadata !5668, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5669
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !5671
  call void @llvm.dbg.value(metadata i32 %4, metadata !5668, metadata !DIExpression()), !dbg !5669
  %5 = trunc i32 %4 to i8, !dbg !5672
  store i8 %5, i8* @static_regions_num, align 1, !dbg !5673
  ret void, !dbg !5674
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !5675 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5679, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8 %1, metadata !5680, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8 %2, metadata !5681, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i1 %3, metadata !5682, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5685
  %5 = zext i8 %2 to i32, !dbg !5686
  call void @llvm.dbg.value(metadata i32 %5, metadata !5684, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 0, metadata !5683, metadata !DIExpression()), !dbg !5685
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !5684, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 0, metadata !5683, metadata !DIExpression()), !dbg !5685
  %7 = icmp eq i8 %1, 0, !dbg !5687
  br i1 %7, label %29, label %8, !dbg !5690

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5684, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %10, metadata !5683, metadata !DIExpression()), !dbg !5685
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !5691
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !5694
  %13 = load i32, i32* %12, align 4, !dbg !5694
  %14 = icmp eq i32 %13, 0, !dbg !5695
  br i1 %14, label %25, label %15, !dbg !5696

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !5697

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !5699
  %18 = icmp eq i32 %17, 0, !dbg !5699
  br i1 %18, label %29, label %19, !dbg !5700

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !5701
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !5702
  call void @llvm.dbg.value(metadata i32 %21, metadata !5684, metadata !DIExpression()), !dbg !5685
  %22 = icmp eq i32 %21, -22, !dbg !5703
  br i1 %22, label %29, label %23, !dbg !5705

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !5706
  call void @llvm.dbg.value(metadata i32 %24, metadata !5684, metadata !DIExpression()), !dbg !5685
  br label %25, !dbg !5707

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !5685
  call void @llvm.dbg.value(metadata i32 %26, metadata !5684, metadata !DIExpression()), !dbg !5685
  %27 = add nuw nsw i32 %10, 1, !dbg !5708
  call void @llvm.dbg.value(metadata i32 %27, metadata !5683, metadata !DIExpression()), !dbg !5685
  %28 = icmp eq i32 %27, %6, !dbg !5687
  br i1 %28, label %29, label %8, !dbg !5690, !llvm.loop !5709

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !5685
  ret i32 %30, !dbg !5711
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !5712 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5716, metadata !DIExpression()), !dbg !5718
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !5719
  %3 = load i32, i32* %2, align 4, !dbg !5719
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !5720, !range !5721
  %5 = icmp ult i32 %4, 2, !dbg !5720
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !5722
  br i1 %7, label %8, label %15, !dbg !5722

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !5723
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !5724
  %11 = load i32, i32* %10, align 4, !dbg !5724
  %12 = and i32 %11, %9, !dbg !5725
  %13 = icmp eq i32 %12, 0, !dbg !5726
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5717, metadata !DIExpression()), !dbg !5718
  ret i32 %16, !dbg !5727
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !5728 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5732, metadata !DIExpression()), !dbg !5735
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !5733, metadata !DIExpression()), !dbg !5735
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !5736
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5736
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !5734, metadata !DIExpression()), !dbg !5737
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !5738
  %6 = load i32, i32* %5, align 4, !dbg !5738
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !5739
  store i32 %6, i32* %7, align 4, !dbg !5740
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !5741
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !5742
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !5743
  %11 = load i32, i32* %10, align 4, !dbg !5743
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* noundef nonnull %8, %union.anon.1* noundef nonnull %9, i32 noundef %11) #24, !dbg !5744
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !5745
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5746
  ret i32 %12, !dbg !5747
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* nocapture noundef writeonly %0, %union.anon.1* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !5748 {
  call void @llvm.dbg.value(metadata %union.anon.1* %0, metadata !5755, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata %union.anon.1* %1, metadata !5756, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i32 undef, metadata !5757, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i32 %2, metadata !5758, metadata !DIExpression()), !dbg !5759
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %1, i32 0, i32 0, !dbg !5760
  %5 = load i32, i32* %4, align 4, !dbg !5760
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !5761
  %7 = or i32 %6, %5, !dbg !5762
  %8 = getelementptr inbounds %union.anon.1, %union.anon.1* %0, i32 0, i32 0, !dbg !5763
  store i32 %7, i32* %8, align 4, !dbg !5764
  ret void, !dbg !5765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5766 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5770, metadata !DIExpression()), !dbg !5772
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5771, metadata !DIExpression()), !dbg !5772
  %3 = zext i8 %0 to i32, !dbg !5773
  %4 = icmp ugt i8 %0, 7, !dbg !5775
  br i1 %4, label %6, label %5, !dbg !5776

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !5777
  br label %6, !dbg !5778

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !5772
  ret i32 %7, !dbg !5779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5784, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5785, metadata !DIExpression()), !dbg !5786
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !5787
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !5788
  %4 = load i32, i32* %3, align 4, !dbg !5788
  %5 = and i32 %4, -32, !dbg !5789
  %6 = or i32 %5, %0, !dbg !5790
  %7 = or i32 %6, 16, !dbg !5790
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !5791
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !5792
  %9 = load i32, i32* %8, align 4, !dbg !5792
  %10 = or i32 %9, 1, !dbg !5793
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5794
  ret void, !dbg !5795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !5796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5799, metadata !DIExpression()), !dbg !5800
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5801
  ret void, !dbg !5802
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #10 !dbg !5803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5807, metadata !DIExpression()), !dbg !5808
  %2 = icmp ult i32 %0, 33, !dbg !5809
  br i1 %2, label %11, label %3, !dbg !5811

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !5812
  br i1 %4, label %11, label %5, !dbg !5814

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !5815
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !5816, !range !5721
  %8 = mul nsw i32 %7, -2, !dbg !5817
  %9 = add nsw i32 %8, 62, !dbg !5817
  %10 = and i32 %9, 62, !dbg !5818
  br label %11, !dbg !5819

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !5808
  ret i32 %12, !dbg !5820
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !5821 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5825, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.value(metadata i8 %1, metadata !5826, metadata !DIExpression()), !dbg !5827
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !5828
  ret void, !dbg !5830
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5831 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5835, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i8 %1, metadata !5836, metadata !DIExpression()), !dbg !5842
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5843
  call void @llvm.dbg.value(metadata i8 %3, metadata !5837, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5842
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !5844
  call void @llvm.dbg.value(metadata i32 %4, metadata !5837, metadata !DIExpression()), !dbg !5842
  %5 = icmp ne i32 %4, -22, !dbg !5845
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %4, metadata !5838, metadata !DIExpression()), !dbg !5847
  br i1 %7, label %8, label %12, !dbg !5846

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5838, metadata !DIExpression()), !dbg !5847
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !5848
  %10 = add i32 %9, 1, !dbg !5851
  call void @llvm.dbg.value(metadata i32 %10, metadata !5838, metadata !DIExpression()), !dbg !5847
  %11 = icmp eq i32 %10, 8, !dbg !5852
  br i1 %11, label %12, label %8, !dbg !5853, !llvm.loop !5854

12:                                               ; preds = %8, %2
  ret void, !dbg !5856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !5857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5860, metadata !DIExpression()), !dbg !5861
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5862
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5863
  ret void, !dbg !5864
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !5865 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !5870
  %2 = icmp ugt i32 %1, 8, !dbg !5872
  br i1 %2, label %14, label %3, !dbg !5873

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !5874
  call void @llvm.dbg.value(metadata i32 0, metadata !5869, metadata !DIExpression()), !dbg !5875
  %4 = icmp eq i32 %1, 0, !dbg !5876
  br i1 %4, label %12, label %5, !dbg !5879

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !5879

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5869, metadata !DIExpression()), !dbg !5875
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !5880
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !5882
  %10 = add nuw i32 %8, 1, !dbg !5883
  call void @llvm.dbg.value(metadata i32 %10, metadata !5869, metadata !DIExpression()), !dbg !5875
  %11 = icmp eq i32 %10, %1, !dbg !5876
  br i1 %11, label %12, label %7, !dbg !5879, !llvm.loop !5884

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !5886
  store i8 %13, i8* @static_regions_num, align 1, !dbg !5887
  tail call void @arm_core_mpu_enable() #24, !dbg !5888
  br label %14, !dbg !5889

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !5875
  ret i32 %15, !dbg !5890
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !5891 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5898, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i8* %1, metadata !5899, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i8* %0, metadata !5900, metadata !DIExpression()), !dbg !5901
  %3 = load i8, i8* %1, align 1, !dbg !5902
  %4 = icmp eq i8 %3, 0, !dbg !5903
  br i1 %4, label %13, label %5, !dbg !5904

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !5898, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i8* %8, metadata !5899, metadata !DIExpression()), !dbg !5901
  store i8 %6, i8* %7, align 1, !dbg !5905
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5907
  call void @llvm.dbg.value(metadata i8* %9, metadata !5898, metadata !DIExpression()), !dbg !5901
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5908
  call void @llvm.dbg.value(metadata i8* %10, metadata !5899, metadata !DIExpression()), !dbg !5901
  %11 = load i8, i8* %10, align 1, !dbg !5902
  %12 = icmp eq i8 %11, 0, !dbg !5903
  br i1 %12, label %13, label %5, !dbg !5904, !llvm.loop !5909

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !5911
  ret i8* %0, !dbg !5912
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !5913 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5917, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.value(metadata i8* %1, metadata !5918, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.value(metadata i32 %2, metadata !5919, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.value(metadata i8* %0, metadata !5920, metadata !DIExpression()), !dbg !5921
  %4 = icmp eq i32 %2, 0, !dbg !5922
  br i1 %4, label %22, label %5, !dbg !5923

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !5917, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.value(metadata i32 %7, metadata !5919, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.value(metadata i8* %8, metadata !5918, metadata !DIExpression()), !dbg !5921
  %9 = load i8, i8* %8, align 1, !dbg !5924
  %10 = icmp eq i8 %9, 0, !dbg !5925
  br i1 %10, label %16, label %11, !dbg !5926

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !5927
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5929
  call void @llvm.dbg.value(metadata i8* %12, metadata !5918, metadata !DIExpression()), !dbg !5921
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5930
  call void @llvm.dbg.value(metadata i8* %13, metadata !5917, metadata !DIExpression()), !dbg !5921
  %14 = add i32 %7, -1, !dbg !5931
  call void @llvm.dbg.value(metadata i32 %14, metadata !5919, metadata !DIExpression()), !dbg !5921
  %15 = icmp eq i32 %14, 0, !dbg !5922
  br i1 %15, label %22, label %5, !dbg !5923, !llvm.loop !5932

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !5917, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.value(metadata i32 %18, metadata !5919, metadata !DIExpression()), !dbg !5921
  store i8 0, i8* %17, align 1, !dbg !5934
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !5936
  call void @llvm.dbg.value(metadata i8* %19, metadata !5917, metadata !DIExpression()), !dbg !5921
  %20 = add i32 %18, -1, !dbg !5937
  call void @llvm.dbg.value(metadata i32 %20, metadata !5919, metadata !DIExpression()), !dbg !5921
  %21 = icmp eq i32 %20, 0, !dbg !5938
  br i1 %21, label %22, label %16, !dbg !5939, !llvm.loop !5940

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !5942
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5943 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5947, metadata !DIExpression()), !dbg !5950
  call void @llvm.dbg.value(metadata i32 %1, metadata !5948, metadata !DIExpression()), !dbg !5950
  call void @llvm.dbg.value(metadata i32 %1, metadata !5949, metadata !DIExpression()), !dbg !5950
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !5951

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !5947, metadata !DIExpression()), !dbg !5950
  %6 = load i8, i8* %5, align 1, !dbg !5952
  %7 = icmp eq i8 %6, %3, !dbg !5953
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !5954
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !5955
  call void @llvm.dbg.value(metadata i8* %10, metadata !5947, metadata !DIExpression()), !dbg !5950
  br i1 %9, label %11, label %4, !dbg !5954, !llvm.loop !5957

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !5959
  ret i8* %12, !dbg !5960
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5961 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5963, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i32 %1, metadata !5964, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i8* null, metadata !5965, metadata !DIExpression()), !dbg !5966
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !5967

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !5966
  call void @llvm.dbg.value(metadata i8* %6, metadata !5965, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i8* %5, metadata !5963, metadata !DIExpression()), !dbg !5966
  %7 = load i8, i8* %5, align 1, !dbg !5968
  %8 = icmp eq i8 %7, %3, !dbg !5971
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !5972
  call void @llvm.dbg.value(metadata i8* %9, metadata !5965, metadata !DIExpression()), !dbg !5966
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !5973
  call void @llvm.dbg.value(metadata i8* %10, metadata !5963, metadata !DIExpression()), !dbg !5966
  %11 = icmp eq i8 %7, 0, !dbg !5974
  br i1 %11, label %12, label %4, !dbg !5974, !llvm.loop !5975

12:                                               ; preds = %4
  ret i8* %9, !dbg !5977
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !5978 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5982, metadata !DIExpression()), !dbg !5984
  call void @llvm.dbg.value(metadata i32 0, metadata !5983, metadata !DIExpression()), !dbg !5984
  %2 = load i8, i8* %0, align 1, !dbg !5985
  %3 = icmp eq i8 %2, 0, !dbg !5986
  br i1 %3, label %11, label %4, !dbg !5987

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5983, metadata !DIExpression()), !dbg !5984
  call void @llvm.dbg.value(metadata i8* %6, metadata !5982, metadata !DIExpression()), !dbg !5984
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5988
  call void @llvm.dbg.value(metadata i8* %7, metadata !5982, metadata !DIExpression()), !dbg !5984
  %8 = add i32 %5, 1, !dbg !5990
  call void @llvm.dbg.value(metadata i32 %8, metadata !5983, metadata !DIExpression()), !dbg !5984
  %9 = load i8, i8* %7, align 1, !dbg !5985
  %10 = icmp eq i8 %9, 0, !dbg !5986
  br i1 %10, label %11, label %4, !dbg !5987, !llvm.loop !5991

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !5984
  ret i32 %12, !dbg !5993
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5994 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5998, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i32 %1, metadata !5999, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i32 0, metadata !6000, metadata !DIExpression()), !dbg !6001
  %3 = load i8, i8* %0, align 1, !dbg !6002
  %4 = icmp ne i8 %3, 0, !dbg !6003
  %5 = icmp ne i32 %1, 0, !dbg !6004
  %6 = and i1 %4, %5, !dbg !6004
  br i1 %6, label %7, label %16, !dbg !6005

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6000, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i8* %9, metadata !5998, metadata !DIExpression()), !dbg !6001
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6006
  call void @llvm.dbg.value(metadata i8* %10, metadata !5998, metadata !DIExpression()), !dbg !6001
  %11 = add nuw i32 %8, 1, !dbg !6008
  call void @llvm.dbg.value(metadata i32 %11, metadata !6000, metadata !DIExpression()), !dbg !6001
  %12 = load i8, i8* %10, align 1, !dbg !6002
  %13 = icmp ne i8 %12, 0, !dbg !6003
  %14 = icmp ult i32 %11, %1, !dbg !6004
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6004
  br i1 %15, label %7, label %16, !dbg !6005, !llvm.loop !6009

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6001
  ret i32 %17, !dbg !6011
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6012 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6016, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.value(metadata i8* %1, metadata !6017, metadata !DIExpression()), !dbg !6018
  %3 = load i8, i8* %0, align 1, !dbg !6019
  %4 = load i8, i8* %1, align 1, !dbg !6020
  %5 = icmp ne i8 %3, %4, !dbg !6021
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6022
  br i1 %7, label %18, label %8, !dbg !6022

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6017, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.value(metadata i8* %10, metadata !6016, metadata !DIExpression()), !dbg !6018
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6023
  call void @llvm.dbg.value(metadata i8* %11, metadata !6016, metadata !DIExpression()), !dbg !6018
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6025
  call void @llvm.dbg.value(metadata i8* %12, metadata !6017, metadata !DIExpression()), !dbg !6018
  %13 = load i8, i8* %11, align 1, !dbg !6019
  %14 = load i8, i8* %12, align 1, !dbg !6020
  %15 = icmp ne i8 %13, %14, !dbg !6021
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6022
  br i1 %17, label %18, label %8, !dbg !6022, !llvm.loop !6026

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6019
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6020
  %21 = zext i8 %19 to i32, !dbg !6029
  %22 = zext i8 %20 to i32, !dbg !6030
  %23 = sub nsw i32 %21, %22, !dbg !6031
  ret i32 %23, !dbg !6032
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6033 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6037, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.value(metadata i8* %1, metadata !6038, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.value(metadata i32 %2, metadata !6039, metadata !DIExpression()), !dbg !6040
  %4 = icmp eq i32 %2, 0, !dbg !6041
  br i1 %4, label %23, label %5, !dbg !6041

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6039, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.value(metadata i8* %7, metadata !6038, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.value(metadata i8* %8, metadata !6037, metadata !DIExpression()), !dbg !6040
  %9 = load i8, i8* %8, align 1, !dbg !6042
  %10 = load i8, i8* %7, align 1, !dbg !6043
  %11 = icmp ne i8 %9, %10, !dbg !6044
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6045
  br i1 %13, label %19, label %14, !dbg !6045

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6046
  call void @llvm.dbg.value(metadata i8* %15, metadata !6037, metadata !DIExpression()), !dbg !6040
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6048
  call void @llvm.dbg.value(metadata i8* %16, metadata !6038, metadata !DIExpression()), !dbg !6040
  %17 = add i32 %6, -1, !dbg !6049
  call void @llvm.dbg.value(metadata i32 %17, metadata !6039, metadata !DIExpression()), !dbg !6040
  %18 = icmp eq i32 %17, 0, !dbg !6041
  br i1 %18, label %23, label %5, !dbg !6041, !llvm.loop !6050

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6053
  %21 = zext i8 %10 to i32, !dbg !6054
  %22 = sub nsw i32 %20, %21, !dbg !6055
  br label %23, !dbg !6056

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6056
  ret i32 %24, !dbg !6057
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #12 !dbg !6058 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6063, metadata !DIExpression()), !dbg !6068
  call void @llvm.dbg.value(metadata i8* %1, metadata !6064, metadata !DIExpression()), !dbg !6068
  call void @llvm.dbg.value(metadata i8** %2, metadata !6065, metadata !DIExpression()), !dbg !6068
  %4 = icmp eq i8* %0, null, !dbg !6069
  br i1 %4, label %5, label %7, !dbg !6069

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6070
  br label %7, !dbg !6069

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6069
  call void @llvm.dbg.value(metadata i8* %8, metadata !6066, metadata !DIExpression()), !dbg !6068
  %9 = load i8, i8* %8, align 1, !dbg !6071
  %10 = icmp eq i8 %9, 0, !dbg !6071
  br i1 %10, label %33, label %11, !dbg !6072

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6066, metadata !DIExpression()), !dbg !6068
  %14 = zext i8 %12 to i32, !dbg !6071
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !6073
  %16 = icmp eq i8* %15, null, !dbg !6072
  br i1 %16, label %21, label %17, !dbg !6074

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6075
  call void @llvm.dbg.value(metadata i8* %18, metadata !6066, metadata !DIExpression()), !dbg !6068
  %19 = load i8, i8* %18, align 1, !dbg !6071
  %20 = icmp eq i8 %19, 0, !dbg !6071
  br i1 %20, label %33, label %11, !dbg !6072, !llvm.loop !6077

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6067, metadata !DIExpression()), !dbg !6068
  %24 = zext i8 %22 to i32, !dbg !6079
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !6080
  %26 = icmp eq i8* %25, null, !dbg !6081
  br i1 %26, label %27, label %31, !dbg !6082

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6083
  call void @llvm.dbg.value(metadata i8* %28, metadata !6067, metadata !DIExpression()), !dbg !6068
  %29 = load i8, i8* %28, align 1, !dbg !6079
  %30 = icmp eq i8 %29, 0, !dbg !6079
  br i1 %30, label %33, label %21, !dbg !6085, !llvm.loop !6086

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6088
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6091
  br label %33, !dbg !6092

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6068
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6068
  store i8* %34, i8** %2, align 4, !dbg !6068
  ret i8* %35, !dbg !6093
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !6094 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6096, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata i8* %1, metadata !6097, metadata !DIExpression()), !dbg !6098
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6099
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6100
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !6101
  ret i8* %0, !dbg !6102
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !6103 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6105, metadata !DIExpression()), !dbg !6110
  call void @llvm.dbg.value(metadata i8* %1, metadata !6106, metadata !DIExpression()), !dbg !6110
  call void @llvm.dbg.value(metadata i32 %2, metadata !6107, metadata !DIExpression()), !dbg !6110
  call void @llvm.dbg.value(metadata i8* %0, metadata !6108, metadata !DIExpression()), !dbg !6110
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6111
  call void @llvm.dbg.value(metadata i32 %4, metadata !6109, metadata !DIExpression()), !dbg !6110
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6112
  call void @llvm.dbg.value(metadata i8* %5, metadata !6105, metadata !DIExpression()), !dbg !6110
  call void @llvm.dbg.value(metadata i8* %1, metadata !6106, metadata !DIExpression()), !dbg !6110
  call void @llvm.dbg.value(metadata i32 %2, metadata !6107, metadata !DIExpression()), !dbg !6110
  call void @llvm.dbg.value(metadata i32 %2, metadata !6107, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6110
  %6 = icmp eq i32 %2, 0, !dbg !6113
  br i1 %6, label %18, label %7, !dbg !6114

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6115
  call void @llvm.dbg.value(metadata i8* %9, metadata !6105, metadata !DIExpression()), !dbg !6110
  call void @llvm.dbg.value(metadata i8* %10, metadata !6106, metadata !DIExpression()), !dbg !6110
  %12 = load i8, i8* %10, align 1, !dbg !6116
  %13 = icmp eq i8 %12, 0, !dbg !6117
  br i1 %13, label %18, label %14, !dbg !6118

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6119
  call void @llvm.dbg.value(metadata i8* %15, metadata !6106, metadata !DIExpression()), !dbg !6110
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6121
  call void @llvm.dbg.value(metadata i8* %16, metadata !6105, metadata !DIExpression()), !dbg !6110
  store i8 %12, i8* %9, align 1, !dbg !6122
  call void @llvm.dbg.value(metadata i32 %11, metadata !6107, metadata !DIExpression()), !dbg !6110
  call void @llvm.dbg.value(metadata i32 %11, metadata !6107, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6110
  %17 = icmp eq i32 %11, 0, !dbg !6113
  br i1 %17, label %18, label %7, !dbg !6114, !llvm.loop !6123

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6110
  store i8 0, i8* %19, align 1, !dbg !6125
  ret i8* %0, !dbg !6126
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6127 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6131, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i8* %1, metadata !6132, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i32 %2, metadata !6133, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i8* %0, metadata !6134, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i8* %1, metadata !6135, metadata !DIExpression()), !dbg !6136
  %4 = icmp eq i32 %2, 0, !dbg !6137
  br i1 %4, label %31, label %5, !dbg !6139

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6135, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i8* %0, metadata !6134, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i32 %2, metadata !6133, metadata !DIExpression()), !dbg !6136
  %6 = add i32 %2, -1, !dbg !6140
  call void @llvm.dbg.value(metadata i32 %6, metadata !6133, metadata !DIExpression()), !dbg !6136
  %7 = icmp eq i32 %6, 0, !dbg !6141
  br i1 %7, label %23, label %8, !dbg !6142

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6143
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6143
  br label %11, !dbg !6143

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6135, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i8* %14, metadata !6134, metadata !DIExpression()), !dbg !6136
  %15 = load i8, i8* %14, align 1, !dbg !6144
  %16 = load i8, i8* %13, align 1, !dbg !6145
  %17 = icmp eq i8 %15, %16, !dbg !6146
  br i1 %17, label %18, label %23, !dbg !6143

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6147
  call void @llvm.dbg.value(metadata i8* %19, metadata !6134, metadata !DIExpression()), !dbg !6136
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6149
  call void @llvm.dbg.value(metadata i8* %20, metadata !6135, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i32 %12, metadata !6133, metadata !DIExpression()), !dbg !6136
  %21 = add i32 %12, -1, !dbg !6140
  call void @llvm.dbg.value(metadata i32 %21, metadata !6133, metadata !DIExpression()), !dbg !6136
  %22 = icmp eq i32 %21, 0, !dbg !6141
  br i1 %22, label %23, label %11, !dbg !6142, !llvm.loop !6150

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6136
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6136
  %26 = load i8, i8* %24, align 1, !dbg !6152
  %27 = zext i8 %26 to i32, !dbg !6152
  %28 = load i8, i8* %25, align 1, !dbg !6153
  %29 = zext i8 %28 to i32, !dbg !6153
  %30 = sub nsw i32 %27, %29, !dbg !6154
  br label %31, !dbg !6155

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6136
  ret i32 %32, !dbg !6156
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !6157 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6161, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i8* %1, metadata !6162, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i32 %2, metadata !6163, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i8* %0, metadata !6164, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i8* %1, metadata !6165, metadata !DIExpression()), !dbg !6166
  %4 = ptrtoint i8* %0 to i32, !dbg !6167
  %5 = ptrtoint i8* %1 to i32, !dbg !6167
  %6 = sub i32 %4, %5, !dbg !6167
  %7 = icmp ult i32 %6, %2, !dbg !6169
  br i1 %7, label %10, label %8, !dbg !6170

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6165, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i8* %0, metadata !6164, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i32 %2, metadata !6163, metadata !DIExpression()), !dbg !6166
  %9 = icmp eq i32 %2, 0, !dbg !6171
  br i1 %9, label %26, label %17, !dbg !6173

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6163, metadata !DIExpression()), !dbg !6166
  %12 = add i32 %11, -1, !dbg !6174
  call void @llvm.dbg.value(metadata i32 %12, metadata !6163, metadata !DIExpression()), !dbg !6166
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6177
  %14 = load i8, i8* %13, align 1, !dbg !6177
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6178
  store i8 %14, i8* %15, align 1, !dbg !6179
  %16 = icmp eq i32 %12, 0, !dbg !6180
  br i1 %16, label %26, label %10, !dbg !6181, !llvm.loop !6182

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6165, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i8* %19, metadata !6164, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i32 %20, metadata !6163, metadata !DIExpression()), !dbg !6166
  %21 = load i8, i8* %18, align 1, !dbg !6184
  store i8 %21, i8* %19, align 1, !dbg !6186
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6187
  call void @llvm.dbg.value(metadata i8* %22, metadata !6164, metadata !DIExpression()), !dbg !6166
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6188
  call void @llvm.dbg.value(metadata i8* %23, metadata !6165, metadata !DIExpression()), !dbg !6166
  %24 = add i32 %20, -1, !dbg !6189
  call void @llvm.dbg.value(metadata i32 %24, metadata !6163, metadata !DIExpression()), !dbg !6166
  %25 = icmp eq i32 %24, 0, !dbg !6171
  br i1 %25, label %26, label %17, !dbg !6173, !llvm.loop !6190

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6192
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !6193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6199, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.value(metadata i8* %1, metadata !6200, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.value(metadata i32 %2, metadata !6201, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.value(metadata i8* %0, metadata !6202, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.value(metadata i8* %1, metadata !6203, metadata !DIExpression()), !dbg !6204
  %4 = icmp eq i32 %2, 0, !dbg !6205
  br i1 %4, label %14, label %5, !dbg !6206

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6203, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.value(metadata i8* %7, metadata !6202, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.value(metadata i32 %8, metadata !6201, metadata !DIExpression()), !dbg !6204
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6207
  call void @llvm.dbg.value(metadata i8* %9, metadata !6203, metadata !DIExpression()), !dbg !6204
  %10 = load i8, i8* %6, align 1, !dbg !6209
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6210
  call void @llvm.dbg.value(metadata i8* %11, metadata !6202, metadata !DIExpression()), !dbg !6204
  store i8 %10, i8* %7, align 1, !dbg !6211
  %12 = add i32 %8, -1, !dbg !6212
  call void @llvm.dbg.value(metadata i32 %12, metadata !6201, metadata !DIExpression()), !dbg !6204
  %13 = icmp eq i32 %12, 0, !dbg !6205
  br i1 %13, label %14, label %5, !dbg !6206, !llvm.loop !6213

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6215
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6216 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6220, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i32 %1, metadata !6221, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i32 %2, metadata !6222, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i8* %0, metadata !6223, metadata !DIExpression()), !dbg !6225
  %4 = trunc i32 %1 to i8, !dbg !6226
  call void @llvm.dbg.value(metadata i8 %4, metadata !6224, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i32 %2, metadata !6222, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i8* %0, metadata !6223, metadata !DIExpression()), !dbg !6225
  %5 = icmp eq i32 %2, 0, !dbg !6227
  br i1 %5, label %12, label %6, !dbg !6228

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6222, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i8* %8, metadata !6223, metadata !DIExpression()), !dbg !6225
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6229
  call void @llvm.dbg.value(metadata i8* %9, metadata !6223, metadata !DIExpression()), !dbg !6225
  store i8 %4, i8* %8, align 1, !dbg !6231
  %10 = add i32 %7, -1, !dbg !6232
  call void @llvm.dbg.value(metadata i32 %10, metadata !6222, metadata !DIExpression()), !dbg !6225
  %11 = icmp eq i32 %10, 0, !dbg !6227
  br i1 %11, label %12, label %6, !dbg !6228, !llvm.loop !6233

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6235
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6236 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6240, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i32 %1, metadata !6241, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i32 %2, metadata !6242, metadata !DIExpression()), !dbg !6246
  %4 = icmp eq i32 %2, 0, !dbg !6247
  br i1 %4, label %17, label %5, !dbg !6248

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6249

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6250
  call void @llvm.dbg.value(metadata i8* %9, metadata !6243, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.value(metadata i32 %8, metadata !6242, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i8* %9, metadata !6243, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6250
  %10 = load i8, i8* %9, align 1, !dbg !6251
  %11 = icmp eq i8 %10, %6, !dbg !6254
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6255
  call void @llvm.dbg.value(metadata i8* %12, metadata !6243, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.value(metadata i32 %13, metadata !6242, metadata !DIExpression()), !dbg !6246
  br i1 %15, label %16, label %7, !dbg !6255, !llvm.loop !6256

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6258

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6246
  ret i8* %19, !dbg !6259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !6260 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6262, metadata !DIExpression()), !dbg !6263
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6264
  ret void, !dbg !6265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #2 !dbg !6266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6268, metadata !DIExpression()), !dbg !6269
  ret i32 -1, !dbg !6270
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6275, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i32* %1, metadata !6276, metadata !DIExpression()), !dbg !6277
  %3 = ptrtoint i32* %1 to i32, !dbg !6278
  %4 = and i32 %3, -2, !dbg !6278
  %5 = icmp eq i32 %4, 2, !dbg !6278
  br i1 %5, label %6, label %9, !dbg !6278

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6279
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !6279
  br label %9, !dbg !6280

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6280
  ret i32 %10, !dbg !6281
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6284, metadata !DIExpression()), !dbg !6286
  call void @llvm.dbg.value(metadata i32* %1, metadata !6285, metadata !DIExpression()), !dbg !6286
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6287
  ret i32 %3, !dbg !6288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6292, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.value(metadata i32* %1, metadata !6293, metadata !DIExpression()), !dbg !6294
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6295, !srcloc !6297
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6298
  ret i32 %3, !dbg !6299
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6300 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6305, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata i32* %1, metadata !6306, metadata !DIExpression()), !dbg !6309
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6310
  call void @llvm.dbg.value(metadata i32 %3, metadata !6307, metadata !DIExpression()), !dbg !6309
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !6311
  call void @llvm.dbg.value(metadata i32 %4, metadata !6308, metadata !DIExpression()), !dbg !6309
  %5 = icmp ne i32 %3, %4, !dbg !6312
  %6 = sext i1 %5 to i32, !dbg !6313
  ret i32 %6, !dbg !6314
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6315 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %1, metadata !6320, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %2, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32* %3, metadata !6322, metadata !DIExpression()), !dbg !6323
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6324
  ret i32 %5, !dbg !6325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6326 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6328, metadata !DIExpression()), !dbg !6332
  call void @llvm.dbg.value(metadata i32 %1, metadata !6329, metadata !DIExpression()), !dbg !6332
  call void @llvm.dbg.value(metadata i32 %2, metadata !6330, metadata !DIExpression()), !dbg !6332
  call void @llvm.dbg.value(metadata i32* %3, metadata !6331, metadata !DIExpression()), !dbg !6332
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6333, !srcloc !6335
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6336
  ret i32 %5, !dbg !6337
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6338 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6340, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.value(metadata i32 %1, metadata !6341, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.value(metadata i32 %2, metadata !6342, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.value(metadata i32* %3, metadata !6343, metadata !DIExpression()), !dbg !6348
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6349
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6351
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6351
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6351
  br i1 %11, label %33, label %12, !dbg !6351

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6348
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6348
  call void @llvm.dbg.value(metadata i8* %14, metadata !6346, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.value(metadata i32 %13, metadata !6344, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.value(metadata i32 %1, metadata !6345, metadata !DIExpression()), !dbg !6348
  br label %15, !dbg !6352

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6354
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6348
  call void @llvm.dbg.value(metadata i8* %17, metadata !6346, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.value(metadata i32 %16, metadata !6345, metadata !DIExpression()), !dbg !6348
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6355
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6358
  call void @llvm.dbg.value(metadata i8* %19, metadata !6346, metadata !DIExpression()), !dbg !6348
  %20 = load i8, i8* %17, align 1, !dbg !6359
  %21 = zext i8 %20 to i32, !dbg !6360
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !6355
  %23 = icmp eq i32 %22, -1, !dbg !6361
  br i1 %23, label %30, label %24, !dbg !6362

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6363
  call void @llvm.dbg.value(metadata i32 %25, metadata !6345, metadata !DIExpression()), !dbg !6348
  %26 = icmp eq i32 %25, 0, !dbg !6364
  br i1 %26, label %27, label %15, !dbg !6365, !llvm.loop !6366

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6368
  call void @llvm.dbg.value(metadata i32 %28, metadata !6344, metadata !DIExpression()), !dbg !6348
  %29 = icmp eq i32 %28, 0, !dbg !6369
  br i1 %29, label %30, label %12, !dbg !6370, !llvm.loop !6371

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6348
  call void @llvm.dbg.value(metadata i32 %31, metadata !6344, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.label(metadata !6347), !dbg !6374
  %32 = sub i32 %2, %31, !dbg !6375
  br label %33, !dbg !6376

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6348
  ret i32 %34, !dbg !6377
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6378 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6382, metadata !DIExpression()), !dbg !6383
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6384
  %3 = icmp eq i32 %2, -1, !dbg !6386
  br i1 %3, label %8, label %4, !dbg !6387

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6388
  %6 = icmp eq i32 %5, -1, !dbg !6389
  %7 = sext i1 %6 to i32, !dbg !6388
  br label %8, !dbg !6390

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6383
  ret i32 %9, !dbg !6391
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6392 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6394, metadata !DIExpression()), !dbg !6395
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !6396
  ret void, !dbg !6397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6402, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i32 %1, metadata !6403, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6404, metadata !DIExpression()), !dbg !6408
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6409
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6409
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6409
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6405, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i32 %0, metadata !6407, metadata !DIExpression()), !dbg !6408
  %7 = icmp slt i32 %0, %1, !dbg !6410
  br i1 %7, label %8, label %22, !dbg !6413

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6407, metadata !DIExpression()), !dbg !6408
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !6414
  %11 = icmp eq i32 %10, 0, !dbg !6414
  br i1 %11, label %19, label %12, !dbg !6417

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !6418
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !6420
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !6420
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !6422
  br i1 %15, label %19, label %16, !dbg !6423

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !6424
  %18 = load i8*, i8** %17, align 4, !dbg !6424
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !6425
  br label %19, !dbg !6426

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !6427
  call void @llvm.dbg.value(metadata i32 %20, metadata !6407, metadata !DIExpression()), !dbg !6408
  %21 = icmp eq i32 %20, %1, !dbg !6410
  br i1 %21, label %22, label %8, !dbg !6413, !llvm.loop !6428

22:                                               ; preds = %19, %3
  ret void, !dbg !6430
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !6431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6433, metadata !DIExpression()), !dbg !6434
  %2 = shl nuw i32 1, %0, !dbg !6435
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !6438
  ret i32 %3, !dbg !6439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !6440 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6444, metadata !DIExpression()), !dbg !6445
  %2 = shl nuw i32 1, %0, !dbg !6446
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !6449
  ret void, !dbg !6450
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6454, metadata !DIExpression()), !dbg !6455
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6456
  ret void, !dbg !6457
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6460, metadata !DIExpression()), !dbg !6461
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6462
  %3 = and i32 %2, %0, !dbg !6462
  %4 = icmp eq i32 %3, %0, !dbg !6463
  %5 = zext i1 %4 to i32, !dbg !6463
  ret i32 %5, !dbg !6464
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !6465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6467, metadata !DIExpression()), !dbg !6468
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !6469
  ret void, !dbg !6470
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !6471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6473, metadata !DIExpression()), !dbg !6474
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !6475
  ret void, !dbg !6476
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !6477 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6479, metadata !DIExpression()), !dbg !6480
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !6481
  ret void, !dbg !6482
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !6483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6485, metadata !DIExpression()), !dbg !6486
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !6487
  ret void, !dbg !6488
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !6489 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6491, metadata !DIExpression()), !dbg !6492
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !6493
  ret void, !dbg !6494
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !6495 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6497, metadata !DIExpression()), !dbg !6498
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !6499
  ret void, !dbg !6500
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !6501 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6503, metadata !DIExpression()), !dbg !6504
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !6505
  ret void, !dbg !6506
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !6507 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6509, metadata !DIExpression()), !dbg !6510
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !6511
  ret void, !dbg !6512
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !6513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6515, metadata !DIExpression()), !dbg !6516
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !6517
  ret void, !dbg !6518
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !6519 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6521, metadata !DIExpression()), !dbg !6522
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !6523
  ret void, !dbg !6524
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6525 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6527, metadata !DIExpression()), !dbg !6528
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !6529
  ret i32 0, !dbg !6530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !587 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !591, metadata !DIExpression()), !dbg !6531
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !6532
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !6534
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !6536
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !6538
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !6540
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !6542
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !6544
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !6546
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !6548
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !6550
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !6552
  ret void, !dbg !6554
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6557, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i32 0, metadata !6558, metadata !DIExpression()), !dbg !6559
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !6560
  %3 = load i32, i32* %2, align 4, !dbg !6560
  call void @llvm.dbg.value(metadata i32 %3, metadata !6558, metadata !DIExpression()), !dbg !6559
  %4 = shl nuw i32 1, %0, !dbg !6561
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !6562
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !6563
  ret void, !dbg !6564
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6567, metadata !DIExpression()), !dbg !6568
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6569
  %3 = or i32 %2, %0, !dbg !6569
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6569
  ret void, !dbg !6570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !6571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6573, metadata !DIExpression()), !dbg !6574
  %2 = icmp slt i32 %0, 32, !dbg !6575
  br i1 %2, label %3, label %5, !dbg !6577

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !6578
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !6580
  br label %5, !dbg !6581

5:                                                ; preds = %1, %3
  ret void, !dbg !6582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6585, metadata !DIExpression()), !dbg !6586
  %2 = xor i32 %0, -1, !dbg !6587
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6587
  %4 = and i32 %3, %2, !dbg !6587
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6587
  ret void, !dbg !6588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !6589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6593, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i32 %1, metadata !6594, metadata !DIExpression()), !dbg !6595
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !6596

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !6597
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !6599
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !6600
  br label %11, !dbg !6601

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !6602
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !6603
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !6604
  br label %11, !dbg !6605

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !6606
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !6607
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !6608
  br label %11, !dbg !6609

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !6610
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !6611
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !6612
  br label %11, !dbg !6613

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !6614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6617, metadata !DIExpression()), !dbg !6618
  %2 = xor i32 %0, -1, !dbg !6619
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6619
  %4 = and i32 %3, %2, !dbg !6619
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6619
  ret void, !dbg !6620
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6623, metadata !DIExpression()), !dbg !6624
  %2 = xor i32 %0, -1, !dbg !6625
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6625
  %4 = and i32 %3, %2, !dbg !6625
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6625
  ret void, !dbg !6626
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6629, metadata !DIExpression()), !dbg !6630
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6631
  %3 = or i32 %2, %0, !dbg !6631
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6631
  ret void, !dbg !6632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6635, metadata !DIExpression()), !dbg !6636
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6637
  %3 = or i32 %2, %0, !dbg !6637
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6637
  ret void, !dbg !6638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !6639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6643, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6644, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.value(metadata i8* %2, metadata !6645, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6646, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6648, metadata !DIExpression()), !dbg !6649
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6650
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !6650
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !6652
  br i1 %6, label %7, label %9, !dbg !6653

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !6654
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6655
  store i8* %2, i8** %8, align 4, !dbg !6656
  br label %9, !dbg !6657

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !6649
  ret i32 %10, !dbg !6658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !6659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6661, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6662, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6663, metadata !DIExpression()), !dbg !6664
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6665
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !6666
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6667
  store i8* null, i8** %3, align 4, !dbg !6668
  ret void, !dbg !6669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6670 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6672, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.value(metadata i8* %1, metadata !6673, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.value(metadata i8* %1, metadata !6674, metadata !DIExpression()), !dbg !6677
  %3 = bitcast i8* %1 to i32*, !dbg !6678
  %4 = load i32, i32* %3, align 4, !dbg !6678
  %5 = add i32 %4, -169, !dbg !6678
  %6 = icmp ult i32 %5, -121, !dbg !6678
  br i1 %6, label %15, label %7, !dbg !6680

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6681
  %9 = inttoptr i32 %8 to i32*, !dbg !6682
  call void @llvm.dbg.value(metadata i32* %9, metadata !6675, metadata !DIExpression()), !dbg !6677
  %10 = load volatile i32, i32* %9, align 4, !dbg !6683
  call void @llvm.dbg.value(metadata i32 %10, metadata !6676, metadata !DIExpression()), !dbg !6677
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6684
  %12 = bitcast i8* %11 to i32*, !dbg !6684
  %13 = load i32, i32* %12, align 4, !dbg !6684
  %14 = or i32 %13, %10, !dbg !6685
  call void @llvm.dbg.value(metadata i32 %14, metadata !6676, metadata !DIExpression()), !dbg !6677
  store volatile i32 %14, i32* %9, align 4, !dbg !6686
  br label %15, !dbg !6687

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6677
  ret i32 %16, !dbg !6688
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6689 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6691, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i8* %1, metadata !6692, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i8* %1, metadata !6693, metadata !DIExpression()), !dbg !6696
  %3 = bitcast i8* %1 to i32*, !dbg !6697
  %4 = load i32, i32* %3, align 4, !dbg !6697
  %5 = add i32 %4, -169, !dbg !6697
  %6 = icmp ult i32 %5, -121, !dbg !6697
  br i1 %6, label %16, label %7, !dbg !6699

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6700
  %9 = inttoptr i32 %8 to i32*, !dbg !6701
  call void @llvm.dbg.value(metadata i32* %9, metadata !6694, metadata !DIExpression()), !dbg !6696
  %10 = load volatile i32, i32* %9, align 4, !dbg !6702
  call void @llvm.dbg.value(metadata i32 %10, metadata !6695, metadata !DIExpression()), !dbg !6696
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6703
  %12 = bitcast i8* %11 to i32*, !dbg !6703
  %13 = load i32, i32* %12, align 4, !dbg !6703
  %14 = xor i32 %13, -1, !dbg !6704
  %15 = and i32 %10, %14, !dbg !6705
  call void @llvm.dbg.value(metadata i32 %15, metadata !6695, metadata !DIExpression()), !dbg !6696
  store volatile i32 %15, i32* %9, align 4, !dbg !6706
  br label %16, !dbg !6707

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6696
  ret i32 %17, !dbg !6708
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !6709 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6711, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i8* %1, metadata !6712, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i32* %2, metadata !6713, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i8* %1, metadata !6714, metadata !DIExpression()), !dbg !6719
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !6720
  call void @llvm.dbg.value(metadata i32 %4, metadata !6715, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i32 undef, metadata !6716, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i32 undef, metadata !6717, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i32 %4, metadata !6718, metadata !DIExpression()), !dbg !6719
  %5 = bitcast i8* %1 to i32*, !dbg !6721
  %6 = load i32, i32* %5, align 4, !dbg !6721
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !6722

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !6723
  call void @llvm.dbg.value(metadata i32 %8, metadata !6716, metadata !DIExpression()), !dbg !6719
  br label %19, !dbg !6724

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !6726
  call void @llvm.dbg.value(metadata i32 %10, metadata !6717, metadata !DIExpression()), !dbg !6719
  br label %19, !dbg !6727

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !6728
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !6729
  br label %19, !dbg !6730

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !6731
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #24, !dbg !6732
  br label %19, !dbg !6733

17:                                               ; preds = %3
  br label %19, !dbg !6734

18:                                               ; preds = %3
  br label %19, !dbg !6735

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !6736
  br label %21, !dbg !6737

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !6719
  ret i32 %22, !dbg !6737
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !6738 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6740, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i8* %1, metadata !6741, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i8* %2, metadata !6742, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i8* %1, metadata !6743, metadata !DIExpression()), !dbg !6748
  %4 = bitcast i8* %1 to i32*, !dbg !6749
  %5 = load i32, i32* %4, align 4, !dbg !6749
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !6750
  call void @llvm.dbg.value(metadata i32 %6, metadata !6747, metadata !DIExpression()), !dbg !6748
  %7 = icmp slt i32 %6, 0, !dbg !6751
  br i1 %7, label %22, label %8, !dbg !6753

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6743, metadata !DIExpression()), !dbg !6748
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6754
  %10 = bitcast i8* %9 to i32*, !dbg !6754
  %11 = load i32, i32* %10, align 4, !dbg !6754
  %12 = lshr i32 %11, 16, !dbg !6754
  %13 = and i32 %12, 7, !dbg !6754
  %14 = lshr i32 %11, 8, !dbg !6755
  %15 = and i32 %14, 31, !dbg !6755
  %16 = shl i32 %13, %15, !dbg !6756
  call void @llvm.dbg.value(metadata i32 %16, metadata !6746, metadata !DIExpression()), !dbg !6748
  %17 = and i32 %11, 255, !dbg !6757
  %18 = or i32 %17, 1073887232, !dbg !6758
  %19 = inttoptr i32 %18 to i32*, !dbg !6759
  call void @llvm.dbg.value(metadata i32* %19, metadata !6744, metadata !DIExpression()), !dbg !6748
  %20 = load volatile i32, i32* %19, align 4, !dbg !6760
  call void @llvm.dbg.value(metadata i32 %20, metadata !6745, metadata !DIExpression()), !dbg !6748
  %21 = or i32 %16, %20, !dbg !6761
  call void @llvm.dbg.value(metadata i32 %21, metadata !6745, metadata !DIExpression()), !dbg !6748
  store volatile i32 %21, i32* %19, align 4, !dbg !6762
  br label %22, !dbg !6763

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !6748
  ret i32 %23, !dbg !6764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #2 !dbg !6765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6769, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.value(metadata i32 0, metadata !6770, metadata !DIExpression()), !dbg !6771
  %2 = add i32 %0, -1, !dbg !6772
  %3 = icmp ult i32 %2, 6, !dbg !6772
  br i1 %3, label %4, label %7, !dbg !6772

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !6772
  %6 = load i32, i32* %5, align 4, !dbg !6772
  call void @llvm.dbg.value(metadata i32 %6, metadata !6770, metadata !DIExpression()), !dbg !6771
  br label %7, !dbg !6773

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !6771
  ret i32 %8, !dbg !6774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !6775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6779, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.value(metadata i32 %1, metadata !6780, metadata !DIExpression()), !dbg !6781
  %3 = udiv i32 %0, %1, !dbg !6782
  ret i32 %3, !dbg !6783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !6784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6788, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.value(metadata i32 8, metadata !6789, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.value(metadata i32 84, metadata !6790, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.value(metadata i32 %1, metadata !6791, metadata !DIExpression()), !dbg !6792
  %3 = mul i32 %0, 84, !dbg !6793
  %4 = shl nsw i32 %1, 3, !dbg !6794
  %5 = udiv i32 %3, %4, !dbg !6795
  ret i32 %5, !dbg !6796
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !6797 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !6799, metadata !DIExpression()), !dbg !6802
  tail call void @config_enable_default_clocks() #25, !dbg !6803
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !6804
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !6804
  %4 = lshr i32 %3, 4, !dbg !6804
  %5 = and i32 %4, 15, !dbg !6804
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !6804
  %7 = load i8, i8* %6, align 1, !dbg !6804
  %8 = zext i8 %7 to i32, !dbg !6804
  %9 = lshr i32 %2, %8, !dbg !6804
  call void @llvm.dbg.value(metadata i32 %9, metadata !6800, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !6801, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !6802
  %10 = icmp ult i32 %9, 84000000, !dbg !6805
  br i1 %10, label %11, label %13, !dbg !6807

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !6808
  br label %13, !dbg !6810

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !6811
  tail call fastcc void @set_up_plls() #24, !dbg !6812
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !6813
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !6816
  br label %14, !dbg !6817

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !6818
  %16 = icmp eq i32 %15, 8, !dbg !6819
  br i1 %16, label %17, label %14, !dbg !6817, !llvm.loop !6820

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !6822
  br i1 %18, label %19, label %21, !dbg !6824

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !6825
  br label %21, !dbg !6827

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !6828
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !6829
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !6830
  ret i32 0, !dbg !6831
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !6832 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6834
  %2 = and i32 %1, 240, !dbg !6834
  ret i32 %2, !dbg !6835
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !6836 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !6837
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !6842
  br label %1, !dbg !6843

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !6844
  %3 = icmp eq i32 %2, 1, !dbg !6845
  br i1 %3, label %4, label %1, !dbg !6843, !llvm.loop !6846

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !6848
  br label %5, !dbg !6851

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !6852
  %7 = icmp eq i32 %6, 1, !dbg !6853
  br i1 %7, label %8, label %5, !dbg !6851, !llvm.loop !6854

8:                                                ; preds = %5
  ret void, !dbg !6856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !6857 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !6858
  %2 = icmp eq i32 %1, 8, !dbg !6860
  br i1 %2, label %3, label %4, !dbg !6861

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !6862
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !6864
  br label %4, !dbg !6865

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !6866
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6867
  %6 = and i32 %5, -196609, !dbg !6867
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6867
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6868
  %8 = and i32 %7, -251658241, !dbg !6868
  %9 = or i32 %8, 134217728, !dbg !6868
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6868
  tail call void @config_pll_sysclock() #25, !dbg !6869
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !6870
  br label %10, !dbg !6871

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !6872
  %12 = icmp eq i32 %11, 1, !dbg !6873
  br i1 %12, label %13, label %10, !dbg !6871, !llvm.loop !6874

13:                                               ; preds = %10
  ret void, !dbg !6876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !6877 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6879, metadata !DIExpression()), !dbg !6880
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6881
  %2 = and i32 %1, -241, !dbg !6881
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6881
  ret void, !dbg !6882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !6883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6885, metadata !DIExpression()), !dbg !6886
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6887
  %3 = and i32 %2, -4, !dbg !6887
  %4 = or i32 %3, %0, !dbg !6887
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6887
  ret void, !dbg !6888
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !6889 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6890
  %2 = and i32 %1, 12, !dbg !6890
  ret i32 %2, !dbg !6891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !6892 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !6894, metadata !DIExpression()), !dbg !6895
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6896
  %2 = and i32 %1, -7169, !dbg !6896
  %3 = or i32 %2, 4096, !dbg !6896
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6896
  ret void, !dbg !6897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !6898 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6900, metadata !DIExpression()), !dbg !6901
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6902
  %2 = and i32 %1, -57345, !dbg !6902
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6902
  ret void, !dbg !6903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !6904 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !6905
  %2 = icmp eq i32 %1, 1, !dbg !6907
  br i1 %2, label %7, label %3, !dbg !6908

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !6909
  br label %4, !dbg !6911

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !6912
  %6 = icmp eq i32 %5, 1, !dbg !6913
  br i1 %6, label %7, label %4, !dbg !6911, !llvm.loop !6914

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !6916
  br label %8, !dbg !6917

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !6918
  %10 = icmp eq i32 %9, 0, !dbg !6919
  br i1 %10, label %11, label %8, !dbg !6917, !llvm.loop !6920

11:                                               ; preds = %8
  ret void, !dbg !6922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !6923 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6924
  %2 = and i32 %1, -16777217, !dbg !6924
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6924
  ret void, !dbg !6925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !6926 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6927
  %2 = or i32 %1, 16777216, !dbg !6927
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6927
  ret void, !dbg !6928
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !6929 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6930
  %2 = lshr i32 %1, 25, !dbg !6931
  %3 = and i32 %2, 1, !dbg !6931
  ret i32 %3, !dbg !6932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !6933 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6934
  %2 = lshr i32 %1, 1, !dbg !6935
  %3 = and i32 %2, 1, !dbg !6935
  ret i32 %3, !dbg !6936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !6937 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6938
  %2 = or i32 %1, 1, !dbg !6938
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6938
  ret void, !dbg !6939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !6940 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6941
  %2 = and i32 %1, -262145, !dbg !6941
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6941
  ret void, !dbg !6942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !6943 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6944
  %2 = or i32 %1, 65536, !dbg !6944
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6944
  ret void, !dbg !6945
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !6946 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6947
  %2 = lshr i32 %1, 17, !dbg !6948
  %3 = and i32 %2, 1, !dbg !6948
  ret i32 %3, !dbg !6949
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !6950 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !6951
  %2 = or i32 %1, 1, !dbg !6951
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !6951
  ret void, !dbg !6952
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !6953 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !6954
  %2 = lshr i32 %1, 1, !dbg !6955
  %3 = and i32 %2, 1, !dbg !6955
  ret i32 %3, !dbg !6956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #2 !dbg !6957 {
  ret i32 16000000, !dbg !6959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !6963 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !6964
  ret void, !dbg !6965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !6966 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !6970, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata i32 8, metadata !6971, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata i32 84, metadata !6972, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata i32 0, metadata !6973, metadata !DIExpression()), !dbg !6974
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6975
  %2 = and i32 %1, -4227072, !dbg !6975
  %3 = or i32 %2, 4199688, !dbg !6975
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6975
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6976
  %5 = and i32 %4, -196609, !dbg !6976
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6976
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6977
  %7 = and i32 %6, -1879048193, !dbg !6977
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6977
  ret void, !dbg !6978
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !6979 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !6980
  ret void, !dbg !6981
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !6982 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !6985, metadata !DIExpression()), !dbg !6987
  %2 = bitcast i32* %1 to i8*, !dbg !6988
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6988
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6986, metadata !DIExpression()), !dbg !6989
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !6990
  %4 = or i32 %3, 268435456, !dbg !6990
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !6990
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !6991
  %6 = and i32 %5, 268435456, !dbg !6991
  store volatile i32 %6, i32* %1, align 4, !dbg !6992
  %7 = load volatile i32, i32* %1, align 4, !dbg !6993
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6994
  ret void, !dbg !6994
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6995 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6997, metadata !DIExpression()), !dbg !6998
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !6999
  br i1 %2, label %3, label %4, !dbg !7001

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !7002
  br label %4, !dbg !7003

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !6998
  ret i32 %5, !dbg !7004
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7005 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7010, metadata !DIExpression()), !dbg !7011
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7012, !srcloc !7014
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !7015
  ret i1 %1, !dbg !7016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7017 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7018
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7019
  ret void, !dbg !7020
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7023, metadata !DIExpression()), !dbg !7024
  %2 = icmp eq i32 %0, 10, !dbg !7025
  br i1 %2, label %3, label %4, !dbg !7027

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !7028
  br label %4, !dbg !7030

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7031
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !7032
  ret i32 %0, !dbg !7033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7034 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7037, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i8 %0, metadata !7038, metadata !DIExpression()), !dbg !7039
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7040, !srcloc !7042
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !7043
  ret void, !dbg !7044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7045 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7047, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i8 %0, metadata !7048, metadata !DIExpression()), !dbg !7050
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7051
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7049, metadata !DIExpression()), !dbg !7050
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7052
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7052
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #25, !dbg !7053
  ret void, !dbg !7054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7055 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7057, metadata !DIExpression()), !dbg !7058
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !7059
  ret i1 %1, !dbg !7060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #2 !dbg !7061 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7108, metadata !DIExpression()), !dbg !7111
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7109, metadata !DIExpression()), !dbg !7111
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7110, metadata !DIExpression()), !dbg !7111
  ret void, !dbg !7112
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7113 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7115, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i8 %1, metadata !7116, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i32 %2, metadata !7117, metadata !DIExpression()), !dbg !7120
  %5 = bitcast i32* %4 to i8*, !dbg !7121
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7121
  call void @llvm.dbg.value(metadata i32* %4, metadata !7119, metadata !DIExpression(DW_OP_deref)), !dbg !7120
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !7122
  call void @llvm.dbg.value(metadata i32 %6, metadata !7118, metadata !DIExpression()), !dbg !7120
  %7 = icmp eq i32 %6, 0, !dbg !7123
  br i1 %7, label %8, label %31, !dbg !7125

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7118, metadata !DIExpression()), !dbg !7120
  %9 = and i32 %2, 131072, !dbg !7126
  %10 = icmp eq i32 %9, 0, !dbg !7128
  br i1 %10, label %28, label %11, !dbg !7129

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7130
  %13 = icmp eq i32 %12, 0, !dbg !7133
  br i1 %13, label %18, label %14, !dbg !7134

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7135
  %16 = shl nuw i32 1, %15, !dbg !7135
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !7137
  br label %25, !dbg !7138

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7139
  %20 = icmp eq i32 %19, 0, !dbg !7141
  %21 = zext i8 %1 to i32, !dbg !7120
  br i1 %20, label %25, label %22, !dbg !7142

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7143
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !7145
  br label %25, !dbg !7146

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7147
  %27 = load i32, i32* %4, align 4, !dbg !7148
  call void @llvm.dbg.value(metadata i32 %30, metadata !7119, metadata !DIExpression()), !dbg !7120
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !7149
  br label %31, !dbg !7150

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7147
  %30 = load i32, i32* %4, align 4, !dbg !7148
  call void @llvm.dbg.value(metadata i32 %30, metadata !7119, metadata !DIExpression()), !dbg !7120
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !7149
  call void @llvm.dbg.value(metadata i32 0, metadata !7118, metadata !DIExpression()), !dbg !7120
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7151
  ret i32 %6, !dbg !7151
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7152 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7156, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.value(metadata i32* %1, metadata !7157, metadata !DIExpression()), !dbg !7161
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7162
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7162
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7162
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7158, metadata !DIExpression()), !dbg !7161
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7163
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7163
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7163
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7160, metadata !DIExpression()), !dbg !7161
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !7164
  store i32 %9, i32* %1, align 4, !dbg !7165
  ret i32 0, !dbg !7166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7167 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7169, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 %1, metadata !7170, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i32 %2, metadata !7171, metadata !DIExpression()), !dbg !7175
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7176
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7176
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7176
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7172, metadata !DIExpression()), !dbg !7175
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7177
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7177
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7177
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7173, metadata !DIExpression()), !dbg !7175
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !7178
  call void @llvm.dbg.value(metadata i32 %10, metadata !7174, metadata !DIExpression()), !dbg !7175
  %11 = xor i32 %1, -1, !dbg !7179
  %12 = and i32 %10, %11, !dbg !7180
  %13 = and i32 %2, %1, !dbg !7181
  %14 = or i32 %12, %13, !dbg !7182
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !7183
  ret i32 0, !dbg !7184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7185 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7187, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i32 %1, metadata !7188, metadata !DIExpression()), !dbg !7191
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7192
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7192
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7192
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7189, metadata !DIExpression()), !dbg !7191
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7193
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7193
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7193
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7190, metadata !DIExpression()), !dbg !7191
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7194
  store volatile i32 %1, i32* %9, align 4, !dbg !7194
  ret i32 0, !dbg !7195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7196 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7198, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i32 %1, metadata !7199, metadata !DIExpression()), !dbg !7202
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7203
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7203
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7203
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7200, metadata !DIExpression()), !dbg !7202
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7204
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7204
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7204
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7201, metadata !DIExpression()), !dbg !7202
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !7205
  ret i32 0, !dbg !7206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7207 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7209, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata i32 %1, metadata !7210, metadata !DIExpression()), !dbg !7213
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7214
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7214
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7214
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7211, metadata !DIExpression()), !dbg !7213
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7215
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7215
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7215
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7212, metadata !DIExpression()), !dbg !7213
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7216
  %10 = load volatile i32, i32* %9, align 4, !dbg !7216
  %11 = xor i32 %10, %1, !dbg !7216
  store volatile i32 %11, i32* %9, align 4, !dbg !7216
  ret i32 0, !dbg !7217
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7218 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7220, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i8 %1, metadata !7221, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i32 %2, metadata !7222, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i32 %3, metadata !7223, metadata !DIExpression()), !dbg !7230
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7231
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7231
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7231
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7224, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i8* undef, metadata !7225, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i32 0, metadata !7227, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i32 0, metadata !7228, metadata !DIExpression()), !dbg !7230
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7232

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7233
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !7237
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7238
  %12 = load i32, i32* %11, align 4, !dbg !7238
  %13 = icmp eq i32 %10, %12, !dbg !7239
  br i1 %13, label %14, label %29, !dbg !7240

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !7241
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !7243
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !7244
  br label %29, !dbg !7245

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7246
  %17 = load i8*, i8** %16, align 4, !dbg !7246
  call void @llvm.dbg.value(metadata i8* %17, metadata !7225, metadata !DIExpression()), !dbg !7230
  %18 = zext i8 %1 to i32, !dbg !7247
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !7249
  %20 = icmp eq i32 %19, 0, !dbg !7250
  br i1 %20, label %21, label %29, !dbg !7251

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7252
  %23 = load i32, i32* %22, align 4, !dbg !7252
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !7253
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7254

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7227, metadata !DIExpression()), !dbg !7230
  br label %27, !dbg !7255

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7227, metadata !DIExpression()), !dbg !7230
  br label %27, !dbg !7257

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7227, metadata !DIExpression()), !dbg !7230
  br label %27, !dbg !7258

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7230
  call void @llvm.dbg.value(metadata i32 %28, metadata !7227, metadata !DIExpression()), !dbg !7230
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !7259
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !7260
  br label %29, !dbg !7260

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7230
  call void @llvm.dbg.value(metadata i32 %30, metadata !7228, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.label(metadata !7229), !dbg !7261
  ret i32 %30, !dbg !7262
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #12 !dbg !7263 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7265, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7266, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i1 %2, metadata !7267, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7269
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7270
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7270
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7270
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7268, metadata !DIExpression()), !dbg !7269
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7271
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !7272
  ret i32 %8, !dbg !7273
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #12 !dbg !7274 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7280, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7281, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.value(metadata i1 %2, metadata !7282, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7283
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !7284
  br i1 %4, label %10, label %5, !dbg !7286

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7287
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !7290
  %8 = or i1 %7, %2, !dbg !7291
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7291
  br i1 %2, label %11, label %13, !dbg !7291

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7292

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7293
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !7296
  br label %13, !dbg !7297

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7283
  ret i32 %14, !dbg !7298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7299 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7303, metadata !DIExpression()), !dbg !7304
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7305
  %3 = icmp eq %struct._snode* %2, null, !dbg !7305
  ret i1 %3, !dbg !7305
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !7306 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7310, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7311, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7312, metadata !DIExpression()), !dbg !7314
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7315
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7313, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7312, metadata !DIExpression()), !dbg !7314
  %4 = icmp eq %struct._snode* %3, null, !dbg !7317
  br i1 %4, label %15, label %5, !dbg !7315

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7313, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7312, metadata !DIExpression()), !dbg !7314
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7319
  br i1 %6, label %9, label %11, !dbg !7322

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7313, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7312, metadata !DIExpression()), !dbg !7314
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7319
  br i1 %8, label %9, label %11, !dbg !7322, !llvm.loop !7323

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !7324
  br label %15, !dbg !7324

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7313, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7312, metadata !DIExpression()), !dbg !7314
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !7317
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7313, metadata !DIExpression()), !dbg !7314
  %14 = icmp eq %struct._snode* %13, null, !dbg !7317
  br i1 %14, label %15, label %7, !dbg !7315, !llvm.loop !7323

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !7327 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7331, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7332, metadata !DIExpression()), !dbg !7333
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7334
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !7334
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !7334
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7335
  %5 = icmp eq %struct._snode* %4, null, !dbg !7335
  br i1 %5, label %6, label %8, !dbg !7334

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7337
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !7337
  br label %8, !dbg !7337

8:                                                ; preds = %6, %2
  ret void, !dbg !7334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7339 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7343, metadata !DIExpression()), !dbg !7344
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7345
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7345
  ret %struct._snode* %3, !dbg !7346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7347 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7351, metadata !DIExpression()), !dbg !7353
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7352, metadata !DIExpression()), !dbg !7353
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7354
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7355
  ret void, !dbg !7356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7357 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7359, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7360, metadata !DIExpression()), !dbg !7361
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7362
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7363
  ret void, !dbg !7364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7365 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7367, metadata !DIExpression()), !dbg !7368
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7369
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7369
  ret %struct._snode* %3, !dbg !7370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7371 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7373, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7374, metadata !DIExpression()), !dbg !7375
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7376
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7377
  ret void, !dbg !7378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !7379 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7383, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7384, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7385, metadata !DIExpression()), !dbg !7386
  %4 = icmp eq %struct._snode* %1, null, !dbg !7387
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !7389
  br i1 %4, label %6, label %11, !dbg !7390

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !7391
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7393
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7393
  br i1 %8, label %9, label %15, !dbg !7391

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7395
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !7395
  br label %15, !dbg !7395

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !7397
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7399
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7399
  br i1 %13, label %14, label %15, !dbg !7397

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !7401
  br label %15, !dbg !7401

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !7390
  ret void, !dbg !7390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !7403 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7407, metadata !DIExpression()), !dbg !7408
  %2 = icmp eq %struct._snode* %0, null, !dbg !7409
  br i1 %2, label %5, label %3, !dbg !7409

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !7409
  br label %5, !dbg !7409

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7409
  ret %struct._snode* %6, !dbg !7409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7410 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7412, metadata !DIExpression()), !dbg !7413
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !7414
  ret %struct._snode* %2, !dbg !7414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7415 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7417, metadata !DIExpression()), !dbg !7418
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7419
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7419
  ret %struct._snode* %3, !dbg !7420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7423, metadata !DIExpression()), !dbg !7426
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !7427, !range !7428
  call void @llvm.dbg.value(metadata i32 %2, metadata !7424, metadata !DIExpression()), !dbg !7426
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !7429
  call void @llvm.dbg.value(metadata i32 %3, metadata !7425, metadata !DIExpression()), !dbg !7426
  ret i32 %3, !dbg !7430
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7433, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata i8* %1, metadata !7434, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata i8* %1, metadata !7435, metadata !DIExpression()), !dbg !7436
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7437
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7437
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7438
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7438
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7438
  %8 = shl nuw i32 1, %0, !dbg !7439
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !7440
  ret void, !dbg !7441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7442 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7446, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.value(metadata i32 %1, metadata !7447, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7448, metadata !DIExpression()), !dbg !7452
  %4 = bitcast i64* %3 to i8*, !dbg !7453
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7453
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !7450, metadata !DIExpression()), !dbg !7452
  store i64 70368744177732, i64* %3, align 8, !dbg !7454
  call void @llvm.dbg.value(metadata i64* %3, metadata !7450, metadata !DIExpression(DW_OP_deref)), !dbg !7452
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !7455
  call void @llvm.dbg.value(metadata i32 %5, metadata !7451, metadata !DIExpression()), !dbg !7452
  %6 = icmp eq i32 %5, 0, !dbg !7456
  br i1 %6, label %7, label %8, !dbg !7458

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !7459
  br label %8, !dbg !7460

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7461
  ret void, !dbg !7461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !7462 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7464, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata i8* %0, metadata !7465, metadata !DIExpression()), !dbg !7467
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !7468
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !7466, metadata !DIExpression()), !dbg !7467
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !7469
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !7469
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !7470
  ret i32 %5, !dbg !7471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7474, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.value(metadata i32 %1, metadata !7475, metadata !DIExpression()), !dbg !7477
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !7478
  call void @llvm.dbg.value(metadata i32 %3, metadata !7476, metadata !DIExpression()), !dbg !7477
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !7479
  ret void, !dbg !7480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #2 !dbg !7481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7485, metadata !DIExpression()), !dbg !7486
  %2 = sdiv i32 %0, 4, !dbg !7487
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !7488
  %6 = add nsw i32 %5, 16, !dbg !7489
  %7 = shl i32 15, %6, !dbg !7490
  %8 = or i32 %7, %2, !dbg !7491
  ret i32 %8, !dbg !7492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7497, metadata !DIExpression()), !dbg !7499
  call void @llvm.dbg.value(metadata i32 %1, metadata !7498, metadata !DIExpression()), !dbg !7499
  %3 = and i32 %1, 255, !dbg !7500
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !7500
  %5 = load volatile i32, i32* %4, align 4, !dbg !7500
  %6 = lshr i32 %1, 16, !dbg !7500
  %7 = xor i32 %6, -1, !dbg !7500
  %8 = and i32 %5, %7, !dbg !7500
  call void @llvm.dbg.value(metadata i32 %6, metadata !7501, metadata !DIExpression()) #23, !dbg !7505
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7507, !srcloc !7508
  call void @llvm.dbg.value(metadata i32 %9, metadata !7504, metadata !DIExpression()) #23, !dbg !7505
  call void @llvm.dbg.value(metadata i32 %9, metadata !7509, metadata !DIExpression()) #23, !dbg !7514
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !7516, !range !5721
  %11 = shl i32 %0, %10, !dbg !7500
  %12 = or i32 %11, %8, !dbg !7500
  store volatile i32 %12, i32* %4, align 4, !dbg !7500
  ret void, !dbg !7517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7518 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7522, metadata !DIExpression()), !dbg !7527
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7523, metadata !DIExpression()), !dbg !7527
  call void @llvm.dbg.value(metadata i32 %2, metadata !7524, metadata !DIExpression()), !dbg !7527
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7528
  %5 = icmp eq %struct._snode* %4, null, !dbg !7528
  br i1 %5, label %21, label %6, !dbg !7528

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !7530
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7526, metadata !DIExpression()), !dbg !7527
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7525, metadata !DIExpression()), !dbg !7527
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7531
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7531
  %11 = load i32, i32* %10, align 4, !dbg !7531
  %12 = and i32 %11, %2, !dbg !7535
  %13 = icmp eq i32 %12, 0, !dbg !7535
  br i1 %13, label %19, label %14, !dbg !7536

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7525, metadata !DIExpression()), !dbg !7527
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7537
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7537
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7537
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !7539
  br label %19, !dbg !7540

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7525, metadata !DIExpression()), !dbg !7527
  %20 = icmp eq %struct._snode* %8, null, !dbg !7541
  br i1 %20, label %21, label %6, !dbg !7541

21:                                               ; preds = %19, %3
  ret void, !dbg !7542
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !7543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7545, metadata !DIExpression()), !dbg !7546
  %2 = and i32 %0, 255, !dbg !7547
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !7547
  %4 = load volatile i32, i32* %3, align 4, !dbg !7547
  %5 = lshr i32 %0, 16, !dbg !7547
  %6 = and i32 %4, %5, !dbg !7547
  call void @llvm.dbg.value(metadata i32 %5, metadata !7501, metadata !DIExpression()) #23, !dbg !7548
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !7550, !srcloc !7508
  call void @llvm.dbg.value(metadata i32 %7, metadata !7504, metadata !DIExpression()) #23, !dbg !7548
  call void @llvm.dbg.value(metadata i32 %7, metadata !7509, metadata !DIExpression()) #23, !dbg !7551
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7553, !range !5721
  %9 = lshr i32 %6, %8, !dbg !7554
  ret i32 %9, !dbg !7555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7556 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7561, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.value(metadata i32 %1, metadata !7562, metadata !DIExpression()), !dbg !7563
  %3 = shl i32 %1, 16, !dbg !7564
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !7564
  store volatile i32 %3, i32* %4, align 4, !dbg !7564
  ret void, !dbg !7565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7566 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7570, metadata !DIExpression()), !dbg !7571
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7572
  %3 = load volatile i32, i32* %2, align 4, !dbg !7572
  ret i32 %3, !dbg !7573
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7574 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7576, metadata !DIExpression()), !dbg !7578
  call void @llvm.dbg.value(metadata i32 %1, metadata !7577, metadata !DIExpression()), !dbg !7578
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7579
  store volatile i32 %1, i32* %3, align 4, !dbg !7579
  ret void, !dbg !7580
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7581 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7583, metadata !DIExpression()), !dbg !7584
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !7585
  %3 = load volatile i32, i32* %2, align 4, !dbg !7585
  ret i32 %3, !dbg !7586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !7587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7591, metadata !DIExpression()), !dbg !7593
  call void @llvm.dbg.value(metadata i32* %1, metadata !7592, metadata !DIExpression()), !dbg !7593
  %3 = and i32 %0, 131072, !dbg !7594
  %4 = icmp eq i32 %3, 0, !dbg !7596
  br i1 %4, label %22, label %5, !dbg !7597

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !7598
  %6 = and i32 %0, 2, !dbg !7600
  %7 = icmp eq i32 %6, 0, !dbg !7602
  br i1 %7, label %11, label %8, !dbg !7603

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !7604
  %10 = icmp eq i32 %9, 0, !dbg !7604
  br i1 %10, label %33, label %11, !dbg !7607

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !7608
  store i32 %12, i32* %1, align 4, !dbg !7608
  %13 = and i32 %0, 16, !dbg !7609
  %14 = icmp eq i32 %13, 0, !dbg !7611
  br i1 %14, label %17, label %15, !dbg !7612

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !7613
  br label %31, !dbg !7615

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !7616
  %19 = icmp eq i32 %18, 0, !dbg !7618
  br i1 %19, label %33, label %20, !dbg !7619

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !7620
  br label %31, !dbg !7622

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !7623
  %24 = icmp eq i32 %23, 0, !dbg !7625
  br i1 %24, label %31, label %25, !dbg !7626

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !7627
  %27 = icmp eq i32 %26, 0, !dbg !7630
  br i1 %27, label %28, label %31, !dbg !7631

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !7632
  br label %33, !dbg !7633

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !7593
  ret i32 %34, !dbg !7633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7634 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7638, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i32 %1, metadata !7639, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i32 %2, metadata !7640, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i32 %3, metadata !7641, metadata !DIExpression()), !dbg !7649
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7650
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7650
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7650
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7642, metadata !DIExpression()), !dbg !7649
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !7651
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !7651
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !7651
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !7643, metadata !DIExpression()), !dbg !7649
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !7652
  call void @llvm.dbg.value(metadata i32 %11, metadata !7644, metadata !DIExpression()), !dbg !7649
  %12 = and i32 %2, 48, !dbg !7653
  call void @llvm.dbg.value(metadata i32 %12, metadata !7645, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i32 %2, metadata !7646, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !7649
  call void @llvm.dbg.value(metadata i32 %2, metadata !7647, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !7649
  call void @llvm.dbg.value(metadata i32 %2, metadata !7648, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !7649
  %13 = lshr i32 %2, 6, !dbg !7654
  %14 = and i32 %13, 1, !dbg !7654
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !7655
  %15 = lshr i32 %2, 7, !dbg !7656
  %16 = and i32 %15, 3, !dbg !7656
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !7657
  %17 = lshr i32 %2, 9, !dbg !7658
  %18 = and i32 %17, 3, !dbg !7658
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !7659
  %19 = icmp eq i32 %12, 32, !dbg !7660
  br i1 %19, label %20, label %24, !dbg !7662

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !7663
  br i1 %21, label %22, label %23, !dbg !7666

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !7667
  br label %24, !dbg !7669

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !7670
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !7672
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !7673
  ret void, !dbg !7674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #2 !dbg !7675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7677, metadata !DIExpression()), !dbg !7679
  %2 = shl nuw i32 1, %0, !dbg !7680
  call void @llvm.dbg.value(metadata i32 %2, metadata !7678, metadata !DIExpression()), !dbg !7679
  ret i32 %2, !dbg !7681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !7682 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7686, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %1, metadata !7687, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %2, metadata !7688, metadata !DIExpression()), !dbg !7689
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !7690
  %5 = load volatile i32, i32* %4, align 4, !dbg !7690
  %6 = xor i32 %1, -1, !dbg !7690
  %7 = and i32 %5, %6, !dbg !7690
  %8 = mul i32 %2, %1, !dbg !7690
  %9 = or i32 %7, %8, !dbg !7690
  store volatile i32 %9, i32* %4, align 4, !dbg !7690
  ret void, !dbg !7691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7692 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7694, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i32 %1, metadata !7695, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i32 %2, metadata !7696, metadata !DIExpression()), !dbg !7697
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !7698
  %5 = load volatile i32, i32* %4, align 4, !dbg !7698
  call void @llvm.dbg.value(metadata i32 %1, metadata !7501, metadata !DIExpression()) #23, !dbg !7699
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7701, !srcloc !7508
  call void @llvm.dbg.value(metadata i32 %6, metadata !7504, metadata !DIExpression()) #23, !dbg !7699
  call void @llvm.dbg.value(metadata i32 %6, metadata !7509, metadata !DIExpression()) #23, !dbg !7702
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7704, !range !5721
  %8 = shl nuw nsw i32 %7, 1, !dbg !7698
  %9 = shl i32 3, %8, !dbg !7698
  %10 = xor i32 %9, -1, !dbg !7698
  %11 = and i32 %5, %10, !dbg !7698
  call void @llvm.dbg.value(metadata i32 %1, metadata !7501, metadata !DIExpression()) #23, !dbg !7705
  call void @llvm.dbg.value(metadata i32 %6, metadata !7504, metadata !DIExpression()) #23, !dbg !7705
  call void @llvm.dbg.value(metadata i32 %6, metadata !7509, metadata !DIExpression()) #23, !dbg !7707
  %12 = shl i32 %2, %8, !dbg !7698
  %13 = or i32 %11, %12, !dbg !7698
  store volatile i32 %13, i32* %4, align 4, !dbg !7698
  ret void, !dbg !7709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7710 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7712, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i32 %1, metadata !7713, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i32 %2, metadata !7714, metadata !DIExpression()), !dbg !7715
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !7716
  %5 = load volatile i32, i32* %4, align 4, !dbg !7716
  call void @llvm.dbg.value(metadata i32 %1, metadata !7501, metadata !DIExpression()) #23, !dbg !7717
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7719, !srcloc !7508
  call void @llvm.dbg.value(metadata i32 %6, metadata !7504, metadata !DIExpression()) #23, !dbg !7717
  call void @llvm.dbg.value(metadata i32 %6, metadata !7509, metadata !DIExpression()) #23, !dbg !7720
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7722, !range !5721
  %8 = shl nuw nsw i32 %7, 1, !dbg !7716
  %9 = shl i32 3, %8, !dbg !7716
  %10 = xor i32 %9, -1, !dbg !7716
  %11 = and i32 %5, %10, !dbg !7716
  call void @llvm.dbg.value(metadata i32 %1, metadata !7501, metadata !DIExpression()) #23, !dbg !7723
  call void @llvm.dbg.value(metadata i32 %6, metadata !7504, metadata !DIExpression()) #23, !dbg !7723
  call void @llvm.dbg.value(metadata i32 %6, metadata !7509, metadata !DIExpression()) #23, !dbg !7725
  %12 = shl i32 %2, %8, !dbg !7716
  %13 = or i32 %11, %12, !dbg !7716
  store volatile i32 %13, i32* %4, align 4, !dbg !7716
  ret void, !dbg !7727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7728 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7730, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i32 %1, metadata !7731, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i32 %2, metadata !7732, metadata !DIExpression()), !dbg !7733
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !7734
  %5 = load volatile i32, i32* %4, align 4, !dbg !7734
  call void @llvm.dbg.value(metadata i32 %1, metadata !7501, metadata !DIExpression()) #23, !dbg !7735
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7737, !srcloc !7508
  call void @llvm.dbg.value(metadata i32 %6, metadata !7504, metadata !DIExpression()) #23, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %6, metadata !7509, metadata !DIExpression()) #23, !dbg !7738
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7740, !range !5721
  %8 = shl nuw nsw i32 %7, 2, !dbg !7734
  %9 = shl i32 15, %8, !dbg !7734
  %10 = xor i32 %9, -1, !dbg !7734
  %11 = and i32 %5, %10, !dbg !7734
  call void @llvm.dbg.value(metadata i32 %1, metadata !7501, metadata !DIExpression()) #23, !dbg !7741
  call void @llvm.dbg.value(metadata i32 %6, metadata !7504, metadata !DIExpression()) #23, !dbg !7741
  call void @llvm.dbg.value(metadata i32 %6, metadata !7509, metadata !DIExpression()) #23, !dbg !7743
  %12 = shl i32 %2, %8, !dbg !7734
  %13 = or i32 %11, %12, !dbg !7734
  store volatile i32 %13, i32* %4, align 4, !dbg !7734
  ret void, !dbg !7745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7746 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7748, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %1, metadata !7749, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %2, metadata !7750, metadata !DIExpression()), !dbg !7751
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !7752
  %5 = load volatile i32, i32* %4, align 4, !dbg !7752
  %6 = lshr i32 %1, 8, !dbg !7752
  call void @llvm.dbg.value(metadata i32 %6, metadata !7501, metadata !DIExpression()) #23, !dbg !7753
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7755, !srcloc !7508
  call void @llvm.dbg.value(metadata i32 %7, metadata !7504, metadata !DIExpression()) #23, !dbg !7753
  call void @llvm.dbg.value(metadata i32 %7, metadata !7509, metadata !DIExpression()) #23, !dbg !7756
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7758, !range !5721
  %9 = shl nuw nsw i32 %8, 2, !dbg !7752
  %10 = shl i32 15, %9, !dbg !7752
  %11 = xor i32 %10, -1, !dbg !7752
  %12 = and i32 %5, %11, !dbg !7752
  call void @llvm.dbg.value(metadata i32 %6, metadata !7501, metadata !DIExpression()) #23, !dbg !7759
  call void @llvm.dbg.value(metadata i32 %7, metadata !7504, metadata !DIExpression()) #23, !dbg !7759
  call void @llvm.dbg.value(metadata i32 %7, metadata !7509, metadata !DIExpression()) #23, !dbg !7761
  %13 = shl i32 %2, %9, !dbg !7752
  %14 = or i32 %12, %13, !dbg !7752
  store volatile i32 %14, i32* %4, align 4, !dbg !7752
  ret void, !dbg !7763
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7764 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7766, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.value(metadata i32 %1, metadata !7767, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.value(metadata i32 %2, metadata !7768, metadata !DIExpression()), !dbg !7769
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !7770
  %5 = load volatile i32, i32* %4, align 4, !dbg !7770
  call void @llvm.dbg.value(metadata i32 %1, metadata !7501, metadata !DIExpression()) #23, !dbg !7771
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7773, !srcloc !7508
  call void @llvm.dbg.value(metadata i32 %6, metadata !7504, metadata !DIExpression()) #23, !dbg !7771
  call void @llvm.dbg.value(metadata i32 %6, metadata !7509, metadata !DIExpression()) #23, !dbg !7774
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7776, !range !5721
  %8 = shl nuw nsw i32 %7, 1, !dbg !7770
  %9 = shl i32 3, %8, !dbg !7770
  %10 = xor i32 %9, -1, !dbg !7770
  %11 = and i32 %5, %10, !dbg !7770
  call void @llvm.dbg.value(metadata i32 %1, metadata !7501, metadata !DIExpression()) #23, !dbg !7777
  call void @llvm.dbg.value(metadata i32 %6, metadata !7504, metadata !DIExpression()) #23, !dbg !7777
  call void @llvm.dbg.value(metadata i32 %6, metadata !7509, metadata !DIExpression()) #23, !dbg !7779
  %12 = shl i32 %2, %8, !dbg !7770
  %13 = or i32 %11, %12, !dbg !7770
  store volatile i32 %13, i32* %4, align 4, !dbg !7770
  ret void, !dbg !7781
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !7782 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7784, metadata !DIExpression()), !dbg !7787
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7788
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !7788
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !7788
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !7785, metadata !DIExpression()), !dbg !7787
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !7789
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !7790
  %6 = tail call fastcc zeroext i1 @device_is_ready.40() #24, !dbg !7791
  br i1 %6, label %7, label %11, !dbg !7793

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !7794
  call void @llvm.dbg.value(metadata i32 %8, metadata !7786, metadata !DIExpression()), !dbg !7787
  %9 = icmp slt i32 %8, 0, !dbg !7795
  %10 = select i1 %9, i32 %8, i32 0, !dbg !7797
  br label %11, !dbg !7797

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !7787
  ret i32 %12, !dbg !7798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.40() unnamed_addr #1 !dbg !7799 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7803, metadata !DIExpression()), !dbg !7804
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7805, !srcloc !7807
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.41() #24, !dbg !7808
  ret i1 %1, !dbg !7809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7814, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i8 1, metadata !7815, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !7816, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i32 0, metadata !7817, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7818, metadata !DIExpression()), !dbg !7819
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7820
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !7820
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !7820
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !7816, metadata !DIExpression()), !dbg !7819
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !7821
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !7824
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !7825
  call void @llvm.dbg.value(metadata i32 %7, metadata !7817, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i32 %7, metadata !7817, metadata !DIExpression()), !dbg !7819
  ret i32 %7, !dbg !7826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.41() unnamed_addr #1 !dbg !7827 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7829, metadata !DIExpression()), !dbg !7830
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !7831
  ret i1 %1, !dbg !7832
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7833 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7837, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %1, metadata !7838, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %2, metadata !7839, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 %3, metadata !7840, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32 0, metadata !7841, metadata !DIExpression()), !dbg !7845
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !7846
  %5 = icmp eq i32 %3, 17, !dbg !7847
  br i1 %5, label %6, label %14, !dbg !7848

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !7849
  call void @llvm.dbg.value(metadata i32 %7, metadata !7842, metadata !DIExpression()), !dbg !7850
  %8 = icmp eq i32 %7, 0, !dbg !7851
  %9 = shl nuw i32 1, %1, !dbg !7853
  br i1 %8, label %12, label %10, !dbg !7854

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !7855
  br label %14, !dbg !7857

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !7858
  br label %14, !dbg !7861

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !7862
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !7863 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7865, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.value(metadata i8* %1, metadata !7866, metadata !DIExpression()), !dbg !7869
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7870
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7870
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7870
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7867, metadata !DIExpression()), !dbg !7869
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !7871
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7871
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !7873
  %9 = icmp eq i32 %8, 0, !dbg !7873
  br i1 %9, label %12, label %10, !dbg !7874

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7875
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !7877
  br label %12, !dbg !7878

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7879
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !7881
  %15 = icmp eq i32 %14, 0, !dbg !7881
  br i1 %15, label %19, label %16, !dbg !7882

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7883
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !7884
  store i8 %18, i8* %1, align 1, !dbg !7885
  br label %19, !dbg !7886

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !7869
  ret i32 %20, !dbg !7887
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !7888 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7890, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.value(metadata i8 %1, metadata !7891, metadata !DIExpression()), !dbg !7894
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7895
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7895
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7895
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7892, metadata !DIExpression()), !dbg !7894
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !7896

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7897
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !7900
  %10 = icmp eq i32 %9, 0, !dbg !7900
  br i1 %10, label %18, label %11, !dbg !7901

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !7902, !srcloc !7909
  call void @llvm.dbg.value(metadata i32 undef, metadata !7905, metadata !DIExpression()) #23, !dbg !7910
  call void @llvm.dbg.value(metadata i32 undef, metadata !7906, metadata !DIExpression()) #23, !dbg !7910
  call void @llvm.dbg.value(metadata i32 undef, metadata !7893, metadata !DIExpression()), !dbg !7894
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7911
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !7913
  %15 = icmp eq i32 %14, 0, !dbg !7913
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !7902
  br i1 %15, label %17, label %19, !dbg !7914

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !7905, metadata !DIExpression()) #23, !dbg !7910
  call void @llvm.dbg.value(metadata i32 %16, metadata !7893, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.value(metadata i32 undef, metadata !7915, metadata !DIExpression()) #23, !dbg !7918
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !7920, !srcloc !7921
  br label %18, !dbg !7922

18:                                               ; preds = %17, %7
  br label %7, !dbg !7897, !llvm.loop !7923

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !7902
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7925
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !7926
  call void @llvm.dbg.value(metadata i32 %20, metadata !7915, metadata !DIExpression()) #23, !dbg !7927
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !7929, !srcloc !7921
  ret void, !dbg !7930
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !7931 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7933, metadata !DIExpression()), !dbg !7936
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7937
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !7937
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !7937
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !7934, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.value(metadata i32 0, metadata !7935, metadata !DIExpression()), !dbg !7936
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !7938
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7938
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !7940
  %8 = icmp ne i32 %7, 0, !dbg !7940
  %9 = zext i1 %8 to i32, !dbg !7941
  call void @llvm.dbg.value(metadata i32 %9, metadata !7935, metadata !DIExpression()), !dbg !7936
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7942
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !7944
  %12 = icmp eq i32 %11, 0, !dbg !7944
  %13 = or i32 %9, 2, !dbg !7945
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !7945
  call void @llvm.dbg.value(metadata i32 %14, metadata !7935, metadata !DIExpression()), !dbg !7936
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7946
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !7948
  %17 = icmp eq i32 %16, 0, !dbg !7948
  %18 = or i32 %14, 4, !dbg !7949
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !7949
  call void @llvm.dbg.value(metadata i32 %19, metadata !7935, metadata !DIExpression()), !dbg !7936
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7950
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !7952
  %22 = icmp eq i32 %21, 0, !dbg !7952
  %23 = or i32 %19, 8, !dbg !7953
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !7953
  call void @llvm.dbg.value(metadata i32 %24, metadata !7935, metadata !DIExpression()), !dbg !7936
  %25 = and i32 %24, 8, !dbg !7954
  %26 = icmp eq i32 %25, 0, !dbg !7954
  br i1 %26, label %29, label %27, !dbg !7956

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7957
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !7959
  br label %29, !dbg !7960

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !7961
  %31 = icmp eq i32 %30, 0, !dbg !7961
  br i1 %31, label %34, label %32, !dbg !7963

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7964
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !7966
  br label %34, !dbg !7967

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !7968
  %36 = icmp eq i32 %35, 0, !dbg !7968
  br i1 %36, label %39, label %37, !dbg !7970

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7971
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !7973
  br label %39, !dbg !7974

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !7975
  %41 = icmp eq i32 %40, 0, !dbg !7975
  br i1 %41, label %44, label %42, !dbg !7977

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7978
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !7980
  br label %44, !dbg !7981

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7982
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !7983
  ret i32 %24, !dbg !7984
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !7985 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7987, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !7988, metadata !DIExpression()), !dbg !7996
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7997
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7997
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7997
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7989, metadata !DIExpression()), !dbg !7996
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7998
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !7998
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !7998
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !7990, metadata !DIExpression()), !dbg !7996
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !7999
  %10 = load i8, i8* %9, align 4, !dbg !7999
  %11 = zext i8 %10 to i32, !dbg !8000
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !8001
  call void @llvm.dbg.value(metadata i32 %12, metadata !7992, metadata !DIExpression()), !dbg !7996
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8002
  %14 = load i8, i8* %13, align 1, !dbg !8002
  %15 = zext i8 %14 to i32, !dbg !8003
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !8004
  call void @llvm.dbg.value(metadata i32 %16, metadata !7993, metadata !DIExpression()), !dbg !7996
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8005
  %18 = load i8, i8* %17, align 2, !dbg !8005
  %19 = zext i8 %18 to i32, !dbg !8006
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !8007
  call void @llvm.dbg.value(metadata i32 %20, metadata !7994, metadata !DIExpression()), !dbg !7996
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8008
  %22 = load i8, i8* %21, align 1, !dbg !8008
  %23 = zext i8 %22 to i32, !dbg !8009
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !8010
  call void @llvm.dbg.value(metadata i32 %24, metadata !7995, metadata !DIExpression()), !dbg !7996
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8011

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8013
  br i1 %26, label %69, label %27, !dbg !8015

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8016

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8017
  br i1 %29, label %65, label %30, !dbg !8017

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8019
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !7996
  br i1 %31, label %38, label %34, !dbg !8021

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8022
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !8022

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8025
  br i1 %37, label %38, label %69, !dbg !8026

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8027
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !8028
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !8029
  %41 = icmp eq i32 %12, %40, !dbg !8031
  br i1 %41, label %43, label %42, !dbg !8032

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !8033
  br label %43, !dbg !8035

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !8036
  %45 = icmp eq i32 %16, %44, !dbg !8038
  br i1 %45, label %47, label %46, !dbg !8039

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !8040
  br label %47, !dbg !8042

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !8043
  %49 = icmp eq i32 %20, %48, !dbg !8045
  br i1 %49, label %51, label %50, !dbg !8046

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !8047
  br label %51, !dbg !8049

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !8050
  %53 = icmp eq i32 %24, %52, !dbg !8052
  br i1 %53, label %55, label %54, !dbg !8053

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !8054
  br label %55, !dbg !8056

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8057
  %57 = load i32, i32* %56, align 4, !dbg !8057
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8059
  %59 = load i32, i32* %58, align 4, !dbg !8059
  %60 = icmp eq i32 %57, %59, !dbg !8060
  br i1 %60, label %63, label %61, !dbg !8061

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !8062
  %62 = load i32, i32* %56, align 4, !dbg !8064
  store i32 %62, i32* %58, align 4, !dbg !8065
  br label %63, !dbg !8066

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8067
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !8068
  br label %69, !dbg !8069

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8017
  %67 = and i8 %66, 1, !dbg !8017
  %68 = icmp eq i8 %67, 0, !dbg !8017
  br i1 %68, label %30, label %69, !dbg !8017

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !7996
  ret i32 %70, !dbg !8070
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8071 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8073, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8074, metadata !DIExpression()), !dbg !8076
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8077
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8077
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8077
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8075, metadata !DIExpression()), !dbg !8076
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8078
  %7 = load i32, i32* %6, align 4, !dbg !8078
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8079
  store i32 %7, i32* %8, align 4, !dbg !8080
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8081, !range !8082
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !8083
  %11 = trunc i32 %10 to i8, !dbg !8083
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8084
  store i8 %11, i8* %12, align 4, !dbg !8085
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !8086, !range !8087
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !8088
  %15 = trunc i32 %14 to i8, !dbg !8088
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8089
  store i8 %15, i8* %16, align 1, !dbg !8090
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !8091
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8092, !range !8082
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !8093
  %20 = trunc i32 %19 to i8, !dbg !8093
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8094
  store i8 %20, i8* %21, align 2, !dbg !8095
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !8096, !range !8097
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !8098
  %24 = trunc i32 %23 to i8, !dbg !8098
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8099
  store i8 %24, i8* %25, align 1, !dbg !8100
  ret i32 0, !dbg !8101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8102 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8106, metadata !DIExpression()), !dbg !8108
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8109
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8109
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8109
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8107, metadata !DIExpression()), !dbg !8108
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8110
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8110
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !8111
  ret i32 %7, !dbg !8112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #2 !dbg !8113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8117, metadata !DIExpression()), !dbg !8118
  %2 = icmp eq i32 %0, 1024, !dbg !8119
  %3 = select i1 %2, i32 2, i32 0, !dbg !8119
  %4 = icmp eq i32 %0, 1536, !dbg !8119
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8119
  ret i32 %5, !dbg !8120
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8121 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8123, metadata !DIExpression()), !dbg !8125
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8126
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8126
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8126
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8124, metadata !DIExpression()), !dbg !8125
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8127
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8127
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !8128
  ret i32 %7, !dbg !8129
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #10 !dbg !8130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8134, metadata !DIExpression()), !dbg !8135
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8136
  %3 = icmp ult i32 %2, 4, !dbg !8136
  br i1 %3, label %4, label %7, !dbg !8136

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8136
  %6 = load i32, i32* %5, align 4, !dbg !8136
  br label %7, !dbg !8136

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8137
  ret i32 %8, !dbg !8139
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8140 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8142, metadata !DIExpression()), !dbg !8144
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8145
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8145
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8145
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8143, metadata !DIExpression()), !dbg !8144
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8146
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8146
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !8147
  ret i32 %7, !dbg !8148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !8149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8153, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i32 %1, metadata !8154, metadata !DIExpression()), !dbg !8155
  %3 = icmp eq i32 %0, 4096, !dbg !8156
  %4 = icmp eq i32 %1, 0, !dbg !8156
  %5 = select i1 %4, i32 4, i32 3, !dbg !8156
  %6 = select i1 %4, i32 3, i32 2, !dbg !8156
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8156
  ret i32 %7, !dbg !8157
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8158 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8160, metadata !DIExpression()), !dbg !8162
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8163
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8163
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8163
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8161, metadata !DIExpression()), !dbg !8162
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8164
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8164
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !8165
  ret i32 %7, !dbg !8166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !8167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8171, metadata !DIExpression()), !dbg !8172
  %2 = icmp eq i32 %0, 768, !dbg !8173
  %3 = zext i1 %2 to i32, !dbg !8172
  ret i32 %3, !dbg !8175
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8176 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8181, metadata !DIExpression()), !dbg !8182
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8183
  %3 = load volatile i32, i32* %2, align 4, !dbg !8183
  %4 = and i32 %3, 768, !dbg !8183
  ret i32 %4, !dbg !8184
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8185 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8187, metadata !DIExpression()), !dbg !8188
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8189
  %3 = load volatile i32, i32* %2, align 4, !dbg !8189
  %4 = and i32 %3, 4096, !dbg !8189
  ret i32 %4, !dbg !8190
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8191 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8193, metadata !DIExpression()), !dbg !8194
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8195
  %3 = load volatile i32, i32* %2, align 4, !dbg !8195
  %4 = and i32 %3, 12288, !dbg !8195
  ret i32 %4, !dbg !8196
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8197 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8199, metadata !DIExpression()), !dbg !8200
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8201
  %3 = load volatile i32, i32* %2, align 4, !dbg !8201
  %4 = and i32 %3, 1536, !dbg !8201
  ret i32 %4, !dbg !8202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #2 !dbg !8203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8207, metadata !DIExpression()), !dbg !8208
  %2 = icmp eq i32 %0, 2, !dbg !8209
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8209
  %4 = icmp eq i32 %0, 1, !dbg !8209
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8209
  ret i32 %5, !dbg !8210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #2 !dbg !8211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8215, metadata !DIExpression()), !dbg !8216
  %2 = icmp ult i32 %0, 3, !dbg !8217
  br i1 %2, label %3, label %6, !dbg !8217

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8217
  %5 = load i32, i32* %4, align 4, !dbg !8217
  br label %6, !dbg !8217

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8218
  ret i32 %7, !dbg !8220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !8221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8225, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata i32 %1, metadata !8226, metadata !DIExpression()), !dbg !8227
  %3 = icmp eq i32 %0, 4, !dbg !8228
  %4 = icmp eq i32 %1, 0, !dbg !8228
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8228
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8228
  ret i32 %6, !dbg !8229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !8230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8234, metadata !DIExpression()), !dbg !8235
  %2 = icmp eq i32 %0, 1, !dbg !8236
  %3 = select i1 %2, i32 768, i32 0, !dbg !8235
  ret i32 %3, !dbg !8238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8239 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8243, metadata !DIExpression()), !dbg !8244
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8245
  %3 = load volatile i32, i32* %2, align 4, !dbg !8245
  %4 = and i32 %3, -8193, !dbg !8245
  store volatile i32 %4, i32* %2, align 4, !dbg !8245
  ret void, !dbg !8246
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8247 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8251, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.value(metadata i32 %1, metadata !8252, metadata !DIExpression()), !dbg !8254
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8255
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8255
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8255
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8253, metadata !DIExpression()), !dbg !8254
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8256
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8256
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8257
  ret void, !dbg !8258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8261, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 %1, metadata !8262, metadata !DIExpression()), !dbg !8264
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8265
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8265
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8265
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8263, metadata !DIExpression()), !dbg !8264
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8266
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8266
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8267
  ret void, !dbg !8268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8269 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8271, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.value(metadata i32 %1, metadata !8272, metadata !DIExpression()), !dbg !8274
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8275
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8275
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8275
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8273, metadata !DIExpression()), !dbg !8274
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8276
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8276
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8277
  ret void, !dbg !8278
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8279 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8281, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %1, metadata !8282, metadata !DIExpression()), !dbg !8284
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8285
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8285
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8285
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8283, metadata !DIExpression()), !dbg !8284
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8286
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8286
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8287
  ret void, !dbg !8288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8289 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8291, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.value(metadata i32 %1, metadata !8292, metadata !DIExpression()), !dbg !8296
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8297
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8297
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8297
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8293, metadata !DIExpression()), !dbg !8296
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8298
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8298
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8298
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8294, metadata !DIExpression()), !dbg !8296
  %10 = bitcast i32* %3 to i8*, !dbg !8299
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8299
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8300
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8300
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8304
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8304
  %15 = load i8*, i8** %14, align 4, !dbg !8304
  call void @llvm.dbg.value(metadata i32* %3, metadata !8295, metadata !DIExpression(DW_OP_deref)), !dbg !8296
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !8305
  %17 = icmp slt i32 %16, 0, !dbg !8306
  br i1 %17, label %23, label %18, !dbg !8307

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8308
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8308
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #24, !dbg !8309
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8310
  %22 = load i32, i32* %3, align 4, !dbg !8311
  call void @llvm.dbg.value(metadata i32 %22, metadata !8295, metadata !DIExpression()), !dbg !8296
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #24, !dbg !8312
  br label %23, !dbg !8313

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8313
  ret void, !dbg !8313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8314 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8316, metadata !DIExpression()), !dbg !8317
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8318
  %3 = load volatile i32, i32* %2, align 4, !dbg !8318
  %4 = or i32 %3, 8192, !dbg !8318
  store volatile i32 %4, i32* %2, align 4, !dbg !8318
  ret void, !dbg !8319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8320 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8322, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i8* %1, metadata !8323, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i32* %2, metadata !8324, metadata !DIExpression()), !dbg !8326
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8327
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8327
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8327
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8325, metadata !DIExpression()), !dbg !8326
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8328
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8328
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8330
  br i1 %9, label %12, label %10, !dbg !8331

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !8332
  br label %12, !dbg !8333

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8326
  ret i32 %13, !dbg !8334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8335 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8339, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.value(metadata i32 0, metadata !8340, metadata !DIExpression()), !dbg !8341
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8342
  %3 = load volatile i32, i32* %2, align 4, !dbg !8342
  %4 = and i32 %3, -32769, !dbg !8342
  store volatile i32 %4, i32* %2, align 4, !dbg !8342
  ret void, !dbg !8343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8344 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8348, metadata !DIExpression()), !dbg !8352
  call void @llvm.dbg.value(metadata i32 %1, metadata !8349, metadata !DIExpression()), !dbg !8352
  call void @llvm.dbg.value(metadata i32 0, metadata !8350, metadata !DIExpression()), !dbg !8352
  call void @llvm.dbg.value(metadata i32 %2, metadata !8351, metadata !DIExpression()), !dbg !8352
  %4 = zext i32 %1 to i64, !dbg !8353
  %5 = mul nuw nsw i64 %4, 25, !dbg !8353
  %6 = zext i32 %2 to i64, !dbg !8353
  %7 = shl nuw nsw i64 %6, 2, !dbg !8353
  %8 = udiv i64 %5, %7, !dbg !8353
  %9 = trunc i64 %8 to i32, !dbg !8353
  %10 = udiv i32 %9, 100, !dbg !8353
  %11 = shl nuw nsw i32 %10, 4, !dbg !8353
  %12 = mul i32 %10, -100, !dbg !8353
  %13 = add i32 %12, %9, !dbg !8353
  %14 = shl i32 %13, 4, !dbg !8353
  %15 = add i32 %14, 50, !dbg !8353
  %16 = udiv i32 %15, 100, !dbg !8353
  %17 = and i32 %16, 240, !dbg !8353
  %18 = add nuw nsw i32 %17, %11, !dbg !8353
  %19 = and i32 %16, 15, !dbg !8353
  %20 = and i32 %18, 65520, !dbg !8356
  %21 = or i32 %20, %19, !dbg !8356
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8357
  store volatile i32 %21, i32* %22, align 4, !dbg !8358
  ret void, !dbg !8359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8360 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8362, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata i32 %1, metadata !8363, metadata !DIExpression()), !dbg !8364
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8365
  %4 = load volatile i32, i32* %3, align 4, !dbg !8365
  %5 = and i32 %4, -769, !dbg !8365
  %6 = or i32 %5, %1, !dbg !8365
  store volatile i32 %6, i32* %3, align 4, !dbg !8365
  ret void, !dbg !8366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8367 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8369, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %1, metadata !8370, metadata !DIExpression()), !dbg !8371
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8372
  %4 = load volatile i32, i32* %3, align 4, !dbg !8372
  %5 = and i32 %4, -4097, !dbg !8372
  %6 = or i32 %5, %1, !dbg !8372
  store volatile i32 %6, i32* %3, align 4, !dbg !8372
  ret void, !dbg !8373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8374 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8376, metadata !DIExpression()), !dbg !8378
  call void @llvm.dbg.value(metadata i32 %1, metadata !8377, metadata !DIExpression()), !dbg !8378
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8379
  %4 = load volatile i32, i32* %3, align 4, !dbg !8379
  %5 = and i32 %4, -12289, !dbg !8379
  %6 = or i32 %5, %1, !dbg !8379
  store volatile i32 %6, i32* %3, align 4, !dbg !8379
  ret void, !dbg !8380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8381 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8383, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 %1, metadata !8384, metadata !DIExpression()), !dbg !8385
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8386
  %4 = load volatile i32, i32* %3, align 4, !dbg !8386
  %5 = and i32 %4, -1537, !dbg !8386
  %6 = or i32 %5, %1, !dbg !8386
  store volatile i32 %6, i32* %3, align 4, !dbg !8386
  ret void, !dbg !8387
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8388 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8390, metadata !DIExpression()), !dbg !8391
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8392
  %3 = load volatile i32, i32* %2, align 4, !dbg !8392
  %4 = lshr i32 %3, 3, !dbg !8393
  %5 = and i32 %4, 1, !dbg !8393
  ret i32 %5, !dbg !8394
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8395 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8397, metadata !DIExpression()), !dbg !8398
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8399
  %3 = load volatile i32, i32* %2, align 4, !dbg !8399
  %4 = and i32 %3, 1, !dbg !8399
  ret i32 %4, !dbg !8400
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8401 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8403, metadata !DIExpression()), !dbg !8404
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8405
  %3 = load volatile i32, i32* %2, align 4, !dbg !8405
  %4 = lshr i32 %3, 1, !dbg !8406
  %5 = and i32 %4, 1, !dbg !8406
  ret i32 %5, !dbg !8407
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8408 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8410, metadata !DIExpression()), !dbg !8411
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8412
  %3 = load volatile i32, i32* %2, align 4, !dbg !8412
  %4 = lshr i32 %3, 8, !dbg !8413
  %5 = and i32 %4, 1, !dbg !8413
  ret i32 %5, !dbg !8414
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8415 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8417, metadata !DIExpression()), !dbg !8418
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8419
  store volatile i32 -257, i32* %2, align 4, !dbg !8419
  ret void, !dbg !8420
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8421 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8423, metadata !DIExpression()), !dbg !8425
  %3 = bitcast i32* %2 to i8*, !dbg !8426
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8426
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8424, metadata !DIExpression()), !dbg !8427
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8428
  %5 = load volatile i32, i32* %4, align 4, !dbg !8428
  store volatile i32 %5, i32* %2, align 4, !dbg !8429
  %6 = load volatile i32, i32* %2, align 4, !dbg !8430
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8431
  %8 = load volatile i32, i32* %7, align 4, !dbg !8431
  store volatile i32 %8, i32* %2, align 4, !dbg !8432
  %9 = load volatile i32, i32* %2, align 4, !dbg !8433
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8434
  ret void, !dbg !8434
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8435 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8437, metadata !DIExpression()), !dbg !8439
  %3 = bitcast i32* %2 to i8*, !dbg !8440
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8440
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8438, metadata !DIExpression()), !dbg !8441
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8442
  %5 = load volatile i32, i32* %4, align 4, !dbg !8442
  store volatile i32 %5, i32* %2, align 4, !dbg !8443
  %6 = load volatile i32, i32* %2, align 4, !dbg !8444
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8445
  %8 = load volatile i32, i32* %7, align 4, !dbg !8445
  store volatile i32 %8, i32* %2, align 4, !dbg !8446
  %9 = load volatile i32, i32* %2, align 4, !dbg !8447
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8448
  ret void, !dbg !8448
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8449 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8451, metadata !DIExpression()), !dbg !8453
  %3 = bitcast i32* %2 to i8*, !dbg !8454
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8454
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8452, metadata !DIExpression()), !dbg !8455
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8456
  %5 = load volatile i32, i32* %4, align 4, !dbg !8456
  store volatile i32 %5, i32* %2, align 4, !dbg !8457
  %6 = load volatile i32, i32* %2, align 4, !dbg !8458
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8459
  %8 = load volatile i32, i32* %7, align 4, !dbg !8459
  store volatile i32 %8, i32* %2, align 4, !dbg !8460
  %9 = load volatile i32, i32* %2, align 4, !dbg !8461
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8462
  ret void, !dbg !8462
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8463 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8465, metadata !DIExpression()), !dbg !8467
  %3 = bitcast i32* %2 to i8*, !dbg !8468
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8468
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8466, metadata !DIExpression()), !dbg !8469
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8470
  %5 = load volatile i32, i32* %4, align 4, !dbg !8470
  store volatile i32 %5, i32* %2, align 4, !dbg !8471
  %6 = load volatile i32, i32* %2, align 4, !dbg !8472
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8473
  %8 = load volatile i32, i32* %7, align 4, !dbg !8473
  store volatile i32 %8, i32* %2, align 4, !dbg !8474
  %9 = load volatile i32, i32* %2, align 4, !dbg !8475
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8476
  ret void, !dbg !8476
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8477 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8479, metadata !DIExpression()), !dbg !8480
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8481
  %3 = load volatile i32, i32* %2, align 4, !dbg !8481
  %4 = lshr i32 %3, 7, !dbg !8482
  %5 = and i32 %4, 1, !dbg !8482
  ret i32 %5, !dbg !8483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !8484 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8488, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.value(metadata i8 %1, metadata !8489, metadata !DIExpression()), !dbg !8490
  %3 = zext i8 %1 to i32, !dbg !8491
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8492
  store volatile i32 %3, i32* %4, align 4, !dbg !8493
  ret void, !dbg !8494
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8495 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8497, metadata !DIExpression()), !dbg !8498
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8499
  %3 = load volatile i32, i32* %2, align 4, !dbg !8499
  %4 = lshr i32 %3, 5, !dbg !8500
  %5 = and i32 %4, 1, !dbg !8500
  ret i32 %5, !dbg !8501
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8502 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8506, metadata !DIExpression()), !dbg !8507
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8508
  %3 = load volatile i32, i32* %2, align 4, !dbg !8508
  %4 = trunc i32 %3 to i8, !dbg !8509
  ret i8 %4, !dbg !8510
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !8511 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8513, metadata !DIExpression()), !dbg !8519
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8520
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8520
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8520
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8514, metadata !DIExpression()), !dbg !8519
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8521
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !8521
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !8521
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !8515, metadata !DIExpression()), !dbg !8519
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !8522
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !8523
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !8523
  %10 = tail call fastcc zeroext i1 @device_is_ready.49(%struct.device* noundef %9) #24, !dbg !8525
  br i1 %10, label %11, label %49, !dbg !8526

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !8527
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !8528
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8528
  %15 = load i8*, i8** %14, align 4, !dbg !8528
  %16 = tail call fastcc i32 @clock_control_on.50(%struct.device* noundef %12, i8* noundef %15) #24, !dbg !8529
  call void @llvm.dbg.value(metadata i32 %16, metadata !8518, metadata !DIExpression()), !dbg !8519
  %17 = icmp eq i32 %16, 0, !dbg !8530
  br i1 %17, label %18, label %49, !dbg !8532

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !8533
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !8533
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #24, !dbg !8534
  call void @llvm.dbg.value(metadata i32 %21, metadata !8518, metadata !DIExpression()), !dbg !8519
  %22 = icmp slt i32 %21, 0, !dbg !8535
  br i1 %22, label %49, label %23, !dbg !8537

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8538
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8538
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #24, !dbg !8539
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8540
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #24, !dbg !8541
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !8542
  %28 = load i32, i32* %27, align 4, !dbg !8542
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !8544

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !8516, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i32 4096, metadata !8517, metadata !DIExpression()), !dbg !8519
  br label %31, !dbg !8545

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !8516, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i32 0, metadata !8517, metadata !DIExpression()), !dbg !8519
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !8548
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !8548
  call void @llvm.dbg.value(metadata i32 %33, metadata !8517, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i32 %32, metadata !8516, metadata !DIExpression()), !dbg !8519
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8549
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #24, !dbg !8550
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !8551
  %36 = load i8, i8* %35, align 4, !dbg !8551, !range !5141
  %37 = icmp eq i8 %36, 0, !dbg !8551
  br i1 %37, label %39, label %38, !dbg !8553

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !8554
  br label %39, !dbg !8556

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !8557
  %41 = load i32, i32* %40, align 4, !dbg !8557
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #24, !dbg !8558
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !8559
  %43 = load i8, i8* %42, align 4, !dbg !8559, !range !5141
  %44 = icmp eq i8 %43, 0, !dbg !8559
  br i1 %44, label %47, label %45, !dbg !8561

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8562
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #24, !dbg !8564
  br label %47, !dbg !8565

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8566
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #24, !dbg !8567
  br label %49, !dbg !8568

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !8519
  ret i32 %50, !dbg !8569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8570 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8574, metadata !DIExpression()), !dbg !8578
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8579
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !8579
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !8579
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !8575, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8576, metadata !DIExpression()), !dbg !8578
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !8580
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !8581
  ret void, !dbg !8582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.49(%struct.device* noundef %0) unnamed_addr #1 !dbg !8583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8587, metadata !DIExpression()), !dbg !8588
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8589, !srcloc !8591
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.51(%struct.device* noundef %0) #24, !dbg !8592
  ret i1 %2, !dbg !8593
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.50(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8594 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8596, metadata !DIExpression()), !dbg !8599
  call void @llvm.dbg.value(metadata i8* %1, metadata !8597, metadata !DIExpression()), !dbg !8599
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8600
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !8600
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !8600
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !8598, metadata !DIExpression()), !dbg !8599
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !8601
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !8601
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !8602
  ret i32 %8, !dbg !8603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8604 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8608, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.value(metadata i8 0, metadata !8609, metadata !DIExpression()), !dbg !8612
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8613
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8613
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8611, metadata !DIExpression(DW_OP_deref)), !dbg !8612
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !8614
  call void @llvm.dbg.value(metadata i32 %4, metadata !8610, metadata !DIExpression()), !dbg !8612
  %5 = icmp slt i32 %4, 0, !dbg !8615
  br i1 %5, label %9, label %6, !dbg !8617

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8618
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8611, metadata !DIExpression()), !dbg !8612
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !8619
  br label %9, !dbg !8620

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8612
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8621
  ret i32 %10, !dbg !8621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !8622 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8624, metadata !DIExpression()), !dbg !8628
  call void @llvm.dbg.value(metadata i32 12, metadata !8625, metadata !DIExpression()), !dbg !8628
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !8629

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !8630, metadata !DIExpression()) #23, !dbg !8636
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !8639, !srcloc !8640
  call void @llvm.dbg.value(metadata i32 %4, metadata !8635, metadata !DIExpression()) #23, !dbg !8636
  %5 = or i32 %4, 12, !dbg !8641
  call void @llvm.dbg.value(metadata i32 %5, metadata !8626, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 %5, metadata !8643, metadata !DIExpression()) #23, !dbg !8650
  call void @llvm.dbg.value(metadata i32* %2, metadata !8648, metadata !DIExpression()) #23, !dbg !8650
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !8652, !srcloc !8653
  call void @llvm.dbg.value(metadata i32 %6, metadata !8649, metadata !DIExpression()) #23, !dbg !8650
  %7 = icmp eq i32 %6, 0, !dbg !8629
  br i1 %7, label %8, label %3, !dbg !8641, !llvm.loop !8654

8:                                                ; preds = %3
  ret void, !dbg !8655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8656 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8658, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i32 %1, metadata !8659, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i32 %2, metadata !8660, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i32 0, metadata !8661, metadata !DIExpression()), !dbg !8662
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8663
  %5 = load volatile i32, i32* %4, align 4, !dbg !8663
  %6 = and i32 %5, -5633, !dbg !8663
  %7 = or i32 %2, %1, !dbg !8663
  %8 = or i32 %7, %6, !dbg !8663
  store volatile i32 %8, i32* %4, align 4, !dbg !8663
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8664
  %10 = load volatile i32, i32* %9, align 4, !dbg !8664
  %11 = and i32 %10, -12289, !dbg !8664
  store volatile i32 %11, i32* %9, align 4, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8666 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8668, metadata !DIExpression()), !dbg !8669
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8670
  %3 = load volatile i32, i32* %2, align 4, !dbg !8670
  %4 = or i32 %3, 8, !dbg !8670
  store volatile i32 %4, i32* %2, align 4, !dbg !8670
  ret void, !dbg !8671
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8672 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8676, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8677, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i32 0, metadata !8678, metadata !DIExpression()), !dbg !8679
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8680
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !8680
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8681
  %5 = load i8, i8* %4, align 4, !dbg !8681
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !8682
  ret i32 %6, !dbg !8683
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.51(%struct.device* noundef %0) unnamed_addr #1 !dbg !8684 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8686, metadata !DIExpression()), !dbg !8687
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8688
  ret i1 %2, !dbg !8689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !8690 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8692, metadata !DIExpression()), !dbg !8693
  tail call fastcc void @__NVIC_SetPriority.53() #24, !dbg !8694
  store i32 8399, i32* @last_load, align 4, !dbg !8695
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8696
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8697
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8698
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8699
  %3 = or i32 %2, 7, !dbg !8699
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8699
  ret i32 0, !dbg !8700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.53() unnamed_addr #13 !dbg !8701 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8703, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 1, metadata !8704, metadata !DIExpression()), !dbg !8705
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8706
  ret void, !dbg !8709
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8710 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8712, metadata !DIExpression()), !dbg !8714
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !8715
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8716
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8717
  %5 = add i32 %4, %3, !dbg !8717
  store i32 %5, i32* @cycle_count, align 4, !dbg !8717
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8718
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8719
  %7 = sub i32 %5, %6, !dbg !8722
  %8 = udiv i32 %7, 8400, !dbg !8723
  call void @llvm.dbg.value(metadata i32 %8, metadata !8713, metadata !DIExpression()), !dbg !8714
  %9 = mul nuw i32 %8, 8400, !dbg !8724
  %10 = add i32 %9, %6, !dbg !8725
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8725
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !8726
  tail call void @z_arm_int_exit() #25, !dbg !8727
  ret void, !dbg !8728
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !8729 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8734
  call void @llvm.dbg.value(metadata i32 %1, metadata !8731, metadata !DIExpression()), !dbg !8735
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8736
  call void @llvm.dbg.value(metadata i32 %2, metadata !8732, metadata !DIExpression()), !dbg !8735
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8737
  call void @llvm.dbg.value(metadata i32 %3, metadata !8733, metadata !DIExpression()), !dbg !8735
  %4 = and i32 %2, 65536, !dbg !8738
  %5 = icmp ne i32 %4, 0, !dbg !8738
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8740
  %8 = load i32, i32* @last_load, align 4, !dbg !8735
  br i1 %7, label %9, label %13, !dbg !8740

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8741
  %11 = add i32 %10, %8, !dbg !8741
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8741
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8743
  br label %13, !dbg !8744

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8745
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8746
  %16 = add i32 %14, %15, !dbg !8747
  ret i32 %16, !dbg !8748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8753, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i1 %1, metadata !8754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8766
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8767
  br i1 %4, label %5, label %8, !dbg !8767

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8769
  %7 = and i32 %6, -2, !dbg !8769
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8769
  store i32 -16777216, i32* @last_load, align 4, !dbg !8771
  br label %54, !dbg !8772

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8773
  call void @llvm.dbg.value(metadata i32 %9, metadata !8758, metadata !DIExpression()), !dbg !8766
  br i1 %3, label %18, label %10, !dbg !8774

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8774
  call void @llvm.dbg.value(metadata i32 undef, metadata !8753, metadata !DIExpression()), !dbg !8766
  %12 = icmp slt i32 %11, 1, !dbg !8775
  br i1 %12, label %18, label %13, !dbg !8775

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !8775
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !8775
  %16 = mul nuw nsw i32 %15, 8400, !dbg !8775
  %17 = add nuw nsw i32 %16, 8399, !dbg !8775
  br label %18, !dbg !8775

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8753, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8776, metadata !DIExpression()) #23, !dbg !8783
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8785, !srcloc !8791
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8785
  call void @llvm.dbg.value(metadata i32 %21, metadata !8788, metadata !DIExpression()) #23, !dbg !8792
  call void @llvm.dbg.value(metadata i32 undef, metadata !8789, metadata !DIExpression()) #23, !dbg !8792
  call void @llvm.dbg.value(metadata i32 %21, metadata !8782, metadata !DIExpression()) #23, !dbg !8783
  call void @llvm.dbg.value(metadata i32 %21, metadata !8759, metadata !DIExpression()), !dbg !8766
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !8793
  call void @llvm.dbg.value(metadata i32 %22, metadata !8764, metadata !DIExpression()), !dbg !8766
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8794
  call void @llvm.dbg.value(metadata i32 %23, metadata !8756, metadata !DIExpression()), !dbg !8766
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8795
  %25 = add i32 %24, %22, !dbg !8795
  store i32 %25, i32* @cycle_count, align 4, !dbg !8795
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8796
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8797
  %27 = sub i32 %25, %26, !dbg !8798
  call void @llvm.dbg.value(metadata i32 %27, metadata !8765, metadata !DIExpression()), !dbg !8766
  %28 = icmp slt i32 %27, 0, !dbg !8799
  br i1 %28, label %38, label %29, !dbg !8801

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8755, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32 undef, metadata !8755, metadata !DIExpression()), !dbg !8766
  %30 = add nuw i32 %19, %27, !dbg !8802
  %31 = urem i32 %30, 8400, !dbg !8804
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8755, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8766
  %32 = sub nuw nsw i32 %19, %31, !dbg !8805
  call void @llvm.dbg.value(metadata i32 %32, metadata !8755, metadata !DIExpression()), !dbg !8766
  %33 = icmp ugt i32 %32, 1024, !dbg !8806
  br i1 %33, label %34, label %36, !dbg !8806

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8755, metadata !DIExpression()), !dbg !8766
  %35 = icmp ugt i32 %32, 16766400, !dbg !8807
  br i1 %35, label %38, label %36, !dbg !8809

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8810
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8811
  call void @llvm.dbg.value(metadata i32 %40, metadata !8757, metadata !DIExpression()), !dbg !8766
  %41 = add nsw i32 %39, -1, !dbg !8812
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8813
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8814
  %42 = icmp ult i32 %23, %40, !dbg !8815
  br i1 %42, label %43, label %48, !dbg !8817

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8818
  %45 = add i32 %23, %9, !dbg !8820
  %46 = sub i32 %45, %40, !dbg !8821
  %47 = add i32 %46, %44, !dbg !8818
  br label %52, !dbg !8822

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8823
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8825
  %51 = add i32 %49, %50, !dbg !8825
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !8826
  store i32 %53, i32* @cycle_count, align 4, !dbg !8826
  call void @llvm.dbg.value(metadata i32 %21, metadata !8827, metadata !DIExpression()) #23, !dbg !8833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8832, metadata !DIExpression()) #23, !dbg !8833
  call void @llvm.dbg.value(metadata i32 %21, metadata !8835, metadata !DIExpression()) #23, !dbg !8838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !8840, !srcloc !8841
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !8842
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8843 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8776, metadata !DIExpression()) #23, !dbg !8847
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8849, !srcloc !8791
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8849
  call void @llvm.dbg.value(metadata i32 %2, metadata !8788, metadata !DIExpression()) #23, !dbg !8851
  call void @llvm.dbg.value(metadata i32 undef, metadata !8789, metadata !DIExpression()) #23, !dbg !8851
  call void @llvm.dbg.value(metadata i32 %2, metadata !8782, metadata !DIExpression()) #23, !dbg !8847
  call void @llvm.dbg.value(metadata i32 %2, metadata !8845, metadata !DIExpression()), !dbg !8852
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !8853
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8854
  %5 = add i32 %4, %3, !dbg !8855
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8856
  %7 = sub i32 %5, %6, !dbg !8857
  call void @llvm.dbg.value(metadata i32 %7, metadata !8846, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 %2, metadata !8827, metadata !DIExpression()) #23, !dbg !8858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8832, metadata !DIExpression()) #23, !dbg !8858
  call void @llvm.dbg.value(metadata i32 %2, metadata !8835, metadata !DIExpression()) #23, !dbg !8860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8862, !srcloc !8841
  %8 = udiv i32 %7, 8400, !dbg !8863
  ret i32 %8, !dbg !8864
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8865 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8776, metadata !DIExpression()) #23, !dbg !8869
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8871, !srcloc !8791
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8871
  call void @llvm.dbg.value(metadata i32 %2, metadata !8788, metadata !DIExpression()) #23, !dbg !8873
  call void @llvm.dbg.value(metadata i32 undef, metadata !8789, metadata !DIExpression()) #23, !dbg !8873
  call void @llvm.dbg.value(metadata i32 %2, metadata !8782, metadata !DIExpression()) #23, !dbg !8869
  call void @llvm.dbg.value(metadata i32 %2, metadata !8867, metadata !DIExpression()), !dbg !8874
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !8875
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8876
  %5 = add i32 %4, %3, !dbg !8877
  call void @llvm.dbg.value(metadata i32 %5, metadata !8868, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata i32 %2, metadata !8827, metadata !DIExpression()) #23, !dbg !8878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8832, metadata !DIExpression()) #23, !dbg !8878
  call void @llvm.dbg.value(metadata i32 %2, metadata !8835, metadata !DIExpression()) #23, !dbg !8880
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8882, !srcloc !8841
  ret i32 %5, !dbg !8883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !8884 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8885
  %2 = icmp eq i32 %1, -16777216, !dbg !8887
  br i1 %2, label %3, label %6, !dbg !8888

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8889
  %5 = or i32 %4, 1, !dbg !8889
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8889
  br label %6, !dbg !8891

6:                                                ; preds = %3, %0
  ret void, !dbg !8892
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !8893 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8894
  %2 = and i32 %1, -2, !dbg !8894
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8894
  ret void, !dbg !8895
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #12 !dbg !8896 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8922, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i8 %1, metadata !8923, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8924, metadata !DIExpression()), !dbg !8925
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !8926
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8926
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !8925
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8927
  %8 = load i8, i8* %6, align 4, !dbg !8928
  %9 = zext i8 %8 to i32, !dbg !8929
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !8929
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !8930
  br i1 %11, label %18, label %24, !dbg !8931

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !8925
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8927
  %14 = load i8, i8* %6, align 4, !dbg !8928
  %15 = zext i8 %14 to i32, !dbg !8929
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !8929
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !8930
  br i1 %17, label %18, label %24, !dbg !8931, !llvm.loop !8932

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !8934
  %21 = load i8, i8* %20, align 1, !dbg !8934
  %22 = icmp eq i8 %21, %1, !dbg !8937
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !8938
  br i1 %22, label %24, label %12, !dbg !8939

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !8925
  ret i32 %25, !dbg !8940
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8941 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !8952, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata i8 %1, metadata !8953, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata i32 %2, metadata !8954, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata i32 0, metadata !8957, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata i32 0, metadata !8958, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata i8 0, metadata !8959, metadata !DIExpression()), !dbg !8969
  %4 = icmp eq i8 %1, 0, !dbg !8970
  br i1 %4, label %35, label %5, !dbg !8971

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !8970
  br label %9, !dbg !8971

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !8959, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.value(metadata i32 %29, metadata !8957, metadata !DIExpression()), !dbg !8968
  %8 = icmp eq i32 %34, %6, !dbg !8970
  br i1 %8, label %35, label %9, !dbg !8971, !llvm.loop !8972

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !8959, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.value(metadata i32 %11, metadata !8957, metadata !DIExpression()), !dbg !8968
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !8974
  %13 = load i32, i32* %12, align 4, !dbg !8974
  call void @llvm.dbg.value(metadata i32 %13, metadata !8956, metadata !DIExpression()), !dbg !8968
  %14 = and i32 %13, 31, !dbg !8975
  %15 = icmp ult i32 %14, 16, !dbg !8976
  br i1 %15, label %16, label %20, !dbg !8977

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !8978
  %18 = load i32, i32* %17, align 4, !dbg !8978
  %19 = or i32 %18, 32, !dbg !8980
  call void @llvm.dbg.value(metadata i32 %19, metadata !8957, metadata !DIExpression()), !dbg !8968
  br label %28, !dbg !8981

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !8982

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !8983
  %23 = load i32, i32* %22, align 4, !dbg !8983
  call void @llvm.dbg.value(metadata i32 %23, metadata !8961, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !8984
  %24 = lshr i32 %23, 7, !dbg !8985
  %25 = and i32 %24, 16, !dbg !8985
  %26 = or i32 %25, %23, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %26, metadata !8957, metadata !DIExpression()), !dbg !8968
  br label %28, !dbg !8986

27:                                               ; preds = %20
  br label %28, !dbg !8987

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !8968
  call void @llvm.dbg.value(metadata i32 %29, metadata !8957, metadata !DIExpression()), !dbg !8968
  %30 = lshr i32 %13, 5, !dbg !8987
  %31 = and i32 %30, 255, !dbg !8987
  call void @llvm.dbg.value(metadata i32 %31, metadata !8955, metadata !DIExpression()), !dbg !8968
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !8988
  call void @llvm.dbg.value(metadata i32 %32, metadata !8958, metadata !DIExpression()), !dbg !8968
  %33 = icmp slt i32 %32, 0, !dbg !8989
  %34 = add nuw nsw i32 %10, 1, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %34, metadata !8959, metadata !DIExpression()), !dbg !8969
  br i1 %33, label %35, label %7, !dbg !8992

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !8993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8998, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata i32 %1, metadata !8999, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata i32 %2, metadata !9000, metadata !DIExpression()), !dbg !9002
  %4 = icmp ugt i32 %0, 175, !dbg !9003
  br i1 %4, label %16, label %5, !dbg !9005

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9006
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9007
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9007
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9001, metadata !DIExpression()), !dbg !9002
  %9 = add nsw i32 %6, -8, !dbg !9008
  %10 = icmp ult i32 %9, 3, !dbg !9008
  br i1 %10, label %16, label %11, !dbg !9010

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.58(%struct.device* noundef %8) #24, !dbg !9011
  br i1 %12, label %13, label %16, !dbg !9012

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9013
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !9014
  br label %16, !dbg !9015

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9002
  ret i32 %17, !dbg !9016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.58(%struct.device* noundef %0) unnamed_addr #1 !dbg !9017 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9021, metadata !DIExpression()), !dbg !9022
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9023, !srcloc !9025
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.59(%struct.device* noundef %0) #24, !dbg !9026
  ret i1 %2, !dbg !9027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.59(%struct.device* noundef %0) unnamed_addr #1 !dbg !9028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9030, metadata !DIExpression()), !dbg !9031
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !9032
  ret i1 %2, !dbg !9033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !9034 {
  ret void, !dbg !9035
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9036 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9038, metadata !DIExpression()), !dbg !9043
  call void @llvm.dbg.value(metadata i32 0, metadata !9039, metadata !DIExpression()), !dbg !9043
  call void @llvm.dbg.value(metadata i32 2, metadata !9040, metadata !DIExpression()), !dbg !9043
  call void @llvm.dbg.value(metadata i32 0, metadata !9041, metadata !DIExpression()), !dbg !9043
  call void @llvm.dbg.value(metadata i32 2, metadata !9042, metadata !DIExpression()), !dbg !9043
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9044
  %2 = and i32 %1, 12, !dbg !9045
  call void @llvm.dbg.value(metadata i32 %2, metadata !9038, metadata !DIExpression()), !dbg !9043
  %3 = icmp eq i32 %2, 8, !dbg !9046
  br i1 %3, label %4, label %18, !dbg !9046

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9047
  call void @llvm.dbg.value(metadata i32 %5, metadata !9041, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9043
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9049
  %7 = and i32 %6, 63, !dbg !9050
  call void @llvm.dbg.value(metadata i32 %7, metadata !9042, metadata !DIExpression()), !dbg !9043
  %8 = udiv i32 16000000, %7, !dbg !9051
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9051
  %10 = lshr i32 %9, 6, !dbg !9051
  %11 = and i32 %10, 511, !dbg !9051
  %12 = mul i32 %11, %8, !dbg !9051
  call void @llvm.dbg.value(metadata i32 %12, metadata !9039, metadata !DIExpression()), !dbg !9043
  call void @llvm.dbg.value(metadata i32 %12, metadata !9039, metadata !DIExpression()), !dbg !9043
  call void @llvm.dbg.value(metadata i32 %12, metadata !9039, metadata !DIExpression()), !dbg !9043
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9053
  %14 = lshr i32 %13, 15, !dbg !9054
  %15 = and i32 %14, 6, !dbg !9054
  %16 = add nuw nsw i32 %15, 2, !dbg !9054
  call void @llvm.dbg.value(metadata i32 %16, metadata !9040, metadata !DIExpression()), !dbg !9043
  %17 = udiv i32 %12, %16, !dbg !9055
  br label %18, !dbg !9056

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !9057
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9058
  %21 = lshr i32 %20, 4, !dbg !9059
  %22 = and i32 %21, 15, !dbg !9059
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !9060
  %24 = load i8, i8* %23, align 1, !dbg !9060
  %25 = zext i8 %24 to i32, !dbg !9060
  call void @llvm.dbg.value(metadata i32 %25, metadata !9038, metadata !DIExpression()), !dbg !9043
  %26 = lshr i32 %19, %25, !dbg !9061
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !9061
  ret void, !dbg !9062
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !9063 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9105, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 0, metadata !9106, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 0, metadata !9107, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 0, metadata !9108, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 0, metadata !9109, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 0, metadata !9110, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 0, metadata !9111, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 0, metadata !9112, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 0, metadata !9113, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 0, metadata !9114, metadata !DIExpression()), !dbg !9119
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9120
  %4 = load i32, i32* %3, align 4, !dbg !9120
  %5 = and i32 %4, 1, !dbg !9122
  %6 = icmp eq i32 %5, 0, !dbg !9123
  br i1 %6, label %17, label %7, !dbg !9124

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9125
  %9 = and i32 %8, -100663297, !dbg !9125
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9125
  %11 = load i32, i32* %10, align 4, !dbg !9125
  %12 = or i32 %9, %11, !dbg !9125
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9125
  %13 = load i32, i32* %10, align 4, !dbg !9127
  %14 = icmp eq i32 %13, 0, !dbg !9129
  %15 = zext i1 %14 to i32, !dbg !9130
  %16 = load i32, i32* %3, align 4, !dbg !9131
  br label %17, !dbg !9130

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !9131
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !9119
  call void @llvm.dbg.value(metadata i32 %19, metadata !9113, metadata !DIExpression()), !dbg !9119
  %20 = and i32 %18, 2, !dbg !9133
  %21 = icmp eq i32 %20, 0, !dbg !9134
  br i1 %21, label %32, label %22, !dbg !9135

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9136
  %24 = and i32 %23, -402653185, !dbg !9136
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9136
  %26 = load i32, i32* %25, align 4, !dbg !9136
  %27 = or i32 %24, %26, !dbg !9136
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9136
  %28 = load i32, i32* %25, align 4, !dbg !9138
  %29 = icmp eq i32 %28, 0, !dbg !9140
  %30 = select i1 %29, i32 1, i32 %19, !dbg !9141
  %31 = load i32, i32* %3, align 4, !dbg !9142
  br label %32, !dbg !9141

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !9142
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !9119
  call void @llvm.dbg.value(metadata i32 %34, metadata !9113, metadata !DIExpression()), !dbg !9119
  %35 = and i32 %33, 4, !dbg !9144
  %36 = icmp eq i32 %35, 0, !dbg !9145
  br i1 %36, label %49, label %37, !dbg !9146

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9147
  %39 = and i32 %38, -3145729, !dbg !9147
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9147
  %41 = load i32, i32* %40, align 4, !dbg !9147
  %42 = or i32 %39, %41, !dbg !9147
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9147
  %43 = load i32, i32* %40, align 4, !dbg !9149
  %44 = icmp eq i32 %43, 1048576, !dbg !9151
  %45 = select i1 %44, i32 1, i32 %34, !dbg !9152
  call void @llvm.dbg.value(metadata i32 %45, metadata !9113, metadata !DIExpression()), !dbg !9119
  %46 = icmp eq i32 %43, 0, !dbg !9153
  %47 = zext i1 %46 to i32, !dbg !9155
  %48 = load i32, i32* %3, align 4, !dbg !9156
  br label %49, !dbg !9155

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !9156
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !9119
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !9119
  call void @llvm.dbg.value(metadata i32 %52, metadata !9114, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 %51, metadata !9113, metadata !DIExpression()), !dbg !9119
  %53 = and i32 %50, 8, !dbg !9158
  %54 = icmp eq i32 %53, 0, !dbg !9159
  br i1 %54, label %67, label %55, !dbg !9160

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9161
  %57 = and i32 %56, -12582913, !dbg !9161
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9161
  %59 = load i32, i32* %58, align 4, !dbg !9161
  %60 = or i32 %57, %59, !dbg !9161
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9161
  %61 = load i32, i32* %58, align 4, !dbg !9163
  %62 = icmp eq i32 %61, 4194304, !dbg !9165
  %63 = select i1 %62, i32 1, i32 %51, !dbg !9166
  call void @llvm.dbg.value(metadata i32 %63, metadata !9113, metadata !DIExpression()), !dbg !9119
  %64 = icmp eq i32 %61, 0, !dbg !9167
  %65 = select i1 %64, i32 1, i32 %52, !dbg !9169
  %66 = load i32, i32* %3, align 4, !dbg !9170
  br label %67, !dbg !9169

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !9170
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !9119
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !9119
  call void @llvm.dbg.value(metadata i32 %70, metadata !9114, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 %69, metadata !9113, metadata !DIExpression()), !dbg !9119
  %71 = and i32 %68, 32, !dbg !9171
  %72 = icmp eq i32 %71, 0, !dbg !9172
  br i1 %72, label %131, label %73, !dbg !9173

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !9174
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !9174
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9115, metadata !DIExpression()), !dbg !9174
  store volatile i32 0, i32* %2, align 4, !dbg !9174
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9174
  %76 = or i32 %75, 268435456, !dbg !9174
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9174
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9174
  %78 = and i32 %77, 268435456, !dbg !9174
  store volatile i32 %78, i32* %2, align 4, !dbg !9174
  %79 = load volatile i32, i32* %2, align 4, !dbg !9174
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !9175
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9176
  %81 = or i32 %80, 256, !dbg !9176
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9176
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !9177
  call void @llvm.dbg.value(metadata i32 %82, metadata !9106, metadata !DIExpression()), !dbg !9119
  br label %83, !dbg !9178

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9179
  %85 = and i32 %84, 256, !dbg !9180
  %86 = icmp eq i32 %85, 0, !dbg !9181
  br i1 %86, label %87, label %91, !dbg !9178

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #25, !dbg !9182
  %89 = sub i32 %88, %82, !dbg !9185
  %90 = icmp ugt i32 %89, 2, !dbg !9186
  br i1 %90, label %439, label %83, !dbg !9187, !llvm.loop !9188

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9190
  %93 = and i32 %92, 768, !dbg !9191
  call void @llvm.dbg.value(metadata i32 %93, metadata !9107, metadata !DIExpression()), !dbg !9119
  %94 = icmp eq i32 %93, 0, !dbg !9192
  br i1 %94, label %116, label %95, !dbg !9194

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9195
  %97 = load i32, i32* %96, align 4, !dbg !9195
  %98 = and i32 %97, 768, !dbg !9196
  %99 = icmp eq i32 %93, %98, !dbg !9197
  br i1 %99, label %116, label %100, !dbg !9198

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9199
  %102 = and i32 %101, -769, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %102, metadata !9107, metadata !DIExpression()), !dbg !9119
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9202
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9203
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9204
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9205
  %104 = and i32 %103, 1, !dbg !9205
  %105 = icmp eq i32 %104, 0, !dbg !9205
  br i1 %105, label %116, label %106, !dbg !9207

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #25, !dbg !9208
  call void @llvm.dbg.value(metadata i32 %107, metadata !9106, metadata !DIExpression()), !dbg !9119
  br label %108, !dbg !9210

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9211
  %110 = and i32 %109, 2, !dbg !9212
  %111 = icmp eq i32 %110, 0, !dbg !9212
  br i1 %111, label %112, label %116, !dbg !9210

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #25, !dbg !9213
  %114 = sub i32 %113, %107, !dbg !9216
  %115 = icmp ugt i32 %114, 5000, !dbg !9217
  br i1 %115, label %439, label %108, !dbg !9218, !llvm.loop !9219

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9221
  %118 = load i32, i32* %117, align 4, !dbg !9221
  %119 = and i32 %118, 768, !dbg !9221
  %120 = icmp eq i32 %119, 768, !dbg !9221
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9221
  %122 = and i32 %121, -2031617, !dbg !9221
  %123 = and i32 %118, 268434687, !dbg !9221
  %124 = select i1 %120, i32 %123, i32 0, !dbg !9221
  %125 = or i32 %122, %124, !dbg !9221
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9221
  %126 = load i32, i32* %117, align 4, !dbg !9221
  %127 = and i32 %126, 4095, !dbg !9221
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9221
  %129 = or i32 %128, %127, !dbg !9221
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9221
  %130 = load i32, i32* %3, align 4, !dbg !9223
  br label %131, !dbg !9225

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !9223
  %133 = and i32 %132, 16, !dbg !9226
  %134 = icmp eq i32 %133, 0, !dbg !9227
  br i1 %134, label %140, label %135, !dbg !9228

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9229
  %137 = load i8, i8* %136, align 4, !dbg !9229
  %138 = zext i8 %137 to i32, !dbg !9229
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !9229
  %139 = load i32, i32* %3, align 4, !dbg !9231
  br label %140, !dbg !9233

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !9231
  %142 = and i32 %141, 128, !dbg !9234
  %143 = icmp eq i32 %142, 0, !dbg !9235
  br i1 %143, label %151, label %144, !dbg !9236

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9237
  %146 = and i32 %145, -12582913, !dbg !9237
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9237
  %148 = load i32, i32* %147, align 4, !dbg !9237
  %149 = or i32 %146, %148, !dbg !9237
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9237
  %150 = load i32, i32* %3, align 4, !dbg !9239
  br label %151, !dbg !9241

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !9239
  %153 = and i32 %152, 64, !dbg !9242
  %154 = icmp eq i32 %153, 0, !dbg !9243
  br i1 %154, label %162, label %155, !dbg !9244

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9245
  %157 = and i32 %156, -67108865, !dbg !9245
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9245
  %159 = load i32, i32* %158, align 4, !dbg !9245
  %160 = or i32 %157, %159, !dbg !9245
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9245
  %161 = load i32, i32* %3, align 4, !dbg !9247
  br label %162, !dbg !9249

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !9247
  %164 = and i32 %163, 256, !dbg !9250
  %165 = icmp eq i32 %164, 0, !dbg !9251
  br i1 %165, label %176, label %166, !dbg !9252

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9253
  %168 = and i32 %167, -134217729, !dbg !9253
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9253
  %170 = load i32, i32* %169, align 4, !dbg !9253
  %171 = or i32 %168, %170, !dbg !9253
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9253
  %172 = load i32, i32* %169, align 4, !dbg !9255
  %173 = icmp eq i32 %172, 134217728, !dbg !9257
  %174 = select i1 %173, i32 1, i32 %70, !dbg !9258
  %175 = load i32, i32* %3, align 4, !dbg !9259
  br label %176, !dbg !9258

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !9259
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !9119
  call void @llvm.dbg.value(metadata i32 %178, metadata !9114, metadata !DIExpression()), !dbg !9119
  %179 = and i32 %177, 512, !dbg !9261
  %180 = icmp eq i32 %179, 0, !dbg !9262
  br i1 %180, label %188, label %181, !dbg !9263

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9264
  %183 = and i32 %182, -268435457, !dbg !9264
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9264
  %185 = load i32, i32* %184, align 4, !dbg !9264
  %186 = or i32 %183, %185, !dbg !9264
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9264
  %187 = load i32, i32* %3, align 4, !dbg !9266
  br label %188, !dbg !9268

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !9266
  %190 = and i32 %189, 1024, !dbg !9269
  %191 = icmp eq i32 %190, 0, !dbg !9270
  br i1 %191, label %204, label %192, !dbg !9271

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9272
  %194 = and i32 %193, -536870913, !dbg !9272
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9272
  %196 = load i32, i32* %195, align 4, !dbg !9272
  %197 = or i32 %194, %196, !dbg !9272
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9272
  %198 = load i32, i32* %195, align 4, !dbg !9274
  %199 = icmp eq i32 %198, 536870912, !dbg !9276
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !9277
  call void @llvm.dbg.value(metadata i32 %69, metadata !9113, metadata !DIExpression()), !dbg !9119
  br i1 %201, label %209, label %202, !dbg !9277

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !9278
  br label %206, !dbg !9277

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !9113, metadata !DIExpression()), !dbg !9119
  %205 = icmp eq i32 %69, 1, !dbg !9280
  br i1 %205, label %209, label %206, !dbg !9281

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !9278
  %208 = icmp eq i32 %207, 2048, !dbg !9282
  br i1 %208, label %209, label %356, !dbg !9283

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9284
  %210 = tail call i32 @HAL_GetTick() #25, !dbg !9286
  call void @llvm.dbg.value(metadata i32 %210, metadata !9106, metadata !DIExpression()), !dbg !9119
  br label %211, !dbg !9287

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9288
  %213 = and i32 %212, 134217728, !dbg !9288
  %214 = icmp eq i32 %213, 0, !dbg !9288
  br i1 %214, label %219, label %215, !dbg !9287

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !9289
  %217 = sub i32 %216, %210, !dbg !9292
  %218 = icmp ugt i32 %217, 2, !dbg !9293
  br i1 %218, label %439, label %211, !dbg !9294, !llvm.loop !9295

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !9297
  %221 = and i32 %220, 1, !dbg !9299
  %222 = icmp eq i32 %221, 0, !dbg !9300
  br i1 %222, label %227, label %223, !dbg !9301

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9302
  %225 = load i32, i32* %224, align 4, !dbg !9302
  %226 = icmp eq i32 %225, 0, !dbg !9303
  br i1 %226, label %234, label %227, !dbg !9304

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !9305
  %229 = icmp eq i32 %228, 0, !dbg !9306
  br i1 %229, label %252, label %230, !dbg !9307

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9308
  %232 = load i32, i32* %231, align 4, !dbg !9308
  %233 = icmp eq i32 %232, 0, !dbg !9309
  br i1 %233, label %234, label %252, !dbg !9310

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9311
  %236 = and i32 %235, 196608, !dbg !9313
  call void @llvm.dbg.value(metadata i32 %236, metadata !9108, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9119
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9314
  %238 = and i32 %237, 251658240, !dbg !9315
  call void @llvm.dbg.value(metadata i32 %238, metadata !9109, metadata !DIExpression()), !dbg !9119
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9316
  %240 = load i32, i32* %239, align 4, !dbg !9316
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9316
  %242 = load i32, i32* %241, align 4, !dbg !9316
  %243 = shl i32 %242, 6, !dbg !9316
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9316
  %245 = load i32, i32* %244, align 4, !dbg !9316
  %246 = shl i32 %245, 28, !dbg !9316
  %247 = or i32 %240, %236, !dbg !9316
  %248 = or i32 %247, %238, !dbg !9316
  %249 = or i32 %248, %243, !dbg !9316
  %250 = or i32 %249, %246, !dbg !9316
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9316
  %251 = load i32, i32* %3, align 4, !dbg !9317
  br label %252, !dbg !9319

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !9317
  %254 = and i32 %253, 4, !dbg !9320
  %255 = icmp eq i32 %254, 0, !dbg !9321
  br i1 %255, label %260, label %256, !dbg !9322

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9323
  %258 = load i32, i32* %257, align 4, !dbg !9323
  %259 = icmp eq i32 %258, 1048576, !dbg !9324
  br i1 %259, label %267, label %260, !dbg !9325

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !9326
  %262 = icmp eq i32 %261, 0, !dbg !9327
  br i1 %262, label %291, label %263, !dbg !9328

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9329
  %265 = load i32, i32* %264, align 4, !dbg !9329
  %266 = icmp eq i32 %265, 4194304, !dbg !9330
  br i1 %266, label %267, label %291, !dbg !9331

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9332
  %269 = and i32 %268, 196608, !dbg !9334
  call void @llvm.dbg.value(metadata i32 %269, metadata !9108, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9119
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9335
  %271 = and i32 %270, 1879048192, !dbg !9336
  call void @llvm.dbg.value(metadata i32 %271, metadata !9110, metadata !DIExpression()), !dbg !9119
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9337
  %273 = load i32, i32* %272, align 4, !dbg !9337
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9337
  %275 = load i32, i32* %274, align 4, !dbg !9337
  %276 = shl i32 %275, 6, !dbg !9337
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9337
  %278 = load i32, i32* %277, align 4, !dbg !9337
  %279 = shl i32 %278, 24, !dbg !9337
  %280 = or i32 %273, %269, !dbg !9337
  %281 = or i32 %280, %271, !dbg !9337
  %282 = or i32 %281, %276, !dbg !9337
  %283 = or i32 %282, %279, !dbg !9337
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9337
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9338
  %285 = and i32 %284, -32, !dbg !9338
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9338
  %287 = load i32, i32* %286, align 4, !dbg !9338
  %288 = add i32 %287, -1, !dbg !9338
  %289 = or i32 %288, %285, !dbg !9338
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9338
  %290 = load i32, i32* %3, align 4, !dbg !9339
  br label %291, !dbg !9341

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !9339
  %293 = and i32 %292, 1024, !dbg !9342
  %294 = icmp eq i32 %293, 0, !dbg !9343
  br i1 %294, label %321, label %295, !dbg !9344

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9345
  %297 = load i32, i32* %296, align 4, !dbg !9345
  %298 = icmp eq i32 %297, 536870912, !dbg !9346
  br i1 %298, label %299, label %321, !dbg !9347

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9348
  call void @llvm.dbg.value(metadata i32 %300, metadata !9109, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9119
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9350
  %302 = and i32 %301, 1879048192, !dbg !9351
  call void @llvm.dbg.value(metadata i32 %302, metadata !9110, metadata !DIExpression()), !dbg !9119
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9352
  %304 = load i32, i32* %303, align 4, !dbg !9352
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9352
  %306 = load i32, i32* %305, align 4, !dbg !9352
  %307 = shl i32 %306, 6, !dbg !9352
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9352
  %309 = load i32, i32* %308, align 4, !dbg !9352
  %310 = shl i32 %309, 15, !dbg !9352
  %311 = add i32 %310, -65536, !dbg !9352
  %312 = and i32 %311, -65536, !dbg !9352
  %313 = shl i32 %300, 9, !dbg !9352
  %314 = and i32 %313, 100663296, !dbg !9352
  %315 = add nuw nsw i32 %314, 33554432, !dbg !9352
  %316 = or i32 %302, %304, !dbg !9352
  %317 = or i32 %316, %315, !dbg !9352
  %318 = or i32 %317, %307, !dbg !9352
  %319 = or i32 %318, %312, !dbg !9352
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9352
  %320 = load i32, i32* %3, align 4, !dbg !9353
  br label %321, !dbg !9355

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !9353
  %323 = and i32 %322, 2048, !dbg !9356
  %324 = icmp eq i32 %323, 0, !dbg !9357
  br i1 %324, label %346, label %325, !dbg !9358

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9359
  %327 = load i32, i32* %326, align 4, !dbg !9359
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9359
  %329 = load i32, i32* %328, align 4, !dbg !9359
  %330 = shl i32 %329, 6, !dbg !9359
  %331 = or i32 %330, %327, !dbg !9359
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9359
  %333 = load i32, i32* %332, align 4, !dbg !9359
  %334 = shl i32 %333, 15, !dbg !9359
  %335 = add i32 %334, -65536, !dbg !9359
  %336 = and i32 %335, -65536, !dbg !9359
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9359
  %338 = load i32, i32* %337, align 4, !dbg !9359
  %339 = shl i32 %338, 24, !dbg !9359
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9359
  %341 = load i32, i32* %340, align 4, !dbg !9359
  %342 = shl i32 %341, 28, !dbg !9359
  %343 = or i32 %331, %339, !dbg !9359
  %344 = or i32 %343, %336, !dbg !9359
  %345 = or i32 %344, %342, !dbg !9359
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9359
  br label %346, !dbg !9361

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9362
  %347 = tail call i32 @HAL_GetTick() #25, !dbg !9363
  call void @llvm.dbg.value(metadata i32 %347, metadata !9106, metadata !DIExpression()), !dbg !9119
  br label %348, !dbg !9364

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9365
  %350 = and i32 %349, 134217728, !dbg !9366
  %351 = icmp eq i32 %350, 0, !dbg !9366
  br i1 %351, label %352, label %356, !dbg !9364

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #25, !dbg !9367
  %354 = sub i32 %353, %347, !dbg !9370
  %355 = icmp ugt i32 %354, 2, !dbg !9371
  br i1 %355, label %439, label %348, !dbg !9372, !llvm.loop !9373

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !9375
  br i1 %357, label %358, label %439, !dbg !9377

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9378
  %359 = tail call i32 @HAL_GetTick() #25, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %359, metadata !9106, metadata !DIExpression()), !dbg !9119
  br label %360, !dbg !9381

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9382
  %362 = and i32 %361, 536870912, !dbg !9382
  %363 = icmp eq i32 %362, 0, !dbg !9382
  br i1 %363, label %368, label %364, !dbg !9381

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #25, !dbg !9383
  %366 = sub i32 %365, %359, !dbg !9386
  %367 = icmp ugt i32 %366, 2, !dbg !9387
  br i1 %367, label %439, label %360, !dbg !9388, !llvm.loop !9389

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !9391
  %370 = and i32 %369, 4, !dbg !9393
  %371 = icmp eq i32 %370, 0, !dbg !9394
  br i1 %371, label %376, label %372, !dbg !9395

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9396
  %374 = load i32, i32* %373, align 4, !dbg !9396
  %375 = icmp eq i32 %374, 0, !dbg !9397
  br i1 %375, label %383, label %376, !dbg !9398

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !9399
  %378 = icmp eq i32 %377, 0, !dbg !9400
  br i1 %378, label %405, label %379, !dbg !9401

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9402
  %381 = load i32, i32* %380, align 4, !dbg !9402
  %382 = icmp eq i32 %381, 0, !dbg !9403
  br i1 %382, label %383, label %405, !dbg !9404

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9405
  %385 = and i32 %384, 196608, !dbg !9407
  call void @llvm.dbg.value(metadata i32 %385, metadata !9111, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9119
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9408
  %387 = load i32, i32* %386, align 4, !dbg !9408
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9408
  %389 = load i32, i32* %388, align 4, !dbg !9408
  %390 = shl i32 %389, 6, !dbg !9408
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9408
  %392 = load i32, i32* %391, align 4, !dbg !9408
  %393 = shl i32 %392, 24, !dbg !9408
  %394 = or i32 %385, %387, !dbg !9408
  %395 = or i32 %394, %390, !dbg !9408
  %396 = or i32 %395, %393, !dbg !9408
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9408
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9409
  %398 = and i32 %397, -7937, !dbg !9409
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9409
  %400 = load i32, i32* %399, align 4, !dbg !9409
  %401 = shl i32 %400, 8, !dbg !9409
  %402 = add i32 %401, -256, !dbg !9409
  %403 = or i32 %402, %398, !dbg !9409
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9409
  %404 = load i32, i32* %3, align 4, !dbg !9410
  br label %405, !dbg !9412

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !9410
  %407 = and i32 %406, 256, !dbg !9413
  %408 = icmp eq i32 %407, 0, !dbg !9414
  br i1 %408, label %429, label %409, !dbg !9415

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9416
  %411 = load i32, i32* %410, align 4, !dbg !9416
  %412 = icmp eq i32 %411, 134217728, !dbg !9417
  br i1 %412, label %413, label %429, !dbg !9418

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9419
  %415 = and i32 %414, 251658240, !dbg !9421
  call void @llvm.dbg.value(metadata i32 %415, metadata !9112, metadata !DIExpression()), !dbg !9119
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9422
  %417 = load i32, i32* %416, align 4, !dbg !9422
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9422
  %419 = load i32, i32* %418, align 4, !dbg !9422
  %420 = shl i32 %419, 6, !dbg !9422
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9422
  %422 = load i32, i32* %421, align 4, !dbg !9422
  %423 = shl i32 %422, 15, !dbg !9422
  %424 = add i32 %423, -65536, !dbg !9422
  %425 = and i32 %424, -65536, !dbg !9422
  %426 = or i32 %415, %417, !dbg !9422
  %427 = or i32 %426, %420, !dbg !9422
  %428 = or i32 %427, %425, !dbg !9422
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9422
  br label %429, !dbg !9423

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9424
  %430 = tail call i32 @HAL_GetTick() #25, !dbg !9425
  call void @llvm.dbg.value(metadata i32 %430, metadata !9106, metadata !DIExpression()), !dbg !9119
  br label %431, !dbg !9426

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9427
  %433 = and i32 %432, 536870912, !dbg !9428
  %434 = icmp eq i32 %433, 0, !dbg !9428
  br i1 %434, label %435, label %439, !dbg !9426

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #25, !dbg !9429
  %437 = sub i32 %436, %430, !dbg !9432
  %438 = icmp ugt i32 %437, 2, !dbg !9433
  br i1 %438, label %439, label %431, !dbg !9434, !llvm.loop !9435

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !9119
  ret i32 %440, !dbg !9437
}

; Function Attrs: optsize
declare !dbg !9438 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #14 !dbg !9440 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9444, metadata !DIExpression()), !dbg !9446
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9447
  store i32 2047, i32* %2, align 4, !dbg !9448
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9449
  %4 = and i32 %3, 63, !dbg !9450
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9451
  store i32 %4, i32* %5, align 4, !dbg !9452
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9453
  %7 = lshr i32 %6, 6, !dbg !9454
  %8 = and i32 %7, 511, !dbg !9454
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9455
  store i32 %8, i32* %9, align 4, !dbg !9456
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9457
  %11 = lshr i32 %10, 15, !dbg !9458
  %12 = and i32 %11, 6, !dbg !9458
  %13 = add nuw nsw i32 %12, 2, !dbg !9458
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9459
  store i32 %13, i32* %14, align 4, !dbg !9460
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9461
  %16 = lshr i32 %15, 24, !dbg !9462
  %17 = and i32 %16, 15, !dbg !9462
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9463
  store i32 %17, i32* %18, align 4, !dbg !9464
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9465
  %20 = lshr i32 %19, 28, !dbg !9466
  %21 = and i32 %20, 7, !dbg !9466
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9467
  store i32 %21, i32* %22, align 4, !dbg !9468
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9469
  %24 = and i32 %23, 63, !dbg !9470
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9471
  store i32 %24, i32* %25, align 4, !dbg !9472
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9473
  %27 = lshr i32 %26, 6, !dbg !9474
  %28 = and i32 %27, 511, !dbg !9474
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9475
  store i32 %28, i32* %29, align 4, !dbg !9476
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9477
  %31 = lshr i32 %30, 15, !dbg !9478
  %32 = and i32 %31, 6, !dbg !9478
  %33 = add nuw nsw i32 %32, 2, !dbg !9478
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9479
  store i32 %33, i32* %34, align 4, !dbg !9480
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9481
  %36 = lshr i32 %35, 24, !dbg !9482
  %37 = and i32 %36, 15, !dbg !9482
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9483
  store i32 %37, i32* %38, align 4, !dbg !9484
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9485
  %40 = and i32 %39, 31, !dbg !9486
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9487
  store i32 %40, i32* %41, align 4, !dbg !9488
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9489
  %43 = lshr i32 %42, 8, !dbg !9490
  %44 = and i32 %43, 31, !dbg !9490
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9491
  store i32 %44, i32* %45, align 4, !dbg !9492
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9493
  %47 = and i32 %46, 3145728, !dbg !9493
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9494
  store i32 %47, i32* %48, align 4, !dbg !9495
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9496
  %50 = and i32 %49, 12582912, !dbg !9496
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9497
  store i32 %50, i32* %51, align 4, !dbg !9498
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9499
  %53 = and i32 %52, 100663296, !dbg !9499
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9500
  store i32 %53, i32* %54, align 4, !dbg !9501
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9502
  %56 = and i32 %55, 402653184, !dbg !9502
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9503
  store i32 %56, i32* %57, align 4, !dbg !9504
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9505
  %59 = and i32 %58, 2031616, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %59, metadata !9445, metadata !DIExpression()), !dbg !9446
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9507
  %61 = and i32 %60, 768, !dbg !9508
  %62 = or i32 %61, %59, !dbg !9509
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9510
  store i32 %62, i32* %63, align 4, !dbg !9511
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9512
  %65 = and i32 %64, 67108864, !dbg !9512
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9513
  store i32 %65, i32* %66, align 4, !dbg !9514
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9515
  %68 = and i32 %67, 12582912, !dbg !9515
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9516
  store i32 %68, i32* %69, align 4, !dbg !9517
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9518
  %71 = and i32 %70, 134217728, !dbg !9518
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9519
  store i32 %71, i32* %72, align 4, !dbg !9520
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9521
  %74 = and i32 %73, 268435456, !dbg !9521
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9522
  store i32 %74, i32* %75, align 4, !dbg !9523
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9524
  %77 = and i32 %76, 536870912, !dbg !9524
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9525
  store i32 %77, i32* %78, align 4, !dbg !9526
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9527
  %80 = lshr i32 %79, 24, !dbg !9529
  %81 = trunc i32 %80 to i8, !dbg !9529
  %82 = and i8 %81, 1, !dbg !9529
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9530
  store i8 %82, i8* %83, align 4, !dbg !9532
  ret void, !dbg !9533
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #14 !dbg !9534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9536, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 0, metadata !9537, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 0, metadata !9538, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 0, metadata !9539, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 0, metadata !9540, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 0, metadata !9541, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 0, metadata !9542, metadata !DIExpression()), !dbg !9543
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !9544

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9545
  call void @llvm.dbg.value(metadata i32 %3, metadata !9540, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %3, metadata !9540, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !9543
  %4 = lshr i32 %3, 20, !dbg !9548
  %5 = and i32 %4, 15, !dbg !9548
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !9548

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9549
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9553
  %9 = and i32 %8, 63, !dbg !9553
  %10 = udiv i32 16000000, %9, !dbg !9553
  call void @llvm.dbg.value(metadata i32 %10, metadata !9539, metadata !DIExpression()), !dbg !9543
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9554
  %12 = lshr i32 %11, 24, !dbg !9555
  %13 = and i32 %12, 15, !dbg !9555
  call void @llvm.dbg.value(metadata i32 %13, metadata !9537, metadata !DIExpression()), !dbg !9543
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9556
  %15 = lshr i32 %14, 6, !dbg !9557
  %16 = and i32 %15, 511, !dbg !9557
  %17 = mul i32 %16, %10, !dbg !9558
  %18 = udiv i32 %17, %13, !dbg !9559
  call void @llvm.dbg.value(metadata i32 %18, metadata !9538, metadata !DIExpression()), !dbg !9543
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9560
  %20 = lshr i32 %19, 8, !dbg !9561
  %21 = and i32 %20, 31, !dbg !9561
  %22 = add nuw nsw i32 %21, 1, !dbg !9562
  call void @llvm.dbg.value(metadata i32 %22, metadata !9537, metadata !DIExpression()), !dbg !9543
  %23 = udiv i32 %18, %22, !dbg !9563
  call void @llvm.dbg.value(metadata i32 %23, metadata !9538, metadata !DIExpression()), !dbg !9543
  br label %123, !dbg !9564

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9565
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9568
  %27 = and i32 %26, 63, !dbg !9568
  %28 = udiv i32 16000000, %27, !dbg !9568
  call void @llvm.dbg.value(metadata i32 %28, metadata !9539, metadata !DIExpression()), !dbg !9543
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9569
  %30 = lshr i32 %29, 24, !dbg !9570
  %31 = and i32 %30, 15, !dbg !9570
  call void @llvm.dbg.value(metadata i32 %31, metadata !9537, metadata !DIExpression()), !dbg !9543
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9571
  %33 = lshr i32 %32, 6, !dbg !9572
  %34 = and i32 %33, 511, !dbg !9572
  %35 = mul i32 %34, %28, !dbg !9573
  %36 = udiv i32 %35, %31, !dbg !9574
  call void @llvm.dbg.value(metadata i32 %36, metadata !9538, metadata !DIExpression()), !dbg !9543
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9575
  %38 = and i32 %37, 31, !dbg !9576
  %39 = add nuw nsw i32 %38, 1, !dbg !9577
  call void @llvm.dbg.value(metadata i32 %39, metadata !9537, metadata !DIExpression()), !dbg !9543
  %40 = udiv i32 %36, %39, !dbg !9578
  call void @llvm.dbg.value(metadata i32 %40, metadata !9538, metadata !DIExpression()), !dbg !9543
  br label %123, !dbg !9579

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9580
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9583
  %44 = and i32 %43, 63, !dbg !9583
  %45 = udiv i32 16000000, %44, !dbg !9583
  call void @llvm.dbg.value(metadata i32 %45, metadata !9539, metadata !DIExpression()), !dbg !9543
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9584
  %47 = lshr i32 %46, 28, !dbg !9585
  %48 = and i32 %47, 7, !dbg !9585
  call void @llvm.dbg.value(metadata i32 %48, metadata !9537, metadata !DIExpression()), !dbg !9543
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9586
  %50 = lshr i32 %49, 6, !dbg !9587
  %51 = and i32 %50, 511, !dbg !9587
  %52 = mul i32 %51, %45, !dbg !9588
  %53 = udiv i32 %52, %48, !dbg !9589
  call void @llvm.dbg.value(metadata i32 %53, metadata !9538, metadata !DIExpression()), !dbg !9543
  br label %123, !dbg !9590

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !9538, metadata !DIExpression()), !dbg !9543
  br label %123, !dbg !9591

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9593
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9538, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9538, metadata !DIExpression()), !dbg !9543
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9596
  call void @llvm.dbg.value(metadata i32 %58, metadata !9541, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !9543
  %59 = lshr i32 %58, 25, !dbg !9598
  %60 = and i32 %59, 3, !dbg !9598
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !9598

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9599
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9603
  %64 = and i32 %63, 63, !dbg !9603
  %65 = udiv i32 16000000, %64, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %65, metadata !9539, metadata !DIExpression()), !dbg !9543
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9604
  %67 = lshr i32 %66, 6, !dbg !9605
  %68 = and i32 %67, 511, !dbg !9605
  %69 = mul i32 %68, %65, !dbg !9606
  call void @llvm.dbg.value(metadata i32 %69, metadata !9542, metadata !DIExpression()), !dbg !9543
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9607
  %71 = lshr i32 %70, 28, !dbg !9608
  %72 = and i32 %71, 7, !dbg !9608
  %73 = udiv i32 %69, %72, !dbg !9609
  call void @llvm.dbg.value(metadata i32 %73, metadata !9538, metadata !DIExpression()), !dbg !9543
  br label %123, !dbg !9610

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9611
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9614
  %77 = and i32 %76, 63, !dbg !9614
  %78 = udiv i32 16000000, %77, !dbg !9614
  call void @llvm.dbg.value(metadata i32 %78, metadata !9539, metadata !DIExpression()), !dbg !9543
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9615
  %80 = lshr i32 %79, 6, !dbg !9616
  %81 = and i32 %80, 511, !dbg !9616
  %82 = mul i32 %81, %78, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %82, metadata !9542, metadata !DIExpression()), !dbg !9543
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9618
  %84 = lshr i32 %83, 28, !dbg !9619
  %85 = and i32 %84, 7, !dbg !9619
  %86 = udiv i32 %82, %85, !dbg !9620
  call void @llvm.dbg.value(metadata i32 %86, metadata !9538, metadata !DIExpression()), !dbg !9543
  br label %123, !dbg !9621

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9622
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9538, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9538, metadata !DIExpression()), !dbg !9543
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9625
  call void @llvm.dbg.value(metadata i32 %91, metadata !9541, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !9543
  %92 = lshr i32 %91, 27, !dbg !9627
  %93 = and i32 %92, 3, !dbg !9627
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !9627

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9628
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9632
  %97 = and i32 %96, 63, !dbg !9632
  %98 = udiv i32 16000000, %97, !dbg !9632
  call void @llvm.dbg.value(metadata i32 %98, metadata !9539, metadata !DIExpression()), !dbg !9543
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9633
  %100 = lshr i32 %99, 6, !dbg !9634
  %101 = and i32 %100, 511, !dbg !9634
  %102 = mul i32 %101, %98, !dbg !9635
  call void @llvm.dbg.value(metadata i32 %102, metadata !9542, metadata !DIExpression()), !dbg !9543
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9636
  %104 = lshr i32 %103, 28, !dbg !9637
  %105 = and i32 %104, 7, !dbg !9637
  %106 = udiv i32 %102, %105, !dbg !9638
  call void @llvm.dbg.value(metadata i32 %106, metadata !9538, metadata !DIExpression()), !dbg !9543
  br label %123, !dbg !9639

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9640
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 undef, metadata !9539, metadata !DIExpression()), !dbg !9543
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9643
  %110 = and i32 %109, 63, !dbg !9643
  %111 = udiv i32 16000000, %110, !dbg !9643
  call void @llvm.dbg.value(metadata i32 %111, metadata !9539, metadata !DIExpression()), !dbg !9543
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9644
  %113 = lshr i32 %112, 6, !dbg !9645
  %114 = and i32 %113, 511, !dbg !9645
  %115 = mul i32 %114, %111, !dbg !9646
  call void @llvm.dbg.value(metadata i32 %115, metadata !9542, metadata !DIExpression()), !dbg !9543
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9647
  %117 = lshr i32 %116, 28, !dbg !9648
  %118 = and i32 %117, 7, !dbg !9648
  %119 = udiv i32 %115, %118, !dbg !9649
  call void @llvm.dbg.value(metadata i32 %119, metadata !9538, metadata !DIExpression()), !dbg !9543
  br label %123, !dbg !9650

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9651
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9538, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9538, metadata !DIExpression()), !dbg !9543
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !9543
  call void @llvm.dbg.value(metadata i32 %124, metadata !9538, metadata !DIExpression()), !dbg !9543
  ret i32 %124, !dbg !9654
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #13 !dbg !9655 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9659, metadata !DIExpression()), !dbg !9660
  %2 = icmp eq i8 %0, 1, !dbg !9661
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9663
  %4 = and i32 %3, -9, !dbg !9664
  %5 = select i1 %2, i32 8, i32 0, !dbg !9664
  %6 = or i32 %4, %5, !dbg !9664
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9663
  ret void, !dbg !9665
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9666 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !9671, metadata !DIExpression()), !dbg !9673
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9674
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !9675
  call void @llvm.dbg.value(metadata i32 %2, metadata !9672, metadata !DIExpression()), !dbg !9673
  br label %3, !dbg !9676

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9677
  %5 = and i32 %4, 134217728, !dbg !9677
  %6 = icmp eq i32 %5, 0, !dbg !9677
  br i1 %6, label %11, label %7, !dbg !9676

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !9678
  %9 = sub i32 %8, %2, !dbg !9681
  %10 = icmp ugt i32 %9, 2, !dbg !9682
  br i1 %10, label %41, label %3, !dbg !9683, !llvm.loop !9684

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !9686
  %13 = load i32, i32* %12, align 4, !dbg !9686
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !9686
  %15 = load i32, i32* %14, align 4, !dbg !9686
  %16 = shl i32 %15, 6, !dbg !9686
  %17 = or i32 %16, %13, !dbg !9686
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !9686
  %19 = load i32, i32* %18, align 4, !dbg !9686
  %20 = shl i32 %19, 15, !dbg !9686
  %21 = add i32 %20, -65536, !dbg !9686
  %22 = and i32 %21, -65536, !dbg !9686
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !9686
  %24 = load i32, i32* %23, align 4, !dbg !9686
  %25 = shl i32 %24, 24, !dbg !9686
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !9686
  %27 = load i32, i32* %26, align 4, !dbg !9686
  %28 = shl i32 %27, 28, !dbg !9686
  %29 = or i32 %17, %25, !dbg !9686
  %30 = or i32 %29, %22, !dbg !9686
  %31 = or i32 %30, %28, !dbg !9686
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9686
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9687
  %32 = tail call i32 @HAL_GetTick() #25, !dbg !9688
  call void @llvm.dbg.value(metadata i32 %32, metadata !9672, metadata !DIExpression()), !dbg !9673
  br label %33, !dbg !9689

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9690
  %35 = and i32 %34, 134217728, !dbg !9691
  %36 = icmp eq i32 %35, 0, !dbg !9691
  br i1 %36, label %37, label %41, !dbg !9689

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #25, !dbg !9692
  %39 = sub i32 %38, %32, !dbg !9695
  %40 = icmp ugt i32 %39, 2, !dbg !9696
  br i1 %40, label %41, label %33, !dbg !9697, !llvm.loop !9698

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !9673
  ret i32 %42, !dbg !9700
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !9701 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9706
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !9707
  call void @llvm.dbg.value(metadata i32 %1, metadata !9705, metadata !DIExpression()), !dbg !9708
  br label %2, !dbg !9709

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9710
  %4 = and i32 %3, 134217728, !dbg !9710
  %5 = icmp eq i32 %4, 0, !dbg !9711
  br i1 %5, label %10, label %6, !dbg !9709

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !9712
  %8 = sub i32 %7, %1, !dbg !9715
  %9 = icmp ugt i32 %8, 2, !dbg !9716
  br i1 %9, label %10, label %2, !dbg !9717, !llvm.loop !9718

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !9708
  ret i32 %11, !dbg !9720
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9721 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !9726, metadata !DIExpression()), !dbg !9728
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9729
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !9730
  call void @llvm.dbg.value(metadata i32 %2, metadata !9727, metadata !DIExpression()), !dbg !9728
  br label %3, !dbg !9731

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9732
  %5 = and i32 %4, 536870912, !dbg !9732
  %6 = icmp eq i32 %5, 0, !dbg !9732
  br i1 %6, label %11, label %7, !dbg !9731

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !9733
  %9 = sub i32 %8, %2, !dbg !9736
  %10 = icmp ugt i32 %9, 2, !dbg !9737
  br i1 %10, label %37, label %3, !dbg !9738, !llvm.loop !9739

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !9741
  %13 = load i32, i32* %12, align 4, !dbg !9741
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !9741
  %15 = load i32, i32* %14, align 4, !dbg !9741
  %16 = shl i32 %15, 6, !dbg !9741
  %17 = or i32 %16, %13, !dbg !9741
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !9741
  %19 = load i32, i32* %18, align 4, !dbg !9741
  %20 = shl i32 %19, 15, !dbg !9741
  %21 = add i32 %20, -65536, !dbg !9741
  %22 = and i32 %21, -65536, !dbg !9741
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !9741
  %24 = load i32, i32* %23, align 4, !dbg !9741
  %25 = shl i32 %24, 24, !dbg !9741
  %26 = or i32 %17, %25, !dbg !9741
  %27 = or i32 %26, %22, !dbg !9741
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9741
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9742
  %28 = tail call i32 @HAL_GetTick() #25, !dbg !9743
  call void @llvm.dbg.value(metadata i32 %28, metadata !9727, metadata !DIExpression()), !dbg !9728
  br label %29, !dbg !9744

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9745
  %31 = and i32 %30, 536870912, !dbg !9746
  %32 = icmp eq i32 %31, 0, !dbg !9746
  br i1 %32, label %33, label %37, !dbg !9744

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #25, !dbg !9747
  %35 = sub i32 %34, %28, !dbg !9750
  %36 = icmp ugt i32 %35, 2, !dbg !9751
  br i1 %36, label %37, label %29, !dbg !9752, !llvm.loop !9753

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !9728
  ret i32 %38, !dbg !9755
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !9756 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9759
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %1, metadata !9758, metadata !DIExpression()), !dbg !9761
  br label %2, !dbg !9762

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9763
  %4 = and i32 %3, 536870912, !dbg !9763
  %5 = icmp eq i32 %4, 0, !dbg !9763
  br i1 %5, label %10, label %6, !dbg !9762

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !9764
  %8 = sub i32 %7, %1, !dbg !9767
  %9 = icmp ugt i32 %8, 2, !dbg !9768
  br i1 %9, label %10, label %2, !dbg !9769, !llvm.loop !9770

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !9761
  ret i32 %11, !dbg !9772
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #14 !dbg !9773 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9775, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 0, metadata !9776, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 0, metadata !9777, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 0, metadata !9778, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 0, metadata !9779, metadata !DIExpression()), !dbg !9780
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9781
  %2 = lshr i32 %1, 2, !dbg !9782
  %3 = and i32 %2, 3, !dbg !9782
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !9782

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9783
  %6 = and i32 %5, 63, !dbg !9786
  call void @llvm.dbg.value(metadata i32 %6, metadata !9775, metadata !DIExpression()), !dbg !9780
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9787
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9789
  %9 = lshr i32 %8, 6, !dbg !9789
  %10 = and i32 %9, 511, !dbg !9789
  %11 = zext i32 %10 to i64, !dbg !9789
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !9789
  %13 = zext i32 %6 to i64, !dbg !9789
  %14 = udiv i64 %12, %13, !dbg !9789
  %15 = trunc i64 %14 to i32, !dbg !9789
  call void @llvm.dbg.value(metadata i32 %15, metadata !9776, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 %15, metadata !9776, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 %15, metadata !9776, metadata !DIExpression()), !dbg !9780
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9790
  %17 = lshr i32 %16, 15, !dbg !9791
  %18 = and i32 %17, 6, !dbg !9791
  %19 = add nuw nsw i32 %18, 2, !dbg !9791
  call void @llvm.dbg.value(metadata i32 %19, metadata !9777, metadata !DIExpression()), !dbg !9780
  %20 = udiv i32 %15, %19, !dbg !9792
  call void @llvm.dbg.value(metadata i32 %20, metadata !9779, metadata !DIExpression()), !dbg !9780
  br label %38, !dbg !9793

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9794
  %23 = and i32 %22, 63, !dbg !9796
  call void @llvm.dbg.value(metadata i32 %23, metadata !9775, metadata !DIExpression()), !dbg !9780
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9797
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9799
  %26 = lshr i32 %25, 6, !dbg !9799
  %27 = and i32 %26, 511, !dbg !9799
  %28 = zext i32 %27 to i64, !dbg !9799
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !9799
  %30 = zext i32 %23 to i64, !dbg !9799
  %31 = udiv i64 %29, %30, !dbg !9799
  %32 = trunc i64 %31 to i32, !dbg !9799
  call void @llvm.dbg.value(metadata i32 %32, metadata !9776, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 %32, metadata !9776, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 %32, metadata !9776, metadata !DIExpression()), !dbg !9780
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9800
  %34 = lshr i32 %33, 28, !dbg !9801
  %35 = and i32 %34, 7, !dbg !9801
  call void @llvm.dbg.value(metadata i32 %35, metadata !9778, metadata !DIExpression()), !dbg !9780
  %36 = udiv i32 %32, %35, !dbg !9802
  call void @llvm.dbg.value(metadata i32 %36, metadata !9779, metadata !DIExpression()), !dbg !9780
  br label %38, !dbg !9803

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !9804
  call void @llvm.dbg.value(metadata i32 %39, metadata !9779, metadata !DIExpression()), !dbg !9780
  ret i32 %39, !dbg !9805
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !9806 {
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !9809
  call void @llvm.dbg.value(metadata i32 %1, metadata !9808, metadata !DIExpression()), !dbg !9810
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9811
  %3 = or i32 %2, 1, !dbg !9811
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9811
  br label %4, !dbg !9812

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9813
  %6 = and i32 %5, 2, !dbg !9813
  %7 = icmp eq i32 %6, 0, !dbg !9814
  br i1 %7, label %8, label %12, !dbg !9812

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #25, !dbg !9815
  %10 = sub i32 %9, %1, !dbg !9818
  %11 = icmp ugt i32 %10, 2, !dbg !9819
  br i1 %11, label %89, label %4, !dbg !9820, !llvm.loop !9821

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9823
  %14 = or i32 %13, 128, !dbg !9823
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9823
  %15 = tail call i32 @HAL_GetTick() #25, !dbg !9824
  call void @llvm.dbg.value(metadata i32 %15, metadata !9808, metadata !DIExpression()), !dbg !9810
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9825
  br label %16, !dbg !9826

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9827
  %18 = and i32 %17, 12, !dbg !9827
  %19 = icmp eq i32 %18, 0, !dbg !9828
  %20 = tail call i32 @HAL_GetTick() #25, !dbg !9810
  br i1 %19, label %24, label %21, !dbg !9826

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !9829
  %23 = icmp ugt i32 %22, 5000, !dbg !9832
  br i1 %23, label %89, label %16, !dbg !9833, !llvm.loop !9834

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !9808, metadata !DIExpression()), !dbg !9810
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9836
  %26 = and i32 %25, -851969, !dbg !9836
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9836
  br label %27, !dbg !9837

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9838
  %29 = and i32 %28, 131072, !dbg !9838
  %30 = icmp eq i32 %29, 0, !dbg !9839
  %31 = tail call i32 @HAL_GetTick() #25, !dbg !9810
  br i1 %30, label %35, label %32, !dbg !9837

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !9840
  %34 = icmp ugt i32 %33, 100, !dbg !9843
  br i1 %34, label %89, label %27, !dbg !9844, !llvm.loop !9845

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !9808, metadata !DIExpression()), !dbg !9810
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9847
  %37 = and i32 %36, -16777217, !dbg !9847
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9847
  br label %38, !dbg !9848

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9849
  %40 = and i32 %39, 33554432, !dbg !9849
  %41 = icmp eq i32 %40, 0, !dbg !9850
  %42 = tail call i32 @HAL_GetTick() #25, !dbg !9810
  br i1 %41, label %46, label %43, !dbg !9848

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !9851
  %45 = icmp ugt i32 %44, 2, !dbg !9854
  br i1 %45, label %89, label %38, !dbg !9855, !llvm.loop !9856

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !9808, metadata !DIExpression()), !dbg !9810
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9858
  %48 = and i32 %47, -67108865, !dbg !9858
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9858
  br label %49, !dbg !9859

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9860
  %51 = and i32 %50, 134217728, !dbg !9860
  %52 = icmp eq i32 %51, 0, !dbg !9861
  %53 = tail call i32 @HAL_GetTick() #25, !dbg !9810
  br i1 %52, label %57, label %54, !dbg !9859

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !9862
  %56 = icmp ugt i32 %55, 2, !dbg !9865
  br i1 %56, label %89, label %49, !dbg !9866, !llvm.loop !9867

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !9808, metadata !DIExpression()), !dbg !9810
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9869
  %59 = and i32 %58, -268435457, !dbg !9869
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9869
  br label %60, !dbg !9870

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9871
  %62 = and i32 %61, 536870912, !dbg !9871
  %63 = icmp eq i32 %62, 0, !dbg !9872
  br i1 %63, label %68, label %64, !dbg !9870

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #25, !dbg !9873
  %66 = sub i32 %65, %53, !dbg !9876
  %67 = icmp ugt i32 %66, 2, !dbg !9877
  br i1 %67, label %89, label %60, !dbg !9878, !llvm.loop !9879

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9881
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9882
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9883
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9884
  %70 = and i32 %69, -7937, !dbg !9884
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9884
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9885
  %72 = and i32 %71, -8193, !dbg !9885
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9885
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9886
  %74 = and i32 %73, -16385, !dbg !9886
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9886
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9887
  %76 = or i32 %75, 10420224, !dbg !9887
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9887
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9888
  %78 = or i32 %77, 2097152, !dbg !9888
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9888
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9889
  %80 = or i32 %79, 4194304, !dbg !9889
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9889
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9890
  %82 = and i32 %81, -2, !dbg !9890
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9890
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9891
  %84 = or i32 %83, 16777216, !dbg !9891
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9891
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !9892
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !9893
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #25, !dbg !9895
  %87 = icmp ne i32 %86, 0, !dbg !9896
  %88 = zext i1 %87 to i32, !dbg !9897
  br label %89, !dbg !9897

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !9810
  ret i32 %90, !dbg !9898
}

; Function Attrs: optsize
declare !dbg !9899 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !9902 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9928, metadata !DIExpression()), !dbg !9939
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !9940
  br i1 %3, label %337, label %4, !dbg !9942

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9943
  %6 = load i32, i32* %5, align 4, !dbg !9943
  %7 = and i32 %6, 1, !dbg !9945
  %8 = icmp eq i32 %7, 0, !dbg !9946
  br i1 %8, label %74, label %9, !dbg !9947

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9948
  %11 = and i32 %10, 12, !dbg !9948
  %12 = icmp eq i32 %11, 4, !dbg !9951
  br i1 %12, label %29, label %13, !dbg !9952

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9953
  %15 = and i32 %14, 12, !dbg !9953
  %16 = icmp eq i32 %15, 8, !dbg !9954
  br i1 %16, label %17, label %21, !dbg !9955

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9956
  %19 = and i32 %18, 4194304, !dbg !9957
  %20 = icmp eq i32 %19, 0, !dbg !9958
  br i1 %20, label %21, label %29, !dbg !9959

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9960
  %23 = and i32 %22, 12, !dbg !9960
  %24 = icmp eq i32 %23, 12, !dbg !9961
  br i1 %24, label %25, label %37, !dbg !9962

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9963
  %27 = and i32 %26, 4194304, !dbg !9964
  %28 = icmp eq i32 %27, 0, !dbg !9965
  br i1 %28, label %37, label %29, !dbg !9966

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9967
  %31 = and i32 %30, 131072, !dbg !9967
  %32 = icmp eq i32 %31, 0, !dbg !9967
  br i1 %32, label %74, label %33, !dbg !9970

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9971
  %35 = load i32, i32* %34, align 4, !dbg !9971
  %36 = icmp eq i32 %35, 0, !dbg !9972
  br i1 %36, label %337, label %74, !dbg !9973

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9974
  %39 = load i32, i32* %38, align 4, !dbg !9974
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !9978

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9979
  %42 = or i32 %41, 65536, !dbg !9979
  br label %53, !dbg !9979

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9981
  %45 = or i32 %44, 262144, !dbg !9981
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9981
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9981
  %47 = or i32 %46, 65536, !dbg !9981
  br label %53, !dbg !9981

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9984
  %50 = and i32 %49, -65537, !dbg !9984
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9984
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9984
  %52 = and i32 %51, -262145, !dbg !9984
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9986
  %55 = load i32, i32* %38, align 4, !dbg !9987
  %56 = icmp eq i32 %55, 0, !dbg !9989
  %57 = tail call i32 @HAL_GetTick() #25, !dbg !9990
  call void @llvm.dbg.value(metadata i32 %57, metadata !9929, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i32 %57, metadata !9929, metadata !DIExpression()), !dbg !9939
  br i1 %56, label %66, label %58, !dbg !9991

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9992
  %60 = and i32 %59, 131072, !dbg !9994
  %61 = icmp eq i32 %60, 0, !dbg !9994
  br i1 %61, label %62, label %74, !dbg !9995

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !9996
  %64 = sub i32 %63, %57, !dbg !9999
  %65 = icmp ugt i32 %64, 100, !dbg !10000
  br i1 %65, label %337, label %58, !dbg !10001, !llvm.loop !10002

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10004
  %68 = and i32 %67, 131072, !dbg !10004
  %69 = icmp eq i32 %68, 0, !dbg !10004
  br i1 %69, label %74, label %70, !dbg !10006

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #25, !dbg !10007
  %72 = sub i32 %71, %57, !dbg !10010
  %73 = icmp ugt i32 %72, 100, !dbg !10011
  br i1 %73, label %337, label %66, !dbg !10012, !llvm.loop !10013

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !10015
  %76 = and i32 %75, 2, !dbg !10017
  %77 = icmp eq i32 %76, 0, !dbg !10018
  br i1 %77, label %137, label %78, !dbg !10019

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10020
  %80 = and i32 %79, 12, !dbg !10020
  %81 = icmp eq i32 %80, 0, !dbg !10023
  br i1 %81, label %98, label %82, !dbg !10024

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10025
  %84 = and i32 %83, 12, !dbg !10025
  %85 = icmp eq i32 %84, 8, !dbg !10026
  br i1 %85, label %86, label %90, !dbg !10027

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10028
  %88 = and i32 %87, 4194304, !dbg !10029
  %89 = icmp eq i32 %88, 0, !dbg !10030
  br i1 %89, label %98, label %90, !dbg !10031

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10032
  %92 = and i32 %91, 12, !dbg !10032
  %93 = icmp eq i32 %92, 12, !dbg !10033
  br i1 %93, label %94, label %106, !dbg !10034

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10035
  %96 = and i32 %95, 4194304, !dbg !10036
  %97 = icmp eq i32 %96, 0, !dbg !10037
  br i1 %97, label %98, label %106, !dbg !10038

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10039
  %100 = and i32 %99, 2, !dbg !10039
  %101 = icmp eq i32 %100, 0, !dbg !10039
  br i1 %101, label %130, label %102, !dbg !10042

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10043
  %104 = load i32, i32* %103, align 4, !dbg !10043
  %105 = icmp eq i32 %104, 1, !dbg !10044
  br i1 %105, label %130, label %337, !dbg !10045

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10046
  %108 = load i32, i32* %107, align 4, !dbg !10046
  %109 = icmp eq i32 %108, 0, !dbg !10049
  br i1 %109, label %120, label %110, !dbg !10050

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10051
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !10053
  call void @llvm.dbg.value(metadata i32 %111, metadata !9929, metadata !DIExpression()), !dbg !9939
  br label %112, !dbg !10054

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10055
  %114 = and i32 %113, 2, !dbg !10056
  %115 = icmp eq i32 %114, 0, !dbg !10056
  br i1 %115, label %116, label %130, !dbg !10054

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #25, !dbg !10057
  %118 = sub i32 %117, %111, !dbg !10060
  %119 = icmp ugt i32 %118, 2, !dbg !10061
  br i1 %119, label %337, label %112, !dbg !10062, !llvm.loop !10063

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10065
  %121 = tail call i32 @HAL_GetTick() #25, !dbg !10067
  call void @llvm.dbg.value(metadata i32 %121, metadata !9929, metadata !DIExpression()), !dbg !9939
  br label %122, !dbg !10068

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10069
  %124 = and i32 %123, 2, !dbg !10069
  %125 = icmp eq i32 %124, 0, !dbg !10069
  br i1 %125, label %137, label %126, !dbg !10068

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #25, !dbg !10070
  %128 = sub i32 %127, %121, !dbg !10073
  %129 = icmp ugt i32 %128, 2, !dbg !10074
  br i1 %129, label %337, label %122, !dbg !10075, !llvm.loop !10076

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10078
  %132 = and i32 %131, -249, !dbg !10078
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10078
  %134 = load i32, i32* %133, align 4, !dbg !10078
  %135 = shl i32 %134, 3, !dbg !10078
  %136 = or i32 %135, %132, !dbg !10078
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10078
  br label %137, !dbg !10079

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !10079
  %139 = and i32 %138, 8, !dbg !10081
  %140 = icmp eq i32 %139, 0, !dbg !10082
  br i1 %140, label %165, label %141, !dbg !10083

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10084
  %143 = load i32, i32* %142, align 4, !dbg !10084
  %144 = icmp eq i32 %143, 0, !dbg !10087
  br i1 %144, label %155, label %145, !dbg !10088

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10089
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !10091
  call void @llvm.dbg.value(metadata i32 %146, metadata !9929, metadata !DIExpression()), !dbg !9939
  br label %147, !dbg !10092

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10093
  %149 = and i32 %148, 2, !dbg !10094
  %150 = icmp eq i32 %149, 0, !dbg !10094
  br i1 %150, label %151, label %165, !dbg !10092

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #25, !dbg !10095
  %153 = sub i32 %152, %146, !dbg !10098
  %154 = icmp ugt i32 %153, 2, !dbg !10099
  br i1 %154, label %337, label %147, !dbg !10100, !llvm.loop !10101

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10103
  %156 = tail call i32 @HAL_GetTick() #25, !dbg !10105
  call void @llvm.dbg.value(metadata i32 %156, metadata !9929, metadata !DIExpression()), !dbg !9939
  br label %157, !dbg !10106

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10107
  %159 = and i32 %158, 2, !dbg !10107
  %160 = icmp eq i32 %159, 0, !dbg !10107
  br i1 %160, label %165, label %161, !dbg !10106

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #25, !dbg !10108
  %163 = sub i32 %162, %156, !dbg !10111
  %164 = icmp ugt i32 %163, 2, !dbg !10112
  br i1 %164, label %337, label %157, !dbg !10113, !llvm.loop !10114

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !10116
  %167 = and i32 %166, 4, !dbg !10117
  %168 = icmp eq i32 %167, 0, !dbg !10118
  br i1 %168, label %237, label %169, !dbg !10119

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !9931, metadata !DIExpression()), !dbg !10120
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10121
  %171 = and i32 %170, 268435456, !dbg !10121
  %172 = icmp eq i32 %171, 0, !dbg !10121
  br i1 %172, label %173, label %180, !dbg !10122

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !10123
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !10123
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9935, metadata !DIExpression()), !dbg !10123
  store volatile i32 0, i32* %2, align 4, !dbg !10123
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10123
  %176 = or i32 %175, 268435456, !dbg !10123
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10123
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10123
  %178 = and i32 %177, 268435456, !dbg !10123
  store volatile i32 %178, i32* %2, align 4, !dbg !10123
  %179 = load volatile i32, i32* %2, align 4, !dbg !10123
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !10124
  call void @llvm.dbg.value(metadata i32 1, metadata !9931, metadata !DIExpression()), !dbg !10120
  br label %180, !dbg !10125

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !9931, metadata !DIExpression()), !dbg !10120
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10126
  %182 = and i32 %181, 256, !dbg !10126
  %183 = icmp eq i32 %182, 0, !dbg !10126
  br i1 %183, label %184, label %196, !dbg !10128

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10129
  %186 = or i32 %185, 256, !dbg !10129
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10129
  %187 = tail call i32 @HAL_GetTick() #25, !dbg !10131
  call void @llvm.dbg.value(metadata i32 %187, metadata !9929, metadata !DIExpression()), !dbg !9939
  br label %188, !dbg !10132

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10133
  %190 = and i32 %189, 256, !dbg !10133
  %191 = icmp eq i32 %190, 0, !dbg !10133
  br i1 %191, label %192, label %196, !dbg !10132

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #25, !dbg !10134
  %194 = sub i32 %193, %187, !dbg !10137
  %195 = icmp ugt i32 %194, 2, !dbg !10138
  br i1 %195, label %337, label %188, !dbg !10139, !llvm.loop !10140

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10142
  %198 = load i32, i32* %197, align 4, !dbg !10142
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !10145

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10146
  %201 = or i32 %200, 1, !dbg !10146
  br label %212, !dbg !10146

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10148
  %204 = or i32 %203, 4, !dbg !10148
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10148
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10148
  %206 = or i32 %205, 1, !dbg !10148
  br label %212, !dbg !10148

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10151
  %209 = and i32 %208, -2, !dbg !10151
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10151
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10151
  %211 = and i32 %210, -5, !dbg !10151
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10153
  %214 = load i32, i32* %197, align 4, !dbg !10154
  %215 = icmp eq i32 %214, 0, !dbg !10156
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !10157
  call void @llvm.dbg.value(metadata i32 %216, metadata !9929, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i32 %216, metadata !9929, metadata !DIExpression()), !dbg !9939
  br i1 %215, label %225, label %217, !dbg !10158

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10159
  %219 = and i32 %218, 2, !dbg !10161
  %220 = icmp eq i32 %219, 0, !dbg !10161
  br i1 %220, label %221, label %233, !dbg !10162

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #25, !dbg !10163
  %223 = sub i32 %222, %216, !dbg !10166
  %224 = icmp ugt i32 %223, 5000, !dbg !10167
  br i1 %224, label %337, label %217, !dbg !10168, !llvm.loop !10169

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10171
  %227 = and i32 %226, 2, !dbg !10171
  %228 = icmp eq i32 %227, 0, !dbg !10171
  br i1 %228, label %233, label %229, !dbg !10173

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !10174
  %231 = sub i32 %230, %216, !dbg !10177
  %232 = icmp ugt i32 %231, 5000, !dbg !10178
  br i1 %232, label %337, label %225, !dbg !10179, !llvm.loop !10180

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !10182

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10183
  %236 = and i32 %235, -268435457, !dbg !10183
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10183
  br label %237, !dbg !10186

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10187
  %239 = load i32, i32* %238, align 4, !dbg !10187
  %240 = icmp eq i32 %239, 0, !dbg !10189
  br i1 %240, label %336, label %241, !dbg !10190

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10191
  %243 = and i32 %242, 12, !dbg !10191
  %244 = icmp eq i32 %243, 8, !dbg !10194
  br i1 %244, label %297, label %245, !dbg !10195

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !10196
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10199
  %247 = tail call i32 @HAL_GetTick() #25, !dbg !10199
  call void @llvm.dbg.value(metadata i32 %247, metadata !9929, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i32 %247, metadata !9929, metadata !DIExpression()), !dbg !9939
  br i1 %246, label %248, label %289, !dbg !10200

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10201
  %250 = and i32 %249, 33554432, !dbg !10201
  %251 = icmp eq i32 %250, 0, !dbg !10201
  br i1 %251, label %256, label %252, !dbg !10203

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #25, !dbg !10204
  %254 = sub i32 %253, %247, !dbg !10207
  %255 = icmp ugt i32 %254, 2, !dbg !10208
  br i1 %255, label %337, label %248, !dbg !10209, !llvm.loop !10210

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10212
  %258 = load i32, i32* %257, align 4, !dbg !10212
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10212
  %260 = load i32, i32* %259, align 4, !dbg !10212
  %261 = or i32 %260, %258, !dbg !10212
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10212
  %263 = load i32, i32* %262, align 4, !dbg !10212
  %264 = shl i32 %263, 6, !dbg !10212
  %265 = or i32 %261, %264, !dbg !10212
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10212
  %267 = load i32, i32* %266, align 4, !dbg !10212
  %268 = shl i32 %267, 15, !dbg !10212
  %269 = add i32 %268, -65536, !dbg !10212
  %270 = and i32 %269, -65536, !dbg !10212
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10212
  %272 = load i32, i32* %271, align 4, !dbg !10212
  %273 = shl i32 %272, 24, !dbg !10212
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10212
  %275 = load i32, i32* %274, align 4, !dbg !10212
  %276 = shl i32 %275, 28, !dbg !10212
  %277 = or i32 %265, %273, !dbg !10212
  %278 = or i32 %277, %270, !dbg !10212
  %279 = or i32 %278, %276, !dbg !10212
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10212
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10213
  %280 = tail call i32 @HAL_GetTick() #25, !dbg !10214
  call void @llvm.dbg.value(metadata i32 %280, metadata !9929, metadata !DIExpression()), !dbg !9939
  br label %281, !dbg !10215

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10216
  %283 = and i32 %282, 33554432, !dbg !10217
  %284 = icmp eq i32 %283, 0, !dbg !10217
  br i1 %284, label %285, label %336, !dbg !10215

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #25, !dbg !10218
  %287 = sub i32 %286, %280, !dbg !10221
  %288 = icmp ugt i32 %287, 2, !dbg !10222
  br i1 %288, label %337, label %281, !dbg !10223, !llvm.loop !10224

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10226
  %291 = and i32 %290, 33554432, !dbg !10226
  %292 = icmp eq i32 %291, 0, !dbg !10226
  br i1 %292, label %336, label %293, !dbg !10228

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #25, !dbg !10229
  %295 = sub i32 %294, %247, !dbg !10232
  %296 = icmp ugt i32 %295, 2, !dbg !10233
  br i1 %296, label %337, label %289, !dbg !10234, !llvm.loop !10235

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !10237
  br i1 %298, label %337, label %299, !dbg !10240

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10241
  call void @llvm.dbg.value(metadata i32 %300, metadata !9930, metadata !DIExpression()), !dbg !9939
  %301 = and i32 %300, 4194304, !dbg !10243
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10245
  %303 = load i32, i32* %302, align 4, !dbg !10245
  %304 = icmp eq i32 %301, %303, !dbg !10246
  br i1 %304, label %305, label %337, !dbg !10247

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !10248
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10249
  %308 = load i32, i32* %307, align 4, !dbg !10249
  %309 = icmp eq i32 %306, %308, !dbg !10250
  br i1 %309, label %310, label %337, !dbg !10251

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !10252
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10253
  %313 = load i32, i32* %312, align 4, !dbg !10253
  %314 = shl i32 %313, 6, !dbg !10254
  %315 = icmp eq i32 %311, %314, !dbg !10255
  br i1 %315, label %316, label %337, !dbg !10256

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !10257
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10258
  %319 = load i32, i32* %318, align 4, !dbg !10258
  %320 = shl i32 %319, 15, !dbg !10259
  %321 = add i32 %320, -65536, !dbg !10259
  %322 = and i32 %321, -65536, !dbg !10259
  %323 = icmp eq i32 %317, %322, !dbg !10260
  br i1 %323, label %324, label %337, !dbg !10261

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !10262
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10263
  %327 = load i32, i32* %326, align 4, !dbg !10263
  %328 = shl i32 %327, 24, !dbg !10264
  %329 = icmp eq i32 %325, %328, !dbg !10265
  br i1 %329, label %330, label %337, !dbg !10266

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !10267
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10268
  %333 = load i32, i32* %332, align 4, !dbg !10268
  %334 = shl i32 %333, 28, !dbg !10269
  %335 = icmp eq i32 %331, %334, !dbg !10270
  br i1 %335, label %336, label %337, !dbg !10271

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !10272

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !9939
  ret i32 %338, !dbg !10273
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !10274 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10278, metadata !DIExpression()), !dbg !10279
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10280
  store i32 15, i32* %2, align 4, !dbg !10281
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10282
  %4 = and i32 %3, 262144, !dbg !10284
  %5 = icmp eq i32 %4, 0, !dbg !10285
  br i1 %5, label %8, label %6, !dbg !10286

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10287
  store i32 327680, i32* %7, align 4, !dbg !10289
  br label %15, !dbg !10290

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10291
  %10 = and i32 %9, 65536, !dbg !10293
  %11 = icmp eq i32 %10, 0, !dbg !10294
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10295
  br i1 %11, label %14, label %13, !dbg !10296

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !10297
  br label %15, !dbg !10299

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !10300
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10302
  %17 = and i32 %16, 1, !dbg !10304
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10305
  store i32 %17, i32* %18, align 4, !dbg !10307
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10308
  %20 = lshr i32 %19, 3, !dbg !10309
  %21 = and i32 %20, 31, !dbg !10309
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10310
  store i32 %21, i32* %22, align 4, !dbg !10311
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10312
  %24 = and i32 %23, 4, !dbg !10314
  %25 = icmp eq i32 %24, 0, !dbg !10315
  br i1 %25, label %28, label %26, !dbg !10316

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10317
  store i32 5, i32* %27, align 4, !dbg !10319
  br label %35, !dbg !10320

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10321
  %30 = and i32 %29, 1, !dbg !10323
  %31 = icmp eq i32 %30, 0, !dbg !10324
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10325
  br i1 %31, label %34, label %33, !dbg !10326

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !10327
  br label %35, !dbg !10329

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !10330
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10332
  %37 = and i32 %36, 1, !dbg !10334
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10335
  store i32 %37, i32* %38, align 4, !dbg !10337
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10338
  %40 = and i32 %39, 16777216, !dbg !10340
  %41 = icmp eq i32 %40, 0, !dbg !10341
  %42 = select i1 %41, i32 1, i32 2, !dbg !10342
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10343
  store i32 %42, i32* %43, align 4, !dbg !10345
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10346
  %45 = and i32 %44, 4194304, !dbg !10347
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10348
  store i32 %45, i32* %46, align 4, !dbg !10349
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10350
  %48 = and i32 %47, 63, !dbg !10351
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10352
  store i32 %48, i32* %49, align 4, !dbg !10353
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10354
  %51 = lshr i32 %50, 6, !dbg !10355
  %52 = and i32 %51, 511, !dbg !10355
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10356
  store i32 %52, i32* %53, align 4, !dbg !10357
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10358
  %55 = shl i32 %54, 1, !dbg !10359
  %56 = and i32 %55, 393216, !dbg !10359
  %57 = add nuw nsw i32 %56, 131072, !dbg !10359
  %58 = lshr exact i32 %57, 16, !dbg !10360
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10361
  store i32 %58, i32* %59, align 4, !dbg !10362
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10363
  %61 = lshr i32 %60, 24, !dbg !10364
  %62 = and i32 %61, 15, !dbg !10364
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10365
  store i32 %62, i32* %63, align 4, !dbg !10366
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10367
  %65 = lshr i32 %64, 28, !dbg !10368
  %66 = and i32 %65, 7, !dbg !10368
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10369
  store i32 %66, i32* %67, align 4, !dbg !10370
  ret void, !dbg !10371
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !10372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10375, metadata !DIExpression()), !dbg !10376
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !10377
  ret void, !dbg !10378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !10379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10382, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 1000, metadata !10383, metadata !DIExpression()), !dbg !10384
  %2 = udiv i32 %0, 1000, !dbg !10385
  %3 = add nsw i32 %2, -1, !dbg !10386
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10387
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10388
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10389
  ret void, !dbg !10390
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !10391 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10393, metadata !DIExpression()), !dbg !10395
  %3 = bitcast i32* %2 to i8*, !dbg !10396
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10396
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10394, metadata !DIExpression()), !dbg !10397
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10398
  store volatile i32 %4, i32* %2, align 4, !dbg !10397
  %5 = load volatile i32, i32* %2, align 4, !dbg !10399
  %6 = icmp eq i32 %0, -1, !dbg !10400
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10393, metadata !DIExpression()), !dbg !10395
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !10395
  call void @llvm.dbg.value(metadata i32 %8, metadata !10393, metadata !DIExpression()), !dbg !10395
  br label %9, !dbg !10402

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10393, metadata !DIExpression()), !dbg !10395
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10403
  call void @llvm.dbg.value(metadata i32 undef, metadata !10393, metadata !DIExpression()), !dbg !10395
  %12 = shl i32 %11, 15, !dbg !10395
  %13 = ashr i32 %12, 31, !dbg !10395
  %14 = add i32 %13, %10, !dbg !10395
  call void @llvm.dbg.value(metadata i32 %14, metadata !10393, metadata !DIExpression()), !dbg !10395
  %15 = icmp eq i32 %14, 0, !dbg !10402
  br i1 %15, label %16, label %9, !dbg !10402

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10406
  ret void, !dbg !10406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !10407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10409, metadata !DIExpression()), !dbg !10410
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !10411
  ret void, !dbg !10412
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !10413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10418, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i32 0, metadata !10421, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i32 0, metadata !10422, metadata !DIExpression()), !dbg !10423
  %2 = icmp eq i32 %0, 0, !dbg !10424
  br i1 %2, label %72, label %3, !dbg !10426

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10427
  %5 = icmp eq i32 %4, 49152, !dbg !10430
  br i1 %5, label %6, label %21, !dbg !10431

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !10432
  %8 = select i1 %7, i32 0, i32 5, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %8, metadata !10421, metadata !DIExpression()), !dbg !10423
  %9 = add i32 %0, -120000001, !dbg !10436
  %10 = icmp ult i32 %9, 30000000, !dbg !10436
  %11 = select i1 %10, i32 4, i32 %8, !dbg !10436
  call void @llvm.dbg.value(metadata i32 %11, metadata !10421, metadata !DIExpression()), !dbg !10423
  %12 = icmp ult i32 %9, -30000000, !dbg !10438
  %13 = select i1 %12, i32 %11, i32 3, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %13, metadata !10421, metadata !DIExpression()), !dbg !10423
  %14 = icmp ugt i32 %0, 60000000, !dbg !10440
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !10442
  br i1 %16, label %21, label %17, !dbg !10442

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !10443
  %19 = and i1 %18, %15, !dbg !10446
  %20 = select i1 %19, i32 1, i32 %13, !dbg !10446
  br label %21, !dbg !10446

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !10423
  call void @llvm.dbg.value(metadata i32 %22, metadata !10421, metadata !DIExpression()), !dbg !10423
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10447
  %24 = icmp eq i32 %23, 32768, !dbg !10449
  br i1 %24, label %25, label %45, !dbg !10450

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !10451
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !10454
  %29 = select i1 %28, i32 5, i32 %22, !dbg !10454
  call void @llvm.dbg.value(metadata i32 %29, metadata !10421, metadata !DIExpression()), !dbg !10423
  %30 = icmp ugt i32 %0, 12000000, !dbg !10455
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !10457
  %33 = select i1 %32, i32 4, i32 %29, !dbg !10457
  call void @llvm.dbg.value(metadata i32 %33, metadata !10421, metadata !DIExpression()), !dbg !10423
  %34 = icmp ugt i32 %0, 90000000, !dbg !10458
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !10460
  %37 = select i1 %36, i32 3, i32 %33, !dbg !10460
  call void @llvm.dbg.value(metadata i32 %37, metadata !10421, metadata !DIExpression()), !dbg !10423
  %38 = icmp ugt i32 %0, 60000000, !dbg !10461
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !10463
  br i1 %40, label %45, label %41, !dbg !10463

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !10464
  %43 = select i1 %42, i1 %39, i1 false, !dbg !10467
  %44 = select i1 %43, i32 1, i32 %37, !dbg !10467
  br label %45, !dbg !10467

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !10468
  call void @llvm.dbg.value(metadata i32 %46, metadata !10421, metadata !DIExpression()), !dbg !10423
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10469
  %48 = icmp eq i32 %47, 16384, !dbg !10471
  br i1 %48, label %49, label %61, !dbg !10472

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !10473
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !10476
  %53 = select i1 %52, i32 3, i32 %46, !dbg !10476
  call void @llvm.dbg.value(metadata i32 %53, metadata !10421, metadata !DIExpression()), !dbg !10423
  %54 = icmp ugt i32 %0, 60000000, !dbg !10477
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !10479
  br i1 %56, label %61, label %57, !dbg !10479

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !10480
  %59 = select i1 %58, i1 %55, i1 false, !dbg !10483
  %60 = select i1 %59, i32 1, i32 %53, !dbg !10483
  br label %61, !dbg !10483

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !10468
  call void @llvm.dbg.value(metadata i32 %62, metadata !10421, metadata !DIExpression()), !dbg !10423
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #24, !dbg !10484
  call void @llvm.dbg.value(metadata i32 2, metadata !10419, metadata !DIExpression()), !dbg !10423
  br label %63, !dbg !10485

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !10468
  call void @llvm.dbg.value(metadata i32 %64, metadata !10419, metadata !DIExpression()), !dbg !10423
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !10486
  call void @llvm.dbg.value(metadata i32 %65, metadata !10420, metadata !DIExpression()), !dbg !10423
  %66 = add nsw i32 %64, -1, !dbg !10488
  call void @llvm.dbg.value(metadata i32 %66, metadata !10419, metadata !DIExpression()), !dbg !10423
  %67 = icmp ne i32 %65, %62, !dbg !10489
  %68 = icmp ne i32 %66, 0, !dbg !10490
  %69 = select i1 %67, i1 %68, i1 false, !dbg !10490
  br i1 %69, label %63, label %70, !dbg !10491, !llvm.loop !10492

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !10494
  call void @llvm.dbg.value(metadata i32 %73, metadata !10422, metadata !DIExpression()), !dbg !10423
  ret i32 %73, !dbg !10495
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10496 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10498
  %2 = and i32 %1, 49152, !dbg !10498
  ret i32 %2, !dbg !10499
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10502, metadata !DIExpression()), !dbg !10503
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10504
  %3 = and i32 %2, -16, !dbg !10504
  %4 = or i32 %3, %0, !dbg !10504
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10504
  ret void, !dbg !10505
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10506 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10507
  %2 = and i32 %1, 15, !dbg !10507
  ret i32 %2, !dbg !10508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10509 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10527, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10528, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 0, metadata !10529, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 0, metadata !10530, metadata !DIExpression()), !dbg !10531
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !10532
  %4 = icmp eq i32 %3, 0, !dbg !10534
  br i1 %4, label %5, label %21, !dbg !10535

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !10536
  call void @llvm.dbg.value(metadata i32 %6, metadata !10530, metadata !DIExpression()), !dbg !10531
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.68() #24, !dbg !10538
  %8 = icmp eq i32 %7, 1, !dbg !10540
  br i1 %8, label %13, label %9, !dbg !10541

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.69() #24, !dbg !10542
  br label %10, !dbg !10544

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.68() #24, !dbg !10545
  %12 = icmp eq i32 %11, 1, !dbg !10546
  br i1 %12, label %13, label %10, !dbg !10544, !llvm.loop !10547

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10549
  %15 = load i32, i32* %14, align 4, !dbg !10549
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10550
  %17 = load i32, i32* %16, align 4, !dbg !10550
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10551
  %19 = load i32, i32* %18, align 4, !dbg !10551
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.70(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !10552
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !10553
  call void @llvm.dbg.value(metadata i32 %20, metadata !10529, metadata !DIExpression()), !dbg !10531
  br label %21, !dbg !10554

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10555
  call void @llvm.dbg.value(metadata i32 %22, metadata !10529, metadata !DIExpression()), !dbg !10531
  ret i32 %22, !dbg !10556
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10557 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10561, metadata !DIExpression()), !dbg !10562
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.72() #24, !dbg !10563
  %2 = icmp ne i32 %1, 0, !dbg !10565
  call void @llvm.dbg.value(metadata i1 %2, metadata !10561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10562
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #24, !dbg !10566
  %4 = icmp ne i32 %3, 0, !dbg !10568
  call void @llvm.dbg.value(metadata i1 undef, metadata !10561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10562
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !10569
  %6 = icmp ne i32 %5, 0, !dbg !10571
  %7 = select i1 %6, i1 true, i1 %4, !dbg !10572
  %8 = select i1 %7, i1 true, i1 %2, !dbg !10572
  %9 = zext i1 %8 to i32, !dbg !10572
  call void @llvm.dbg.value(metadata i32 %9, metadata !10561, metadata !DIExpression()), !dbg !10562
  ret i32 %9, !dbg !10573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !10574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10578, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10579, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata i32 0, metadata !10580, metadata !DIExpression()), !dbg !10581
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10582
  %4 = load i32, i32* %3, align 4, !dbg !10582
  %5 = and i32 %4, 63, !dbg !10583
  %6 = udiv i32 %0, %5, !dbg !10584
  call void @llvm.dbg.value(metadata i32 %6, metadata !10580, metadata !DIExpression()), !dbg !10581
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10585
  %8 = load i32, i32* %7, align 4, !dbg !10585
  %9 = and i32 %8, 511, !dbg !10586
  %10 = mul i32 %9, %6, !dbg !10587
  call void @llvm.dbg.value(metadata i32 %10, metadata !10580, metadata !DIExpression()), !dbg !10581
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10588
  %12 = load i32, i32* %11, align 4, !dbg !10588
  %13 = lshr i32 %12, 15, !dbg !10589
  %14 = and i32 %13, 131070, !dbg !10589
  %15 = add nuw nsw i32 %14, 2, !dbg !10589
  %16 = udiv i32 %10, %15, !dbg !10590
  call void @llvm.dbg.value(metadata i32 %16, metadata !10580, metadata !DIExpression()), !dbg !10581
  ret i32 %16, !dbg !10591
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.68() unnamed_addr #14 !dbg !10592 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10593
  %2 = lshr i32 %1, 1, !dbg !10594
  %3 = and i32 %2, 1, !dbg !10594
  ret i32 %3, !dbg !10595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.69() unnamed_addr #13 !dbg !10596 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10597
  %2 = or i32 %1, 1, !dbg !10597
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10597
  ret void, !dbg !10598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.70(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10601, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 %1, metadata !10602, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 %2, metadata !10603, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 %3, metadata !10604, metadata !DIExpression()), !dbg !10605
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10606
  %6 = and i32 %5, -4227072, !dbg !10606
  %7 = or i32 %1, %0, !dbg !10606
  %8 = shl i32 %2, 6, !dbg !10606
  %9 = or i32 %7, %8, !dbg !10606
  %10 = or i32 %9, %6, !dbg !10606
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10606
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10607
  %12 = and i32 %11, -196609, !dbg !10607
  %13 = or i32 %12, %3, !dbg !10607
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10607
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10608
  %15 = and i32 %14, -1879048193, !dbg !10608
  %16 = or i32 %15, %3, !dbg !10608
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10608
  ret void, !dbg !10609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10614, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10615, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.value(metadata i32 0, metadata !10616, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.value(metadata i32 0, metadata !10617, metadata !DIExpression()), !dbg !10618
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10619
  %4 = load i32, i32* %3, align 4, !dbg !10619
  %5 = lshr i32 %4, 4, !dbg !10619
  %6 = and i32 %5, 15, !dbg !10619
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10619
  %8 = load i8, i8* %7, align 1, !dbg !10619
  %9 = zext i8 %8 to i32, !dbg !10619
  %10 = lshr i32 %0, %9, !dbg !10619
  call void @llvm.dbg.value(metadata i32 %10, metadata !10617, metadata !DIExpression()), !dbg !10618
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10620
  %12 = icmp ult i32 %11, %10, !dbg !10622
  br i1 %12, label %13, label %16, !dbg !10623

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !10624
  call void @llvm.dbg.value(metadata i32 %14, metadata !10616, metadata !DIExpression()), !dbg !10618
  %15 = icmp eq i32 %14, 0, !dbg !10626
  br i1 %15, label %16, label %30, !dbg !10628

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.71() #24, !dbg !10629
  br label %17, !dbg !10631

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.72() #24, !dbg !10632
  %19 = icmp eq i32 %18, 1, !dbg !10633
  br i1 %19, label %20, label %17, !dbg !10631, !llvm.loop !10634

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10636
  tail call fastcc void @LL_RCC_SetAHBPrescaler.73(i32 noundef %21) #24, !dbg !10637
  tail call fastcc void @LL_RCC_SetSysClkSource.74() #24, !dbg !10638
  br label %22, !dbg !10639

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.75() #24, !dbg !10640
  %24 = icmp eq i32 %23, 8, !dbg !10641
  br i1 %24, label %25, label %22, !dbg !10639, !llvm.loop !10642

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10644
  %27 = load i32, i32* %26, align 4, !dbg !10644
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.76(i32 noundef %27) #24, !dbg !10645
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10646
  %29 = load i32, i32* %28, align 4, !dbg !10646
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.77(i32 noundef %29) #24, !dbg !10647
  br label %30, !dbg !10648

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10649
  %33 = icmp ugt i32 %32, %10, !dbg !10651
  br i1 %33, label %34, label %36, !dbg !10652

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !10653
  call void @llvm.dbg.value(metadata i32 %35, metadata !10616, metadata !DIExpression()), !dbg !10618
  br label %36, !dbg !10655

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10618
  call void @llvm.dbg.value(metadata i32 %37, metadata !10616, metadata !DIExpression()), !dbg !10618
  %38 = icmp eq i32 %37, 0, !dbg !10656
  br i1 %38, label %39, label %40, !dbg !10658

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !10659
  br label %40, !dbg !10661

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.71() unnamed_addr #13 !dbg !10663 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10664
  %2 = or i32 %1, 16777216, !dbg !10664
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10664
  ret void, !dbg !10665
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.72() unnamed_addr #14 !dbg !10666 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10667
  %2 = lshr i32 %1, 25, !dbg !10668
  %3 = and i32 %2, 1, !dbg !10668
  ret i32 %3, !dbg !10669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.73(i32 noundef %0) unnamed_addr #13 !dbg !10670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10672, metadata !DIExpression()), !dbg !10673
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10674
  %3 = and i32 %2, -241, !dbg !10674
  %4 = or i32 %3, %0, !dbg !10674
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10674
  ret void, !dbg !10675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.74() unnamed_addr #13 !dbg !10676 {
  call void @llvm.dbg.value(metadata i32 2, metadata !10678, metadata !DIExpression()), !dbg !10679
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10680
  %2 = and i32 %1, -4, !dbg !10680
  %3 = or i32 %2, 2, !dbg !10680
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10680
  ret void, !dbg !10681
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.75() unnamed_addr #14 !dbg !10682 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10683
  %2 = and i32 %1, 12, !dbg !10683
  ret i32 %2, !dbg !10684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.76(i32 noundef %0) unnamed_addr #13 !dbg !10685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10687, metadata !DIExpression()), !dbg !10688
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10689
  %3 = and i32 %2, -7169, !dbg !10689
  %4 = or i32 %3, %0, !dbg !10689
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10689
  ret void, !dbg !10690
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.77(i32 noundef %0) unnamed_addr #13 !dbg !10691 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10693, metadata !DIExpression()), !dbg !10694
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10695
  %3 = and i32 %2, -57345, !dbg !10695
  %4 = or i32 %3, %0, !dbg !10695
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10695
  ret void, !dbg !10696
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #14 !dbg !10697 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10698
  %2 = lshr i32 %1, 29, !dbg !10699
  %3 = and i32 %2, 1, !dbg !10699
  ret i32 %3, !dbg !10700
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10701 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10702
  %2 = lshr i32 %1, 27, !dbg !10703
  %3 = and i32 %2, 1, !dbg !10703
  ret i32 %3, !dbg !10704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10709, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i32 %1, metadata !10710, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10711, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10712, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i32 0, metadata !10713, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i32 0, metadata !10714, metadata !DIExpression()), !dbg !10715
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !10716
  %6 = icmp eq i32 %5, 0, !dbg !10718
  br i1 %6, label %7, label %27, !dbg !10719

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %8, metadata !10714, metadata !DIExpression()), !dbg !10715
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.78() #24, !dbg !10722
  %10 = icmp eq i32 %9, 1, !dbg !10724
  br i1 %10, label %19, label %11, !dbg !10725

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10726
  br i1 %12, label %13, label %14, !dbg !10729

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !10730
  br label %15, !dbg !10732

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.79() #24, !dbg !10733
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.80() #24, !dbg !10735
  br label %16, !dbg !10736

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.78() #24, !dbg !10737
  %18 = icmp eq i32 %17, 1, !dbg !10738
  br i1 %18, label %19, label %16, !dbg !10736, !llvm.loop !10739

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10741
  %21 = load i32, i32* %20, align 4, !dbg !10741
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10742
  %23 = load i32, i32* %22, align 4, !dbg !10742
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10743
  %25 = load i32, i32* %24, align 4, !dbg !10743
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.70(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !10744
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %26, metadata !10713, metadata !DIExpression()), !dbg !10715
  br label %27, !dbg !10746

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10747
  call void @llvm.dbg.value(metadata i32 %28, metadata !10713, metadata !DIExpression()), !dbg !10715
  ret i32 %28, !dbg !10748
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.78() unnamed_addr #14 !dbg !10749 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10750
  %2 = lshr i32 %1, 17, !dbg !10751
  %3 = and i32 %2, 1, !dbg !10751
  ret i32 %3, !dbg !10752
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10753 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10754
  %2 = or i32 %1, 262144, !dbg !10754
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10754
  ret void, !dbg !10755
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.79() unnamed_addr #13 !dbg !10756 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10757
  %2 = and i32 %1, -262145, !dbg !10757
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10757
  ret void, !dbg !10758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.80() unnamed_addr #13 !dbg !10759 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10760
  %2 = or i32 %1, 65536, !dbg !10760
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10760
  ret void, !dbg !10761
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10762 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10765, metadata !DIExpression()), !dbg !10781
  call void @llvm.dbg.value(metadata i32 undef, metadata !10765, metadata !DIExpression()), !dbg !10781
  call void @llvm.dbg.value(metadata i32 undef, metadata !10765, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10781
  ret void, !dbg !10782
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10783 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10787, metadata !DIExpression()), !dbg !10789
  %2 = icmp eq i8* %0, null, !dbg !10790
  br i1 %2, label %29, label %3, !dbg !10792

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10793
  %5 = icmp eq i8 %4, 0, !dbg !10794
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10795
  br i1 %6, label %29, label %8, !dbg !10795

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10788, metadata !DIExpression()), !dbg !10789
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10796

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10788, metadata !DIExpression()), !dbg !10789
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !10798
  br i1 %10, label %11, label %15, !dbg !10803

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10804
  %13 = load i8*, i8** %12, align 4, !dbg !10804
  %14 = icmp eq i8* %13, %0, !dbg !10805
  br i1 %14, label %29, label %15, !dbg !10806

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10807
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10788, metadata !DIExpression()), !dbg !10789
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10808
  br i1 %17, label %7, label %8, !dbg !10809, !llvm.loop !10810

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10788, metadata !DIExpression()), !dbg !10789
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !10812
  br i1 %20, label %21, label %26, !dbg !10816

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10817
  %23 = load i8*, i8** %22, align 4, !dbg !10817
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !10818
  %25 = icmp eq i32 %24, 0, !dbg !10819
  br i1 %25, label %29, label %26, !dbg !10820

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10821
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10788, metadata !DIExpression()), !dbg !10789
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10822
  br i1 %28, label %29, label %18, !dbg !10796, !llvm.loop !10823

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10789
  ret %struct.device* %30, !dbg !10825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !10826 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10830, metadata !DIExpression()), !dbg !10831
  %2 = icmp eq %struct.device* %0, null, !dbg !10832
  br i1 %2, label %14, label %3, !dbg !10834

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10835
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10835
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10836
  %7 = load i8, i8* %6, align 1, !dbg !10836
  %8 = and i8 %7, 1, !dbg !10836
  %9 = icmp eq i8 %8, 0, !dbg !10836
  br i1 %9, label %14, label %10, !dbg !10837

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10838
  %12 = load i8, i8* %11, align 1, !dbg !10838
  %13 = icmp eq i8 %12, 0, !dbg !10839
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10831
  ret i1 %15, !dbg !10840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !10841 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10846, metadata !DIExpression()), !dbg !10847
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10848
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10849
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10850 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10858, metadata !DIExpression()), !dbg !10863
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10859, metadata !DIExpression()), !dbg !10863
  call void @llvm.dbg.value(metadata i8* %2, metadata !10860, metadata !DIExpression()), !dbg !10863
  %5 = bitcast i32* %4 to i8*, !dbg !10864
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10864
  call void @llvm.dbg.value(metadata i32 0, metadata !10861, metadata !DIExpression()), !dbg !10863
  store i32 0, i32* %4, align 4, !dbg !10865
  call void @llvm.dbg.value(metadata i32* %4, metadata !10861, metadata !DIExpression(DW_OP_deref)), !dbg !10863
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10866
  call void @llvm.dbg.value(metadata i16* %6, metadata !10862, metadata !DIExpression()), !dbg !10863
  %7 = load i32, i32* %4, align 4, !dbg !10867
  call void @llvm.dbg.value(metadata i32 %7, metadata !10861, metadata !DIExpression()), !dbg !10863
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10868
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10869
  ret i32 %8, !dbg !10870
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !10871 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10875, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.value(metadata i32* %1, metadata !10876, metadata !DIExpression()), !dbg !10881
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10882
  %4 = load i16*, i16** %3, align 4, !dbg !10882
  call void @llvm.dbg.value(metadata i16* %4, metadata !10877, metadata !DIExpression()), !dbg !10881
  %5 = icmp eq i16* %4, null, !dbg !10883
  br i1 %5, label %14, label %6, !dbg !10884

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10885
  call void @llvm.dbg.value(metadata i32 %7, metadata !10878, metadata !DIExpression()), !dbg !10885
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10886
  %9 = load i16, i16* %8, align 2, !dbg !10886
  %10 = add i16 %9, -32767, !dbg !10887
  %11 = icmp ult i16 %10, 2, !dbg !10887
  %12 = add i32 %7, 1, !dbg !10888
  call void @llvm.dbg.value(metadata i32 %12, metadata !10878, metadata !DIExpression()), !dbg !10885
  br i1 %11, label %13, label %6, !dbg !10887, !llvm.loop !10890

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10893
  br label %14, !dbg !10894

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10896 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10900, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.value(metadata i32 %1, metadata !10901, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10902, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.value(metadata i8* %3, metadata !10903, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.value(metadata i32 0, metadata !10904, metadata !DIExpression()), !dbg !10912
  %5 = icmp eq i32 %1, 0, !dbg !10913
  br i1 %5, label %16, label %8, !dbg !10914

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10904, metadata !DIExpression()), !dbg !10912
  %7 = icmp eq i32 %15, %1, !dbg !10913
  br i1 %7, label %16, label %8, !dbg !10914, !llvm.loop !10915

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10904, metadata !DIExpression()), !dbg !10912
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10917
  %11 = load i16, i16* %10, align 2, !dbg !10917
  call void @llvm.dbg.value(metadata i16 %11, metadata !10906, metadata !DIExpression()), !dbg !10918
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !10919
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10909, metadata !DIExpression()), !dbg !10918
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !10920
  call void @llvm.dbg.value(metadata i32 %13, metadata !10910, metadata !DIExpression()), !dbg !10918
  %14 = icmp slt i32 %13, 0, !dbg !10921
  %15 = add nuw i32 %9, 1, !dbg !10923
  call void @llvm.dbg.value(metadata i32 %15, metadata !10904, metadata !DIExpression()), !dbg !10912
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #2 !dbg !10925 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10929, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10930, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10931, metadata !DIExpression()), !dbg !10932
  %2 = sext i16 %0 to i32, !dbg !10933
  %3 = icmp slt i16 %0, 1, !dbg !10935
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10936
  %6 = add nsw i32 %2, -1, !dbg !10936
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10936
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10936
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10930, metadata !DIExpression()), !dbg !10932
  ret %struct.device* %8, !dbg !10937
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10938 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10940, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10941, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.value(metadata i8* %2, metadata !10942, metadata !DIExpression()), !dbg !10945
  %5 = bitcast i32* %4 to i8*, !dbg !10946
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10946
  call void @llvm.dbg.value(metadata i32 0, metadata !10943, metadata !DIExpression()), !dbg !10945
  store i32 0, i32* %4, align 4, !dbg !10947
  call void @llvm.dbg.value(metadata i32* %4, metadata !10943, metadata !DIExpression(DW_OP_deref)), !dbg !10945
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10948
  call void @llvm.dbg.value(metadata i16* %6, metadata !10944, metadata !DIExpression()), !dbg !10945
  %7 = load i32, i32* %4, align 4, !dbg !10949
  call void @llvm.dbg.value(metadata i32 %7, metadata !10943, metadata !DIExpression()), !dbg !10945
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10950
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10951
  ret i32 %8, !dbg !10952
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !10953 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10955, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.value(metadata i32* %1, metadata !10956, metadata !DIExpression()), !dbg !10960
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10961
  %4 = load i16*, i16** %3, align 4, !dbg !10961
  call void @llvm.dbg.value(metadata i16* %4, metadata !10957, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.value(metadata i32 0, metadata !10958, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.value(metadata i32 0, metadata !10959, metadata !DIExpression()), !dbg !10960
  %5 = icmp eq i16* %4, null, !dbg !10962
  br i1 %5, label %22, label %6, !dbg !10964

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10958, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.value(metadata i16* %8, metadata !10957, metadata !DIExpression()), !dbg !10960
  %9 = load i16, i16* %8, align 2, !dbg !10965
  %10 = icmp eq i16 %9, -32768, !dbg !10969
  call void @llvm.dbg.value(metadata i32 undef, metadata !10958, metadata !DIExpression()), !dbg !10960
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10970
  call void @llvm.dbg.value(metadata i16* %11, metadata !10957, metadata !DIExpression()), !dbg !10960
  %12 = zext i1 %10 to i32, !dbg !10971
  %13 = add i32 %7, %12, !dbg !10971
  call void @llvm.dbg.value(metadata i32 %13, metadata !10958, metadata !DIExpression()), !dbg !10960
  %14 = icmp eq i32 %13, 2, !dbg !10972
  br i1 %14, label %15, label %6, !dbg !10973

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10960
  call void @llvm.dbg.value(metadata i32 %16, metadata !10959, metadata !DIExpression()), !dbg !10960
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10974
  %18 = load i16, i16* %17, align 2, !dbg !10974
  %19 = icmp eq i16 %18, 32767, !dbg !10975
  %20 = add i32 %16, 1, !dbg !10976
  call void @llvm.dbg.value(metadata i32 %20, metadata !10959, metadata !DIExpression()), !dbg !10960
  br i1 %19, label %21, label %15, !dbg !10978, !llvm.loop !10979

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10981
  br label %22, !dbg !10982

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10983
  call void @llvm.dbg.value(metadata i16* %23, metadata !10957, metadata !DIExpression()), !dbg !10960
  ret i16* %23, !dbg !10984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !10985 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10988
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10989
  ret i32* %2, !dbg !10990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #2 !dbg !10991 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11139, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11140, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11141, metadata !DIExpression()), !dbg !11142
  ret void, !dbg !11143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !11144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11148, metadata !DIExpression()), !dbg !11150
  call void @llvm.dbg.value(metadata i32 %1, metadata !11149, metadata !DIExpression()), !dbg !11150
  ret void, !dbg !11151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !11152 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11156, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.value(metadata i32 %1, metadata !11157, metadata !DIExpression()), !dbg !11158
  ret void, !dbg !11159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !11160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11164, metadata !DIExpression()), !dbg !11166
  call void @llvm.dbg.value(metadata i8* %1, metadata !11165, metadata !DIExpression()), !dbg !11166
  ret i32 -134, !dbg !11167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !11168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11172, metadata !DIExpression()), !dbg !11174
  call void @llvm.dbg.value(metadata i8* %1, metadata !11173, metadata !DIExpression()), !dbg !11174
  ret i32 -134, !dbg !11175
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #9 !dbg !11176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11179, metadata !DIExpression()), !dbg !11180
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11181, !srcloc !11187
  call void @llvm.dbg.value(metadata i32 undef, metadata !11184, metadata !DIExpression()) #23, !dbg !11188
  call void @llvm.dbg.value(metadata i32 undef, metadata !11185, metadata !DIExpression()) #23, !dbg !11188
  br label %3, !dbg !11189

3:                                                ; preds = %3, %1
  br label %3, !dbg !11190, !llvm.loop !11193
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11200, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11201, metadata !DIExpression()), !dbg !11202
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11203
  unreachable, !dbg !11203
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #9 !dbg !11204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11206, metadata !DIExpression()), !dbg !11207
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11208
  unreachable, !dbg !11208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11211, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11212, metadata !DIExpression()), !dbg !11215
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11216, !srcloc !11187
  call void @llvm.dbg.value(metadata i32 undef, metadata !11184, metadata !DIExpression()) #23, !dbg !11218
  call void @llvm.dbg.value(metadata i32 undef, metadata !11185, metadata !DIExpression()) #23, !dbg !11218
  call void @llvm.dbg.value(metadata i32 undef, metadata !11213, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11214, metadata !DIExpression()), !dbg !11215
  %4 = icmp eq %struct.__esf* %1, null, !dbg !11219
  br i1 %4, label %6, label %5, !dbg !11221

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !11222
  br label %7, !dbg !11223

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !11222
  br label %7, !dbg !11226

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !11216
  call void @llvm.dbg.value(metadata i32 %8, metadata !11184, metadata !DIExpression()) #23, !dbg !11218
  call void @llvm.dbg.value(metadata i32 %8, metadata !11213, metadata !DIExpression()), !dbg !11215
  %9 = tail call fastcc %struct.k_thread* @k_current_get.87() #26, !dbg !11228
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11214, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i32 undef, metadata !11229, metadata !DIExpression()) #23, !dbg !11232
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11234, !srcloc !11235
  tail call fastcc void @k_thread_abort.88(%struct.k_thread* noundef %9) #24, !dbg !11236
  ret void, !dbg !11239
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.87() unnamed_addr #10 !dbg !11240 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.89() #26, !dbg !11244
  ret %struct.k_thread* %1, !dbg !11245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.88(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11246 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11250, metadata !DIExpression()), !dbg !11251
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11252, !srcloc !11254
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !11255
  ret void, !dbg !11256
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.89() unnamed_addr #10 !dbg !11257 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11258, !srcloc !11260
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !11261
  ret %struct.k_thread* %1, !dbg !11262
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11263 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11267, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.value(metadata i32 %1, metadata !11268, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.value(metadata i32 %2, metadata !11269, metadata !DIExpression()), !dbg !11270
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !11271
  ret void, !dbg !11272
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11273 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11277, metadata !DIExpression()), !dbg !11280
  call void @llvm.dbg.value(metadata i8* %1, metadata !11278, metadata !DIExpression()), !dbg !11280
  call void @llvm.dbg.value(metadata i32 %2, metadata !11279, metadata !DIExpression()), !dbg !11280
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !11281
  ret void, !dbg !11282
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11283 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !11284
  ret void, !dbg !11285
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11288, metadata !DIExpression()), !dbg !11289
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !11290
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11291
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11292
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11293
  %4 = trunc i32 %0 to i8, !dbg !11294
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11295
  store i8 %4, i8* %5, align 4, !dbg !11296
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11297
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !11298
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11299
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11300
  store i8* %8, i8** %9, align 4, !dbg !11301
  ret void, !dbg !11302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11305, metadata !DIExpression()), !dbg !11311
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11312
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11306, metadata !DIExpression()), !dbg !11311
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11313
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11307, metadata !DIExpression()), !dbg !11311
  call void @llvm.dbg.value(metadata i8* null, metadata !11310, metadata !DIExpression()), !dbg !11311
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11314
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11315
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !11316
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !11317
  ret void, !dbg !11318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !11319 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11323, metadata !DIExpression()), !dbg !11324
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11325
  ret i8* %2, !dbg !11326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !11327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11332, metadata !DIExpression()), !dbg !11333
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11334
  %3 = load i8, i8* %2, align 1, !dbg !11335
  %4 = and i8 %3, -5, !dbg !11335
  store i8 %4, i8* %2, align 1, !dbg !11335
  ret void, !dbg !11336
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #9 !dbg !11337 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !11340
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !11341
  %3 = ptrtoint i8* %2 to i32, !dbg !11350
  %4 = add i32 %3, 2048, !dbg !11351
  call void @llvm.dbg.value(metadata i32 %4, metadata !11345, metadata !DIExpression()) #23, !dbg !11352
  call void @llvm.dbg.value(metadata i32 %4, metadata !11353, metadata !DIExpression()) #23, !dbg !11356
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !11358, !srcloc !11359
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11360
  %6 = or i32 %5, 512, !dbg !11360
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11360
  tail call fastcc void @__NVIC_SetPriority.96(i32 noundef -2, i32 noundef 255) #25, !dbg !11361
  tail call fastcc void @__NVIC_SetPriority.96(i32 noundef -5, i32 noundef 0) #25, !dbg !11364
  tail call fastcc void @__NVIC_SetPriority.96(i32 noundef -12, i32 noundef 0) #25, !dbg !11365
  tail call fastcc void @__NVIC_SetPriority.96(i32 noundef -11, i32 noundef 0) #25, !dbg !11366
  tail call fastcc void @__NVIC_SetPriority.96(i32 noundef -10, i32 noundef 0) #25, !dbg !11367
  tail call fastcc void @__NVIC_SetPriority.96(i32 noundef -4, i32 noundef 0) #25, !dbg !11368
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11369
  %8 = or i32 %7, 458752, !dbg !11369
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11369
  tail call void @z_arm_fault_init() #25, !dbg !11370
  tail call void @z_arm_cpu_idle_init() #25, !dbg !11371
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11372
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11375
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !11376
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !11377
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !11378
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !11378
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11339, metadata !DIExpression()), !dbg !11379
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !11380
  call void @z_device_state_init() #25, !dbg !11381
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !11382
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !11383
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !11384
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !11385
  unreachable, !dbg !11385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1953, metadata !DIExpression()), !dbg !11386
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11387
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11387
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1954, metadata !DIExpression()), !dbg !11386
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1954, metadata !DIExpression()), !dbg !11386
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11388
  br i1 %7, label %8, label %35, !dbg !11389

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1954, metadata !DIExpression()), !dbg !11386
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11390
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11390
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1964, metadata !DIExpression()), !dbg !11391
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11392
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11392
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !11393
  call void @llvm.dbg.value(metadata i32 %14, metadata !1968, metadata !DIExpression()), !dbg !11391
  %15 = icmp eq %struct.device* %11, null, !dbg !11394
  br i1 %15, label %32, label %16, !dbg !11396

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11397
  br i1 %17, label %26, label %18, !dbg !11400

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11401
  call void @llvm.dbg.value(metadata i32 %19, metadata !1968, metadata !DIExpression()), !dbg !11391
  %20 = icmp ult i32 %19, 255, !dbg !11403
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11403
  call void @llvm.dbg.value(metadata i32 %21, metadata !1968, metadata !DIExpression()), !dbg !11391
  %22 = trunc i32 %21 to i8, !dbg !11404
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11405
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11405
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11406
  store i8 %22, i8* %25, align 1, !dbg !11407
  br label %26, !dbg !11408

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11409
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11409
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11410
  %30 = load i8, i8* %29, align 1, !dbg !11411
  %31 = or i8 %30, 1, !dbg !11411
  store i8 %31, i8* %29, align 1, !dbg !11411
  br label %32, !dbg !11412

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11413
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1954, metadata !DIExpression()), !dbg !11386
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11388
  br i1 %34, label %8, label %35, !dbg !11389, !llvm.loop !11414

35:                                               ; preds = %32, %1
  ret void, !dbg !11416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.96(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !11417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11419, metadata !DIExpression()), !dbg !11421
  call void @llvm.dbg.value(metadata i32 %1, metadata !11420, metadata !DIExpression()), !dbg !11421
  %3 = trunc i32 %1 to i8, !dbg !11422
  %4 = shl i8 %3, 4, !dbg !11422
  %5 = and i32 %0, 15, !dbg !11425
  %6 = add nsw i32 %5, -4, !dbg !11426
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11427
  store volatile i8 %4, i8* %7, align 1, !dbg !11428
  ret void, !dbg !11429
}

; Function Attrs: optsize
declare !dbg !11430 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !11431 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11434, metadata !DIExpression()), !dbg !11435
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11436
  store i8 1, i8* %2, align 1, !dbg !11437
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11438
  store i8 1, i8* %3, align 4, !dbg !11439
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11440
  store i32 0, i32* %4, align 4, !dbg !11441
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11442
  store i32 0, i32* %5, align 4, !dbg !11443
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11444
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !11445
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11446
  ret void, !dbg !11447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11448 {
  tail call void @z_sched_init() #25, !dbg !11453
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11454
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i32 0, i32 0)) #25, !dbg !11455
  call void @llvm.dbg.value(metadata i8* %1, metadata !11452, metadata !DIExpression()), !dbg !11456
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11457
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !11458
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !11459
  ret i8* %1, !dbg !11460
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #9 !dbg !11461 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11465, metadata !DIExpression()), !dbg !11466
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !11467
  unreachable, !dbg !11468
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11469 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11471, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata i8* %1, metadata !11472, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata i8* %2, metadata !11473, metadata !DIExpression()), !dbg !11474
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11475
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !11476
  tail call void @boot_banner() #25, !dbg !11477
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !11478
  tail call void @z_init_static_threads() #25, !dbg !11479
  tail call void @main() #25, !dbg !11480
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11481
  %5 = and i8 %4, -2, !dbg !11481
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11481
  ret void, !dbg !11482
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !11483 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11493, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i8* %1, metadata !11494, metadata !DIExpression()), !dbg !11495
  ret void, !dbg !11496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !11497 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11499, metadata !DIExpression()), !dbg !11501
  call void @llvm.dbg.value(metadata i8* %1, metadata !11500, metadata !DIExpression()), !dbg !11501
  ret void, !dbg !11502
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11503 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11504, !srcloc !11511
  call void @llvm.dbg.value(metadata i32 %1, metadata !11507, metadata !DIExpression()) #23, !dbg !11512
  %2 = icmp ne i32 %1, 0, !dbg !11513
  ret i1 %2, !dbg !11514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !11515 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11516
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11517
  %3 = load i8, i8* %2, align 4, !dbg !11518
  %4 = or i8 %3, 1, !dbg !11518
  store i8 %4, i8* %2, align 4, !dbg !11518
  ret void, !dbg !11519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !11520 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11521
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11522
  %3 = load i8, i8* %2, align 4, !dbg !11523
  %4 = and i8 %3, -2, !dbg !11523
  store i8 %4, i8* %2, align 4, !dbg !11523
  ret void, !dbg !11524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !11525 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11526
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11527
  %3 = load i8, i8* %2, align 4, !dbg !11527
  %4 = and i8 %3, 1, !dbg !11528
  %5 = icmp ne i8 %4, 0, !dbg !11529
  ret i1 %5, !dbg !11530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !11531 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11535, metadata !DIExpression()), !dbg !11537
  call void @llvm.dbg.value(metadata i8* %1, metadata !11536, metadata !DIExpression()), !dbg !11537
  ret i32 -88, !dbg !11538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #2 !dbg !11539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11543, metadata !DIExpression()), !dbg !11544
  ret i8* null, !dbg !11545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #2 !dbg !11546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11550, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata i8* %1, metadata !11551, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata i32 %2, metadata !11552, metadata !DIExpression()), !dbg !11553
  ret i32 -88, !dbg !11554
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2091, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i8* %1, metadata !2092, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i32 %2, metadata !2093, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i32 0, metadata !2094, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i8 undef, metadata !2096, metadata !DIExpression()), !dbg !11555
  %4 = icmp eq i8* %1, null, !dbg !11556
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11558
  br i1 %6, label %46, label %7, !dbg !11558

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11559
  %9 = load i8, i8* %8, align 1, !dbg !11559
  call void @llvm.dbg.value(metadata i8 %9, metadata !2096, metadata !DIExpression()), !dbg !11555
  %10 = add i32 %2, -1, !dbg !11560
  call void @llvm.dbg.value(metadata i32 %10, metadata !2093, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i8 0, metadata !2097, metadata !DIExpression()), !dbg !11561
  call void @llvm.dbg.value(metadata i8 %9, metadata !2096, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i32 0, metadata !2094, metadata !DIExpression()), !dbg !11555
  %11 = icmp eq i8 %9, 0, !dbg !11562
  br i1 %11, label %12, label %15, !dbg !11564

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11565
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11566
  store i8 0, i8* %14, align 1, !dbg !11567
  br label %46, !dbg !11568

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2097, metadata !DIExpression()), !dbg !11561
  call void @llvm.dbg.value(metadata i8 %17, metadata !2096, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i32 %18, metadata !2094, metadata !DIExpression()), !dbg !11555
  %19 = zext i8 %17 to i32, !dbg !11569
  %20 = zext i8 %16 to i32, !dbg !11570
  %21 = shl nuw i32 1, %20, !dbg !11570
  call void @llvm.dbg.value(metadata i32 %21, metadata !2095, metadata !DIExpression()), !dbg !11555
  %22 = and i32 %21, %19, !dbg !11572
  %23 = icmp eq i32 %22, 0, !dbg !11574
  br i1 %23, label %42, label %24, !dbg !11575

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11576
  %26 = sub i32 %10, %18, !dbg !11577
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11578
  %28 = load i8*, i8** %27, align 4, !dbg !11578
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11579
  %30 = load i32, i32* %29, align 4, !dbg !11579
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !11580
  %32 = add i32 %31, %18, !dbg !11581
  call void @llvm.dbg.value(metadata i32 %32, metadata !2094, metadata !DIExpression()), !dbg !11555
  %33 = trunc i32 %21 to i8, !dbg !11582
  %34 = xor i8 %33, -1, !dbg !11582
  %35 = and i8 %17, %34, !dbg !11582
  call void @llvm.dbg.value(metadata i8 %35, metadata !2096, metadata !DIExpression()), !dbg !11555
  %36 = icmp eq i8 %35, 0, !dbg !11583
  br i1 %36, label %12, label %37, !dbg !11585

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11586
  %39 = sub i32 %10, %32, !dbg !11588
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #24, !dbg !11589
  %41 = add i32 %40, %32, !dbg !11590
  call void @llvm.dbg.value(metadata i32 %41, metadata !2094, metadata !DIExpression()), !dbg !11555
  br label %42, !dbg !11591

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11555
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11555
  call void @llvm.dbg.value(metadata i8 %44, metadata !2096, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i32 %43, metadata !2094, metadata !DIExpression()), !dbg !11555
  %45 = add i8 %16, 1, !dbg !11592
  call void @llvm.dbg.value(metadata i8 %45, metadata !2097, metadata !DIExpression()), !dbg !11561
  br label %15, !dbg !11564

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.98, i32 0, i32 0), %3 ], !dbg !11555
  ret i8* %47, !dbg !11593
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11594 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11598, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i32 %1, metadata !11599, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i8* %2, metadata !11600, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i32 %3, metadata !11601, metadata !DIExpression()), !dbg !11603
  %5 = icmp ult i32 %1, %3, !dbg !11604
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11604
  call void @llvm.dbg.value(metadata i32 %6, metadata !11602, metadata !DIExpression()), !dbg !11603
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !11605
  ret i32 %6, !dbg !11606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11607 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11611, metadata !DIExpression()), !dbg !11612
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !11613
  ret void, !dbg !11614
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11615 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11624, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11625, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i32 %2, metadata !11626, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11627, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i8* %4, metadata !11628, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i8* %5, metadata !11629, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i8* %6, metadata !11630, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i32 %7, metadata !11631, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i32 %8, metadata !11632, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i8* undef, metadata !11633, metadata !DIExpression()), !dbg !11635
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11636
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #24, !dbg !11637
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11638
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !11639
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !11640
  call void @llvm.dbg.value(metadata i8* %13, metadata !11634, metadata !DIExpression()), !dbg !11635
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !11641
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11642
  store i8* null, i8** %14, align 4, !dbg !11643
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11644
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11644
  br i1 %16, label %20, label %17, !dbg !11646

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11647
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11647
  br label %20, !dbg !11648

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11635
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11649
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11651
  ret i8* %13, !dbg !11652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !11653 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11658, metadata !DIExpression()), !dbg !11659
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11660
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !11661
  ret void, !dbg !11662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !11663 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11668, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.value(metadata i32 %1, metadata !11669, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.value(metadata i32 %2, metadata !11670, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.value(metadata i32 %3, metadata !11671, metadata !DIExpression()), !dbg !11672
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11673
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11674
  %6 = trunc i32 %3 to i8, !dbg !11675
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11676
  store i8 %6, i8* %7, align 4, !dbg !11677
  %8 = trunc i32 %2 to i8, !dbg !11678
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11679
  store i8 %8, i8* %9, align 1, !dbg !11680
  %10 = trunc i32 %1 to i8, !dbg !11681
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11682
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11682
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11682
  store i8 %10, i8* %13, align 2, !dbg !11683
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11684
  store i8 0, i8* %14, align 1, !dbg !11685
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !11686
  ret void, !dbg !11687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !11688 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11692, metadata !DIExpression()), !dbg !11700
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11693, metadata !DIExpression()), !dbg !11700
  call void @llvm.dbg.value(metadata i32 %2, metadata !11694, metadata !DIExpression()), !dbg !11700
  call void @llvm.dbg.value(metadata i32 0, metadata !11699, metadata !DIExpression()), !dbg !11700
  %4 = add i32 %2, 7, !dbg !11701
  %5 = and i32 %4, -8, !dbg !11701
  %6 = add i32 %5, 64, !dbg !11701
  call void @llvm.dbg.value(metadata i32 %6, metadata !11695, metadata !DIExpression()), !dbg !11700
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.108(%struct.z_thread_stack_element* noundef %1) #24, !dbg !11703
  call void @llvm.dbg.value(metadata i8* %7, metadata !11698, metadata !DIExpression()), !dbg !11700
  call void @llvm.dbg.value(metadata i32 %5, metadata !11696, metadata !DIExpression()), !dbg !11700
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11704
  call void @llvm.dbg.value(metadata i8* %8, metadata !11697, metadata !DIExpression()), !dbg !11700
  call void @llvm.dbg.value(metadata i32 0, metadata !11699, metadata !DIExpression()), !dbg !11700
  %9 = ptrtoint i8* %7 to i32, !dbg !11705
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11706
  store i32 %9, i32* %10, align 4, !dbg !11707
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11708
  store i32 %5, i32* %11, align 4, !dbg !11709
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11710
  store i32 0, i32* %12, align 4, !dbg !11711
  call void @llvm.dbg.value(metadata i8* %8, metadata !11697, metadata !DIExpression()), !dbg !11700
  ret i8* %8, !dbg !11712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.108(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !11713 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11717, metadata !DIExpression()), !dbg !11718
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11719
  ret i8* %2, !dbg !11720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11721 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11726, metadata !DIExpression()), !dbg !11727
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11728
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !11729
  ret void, !dbg !11730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11731 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11733, metadata !DIExpression()), !dbg !11734
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11735
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !11736
  ret void, !dbg !11737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11738 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11742, metadata !DIExpression()), !dbg !11743
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11744
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11745
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11746
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11747
  ret void, !dbg !11748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !11749 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11754, metadata !DIExpression()), !dbg !11755
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11756
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11757
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11758
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11759
  ret void, !dbg !11760
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11761 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11778, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11769, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11770, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i32 %2, metadata !11771, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11772, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i8* %4, metadata !11773, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i8* %5, metadata !11774, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i8* %6, metadata !11775, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i32 %7, metadata !11776, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i32 %8, metadata !11777, metadata !DIExpression()), !dbg !11779
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !11780
  %13 = icmp eq i64 %11, -1, !dbg !11781
  br i1 %13, label %15, label %14, !dbg !11783

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !11784
  br label %15, !dbg !11786

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11788 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11793, metadata !DIExpression()), !dbg !11794
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11792, metadata !DIExpression()), !dbg !11794
  %4 = icmp eq i64 %3, 0, !dbg !11795
  br i1 %4, label %5, label %6, !dbg !11797

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !11798
  br label %7, !dbg !11800

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !11801
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11804 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11808, metadata !DIExpression()), !dbg !11809
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11810, !srcloc !11812
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !11813
  ret void, !dbg !11814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11815 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11818, metadata !DIExpression()), !dbg !11819
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11817, metadata !DIExpression()), !dbg !11819
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11820
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !11821
  ret void, !dbg !11822
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11823 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11825, metadata !DIExpression()), !dbg !11845
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11846

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !11847
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11843, metadata !DIExpression()), !dbg !11848
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11849

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11825, metadata !DIExpression()), !dbg !11845
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11850
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11850
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11853
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !11853
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11854
  %9 = load i32, i32* %8, align 4, !dbg !11854
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11855
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11855
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11856
  %13 = load i8*, i8** %12, align 4, !dbg !11856
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11857
  %15 = load i8*, i8** %14, align 4, !dbg !11857
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11858
  %17 = load i8*, i8** %16, align 4, !dbg !11858
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11859
  %19 = load i32, i32* %18, align 4, !dbg !11859
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11860
  %21 = load i32, i32* %20, align 4, !dbg !11860
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !11861
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11862
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !11863
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !11864
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !11864
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11865
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11825, metadata !DIExpression()), !dbg !11845
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11866
  br i1 %27, label %2, label %1, !dbg !11846, !llvm.loop !11868

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !11847
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11843, metadata !DIExpression()), !dbg !11848
  br label %29, !dbg !11849

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !11870
  ret void, !dbg !11871

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11843, metadata !DIExpression()), !dbg !11848
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !11872
  %33 = load i32, i32* %32, align 4, !dbg !11872
  %34 = icmp eq i32 %33, -1, !dbg !11876
  br i1 %34, label %43, label %35, !dbg !11877

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !11878
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !11878
  %38 = icmp sgt i32 %33, 0, !dbg !11880
  %39 = select i1 %38, i32 %33, i32 0, !dbg !11880
  %40 = zext i32 %39 to i64, !dbg !11880
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #24, !dbg !11880
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !11881
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !11881
  br label %43, !dbg !11882

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !11883
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11843, metadata !DIExpression()), !dbg !11848
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11884
  br i1 %45, label %30, label %29, !dbg !11849, !llvm.loop !11886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !11888 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11893, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.value(metadata i64 %0, metadata !11895, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i32 1000, metadata !11900, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i32 10000, metadata !11901, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i8 1, metadata !11902, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i8 0, metadata !11903, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i8 1, metadata !11904, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i8 0, metadata !11905, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i8 1, metadata !11906, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i8 0, metadata !11907, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i64 0, metadata !11908, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i64 0, metadata !11908, metadata !DIExpression()), !dbg !11912
  %2 = mul i64 %0, 10, !dbg !11914
  ret i64 %2, !dbg !11920
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #9 !dbg !11921 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11923, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i8* %1, metadata !11924, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i8* %2, metadata !11925, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i8* %3, metadata !11926, metadata !DIExpression()), !dbg !11927
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11928
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11929
  %7 = load i8, i8* %6, align 4, !dbg !11930
  %8 = or i8 %7, 4, !dbg !11930
  store i8 %8, i8* %6, align 4, !dbg !11930
  tail call void @z_thread_essential_clear() #24, !dbg !11931
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !11932
  unreachable, !dbg !11932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #2 !dbg !11933 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11937, metadata !DIExpression()), !dbg !11938
  ret i32 -134, !dbg !11939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #2 !dbg !11940 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11944, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.value(metadata i32 %1, metadata !11945, metadata !DIExpression()), !dbg !11946
  ret i32 -134, !dbg !11947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #2 !dbg !11948 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11955, metadata !DIExpression()), !dbg !11957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !11956, metadata !DIExpression()), !dbg !11957
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11958
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !11960
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11957
  ret i32 %6, !dbg !11961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #2 !dbg !11962 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11966, metadata !DIExpression()), !dbg !11967
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !11968
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11967
  ret i32 %3, !dbg !11970
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11971 {
  tail call void @sys_clock_idle_exit() #25, !dbg !11973
  ret void, !dbg !11974
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #9 !dbg !11975 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11977, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i8* %1, metadata !11978, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i8* %2, metadata !11979, metadata !DIExpression()), !dbg !11980
  br label %4, !dbg !11981

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11982, !srcloc !11989
  call void @llvm.dbg.value(metadata i32 undef, metadata !11985, metadata !DIExpression()) #23, !dbg !11990
  call void @llvm.dbg.value(metadata i32 undef, metadata !11986, metadata !DIExpression()) #23, !dbg !11990
  tail call fastcc void @k_cpu_idle() #24, !dbg !11991
  br label %4, !dbg !11981, !llvm.loop !11992
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11994 {
  tail call void @arch_cpu_idle() #25, !dbg !11995
  ret void, !dbg !11996
}

; Function Attrs: optsize
declare !dbg !11997 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !11998 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12002, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12003, metadata !DIExpression()), !dbg !12006
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12007
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12007
  %5 = load i8, i8* %4, align 2, !dbg !12007
  call void @llvm.dbg.value(metadata i8 %5, metadata !12004, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12006
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12008
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12008
  %8 = load i8, i8* %7, align 2, !dbg !12008
  call void @llvm.dbg.value(metadata i8 %8, metadata !12005, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12006
  %9 = icmp eq i8 %8, %5, !dbg !12009
  %10 = sext i8 %5 to i32, !dbg !12011
  %11 = sext i8 %8 to i32, !dbg !12011
  %12 = sub nsw i32 %11, %10, !dbg !12011
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12011
  ret i32 %13, !dbg !12012
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12013 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12017, metadata !DIExpression()), !dbg !12018
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !12019
  %3 = icmp eq i32 %2, 0, !dbg !12021
  br i1 %3, label %8, label %4, !dbg !12022

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !12023
  %6 = add i32 %5, %2, !dbg !12025
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12026
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !12027
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !12028
  br label %8, !dbg !12029

8:                                                ; preds = %4, %1
  ret void, !dbg !12030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !12031 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12035, metadata !DIExpression()), !dbg !12037
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12038
  call void @llvm.dbg.value(metadata i32 %1, metadata !12036, metadata !DIExpression()), !dbg !12037
  ret i32 %1, !dbg !12039
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12044, metadata !DIExpression()), !dbg !12053
  call void @llvm.dbg.value(metadata i32 %1, metadata !12045, metadata !DIExpression()), !dbg !12053
  call void @llvm.dbg.value(metadata i32 0, metadata !12046, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !12062
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12064, !srcloc !12070
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12064
  call void @llvm.dbg.value(metadata i32 %4, metadata !12067, metadata !DIExpression()) #23, !dbg !12071
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !12071
  call void @llvm.dbg.value(metadata i32 %4, metadata !12061, metadata !DIExpression()) #23, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %4, metadata !12052, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 undef, metadata !12046, metadata !DIExpression()), !dbg !12054
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12072
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !12075
  %6 = icmp sgt i32 %0, 0, !dbg !12076
  %7 = icmp sgt i32 %5, 2, !dbg !12078
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12078
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12078
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12079
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12080
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12081
  call void @llvm.dbg.value(metadata i32 %4, metadata !12082, metadata !DIExpression()) #23, !dbg !12088
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !12088
  call void @llvm.dbg.value(metadata i32 %4, metadata !12090, metadata !DIExpression()) #23, !dbg !12093
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12095, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !12046, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 undef, metadata !12046, metadata !DIExpression()), !dbg !12054
  ret void, !dbg !12097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !12098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12100, metadata !DIExpression()), !dbg !12101
  call void @llvm.dbg.value(metadata i32 %0, metadata !12102, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12117
  call void @llvm.dbg.value(metadata i32 1000, metadata !12105, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i32 10000, metadata !12106, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i8 1, metadata !12107, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i1 true, metadata !12108, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12117
  call void @llvm.dbg.value(metadata i1 true, metadata !12109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12117
  call void @llvm.dbg.value(metadata i8 0, metadata !12110, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i1 true, metadata !12111, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12117
  call void @llvm.dbg.value(metadata i1 false, metadata !12112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12117
  call void @llvm.dbg.value(metadata i64 0, metadata !12113, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i64 0, metadata !12113, metadata !DIExpression()), !dbg !12117
  %2 = mul i32 %0, 10, !dbg !12119
  ret i32 %2, !dbg !12125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12128, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !12131
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12133, !srcloc !12070
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12133
  call void @llvm.dbg.value(metadata i32 %3, metadata !12067, metadata !DIExpression()) #23, !dbg !12135
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !12135
  call void @llvm.dbg.value(metadata i32 %3, metadata !12061, metadata !DIExpression()) #23, !dbg !12131
  call void @llvm.dbg.value(metadata i32 %3, metadata !12129, metadata !DIExpression()), !dbg !12130
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12136
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12138
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !12139
  br i1 %6, label %7, label %8, !dbg !12140

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12141
  call void @llvm.dbg.value(metadata i32 %3, metadata !12082, metadata !DIExpression()) #23, !dbg !12143
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !12143
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()) #23, !dbg !12145
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12147, !srcloc !12096
  br label %24, !dbg !12148

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12149
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !12150
  %10 = icmp eq i32 %9, 0, !dbg !12150
  br i1 %10, label %21, label %11, !dbg !12152

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !12153
  br i1 %12, label %13, label %21, !dbg !12154

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12155
  %15 = icmp sgt i32 %14, %0, !dbg !12158
  br i1 %15, label %19, label %16, !dbg !12159

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12160
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !12160
  call void @llvm.dbg.value(metadata i32 %18, metadata !12129, metadata !DIExpression()), !dbg !12130
  br label %22, !dbg !12162

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !12163
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12163
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12165
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !12130
  call void @llvm.dbg.value(metadata i32 %23, metadata !12129, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata i32 %23, metadata !12082, metadata !DIExpression()) #23, !dbg !12167
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !12167
  call void @llvm.dbg.value(metadata i32 %23, metadata !12090, metadata !DIExpression()) #23, !dbg !12169
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !12171, !srcloc !12096
  br label %24, !dbg !12172

24:                                               ; preds = %22, %7
  ret void, !dbg !12172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !12173 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12177, metadata !DIExpression()), !dbg !12179
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !12180
  %3 = icmp eq i32 %2, 0, !dbg !12180
  br i1 %3, label %16, label %4, !dbg !12181

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12182
  br i1 %5, label %16, label %6, !dbg !12183

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12184
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12184
  %9 = load i8, i8* %8, align 2, !dbg !12184
  %10 = sext i8 %9 to i32, !dbg !12185
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12186
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !12187
  br i1 %12, label %16, label %13, !dbg !12188

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !12189
  %15 = xor i1 %14, true, !dbg !12190
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12179
  call void @llvm.dbg.value(metadata i1 %17, metadata !12178, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12179
  ret i1 %17, !dbg !12191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12192 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12196, metadata !DIExpression()), !dbg !12198
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12199
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12197, metadata !DIExpression()), !dbg !12198
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !12200
  br i1 %3, label %5, label %4, !dbg !12202

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !12203
  br label %5, !dbg !12205

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12196, metadata !DIExpression()), !dbg !12198
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12206
  ret i32 %6, !dbg !12207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12210, metadata !DIExpression()), !dbg !12212
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12213
  %3 = load i8, i8* %2, align 1, !dbg !12213
  call void @llvm.dbg.value(metadata i8 %3, metadata !12211, metadata !DIExpression()), !dbg !12212
  %4 = and i8 %3, 31, !dbg !12214
  %5 = icmp ne i8 %4, 0, !dbg !12215
  ret i1 %5, !dbg !12216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12217 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12219, metadata !DIExpression()), !dbg !12220
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12221
  br i1 %2, label %3, label %7, !dbg !12223

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12224, metadata !DIExpression()) #23, !dbg !12227
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12230
  %5 = load i8, i8* %4, align 1, !dbg !12231
  %6 = and i8 %5, 127, !dbg !12231
  store i8 %6, i8* %4, align 1, !dbg !12231
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12232, metadata !DIExpression()) #23, !dbg !12235
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12239
  br label %7, !dbg !12240

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12241, metadata !DIExpression()) #23, !dbg !12244
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12246
  %9 = load i8, i8* %8, align 1, !dbg !12247
  %10 = or i8 %9, -128, !dbg !12247
  store i8 %10, i8* %8, align 1, !dbg !12247
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12248, metadata !DIExpression()) #23, !dbg !12251
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12255, metadata !DIExpression()) #23, !dbg !12263
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12261, metadata !DIExpression()) #23, !dbg !12263
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12265
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !12262, metadata !DIExpression()) #23, !dbg !12263
  %12 = icmp eq %struct._dnode* %11, null, !dbg !12267
  br i1 %12, label %23, label %13, !dbg !12265

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12262, metadata !DIExpression()) #23, !dbg !12263
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !12269
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12262, metadata !DIExpression()) #23, !dbg !12263
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !12270
  %17 = icmp sgt i32 %16, 0, !dbg !12273
  br i1 %17, label %18, label %20, !dbg !12274

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12275
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !12277
  br label %25, !dbg !12278

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !12267
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12262, metadata !DIExpression()) #23, !dbg !12263
  %22 = icmp eq %struct._dnode* %21, null, !dbg !12267
  br i1 %22, label %23, label %13, !dbg !12265, !llvm.loop !12279

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12281
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !12282
  br label %25, !dbg !12283

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12284
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !12285
  %28 = zext i1 %27 to i32, !dbg !12285
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !12286
  ret void, !dbg !12287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12288 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12290, metadata !DIExpression()), !dbg !12291
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !12292
  ret i1 %2, !dbg !12293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !12294 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12296, metadata !DIExpression()), !dbg !12298
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12297, metadata !DIExpression()), !dbg !12298
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12299
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !12300
  ret void, !dbg !12301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !12302 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12306, metadata !DIExpression()), !dbg !12307
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !12308
  br i1 %2, label %6, label %3, !dbg !12308

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12309
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12309
  br label %6, !dbg !12308

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12308
  ret %struct._dnode* %7, !dbg !12310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !12311 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12315, metadata !DIExpression()), !dbg !12319
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12316, metadata !DIExpression()), !dbg !12319
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12320
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12320
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12317, metadata !DIExpression()), !dbg !12319
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12321
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12322
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12323
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12324
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12325
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12326
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12327
  ret void, !dbg !12328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !12329 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12333, metadata !DIExpression()), !dbg !12335
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12334, metadata !DIExpression()), !dbg !12335
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12336
  br i1 %3, label %6, label %4, !dbg !12337

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !12338
  br label %6, !dbg !12337

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12337
  ret %struct._dnode* %7, !dbg !12339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !12340 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12344, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12345, metadata !DIExpression()), !dbg !12347
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12348
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12348
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12346, metadata !DIExpression()), !dbg !12347
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12349
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12350
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12351
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12352
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12353
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12354
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12355
  ret void, !dbg !12356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12359, metadata !DIExpression()), !dbg !12361
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12362
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12369, metadata !DIExpression()) #23, !dbg !12371
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12372
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12373
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12373
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12360, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12374, metadata !DIExpression()) #23, !dbg !12380
  call void @llvm.dbg.value(metadata i32 %0, metadata !12379, metadata !DIExpression()) #23, !dbg !12380
  %6 = icmp eq i32 %0, 0, !dbg !12383
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12385
  br i1 %6, label %8, label %15, !dbg !12386

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !12387
  br i1 %9, label %15, label %10, !dbg !12389

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !12390
  br i1 %11, label %15, label %12, !dbg !12392

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !12393
  %14 = icmp eq i32 %13, 0, !dbg !12393
  br i1 %14, label %18, label %15, !dbg !12395

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !12396
  br i1 %16, label %18, label %17, !dbg !12399

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12400
  br label %18, !dbg !12402

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !12385
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12385
  ret void, !dbg !12403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !12404 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12408, metadata !DIExpression()), !dbg !12411
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12409, metadata !DIExpression()), !dbg !12411
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !12412
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12410, metadata !DIExpression()), !dbg !12411
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12409, metadata !DIExpression()), !dbg !12411
  ret %struct.k_thread* %3, !dbg !12413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12414 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12416, metadata !DIExpression()), !dbg !12417
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12418
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12419
  %4 = xor i1 %3, true, !dbg !12420
  ret i1 %4, !dbg !12421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12422 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12424, metadata !DIExpression()), !dbg !12425
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12426
  %3 = load i16, i16* %2, align 2, !dbg !12426
  %4 = icmp ult i16 %3, 128, !dbg !12427
  %5 = zext i1 %4 to i32, !dbg !12427
  ret i32 %5, !dbg !12428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12429 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12435, metadata !DIExpression()), !dbg !12436
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12437
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !12438
  %4 = xor i1 %3, true, !dbg !12439
  ret i1 %4, !dbg !12440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12441 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12447, metadata !DIExpression()), !dbg !12448
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12449
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12449
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12450
  ret i1 %4, !dbg !12451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !12452 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12454, metadata !DIExpression()), !dbg !12456
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12455, metadata !DIExpression()), !dbg !12456
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12457
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12457
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12458
  br i1 %5, label %9, label %6, !dbg !12459

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12460
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12460
  br label %9, !dbg !12459

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12459
  ret %struct._dnode* %10, !dbg !12461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !12462 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12466, metadata !DIExpression()), !dbg !12467
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12468
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12468
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12469
  ret i1 %4, !dbg !12470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !12471 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12475, metadata !DIExpression()), !dbg !12478
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12479
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12479
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12476, metadata !DIExpression()), !dbg !12478
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12480
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12480
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12477, metadata !DIExpression()), !dbg !12478
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12481
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12482
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12483
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12484
  tail call fastcc void @sys_dnode_init.113(%struct._dnode* noundef %0) #24, !dbg !12485
  ret void, !dbg !12486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.113(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12487 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12489, metadata !DIExpression()), !dbg !12490
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12491
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12492
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12493
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12494
  ret void, !dbg !12495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12500, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.value(metadata i32 128, metadata !12501, metadata !DIExpression()), !dbg !12502
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12503
  %3 = load i8, i8* %2, align 1, !dbg !12503
  %4 = icmp slt i8 %3, 0, !dbg !12504
  ret i1 %4, !dbg !12505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !12506 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12510, metadata !DIExpression()), !dbg !12512
  call void @llvm.dbg.value(metadata i32 %1, metadata !12511, metadata !DIExpression()), !dbg !12512
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !12513
  ret i1 %3, !dbg !12514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #2 !dbg !12515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12517, metadata !DIExpression()), !dbg !12518
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12519
  ret i1 %2, !dbg !12520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !12521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12523, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.value(metadata i32 %1, metadata !12524, metadata !DIExpression()), !dbg !12525
  %3 = icmp slt i32 %0, %1, !dbg !12526
  ret i1 %3, !dbg !12527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12528 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12530, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 0, metadata !12531, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !12536
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12538, !srcloc !12070
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12538
  call void @llvm.dbg.value(metadata i32 %3, metadata !12067, metadata !DIExpression()) #23, !dbg !12540
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !12540
  call void @llvm.dbg.value(metadata i32 %3, metadata !12061, metadata !DIExpression()) #23, !dbg !12536
  call void @llvm.dbg.value(metadata i32 %3, metadata !12533, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.value(metadata i32 undef, metadata !12531, metadata !DIExpression()), !dbg !12535
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12541
  call void @llvm.dbg.value(metadata i32 %3, metadata !12082, metadata !DIExpression()) #23, !dbg !12546
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !12546
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()) #23, !dbg !12548
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12550, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !12531, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.value(metadata i32 undef, metadata !12531, metadata !DIExpression()), !dbg !12535
  ret void, !dbg !12551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12552 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12554, metadata !DIExpression()), !dbg !12555
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12556
  br i1 %2, label %24, label %3, !dbg !12558

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !12559
  br i1 %4, label %5, label %24, !dbg !12560

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12241, metadata !DIExpression()) #23, !dbg !12561
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12564
  %7 = load i8, i8* %6, align 1, !dbg !12565
  %8 = or i8 %7, -128, !dbg !12565
  store i8 %8, i8* %6, align 1, !dbg !12565
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12248, metadata !DIExpression()) #23, !dbg !12566
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12255, metadata !DIExpression()) #23, !dbg !12568
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12261, metadata !DIExpression()) #23, !dbg !12568
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12570
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !12262, metadata !DIExpression()) #23, !dbg !12568
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12571
  br i1 %10, label %21, label %11, !dbg !12570

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12262, metadata !DIExpression()) #23, !dbg !12568
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12572
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12262, metadata !DIExpression()) #23, !dbg !12568
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !12573
  %15 = icmp sgt i32 %14, 0, !dbg !12574
  br i1 %15, label %16, label %18, !dbg !12575

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12576
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !12577
  br label %23, !dbg !12578

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !12571
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !12262, metadata !DIExpression()) #23, !dbg !12568
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12571
  br i1 %20, label %21, label %11, !dbg !12570, !llvm.loop !12579

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12581
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !12582
  br label %23, !dbg !12583

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !12584
  br label %24, !dbg !12585

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12589, metadata !DIExpression()), !dbg !12590
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12591
  br i1 %2, label %6, label %3, !dbg !12592

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !12593
  %5 = xor i1 %4, true, !dbg !12592
  br label %6, !dbg !12592

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12594
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12595 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12597, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.value(metadata i32 0, metadata !12598, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !12603
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12605, !srcloc !12070
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12605
  call void @llvm.dbg.value(metadata i32 %3, metadata !12067, metadata !DIExpression()) #23, !dbg !12607
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !12607
  call void @llvm.dbg.value(metadata i32 %3, metadata !12061, metadata !DIExpression()) #23, !dbg !12603
  call void @llvm.dbg.value(metadata i32 %3, metadata !12600, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.value(metadata i32 undef, metadata !12598, metadata !DIExpression()), !dbg !12602
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !12608
  call void @llvm.dbg.value(metadata i32 %3, metadata !12082, metadata !DIExpression()) #23, !dbg !12611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !12611
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()) #23, !dbg !12613
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12615, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !12598, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.value(metadata i32 undef, metadata !12598, metadata !DIExpression()), !dbg !12602
  ret void, !dbg !12616
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12617 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12619, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !12622
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12624, !srcloc !12070
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12624
  call void @llvm.dbg.value(metadata i32 %3, metadata !12067, metadata !DIExpression()) #23, !dbg !12626
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !12626
  call void @llvm.dbg.value(metadata i32 %3, metadata !12061, metadata !DIExpression()) #23, !dbg !12622
  call void @llvm.dbg.value(metadata i32 %3, metadata !12620, metadata !DIExpression()), !dbg !12621
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !12627
  br i1 %4, label %5, label %6, !dbg !12629

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12082, metadata !DIExpression()) #23, !dbg !12630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !12630
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()) #23, !dbg !12633
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12635, !srcloc !12096
  br label %8, !dbg !12636

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.118(%struct.k_thread* noundef %0) #24, !dbg !12637
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12638
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12639
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !12639
  br label %8, !dbg !12640

8:                                                ; preds = %6, %5
  ret void, !dbg !12640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12643, metadata !DIExpression()), !dbg !12644
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12645
  %3 = load i8, i8* %2, align 1, !dbg !12645
  %4 = and i8 %3, 4, !dbg !12646
  %5 = icmp eq i8 %4, 0, !dbg !12647
  ret i1 %5, !dbg !12648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.118(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12651, metadata !DIExpression()), !dbg !12652
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12653
  %3 = load i8, i8* %2, align 1, !dbg !12654
  %4 = and i8 %3, -5, !dbg !12654
  store i8 %4, i8* %2, align 1, !dbg !12654
  ret void, !dbg !12655
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12656 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12659, metadata !DIExpression()), !dbg !12660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12658, metadata !DIExpression()), !dbg !12660
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !12661
  br i1 %4, label %5, label %9, !dbg !12663

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !12664
  br i1 %6, label %7, label %9, !dbg !12665

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12666, metadata !DIExpression()) #23, !dbg !12672
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12671, metadata !DIExpression()) #23, !dbg !12672
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !12675
  br label %10, !dbg !12676

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12082, metadata !DIExpression()) #23, !dbg !12677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !12677
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()) #23, !dbg !12680
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12682, !srcloc !12096
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12683
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12688, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata i32 %0, metadata !12690, metadata !DIExpression()), !dbg !12695
  %2 = icmp eq i32 %0, 0, !dbg !12697
  br i1 %2, label %3, label %6, !dbg !12698

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12699, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 %4, metadata !12702, metadata !DIExpression()) #23, !dbg !12707
  %5 = icmp eq i32 %4, 0, !dbg !12708
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12689
  ret i1 %7, !dbg !12709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !12710 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12713
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12712, metadata !DIExpression()), !dbg !12714
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12715
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12716
  ret i1 %3, !dbg !12717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12720, metadata !DIExpression()), !dbg !12722
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !12723
  call void @llvm.dbg.value(metadata i32 %2, metadata !12721, metadata !DIExpression()), !dbg !12722
  ret i32 %2, !dbg !12724
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12727, metadata !DIExpression()), !dbg !12731
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !12732
  call void @llvm.dbg.value(metadata i32 0, metadata !12728, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !12734
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12736, !srcloc !12070
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12736
  call void @llvm.dbg.value(metadata i32 %4, metadata !12067, metadata !DIExpression()) #23, !dbg !12738
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !12738
  call void @llvm.dbg.value(metadata i32 %4, metadata !12061, metadata !DIExpression()) #23, !dbg !12734
  call void @llvm.dbg.value(metadata i32 %4, metadata !12730, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i32 undef, metadata !12728, metadata !DIExpression()), !dbg !12733
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12739
  br i1 %5, label %6, label %10, !dbg !12743

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12224, metadata !DIExpression()) #23, !dbg !12744
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12747
  %8 = load i8, i8* %7, align 1, !dbg !12748
  %9 = and i8 %8, 127, !dbg !12748
  store i8 %9, i8* %7, align 1, !dbg !12748
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12232, metadata !DIExpression()) #23, !dbg !12749
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12751
  br label %10, !dbg !12752

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !12753
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12754
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12755
  %13 = zext i1 %12 to i32, !dbg !12755
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !12756
  call void @llvm.dbg.value(metadata i32 %4, metadata !12082, metadata !DIExpression()) #23, !dbg !12757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !12757
  call void @llvm.dbg.value(metadata i32 %4, metadata !12090, metadata !DIExpression()) #23, !dbg !12759
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12761, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !12728, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i32 undef, metadata !12728, metadata !DIExpression()), !dbg !12733
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12762
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12764
  br i1 %15, label %16, label %17, !dbg !12765

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12766
  br label %17, !dbg !12768

17:                                               ; preds = %16, %10
  ret void, !dbg !12769
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12770 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12772, metadata !DIExpression()), !dbg !12773
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12774
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12775
  ret i32 %3, !dbg !12776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12777 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12779, metadata !DIExpression()), !dbg !12780
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12781
  %3 = load i8, i8* %2, align 1, !dbg !12782
  %4 = or i8 %3, 16, !dbg !12782
  store i8 %4, i8* %2, align 1, !dbg !12782
  ret void, !dbg !12783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12784 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12785, !srcloc !12070
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12785
  call void @llvm.dbg.value(metadata i32 %2, metadata !12067, metadata !DIExpression()) #23, !dbg !12787
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !12787
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !12788
  ret void, !dbg !12789
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12792, metadata !DIExpression()), !dbg !12793
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !12794
  br i1 %2, label %3, label %5, !dbg !12796

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !12797
  br label %6, !dbg !12799

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12090, metadata !DIExpression()) #23, !dbg !12800
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12803, !srcloc !12096
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12805 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12807, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !12810
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12812, !srcloc !12070
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12812
  call void @llvm.dbg.value(metadata i32 %3, metadata !12067, metadata !DIExpression()) #23, !dbg !12814
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !12814
  call void @llvm.dbg.value(metadata i32 %3, metadata !12061, metadata !DIExpression()) #23, !dbg !12810
  call void @llvm.dbg.value(metadata i32 %3, metadata !12808, metadata !DIExpression()), !dbg !12809
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !12815
  br i1 %4, label %6, label %5, !dbg !12817

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12082, metadata !DIExpression()) #23, !dbg !12818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !12818
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()) #23, !dbg !12821
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12823, !srcloc !12096
  br label %8, !dbg !12824

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !12825
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12826
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12827
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !12827
  br label %8, !dbg !12828

8:                                                ; preds = %6, %5
  ret void, !dbg !12828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12829 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12831, metadata !DIExpression()), !dbg !12832
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12833
  %3 = load i8, i8* %2, align 1, !dbg !12833
  %4 = and i8 %3, 16, !dbg !12834
  %5 = icmp ne i8 %4, 0, !dbg !12835
  ret i1 %5, !dbg !12836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12837 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12839, metadata !DIExpression()), !dbg !12840
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12841
  %3 = load i8, i8* %2, align 1, !dbg !12842
  %4 = and i8 %3, -17, !dbg !12842
  store i8 %4, i8* %2, align 1, !dbg !12842
  ret void, !dbg !12843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12844 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12854, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12852, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12853, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.value(metadata i32 0, metadata !12855, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !12860
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12862, !srcloc !12070
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !12862
  call void @llvm.dbg.value(metadata i32 %5, metadata !12067, metadata !DIExpression()) #23, !dbg !12864
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !12864
  call void @llvm.dbg.value(metadata i32 %5, metadata !12061, metadata !DIExpression()) #23, !dbg !12860
  call void @llvm.dbg.value(metadata i32 %5, metadata !12857, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata i32 undef, metadata !12855, metadata !DIExpression()), !dbg !12859
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !12865
  call void @llvm.dbg.value(metadata i32 %5, metadata !12082, metadata !DIExpression()) #23, !dbg !12868
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !12868
  call void @llvm.dbg.value(metadata i32 %5, metadata !12090, metadata !DIExpression()) #23, !dbg !12870
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !12872, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !12855, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata i32 undef, metadata !12855, metadata !DIExpression()), !dbg !12859
  ret void, !dbg !12873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12874 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12878, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12876, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12877, metadata !DIExpression()), !dbg !12879
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !12880
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !12881
  ret void, !dbg !12882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !12883 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12887, metadata !DIExpression()), !dbg !12889
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12888, metadata !DIExpression()), !dbg !12889
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !12890
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !12891
  %3 = icmp eq %union.anon* %1, null, !dbg !12892
  br i1 %3, label %21, label %4, !dbg !12894

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12895
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !12897
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !12898
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12255, metadata !DIExpression()) #23, !dbg !12899
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12261, metadata !DIExpression()) #23, !dbg !12899
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !12901
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12262, metadata !DIExpression()) #23, !dbg !12899
  %8 = icmp eq %struct._dnode* %7, null, !dbg !12902
  br i1 %8, label %19, label %9, !dbg !12901

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12262, metadata !DIExpression()) #23, !dbg !12899
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !12903
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !12262, metadata !DIExpression()) #23, !dbg !12899
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !12904
  %13 = icmp sgt i32 %12, 0, !dbg !12905
  br i1 %13, label %14, label %16, !dbg !12906

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12907
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !12908
  br label %21, !dbg !12909

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !12902
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12262, metadata !DIExpression()) #23, !dbg !12899
  %18 = icmp eq %struct._dnode* %17, null, !dbg !12902
  br i1 %18, label %19, label %9, !dbg !12901, !llvm.loop !12910

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12912
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !12913
  br label %21, !dbg !12914

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !12915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12916 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12921, metadata !DIExpression()), !dbg !12922
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12920, metadata !DIExpression()), !dbg !12922
  %4 = icmp eq i64 %3, -1, !dbg !12923
  br i1 %4, label %6, label %5, !dbg !12925

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.119(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !12926
  br label %6, !dbg !12928

6:                                                ; preds = %5, %2
  ret void, !dbg !12929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.119(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12930 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12933, metadata !DIExpression()), !dbg !12934
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12932, metadata !DIExpression()), !dbg !12934
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12935
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12936
  ret void, !dbg !12937
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !12938 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12940, metadata !DIExpression()), !dbg !12948
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !12949
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !12949
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12941, metadata !DIExpression()), !dbg !12948
  call void @llvm.dbg.value(metadata i32 0, metadata !12942, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !12951
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12953, !srcloc !12070
  call void @llvm.dbg.value(metadata i32 undef, metadata !12067, metadata !DIExpression()) #23, !dbg !12955
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !12955
  call void @llvm.dbg.value(metadata i32 undef, metadata !12061, metadata !DIExpression()) #23, !dbg !12951
  call void @llvm.dbg.value(metadata i32 undef, metadata !12944, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.value(metadata i32 undef, metadata !12942, metadata !DIExpression()), !dbg !12950
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !12956
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !12957
  %7 = load i8, i8* %6, align 1, !dbg !12957
  %8 = and i8 %7, 40, !dbg !12958
  %9 = icmp eq i8 %8, 0, !dbg !12958
  call void @llvm.dbg.value(metadata i1 %9, metadata !12945, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12959
  br i1 %9, label %10, label %17, !dbg !12960

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !12961
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !12961
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !12961
  %14 = icmp eq %union.anon* %13, null, !dbg !12965
  br i1 %14, label %16, label %15, !dbg !12966

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !12967
  br label %16, !dbg !12969

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.118(%struct.k_thread* noundef nonnull %3) #24, !dbg !12970
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !12971
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !12972
  br label %17, !dbg !12973

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !12953
  call void @llvm.dbg.value(metadata i32 %18, metadata !12067, metadata !DIExpression()) #23, !dbg !12955
  call void @llvm.dbg.value(metadata i32 %18, metadata !12061, metadata !DIExpression()) #23, !dbg !12951
  call void @llvm.dbg.value(metadata i32 %18, metadata !12944, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !12974
  call void @llvm.dbg.value(metadata i32 undef, metadata !12090, metadata !DIExpression()) #23, !dbg !12976
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12978, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !12942, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.value(metadata i32 undef, metadata !12942, metadata !DIExpression()), !dbg !12950
  ret void, !dbg !12979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12980 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12982, metadata !DIExpression()), !dbg !12983
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12984
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !12985
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12986
  store %union.anon* null, %union.anon** %2, align 8, !dbg !12987
  ret void, !dbg !12988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12989 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12991, metadata !DIExpression()), !dbg !12992
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12993
  %3 = load i8, i8* %2, align 1, !dbg !12994
  %4 = and i8 %3, -3, !dbg !12994
  store i8 %4, i8* %2, align 1, !dbg !12994
  ret void, !dbg !12995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12996 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12998, metadata !DIExpression()), !dbg !12999
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13000
  br i1 %2, label %3, label %7, !dbg !13002

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12224, metadata !DIExpression()) #23, !dbg !13003
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13006
  %5 = load i8, i8* %4, align 1, !dbg !13007
  %6 = and i8 %5, 127, !dbg !13007
  store i8 %6, i8* %4, align 1, !dbg !13007
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12232, metadata !DIExpression()) #23, !dbg !13008
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13010
  br label %7, !dbg !13011

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13012
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13013
  %10 = zext i1 %9 to i32, !dbg !13013
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !13014
  ret void, !dbg !13015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13016 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13018, metadata !DIExpression()), !dbg !13019
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13020
  %3 = load i8, i8* %2, align 1, !dbg !13021
  %4 = or i8 %3, 2, !dbg !13021
  store i8 %4, i8* %2, align 1, !dbg !13021
  ret void, !dbg !13022
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !13023 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13025, metadata !DIExpression()), !dbg !13029
  call void @llvm.dbg.value(metadata i32 0, metadata !13026, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13031
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13033, !srcloc !12070
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13033
  call void @llvm.dbg.value(metadata i32 %3, metadata !12067, metadata !DIExpression()) #23, !dbg !13035
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13035
  call void @llvm.dbg.value(metadata i32 %3, metadata !12061, metadata !DIExpression()) #23, !dbg !13031
  call void @llvm.dbg.value(metadata i32 %3, metadata !13028, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 undef, metadata !13026, metadata !DIExpression()), !dbg !13030
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13036
  call void @llvm.dbg.value(metadata i32 %3, metadata !12082, metadata !DIExpression()) #23, !dbg !13039
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13039
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()) #23, !dbg !13041
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13043, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !13026, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 undef, metadata !13026, metadata !DIExpression()), !dbg !13030
  ret void, !dbg !13044
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13045 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13051, metadata !DIExpression()), !dbg !13056
  call void @llvm.dbg.value(metadata i32 %0, metadata !13049, metadata !DIExpression()), !dbg !13056
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13050, metadata !DIExpression()), !dbg !13056
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13057
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !13058
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13059
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13060
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !13061
  call void @llvm.dbg.value(metadata i32 %6, metadata !13052, metadata !DIExpression()), !dbg !13056
  call void @llvm.dbg.value(metadata i32 0, metadata !13053, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13063
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13065, !srcloc !12070
  call void @llvm.dbg.value(metadata i32 undef, metadata !12067, metadata !DIExpression()) #23, !dbg !13067
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13067
  call void @llvm.dbg.value(metadata i32 undef, metadata !12061, metadata !DIExpression()) #23, !dbg !13063
  call void @llvm.dbg.value(metadata i32 undef, metadata !13055, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 undef, metadata !13053, metadata !DIExpression()), !dbg !13062
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13068
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13072
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13073
  br i1 %10, label %11, label %12, !dbg !13074

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13075
  br label %12, !dbg !13077

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13065
  call void @llvm.dbg.value(metadata i32 %13, metadata !12067, metadata !DIExpression()) #23, !dbg !13067
  call void @llvm.dbg.value(metadata i32 %13, metadata !12061, metadata !DIExpression()) #23, !dbg !13063
  call void @llvm.dbg.value(metadata i32 %13, metadata !13055, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13078
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13078
  call void @llvm.dbg.value(metadata i32 undef, metadata !12090, metadata !DIExpression()) #23, !dbg !13080
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !13082, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !13053, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 undef, metadata !13053, metadata !DIExpression()), !dbg !13062
  ret i32 %6, !dbg !13083
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13084 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i64 undef, metadata !13091, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13088, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13090, metadata !DIExpression()), !dbg !13092
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13093
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13094
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13095
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13097, !srcloc !12070
  call void @llvm.dbg.value(metadata i32 undef, metadata !12067, metadata !DIExpression()) #23, !dbg !13099
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13099
  call void @llvm.dbg.value(metadata i32 undef, metadata !12061, metadata !DIExpression()) #23, !dbg !13095
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13100
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !13101
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12666, metadata !DIExpression()) #23, !dbg !13102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12671, metadata !DIExpression()) #23, !dbg !13102
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !13104
  ret i32 %9, !dbg !13105
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13106 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13110, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13111, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata i32 0, metadata !13112, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13117
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13119, !srcloc !12070
  call void @llvm.dbg.value(metadata i32 undef, metadata !12067, metadata !DIExpression()) #23, !dbg !13121
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13121
  call void @llvm.dbg.value(metadata i32 undef, metadata !12061, metadata !DIExpression()) #23, !dbg !13117
  call void @llvm.dbg.value(metadata i32 undef, metadata !13114, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13111, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata i32 undef, metadata !13112, metadata !DIExpression()), !dbg !13116
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !13122
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13111, metadata !DIExpression()), !dbg !13115
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13125
  br i1 %5, label %7, label %6, !dbg !13127

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13128
  br label %7, !dbg !13130

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13119
  call void @llvm.dbg.value(metadata i32 %8, metadata !12067, metadata !DIExpression()) #23, !dbg !13121
  call void @llvm.dbg.value(metadata i32 %8, metadata !12061, metadata !DIExpression()) #23, !dbg !13117
  call void @llvm.dbg.value(metadata i32 %8, metadata !13114, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13131
  call void @llvm.dbg.value(metadata i32 undef, metadata !12090, metadata !DIExpression()) #23, !dbg !13133
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13135, !srcloc !12096
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13111, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata i32 undef, metadata !13112, metadata !DIExpression()), !dbg !13116
  ret %struct.k_thread* %4, !dbg !13136
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13137 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13139, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13140, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 0, metadata !13141, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13146
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13148, !srcloc !12070
  call void @llvm.dbg.value(metadata i32 undef, metadata !12067, metadata !DIExpression()) #23, !dbg !13150
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13150
  call void @llvm.dbg.value(metadata i32 undef, metadata !12061, metadata !DIExpression()) #23, !dbg !13146
  call void @llvm.dbg.value(metadata i32 undef, metadata !13143, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13140, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 undef, metadata !13141, metadata !DIExpression()), !dbg !13145
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !13151
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13140, metadata !DIExpression()), !dbg !13144
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13154
  br i1 %5, label %8, label %6, !dbg !13156

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13157
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13159
  br label %8, !dbg !13160

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13148
  call void @llvm.dbg.value(metadata i32 %9, metadata !12067, metadata !DIExpression()) #23, !dbg !13150
  call void @llvm.dbg.value(metadata i32 %9, metadata !12061, metadata !DIExpression()) #23, !dbg !13146
  call void @llvm.dbg.value(metadata i32 %9, metadata !13143, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13161
  call void @llvm.dbg.value(metadata i32 undef, metadata !12090, metadata !DIExpression()) #23, !dbg !13163
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13165, !srcloc !12096
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13140, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 undef, metadata !13141, metadata !DIExpression()), !dbg !13145
  ret %struct.k_thread* %4, !dbg !13166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13167 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13169, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13025, metadata !DIExpression()) #23, !dbg !13171
  call void @llvm.dbg.value(metadata i32 0, metadata !13026, metadata !DIExpression()) #23, !dbg !13173
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13174
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13176, !srcloc !12070
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13176
  call void @llvm.dbg.value(metadata i32 %3, metadata !12067, metadata !DIExpression()) #23, !dbg !13178
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13178
  call void @llvm.dbg.value(metadata i32 %3, metadata !12061, metadata !DIExpression()) #23, !dbg !13174
  call void @llvm.dbg.value(metadata i32 %3, metadata !13028, metadata !DIExpression()) #23, !dbg !13173
  call void @llvm.dbg.value(metadata i32 undef, metadata !13026, metadata !DIExpression()) #23, !dbg !13173
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !13179
  call void @llvm.dbg.value(metadata i32 %3, metadata !12082, metadata !DIExpression()) #23, !dbg !13180
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13180
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()) #23, !dbg !13182
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13184, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !13026, metadata !DIExpression()) #23, !dbg !13173
  call void @llvm.dbg.value(metadata i32 undef, metadata !13026, metadata !DIExpression()) #23, !dbg !13173
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13185
  ret void, !dbg !13186
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13187 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13189, metadata !DIExpression()), !dbg !13195
  call void @llvm.dbg.value(metadata i32 %1, metadata !13190, metadata !DIExpression()), !dbg !13195
  call void @llvm.dbg.value(metadata i8 0, metadata !13191, metadata !DIExpression()), !dbg !13195
  call void @llvm.dbg.value(metadata i32 0, metadata !13192, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13197
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13199, !srcloc !12070
  call void @llvm.dbg.value(metadata i32 undef, metadata !12067, metadata !DIExpression()) #23, !dbg !13201
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13201
  call void @llvm.dbg.value(metadata i32 undef, metadata !12061, metadata !DIExpression()) #23, !dbg !13197
  call void @llvm.dbg.value(metadata i32 undef, metadata !13194, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i8 poison, metadata !13191, metadata !DIExpression()), !dbg !13195
  call void @llvm.dbg.value(metadata i32 undef, metadata !13192, metadata !DIExpression()), !dbg !13196
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !13202
  call void @llvm.dbg.value(metadata i1 %6, metadata !13191, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13195
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !13205

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12224, metadata !DIExpression()) #23, !dbg !13206
  %11 = load i8, i8* %4, align 1, !dbg !13212
  %12 = and i8 %11, 127, !dbg !13212
  store i8 %12, i8* %4, align 1, !dbg !13212
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12232, metadata !DIExpression()) #23, !dbg !13213
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13215
  store i8 %9, i8* %8, align 2, !dbg !13216
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12241, metadata !DIExpression()) #23, !dbg !13217
  %13 = load i8, i8* %4, align 1, !dbg !13219
  %14 = or i8 %13, -128, !dbg !13219
  store i8 %14, i8* %4, align 1, !dbg !13219
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12248, metadata !DIExpression()) #23, !dbg !13220
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12255, metadata !DIExpression()) #23, !dbg !13222
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12261, metadata !DIExpression()) #23, !dbg !13222
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13224
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12262, metadata !DIExpression()) #23, !dbg !13222
  %16 = icmp eq %struct._dnode* %15, null, !dbg !13225
  br i1 %16, label %26, label %17, !dbg !13224

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !12262, metadata !DIExpression()) #23, !dbg !13222
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !13226
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !12262, metadata !DIExpression()) #23, !dbg !13222
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !13227
  %21 = icmp sgt i32 %20, 0, !dbg !13228
  br i1 %21, label %22, label %23, !dbg !13229

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !13230
  br label %27, !dbg !13231

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !13225
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12262, metadata !DIExpression()) #23, !dbg !13222
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13225
  br i1 %25, label %26, label %17, !dbg !13224, !llvm.loop !13232

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !13234
  br label %27, !dbg !13235

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13236
  br label %29, !dbg !13237

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !13238
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !13199
  call void @llvm.dbg.value(metadata i32 %30, metadata !12067, metadata !DIExpression()) #23, !dbg !13201
  call void @llvm.dbg.value(metadata i32 %30, metadata !12061, metadata !DIExpression()) #23, !dbg !13197
  call void @llvm.dbg.value(metadata i32 %30, metadata !13194, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13240
  call void @llvm.dbg.value(metadata i32 undef, metadata !12090, metadata !DIExpression()) #23, !dbg !13242
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !13244, !srcloc !12096
  call void @llvm.dbg.value(metadata i8 poison, metadata !13191, metadata !DIExpression()), !dbg !13195
  call void @llvm.dbg.value(metadata i32 undef, metadata !13192, metadata !DIExpression()), !dbg !13196
  ret i1 %6, !dbg !13245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13246 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13250, metadata !DIExpression()), !dbg !13253
  call void @llvm.dbg.value(metadata i32 %1, metadata !13251, metadata !DIExpression()), !dbg !13253
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13254
  call void @llvm.dbg.value(metadata i1 %3, metadata !13252, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13253
  br i1 %3, label %4, label %12, !dbg !13255

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13257
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13258
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13258
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13258
  %9 = load i8, i8* %8, align 1, !dbg !13258
  %10 = icmp eq i8 %9, 0, !dbg !13259
  br i1 %10, label %11, label %12, !dbg !13260

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13261
  br label %12, !dbg !13263

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13264
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13265 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13267, metadata !DIExpression()), !dbg !13270
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13271
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13273, !srcloc !12070
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13273
  call void @llvm.dbg.value(metadata i32 %2, metadata !12067, metadata !DIExpression()) #23, !dbg !13275
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13275
  call void @llvm.dbg.value(metadata i32 %2, metadata !12061, metadata !DIExpression()) #23, !dbg !13271
  call void @llvm.dbg.value(metadata i32 %2, metadata !13269, metadata !DIExpression()), !dbg !13270
  call void @llvm.dbg.value(metadata i32 undef, metadata !13267, metadata !DIExpression()), !dbg !13270
  tail call fastcc void @z_sched_lock() #24, !dbg !13276
  call void @llvm.dbg.value(metadata i32 %2, metadata !12082, metadata !DIExpression()) #23, !dbg !13279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13279
  call void @llvm.dbg.value(metadata i32 %2, metadata !12090, metadata !DIExpression()) #23, !dbg !13281
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13283, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !13267, metadata !DIExpression()), !dbg !13270
  call void @llvm.dbg.value(metadata i32 undef, metadata !13267, metadata !DIExpression()), !dbg !13270
  ret void, !dbg !13284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13285 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13286
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13287
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !13287
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !13287
  %5 = load i8, i8* %4, align 1, !dbg !13288
  %6 = add i8 %5, -1, !dbg !13288
  store i8 %6, i8* %4, align 1, !dbg !13288
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13289, !srcloc !13291
  ret void, !dbg !13292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13293 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13295, metadata !DIExpression()), !dbg !13298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13299
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13301, !srcloc !12070
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13301
  call void @llvm.dbg.value(metadata i32 %2, metadata !12067, metadata !DIExpression()) #23, !dbg !13303
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13303
  call void @llvm.dbg.value(metadata i32 %2, metadata !12061, metadata !DIExpression()) #23, !dbg !13299
  call void @llvm.dbg.value(metadata i32 %2, metadata !13297, metadata !DIExpression()), !dbg !13298
  call void @llvm.dbg.value(metadata i32 undef, metadata !13295, metadata !DIExpression()), !dbg !13298
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13304
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !13307
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !13307
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13307
  %7 = load i8, i8* %6, align 1, !dbg !13308
  %8 = add i8 %7, 1, !dbg !13308
  store i8 %8, i8* %6, align 1, !dbg !13308
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !13309
  call void @llvm.dbg.value(metadata i32 %2, metadata !12082, metadata !DIExpression()) #23, !dbg !13310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13310
  call void @llvm.dbg.value(metadata i32 %2, metadata !12090, metadata !DIExpression()) #23, !dbg !13312
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13314, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !13295, metadata !DIExpression()), !dbg !13298
  call void @llvm.dbg.value(metadata i32 undef, metadata !13295, metadata !DIExpression()), !dbg !13298
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13315
  ret void, !dbg !13316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !13317 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13318
  ret %struct.k_thread* %1, !dbg !13319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13320 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13324, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13325, metadata !DIExpression()), !dbg !13329
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13330
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13326, metadata !DIExpression()), !dbg !13329
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13331
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13327, metadata !DIExpression()), !dbg !13329
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !13332
  call void @llvm.dbg.value(metadata i32 %5, metadata !13328, metadata !DIExpression()), !dbg !13329
  %6 = icmp sgt i32 %5, 0, !dbg !13333
  br i1 %6, label %17, label %7, !dbg !13335

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13336
  br i1 %8, label %17, label %9, !dbg !13338

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13339
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13339
  %12 = load i32, i32* %11, align 8, !dbg !13339
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13341
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13341
  %15 = load i32, i32* %14, align 8, !dbg !13341
  %16 = icmp ult i32 %12, %15, !dbg !13342
  br label %17, !dbg !13343

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13344
  ret i1 %18, !dbg !13345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13346 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13363, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13364, metadata !DIExpression()), !dbg !13378
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13379
  %5 = load i32, i32* %4, align 4, !dbg !13380
  %6 = add nsw i32 %5, 1, !dbg !13380
  store i32 %6, i32* %4, align 4, !dbg !13380
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13381
  store i32 %5, i32* %7, align 8, !dbg !13382
  %8 = load i32, i32* %4, align 4, !dbg !13383
  %9 = icmp eq i32 %8, 0, !dbg !13384
  br i1 %9, label %10, label %32, !dbg !13385

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13386
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13386
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13366, metadata !DIExpression()), !dbg !13386
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13386
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13386
  %14 = load i32, i32* %13, align 4, !dbg !13386
  %15 = shl i32 %14, 2, !dbg !13386
  %16 = alloca i8, i32 %15, align 8, !dbg !13386
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13386
  store i8* %16, i8** %17, align 4, !dbg !13386
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13386
  %19 = alloca i8, i32 %14, align 8, !dbg !13386
  store i8* %19, i8** %18, align 4, !dbg !13386
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13386
  store i32 -1, i32* %20, align 4, !dbg !13386
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !13387
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13375, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13365, metadata !DIExpression()), !dbg !13378
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !13389
  br i1 %22, label %23, label %24, !dbg !13386

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13389
  br label %32, !dbg !13390

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !13365, metadata !DIExpression()), !dbg !13378
  %26 = load i32, i32* %4, align 4, !dbg !13391
  %27 = add nsw i32 %26, 1, !dbg !13391
  store i32 %27, i32* %4, align 4, !dbg !13391
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !13393
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !13393
  store i32 %26, i32* %29, align 8, !dbg !13394
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !13387
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13375, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13365, metadata !DIExpression()), !dbg !13378
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !13389
  br i1 %31, label %23, label %24, !dbg !13386, !llvm.loop !13395

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13397
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13398
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !13399
  ret void, !dbg !13400
}

; Function Attrs: optsize
declare !dbg !13401 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13406 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13409 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13411, metadata !DIExpression()), !dbg !13413
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13412, metadata !DIExpression()), !dbg !13413
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13414
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13415
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !13416
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13417
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !13417
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !13419
  br i1 %7, label %8, label %10, !dbg !13420

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13421
  store i32 0, i32* %9, align 4, !dbg !13423
  br label %10, !dbg !13424

10:                                               ; preds = %8, %2
  ret void, !dbg !13425
}

; Function Attrs: optsize
declare !dbg !13426 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13427 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13431, metadata !DIExpression()), !dbg !13434
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13432, metadata !DIExpression()), !dbg !13434
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13435
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !13436
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13433, metadata !DIExpression()), !dbg !13434
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13432, metadata !DIExpression()), !dbg !13434
  ret %struct.k_thread* %4, !dbg !13437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13438 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13442, metadata !DIExpression()), !dbg !13443
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !13444
  ret %struct.rbnode* %2, !dbg !13445
}

; Function Attrs: optsize
declare !dbg !13446 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !13449 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13461, metadata !DIExpression()), !dbg !13465
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13466
  %3 = load i32, i32* %2, align 4, !dbg !13466
  %4 = icmp eq i32 %3, 0, !dbg !13468
  br i1 %4, label %10, label %5, !dbg !13469

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13462, metadata !DIExpression()), !dbg !13465
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13470, !range !5721
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13471
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13463, metadata !DIExpression()), !dbg !13465
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !13472
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13464, metadata !DIExpression()), !dbg !13465
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13462, metadata !DIExpression()), !dbg !13465
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13465
  ret %struct.k_thread* %11, !dbg !13473
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13474 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13478, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i32 0, metadata !13479, metadata !DIExpression()), !dbg !13481
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13482
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13480, metadata !DIExpression()), !dbg !13481
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13483
  br i1 %3, label %8, label %4, !dbg !13484

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13485
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13487
  call void @llvm.dbg.value(metadata i32 1, metadata !13479, metadata !DIExpression()), !dbg !13481
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13482
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13480, metadata !DIExpression()), !dbg !13481
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13483
  br i1 %7, label %8, label %4, !dbg !13484, !llvm.loop !13488

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13481
  ret i32 %9, !dbg !13490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !13491 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13493, metadata !DIExpression()), !dbg !13494
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13495
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13496
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13497
  ret %struct.k_thread* %4, !dbg !13498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !13499 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13508, metadata !DIExpression()), !dbg !13509
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13510
  tail call fastcc void @sys_dlist_init.126(%struct._dnode* noundef nonnull %2) #24, !dbg !13511
  ret void, !dbg !13512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.126(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13513 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13517, metadata !DIExpression()), !dbg !13518
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13519
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13520
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13521
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13522
  ret void, !dbg !13523
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13524 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !13525
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !13526
  ret void, !dbg !13527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !13528 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13533, metadata !DIExpression()), !dbg !13534
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13535
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13535
  %4 = load i8, i8* %3, align 2, !dbg !13535
  %5 = sext i8 %4 to i32, !dbg !13536
  ret i32 %5, !dbg !13537
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13542, metadata !DIExpression()), !dbg !13545
  call void @llvm.dbg.value(metadata i32 %1, metadata !13543, metadata !DIExpression()), !dbg !13545
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13544, metadata !DIExpression()), !dbg !13545
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13546
  ret void, !dbg !13547
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13548 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !13549
  br i1 %1, label %8, label %2, !dbg !13550

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !13551
  br i1 %3, label %8, label %4, !dbg !13552

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13553
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !13554
  %7 = xor i1 %6, true, !dbg !13552
  br label %8, !dbg !13552

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !13556 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13557, !range !5141
  %2 = icmp eq i8 %1, 0, !dbg !13557
  ret i1 %2, !dbg !13558
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13559 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13562
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13564, !srcloc !12070
  call void @llvm.dbg.value(metadata i32 undef, metadata !12067, metadata !DIExpression()) #23, !dbg !13566
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13566
  call void @llvm.dbg.value(metadata i32 undef, metadata !12061, metadata !DIExpression()) #23, !dbg !13562
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()), !dbg !13567
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13568
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12224, metadata !DIExpression()) #23, !dbg !13571
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13573
  %4 = load i8, i8* %3, align 1, !dbg !13574
  %5 = and i8 %4, 127, !dbg !13574
  store i8 %5, i8* %3, align 1, !dbg !13574
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12232, metadata !DIExpression()) #23, !dbg !13575
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !13577
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13578
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12241, metadata !DIExpression()) #23, !dbg !13579
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13581
  %8 = load i8, i8* %7, align 1, !dbg !13582
  %9 = or i8 %8, -128, !dbg !13582
  store i8 %9, i8* %7, align 1, !dbg !13582
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12248, metadata !DIExpression()) #23, !dbg !13583
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12255, metadata !DIExpression()) #23, !dbg !13585
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12261, metadata !DIExpression()) #23, !dbg !13585
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13587
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12262, metadata !DIExpression()) #23, !dbg !13585
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13588
  br i1 %11, label %22, label %12, !dbg !13587

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12262, metadata !DIExpression()) #23, !dbg !13585
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13589
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12262, metadata !DIExpression()) #23, !dbg !13585
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !13590
  %16 = icmp sgt i32 %15, 0, !dbg !13591
  br i1 %16, label %17, label %19, !dbg !13592

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13593
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !13594
  br label %24, !dbg !13595

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !13588
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12262, metadata !DIExpression()) #23, !dbg !13585
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13588
  br i1 %21, label %22, label %12, !dbg !13587, !llvm.loop !13596

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13598
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !13599
  br label %24, !dbg !13600

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13564
  call void @llvm.dbg.value(metadata i32 %25, metadata !12067, metadata !DIExpression()) #23, !dbg !13566
  call void @llvm.dbg.value(metadata i32 %25, metadata !12061, metadata !DIExpression()) #23, !dbg !13562
  call void @llvm.dbg.value(metadata i32 %25, metadata !13561, metadata !DIExpression()), !dbg !13567
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13601
  call void @llvm.dbg.value(metadata i32 undef, metadata !12666, metadata !DIExpression()) #23, !dbg !13602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12671, metadata !DIExpression()) #23, !dbg !13602
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !13604
  ret void, !dbg !13605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13606 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13610, metadata !DIExpression()), !dbg !13613
  %3 = icmp eq i64 %2, -1, !dbg !13614
  br i1 %3, label %4, label %6, !dbg !13616

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13617
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !13619
  br label %11, !dbg !13620

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13611, metadata !DIExpression()), !dbg !13613
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !13621
  %8 = sext i32 %7 to i64, !dbg !13621
  call void @llvm.dbg.value(metadata i64 %8, metadata !13611, metadata !DIExpression()), !dbg !13613
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !13622
  %10 = trunc i64 %9 to i32, !dbg !13622
  call void @llvm.dbg.value(metadata i32 %10, metadata !13612, metadata !DIExpression()), !dbg !13613
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13613
  ret i32 %12, !dbg !13623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13624 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13628, metadata !DIExpression()), !dbg !13629
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13630, !srcloc !13632
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !13633
  ret void, !dbg !13634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13635 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13639, metadata !DIExpression()), !dbg !13643
  %2 = icmp eq i64 %0, 0, !dbg !13644
  br i1 %2, label %3, label %4, !dbg !13646

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #24, !dbg !13647
  br label %29, !dbg !13649

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13641, metadata !DIExpression()), !dbg !13643
  %5 = icmp sgt i64 %0, -3, !dbg !13650
  br i1 %5, label %6, label %10, !dbg !13652

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !13653
  %8 = trunc i64 %0 to i32, !dbg !13655
  %9 = add i32 %7, %8, !dbg !13655
  call void @llvm.dbg.value(metadata i32 %9, metadata !13640, metadata !DIExpression()), !dbg !13643
  br label %13, !dbg !13656

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13657
  %12 = sub i32 -2, %11, !dbg !13657
  call void @llvm.dbg.value(metadata i32 %12, metadata !13640, metadata !DIExpression()), !dbg !13643
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13659
  call void @llvm.dbg.value(metadata i32 %14, metadata !13640, metadata !DIExpression()), !dbg !13643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13660
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13662, !srcloc !12070
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13662
  call void @llvm.dbg.value(metadata i32 %16, metadata !12067, metadata !DIExpression()) #23, !dbg !13664
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13664
  call void @llvm.dbg.value(metadata i32 %16, metadata !12061, metadata !DIExpression()) #23, !dbg !13660
  call void @llvm.dbg.value(metadata i32 %16, metadata !13642, metadata !DIExpression()), !dbg !13643
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13665
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13666
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !13667
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13668
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13669
  tail call fastcc void @z_add_thread_timeout.119(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !13669
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13670
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !13671
  call void @llvm.dbg.value(metadata i32 %16, metadata !12666, metadata !DIExpression()) #23, !dbg !13672
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12671, metadata !DIExpression()) #23, !dbg !13672
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !13674
  %22 = zext i32 %14 to i64, !dbg !13675
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !13676
  %24 = zext i32 %23 to i64, !dbg !13676
  %25 = sub nsw i64 %22, %24, !dbg !13677
  call void @llvm.dbg.value(metadata i64 %25, metadata !13639, metadata !DIExpression()), !dbg !13643
  %26 = icmp sgt i64 %25, 0, !dbg !13678
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13678
  %28 = trunc i64 %27 to i32, !dbg !13678
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13643
  ret i32 %30, !dbg !13679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #2 !dbg !13680 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13682, metadata !DIExpression()), !dbg !13683
  call void @llvm.dbg.value(metadata i64 %0, metadata !12102, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i32 10000, metadata !12105, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i32 1000, metadata !12106, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i8 1, metadata !12107, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i1 false, metadata !12108, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13684
  call void @llvm.dbg.value(metadata i1 false, metadata !12109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13684
  call void @llvm.dbg.value(metadata i8 0, metadata !12110, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i1 false, metadata !12111, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13684
  call void @llvm.dbg.value(metadata i1 true, metadata !12112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13684
  call void @llvm.dbg.value(metadata i64 0, metadata !12113, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i64 0, metadata !12113, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i64 %0, metadata !12102, metadata !DIExpression()), !dbg !13684
  %2 = udiv i64 %0, 10, !dbg !13686
  ret i64 %2, !dbg !13690
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13691 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13692, !srcloc !13694
  tail call void @z_impl_k_yield() #24, !dbg !13695
  ret void, !dbg !13696
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13701, metadata !DIExpression()), !dbg !13703
  %2 = sext i32 %0 to i64, !dbg !13704
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !13705
  call void @llvm.dbg.value(metadata i64 %3, metadata !13702, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13703
  %4 = shl i64 %3, 32, !dbg !13706
  %5 = ashr exact i64 %4, 32, !dbg !13706
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !13707
  call void @llvm.dbg.value(metadata i32 %6, metadata !13702, metadata !DIExpression()), !dbg !13703
  %7 = sext i32 %6 to i64, !dbg !13708
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !13709
  %9 = trunc i64 %8 to i32, !dbg !13709
  ret i32 %9, !dbg !13710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !13711 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13713, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.value(metadata i64 %0, metadata !12102, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12105, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.value(metadata i32 10000, metadata !12106, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.value(metadata i8 1, metadata !12107, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.value(metadata i1 false, metadata !12108, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13715
  call void @llvm.dbg.value(metadata i1 true, metadata !12109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13715
  call void @llvm.dbg.value(metadata i8 0, metadata !12110, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.value(metadata i1 false, metadata !12111, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13715
  call void @llvm.dbg.value(metadata i1 true, metadata !12112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13715
  call void @llvm.dbg.value(metadata i64 0, metadata !12113, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.value(metadata i64 0, metadata !12113, metadata !DIExpression()), !dbg !13715
  %2 = add i64 %0, 99, !dbg !13717
  call void @llvm.dbg.value(metadata i64 %2, metadata !12102, metadata !DIExpression()), !dbg !13715
  %3 = udiv i64 %2, 100, !dbg !13718
  ret i64 %3, !dbg !13719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #2 !dbg !13720 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13722, metadata !DIExpression()), !dbg !13723
  call void @llvm.dbg.value(metadata i64 %0, metadata !12102, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i32 10000, metadata !12105, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12106, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i8 1, metadata !12107, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i1 false, metadata !12108, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13724
  call void @llvm.dbg.value(metadata i1 false, metadata !12109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13724
  call void @llvm.dbg.value(metadata i8 0, metadata !12110, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i1 true, metadata !12111, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13724
  call void @llvm.dbg.value(metadata i1 false, metadata !12112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13724
  call void @llvm.dbg.value(metadata i64 0, metadata !12113, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i64 0, metadata !12113, metadata !DIExpression()), !dbg !13724
  %2 = mul i64 %0, 100, !dbg !13726
  ret i64 %2, !dbg !13728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13729 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13731, metadata !DIExpression()), !dbg !13732
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !13733
  br i1 %2, label %14, label %3, !dbg !13735

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13736
  %5 = icmp slt i32 %4, 0, !dbg !13738
  br i1 %5, label %6, label %10, !dbg !13739

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13740
  %8 = load i8, i8* %7, align 1, !dbg !13740
  %9 = icmp eq i8 %8, 16, !dbg !13743
  br i1 %9, label %10, label %14, !dbg !13744

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !13745
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13746
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13747, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 %11, metadata !12702, metadata !DIExpression()) #23, !dbg !13751
  %12 = icmp eq i32 %11, 0, !dbg !13752
  br i1 %12, label %13, label %14, !dbg !13753

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13754
  br label %14, !dbg !13756

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13758 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13760, metadata !DIExpression()), !dbg !13761
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13762
  %3 = load i8, i8* %2, align 1, !dbg !13762
  %4 = and i8 %3, 2, !dbg !13763
  %5 = icmp ne i8 %4, 0, !dbg !13764
  ret i1 %5, !dbg !13765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !13766 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13771
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13770, metadata !DIExpression()), !dbg !13772
  ret %struct.k_thread* %1, !dbg !13773
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13774 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13775, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 %1, metadata !12702, metadata !DIExpression()) #23, !dbg !13778
  %2 = icmp eq i32 %1, 0, !dbg !13779
  br i1 %2, label %3, label %8, !dbg !13780

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13781
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !13782
  %6 = icmp ne i32 %5, 0, !dbg !13780
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13784 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13786, metadata !DIExpression()), !dbg !13788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13789
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13791, !srcloc !12070
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13791
  call void @llvm.dbg.value(metadata i32 %3, metadata !12067, metadata !DIExpression()) #23, !dbg !13793
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13793
  call void @llvm.dbg.value(metadata i32 %3, metadata !12061, metadata !DIExpression()) #23, !dbg !13789
  call void @llvm.dbg.value(metadata i32 %3, metadata !13787, metadata !DIExpression()), !dbg !13788
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13794
  %5 = load i8, i8* %4, align 4, !dbg !13794
  %6 = and i8 %5, 1, !dbg !13796
  %7 = icmp eq i8 %6, 0, !dbg !13797
  br i1 %7, label %9, label %8, !dbg !13798

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12082, metadata !DIExpression()) #23, !dbg !13799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13799
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()) #23, !dbg !13802
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13804, !srcloc !12096
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13805, !srcloc !13807
  br label %24, !dbg !13808

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13809
  %11 = load i8, i8* %10, align 1, !dbg !13809
  %12 = and i8 %11, 8, !dbg !13811
  %13 = icmp eq i8 %12, 0, !dbg !13812
  br i1 %13, label %15, label %14, !dbg !13813

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12082, metadata !DIExpression()) #23, !dbg !13814
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13814
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()) #23, !dbg !13817
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13819, !srcloc !12096
  br label %24, !dbg !13820

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !13821
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13822
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13824
  br i1 %17, label %18, label %23, !dbg !13825

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13826, !srcloc !12706
  call void @llvm.dbg.value(metadata i32 %19, metadata !12702, metadata !DIExpression()) #23, !dbg !13829
  %20 = icmp eq i32 %19, 0, !dbg !13830
  br i1 %20, label %21, label %23, !dbg !13831

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12666, metadata !DIExpression()) #23, !dbg !13832
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12671, metadata !DIExpression()) #23, !dbg !13832
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13835
  br label %23, !dbg !13836

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12082, metadata !DIExpression()) #23, !dbg !13837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13837
  call void @llvm.dbg.value(metadata i32 %3, metadata !12090, metadata !DIExpression()) #23, !dbg !13839
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13841, !srcloc !12096
  br label %24, !dbg !13842

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13845, metadata !DIExpression()), !dbg !13846
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13847
  %3 = load i8, i8* %2, align 1, !dbg !13847
  %4 = and i8 %3, 8, !dbg !13849
  %5 = icmp eq i8 %4, 0, !dbg !13850
  br i1 %5, label %6, label %20, !dbg !13851

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13852
  %8 = or i8 %7, 8, !dbg !13852
  store i8 %8, i8* %2, align 1, !dbg !13852
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !13854
  br i1 %9, label %10, label %12, !dbg !13856

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12224, metadata !DIExpression()) #23, !dbg !13857
  %11 = and i8 %8, 95, !dbg !13860
  store i8 %11, i8* %2, align 1, !dbg !13860
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12232, metadata !DIExpression()) #23, !dbg !13861
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !13863
  br label %12, !dbg !13864

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13865
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !13865
  %15 = icmp eq %union.anon* %14, null, !dbg !13867
  br i1 %15, label %17, label %16, !dbg !13868

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !13869
  br label %17, !dbg !13871

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !13872
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13873
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !13874
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13875
  br label %20, !dbg !13876

20:                                               ; preds = %17, %1
  ret void, !dbg !13877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !13878 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13882, metadata !DIExpression()), !dbg !13884
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13885
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13883, metadata !DIExpression()), !dbg !13884
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13886
  br i1 %3, label %10, label %4, !dbg !13887

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !13888
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !13890
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13891, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i32 0, metadata !13896, metadata !DIExpression()), !dbg !13897
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !13899
  store i32 0, i32* %7, align 4, !dbg !13900
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13901
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13885
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13883, metadata !DIExpression()), !dbg !13884
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13886
  br i1 %9, label %10, label %4, !dbg !13887, !llvm.loop !13902

10:                                               ; preds = %4, %1
  ret void, !dbg !13904
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13905 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13910, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13909, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13914
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13916, !srcloc !12070
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13916
  call void @llvm.dbg.value(metadata i32 %4, metadata !12067, metadata !DIExpression()) #23, !dbg !13918
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13918
  call void @llvm.dbg.value(metadata i32 %4, metadata !12061, metadata !DIExpression()) #23, !dbg !13914
  call void @llvm.dbg.value(metadata i32 %4, metadata !13911, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata i32 0, metadata !13912, metadata !DIExpression()), !dbg !13913
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13919
  %6 = load i8, i8* %5, align 1, !dbg !13919
  %7 = and i8 %6, 8, !dbg !13921
  %8 = icmp eq i8 %7, 0, !dbg !13922
  br i1 %8, label %9, label %24, !dbg !13923

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !13910, metadata !DIExpression()), !dbg !13913
  %11 = icmp eq i64 %10, 0, !dbg !13924
  br i1 %11, label %24, label %12, !dbg !13926

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13927
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !13929
  br i1 %14, label %24, label %15, !dbg !13930

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13931
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !13931
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !13932
  %19 = icmp eq %union.anon* %17, %18, !dbg !13933
  br i1 %19, label %24, label %20, !dbg !13934

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13935
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #24, !dbg !13937
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13938
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !13939
  call void @llvm.dbg.value(metadata i32 %4, metadata !12666, metadata !DIExpression()) #23, !dbg !13940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12671, metadata !DIExpression()) #23, !dbg !13940
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !13942
  call void @llvm.dbg.value(metadata i32 %23, metadata !13912, metadata !DIExpression()), !dbg !13913
  br label %26, !dbg !13943

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !13944
  call void @llvm.dbg.value(metadata i32 %25, metadata !13912, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata i32 %4, metadata !12082, metadata !DIExpression()) #23, !dbg !13945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13945
  call void @llvm.dbg.value(metadata i32 %4, metadata !12090, metadata !DIExpression()) #23, !dbg !13947
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13949, !srcloc !12096
  br label %26, !dbg !13950

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !13913
  ret i32 %27, !dbg !13951
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13952 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13956, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.value(metadata i32 %1, metadata !13957, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.value(metadata i8* %2, metadata !13958, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.value(metadata i8 0, metadata !13960, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.value(metadata i32 0, metadata !13961, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12055, metadata !DIExpression()) #23, !dbg !13966
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13968, !srcloc !12070
  call void @llvm.dbg.value(metadata i32 undef, metadata !12067, metadata !DIExpression()) #23, !dbg !13970
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13970
  call void @llvm.dbg.value(metadata i32 undef, metadata !12061, metadata !DIExpression()) #23, !dbg !13966
  call void @llvm.dbg.value(metadata i32 undef, metadata !13963, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i8 poison, metadata !13960, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.value(metadata i32 undef, metadata !13961, metadata !DIExpression()), !dbg !13965
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !13971
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13959, metadata !DIExpression()), !dbg !13964
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13974
  br i1 %7, label %12, label %8, !dbg !13976

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13977, metadata !DIExpression()), !dbg !13985
  call void @llvm.dbg.value(metadata i32 %1, metadata !13983, metadata !DIExpression()), !dbg !13985
  call void @llvm.dbg.value(metadata i8* %2, metadata !13984, metadata !DIExpression()), !dbg !13985
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13891, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.value(metadata i32 %1, metadata !13896, metadata !DIExpression()), !dbg !13988
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !13990
  store i32 %1, i32* %9, align 4, !dbg !13991
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !13992
  store i8* %2, i8** %10, align 4, !dbg !13993
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !13994
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !13995
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !13996
  call void @llvm.dbg.value(metadata i8 1, metadata !13960, metadata !DIExpression()), !dbg !13964
  br label %12, !dbg !13997

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !13968
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !13968
  call void @llvm.dbg.value(metadata i32 %14, metadata !12067, metadata !DIExpression()) #23, !dbg !13970
  call void @llvm.dbg.value(metadata i32 %14, metadata !12061, metadata !DIExpression()) #23, !dbg !13966
  call void @llvm.dbg.value(metadata i32 %14, metadata !13963, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i8 poison, metadata !13960, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12087, metadata !DIExpression()) #23, !dbg !13998
  call void @llvm.dbg.value(metadata i32 undef, metadata !12090, metadata !DIExpression()) #23, !dbg !14000
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14002, !srcloc !12096
  call void @llvm.dbg.value(metadata i32 undef, metadata !13961, metadata !DIExpression()), !dbg !13965
  ret i1 %13, !dbg !14003
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14004 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i64 undef, metadata !14012, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14009, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14011, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i8** %4, metadata !14013, metadata !DIExpression()), !dbg !14015
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !14016
  call void @llvm.dbg.value(metadata i32 %6, metadata !14014, metadata !DIExpression()), !dbg !14015
  %7 = icmp eq i8** %4, null, !dbg !14017
  br i1 %7, label %12, label %8, !dbg !14019

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14020
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14022
  %11 = load i8*, i8** %10, align 4, !dbg !14022
  store i8* %11, i8** %4, align 4, !dbg !14023
  br label %12, !dbg !14024

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14026 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !14028
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !14029
  ret void, !dbg !14030
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14031 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14041, metadata !DIExpression()), !dbg !14058
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14039, metadata !DIExpression()), !dbg !14058
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14040, metadata !DIExpression()), !dbg !14058
  %5 = icmp eq i64 %4, -1, !dbg !14059
  br i1 %5, label %55, label %6, !dbg !14061

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14062
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14063
  call void @llvm.dbg.value(metadata i32 0, metadata !14042, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14065, metadata !DIExpression()) #23, !dbg !14072
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14074, !srcloc !14080
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14074
  call void @llvm.dbg.value(metadata i32 %9, metadata !14077, metadata !DIExpression()) #23, !dbg !14081
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14081
  call void @llvm.dbg.value(metadata i32 %9, metadata !14071, metadata !DIExpression()) #23, !dbg !14072
  call void @llvm.dbg.value(metadata i32 %9, metadata !14048, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()), !dbg !14064
  %10 = icmp slt i64 %4, -1, !dbg !14082
  br i1 %10, label %11, label %17, !dbg !14083

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14084
  %13 = add i64 %4, %12, !dbg !14085
  %14 = sub i64 -2, %13, !dbg !14085
  call void @llvm.dbg.value(metadata i64 %14, metadata !14052, metadata !DIExpression()), !dbg !14086
  %15 = icmp sgt i64 %14, 1, !dbg !14087
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14087
  br label %22, !dbg !14088

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14089
  %19 = tail call fastcc i32 @elapsed.137() #24, !dbg !14091
  %20 = sext i32 %19 to i64, !dbg !14091
  %21 = add nsw i64 %18, %20, !dbg !14092
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14093
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14094
  store i64 %23, i64* %24, align 8, !dbg !14095
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !14096
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14049, metadata !DIExpression()), !dbg !14098
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14099
  br i1 %26, label %42, label %27, !dbg !14099

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14100
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14049, metadata !DIExpression()), !dbg !14098
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14104
  %31 = load i64, i64* %30, align 8, !dbg !14104
  %32 = icmp slt i64 %28, %31, !dbg !14105
  br i1 %32, label %33, label %38, !dbg !14106

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14104
  %35 = sub nsw i64 %31, %28, !dbg !14107
  store i64 %35, i64* %34, align 8, !dbg !14107
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !14109
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14110
  tail call fastcc void @sys_dlist_insert.138(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !14111
  br label %44, !dbg !14112

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !14113
  store i64 %39, i64* %24, align 8, !dbg !14113
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !14114
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14049, metadata !DIExpression()), !dbg !14098
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14099
  br i1 %41, label %42, label %27, !dbg !14099, !llvm.loop !14115

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14117
  tail call fastcc void @sys_dlist_append.139(%struct._dnode* noundef %43) #24, !dbg !14120
  br label %44, !dbg !14121

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !14122
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !14123
  br i1 %46, label %47, label %54, !dbg !14124

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !14125
  call void @llvm.dbg.value(metadata i32 %48, metadata !14055, metadata !DIExpression()), !dbg !14126
  %49 = icmp ne i32 %48, 0, !dbg !14127
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !14129
  br i1 %52, label %54, label %53, !dbg !14129

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !14130
  br label %54, !dbg !14132

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !14133, metadata !DIExpression()) #23, !dbg !14139
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14138, metadata !DIExpression()) #23, !dbg !14139
  call void @llvm.dbg.value(metadata i32 %9, metadata !14141, metadata !DIExpression()) #23, !dbg !14144
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14146, !srcloc !14147
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()), !dbg !14064
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !14148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.137() unnamed_addr #1 !dbg !14149 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14152
  %2 = icmp eq i32 %1, 0, !dbg !14153
  br i1 %2, label %3, label %5, !dbg !14152

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !14154
  br label %5, !dbg !14152

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14152
  ret i32 %6, !dbg !14155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !14156 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.142() #24, !dbg !14162
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14160, metadata !DIExpression()), !dbg !14163
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14164
  ret %struct._timeout* %2, !dbg !14165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.138(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14166 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14170, metadata !DIExpression()), !dbg !14174
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14171, metadata !DIExpression()), !dbg !14174
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14175
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14175
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14172, metadata !DIExpression()), !dbg !14174
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14176
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14177
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14178
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14179
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14180
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14181
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14182
  ret void, !dbg !14183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !14184 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14188, metadata !DIExpression()), !dbg !14190
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14191
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.140(%struct._dnode* noundef %2) #24, !dbg !14192
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14189, metadata !DIExpression()), !dbg !14190
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14193
  ret %struct._timeout* %4, !dbg !14194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.139(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14195 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14200, metadata !DIExpression()), !dbg !14203
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14201, metadata !DIExpression()), !dbg !14203
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14204
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14202, metadata !DIExpression()), !dbg !14203
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14205
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14206
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14207
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14208
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14209
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14210
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14211
  ret void, !dbg !14212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14213 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !14218
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14215, metadata !DIExpression()), !dbg !14219
  %2 = tail call fastcc i32 @elapsed.137() #24, !dbg !14220
  call void @llvm.dbg.value(metadata i32 %2, metadata !14216, metadata !DIExpression()), !dbg !14219
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14221
  br i1 %3, label %14, label %4, !dbg !14223

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14224
  %6 = load i64, i64* %5, align 8, !dbg !14224
  %7 = sext i32 %2 to i64, !dbg !14225
  %8 = sub nsw i64 %6, %7, !dbg !14226
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14227
  br i1 %9, label %14, label %10, !dbg !14228

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14229
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14229
  %13 = trunc i64 %12 to i32, !dbg !14229
  call void @llvm.dbg.value(metadata i32 %13, metadata !14217, metadata !DIExpression()), !dbg !14219
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14231
  call void @llvm.dbg.value(metadata i32 %15, metadata !14217, metadata !DIExpression()), !dbg !14219
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14232
  %17 = icmp ne i32 %16, 0, !dbg !14234
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14235
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14235
  call void @llvm.dbg.value(metadata i32 %20, metadata !14217, metadata !DIExpression()), !dbg !14219
  ret i32 %20, !dbg !14236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.140(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14237 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14241, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14242, metadata !DIExpression()), !dbg !14243
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14244
  br i1 %2, label %5, label %3, !dbg !14245

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.141(%struct._dnode* noundef nonnull %0) #24, !dbg !14246
  br label %5, !dbg !14245

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14245
  ret %struct._dnode* %6, !dbg !14247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.141(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14248 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14250, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14251, metadata !DIExpression()), !dbg !14252
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14253
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14254
  br i1 %3, label %7, label %4, !dbg !14255

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14256
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14256
  br label %7, !dbg !14255

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14255
  ret %struct._dnode* %8, !dbg !14257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.142() unnamed_addr #5 !dbg !14258 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14262, metadata !DIExpression()), !dbg !14263
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.143() #24, !dbg !14264
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14264
  ret %struct._dnode* %3, !dbg !14265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.143() unnamed_addr #5 !dbg !14266 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14270, metadata !DIExpression()), !dbg !14271
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14272
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14273
  ret i1 %2, !dbg !14274
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14275 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14279, metadata !DIExpression()), !dbg !14284
  call void @llvm.dbg.value(metadata i32 -22, metadata !14280, metadata !DIExpression()), !dbg !14284
  call void @llvm.dbg.value(metadata i32 0, metadata !14281, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14065, metadata !DIExpression()) #23, !dbg !14286
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14288, !srcloc !14080
  call void @llvm.dbg.value(metadata i32 undef, metadata !14077, metadata !DIExpression()) #23, !dbg !14290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14286
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 -22, metadata !14280, metadata !DIExpression()), !dbg !14284
  call void @llvm.dbg.value(metadata i32 undef, metadata !14281, metadata !DIExpression()), !dbg !14285
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14280, metadata !DIExpression()), !dbg !14284
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.146(%struct._dnode* noundef %3) #24, !dbg !14291
  br i1 %4, label %5, label %6, !dbg !14295

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !14296
  call void @llvm.dbg.value(metadata i32 0, metadata !14280, metadata !DIExpression()), !dbg !14284
  br label %6, !dbg !14298

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !14284
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14288
  call void @llvm.dbg.value(metadata i32 %8, metadata !14077, metadata !DIExpression()) #23, !dbg !14290
  call void @llvm.dbg.value(metadata i32 %8, metadata !14071, metadata !DIExpression()) #23, !dbg !14286
  call void @llvm.dbg.value(metadata i32 %8, metadata !14283, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 %7, metadata !14280, metadata !DIExpression()), !dbg !14284
  call void @llvm.dbg.value(metadata i32 undef, metadata !14133, metadata !DIExpression()) #23, !dbg !14299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14138, metadata !DIExpression()) #23, !dbg !14299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14141, metadata !DIExpression()) #23, !dbg !14301
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14303, !srcloc !14147
  call void @llvm.dbg.value(metadata i32 undef, metadata !14281, metadata !DIExpression()), !dbg !14285
  ret i32 %7, !dbg !14304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.146(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14305 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14311, metadata !DIExpression()), !dbg !14312
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14313
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14313
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14314
  ret i1 %4, !dbg !14315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !14316 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14318, metadata !DIExpression()), !dbg !14319
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !14320
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14322
  br i1 %3, label %10, label %4, !dbg !14323

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14324
  %6 = load i64, i64* %5, align 8, !dbg !14324
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14326
  %8 = load i64, i64* %7, align 8, !dbg !14327
  %9 = add nsw i64 %8, %6, !dbg !14327
  store i64 %9, i64* %7, align 8, !dbg !14327
  br label %10, !dbg !14328

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14329
  tail call fastcc void @sys_dlist_remove.147(%struct._dnode* noundef %11) #24, !dbg !14330
  ret void, !dbg !14331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.147(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !14332 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14336, metadata !DIExpression()), !dbg !14339
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14340
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14340
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14337, metadata !DIExpression()), !dbg !14339
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14341
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14341
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14338, metadata !DIExpression()), !dbg !14339
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14342
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14343
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14344
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14345
  tail call fastcc void @sys_dnode_init.148(%struct._dnode* noundef %0) #24, !dbg !14346
  ret void, !dbg !14347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.148(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14348 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14350, metadata !DIExpression()), !dbg !14351
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14352
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14353
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14354
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14355
  ret void, !dbg !14356
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14357 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14363, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i64 0, metadata !14364, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 0, metadata !14365, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14065, metadata !DIExpression()) #23, !dbg !14370
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14372, !srcloc !14080
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14372
  call void @llvm.dbg.value(metadata i32 %3, metadata !14077, metadata !DIExpression()) #23, !dbg !14374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14374
  call void @llvm.dbg.value(metadata i32 %3, metadata !14071, metadata !DIExpression()) #23, !dbg !14370
  call void @llvm.dbg.value(metadata i32 %3, metadata !14367, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i64 0, metadata !14364, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()), !dbg !14369
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !14375
  call void @llvm.dbg.value(metadata i64 %4, metadata !14364, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 %3, metadata !14133, metadata !DIExpression()) #23, !dbg !14378
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14138, metadata !DIExpression()) #23, !dbg !14378
  call void @llvm.dbg.value(metadata i32 %3, metadata !14141, metadata !DIExpression()) #23, !dbg !14380
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14382, !srcloc !14147
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()), !dbg !14369
  ret i64 %4, !dbg !14383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14384 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14386, metadata !DIExpression()), !dbg !14390
  call void @llvm.dbg.value(metadata i64 0, metadata !14387, metadata !DIExpression()), !dbg !14390
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.149(%struct._timeout* noundef %0) #24, !dbg !14391
  br i1 %2, label %21, label %3, !dbg !14393

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !14394
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14388, metadata !DIExpression()), !dbg !14395
  call void @llvm.dbg.value(metadata i64 0, metadata !14387, metadata !DIExpression()), !dbg !14390
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14396
  br i1 %5, label %16, label %6, !dbg !14398

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14388, metadata !DIExpression()), !dbg !14395
  call void @llvm.dbg.value(metadata i64 %8, metadata !14387, metadata !DIExpression()), !dbg !14390
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14399
  %10 = load i64, i64* %9, align 8, !dbg !14399
  %11 = add nsw i64 %10, %8, !dbg !14401
  call void @llvm.dbg.value(metadata i64 %11, metadata !14387, metadata !DIExpression()), !dbg !14390
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14402
  br i1 %12, label %16, label %13, !dbg !14404

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !14405
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14388, metadata !DIExpression()), !dbg !14395
  call void @llvm.dbg.value(metadata i64 %11, metadata !14387, metadata !DIExpression()), !dbg !14390
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14396
  br i1 %15, label %16, label %6, !dbg !14398, !llvm.loop !14406

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14390
  call void @llvm.dbg.value(metadata i64 %17, metadata !14387, metadata !DIExpression()), !dbg !14390
  %18 = tail call fastcc i32 @elapsed.137() #24, !dbg !14408
  %19 = sext i32 %18 to i64, !dbg !14408
  %20 = sub nsw i64 %17, %19, !dbg !14409
  br label %21, !dbg !14410

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14390
  ret i64 %22, !dbg !14411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.149(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14412 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14416, metadata !DIExpression()), !dbg !14417
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14418
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.146(%struct._dnode* noundef %2) #24, !dbg !14419
  %4 = xor i1 %3, true, !dbg !14420
  ret i1 %4, !dbg !14421
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14422 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14424, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i64 0, metadata !14425, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i32 0, metadata !14426, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14065, metadata !DIExpression()) #23, !dbg !14431
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14433, !srcloc !14080
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14433
  call void @llvm.dbg.value(metadata i32 %3, metadata !14077, metadata !DIExpression()) #23, !dbg !14435
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14435
  call void @llvm.dbg.value(metadata i32 %3, metadata !14071, metadata !DIExpression()) #23, !dbg !14431
  call void @llvm.dbg.value(metadata i32 %3, metadata !14428, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata i64 0, metadata !14425, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i32 undef, metadata !14426, metadata !DIExpression()), !dbg !14430
  %4 = load i64, i64* @curr_tick, align 8, !dbg !14436
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !14439
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !14425, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14429
  call void @llvm.dbg.value(metadata i32 %3, metadata !14133, metadata !DIExpression()) #23, !dbg !14440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14138, metadata !DIExpression()) #23, !dbg !14440
  call void @llvm.dbg.value(metadata i32 %3, metadata !14141, metadata !DIExpression()) #23, !dbg !14442
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14444, !srcloc !14147
  call void @llvm.dbg.value(metadata i32 undef, metadata !14426, metadata !DIExpression()), !dbg !14430
  %6 = add i64 %5, %4, !dbg !14445
  ret i64 %6, !dbg !14446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14447 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14449, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.value(metadata i32 0, metadata !14450, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14065, metadata !DIExpression()) #23, !dbg !14455
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14457, !srcloc !14080
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14457
  call void @llvm.dbg.value(metadata i32 %2, metadata !14077, metadata !DIExpression()) #23, !dbg !14459
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14459
  call void @llvm.dbg.value(metadata i32 %2, metadata !14071, metadata !DIExpression()) #23, !dbg !14455
  call void @llvm.dbg.value(metadata i32 %2, metadata !14452, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 -1, metadata !14449, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.value(metadata i32 undef, metadata !14450, metadata !DIExpression()), !dbg !14454
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !14460
  call void @llvm.dbg.value(metadata i32 %3, metadata !14449, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.value(metadata i32 %2, metadata !14133, metadata !DIExpression()) #23, !dbg !14463
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14138, metadata !DIExpression()) #23, !dbg !14463
  call void @llvm.dbg.value(metadata i32 %2, metadata !14141, metadata !DIExpression()) #23, !dbg !14465
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14467, !srcloc !14147
  call void @llvm.dbg.value(metadata i32 undef, metadata !14450, metadata !DIExpression()), !dbg !14454
  ret i32 %3, !dbg !14468
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14471, metadata !DIExpression()), !dbg !14481
  call void @llvm.dbg.value(metadata i1 %1, metadata !14472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14481
  call void @llvm.dbg.value(metadata i32 0, metadata !14473, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14065, metadata !DIExpression()) #23, !dbg !14483
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14485, !srcloc !14080
  call void @llvm.dbg.value(metadata i32 undef, metadata !14077, metadata !DIExpression()) #23, !dbg !14487
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14487
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14483
  call void @llvm.dbg.value(metadata i32 undef, metadata !14475, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()), !dbg !14482
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !14488
  call void @llvm.dbg.value(metadata i32 %4, metadata !14476, metadata !DIExpression()), !dbg !14489
  call void @llvm.dbg.value(metadata i1 undef, metadata !14479, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14489
  %5 = icmp slt i32 %4, 2, !dbg !14490
  call void @llvm.dbg.value(metadata i1 %5, metadata !14480, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14489
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14491
  call void @llvm.dbg.value(metadata i1 %6, metadata !14479, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14489
  br i1 %7, label %11, label %8, !dbg !14491

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14493
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14493
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !14495
  br label %11, !dbg !14496

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14485
  call void @llvm.dbg.value(metadata i32 %12, metadata !14077, metadata !DIExpression()) #23, !dbg !14487
  call void @llvm.dbg.value(metadata i32 %12, metadata !14071, metadata !DIExpression()) #23, !dbg !14483
  call void @llvm.dbg.value(metadata i32 %12, metadata !14475, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.value(metadata i32 undef, metadata !14133, metadata !DIExpression()) #23, !dbg !14497
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14138, metadata !DIExpression()) #23, !dbg !14497
  call void @llvm.dbg.value(metadata i32 undef, metadata !14141, metadata !DIExpression()) #23, !dbg !14499
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14501, !srcloc !14147
  call void @llvm.dbg.value(metadata i32 1, metadata !14473, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()), !dbg !14482
  ret void, !dbg !14502
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14507, metadata !DIExpression()), !dbg !14512
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !14513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14065, metadata !DIExpression()) #23, !dbg !14514
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14516, !srcloc !14080
  call void @llvm.dbg.value(metadata i32 undef, metadata !14077, metadata !DIExpression()) #23, !dbg !14518
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14518
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()), !dbg !14512
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14512
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()), !dbg !14512
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !14519
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14520
  br i1 %4, label %28, label %5, !dbg !14521

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14522
  %10 = load i64, i64* %9, align 8, !dbg !14522
  %11 = sext i32 %8 to i64, !dbg !14523
  %12 = icmp sgt i64 %10, %11, !dbg !14524
  br i1 %12, label %26, label %13, !dbg !14525

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14512
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14509, metadata !DIExpression()), !dbg !14526
  %15 = trunc i64 %10 to i32, !dbg !14527
  call void @llvm.dbg.value(metadata i32 %15, metadata !14511, metadata !DIExpression()), !dbg !14526
  %16 = sext i32 %15 to i64, !dbg !14528
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14529
  %18 = add i64 %17, %16, !dbg !14529
  store i64 %18, i64* @curr_tick, align 8, !dbg !14529
  store i64 0, i64* %9, align 8, !dbg !14530
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !14531
  call void @llvm.dbg.value(metadata i32 %14, metadata !14133, metadata !DIExpression()) #23, !dbg !14532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14138, metadata !DIExpression()) #23, !dbg !14532
  call void @llvm.dbg.value(metadata i32 %14, metadata !14141, metadata !DIExpression()) #23, !dbg !14534
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14536, !srcloc !14147
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14537
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14537
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !14538
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14065, metadata !DIExpression()) #23, !dbg !14539
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14541, !srcloc !14080
  call void @llvm.dbg.value(metadata i32 undef, metadata !14077, metadata !DIExpression()) #23, !dbg !14543
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14543
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14539
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()), !dbg !14512
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14544
  %23 = sub nsw i32 %22, %15, !dbg !14544
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14512
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()), !dbg !14512
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !14519
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14520
  br i1 %25, label %28, label %5, !dbg !14521, !llvm.loop !14545

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14547
  store i64 %27, i64* %9, align 8, !dbg !14547
  br label %32, !dbg !14550

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14512
  %31 = sext i32 %30 to i64, !dbg !14551
  br label %32, !dbg !14551

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14551
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14512
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14552
  %37 = add i64 %36, %33, !dbg !14552
  store i64 %37, i64* @curr_tick, align 8, !dbg !14552
  store i32 0, i32* @announce_remaining, align 4, !dbg !14553
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !14554
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !14555
  call void @llvm.dbg.value(metadata i32 %35, metadata !14133, metadata !DIExpression()) #23, !dbg !14556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14138, metadata !DIExpression()) #23, !dbg !14556
  call void @llvm.dbg.value(metadata i32 %35, metadata !14141, metadata !DIExpression()) #23, !dbg !14558
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14560, !srcloc !14147
  ret void, !dbg !14561
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14562 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14566, metadata !DIExpression()), !dbg !14570
  call void @llvm.dbg.value(metadata i32 0, metadata !14567, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14065, metadata !DIExpression()) #23, !dbg !14572
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14574, !srcloc !14080
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14574
  call void @llvm.dbg.value(metadata i32 %2, metadata !14077, metadata !DIExpression()) #23, !dbg !14576
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14576
  call void @llvm.dbg.value(metadata i32 %2, metadata !14071, metadata !DIExpression()) #23, !dbg !14572
  call void @llvm.dbg.value(metadata i32 %2, metadata !14569, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i64 0, metadata !14566, metadata !DIExpression()), !dbg !14570
  call void @llvm.dbg.value(metadata i32 undef, metadata !14567, metadata !DIExpression()), !dbg !14571
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14577
  %4 = tail call fastcc i32 @elapsed.137() #24, !dbg !14580
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14570
  call void @llvm.dbg.value(metadata i32 %2, metadata !14133, metadata !DIExpression()) #23, !dbg !14581
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14138, metadata !DIExpression()) #23, !dbg !14581
  call void @llvm.dbg.value(metadata i32 %2, metadata !14141, metadata !DIExpression()) #23, !dbg !14583
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14585, !srcloc !14147
  call void @llvm.dbg.value(metadata i32 undef, metadata !14567, metadata !DIExpression()), !dbg !14571
  %5 = sext i32 %4 to i64, !dbg !14580
  %6 = add i64 %3, %5, !dbg !14586
  ret i64 %6, !dbg !14587
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14588 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !14589
  %2 = trunc i64 %1 to i32, !dbg !14590
  ret i32 %2, !dbg !14591
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14592 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !14593
  ret i64 %1, !dbg !14594
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14597, metadata !DIExpression()), !dbg !14604
  %2 = icmp eq i32 %0, 0, !dbg !14605
  br i1 %2, label %10, label %3, !dbg !14607

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !14608
  call void @llvm.dbg.value(metadata i32 %4, metadata !14598, metadata !DIExpression()), !dbg !14604
  %5 = mul i32 %0, 84, !dbg !14609
  call void @llvm.dbg.value(metadata i32 %5, metadata !14599, metadata !DIExpression()), !dbg !14604
  br label %6, !dbg !14610

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !14611
  call void @llvm.dbg.value(metadata i32 %7, metadata !14600, metadata !DIExpression()), !dbg !14612
  %8 = sub i32 %7, %4, !dbg !14613
  %9 = icmp ult i32 %8, %5, !dbg !14615
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14617 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !14618
  ret i32 %1, !dbg !14619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14620 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !14622
  ret i32 %1, !dbg !14623
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14624 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14628, metadata !DIExpression()), !dbg !14630
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14631

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !14632
  br label %14, !dbg !14636

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14629, metadata !DIExpression()), !dbg !14630
  %6 = icmp slt i64 %2, -1, !dbg !14637
  br i1 %6, label %7, label %9, !dbg !14640

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14641
  br label %14, !dbg !14642

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !14644
  %11 = icmp ugt i64 %2, 1, !dbg !14645
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14645
  %13 = add nsw i64 %10, %12, !dbg !14646
  br label %14, !dbg !14647

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14648
  ret i64 %15, !dbg !14649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14650 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.158, i32 0, i32 0)) #25, !dbg !14652
  ret void, !dbg !14653
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { argmemonly nofree nounwind willreturn writeonly }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!624, !2, !2254, !2256, !27, !2258, !2260, !2298, !111, !168, !2300, !2311, !2357, !2359, !2387, !2415, !2458, !2530, !2575, !197, !351, !2603, !387, !397, !422, !662, !2608, !801, !867, !1173, !1452, !2649, !1567, !1657, !2651, !2714, !2781, !1711, !2784, !1718, !2082, !2802, !2102, !2804, !2217, !2807}
!llvm.ident = !{!2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809}
!llvm.module.flags = !{!2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 407, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 398, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 400, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 401, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 402, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 403, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 404, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 405, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 406, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "static_regions", scope: !197, file: !206, line: 62, type: !347, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !202, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!199 = !{!200, !103, !121, !102}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !201, line: 214, baseType: !32)
!201 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !{!203, !195}
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !205, file: !206, line: 198, type: !333, isLocal: true, isDefinition: true)
!205 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !206, file: !206, line: 175, type: !207, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !328)
!206 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!207 = !DISubroutineType(types: !208)
!208 = !{null, !209}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !282, !295, !296, !297, !298, !304, !323}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !210, file: !211, line: 247, baseType: !214, size: 384)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !215)
!215 = !{!216, !244, !252, !253, !254, !267, !268, !269}
!216 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 60, baseType: !217, size: 64)
!217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 60, size: 64, elements: !218)
!218 = !{!219, !235}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !217, file: !211, line: 61, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !222)
!221 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !223)
!223 = !{!224, !230}
!224 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 38, baseType: !225, size: 32)
!225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 38, size: 32, elements: !226)
!226 = !{!227, !229}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !225, file: !221, line: 39, baseType: !228, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !225, file: !221, line: 40, baseType: !228, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 42, baseType: !231, size: 32, offset: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 42, size: 32, elements: !232)
!232 = !{!233, !234}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !231, file: !221, line: 43, baseType: !228, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !231, file: !221, line: 44, baseType: !228, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !217, file: !211, line: 62, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !238)
!237 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !236, file: !237, line: 50, baseType: !240, size: 64)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 64, elements: !242)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!242 = !{!243}
!243 = !DISubrange(count: 2)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !214, file: !211, line: 68, baseType: !245, size: 32, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !248, file: !247, line: 232, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !222)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !214, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !214, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!254 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 90, baseType: !255, size: 16, offset: 112)
!255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 90, size: 16, elements: !256)
!256 = !{!257, !264}
!257 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !211, line: 91, baseType: !258, size: 16)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !211, line: 91, size: 16, elements: !259)
!259 = !{!260, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !258, file: !211, line: 96, baseType: !261, size: 8)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !262)
!262 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !258, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !255, file: !211, line: 100, baseType: !265, size: 16)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !266)
!266 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !214, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !214, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !214, file: !211, line: 131, baseType: !270, size: 192, offset: 192)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !271)
!271 = !{!272, !273, !279}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !270, file: !247, line: 245, baseType: !220, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !270, file: !247, line: 246, baseType: !274, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DISubroutineType(types: !277)
!277 = !{null, !278}
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !270, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !281)
!281 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !210, file: !211, line: 250, baseType: !283, size: 288, offset: 384)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !285)
!284 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!285 = !{!286, !287, !288, !289, !290, !291, !292, !293, !294}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !283, file: !284, line: 26, baseType: !121, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !283, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !283, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !283, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !283, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !283, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !283, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !283, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !283, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !210, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !210, file: !211, line: 256, baseType: !246, size: 64, offset: 704)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !210, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !210, file: !211, line: 300, baseType: !299, size: 96, offset: 800)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !300)
!300 = !{!301, !302, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !299, file: !211, line: 153, baseType: !22, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !299, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !299, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !210, file: !211, line: 325, baseType: !305, size: 32, offset: 896)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !318, !319}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !306, file: !307, line: 5074, baseType: !310, size: 96)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !312)
!311 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!312 = !{!313, !316, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !310, file: !311, line: 57, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !311, line: 57, flags: DIFlagFwdDecl)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !310, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !310, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !306, file: !307, line: 5075, baseType: !246, size: 64, offset: 96)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !306, file: !307, line: 5076, baseType: !320, offset: 160)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !{}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !210, file: !211, line: 343, baseType: !324, size: 64, offset: 928)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !324, file: !284, line: 63, baseType: !121, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !324, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!328 = !{!329, !330, !331, !332}
!329 = !DILocalVariable(name: "thread", arg: 1, scope: !205, file: !206, line: 175, type: !209)
!330 = !DILocalVariable(name: "region_num", scope: !205, file: !206, line: 200, type: !154)
!331 = !DILocalVariable(name: "guard_start", scope: !205, file: !206, line: 265, type: !22)
!332 = !DILocalVariable(name: "guard_size", scope: !205, file: !206, line: 266, type: !200)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 96, elements: !345)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !336)
!335 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !334, file: !335, line: 53, baseType: !22, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !334, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !334, file: !335, line: 55, baseType: !340, size: 32, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !342)
!341 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !342, file: !341, line: 150, baseType: !121, size: 32)
!345 = !{!346}
!346 = !DISubrange(count: 1)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 96, elements: !345)
!348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !351, file: !384, line: 39, type: !154, isLocal: true, isDefinition: true)
!351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !353, globals: !383, splitDebugInlining: false, nameTableKind: None)
!352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!353 = !{!354, !102, !103, !371, !154}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !356, line: 1226, baseType: !357)
!356 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 1213, size: 352, elements: !358)
!358 = !{!359, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !357, file: !356, line: 1215, baseType: !360, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !357, file: !356, line: 1216, baseType: !120, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !357, file: !356, line: 1217, baseType: !120, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !357, file: !356, line: 1218, baseType: !120, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !357, file: !356, line: 1219, baseType: !120, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !357, file: !356, line: 1220, baseType: !120, size: 32, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !357, file: !356, line: 1221, baseType: !120, size: 32, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !357, file: !356, line: 1222, baseType: !120, size: 32, offset: 224)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !357, file: !356, line: 1223, baseType: !120, size: 32, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !357, file: !356, line: 1224, baseType: !120, size: 32, offset: 288)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !357, file: !356, line: 1225, baseType: !120, size: 32, offset: 320)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !375)
!374 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !{!376, !377, !378}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !373, file: !374, line: 29, baseType: !121, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !373, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !373, file: !374, line: 37, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !380, file: !341, line: 143, baseType: !121, size: 32)
!383 = !{!349}
!384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !387, file: !394, line: 21, type: !106, isLocal: true, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !393, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!389 = !{!390, !103, !102}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !392, line: 22, baseType: !103)
!392 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!385}
!394 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !397, file: !402, line: 13, type: !419, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !399, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!399 = !{!400, !395}
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "mpu_config", scope: !397, file: !402, line: 37, type: !403, isLocal: false, isDefinition: true)
!402 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !374, line: 41, size: 64, elements: !405)
!405 = !{!406, !407}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !404, file: !374, line: 43, baseType: !121, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !404, file: !374, line: 45, baseType: !408, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !411)
!411 = !{!412, !413, !414}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !410, file: !374, line: 29, baseType: !121, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !410, file: !374, line: 37, baseType: !415, size: 32, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !416)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !417)
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !416, file: !341, line: 143, baseType: !121, size: 32)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 192, elements: !242)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !422, file: !535, line: 72, type: !619, isLocal: true, isDefinition: true)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !424, retainedTypes: !521, globals: !532, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!424 = !{!30, !425}
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !426)
!426 = !{!427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520}
!427 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!428 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!429 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!430 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!431 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!432 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!433 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!434 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!435 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!436 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!437 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!438 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!439 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!440 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!441 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!442 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!443 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!444 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!445 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!446 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!447 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!448 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!449 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!450 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!451 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!452 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!453 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!454 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!455 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!456 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!457 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!458 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!459 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!460 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!461 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!462 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!463 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!464 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!465 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!466 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!467 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!468 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!469 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!470 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!471 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!472 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!473 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!474 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!475 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!476 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!477 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!478 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!479 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!480 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!481 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!482 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!483 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!484 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!485 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!486 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!487 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!488 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!489 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!490 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!491 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!492 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!493 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!494 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!495 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!496 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!497 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!498 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!499 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!500 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!501 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!502 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!503 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!504 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!505 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!506 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!507 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!508 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!509 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!510 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!511 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!512 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!513 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!514 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!515 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!516 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!517 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!518 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!519 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!520 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!521 = !{!200, !103, !102, !522}
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 392, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 384, size: 192, elements: !525)
!525 = !{!526, !527, !528, !529, !530, !531}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !524, file: !116, line: 386, baseType: !120, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !524, file: !116, line: 387, baseType: !120, size: 32, offset: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !524, file: !116, line: 388, baseType: !120, size: 32, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !524, file: !116, line: 389, baseType: !120, size: 32, offset: 96)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !524, file: !116, line: 390, baseType: !120, size: 32, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !524, file: !116, line: 391, baseType: !120, size: 32, offset: 160)
!532 = !{!533, !539, !555, !566, !583, !420, !585, !599, !601, !603, !605, !607, !609, !611, !613, !615, !617}
!533 = !DIGlobalVariableExpression(var: !534, expr: !DIExpression())
!534 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !422, file: !535, line: 424, type: !536, isLocal: false, isDefinition: true, align: 16)
!535 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !537)
!537 = !{!538}
!538 = !DISubrange(count: 4)
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !422, file: !535, line: 424, type: !541, isLocal: false, isDefinition: true, align: 32)
!541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !542)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !543)
!543 = !{!544, !545, !546, !547, !553, !554}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !542, file: !141, line: 380, baseType: !144, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !542, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !542, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !542, file: !141, line: 386, baseType: !548, size: 32, offset: 96)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !550)
!550 = !{!551, !552}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !549, file: !141, line: 359, baseType: !154, size: 8)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !549, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !542, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !542, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!555 = !DIGlobalVariableExpression(var: !556, expr: !DIExpression())
!556 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !422, file: !535, line: 424, type: !557, isLocal: true, isDefinition: true, align: 32)
!557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !559)
!559 = !{!560, !565}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !558, file: !132, line: 60, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{!103, !564}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !558, file: !132, line: 65, baseType: !564, size: 32, offset: 32)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "exti_data", scope: !422, file: !535, line: 423, type: !568, isLocal: true, isDefinition: true)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !535, line: 107, size: 1472, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !568, file: !535, line: 109, baseType: !571, size: 1472)
!571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !572, size: 1472, elements: !581)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !535, line: 101, size: 64, elements: !573)
!573 = !{!574, !580}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !572, file: !535, line: 102, baseType: !575, size: 32)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !576, line: 63, baseType: !577)
!576 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 32)
!578 = !DISubroutineType(types: !579)
!579 = !{null, !103, !102}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !572, file: !535, line: 103, baseType: !102, size: 32, offset: 32)
!581 = !{!582}
!582 = !DISubrange(count: 23)
!583 = !DIGlobalVariableExpression(var: !584, expr: !DIExpression())
!584 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !422, file: !535, line: 424, type: !549, isLocal: true, isDefinition: true, align: 8)
!585 = !DIGlobalVariableExpression(var: !586, expr: !DIExpression())
!586 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !587, file: !535, line: 493, type: !592, isLocal: true, isDefinition: true, align: 32)
!587 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !535, file: !535, line: 460, type: !588, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !590)
!588 = !DISubroutineType(types: !589)
!589 = !{null, !564}
!590 = !{!591}
!591 = !DILocalVariable(name: "dev", arg: 1, scope: !587, file: !535, line: 460, type: !564)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !593)
!593 = !{!594, !596, !597, !598}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !592, file: !10, line: 55, baseType: !595, size: 32)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !592, file: !10, line: 57, baseType: !595, size: 32, offset: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !592, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !592, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !587, file: !535, line: 497, type: !592, isLocal: true, isDefinition: true, align: 32)
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !587, file: !535, line: 507, type: !592, isLocal: true, isDefinition: true, align: 32)
!603 = !DIGlobalVariableExpression(var: !604, expr: !DIExpression())
!604 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !587, file: !535, line: 512, type: !592, isLocal: true, isDefinition: true, align: 32)
!605 = !DIGlobalVariableExpression(var: !606, expr: !DIExpression())
!606 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !587, file: !535, line: 516, type: !592, isLocal: true, isDefinition: true, align: 32)
!607 = !DIGlobalVariableExpression(var: !608, expr: !DIExpression())
!608 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !587, file: !535, line: 523, type: !592, isLocal: true, isDefinition: true, align: 32)
!609 = !DIGlobalVariableExpression(var: !610, expr: !DIExpression())
!610 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !587, file: !535, line: 527, type: !592, isLocal: true, isDefinition: true, align: 32)
!611 = !DIGlobalVariableExpression(var: !612, expr: !DIExpression())
!612 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !587, file: !535, line: 581, type: !592, isLocal: true, isDefinition: true, align: 32)
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !587, file: !535, line: 586, type: !592, isLocal: true, isDefinition: true, align: 32)
!615 = !DIGlobalVariableExpression(var: !616, expr: !DIExpression())
!616 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !587, file: !535, line: 591, type: !592, isLocal: true, isDefinition: true, align: 32)
!617 = !DIGlobalVariableExpression(var: !618, expr: !DIExpression())
!618 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !587, file: !535, line: 595, type: !592, isLocal: true, isDefinition: true, align: 32)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 736, elements: !581)
!620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !621)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 163, baseType: !425)
!622 = !DIGlobalVariableExpression(var: !623, expr: !DIExpression())
!623 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !624, file: !629, line: 25, type: !657, isLocal: false, isDefinition: true, align: 16)
!624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !626, splitDebugInlining: false, nameTableKind: None)
!625 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!626 = !{!627, !622, !633, !635, !637, !639, !641, !643, !645, !647, !649, !651, !653, !655}
!627 = !DIGlobalVariableExpression(var: !628, expr: !DIExpression())
!628 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !624, file: !629, line: 20, type: !630, isLocal: false, isDefinition: true, align: 16)
!629 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 240, elements: !631)
!631 = !{!632}
!632 = !DISubrange(count: 15)
!633 = !DIGlobalVariableExpression(var: !634, expr: !DIExpression())
!634 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !624, file: !629, line: 32, type: !536, isLocal: false, isDefinition: true, align: 16)
!635 = !DIGlobalVariableExpression(var: !636, expr: !DIExpression())
!636 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !624, file: !629, line: 39, type: !536, isLocal: false, isDefinition: true, align: 16)
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !624, file: !629, line: 46, type: !536, isLocal: false, isDefinition: true, align: 16)
!639 = !DIGlobalVariableExpression(var: !640, expr: !DIExpression())
!640 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !624, file: !629, line: 53, type: !536, isLocal: false, isDefinition: true, align: 16)
!641 = !DIGlobalVariableExpression(var: !642, expr: !DIExpression())
!642 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !624, file: !629, line: 60, type: !536, isLocal: false, isDefinition: true, align: 16)
!643 = !DIGlobalVariableExpression(var: !644, expr: !DIExpression())
!644 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !624, file: !629, line: 67, type: !536, isLocal: false, isDefinition: true, align: 16)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !624, file: !629, line: 74, type: !536, isLocal: false, isDefinition: true, align: 16)
!647 = !DIGlobalVariableExpression(var: !648, expr: !DIExpression())
!648 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !624, file: !629, line: 81, type: !536, isLocal: false, isDefinition: true, align: 16)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !624, file: !629, line: 88, type: !536, isLocal: false, isDefinition: true, align: 16)
!651 = !DIGlobalVariableExpression(var: !652, expr: !DIExpression())
!652 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !624, file: !629, line: 95, type: !536, isLocal: false, isDefinition: true, align: 16)
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !624, file: !629, line: 102, type: !536, isLocal: false, isDefinition: true, align: 16)
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !624, file: !629, line: 109, type: !536, isLocal: false, isDefinition: true, align: 16)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !658)
!658 = !{!659}
!659 = !DISubrange(count: 3)
!660 = !DIGlobalVariableExpression(var: !661, expr: !DIExpression())
!661 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !662, file: !727, line: 398, type: !760, isLocal: true, isDefinition: true)
!662 = distinct !DICompileUnit(language: DW_LANG_C99, file: !663, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !664, retainedTypes: !677, globals: !724, splitDebugInlining: false, nameTableKind: None)
!663 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!664 = !{!665, !30, !670}
!665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !666, line: 197, baseType: !32, size: 32, elements: !667)
!666 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!667 = !{!668, !669}
!668 = !DIEnumerator(name: "SUCCESS", value: 0)
!669 = !DIEnumerator(name: "ERROR", value: 1)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !671, line: 44, baseType: !32, size: 32, elements: !672)
!671 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!672 = !{!673, !674, !675, !676}
!673 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!674 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!675 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!676 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!677 = !{!102, !103, !121, !678, !717, !723}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !681)
!681 = !{!682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !680, file: !116, line: 552, baseType: !120, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !680, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !680, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !680, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !680, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !680, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !680, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !680, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !680, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !680, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !680, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !242)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !680, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !680, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !680, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !680, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !680, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !680, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !680, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !680, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !680, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !680, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !680, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !680, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !680, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !680, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !680, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !680, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !680, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !680, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !680, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !680, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !680, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !680, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !680, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !719, line: 343, size: 64, elements: !720)
!719 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!720 = !{!721, !722}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !718, file: !719, line: 344, baseType: !121, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !718, file: !719, line: 345, baseType: !121, size: 32, offset: 32)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!724 = !{!725, !731, !747, !758, !660}
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !662, file: !727, line: 752, type: !728, isLocal: false, isDefinition: true, align: 16)
!727 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 800, elements: !729)
!729 = !{!730}
!730 = !DISubrange(count: 50)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !662, file: !727, line: 752, type: !733, isLocal: false, isDefinition: true, align: 32)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !735)
!735 = !{!736, !737, !738, !739, !745, !746}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !141, line: 380, baseType: !144, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !734, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !734, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !734, file: !141, line: 386, baseType: !740, size: 32, offset: 96)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 32)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !742)
!742 = !{!743, !744}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !741, file: !141, line: 359, baseType: !154, size: 8)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !741, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !734, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !734, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !662, file: !727, line: 752, type: !749, isLocal: true, isDefinition: true, align: 32)
!749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !750)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !751)
!751 = !{!752, !757}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !750, file: !132, line: 60, baseType: !753, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!754 = !DISubroutineType(types: !755)
!755 = !{!103, !756}
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !750, file: !132, line: 65, baseType: !756, size: 32, offset: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !662, file: !727, line: 752, type: !741, isLocal: true, isDefinition: true, align: 8)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !671, line: 100, size: 224, elements: !761)
!761 = !{!762, !768, !769, !778, !783, !788, !794}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !760, file: !671, line: 101, baseType: !763, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !671, line: 76, baseType: !764)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 32)
!765 = !DISubroutineType(types: !766)
!766 = !{!103, !756, !767}
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !671, line: 56, baseType: !102)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !760, file: !671, line: 102, baseType: !763, size: 32, offset: 32)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !760, file: !671, line: 103, baseType: !770, size: 32, offset: 64)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !671, line: 83, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 32)
!772 = !DISubroutineType(types: !773)
!773 = !{!103, !756, !767, !774, !102}
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !671, line: 72, baseType: !775)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!776 = !DISubroutineType(types: !777)
!777 = !{null, !756, !767, !102}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !760, file: !671, line: 104, baseType: !779, size: 32, offset: 96)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !671, line: 79, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!781 = !DISubroutineType(types: !782)
!782 = !{!103, !756, !767, !723}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !760, file: !671, line: 105, baseType: !784, size: 32, offset: 128)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !671, line: 88, baseType: !785)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = !DISubroutineType(types: !787)
!787 = !{!670, !756, !767}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !760, file: !671, line: 106, baseType: !789, size: 32, offset: 160)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !671, line: 92, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!791 = !DISubroutineType(types: !792)
!792 = !{!103, !756, !767, !793}
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !671, line: 64, baseType: !102)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !760, file: !671, line: 107, baseType: !795, size: 32, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !671, line: 96, baseType: !796)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 32)
!797 = !DISubroutineType(types: !798)
!798 = !{!103, !756, !767, !102}
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !801, file: !858, line: 603, type: !860, isLocal: true, isDefinition: true, align: 32)
!801 = distinct !DICompileUnit(language: DW_LANG_C99, file: !802, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !803, globals: !855, splitDebugInlining: false, nameTableKind: None)
!802 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!803 = !{!102, !103, !804}
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !806)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !807, line: 336, size: 160, elements: !808)
!807 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!808 = !{!809, !829, !833, !837, !850}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !806, file: !807, line: 365, baseType: !810, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!811 = !DISubroutineType(types: !812)
!812 = !{!103, !813, !828}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !816)
!816 = !{!817, !818, !819, !820, !826, !827}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !815, file: !141, line: 380, baseType: !144, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !815, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !815, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !815, file: !141, line: 386, baseType: !821, size: 32, offset: 96)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 32)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !823)
!823 = !{!824, !825}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !822, file: !141, line: 359, baseType: !154, size: 8)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !822, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !815, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !815, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !806, file: !807, line: 366, baseType: !830, size: 32, offset: 32)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 32)
!831 = !DISubroutineType(types: !832)
!832 = !{null, !813, !155}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !806, file: !807, line: 374, baseType: !834, size: 32, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 32)
!835 = !DISubroutineType(types: !836)
!836 = !{!103, !813}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !806, file: !807, line: 377, baseType: !838, size: 32, offset: 96)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 32)
!839 = !DISubroutineType(types: !840)
!840 = !{!103, !813, !841}
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !807, line: 122, size: 64, elements: !844)
!844 = !{!845, !846, !847, !848, !849}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !843, file: !807, line: 123, baseType: !121, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !843, file: !807, line: 124, baseType: !154, size: 8, offset: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !843, file: !807, line: 125, baseType: !154, size: 8, offset: 40)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !843, file: !807, line: 126, baseType: !154, size: 8, offset: 48)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !843, file: !807, line: 127, baseType: !154, size: 8, offset: 56)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !806, file: !807, line: 379, baseType: !851, size: 32, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 32)
!852 = !DISubroutineType(types: !853)
!853 = !{!103, !813, !854}
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!855 = !{!799, !856}
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !801, file: !858, line: 38, type: !859, isLocal: true, isDefinition: true)
!858 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !861)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !862)
!862 = !{!863, !864}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !861, file: !132, line: 60, baseType: !834, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !861, file: !132, line: 65, baseType: !813, size: 32, offset: 32)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !867, file: !1039, line: 762, type: !1148, isLocal: true, isDefinition: true)
!867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !869, retainedTypes: !887, globals: !1036, splitDebugInlining: false, nameTableKind: None)
!868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!869 = !{!30, !870, !876, !881, !670}
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !871, line: 506, baseType: !32, size: 32, elements: !872)
!871 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!872 = !{!873, !874, !875}
!873 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!874 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!875 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!876 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !871, line: 512, baseType: !32, size: 32, elements: !877)
!877 = !{!878, !879, !880}
!878 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!879 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!880 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !576, line: 43, baseType: !32, size: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!884 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!885 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!886 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!887 = !{!102, !103, !888, !958, !963, !923, !876, !870, !968, !969, !121, !983, !938, !995, !996, !997}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !871, line: 523, size: 288, elements: !891)
!891 = !{!892, !913, !919, !924, !928, !929, !930, !934, !954}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !890, file: !871, line: 524, baseType: !893, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!894 = !DISubroutineType(types: !895)
!895 = !{!103, !896, !911, !912}
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !899)
!899 = !{!900, !901, !902, !903, !909, !910}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !898, file: !141, line: 380, baseType: !144, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !898, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !898, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !898, file: !141, line: 386, baseType: !904, size: 32, offset: 96)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !906)
!906 = !{!907, !908}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !905, file: !141, line: 359, baseType: !154, size: 8)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !905, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !898, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !898, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !871, line: 237, baseType: !154)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !871, line: 257, baseType: !121)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !890, file: !871, line: 530, baseType: !914, size: 32, offset: 32)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!103, !896, !917}
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !871, line: 229, baseType: !121)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !890, file: !871, line: 532, baseType: !920, size: 32, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!921 = !DISubroutineType(types: !922)
!922 = !{!103, !896, !923, !918}
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !871, line: 216, baseType: !121)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !890, file: !871, line: 535, baseType: !925, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DISubroutineType(types: !927)
!927 = !{!103, !896, !923}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !890, file: !871, line: 537, baseType: !925, size: 32, offset: 128)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !890, file: !871, line: 539, baseType: !925, size: 32, offset: 160)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !890, file: !871, line: 541, baseType: !931, size: 32, offset: 192)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = !DISubroutineType(types: !933)
!933 = !{!103, !896, !911, !870, !876}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !890, file: !871, line: 544, baseType: !935, size: 32, offset: 224)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DISubroutineType(types: !937)
!937 = !{!103, !896, !938, !157}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !871, line: 478, size: 96, elements: !940)
!940 = !{!941, !948, !953}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !939, file: !871, line: 482, baseType: !942, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !943, line: 33, baseType: !944)
!943 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !943, line: 29, size: 32, elements: !945)
!945 = !{!946}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !944, file: !943, line: 30, baseType: !947, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !939, file: !871, line: 485, baseType: !949, size: 32, offset: 32)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !871, line: 464, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DISubroutineType(types: !952)
!952 = !{null, !896, !938, !923}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !939, file: !871, line: 493, baseType: !923, size: 32, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !890, file: !871, line: 547, baseType: !955, size: 32, offset: 256)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!121, !896}
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !960)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !871, line: 428, size: 32, elements: !961)
!961 = !{!962}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !960, file: !871, line: 434, baseType: !923, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !871, line: 441, size: 32, elements: !966)
!966 = !{!967}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !965, file: !871, line: 447, baseType: !923, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 469, baseType: !971)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 458, size: 320, elements: !972)
!972 = !{!973, !974, !975, !976, !977, !978, !979, !980, !981}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !971, file: !116, line: 460, baseType: !120, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !971, file: !116, line: 461, baseType: !120, size: 32, offset: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !971, file: !116, line: 462, baseType: !120, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !971, file: !116, line: 463, baseType: !120, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !971, file: !116, line: 464, baseType: !120, size: 32, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !971, file: !116, line: 465, baseType: !120, size: 32, offset: 160)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !971, file: !116, line: 466, baseType: !120, size: 32, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !971, file: !116, line: 467, baseType: !120, size: 32, offset: 224)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !971, file: !116, line: 468, baseType: !982, size: 64, offset: 256)
!982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !242)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 484, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 475, size: 384, elements: !986)
!986 = !{!987, !988, !989, !991, !992, !993, !994}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !985, file: !116, line: 477, baseType: !120, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !985, file: !116, line: 478, baseType: !120, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !985, file: !116, line: 479, baseType: !990, size: 128, offset: 64)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !537)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !985, file: !116, line: 480, baseType: !693, size: 64, offset: 192)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !985, file: !116, line: 481, baseType: !120, size: 32, offset: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !985, file: !116, line: 482, baseType: !693, size: 64, offset: 288)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !985, file: !116, line: 483, baseType: !120, size: 32, offset: 352)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !671, line: 100, size: 224, elements: !1000)
!1000 = !{!1001, !1006, !1007, !1016, !1021, !1026, !1031}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !999, file: !671, line: 101, baseType: !1002, size: 32)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !671, line: 76, baseType: !1003)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!103, !896, !767}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !999, file: !671, line: 102, baseType: !1002, size: 32, offset: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !999, file: !671, line: 103, baseType: !1008, size: 32, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !671, line: 83, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!103, !896, !767, !1012, !102}
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !671, line: 72, baseType: !1013)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{null, !896, !767, !102}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !999, file: !671, line: 104, baseType: !1017, size: 32, offset: 96)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !671, line: 79, baseType: !1018)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!103, !896, !767, !723}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !999, file: !671, line: 105, baseType: !1022, size: 32, offset: 128)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !671, line: 88, baseType: !1023)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!670, !896, !767}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !999, file: !671, line: 106, baseType: !1027, size: 32, offset: 160)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !671, line: 92, baseType: !1028)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!103, !896, !767, !793}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !999, file: !671, line: 107, baseType: !1032, size: 32, offset: 192)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !671, line: 96, baseType: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!103, !896, !767, !102}
!1036 = !{!1037, !1043, !1045, !1055, !1057, !1059, !1061, !1063, !1065, !1067, !1072, !1074, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1090, !1092, !1094, !1096, !1098, !1100, !1114, !1116, !1118, !1120, !1122, !1124, !1126, !1128, !1130, !1132, !1134, !1136, !1138, !1140, !1142, !865, !1144, !1146, !1159, !1161, !1163, !1165, !1167, !1169}
!1037 = !DIGlobalVariableExpression(var: !1038, expr: !DIExpression())
!1038 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !867, file: !1039, line: 762, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1039 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1041)
!1041 = !{!1042}
!1042 = !DISubrange(count: 5)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !867, file: !1039, line: 762, type: !897, isLocal: false, isDefinition: true, align: 32)
!1045 = !DIGlobalVariableExpression(var: !1046, expr: !DIExpression())
!1046 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !867, file: !1039, line: 762, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1048)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1049)
!1049 = !{!1050, !1054}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1048, file: !132, line: 60, baseType: !1051, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!103, !896}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1048, file: !132, line: 65, baseType: !896, size: 32, offset: 32)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !867, file: !1039, line: 766, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !867, file: !1039, line: 766, type: !897, isLocal: false, isDefinition: true, align: 32)
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !867, file: !1039, line: 766, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1061 = !DIGlobalVariableExpression(var: !1062, expr: !DIExpression())
!1062 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !867, file: !1039, line: 770, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !867, file: !1039, line: 770, type: !897, isLocal: false, isDefinition: true, align: 32)
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !867, file: !1039, line: 770, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !867, file: !1039, line: 774, type: !1069, isLocal: false, isDefinition: true, align: 16)
!1069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 144, elements: !1070)
!1070 = !{!1071}
!1071 = !DISubrange(count: 9)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !867, file: !1039, line: 774, type: !897, isLocal: false, isDefinition: true, align: 32)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !867, file: !1039, line: 774, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !867, file: !1039, line: 778, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !867, file: !1039, line: 778, type: !897, isLocal: false, isDefinition: true, align: 32)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !867, file: !1039, line: 778, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !867, file: !1039, line: 782, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !867, file: !1039, line: 782, type: !897, isLocal: false, isDefinition: true, align: 32)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !867, file: !1039, line: 782, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !867, file: !1039, line: 786, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !867, file: !1039, line: 786, type: !897, isLocal: false, isDefinition: true, align: 32)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !867, file: !1039, line: 786, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !867, file: !1039, line: 790, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !867, file: !1039, line: 790, type: !897, isLocal: false, isDefinition: true, align: 32)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !867, file: !1039, line: 790, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !867, file: !1039, line: 762, type: !1102, isLocal: true, isDefinition: true)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1103, line: 237, size: 128, elements: !1104)
!1103 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1104 = !{!1105, !1106, !1107}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1102, file: !1103, line: 239, baseType: !965, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1102, file: !1103, line: 241, baseType: !896, size: 32, offset: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1102, file: !1103, line: 243, baseType: !1108, size: 64, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !943, line: 40, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !943, line: 35, size: 64, elements: !1110)
!1110 = !{!1111, !1113}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1109, file: !943, line: 36, baseType: !1112, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1109, file: !943, line: 37, baseType: !1112, size: 32, offset: 32)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !867, file: !1039, line: 762, type: !905, isLocal: true, isDefinition: true, align: 8)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !867, file: !1039, line: 766, type: !1102, isLocal: true, isDefinition: true)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !867, file: !1039, line: 766, type: !905, isLocal: true, isDefinition: true, align: 8)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !867, file: !1039, line: 770, type: !1102, isLocal: true, isDefinition: true)
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !867, file: !1039, line: 770, type: !905, isLocal: true, isDefinition: true, align: 8)
!1124 = !DIGlobalVariableExpression(var: !1125, expr: !DIExpression())
!1125 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !867, file: !1039, line: 774, type: !1102, isLocal: true, isDefinition: true)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !867, file: !1039, line: 774, type: !905, isLocal: true, isDefinition: true, align: 8)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !867, file: !1039, line: 778, type: !1102, isLocal: true, isDefinition: true)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !867, file: !1039, line: 778, type: !905, isLocal: true, isDefinition: true, align: 8)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !867, file: !1039, line: 782, type: !1102, isLocal: true, isDefinition: true)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !867, file: !1039, line: 782, type: !905, isLocal: true, isDefinition: true, align: 8)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !867, file: !1039, line: 786, type: !1102, isLocal: true, isDefinition: true)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !867, file: !1039, line: 786, type: !905, isLocal: true, isDefinition: true, align: 8)
!1140 = !DIGlobalVariableExpression(var: !1141, expr: !DIExpression())
!1141 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !867, file: !1039, line: 790, type: !1102, isLocal: true, isDefinition: true)
!1142 = !DIGlobalVariableExpression(var: !1143, expr: !DIExpression())
!1143 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !867, file: !1039, line: 790, type: !905, isLocal: true, isDefinition: true, align: 8)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !867, file: !1039, line: 656, type: !889, isLocal: true, isDefinition: true)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !867, file: !1039, line: 766, type: !1148, isLocal: true, isDefinition: true)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1149)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1103, line: 224, size: 160, elements: !1150)
!1150 = !{!1151, !1152, !1153, !1154}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1149, file: !1103, line: 226, baseType: !960, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1149, file: !1103, line: 228, baseType: !723, size: 32, offset: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1149, file: !1103, line: 230, baseType: !103, size: 32, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1149, file: !1103, line: 231, baseType: !1155, size: 64, offset: 96)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !719, line: 343, size: 64, elements: !1156)
!1156 = !{!1157, !1158}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1155, file: !719, line: 344, baseType: !121, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1155, file: !719, line: 345, baseType: !121, size: 32, offset: 32)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !867, file: !1039, line: 770, type: !1148, isLocal: true, isDefinition: true)
!1161 = !DIGlobalVariableExpression(var: !1162, expr: !DIExpression())
!1162 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !867, file: !1039, line: 774, type: !1148, isLocal: true, isDefinition: true)
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !867, file: !1039, line: 778, type: !1148, isLocal: true, isDefinition: true)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !867, file: !1039, line: 782, type: !1148, isLocal: true, isDefinition: true)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !867, file: !1039, line: 786, type: !1148, isLocal: true, isDefinition: true)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !867, file: !1039, line: 790, type: !1148, isLocal: true, isDefinition: true)
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1173 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1174, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1175, retainedTypes: !1208, globals: !1311, splitDebugInlining: false, nameTableKind: None)
!1174 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!1175 = !{!30, !1176, !1183, !1190, !1197, !1203, !670}
!1176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !807, line: 47, baseType: !32, size: 32, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182}
!1178 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1179 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1180 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1181 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1182 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !807, line: 75, baseType: !32, size: 32, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1186 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1187 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1188 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1189 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !807, line: 92, baseType: !32, size: 32, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196}
!1192 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1193 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1194 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1195 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1196 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !807, line: 84, baseType: !32, size: 32, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202}
!1199 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1200 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1201 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1202 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !807, line: 107, baseType: !32, size: 32, elements: !1204)
!1204 = !{!1205, !1206, !1207}
!1205 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1206 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1207 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1208 = !{!102, !103, !1209, !155, !154, !1258, !121, !767, !1269, !265, !1308, !1310}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !807, line: 336, size: 160, elements: !1212)
!1212 = !{!1213, !1232, !1236, !1240, !1253}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1211, file: !807, line: 365, baseType: !1214, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!103, !1217, !828}
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1219)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1220)
!1220 = !{!1221, !1222, !1223, !1224, !1230, !1231}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1219, file: !141, line: 380, baseType: !144, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1219, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1219, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1219, file: !141, line: 386, baseType: !1225, size: 32, offset: 96)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1227)
!1227 = !{!1228, !1229}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1226, file: !141, line: 359, baseType: !154, size: 8)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1226, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1219, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1219, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1211, file: !807, line: 366, baseType: !1233, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{null, !1217, !155}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1211, file: !807, line: 374, baseType: !1237, size: 32, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!103, !1217}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1211, file: !807, line: 377, baseType: !1241, size: 32, offset: 96)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!103, !1217, !1244}
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !807, line: 122, size: 64, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1251, !1252}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1246, file: !807, line: 123, baseType: !121, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1246, file: !807, line: 124, baseType: !154, size: 8, offset: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1246, file: !807, line: 125, baseType: !154, size: 8, offset: 40)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1246, file: !807, line: 126, baseType: !154, size: 8, offset: 48)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1246, file: !807, line: 127, baseType: !154, size: 8, offset: 56)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1211, file: !807, line: 379, baseType: !1254, size: 32, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!103, !1217, !1257}
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 783, baseType: !1260)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 774, size: 224, elements: !1261)
!1261 = !{!1262, !1263, !1264, !1265, !1266, !1267, !1268}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1260, file: !116, line: 776, baseType: !120, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1260, file: !116, line: 777, baseType: !120, size: 32, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1260, file: !116, line: 778, baseType: !120, size: 32, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1260, file: !116, line: 779, baseType: !120, size: 32, offset: 96)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1260, file: !116, line: 780, baseType: !120, size: 32, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1260, file: !116, line: 781, baseType: !120, size: 32, offset: 160)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1260, file: !116, line: 782, baseType: !120, size: 32, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !671, line: 100, size: 224, elements: !1272)
!1272 = !{!1273, !1278, !1279, !1288, !1293, !1298, !1303}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1271, file: !671, line: 101, baseType: !1274, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !671, line: 76, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!103, !1217, !767}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1271, file: !671, line: 102, baseType: !1274, size: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1271, file: !671, line: 103, baseType: !1280, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !671, line: 83, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!103, !1217, !767, !1284, !102}
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !671, line: 72, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{null, !1217, !767, !102}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1271, file: !671, line: 104, baseType: !1289, size: 32, offset: 96)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !671, line: 79, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!103, !1217, !767, !723}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1271, file: !671, line: 105, baseType: !1294, size: 32, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !671, line: 88, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!670, !1217, !767}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1271, file: !671, line: 106, baseType: !1299, size: 32, offset: 160)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !671, line: 92, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!103, !1217, !767, !793}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1271, file: !671, line: 107, baseType: !1304, size: 32, offset: 192)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !671, line: 96, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!103, !1217, !767, !102}
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1309)
!1309 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1311 = !{!1312, !1318, !1320, !1327, !1329, !1331, !1333, !1335, !1337, !1339, !1341, !1343, !1345, !1347, !1349, !1351, !1171, !1353, !1361, !1384, !1387, !1390, !1392, !1399, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1440, !1442, !1444, !1446, !1448}
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1314 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1316)
!1316 = !{!1317}
!1317 = !DISubrange(count: 8)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1323)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1324)
!1324 = !{!1325, !1326}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1323, file: !132, line: 60, baseType: !1237, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1323, file: !132, line: 65, baseType: !1217, size: 32, offset: 32)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 64, elements: !345)
!1356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !719, line: 343, size: 64, elements: !1358)
!1358 = !{!1359, !1360}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1357, file: !719, line: 344, baseType: !121, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1357, file: !719, line: 345, baseType: !121, size: 32, offset: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1365, line: 60, size: 64, elements: !1366)
!1365 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1366 = !{!1367, !1383}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1364, file: !1365, line: 69, baseType: !1368, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1365, line: 50, size: 64, elements: !1371)
!1371 = !{!1372, !1381, !1382}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1370, file: !1365, line: 52, baseType: !1373, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1376, line: 37, baseType: !1377)
!1376 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1376, line: 32, size: 64, elements: !1378)
!1378 = !{!1379, !1380}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1377, file: !1376, line: 34, baseType: !121, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1377, file: !1376, line: 36, baseType: !121, size: 32, offset: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1370, file: !1365, line: 54, baseType: !154, size: 8, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1370, file: !1365, line: 56, baseType: !154, size: 8, offset: 40)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1364, file: !1365, line: 71, baseType: !154, size: 8, offset: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1369, size: 64, elements: !345)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1374, size: 128, elements: !242)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1173, file: !1314, line: 1539, type: !1210, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1395, line: 74, size: 64, elements: !1396)
!1395 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1396 = !{!1397, !1398}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1394, file: !1395, line: 76, baseType: !121, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1394, file: !1395, line: 78, baseType: !1217, size: 32, offset: 32)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1395, line: 22, size: 224, elements: !1403)
!1403 = !{!1404, !1405, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1402, file: !1395, line: 24, baseType: !1258, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1402, file: !1395, line: 26, baseType: !1406, size: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1402, file: !1395, line: 28, baseType: !200, size: 32, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1402, file: !1395, line: 30, baseType: !157, size: 8, offset: 96)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1402, file: !1395, line: 32, baseType: !103, size: 32, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1402, file: !1395, line: 34, baseType: !157, size: 8, offset: 160)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1402, file: !1395, line: 36, baseType: !157, size: 8, offset: 168)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1402, file: !1395, line: 38, baseType: !157, size: 8, offset: 176)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1402, file: !1395, line: 40, baseType: !157, size: 8, offset: 184)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1402, file: !1395, line: 41, baseType: !1415, size: 32, offset: 192)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1452, file: !1532, line: 65, type: !120, isLocal: true, isDefinition: true)
!1452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !1455, globals: !1529, splitDebugInlining: false, nameTableKind: None)
!1453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!1454 = !{!425}
!1455 = !{!1456, !1458, !595, !154, !121, !1466, !1497}
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1457, line: 46, baseType: !280)
!1457 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1460, file: !356, line: 766, baseType: !120, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1460, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1460, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1460, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1469)
!1469 = !{!1470, !1472, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1487, !1492, !1496}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1468, file: !356, line: 413, baseType: !1471, size: 256)
!1471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1316)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1468, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!1473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1474)
!1474 = !{!1475}
!1475 = !DISubrange(count: 24)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1468, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1468, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1468, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1468, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1468, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1468, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1468, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1468, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!1484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1485)
!1485 = !{!1486}
!1486 = !DISubrange(count: 56)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1468, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 1920, elements: !1490)
!1489 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1490 = !{!1491}
!1491 = !DISubrange(count: 240)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1468, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!1493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1494)
!1494 = !{!1495}
!1495 = !DISubrange(count: 644)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1468, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1499)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504, !1505, !1506, !1507, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1520, !1521, !1522, !1524, !1526, !1528}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1499, file: !356, line: 447, baseType: !360, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1499, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1499, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1499, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1499, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1499, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1499, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!1508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 96, elements: !1509)
!1509 = !{!1510}
!1510 = !DISubrange(count: 12)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1499, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1499, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1499, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1499, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1499, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1499, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1499, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1499, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!1519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 64, elements: !242)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1499, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1499, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1499, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 128, elements: !537)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1499, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 160, elements: !1041)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1499, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!1527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1041)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1499, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1529 = !{!1530, !1556, !1559, !1561, !1563, !1450}
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1452, file: !1532, line: 285, type: !1533, isLocal: true, isDefinition: true, align: 32)
!1532 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1535)
!1535 = !{!1536, !1555}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1534, file: !132, line: 60, baseType: !1537, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!103, !1540}
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1553, !1554}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1542, file: !141, line: 380, baseType: !144, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1542, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1542, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1542, file: !141, line: 386, baseType: !1548, size: 32, offset: 96)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1550)
!1550 = !{!1551, !1552}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1549, file: !141, line: 359, baseType: !154, size: 8)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1549, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1542, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1542, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1534, file: !132, line: 65, baseType: !1540, size: 32, offset: 32)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "lock", scope: !1452, file: !1532, line: 34, type: !1558, isLocal: true, isDefinition: true)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "last_load", scope: !1452, file: !1532, line: 36, type: !121, isLocal: true, isDefinition: true)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1452, file: !1532, line: 48, type: !121, isLocal: true, isDefinition: true)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1452, file: !1532, line: 54, type: !121, isLocal: true, isDefinition: true)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1567, file: !1649, line: 22, type: !1651, isLocal: true, isDefinition: true)
!1567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1569, retainedTypes: !1570, globals: !1646, splitDebugInlining: false, nameTableKind: None)
!1568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!1569 = !{!870, !876}
!1570 = !{!1571, !1635, !1640, !923, !876, !870, !1645, !102}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !871, line: 523, size: 288, elements: !1574)
!1574 = !{!1575, !1594, !1598, !1602, !1606, !1607, !1608, !1612, !1631}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1573, file: !871, line: 524, baseType: !1576, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!103, !1579, !911, !912}
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1592, !1593}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1581, file: !141, line: 380, baseType: !144, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1581, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1581, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1581, file: !141, line: 386, baseType: !1587, size: 32, offset: 96)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1588, file: !141, line: 359, baseType: !154, size: 8)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1588, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1581, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1581, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1573, file: !871, line: 530, baseType: !1595, size: 32, offset: 32)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!103, !1579, !917}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1573, file: !871, line: 532, baseType: !1599, size: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!103, !1579, !923, !918}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1573, file: !871, line: 535, baseType: !1603, size: 32, offset: 96)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!103, !1579, !923}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1573, file: !871, line: 537, baseType: !1603, size: 32, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1573, file: !871, line: 539, baseType: !1603, size: 32, offset: 160)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1573, file: !871, line: 541, baseType: !1609, size: 32, offset: 192)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!103, !1579, !911, !870, !876}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1573, file: !871, line: 544, baseType: !1613, size: 32, offset: 224)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!103, !1579, !1616, !157}
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !871, line: 478, size: 96, elements: !1618)
!1618 = !{!1619, !1625, !1630}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1617, file: !871, line: 482, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !943, line: 33, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !943, line: 29, size: 32, elements: !1622)
!1622 = !{!1623}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1621, file: !943, line: 30, baseType: !1624, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1617, file: !871, line: 485, baseType: !1626, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !871, line: 464, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{null, !1579, !1616, !923}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1617, file: !871, line: 493, baseType: !923, size: 32, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1573, file: !871, line: 547, baseType: !1632, size: 32, offset: 256)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!121, !1579}
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !871, line: 428, size: 32, elements: !1638)
!1638 = !{!1639}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1637, file: !871, line: 434, baseType: !923, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !871, line: 441, size: 32, elements: !1643)
!1643 = !{!1644}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1642, file: !871, line: 447, baseType: !923, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1646 = !{!1647, !1565}
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1648 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1567, file: !1649, line: 37, type: !1650, isLocal: true, isDefinition: true)
!1649 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1652, size: 352, elements: !1653)
!1652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1579)
!1653 = !{!1654}
!1654 = !DISubrange(count: 11)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1657, file: !1701, line: 139, type: !1708, isLocal: false, isDefinition: true)
!1657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1659, globals: !1698, splitDebugInlining: false, nameTableKind: None)
!1658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!1659 = !{!1660}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1662, file: !116, line: 552, baseType: !120, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1662, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1662, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1662, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1662, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1662, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1662, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1662, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1662, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1662, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1662, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1662, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1662, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1662, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1662, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1662, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1662, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1662, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1662, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1662, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1662, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1662, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1662, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1662, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1662, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1662, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1662, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1662, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1662, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1662, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1662, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1662, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1662, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1662, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!1698 = !{!1699, !1702, !1655}
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1657, file: !1701, line: 137, type: !121, isLocal: false, isDefinition: true)
!1701 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1657, file: !1701, line: 138, type: !1704, isLocal: false, isDefinition: true)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1705, size: 128, elements: !1706)
!1705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!1706 = !{!1707}
!1707 = !DISubrange(count: 16)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1705, size: 64, elements: !1316)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1711, file: !1714, line: 23, type: !1715, isLocal: false, isDefinition: true)
!1711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1713, splitDebugInlining: false, nameTableKind: None)
!1712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!1713 = !{!1709}
!1714 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1718, file: !1722, line: 86, type: !1972, isLocal: false, isDefinition: true, align: 512)
!1718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1720, retainedTypes: !1729, globals: !1803, splitDebugInlining: false, nameTableKind: None)
!1719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!1720 = !{!1721, !30, !425}
!1721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1722, line: 63, baseType: !32, size: 32, elements: !1723)
!1722 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1723 = !{!1724, !1725, !1726, !1727, !1728}
!1724 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1725 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1726 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1727 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1728 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1729 = !{!200, !102, !103, !1730, !995, !121, !1761, !595, !154, !1786}
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1733, line: 51, size: 64, elements: !1734)
!1733 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1734 = !{!1735, !1756}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1732, file: !1733, line: 52, baseType: !1736, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1733, line: 38, baseType: !1737)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!103, !1740, !1755, !265}
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747, !1753, !1754}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1742, file: !141, line: 380, baseType: !144, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1742, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1742, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1742, file: !141, line: 386, baseType: !1748, size: 32, offset: 96)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1750)
!1750 = !{!1751, !1752}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1749, file: !141, line: 359, baseType: !154, size: 8)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1749, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1742, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1742, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1732, file: !1733, line: 53, baseType: !1757, size: 32, offset: 32)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1733, line: 47, baseType: !1758)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!103, !1740, !1755, !265, !121}
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1763, file: !356, line: 447, baseType: !360, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1763, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1763, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1763, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1763, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1763, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1763, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1763, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1763, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1763, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1763, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1763, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1763, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1763, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1763, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1763, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1763, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1763, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1763, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1763, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1763, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1789)
!1789 = !{!1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1788, file: !356, line: 413, baseType: !1471, size: 256)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1788, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1788, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1788, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1788, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1788, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1788, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1788, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1788, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1788, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1788, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1788, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1788, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1803 = !{!1804, !1926, !1935, !1937, !1716, !1940, !1942, !1947}
!1804 = !DIGlobalVariableExpression(var: !1805, expr: !DIExpression())
!1805 = distinct !DIGlobalVariable(name: "_kernel", scope: !1718, file: !1722, line: 40, type: !1806, isLocal: false, isDefinition: true)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !247, line: 158, size: 288, elements: !1807)
!1807 = !{!1808, !1921}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1806, file: !247, line: 159, baseType: !1809, size: 192)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1810, size: 192, elements: !345)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !247, line: 100, size: 192, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1915, !1916, !1917, !1918}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1810, file: !247, line: 102, baseType: !121, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1810, file: !247, line: 105, baseType: !995, size: 32, offset: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1810, file: !247, line: 108, baseType: !1815, size: 32, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1817)
!1817 = !{!1818, !1876, !1888, !1889, !1890, !1891, !1897, !1910}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1816, file: !211, line: 247, baseType: !1819, size: 384)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1820)
!1820 = !{!1821, !1845, !1852, !1853, !1854, !1863, !1864, !1865}
!1821 = !DIDerivedType(tag: DW_TAG_member, scope: !1819, file: !211, line: 60, baseType: !1822, size: 64)
!1822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1819, file: !211, line: 60, size: 64, elements: !1823)
!1823 = !{!1824, !1839}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1822, file: !211, line: 61, baseType: !1825, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1826)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1827)
!1827 = !{!1828, !1834}
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !221, line: 38, baseType: !1829, size: 32)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !221, line: 38, size: 32, elements: !1830)
!1830 = !{!1831, !1833}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1829, file: !221, line: 39, baseType: !1832, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1829, file: !221, line: 40, baseType: !1832, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !221, line: 42, baseType: !1835, size: 32, offset: 32)
!1835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !221, line: 42, size: 32, elements: !1836)
!1836 = !{!1837, !1838}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1835, file: !221, line: 43, baseType: !1832, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1835, file: !221, line: 44, baseType: !1832, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1822, file: !211, line: 62, baseType: !1840, size: 64)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1841)
!1841 = !{!1842}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1840, file: !237, line: 50, baseType: !1843, size: 64)
!1843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1844, size: 64, elements: !242)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1819, file: !211, line: 68, baseType: !1846, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1848)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1849)
!1849 = !{!1850}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1848, file: !247, line: 232, baseType: !1851, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1826)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1819, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1819, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1854 = !DIDerivedType(tag: DW_TAG_member, scope: !1819, file: !211, line: 90, baseType: !1855, size: 16, offset: 112)
!1855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1819, file: !211, line: 90, size: 16, elements: !1856)
!1856 = !{!1857, !1862}
!1857 = !DIDerivedType(tag: DW_TAG_member, scope: !1855, file: !211, line: 91, baseType: !1858, size: 16)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1855, file: !211, line: 91, size: 16, elements: !1859)
!1859 = !{!1860, !1861}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1858, file: !211, line: 96, baseType: !261, size: 8)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1858, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1855, file: !211, line: 100, baseType: !265, size: 16)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1819, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1819, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1819, file: !211, line: 131, baseType: !1866, size: 192, offset: 192)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1867)
!1867 = !{!1868, !1869, !1875}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1866, file: !247, line: 245, baseType: !1825, size: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1866, file: !247, line: 246, baseType: !1870, size: 32, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1871)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{null, !1874}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1866, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1816, file: !211, line: 250, baseType: !1877, size: 288, offset: 384)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1878)
!1878 = !{!1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1877, file: !284, line: 26, baseType: !121, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1877, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1877, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1877, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1877, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1877, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1877, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1877, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1877, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1816, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1816, file: !211, line: 256, baseType: !1847, size: 64, offset: 704)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1816, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1816, file: !211, line: 300, baseType: !1892, size: 96, offset: 800)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1893)
!1893 = !{!1894, !1895, !1896}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1892, file: !211, line: 153, baseType: !22, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1892, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1892, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1816, file: !211, line: 325, baseType: !1898, size: 32, offset: 896)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1900)
!1900 = !{!1901, !1907, !1908}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1899, file: !307, line: 5074, baseType: !1902, size: 96)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1903)
!1903 = !{!1904, !1905, !1906}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1902, file: !311, line: 57, baseType: !314, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1902, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1902, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1899, file: !307, line: 5075, baseType: !1847, size: 64, offset: 96)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1899, file: !307, line: 5076, baseType: !1909, offset: 160)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1816, file: !211, line: 343, baseType: !1911, size: 64, offset: 928)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1912)
!1912 = !{!1913, !1914}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1911, file: !284, line: 63, baseType: !121, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1911, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1810, file: !247, line: 111, baseType: !1815, size: 32, offset: 96)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1810, file: !247, line: 124, baseType: !103, size: 32, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1810, file: !247, line: 127, baseType: !154, size: 8, offset: 160)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1810, file: !247, line: 153, baseType: !1919, offset: 168)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1920, line: 33, elements: !322)
!1920 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1806, file: !247, line: 170, baseType: !1922, size: 96, offset: 192)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !1923)
!1923 = !{!1924, !1925}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1922, file: !247, line: 86, baseType: !1815, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1922, file: !247, line: 90, baseType: !1851, size: 64, offset: 32)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1718, file: !1722, line: 43, type: !1928, isLocal: false, isDefinition: true, align: 512)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 8704, elements: !1933)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1930, line: 47, size: 8, elements: !1931)
!1930 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1931 = !{!1932}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1929, file: !1930, line: 48, baseType: !146, size: 8)
!1933 = !{!1934}
!1934 = !DISubrange(count: 1088)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1718, file: !1722, line: 44, type: !1816, isLocal: false, isDefinition: true)
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1718, file: !1722, line: 48, type: !1939, isLocal: false, isDefinition: true)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1816, size: 1024, elements: !345)
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1718, file: !1722, line: 217, type: !157, isLocal: false, isDefinition: true)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1718, file: !1722, line: 50, type: !1944, isLocal: true, isDefinition: true, align: 512)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 3072, elements: !1945)
!1945 = !{!346, !1946}
!1946 = !DISubrange(count: 384)
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "levels", scope: !1949, file: !1722, line: 232, type: !1969, isLocal: true, isDefinition: true)
!1949 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1722, file: !1722, line: 230, type: !1950, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !1952)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{null, !1721}
!1952 = !{!1953, !1954, !1964, !1968}
!1953 = !DILocalVariable(name: "level", arg: 1, scope: !1949, file: !1722, line: 230, type: !1721)
!1954 = !DILocalVariable(name: "entry", scope: !1949, file: !1722, line: 244, type: !1955)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1957)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1958)
!1958 = !{!1959, !1963}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1957, file: !132, line: 60, baseType: !1960, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!103, !1740}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1957, file: !132, line: 65, baseType: !1740, size: 32, offset: 32)
!1964 = !DILocalVariable(name: "dev", scope: !1965, file: !1722, line: 247, type: !1740)
!1965 = distinct !DILexicalBlock(scope: !1966, file: !1722, line: 246, column: 64)
!1966 = distinct !DILexicalBlock(scope: !1967, file: !1722, line: 246, column: 2)
!1967 = distinct !DILexicalBlock(scope: !1949, file: !1722, line: 246, column: 2)
!1968 = !DILocalVariable(name: "rc", scope: !1965, file: !1722, line: 248, type: !103)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 192, elements: !1970)
!1970 = !{!1971}
!1971 = !DISubrange(count: 6)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 16896, elements: !1973)
!1973 = !{!346, !1974}
!1974 = !DISubrange(count: 2112)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "states_str", scope: !1977, file: !1978, line: 276, type: !2099, isLocal: true, isDefinition: true)
!1977 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1978, file: !1978, line: 271, type: !1979, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !2090)
!1978 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!144, !1981, !995, !200}
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !1982)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1984)
!1984 = !{!1985, !2043, !2055, !2056, !2057, !2058, !2064, !2077}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1983, file: !211, line: 247, baseType: !1986, size: 384)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1987)
!1987 = !{!1988, !2012, !2019, !2020, !2021, !2030, !2031, !2032}
!1988 = !DIDerivedType(tag: DW_TAG_member, scope: !1986, file: !211, line: 60, baseType: !1989, size: 64)
!1989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1986, file: !211, line: 60, size: 64, elements: !1990)
!1990 = !{!1991, !2006}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1989, file: !211, line: 61, baseType: !1992, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1993)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1994)
!1994 = !{!1995, !2001}
!1995 = !DIDerivedType(tag: DW_TAG_member, scope: !1993, file: !221, line: 38, baseType: !1996, size: 32)
!1996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1993, file: !221, line: 38, size: 32, elements: !1997)
!1997 = !{!1998, !2000}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1996, file: !221, line: 39, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1996, file: !221, line: 40, baseType: !1999, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, scope: !1993, file: !221, line: 42, baseType: !2002, size: 32, offset: 32)
!2002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1993, file: !221, line: 42, size: 32, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2002, file: !221, line: 43, baseType: !1999, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2002, file: !221, line: 44, baseType: !1999, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1989, file: !211, line: 62, baseType: !2007, size: 64)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !2008)
!2008 = !{!2009}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2007, file: !237, line: 50, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2011, size: 64, elements: !242)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1986, file: !211, line: 68, baseType: !2013, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !2015)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !2016)
!2016 = !{!2017}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2015, file: !247, line: 232, baseType: !2018, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1993)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1986, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1986, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!2021 = !DIDerivedType(tag: DW_TAG_member, scope: !1986, file: !211, line: 90, baseType: !2022, size: 16, offset: 112)
!2022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1986, file: !211, line: 90, size: 16, elements: !2023)
!2023 = !{!2024, !2029}
!2024 = !DIDerivedType(tag: DW_TAG_member, scope: !2022, file: !211, line: 91, baseType: !2025, size: 16)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2022, file: !211, line: 91, size: 16, elements: !2026)
!2026 = !{!2027, !2028}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2025, file: !211, line: 96, baseType: !261, size: 8)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2025, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2022, file: !211, line: 100, baseType: !265, size: 16)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1986, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1986, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1986, file: !211, line: 131, baseType: !2033, size: 192, offset: 192)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2034)
!2034 = !{!2035, !2036, !2042}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2033, file: !247, line: 245, baseType: !1992, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2033, file: !247, line: 246, baseType: !2037, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2038)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{null, !2041}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2033, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1983, file: !211, line: 250, baseType: !2044, size: 288, offset: 384)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !2045)
!2045 = !{!2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2044, file: !284, line: 26, baseType: !121, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2044, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2044, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2044, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2044, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2044, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2044, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2044, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2044, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1983, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1983, file: !211, line: 256, baseType: !2014, size: 64, offset: 704)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1983, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1983, file: !211, line: 300, baseType: !2059, size: 96, offset: 800)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !2060)
!2060 = !{!2061, !2062, !2063}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2059, file: !211, line: 153, baseType: !22, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2059, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2059, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1983, file: !211, line: 325, baseType: !2065, size: 32, offset: 896)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !2067)
!2067 = !{!2068, !2074, !2075}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2066, file: !307, line: 5074, baseType: !2069, size: 96)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !2070)
!2070 = !{!2071, !2072, !2073}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2069, file: !311, line: 57, baseType: !314, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2069, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2069, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2066, file: !307, line: 5075, baseType: !2014, size: 64, offset: 96)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2066, file: !307, line: 5076, baseType: !2076, offset: 160)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1983, file: !211, line: 343, baseType: !2078, size: 64, offset: 928)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2079)
!2079 = !{!2080, !2081}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2078, file: !284, line: 63, baseType: !121, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2078, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2082 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2083, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2084, globals: !2086, splitDebugInlining: false, nameTableKind: None)
!2083 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2084 = !{!102, !144, !1456, !154, !103, !2085, !24, !200, !995, !22, !121, !1308}
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!2086 = !{!1975, !2087}
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "states_sz", scope: !1977, file: !1978, line: 279, type: !2089, isLocal: true, isDefinition: true)
!2089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1650, size: 256, elements: !1316)
!2090 = !{!2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2091 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1977, file: !1978, line: 271, type: !1981)
!2092 = !DILocalVariable(name: "buf", arg: 2, scope: !1977, file: !1978, line: 271, type: !995)
!2093 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1977, file: !1978, line: 271, type: !200)
!2094 = !DILocalVariable(name: "off", scope: !1977, file: !1978, line: 273, type: !200)
!2095 = !DILocalVariable(name: "bit", scope: !1977, file: !1978, line: 274, type: !154)
!2096 = !DILocalVariable(name: "thread_state", scope: !1977, file: !1978, line: 275, type: !154)
!2097 = !DILocalVariable(name: "index", scope: !2098, file: !1978, line: 293, type: !154)
!2098 = distinct !DILexicalBlock(scope: !1977, file: !1978, line: 293, column: 2)
!2099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1316)
!2100 = !DIGlobalVariableExpression(var: !2101, expr: !DIExpression())
!2101 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2102, file: !2210, line: 56, type: !2199, isLocal: false, isDefinition: true)
!2102 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2103, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2104, globals: !2207, splitDebugInlining: false, nameTableKind: None)
!2103 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2104 = !{!2105, !995, !102, !2205, !1755, !1456, !595, !103, !121, !1308, !2206}
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 32)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !2107)
!2107 = !{!2108, !2166, !2178, !2179, !2180, !2181, !2187, !2200}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2106, file: !211, line: 247, baseType: !2109, size: 384)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !2110)
!2110 = !{!2111, !2135, !2142, !2143, !2144, !2153, !2154, !2155}
!2111 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !211, line: 60, baseType: !2112, size: 64)
!2112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2109, file: !211, line: 60, size: 64, elements: !2113)
!2113 = !{!2114, !2129}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2112, file: !211, line: 61, baseType: !2115, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2117)
!2117 = !{!2118, !2124}
!2118 = !DIDerivedType(tag: DW_TAG_member, scope: !2116, file: !221, line: 38, baseType: !2119, size: 32)
!2119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2116, file: !221, line: 38, size: 32, elements: !2120)
!2120 = !{!2121, !2123}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2119, file: !221, line: 39, baseType: !2122, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2119, file: !221, line: 40, baseType: !2122, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, scope: !2116, file: !221, line: 42, baseType: !2125, size: 32, offset: 32)
!2125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2116, file: !221, line: 42, size: 32, elements: !2126)
!2126 = !{!2127, !2128}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2125, file: !221, line: 43, baseType: !2122, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2125, file: !221, line: 44, baseType: !2122, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2112, file: !211, line: 62, baseType: !2130, size: 64)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !2131)
!2131 = !{!2132}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2130, file: !237, line: 50, baseType: !2133, size: 64)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2134, size: 64, elements: !242)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2109, file: !211, line: 68, baseType: !2136, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !2138)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !2139)
!2139 = !{!2140}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2138, file: !247, line: 232, baseType: !2141, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2116)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2109, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2109, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!2144 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !211, line: 90, baseType: !2145, size: 16, offset: 112)
!2145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2109, file: !211, line: 90, size: 16, elements: !2146)
!2146 = !{!2147, !2152}
!2147 = !DIDerivedType(tag: DW_TAG_member, scope: !2145, file: !211, line: 91, baseType: !2148, size: 16)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2145, file: !211, line: 91, size: 16, elements: !2149)
!2149 = !{!2150, !2151}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2148, file: !211, line: 96, baseType: !261, size: 8)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2148, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2145, file: !211, line: 100, baseType: !265, size: 16)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2109, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2109, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2109, file: !211, line: 131, baseType: !2156, size: 192, offset: 192)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2157)
!2157 = !{!2158, !2159, !2165}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2156, file: !247, line: 245, baseType: !2115, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2156, file: !247, line: 246, baseType: !2160, size: 32, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2161)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 32)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{null, !2164}
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2156, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2106, file: !211, line: 250, baseType: !2167, size: 288, offset: 384)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !2168)
!2168 = !{!2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2167, file: !284, line: 26, baseType: !121, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2167, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2167, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2167, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2167, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2167, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2167, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2167, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2167, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2106, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2106, file: !211, line: 256, baseType: !2137, size: 64, offset: 704)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2106, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2106, file: !211, line: 300, baseType: !2182, size: 96, offset: 800)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !2183)
!2183 = !{!2184, !2185, !2186}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2182, file: !211, line: 153, baseType: !22, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2182, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2182, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2106, file: !211, line: 325, baseType: !2188, size: 32, offset: 896)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !2190)
!2190 = !{!2191, !2197, !2198}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2189, file: !307, line: 5074, baseType: !2192, size: 96)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !2193)
!2193 = !{!2194, !2195, !2196}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2192, file: !311, line: 57, baseType: !314, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2192, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2192, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2189, file: !307, line: 5075, baseType: !2137, size: 64, offset: 96)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2189, file: !307, line: 5076, baseType: !2199, offset: 160)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2106, file: !211, line: 343, baseType: !2201, size: 64, offset: 928)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2202)
!2202 = !{!2203, !2204}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2201, file: !284, line: 63, baseType: !121, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2201, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32)
!2207 = !{!2100, !2208, !2211, !2213}
!2208 = !DIGlobalVariableExpression(var: !2209, expr: !DIExpression())
!2209 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2102, file: !2210, line: 404, type: !103, isLocal: true, isDefinition: true)
!2210 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2102, file: !2210, line: 405, type: !103, isLocal: true, isDefinition: true)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "pending_current", scope: !2102, file: !2210, line: 425, type: !2105, isLocal: true, isDefinition: true)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2217, file: !2247, line: 15, type: !1308, isLocal: true, isDefinition: true)
!2217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2218, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2219, globals: !2244, splitDebugInlining: false, nameTableKind: None)
!2218 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2219 = !{!1456, !102, !595, !121, !1308, !103, !2220, !995, !280}
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2222)
!2222 = !{!2223, !2238, !2243}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2221, file: !247, line: 245, baseType: !2224, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2225)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2226)
!2226 = !{!2227, !2233}
!2227 = !DIDerivedType(tag: DW_TAG_member, scope: !2225, file: !221, line: 38, baseType: !2228, size: 32)
!2228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2225, file: !221, line: 38, size: 32, elements: !2229)
!2229 = !{!2230, !2232}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2228, file: !221, line: 39, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2228, file: !221, line: 40, baseType: !2231, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2225, file: !221, line: 42, baseType: !2234, size: 32, offset: 32)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2225, file: !221, line: 42, size: 32, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2234, file: !221, line: 43, baseType: !2231, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2234, file: !221, line: 44, baseType: !2231, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2221, file: !247, line: 246, baseType: !2239, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2240)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{null, !2220}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2221, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2244 = !{!2215, !2245, !2249, !2251}
!2245 = !DIGlobalVariableExpression(var: !2246, expr: !DIExpression())
!2246 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2217, file: !2247, line: 19, type: !2248, isLocal: true, isDefinition: true)
!2247 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2249 = !DIGlobalVariableExpression(var: !2250, expr: !DIExpression())
!2250 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2217, file: !2247, line: 25, type: !103, isLocal: true, isDefinition: true)
!2251 = !DIGlobalVariableExpression(var: !2252, expr: !DIExpression())
!2252 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2217, file: !2247, line: 17, type: !2253, isLocal: true, isDefinition: true)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2225)
!2254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2255, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2255 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2257, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2257 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/minimal/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2258 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2259, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2259 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2262, retainedTypes: !2282, splitDebugInlining: false, nameTableKind: None)
!2261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2262 = !{!2263, !2271}
!2263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2264, line: 69, baseType: !32, size: 32, elements: !2265)
!2264 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2265 = !{!2266, !2267, !2268, !2269, !2270}
!2266 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2267 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2268 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2269 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2270 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2271 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2264, line: 56, baseType: !32, size: 32, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281}
!2273 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2274 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2275 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2276 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2277 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2278 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2279 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2280 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2281 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2282 = !{!103, !2263, !2271, !2283, !262, !164, !2285, !2286, !155, !266, !144, !200, !102, !22, !32, !2288, !2289, !2290, !2291, !2292, !281, !2293, !2284, !2294, !2295, !2296, !2297}
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2264, line: 31, baseType: !2284)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !281)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !201, line: 329, baseType: !32)
!2286 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2264, line: 32, baseType: !2287)
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1309)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2291 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !201, line: 145, baseType: !103)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2298 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2299, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2299 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2300 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2301, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2302, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2301 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2302 = !{!2303, !30}
!2303 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2304, line: 27, baseType: !32, size: 32, elements: !2305)
!2304 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2305 = !{!2306, !2307, !2308, !2309, !2310}
!2306 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2307 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2308 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2309 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2310 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2311 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2312, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2313, retainedTypes: !2314, splitDebugInlining: false, nameTableKind: None)
!2312 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2313 = !{!425, !2303, !30}
!2314 = !{!621, !2315, !102, !103, !595, !121, !154, !2332}
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2317, file: !356, line: 413, baseType: !1471, size: 256)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2317, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2317, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2317, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2317, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2317, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2317, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2317, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2317, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2317, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2317, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2317, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2317, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2334)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2335)
!2335 = !{!2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2334, file: !356, line: 447, baseType: !360, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2334, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2334, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2334, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2334, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2334, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2334, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2334, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2334, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2334, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2334, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2334, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2334, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2334, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2334, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2334, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2334, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2334, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2334, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2334, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2334, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2357 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2358, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2358 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2360, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2361, splitDebugInlining: false, nameTableKind: None)
!2360 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2361 = !{!102, !103, !22, !2362}
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2364)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2365)
!2365 = !{!2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2364, file: !356, line: 447, baseType: !360, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2364, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2364, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2364, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2364, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2364, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2364, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2364, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2364, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2364, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2364, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2364, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2364, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2364, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2364, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2364, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2364, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2364, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2364, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2364, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2364, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2389, splitDebugInlining: false, nameTableKind: None)
!2388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2389 = !{!2390, !102, !103}
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2392)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2392, file: !356, line: 447, baseType: !360, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2392, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2392, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2392, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2392, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2392, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2392, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2392, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2392, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2392, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2392, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2392, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2392, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2392, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2392, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2392, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2392, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2392, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2392, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2392, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2392, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2415 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2416, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2417, splitDebugInlining: false, nameTableKind: None)
!2416 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2417 = !{!2418, !121, !102, !103}
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2420, line: 98, size: 256, elements: !2421)
!2420 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2421 = !{!2422, !2427, !2432, !2437, !2442, !2447, !2452, !2457}
!2422 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 99, baseType: !2423, size: 32)
!2423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 99, size: 32, elements: !2424)
!2424 = !{!2425, !2426}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2423, file: !2420, line: 99, baseType: !121, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2423, file: !2420, line: 99, baseType: !121, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 100, baseType: !2428, size: 32, offset: 32)
!2428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 100, size: 32, elements: !2429)
!2429 = !{!2430, !2431}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2428, file: !2420, line: 100, baseType: !121, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2428, file: !2420, line: 100, baseType: !121, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 101, baseType: !2433, size: 32, offset: 64)
!2433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 101, size: 32, elements: !2434)
!2434 = !{!2435, !2436}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2433, file: !2420, line: 101, baseType: !121, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2433, file: !2420, line: 101, baseType: !121, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 102, baseType: !2438, size: 32, offset: 96)
!2438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 102, size: 32, elements: !2439)
!2439 = !{!2440, !2441}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2438, file: !2420, line: 102, baseType: !121, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2438, file: !2420, line: 102, baseType: !121, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 103, baseType: !2443, size: 32, offset: 128)
!2443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 103, size: 32, elements: !2444)
!2444 = !{!2445, !2446}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2443, file: !2420, line: 103, baseType: !121, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2443, file: !2420, line: 103, baseType: !121, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 104, baseType: !2448, size: 32, offset: 160)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 104, size: 32, elements: !2449)
!2449 = !{!2450, !2451}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2448, file: !2420, line: 104, baseType: !121, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2448, file: !2420, line: 104, baseType: !121, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 105, baseType: !2453, size: 32, offset: 192)
!2453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 105, size: 32, elements: !2454)
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2453, file: !2420, line: 105, baseType: !121, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2453, file: !2420, line: 105, baseType: !121, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2419, file: !2420, line: 106, baseType: !121, size: 32, offset: 224)
!2458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2302, retainedTypes: !2460, splitDebugInlining: false, nameTableKind: None)
!2459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2460 = !{!2461, !102, !103, !2486, !2529, !121}
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2463)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2464)
!2464 = !{!2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2463, file: !356, line: 447, baseType: !360, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2463, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2463, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2463, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2463, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2463, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2463, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2463, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2463, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2463, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2463, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2463, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2463, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2463, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2463, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2463, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2463, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2463, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2463, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2463, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2463, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2420, line: 141, baseType: !2488)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2420, line: 97, size: 256, elements: !2489)
!2489 = !{!2490}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2488, file: !2420, line: 107, baseType: !2491, size: 256)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2420, line: 98, size: 256, elements: !2492)
!2492 = !{!2493, !2498, !2503, !2508, !2513, !2518, !2523, !2528}
!2493 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 99, baseType: !2494, size: 32)
!2494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 99, size: 32, elements: !2495)
!2495 = !{!2496, !2497}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2494, file: !2420, line: 99, baseType: !121, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2494, file: !2420, line: 99, baseType: !121, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 100, baseType: !2499, size: 32, offset: 32)
!2499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 100, size: 32, elements: !2500)
!2500 = !{!2501, !2502}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2499, file: !2420, line: 100, baseType: !121, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2499, file: !2420, line: 100, baseType: !121, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 101, baseType: !2504, size: 32, offset: 64)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 101, size: 32, elements: !2505)
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2504, file: !2420, line: 101, baseType: !121, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2504, file: !2420, line: 101, baseType: !121, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 102, baseType: !2509, size: 32, offset: 96)
!2509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 102, size: 32, elements: !2510)
!2510 = !{!2511, !2512}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2509, file: !2420, line: 102, baseType: !121, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2509, file: !2420, line: 102, baseType: !121, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 103, baseType: !2514, size: 32, offset: 128)
!2514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 103, size: 32, elements: !2515)
!2515 = !{!2516, !2517}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2514, file: !2420, line: 103, baseType: !121, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2514, file: !2420, line: 103, baseType: !121, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 104, baseType: !2519, size: 32, offset: 160)
!2519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 104, size: 32, elements: !2520)
!2520 = !{!2521, !2522}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2519, file: !2420, line: 104, baseType: !121, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2519, file: !2420, line: 104, baseType: !121, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 105, baseType: !2524, size: 32, offset: 192)
!2524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 105, size: 32, elements: !2525)
!2525 = !{!2526, !2527}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2524, file: !2420, line: 105, baseType: !121, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2524, file: !2420, line: 105, baseType: !121, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2491, file: !2420, line: 106, baseType: !121, size: 32, offset: 224)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!2530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !2532, splitDebugInlining: false, nameTableKind: None)
!2531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2532 = !{!621, !595, !154, !121, !2533, !2550}
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2535)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2536)
!2536 = !{!2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2535, file: !356, line: 413, baseType: !1471, size: 256)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2535, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2535, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2535, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2535, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2535, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2535, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2535, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2535, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2535, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2535, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2535, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2535, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2552)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2553)
!2553 = !{!2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2552, file: !356, line: 447, baseType: !360, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2552, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2552, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2552, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2552, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2552, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2552, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2552, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2552, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2552, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2552, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2552, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2552, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2552, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2552, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2552, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2552, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2552, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2552, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2552, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2552, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2575 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2576, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2577, splitDebugInlining: false, nameTableKind: None)
!2576 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2577 = !{!2578, !102, !103}
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2580)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2581)
!2581 = !{!2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2580, file: !356, line: 447, baseType: !360, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2580, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2580, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2580, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2580, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2580, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2580, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2580, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2580, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2580, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2580, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2580, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2580, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2580, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2580, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2580, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2580, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2580, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2580, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2580, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2580, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2604, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2605, splitDebugInlining: false, nameTableKind: None)
!2604 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2605 = !{!146, !995, !200, !828, !2606, !155, !102}
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2608 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2609, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2610, splitDebugInlining: false, nameTableKind: None)
!2609 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2610 = !{!2611}
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !2613)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !2614)
!2614 = !{!2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2613, file: !116, line: 552, baseType: !120, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2613, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2613, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2613, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2613, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2613, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2613, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2613, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2613, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2613, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2613, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2613, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2613, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2613, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2613, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2613, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2613, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2613, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2613, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2613, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2613, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2613, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2613, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2613, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2613, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2613, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2613, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2613, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2613, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2613, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2613, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2613, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2613, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2613, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!2649 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2650, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2650 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2653, retainedTypes: !2669, splitDebugInlining: false, nameTableKind: None)
!2652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2653 = !{!2654, !2661, !2665}
!2654 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2655, line: 38, baseType: !32, size: 32, elements: !2656)
!2655 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2656 = !{!2657, !2658, !2659, !2660}
!2657 = !DIEnumerator(name: "HAL_OK", value: 0)
!2658 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2659 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2660 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2661 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !666, line: 184, baseType: !32, size: 32, elements: !2662)
!2662 = !{!2663, !2664}
!2663 = !DIEnumerator(name: "RESET", value: 0)
!2664 = !DIEnumerator(name: "SET", value: 1)
!2665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !666, line: 190, baseType: !32, size: 32, elements: !2666)
!2666 = !{!2667, !2668}
!2667 = !DIEnumerator(name: "DISABLE", value: 0)
!2668 = !DIEnumerator(name: "ENABLE", value: 1)
!2669 = !{!2670, !121, !2708, !1310, !154, !1308, !102}
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !2672)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !2673)
!2673 = !{!2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2672, file: !116, line: 552, baseType: !120, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2672, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2672, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2672, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2672, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2672, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2672, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2672, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2672, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2672, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2672, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2672, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2672, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2672, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2672, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2672, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2672, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2672, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2672, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2672, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2672, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2672, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2672, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2672, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2672, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2672, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2672, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2672, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2672, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2672, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2672, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2672, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2672, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2672, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 544, baseType: !2710)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 540, size: 64, elements: !2711)
!2711 = !{!2712, !2713}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2710, file: !116, line: 542, baseType: !120, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2710, file: !116, line: 543, baseType: !120, size: 32, offset: 32)
!2714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2716, retainedTypes: !2717, splitDebugInlining: false, nameTableKind: None)
!2715 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2716 = !{!665}
!2717 = !{!2718, !121, !2726, !2732, !2743}
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !2720)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !2721)
!2721 = !{!2722, !2723, !2724, !2725}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2720, file: !356, line: 766, baseType: !120, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2720, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2720, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2720, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 544, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 540, size: 64, elements: !2729)
!2729 = !{!2730, !2731}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2728, file: !116, line: 542, baseType: !120, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2728, file: !116, line: 543, baseType: !120, size: 32, offset: 32)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 407, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 398, size: 224, elements: !2735)
!2735 = !{!2736, !2737, !2738, !2739, !2740, !2741, !2742}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2734, file: !116, line: 400, baseType: !120, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2734, file: !116, line: 401, baseType: !120, size: 32, offset: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2734, file: !116, line: 402, baseType: !120, size: 32, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2734, file: !116, line: 403, baseType: !120, size: 32, offset: 96)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2734, file: !116, line: 404, baseType: !120, size: 32, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2734, file: !116, line: 405, baseType: !120, size: 32, offset: 160)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2734, file: !116, line: 406, baseType: !120, size: 32, offset: 192)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !2745)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !2746)
!2746 = !{!2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2745, file: !116, line: 552, baseType: !120, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2745, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2745, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2745, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2745, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2745, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2745, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2745, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2745, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2745, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2745, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2745, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2745, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2745, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2745, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2745, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2745, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2745, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2745, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2745, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2745, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2745, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2745, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2745, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2745, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2745, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2745, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2745, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2745, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2745, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2745, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2745, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2745, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2745, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!2781 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2782, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2783, splitDebugInlining: false, nameTableKind: None)
!2782 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2783 = !{!102, !200}
!2784 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2785, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2786, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2785 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2786 = !{!2787, !2794, !30}
!2787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2788, line: 14, baseType: !32, size: 32, elements: !2789)
!2788 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2789 = !{!2790, !2791, !2792, !2793}
!2790 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2791 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2792 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2793 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2794 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2788, line: 42, baseType: !32, size: 32, elements: !2795)
!2795 = !{!2796, !2797, !2798, !2799, !2800, !2801}
!2796 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2797 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2798 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2799 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2800 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2801 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2802 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2803, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2803 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2805, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2806, splitDebugInlining: false, nameTableKind: None)
!2805 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2806 = !{!22, !102, !103}
!2807 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2808, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2808 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!2809 = !{!"Ubuntu clang version 14.0.6"}
!2810 = !{i32 7, !"Dwarf Version", i32 4}
!2811 = !{i32 2, !"Debug Info Version", i32 3}
!2812 = !{i32 1, !"wchar_size", i32 4}
!2813 = !{i32 1, !"min_enum_size", i32 4}
!2814 = !{i32 1, !"branch-target-enforcement", i32 0}
!2815 = !{i32 1, !"sign-return-address", i32 0}
!2816 = !{i32 1, !"sign-return-address-all", i32 0}
!2817 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2818 = !{i32 7, !"frame-pointer", i32 2}
!2819 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2820, file: !2820, line: 26, type: !2821, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2254, retainedNodes: !322)
!2820 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2821 = !DISubroutineType(types: !2822)
!2822 = !{null}
!2823 = !DILocation(line: 28, column: 1, scope: !2819)
!2824 = !{i64 2155360429, i64 2155360449, i64 2155360512}
!2825 = !DILocation(line: 29, column: 1, scope: !2819)
!2826 = !{i64 2155360844, i64 2155360864, i64 2155360927}
!2827 = !DILocation(line: 30, column: 1, scope: !2819)
!2828 = !{i64 2155361263, i64 2155361283, i64 2155361346}
!2829 = !DILocation(line: 31, column: 1, scope: !2819)
!2830 = !{i64 2155361682, i64 2155361702, i64 2155361765}
!2831 = !DILocation(line: 33, column: 1, scope: !2819)
!2832 = !{i64 2155361974, i64 2155361994, i64 2155362057}
!2833 = !DILocation(line: 35, column: 1, scope: !2819)
!2834 = !{i64 2155362299, i64 2155362319, i64 2155362382}
!2835 = !DILocation(line: 50, column: 1, scope: !2819)
!2836 = !{i64 2155362726, i64 2155362746, i64 2155362809}
!2837 = !DILocation(line: 54, column: 1, scope: !2819)
!2838 = !{i64 2155367226, i64 2155367246, i64 2155367309}
!2839 = !DILocation(line: 61, column: 1, scope: !2819)
!2840 = !{i64 2155367543, i64 2155367563, i64 2155367626}
!2841 = !DILocation(line: 63, column: 1, scope: !2819)
!2842 = !{i64 2155367923, i64 2155367943, i64 2155368006}
!2843 = !DILocation(line: 64, column: 1, scope: !2819)
!2844 = !{i64 2155368445, i64 2155368465, i64 2155368528}
!2845 = !DILocation(line: 65, column: 1, scope: !2819)
!2846 = !{i64 2155368943, i64 2155368963, i64 2155369026}
!2847 = !DILocation(line: 66, column: 1, scope: !2819)
!2848 = !{i64 2155369425, i64 2155369445, i64 2155369508}
!2849 = !DILocation(line: 67, column: 1, scope: !2819)
!2850 = !{i64 2155369932, i64 2155369952, i64 2155370015}
!2851 = !DILocation(line: 68, column: 1, scope: !2819)
!2852 = !{i64 2155370420, i64 2155370440, i64 2155370503}
!2853 = !DILocation(line: 70, column: 1, scope: !2819)
!2854 = !{i64 2155370888, i64 2155370908, i64 2155370971}
!2855 = !DILocation(line: 71, column: 1, scope: !2819)
!2856 = !{i64 2155371330, i64 2155371350, i64 2155371413}
!2857 = !DILocation(line: 72, column: 1, scope: !2819)
!2858 = !{i64 2155371788, i64 2155371808, i64 2155371871}
!2859 = !DILocation(line: 79, column: 1, scope: !2819)
!2860 = !{i64 2155372242, i64 2155372262, i64 2155372325}
!2861 = !DILocation(line: 80, column: 1, scope: !2819)
!2862 = !{i64 2155372753, i64 2155372773, i64 2155372836}
!2863 = !DILocation(line: 82, column: 1, scope: !2819)
!2864 = !{i64 2155373244, i64 2155373264, i64 2155373327}
!2865 = !DILocation(line: 97, column: 1, scope: !2819)
!2866 = !{i64 2155373581, i64 2155373601, i64 2155373664}
!2867 = !DILocation(line: 99, column: 1, scope: !2819)
!2868 = !{i64 2155373799, i64 2155373819, i64 2155373882}
!2869 = !DILocation(line: 102, column: 1, scope: !2819)
!2870 = !{i64 2155374056, i64 2155374076, i64 2155374139}
!2871 = !DILocation(line: 105, column: 1, scope: !2819)
!2872 = !{i64 2155374296, i64 2155374316, i64 2155374379}
!2873 = !DILocation(line: 115, column: 1, scope: !2819)
!2874 = !{i64 2155374635, i64 2155374655, i64 2155374718}
!2875 = !DILocation(line: 118, column: 1, scope: !2819)
!2876 = !{i64 2155374979, i64 2155374999, i64 2155375062}
!2877 = !DILocation(line: 32, column: 1, scope: !2878)
!2878 = !DILexicalBlockFile(scope: !2819, file: !2879, discriminator: 0)
!2879 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2880 = !{i64 2155375335, i64 2155375355, i64 2155375418}
!2881 = !DILocation(line: 33, column: 1, scope: !2878)
!2882 = !{i64 2155375847, i64 2155375867, i64 2155375930}
!2883 = !DILocation(line: 53, column: 1, scope: !2878)
!2884 = !{i64 2155376355, i64 2155376375, i64 2155376438}
!2885 = !DILocation(line: 54, column: 1, scope: !2878)
!2886 = !{i64 2155380834, i64 2155380854, i64 2155380917}
!2887 = !DILocation(line: 55, column: 1, scope: !2878)
!2888 = !{i64 2155381252, i64 2155381272, i64 2155381335}
!2889 = !DILocation(line: 56, column: 1, scope: !2878)
!2890 = !{i64 2155381670, i64 2155381690, i64 2155381753}
!2891 = !DILocation(line: 57, column: 1, scope: !2878)
!2892 = !{i64 2155382088, i64 2155382108, i64 2155382171}
!2893 = !DILocation(line: 58, column: 1, scope: !2878)
!2894 = !{i64 2155382506, i64 2155382526, i64 2155382589}
!2895 = !DILocation(line: 59, column: 1, scope: !2878)
!2896 = !{i64 2155382924, i64 2155382944, i64 2155383007}
!2897 = !DILocation(line: 60, column: 1, scope: !2878)
!2898 = !{i64 2155383348, i64 2155383368, i64 2155383431}
!2899 = !DILocation(line: 61, column: 1, scope: !2878)
!2900 = !{i64 2155383665, i64 2155383685, i64 2155383748}
!2901 = !DILocation(line: 70, column: 1, scope: !2878)
!2902 = !{i64 2155383894, i64 2155383914, i64 2155383977}
!2903 = !DILocation(line: 72, column: 1, scope: !2878)
!2904 = !{i64 2155384226, i64 2155384246, i64 2155384309}
!2905 = !DILocation(line: 73, column: 1, scope: !2878)
!2906 = !{i64 2155384676, i64 2155384696, i64 2155384759}
!2907 = !DILocation(line: 74, column: 1, scope: !2878)
!2908 = !{i64 2155385126, i64 2155385146, i64 2155385209}
!2909 = !DILocation(line: 75, column: 1, scope: !2878)
!2910 = !{i64 2155385576, i64 2155385596, i64 2155385659}
!2911 = !DILocation(line: 76, column: 1, scope: !2878)
!2912 = !{i64 2155386026, i64 2155386046, i64 2155386109}
!2913 = !DILocation(line: 77, column: 1, scope: !2878)
!2914 = !{i64 2155386476, i64 2155386496, i64 2155386559}
!2915 = !DILocation(line: 78, column: 1, scope: !2878)
!2916 = !{i64 2155386926, i64 2155386946, i64 2155387009}
!2917 = !DILocation(line: 79, column: 1, scope: !2878)
!2918 = !{i64 2155387376, i64 2155387396, i64 2155387459}
!2919 = !DILocation(line: 80, column: 1, scope: !2878)
!2920 = !{i64 2155387829, i64 2155387849, i64 2155387912}
!2921 = !DILocation(line: 84, column: 1, scope: !2878)
!2922 = !{i64 2155388161, i64 2155388181, i64 2155388244}
!2923 = !DILocation(line: 91, column: 1, scope: !2878)
!2924 = !{i64 2155388558, i64 2155388578, i64 2155388641}
!2925 = !DILocation(line: 93, column: 1, scope: !2878)
!2926 = !{i64 2155388925, i64 2155388945, i64 2155389008}
!2927 = !DILocation(line: 106, column: 1, scope: !2878)
!2928 = !{i64 2155389195, i64 2155389215, i64 2155389278}
!2929 = !DILocation(line: 11, column: 1, scope: !2930)
!2930 = !DILexicalBlockFile(scope: !2819, file: !2931, discriminator: 0)
!2931 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2932 = distinct !DISubprogram(name: "main", scope: !2933, file: !2933, line: 9, type: !2821, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !322)
!2933 = !DIFile(filename: "zephyr/samples/basic/minimal/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2934 = !DILocation(line: 11, column: 1, scope: !2932)
!2935 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2936)
!2936 = !{!2937}
!2937 = !DILocalVariable(name: "c", arg: 1, scope: !2935, file: !105, line: 45, type: !103)
!2938 = !DILocation(line: 0, scope: !2935)
!2939 = !DILocation(line: 50, column: 2, scope: !2935)
!2940 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !2941, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2943)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{null, !106}
!2943 = !{!2944}
!2944 = !DILocalVariable(name: "fn", arg: 1, scope: !2940, file: !105, line: 63, type: !106)
!2945 = !DILocation(line: 0, scope: !2940)
!2946 = !DILocation(line: 65, column: 12, scope: !2940)
!2947 = !DILocation(line: 66, column: 1, scope: !2940)
!2948 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !2949, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !322)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!102}
!2951 = !DILocation(line: 78, column: 9, scope: !2948)
!2952 = !DILocation(line: 78, column: 2, scope: !2948)
!2953 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !2954, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2963)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{null, !144, !2956}
!2956 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2957, line: 99, baseType: !2958)
!2957 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2958 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2957, line: 40, baseType: !2959)
!2959 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !2960)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2961)
!2961 = !{!2962}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2960, file: !105, line: 79, baseType: !102, size: 32)
!2963 = !{!2964, !2965, !2966}
!2964 = !DILocalVariable(name: "fmt", arg: 1, scope: !2953, file: !105, line: 113, type: !144)
!2965 = !DILocalVariable(name: "ap", arg: 2, scope: !2953, file: !105, line: 113, type: !2956)
!2966 = !DILocalVariable(name: "ctx", scope: !2967, file: !105, line: 121, type: !2969)
!2967 = distinct !DILexicalBlock(scope: !2968, file: !105, line: 120, column: 27)
!2968 = distinct !DILexicalBlock(scope: !2953, file: !105, line: 120, column: 6)
!2969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !2970)
!2970 = !{!2971, !2972}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !2969, file: !105, line: 85, baseType: !32, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2969, file: !105, line: 86, baseType: !2973, offset: 32)
!2973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2974)
!2974 = !{!2975}
!2975 = !DISubrange(count: 0)
!2976 = !DILocation(line: 0, scope: !2953)
!2977 = !DILocation(line: 148, column: 3, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2968, file: !105, line: 138, column: 9)
!2979 = !DILocation(line: 155, column: 1, scope: !2953)
!2980 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !2981, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2983)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{!103, !103, !102}
!2983 = !{!2984, !2985}
!2984 = !DILocalVariable(name: "c", arg: 1, scope: !2980, file: !105, line: 107, type: !103)
!2985 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !2980, file: !105, line: 107, type: !102)
!2986 = !DILocation(line: 0, scope: !2980)
!2987 = !DILocation(line: 110, column: 9, scope: !2980)
!2988 = !DILocation(line: 110, column: 2, scope: !2980)
!2989 = distinct !DISubprogram(name: "cbvprintf", scope: !2990, file: !2990, line: 739, type: !2991, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2997)
!2990 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!103, !2993, !102, !144, !2956}
!2993 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !2990, line: 297, baseType: !2994)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 32)
!2995 = !DISubroutineType(types: !2996)
!2996 = !{!103, null}
!2997 = !{!2998, !2999, !3000, !3001}
!2998 = !DILocalVariable(name: "out", arg: 1, scope: !2989, file: !2990, line: 739, type: !2993)
!2999 = !DILocalVariable(name: "ctx", arg: 2, scope: !2989, file: !2990, line: 739, type: !102)
!3000 = !DILocalVariable(name: "format", arg: 3, scope: !2989, file: !2990, line: 739, type: !144)
!3001 = !DILocalVariable(name: "ap", arg: 4, scope: !2989, file: !2990, line: 739, type: !2956)
!3002 = !DILocation(line: 0, scope: !2989)
!3003 = !DILocation(line: 741, column: 9, scope: !2989)
!3004 = !DILocation(line: 741, column: 2, scope: !2989)
!3005 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3006, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3008)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{null, !995, !200}
!3008 = !{!3009, !3010, !3011}
!3009 = !DILocalVariable(name: "c", arg: 1, scope: !3005, file: !105, line: 157, type: !995)
!3010 = !DILocalVariable(name: "n", arg: 2, scope: !3005, file: !105, line: 157, type: !200)
!3011 = !DILocalVariable(name: "i", scope: !3005, file: !105, line: 159, type: !200)
!3012 = !DILocation(line: 0, scope: !3005)
!3013 = !DILocation(line: 164, column: 16, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3015, file: !105, line: 164, column: 2)
!3015 = distinct !DILexicalBlock(scope: !3005, file: !105, line: 164, column: 2)
!3016 = !DILocation(line: 164, column: 2, scope: !3015)
!3017 = !DILocation(line: 165, column: 3, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3014, file: !105, line: 164, column: 26)
!3019 = !DILocation(line: 165, column: 13, scope: !3018)
!3020 = !DILocation(line: 164, column: 22, scope: !3014)
!3021 = distinct !{!3021, !3016, !3022}
!3022 = !DILocation(line: 166, column: 2, scope: !3015)
!3023 = !DILocation(line: 171, column: 1, scope: !3005)
!3024 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3025, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3027)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{null, !144, null}
!3027 = !{!3028, !3029}
!3028 = !DILocalVariable(name: "fmt", arg: 1, scope: !3024, file: !105, line: 203, type: !144)
!3029 = !DILocalVariable(name: "ap", scope: !3024, file: !105, line: 205, type: !2956)
!3030 = !DILocation(line: 0, scope: !3024)
!3031 = !DILocation(line: 205, column: 2, scope: !3024)
!3032 = !DILocation(line: 205, column: 10, scope: !3024)
!3033 = !DILocation(line: 207, column: 2, scope: !3024)
!3034 = !DILocation(line: 209, column: 2, scope: !3024)
!3035 = !DILocation(line: 211, column: 2, scope: !3024)
!3036 = !DILocation(line: 212, column: 1, scope: !3024)
!3037 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3038, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3040)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{!103, !995, !200, !144, null}
!3040 = !{!3041, !3042, !3043, !3044, !3045}
!3041 = !DILocalVariable(name: "str", arg: 1, scope: !3037, file: !105, line: 239, type: !995)
!3042 = !DILocalVariable(name: "size", arg: 2, scope: !3037, file: !105, line: 239, type: !200)
!3043 = !DILocalVariable(name: "fmt", arg: 3, scope: !3037, file: !105, line: 239, type: !144)
!3044 = !DILocalVariable(name: "ap", scope: !3037, file: !105, line: 241, type: !2956)
!3045 = !DILocalVariable(name: "ret", scope: !3037, file: !105, line: 242, type: !103)
!3046 = !DILocation(line: 0, scope: !3037)
!3047 = !DILocation(line: 241, column: 2, scope: !3037)
!3048 = !DILocation(line: 241, column: 10, scope: !3037)
!3049 = !DILocation(line: 244, column: 2, scope: !3037)
!3050 = !DILocation(line: 245, column: 8, scope: !3037)
!3051 = !DILocation(line: 246, column: 2, scope: !3037)
!3052 = !DILocation(line: 249, column: 1, scope: !3037)
!3053 = !DILocation(line: 248, column: 2, scope: !3037)
!3054 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3055, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3057)
!3055 = !DISubroutineType(types: !3056)
!3056 = !{!103, !995, !200, !144, !2956}
!3057 = !{!3058, !3059, !3060, !3061, !3062}
!3058 = !DILocalVariable(name: "str", arg: 1, scope: !3054, file: !105, line: 251, type: !995)
!3059 = !DILocalVariable(name: "size", arg: 2, scope: !3054, file: !105, line: 251, type: !200)
!3060 = !DILocalVariable(name: "fmt", arg: 3, scope: !3054, file: !105, line: 251, type: !144)
!3061 = !DILocalVariable(name: "ap", arg: 4, scope: !3054, file: !105, line: 251, type: !2956)
!3062 = !DILocalVariable(name: "ctx", scope: !3054, file: !105, line: 253, type: !3063)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3064)
!3064 = !{!3065, !3066, !3067}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3063, file: !105, line: 218, baseType: !995, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3063, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3063, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3068 = !DILocation(line: 0, scope: !3054)
!3069 = !DILocation(line: 253, column: 2, scope: !3054)
!3070 = !DILocation(line: 253, column: 21, scope: !3054)
!3071 = !DILocation(line: 253, column: 27, scope: !3054)
!3072 = !DILocation(line: 255, column: 2, scope: !3054)
!3073 = !DILocation(line: 257, column: 10, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3054, file: !105, line: 257, column: 6)
!3075 = !DILocation(line: 257, column: 22, scope: !3074)
!3076 = !DILocation(line: 257, column: 16, scope: !3074)
!3077 = !DILocation(line: 257, column: 6, scope: !3054)
!3078 = !DILocation(line: 258, column: 3, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3074, file: !105, line: 257, column: 27)
!3080 = !DILocation(line: 258, column: 18, scope: !3079)
!3081 = !DILocation(line: 259, column: 2, scope: !3079)
!3082 = !DILocation(line: 262, column: 1, scope: !3054)
!3083 = !DILocation(line: 261, column: 2, scope: !3054)
!3084 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3085, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3088)
!3085 = !DISubroutineType(types: !3086)
!3086 = !{!103, !103, !3087}
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 32)
!3088 = !{!3089, !3090}
!3089 = !DILocalVariable(name: "c", arg: 1, scope: !3084, file: !105, line: 223, type: !103)
!3090 = !DILocalVariable(name: "ctx", arg: 2, scope: !3084, file: !105, line: 223, type: !3087)
!3091 = !DILocation(line: 0, scope: !3084)
!3092 = !DILocation(line: 225, column: 11, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3084, file: !105, line: 225, column: 6)
!3094 = !DILocation(line: 225, column: 15, scope: !3093)
!3095 = !DILocation(line: 0, scope: !3093)
!3096 = !DILocation(line: 225, column: 23, scope: !3093)
!3097 = !DILocation(line: 225, column: 45, scope: !3093)
!3098 = !DILocation(line: 225, column: 37, scope: !3093)
!3099 = !DILocation(line: 225, column: 6, scope: !3084)
!3100 = !DILocation(line: 226, column: 8, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3093, file: !105, line: 225, column: 50)
!3102 = !DILocation(line: 226, column: 13, scope: !3101)
!3103 = !DILocation(line: 227, column: 3, scope: !3101)
!3104 = !DILocation(line: 230, column: 29, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3084, file: !105, line: 230, column: 6)
!3106 = !DILocation(line: 230, column: 17, scope: !3105)
!3107 = !DILocation(line: 230, column: 6, scope: !3084)
!3108 = !DILocation(line: 231, column: 22, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3105, file: !105, line: 230, column: 34)
!3110 = !DILocation(line: 231, column: 3, scope: !3109)
!3111 = !DILocation(line: 231, column: 26, scope: !3109)
!3112 = !DILocation(line: 232, column: 2, scope: !3109)
!3113 = !DILocation(line: 233, column: 28, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3105, file: !105, line: 232, column: 9)
!3115 = !DILocation(line: 233, column: 22, scope: !3114)
!3116 = !DILocation(line: 233, column: 3, scope: !3114)
!3117 = !DILocation(line: 233, column: 26, scope: !3114)
!3118 = !DILocation(line: 237, column: 1, scope: !3084)
!3119 = distinct !DISubprogram(name: "z_thread_entry", scope: !3120, file: !3120, line: 30, type: !3121, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !3128)
!3120 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3121 = !DISubroutineType(types: !3122)
!3122 = !{null, !3123, !102, !102, !102}
!3123 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3124, line: 46, baseType: !3125)
!3124 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 32)
!3126 = !DISubroutineType(types: !3127)
!3127 = !{null, !102, !102, !102}
!3128 = !{!3129, !3130, !3131, !3132}
!3129 = !DILocalVariable(name: "entry", arg: 1, scope: !3119, file: !3120, line: 30, type: !3123)
!3130 = !DILocalVariable(name: "p1", arg: 2, scope: !3119, file: !3120, line: 31, type: !102)
!3131 = !DILocalVariable(name: "p2", arg: 3, scope: !3119, file: !3120, line: 31, type: !102)
!3132 = !DILocalVariable(name: "p3", arg: 4, scope: !3119, file: !3120, line: 31, type: !102)
!3133 = !DILocation(line: 0, scope: !3119)
!3134 = !DILocation(line: 36, column: 2, scope: !3119)
!3135 = !DILocation(line: 38, column: 17, scope: !3119)
!3136 = !DILocation(line: 38, column: 2, scope: !3119)
!3137 = !DILocation(line: 45, column: 2, scope: !3119)
!3138 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !3139, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !322)
!3139 = !DISubroutineType(types: !3140)
!3140 = !{!3141}
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !3142)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 32)
!3143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !3144)
!3144 = !{!3145, !3203, !3215, !3216, !3217, !3218, !3224, !3237}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3143, file: !211, line: 247, baseType: !3146, size: 384)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !3147)
!3147 = !{!3148, !3172, !3179, !3180, !3181, !3190, !3191, !3192}
!3148 = !DIDerivedType(tag: DW_TAG_member, scope: !3146, file: !211, line: 60, baseType: !3149, size: 64)
!3149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3146, file: !211, line: 60, size: 64, elements: !3150)
!3150 = !{!3151, !3166}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3149, file: !211, line: 61, baseType: !3152, size: 64)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !3153)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !3154)
!3154 = !{!3155, !3161}
!3155 = !DIDerivedType(tag: DW_TAG_member, scope: !3153, file: !221, line: 38, baseType: !3156, size: 32)
!3156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3153, file: !221, line: 38, size: 32, elements: !3157)
!3157 = !{!3158, !3160}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3156, file: !221, line: 39, baseType: !3159, size: 32)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3156, file: !221, line: 40, baseType: !3159, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, scope: !3153, file: !221, line: 42, baseType: !3162, size: 32, offset: 32)
!3162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3153, file: !221, line: 42, size: 32, elements: !3163)
!3163 = !{!3164, !3165}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3162, file: !221, line: 43, baseType: !3159, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3162, file: !221, line: 44, baseType: !3159, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3149, file: !211, line: 62, baseType: !3167, size: 64)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !3168)
!3168 = !{!3169}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3167, file: !237, line: 50, baseType: !3170, size: 64)
!3170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3171, size: 64, elements: !242)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3146, file: !211, line: 68, baseType: !3173, size: 32, offset: 64)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !3175)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !3176)
!3176 = !{!3177}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3175, file: !247, line: 232, baseType: !3178, size: 64)
!3178 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !3153)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3146, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3146, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!3181 = !DIDerivedType(tag: DW_TAG_member, scope: !3146, file: !211, line: 90, baseType: !3182, size: 16, offset: 112)
!3182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3146, file: !211, line: 90, size: 16, elements: !3183)
!3183 = !{!3184, !3189}
!3184 = !DIDerivedType(tag: DW_TAG_member, scope: !3182, file: !211, line: 91, baseType: !3185, size: 16)
!3185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3182, file: !211, line: 91, size: 16, elements: !3186)
!3186 = !{!3187, !3188}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3185, file: !211, line: 96, baseType: !261, size: 8)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3185, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3182, file: !211, line: 100, baseType: !265, size: 16)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3146, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3146, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3146, file: !211, line: 131, baseType: !3193, size: 192, offset: 192)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !3194)
!3194 = !{!3195, !3196, !3202}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3193, file: !247, line: 245, baseType: !3152, size: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3193, file: !247, line: 246, baseType: !3197, size: 32, offset: 64)
!3197 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !3198)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 32)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{null, !3201}
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3193, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3143, file: !211, line: 250, baseType: !3204, size: 288, offset: 384)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !3205)
!3205 = !{!3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3204, file: !284, line: 26, baseType: !121, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3204, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3204, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3204, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3204, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3204, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3204, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3204, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3204, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3143, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3143, file: !211, line: 256, baseType: !3174, size: 64, offset: 704)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3143, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3143, file: !211, line: 300, baseType: !3219, size: 96, offset: 800)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !3220)
!3220 = !{!3221, !3222, !3223}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3219, file: !211, line: 153, baseType: !22, size: 32)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3219, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3219, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3143, file: !211, line: 325, baseType: !3225, size: 32, offset: 896)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 32)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !3227)
!3227 = !{!3228, !3234, !3235}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3226, file: !307, line: 5074, baseType: !3229, size: 96)
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !3230)
!3230 = !{!3231, !3232, !3233}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3229, file: !311, line: 57, baseType: !314, size: 32)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3229, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3229, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3226, file: !307, line: 5075, baseType: !3174, size: 64, offset: 96)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3226, file: !307, line: 5076, baseType: !3236, offset: 160)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3143, file: !211, line: 343, baseType: !3238, size: 64, offset: 928)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !3239)
!3239 = !{!3240, !3241}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3238, file: !284, line: 63, baseType: !121, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3238, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!3242 = !DILocation(line: 535, column: 9, scope: !3138)
!3243 = !DILocation(line: 535, column: 2, scope: !3138)
!3244 = distinct !DISubprogram(name: "k_thread_abort", scope: !3245, file: !3245, line: 188, type: !3246, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !3248)
!3245 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!3246 = !DISubroutineType(types: !3247)
!3247 = !{null, !3141}
!3248 = !{!3249}
!3249 = !DILocalVariable(name: "thread", arg: 1, scope: !3244, file: !3245, line: 188, type: !3141)
!3250 = !DILocation(line: 0, scope: !3244)
!3251 = !DILocation(line: 197, column: 2, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3244, file: !3245, line: 197, column: 2)
!3253 = !{i64 2155057694}
!3254 = !DILocation(line: 198, column: 2, scope: !3244)
!3255 = !DILocation(line: 199, column: 1, scope: !3244)
!3256 = distinct !DISubprogram(name: "z_current_get", scope: !3245, file: !3245, line: 173, type: !3139, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !322)
!3257 = !DILocation(line: 180, column: 2, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3256, file: !3245, line: 180, column: 2)
!3259 = !{i64 2155057626}
!3260 = !DILocation(line: 181, column: 9, scope: !3256)
!3261 = !DILocation(line: 181, column: 2, scope: !3256)
!3262 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2264, file: !2264, line: 1338, type: !3263, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3271)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!103, !2993, !102, !144, !3265, !121}
!3265 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2957, line: 99, baseType: !3266)
!3266 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2957, line: 40, baseType: !3267)
!3267 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2264, baseType: !3268)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3269)
!3269 = !{!3270}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3268, file: !2264, baseType: !102, size: 32)
!3271 = !{!3272, !3273, !3274, !3275, !3276, !3277, !3281, !3282, !3283, !3285, !3290, !3335, !3338, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3350, !3351, !3352, !3356, !3359, !3361, !3364, !3365, !3366, !3371, !3377, !3380, !3384, !3390, !3394, !3397, !3399, !3402}
!3272 = !DILocalVariable(name: "out", arg: 1, scope: !3262, file: !2264, line: 1338, type: !2993)
!3273 = !DILocalVariable(name: "ctx", arg: 2, scope: !3262, file: !2264, line: 1338, type: !102)
!3274 = !DILocalVariable(name: "fp", arg: 3, scope: !3262, file: !2264, line: 1338, type: !144)
!3275 = !DILocalVariable(name: "ap", arg: 4, scope: !3262, file: !2264, line: 1339, type: !3265)
!3276 = !DILocalVariable(name: "flags", arg: 5, scope: !3262, file: !2264, line: 1339, type: !121)
!3277 = !DILocalVariable(name: "buf", scope: !3262, file: !2264, line: 1341, type: !3278)
!3278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !3279)
!3279 = !{!3280}
!3280 = !DISubrange(count: 22)
!3281 = !DILocalVariable(name: "count", scope: !3262, file: !2264, line: 1342, type: !200)
!3282 = !DILocalVariable(name: "sint", scope: !3262, file: !2264, line: 1343, type: !2283)
!3283 = !DILocalVariable(name: "tagged_ap", scope: !3262, file: !2264, line: 1345, type: !3284)
!3284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!3285 = !DILocalVariable(name: "rc", scope: !3286, file: !2264, line: 1377, type: !103)
!3286 = distinct !DILexicalBlock(scope: !3287, file: !2264, line: 1377, column: 4)
!3287 = distinct !DILexicalBlock(scope: !3288, file: !2264, line: 1376, column: 19)
!3288 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1376, column: 7)
!3289 = distinct !DILexicalBlock(scope: !3262, file: !2264, line: 1375, column: 19)
!3290 = !DILocalVariable(name: "state", scope: !3289, file: !2264, line: 1395, type: !3291)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3262, file: !2264, line: 1392, size: 192, elements: !3292)
!3292 = !{!3293, !3303}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3291, file: !2264, line: 1393, baseType: !3294, size: 64)
!3294 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2264, line: 166, size: 64, elements: !3295)
!3295 = !{!3296, !3297, !3298, !3300, !3302}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3294, file: !2264, line: 168, baseType: !2283, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3294, file: !2264, line: 171, baseType: !2286, size: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3294, file: !2264, line: 174, baseType: !3299, size: 64)
!3299 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3294, file: !2264, line: 177, baseType: !3301, size: 64)
!3301 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3294, file: !2264, line: 180, baseType: !102, size: 32)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3291, file: !2264, line: 1394, baseType: !3304, size: 96, offset: 64)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2264, line: 189, size: 96, elements: !3305)
!3305 = !{!3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3330}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3304, file: !2264, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3304, file: !2264, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3304, file: !2264, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3304, file: !2264, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3304, file: !2264, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3304, file: !2264, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3304, file: !2264, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3304, file: !2264, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3304, file: !2264, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3304, file: !2264, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3304, file: !2264, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3304, file: !2264, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3304, file: !2264, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3304, file: !2264, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3304, file: !2264, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3304, file: !2264, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3304, file: !2264, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3304, file: !2264, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3304, file: !2264, line: 260, baseType: !155, size: 8, offset: 24)
!3325 = !DIDerivedType(tag: DW_TAG_member, scope: !3304, file: !2264, line: 262, baseType: !3326, size: 32, offset: 32)
!3326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3304, file: !2264, line: 262, size: 32, elements: !3327)
!3327 = !{!3328, !3329}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3326, file: !2264, line: 267, baseType: !103, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3326, file: !2264, line: 289, baseType: !103, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, scope: !3304, file: !2264, line: 292, baseType: !3331, size: 32, offset: 64)
!3331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3304, file: !2264, line: 292, size: 32, elements: !3332)
!3332 = !{!3333, !3334}
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3331, file: !2264, line: 297, baseType: !103, size: 32)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3331, file: !2264, line: 306, baseType: !103, size: 32)
!3335 = !DILocalVariable(name: "conv", scope: !3289, file: !2264, line: 1400, type: !3336)
!3336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3337)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 32)
!3338 = !DILocalVariable(name: "value", scope: !3289, file: !2264, line: 1401, type: !3339)
!3339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3340)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 32)
!3341 = !DILocalVariable(name: "sp", scope: !3289, file: !2264, line: 1402, type: !144)
!3342 = !DILocalVariable(name: "width", scope: !3289, file: !2264, line: 1403, type: !103)
!3343 = !DILocalVariable(name: "precision", scope: !3289, file: !2264, line: 1404, type: !103)
!3344 = !DILocalVariable(name: "bps", scope: !3289, file: !2264, line: 1405, type: !144)
!3345 = !DILocalVariable(name: "bpe", scope: !3289, file: !2264, line: 1406, type: !144)
!3346 = !DILocalVariable(name: "sign", scope: !3289, file: !2264, line: 1407, type: !146)
!3347 = !DILocalVariable(name: "arg", scope: !3348, file: !2264, line: 1432, type: !103)
!3348 = distinct !DILexicalBlock(scope: !3349, file: !2264, line: 1431, column: 24)
!3349 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1431, column: 7)
!3350 = !DILocalVariable(name: "specifier_cat", scope: !3289, file: !2264, line: 1468, type: !2263)
!3351 = !DILocalVariable(name: "length_mod", scope: !3289, file: !2264, line: 1470, type: !2271)
!3352 = !DILocalVariable(name: "rc", scope: !3353, file: !2264, line: 1575, type: !103)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !2264, line: 1575, column: 4)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !2264, line: 1574, column: 43)
!3355 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1574, column: 7)
!3356 = !DILocalVariable(name: "rc", scope: !3357, file: !2264, line: 1584, type: !103)
!3357 = distinct !DILexicalBlock(scope: !3358, file: !2264, line: 1584, column: 4)
!3358 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1582, column: 28)
!3359 = !DILocalVariable(name: "len", scope: !3360, file: !2264, line: 1589, type: !200)
!3360 = distinct !DILexicalBlock(scope: !3358, file: !2264, line: 1586, column: 13)
!3361 = !DILocalVariable(name: "len", scope: !3362, file: !2264, line: 1641, type: !200)
!3362 = distinct !DILexicalBlock(scope: !3363, file: !2264, line: 1640, column: 24)
!3363 = distinct !DILexicalBlock(scope: !3358, file: !2264, line: 1640, column: 8)
!3364 = !DILocalVariable(name: "nj_len", scope: !3289, file: !2264, line: 1722, type: !200)
!3365 = !DILocalVariable(name: "pad_len", scope: !3289, file: !2264, line: 1723, type: !103)
!3366 = !DILocalVariable(name: "pad", scope: !3367, file: !2264, line: 1751, type: !146)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !2264, line: 1750, column: 26)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !2264, line: 1750, column: 8)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !2264, line: 1747, column: 18)
!3370 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1747, column: 7)
!3371 = !DILocalVariable(name: "rc", scope: !3372, file: !2264, line: 1758, type: !103)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !2264, line: 1758, column: 7)
!3373 = distinct !DILexicalBlock(scope: !3374, file: !2264, line: 1757, column: 21)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !2264, line: 1757, column: 10)
!3375 = distinct !DILexicalBlock(scope: !3376, file: !2264, line: 1756, column: 26)
!3376 = distinct !DILexicalBlock(scope: !3367, file: !2264, line: 1756, column: 9)
!3377 = !DILocalVariable(name: "rc", scope: !3378, file: !2264, line: 1765, type: !103)
!3378 = distinct !DILexicalBlock(scope: !3379, file: !2264, line: 1765, column: 6)
!3379 = distinct !DILexicalBlock(scope: !3367, file: !2264, line: 1764, column: 25)
!3380 = !DILocalVariable(name: "rc", scope: !3381, file: !2264, line: 1774, type: !103)
!3381 = distinct !DILexicalBlock(scope: !3382, file: !2264, line: 1774, column: 4)
!3382 = distinct !DILexicalBlock(scope: !3383, file: !2264, line: 1773, column: 18)
!3383 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1773, column: 7)
!3384 = !DILocalVariable(name: "rc", scope: !3385, file: !2264, line: 1819, type: !103)
!3385 = distinct !DILexicalBlock(scope: !3386, file: !2264, line: 1819, column: 5)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !2264, line: 1818, column: 44)
!3387 = distinct !DILexicalBlock(scope: !3388, file: !2264, line: 1818, column: 8)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !2264, line: 1817, column: 10)
!3389 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1777, column: 7)
!3390 = !DILocalVariable(name: "rc", scope: !3391, file: !2264, line: 1823, type: !103)
!3391 = distinct !DILexicalBlock(scope: !3392, file: !2264, line: 1823, column: 5)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !2264, line: 1822, column: 26)
!3393 = distinct !DILexicalBlock(scope: !3388, file: !2264, line: 1822, column: 8)
!3394 = !DILocalVariable(name: "rc", scope: !3395, file: !2264, line: 1828, type: !103)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !2264, line: 1828, column: 5)
!3396 = distinct !DILexicalBlock(scope: !3388, file: !2264, line: 1827, column: 26)
!3397 = !DILocalVariable(name: "rc", scope: !3398, file: !2264, line: 1831, type: !103)
!3398 = distinct !DILexicalBlock(scope: !3388, file: !2264, line: 1831, column: 4)
!3399 = !DILocalVariable(name: "rc", scope: !3400, file: !2264, line: 1836, type: !103)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !2264, line: 1836, column: 4)
!3401 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1835, column: 21)
!3402 = !DILabel(scope: !3358, name: "prec_int_pad0", file: !2264, line: 1634)
!3403 = !DILocation(line: 0, scope: !3262)
!3404 = !DILocation(line: 1341, column: 2, scope: !3262)
!3405 = !DILocation(line: 1341, column: 7, scope: !3262)
!3406 = !DILocation(line: 1375, column: 2, scope: !3262)
!3407 = !DILocation(line: 1342, column: 9, scope: !3262)
!3408 = !DILocation(line: 1375, column: 9, scope: !3262)
!3409 = !DILocation(line: 1377, column: 4, scope: !3286)
!3410 = !DILocation(line: 0, scope: !3286)
!3411 = !DILocation(line: 1377, column: 4, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3286, file: !2264, line: 1377, column: 4)
!3413 = distinct !{!3413, !3406, !3414}
!3414 = !DILocation(line: 1839, column: 2, scope: !3262)
!3415 = !DILocation(line: 1392, column: 3, scope: !3289)
!3416 = !DILocation(line: 1395, column: 5, scope: !3289)
!3417 = !DILocation(line: 0, scope: !3289)
!3418 = !DILocation(line: 1409, column: 8, scope: !3289)
!3419 = !DILocation(line: 1414, column: 13, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1414, column: 7)
!3421 = !DILocation(line: 1414, column: 7, scope: !3289)
!3422 = !DILocation(line: 1415, column: 12, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3420, file: !2264, line: 1414, column: 25)
!3424 = !DILocation(line: 1417, column: 14, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3423, file: !2264, line: 1417, column: 8)
!3426 = !DILocation(line: 1417, column: 8, scope: !3423)
!3427 = !DILocation(line: 1418, column: 21, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3425, file: !2264, line: 1417, column: 19)
!3429 = !DILocation(line: 1419, column: 13, scope: !3428)
!3430 = !DILocation(line: 1420, column: 4, scope: !3428)
!3431 = !DILocation(line: 1421, column: 20, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3420, file: !2264, line: 1421, column: 14)
!3433 = !DILocation(line: 1421, column: 14, scope: !3420)
!3434 = !DILocation(line: 1431, column: 13, scope: !3349)
!3435 = !DILocation(line: 1431, column: 7, scope: !3289)
!3436 = !DILocation(line: 1432, column: 14, scope: !3348)
!3437 = !DILocation(line: 0, scope: !3348)
!3438 = !DILocation(line: 1434, column: 12, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3348, file: !2264, line: 1434, column: 8)
!3440 = !DILocation(line: 1434, column: 8, scope: !3348)
!3441 = !DILocation(line: 1435, column: 24, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3439, file: !2264, line: 1434, column: 17)
!3443 = !DILocation(line: 1436, column: 4, scope: !3442)
!3444 = !DILocation(line: 1439, column: 20, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3349, file: !2264, line: 1439, column: 14)
!3446 = !DILocation(line: 1439, column: 14, scope: !3349)
!3447 = !DILocation(line: 1469, column: 37, scope: !3289)
!3448 = !DILocation(line: 1448, column: 20, scope: !3289)
!3449 = !DILocation(line: 1449, column: 22, scope: !3289)
!3450 = !DILocation(line: 1471, column: 34, scope: !3289)
!3451 = !DILocation(line: 1478, column: 7, scope: !3289)
!3452 = !DILocation(line: 1479, column: 4, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3454, file: !2264, line: 1478, column: 40)
!3454 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1478, column: 7)
!3455 = !DILocation(line: 1484, column: 19, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3453, file: !2264, line: 1479, column: 24)
!3457 = !DILocation(line: 1484, column: 17, scope: !3456)
!3458 = !DILocation(line: 1485, column: 5, scope: !3456)
!3459 = !DILocation(line: 1492, column: 20, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !2264, line: 1491, column: 12)
!3461 = distinct !DILexicalBlock(scope: !3456, file: !2264, line: 1487, column: 9)
!3462 = !DILocation(line: 1492, column: 18, scope: !3460)
!3463 = !DILocation(line: 1494, column: 5, scope: !3456)
!3464 = !DILocation(line: 1497, column: 23, scope: !3456)
!3465 = !DILocation(line: 1496, column: 17, scope: !3456)
!3466 = !DILocation(line: 1498, column: 5, scope: !3456)
!3467 = !DILocation(line: 1501, column: 23, scope: !3456)
!3468 = !DILocation(line: 1500, column: 17, scope: !3456)
!3469 = !DILocation(line: 1502, column: 5, scope: !3456)
!3470 = !DILocation(line: 1513, column: 23, scope: !3456)
!3471 = !DILocation(line: 1513, column: 6, scope: !3456)
!3472 = !DILocation(line: 1512, column: 17, scope: !3456)
!3473 = !DILocation(line: 1514, column: 5, scope: !3456)
!3474 = !DILocation(line: 0, scope: !3456)
!3475 = !DILocation(line: 1516, column: 8, scope: !3453)
!3476 = !DILocation(line: 1517, column: 19, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !2264, line: 1516, column: 33)
!3478 = distinct !DILexicalBlock(scope: !3453, file: !2264, line: 1516, column: 8)
!3479 = !DILocation(line: 1517, column: 17, scope: !3477)
!3480 = !DILocation(line: 1518, column: 4, scope: !3477)
!3481 = !DILocation(line: 1519, column: 19, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3483, file: !2264, line: 1518, column: 39)
!3483 = distinct !DILexicalBlock(scope: !3478, file: !2264, line: 1518, column: 15)
!3484 = !DILocation(line: 1519, column: 17, scope: !3482)
!3485 = !DILocation(line: 1520, column: 4, scope: !3482)
!3486 = !DILocation(line: 1522, column: 4, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !2264, line: 1521, column: 47)
!3488 = distinct !DILexicalBlock(scope: !3454, file: !2264, line: 1521, column: 14)
!3489 = !DILocation(line: 1527, column: 19, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3487, file: !2264, line: 1522, column: 24)
!3491 = !DILocation(line: 1527, column: 17, scope: !3490)
!3492 = !DILocation(line: 1528, column: 5, scope: !3490)
!3493 = !DILocation(line: 0, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3490, file: !2264, line: 1530, column: 9)
!3495 = !DILocation(line: 1540, column: 23, scope: !3490)
!3496 = !DILocation(line: 1539, column: 17, scope: !3490)
!3497 = !DILocation(line: 1542, column: 5, scope: !3490)
!3498 = !DILocation(line: 1545, column: 23, scope: !3490)
!3499 = !DILocation(line: 1544, column: 17, scope: !3490)
!3500 = !DILocation(line: 1547, column: 5, scope: !3490)
!3501 = !DILocation(line: 1551, column: 23, scope: !3490)
!3502 = !DILocation(line: 1551, column: 6, scope: !3490)
!3503 = !DILocation(line: 1550, column: 17, scope: !3490)
!3504 = !DILocation(line: 1552, column: 5, scope: !3490)
!3505 = !DILocation(line: 0, scope: !3490)
!3506 = !DILocation(line: 1554, column: 8, scope: !3487)
!3507 = !DILocation(line: 1555, column: 19, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !2264, line: 1554, column: 33)
!3509 = distinct !DILexicalBlock(scope: !3487, file: !2264, line: 1554, column: 8)
!3510 = !DILocation(line: 1555, column: 17, scope: !3508)
!3511 = !DILocation(line: 1556, column: 4, scope: !3508)
!3512 = !DILocation(line: 1557, column: 19, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !2264, line: 1556, column: 39)
!3514 = distinct !DILexicalBlock(scope: !3509, file: !2264, line: 1556, column: 15)
!3515 = !DILocation(line: 1557, column: 17, scope: !3513)
!3516 = !DILocation(line: 1558, column: 4, scope: !3513)
!3517 = !DILocation(line: 0, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !2264, line: 1560, column: 8)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !2264, line: 1559, column: 45)
!3520 = distinct !DILexicalBlock(scope: !3488, file: !2264, line: 1559, column: 14)
!3521 = !DILocation(line: 1566, column: 17, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !2264, line: 1565, column: 46)
!3523 = distinct !DILexicalBlock(scope: !3520, file: !2264, line: 1565, column: 14)
!3524 = !DILocation(line: 1566, column: 15, scope: !3522)
!3525 = !DILocation(line: 1567, column: 3, scope: !3522)
!3526 = !DILocation(line: 1574, column: 21, scope: !3355)
!3527 = !DILocation(line: 1575, column: 4, scope: !3353)
!3528 = !DILocation(line: 0, scope: !3353)
!3529 = !DILocation(line: 1575, column: 4, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3353, file: !2264, line: 1575, column: 4)
!3531 = !DILocation(line: 1582, column: 17, scope: !3289)
!3532 = !DILocation(line: 1582, column: 3, scope: !3289)
!3533 = !DILocation(line: 1584, column: 4, scope: !3357)
!3534 = !DILocation(line: 0, scope: !3357)
!3535 = !DILocation(line: 1584, column: 4, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3357, file: !2264, line: 1584, column: 4)
!3537 = !DILocation(line: 1587, column: 31, scope: !3360)
!3538 = !DILocation(line: 1591, column: 18, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3360, file: !2264, line: 1591, column: 8)
!3540 = !DILocation(line: 1591, column: 8, scope: !3360)
!3541 = !DILocation(line: 1592, column: 11, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3539, file: !2264, line: 1591, column: 24)
!3543 = !DILocation(line: 0, scope: !3360)
!3544 = !DILocation(line: 1593, column: 4, scope: !3542)
!3545 = !DILocation(line: 1594, column: 11, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3539, file: !2264, line: 1593, column: 11)
!3547 = !DILocation(line: 1604, column: 51, scope: !3358)
!3548 = !DILocation(line: 1604, column: 13, scope: !3358)
!3549 = !DILocation(line: 1604, column: 11, scope: !3358)
!3550 = !DILocation(line: 1606, column: 4, scope: !3358)
!3551 = !DILocation(line: 1609, column: 14, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3358, file: !2264, line: 1609, column: 8)
!3553 = !DILocation(line: 1609, column: 8, scope: !3358)
!3554 = !DILocation(line: 1619, column: 18, scope: !3358)
!3555 = !DILocation(line: 1620, column: 13, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3358, file: !2264, line: 1620, column: 8)
!3557 = !DILocation(line: 1620, column: 8, scope: !3358)
!3558 = !DILocation(line: 1622, column: 36, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3556, file: !2264, line: 1620, column: 18)
!3560 = !DILocation(line: 1622, column: 17, scope: !3559)
!3561 = !DILocation(line: 1623, column: 4, scope: !3559)
!3562 = !DILocation(line: 1632, column: 29, scope: !3358)
!3563 = !DILocation(line: 1632, column: 10, scope: !3358)
!3564 = !DILocation(line: 1632, column: 4, scope: !3358)
!3565 = !DILocation(line: 1407, column: 8, scope: !3289)
!3566 = !DILocation(line: 0, scope: !3358)
!3567 = !DILocation(line: 1634, column: 3, scope: !3358)
!3568 = !DILocation(line: 1640, column: 18, scope: !3363)
!3569 = !DILocation(line: 1640, column: 8, scope: !3358)
!3570 = !DILocation(line: 1729, column: 13, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1729, column: 7)
!3572 = !DILocation(line: 1641, column: 22, scope: !3362)
!3573 = !DILocation(line: 0, scope: !3362)
!3574 = !DILocation(line: 1646, column: 21, scope: !3362)
!3575 = !DILocation(line: 1649, column: 13, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3362, file: !2264, line: 1649, column: 9)
!3577 = !DILocation(line: 1649, column: 9, scope: !3362)
!3578 = !DILocation(line: 1650, column: 35, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3576, file: !2264, line: 1649, column: 34)
!3580 = !DILocation(line: 1650, column: 23, scope: !3579)
!3581 = !DILocation(line: 1651, column: 5, scope: !3579)
!3582 = !DILocation(line: 1660, column: 15, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3358, file: !2264, line: 1660, column: 8)
!3584 = !DILocation(line: 1660, column: 19, scope: !3583)
!3585 = !DILocation(line: 1660, column: 8, scope: !3358)
!3586 = !DILocation(line: 1661, column: 23, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3583, file: !2264, line: 1660, column: 28)
!3588 = !DILocation(line: 1661, column: 11, scope: !3587)
!3589 = !DILocation(line: 1665, column: 22, scope: !3587)
!3590 = !DILocation(line: 1666, column: 21, scope: !3587)
!3591 = !DILocation(line: 1668, column: 5, scope: !3587)
!3592 = !DILocation(line: 1677, column: 30, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !2264, line: 1676, column: 49)
!3594 = distinct !DILexicalBlock(scope: !3358, file: !2264, line: 1676, column: 8)
!3595 = !DILocation(line: 1677, column: 5, scope: !3593)
!3596 = !DILocation(line: 1680, column: 4, scope: !3358)
!3597 = !DILocation(line: 0, scope: !3539)
!3598 = !DILocation(line: 1597, column: 14, scope: !3360)
!3599 = !DILocation(line: 1699, column: 11, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1699, column: 7)
!3601 = !DILocation(line: 1699, column: 7, scope: !3289)
!3602 = !DILocation(line: 1725, column: 7, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1725, column: 7)
!3604 = !DILocation(line: 1725, column: 12, scope: !3603)
!3605 = !DILocation(line: 1747, column: 13, scope: !3370)
!3606 = !DILocation(line: 1747, column: 7, scope: !3289)
!3607 = !DILocation(line: 1722, column: 24, scope: !3289)
!3608 = !DILocation(line: 1725, column: 7, scope: !3289)
!3609 = !DILocation(line: 1729, column: 7, scope: !3289)
!3610 = !DILocation(line: 1736, column: 13, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1736, column: 7)
!3612 = !DILocation(line: 1735, column: 19, scope: !3289)
!3613 = !DILocation(line: 1736, column: 7, scope: !3289)
!3614 = !DILocation(line: 1748, column: 10, scope: !3369)
!3615 = !DILocation(line: 1750, column: 15, scope: !3368)
!3616 = !DILocation(line: 1750, column: 8, scope: !3369)
!3617 = !DILocation(line: 0, scope: !3367)
!3618 = !DILocation(line: 1756, column: 15, scope: !3376)
!3619 = !DILocation(line: 1756, column: 9, scope: !3367)
!3620 = !DILocation(line: 1758, column: 7, scope: !3372)
!3621 = !DILocation(line: 0, scope: !3372)
!3622 = !DILocation(line: 1758, column: 7, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3372, file: !2264, line: 1758, column: 7)
!3624 = !DILocation(line: 1764, column: 5, scope: !3367)
!3625 = !DILocation(line: 0, scope: !3369)
!3626 = !DILocation(line: 1764, column: 20, scope: !3367)
!3627 = !DILocation(line: 1764, column: 17, scope: !3367)
!3628 = !DILocation(line: 1765, column: 6, scope: !3378)
!3629 = !DILocation(line: 0, scope: !3378)
!3630 = !DILocation(line: 1765, column: 6, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3378, file: !2264, line: 1765, column: 6)
!3632 = distinct !{!3632, !3624, !3633}
!3633 = !DILocation(line: 1766, column: 5, scope: !3367)
!3634 = !DILocation(line: 1773, column: 12, scope: !3383)
!3635 = !DILocation(line: 1773, column: 7, scope: !3289)
!3636 = !DILocation(line: 1773, column: 7, scope: !3383)
!3637 = !DILocation(line: 1774, column: 4, scope: !3381)
!3638 = !DILocation(line: 0, scope: !3381)
!3639 = !DILocation(line: 1774, column: 4, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3381, file: !2264, line: 1774, column: 4)
!3641 = !DILocation(line: 1818, column: 8, scope: !3387)
!3642 = !DILocation(line: 1818, column: 27, scope: !3387)
!3643 = !DILocation(line: 1818, column: 25, scope: !3387)
!3644 = !DILocation(line: 1818, column: 8, scope: !3388)
!3645 = !DILocation(line: 1819, column: 5, scope: !3385)
!3646 = !DILocation(line: 0, scope: !3385)
!3647 = !DILocation(line: 1819, column: 5, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3385, file: !2264, line: 1819, column: 5)
!3649 = !DILocation(line: 1822, column: 14, scope: !3393)
!3650 = !DILocation(line: 1822, column: 8, scope: !3388)
!3651 = !DILocation(line: 1823, column: 5, scope: !3391)
!3652 = !DILocation(line: 0, scope: !3391)
!3653 = !DILocation(line: 1823, column: 5, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3391, file: !2264, line: 1823, column: 5)
!3655 = !DILocation(line: 1826, column: 20, scope: !3388)
!3656 = !DILocation(line: 1827, column: 4, scope: !3388)
!3657 = !DILocation(line: 0, scope: !3388)
!3658 = !DILocation(line: 1827, column: 21, scope: !3388)
!3659 = !DILocation(line: 1827, column: 18, scope: !3388)
!3660 = !DILocation(line: 1828, column: 5, scope: !3395)
!3661 = !DILocation(line: 0, scope: !3395)
!3662 = !DILocation(line: 1828, column: 5, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3395, file: !2264, line: 1828, column: 5)
!3664 = distinct !{!3664, !3656, !3665}
!3665 = !DILocation(line: 1829, column: 4, scope: !3388)
!3666 = !DILocation(line: 1831, column: 4, scope: !3398)
!3667 = !DILocation(line: 0, scope: !3398)
!3668 = !DILocation(line: 1831, column: 4, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3398, file: !2264, line: 1831, column: 4)
!3670 = !DILocation(line: 1835, column: 16, scope: !3289)
!3671 = !DILocation(line: 1835, column: 3, scope: !3289)
!3672 = !DILocation(line: 1836, column: 4, scope: !3400)
!3673 = !DILocation(line: 0, scope: !3400)
!3674 = !DILocation(line: 1836, column: 4, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3400, file: !2264, line: 1836, column: 4)
!3676 = !DILocation(line: 1837, column: 4, scope: !3401)
!3677 = distinct !{!3677, !3671, !3678}
!3678 = !DILocation(line: 1838, column: 3, scope: !3289)
!3679 = !DILocation(line: 1844, column: 1, scope: !3262)
!3680 = distinct !DISubprogram(name: "extract_conversion", scope: !2264, file: !2264, line: 642, type: !3681, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3683)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{!144, !3337, !144}
!3683 = !{!3684, !3685}
!3684 = !DILocalVariable(name: "conv", arg: 1, scope: !3680, file: !2264, line: 642, type: !3337)
!3685 = !DILocalVariable(name: "sp", arg: 2, scope: !3680, file: !2264, line: 643, type: !144)
!3686 = !DILocation(line: 0, scope: !3680)
!3687 = !DILocation(line: 645, column: 10, scope: !3680)
!3688 = !DILocation(line: 653, column: 2, scope: !3680)
!3689 = !DILocation(line: 654, column: 6, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3680, file: !2264, line: 654, column: 6)
!3691 = !DILocation(line: 654, column: 10, scope: !3690)
!3692 = !DILocation(line: 654, column: 6, scope: !3680)
!3693 = !DILocation(line: 655, column: 24, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3690, file: !2264, line: 654, column: 18)
!3695 = !DILocation(line: 655, column: 19, scope: !3694)
!3696 = !DILocation(line: 656, column: 3, scope: !3694)
!3697 = !DILocation(line: 659, column: 7, scope: !3680)
!3698 = !DILocation(line: 660, column: 7, scope: !3680)
!3699 = !DILocation(line: 661, column: 7, scope: !3680)
!3700 = !DILocation(line: 662, column: 7, scope: !3680)
!3701 = !DILocation(line: 663, column: 7, scope: !3680)
!3702 = !DILocation(line: 665, column: 2, scope: !3680)
!3703 = !DILocation(line: 666, column: 1, scope: !3680)
!3704 = distinct !DISubprogram(name: "outs", scope: !2264, file: !2264, line: 1319, type: !3705, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3707)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!103, !2993, !102, !144, !144}
!3707 = !{!3708, !3709, !3710, !3711, !3712, !3713}
!3708 = !DILocalVariable(name: "out", arg: 1, scope: !3704, file: !2264, line: 1319, type: !2993)
!3709 = !DILocalVariable(name: "ctx", arg: 2, scope: !3704, file: !2264, line: 1320, type: !102)
!3710 = !DILocalVariable(name: "sp", arg: 3, scope: !3704, file: !2264, line: 1321, type: !144)
!3711 = !DILocalVariable(name: "ep", arg: 4, scope: !3704, file: !2264, line: 1322, type: !144)
!3712 = !DILocalVariable(name: "count", scope: !3704, file: !2264, line: 1324, type: !200)
!3713 = !DILocalVariable(name: "rc", scope: !3714, file: !2264, line: 1327, type: !103)
!3714 = distinct !DILexicalBlock(scope: !3704, file: !2264, line: 1326, column: 45)
!3715 = !DILocation(line: 0, scope: !3704)
!3716 = !DILocation(line: 1326, column: 2, scope: !3704)
!3717 = !DILocation(line: 1324, column: 9, scope: !3704)
!3718 = !DILocation(line: 1326, column: 13, scope: !3704)
!3719 = !DILocation(line: 1326, column: 19, scope: !3704)
!3720 = !DILocation(line: 1327, column: 21, scope: !3714)
!3721 = !DILocation(line: 1326, column: 36, scope: !3704)
!3722 = !DILocation(line: 1326, column: 39, scope: !3704)
!3723 = !DILocation(line: 1327, column: 24, scope: !3714)
!3724 = !DILocation(line: 1327, column: 16, scope: !3714)
!3725 = !DILocation(line: 1327, column: 12, scope: !3714)
!3726 = !DILocation(line: 0, scope: !3714)
!3727 = !DILocation(line: 1329, column: 10, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3714, file: !2264, line: 1329, column: 7)
!3729 = !DILocation(line: 1329, column: 7, scope: !3714)
!3730 = distinct !{!3730, !3716, !3731}
!3731 = !DILocation(line: 1333, column: 2, scope: !3704)
!3732 = !DILocation(line: 1336, column: 1, scope: !3704)
!3733 = distinct !DISubprogram(name: "encode_uint", scope: !2264, file: !2264, line: 788, type: !3734, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3736)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{!995, !2286, !3337, !995, !144}
!3736 = !{!3737, !3738, !3739, !3740, !3741, !3742, !3744, !3745}
!3737 = !DILocalVariable(name: "value", arg: 1, scope: !3733, file: !2264, line: 788, type: !2286)
!3738 = !DILocalVariable(name: "conv", arg: 2, scope: !3733, file: !2264, line: 789, type: !3337)
!3739 = !DILocalVariable(name: "bps", arg: 3, scope: !3733, file: !2264, line: 790, type: !995)
!3740 = !DILocalVariable(name: "bpe", arg: 4, scope: !3733, file: !2264, line: 791, type: !144)
!3741 = !DILocalVariable(name: "upcase", scope: !3733, file: !2264, line: 793, type: !157)
!3742 = !DILocalVariable(name: "radix", scope: !3733, file: !2264, line: 794, type: !3743)
!3743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!3744 = !DILocalVariable(name: "bp", scope: !3733, file: !2264, line: 795, type: !995)
!3745 = !DILocalVariable(name: "lsv", scope: !3746, file: !2264, line: 798, type: !32)
!3746 = distinct !DILexicalBlock(scope: !3733, file: !2264, line: 797, column: 5)
!3747 = !DILocation(line: 0, scope: !3733)
!3748 = !DILocation(line: 793, column: 35, scope: !3733)
!3749 = !DILocation(line: 793, column: 24, scope: !3733)
!3750 = !DILocation(line: 793, column: 16, scope: !3733)
!3751 = !DILocation(line: 794, column: 29, scope: !3733)
!3752 = !DILocation(line: 795, column: 24, scope: !3733)
!3753 = !DILocation(line: 795, column: 17, scope: !3733)
!3754 = !DILocation(line: 797, column: 2, scope: !3733)
!3755 = !DILocation(line: 802, column: 9, scope: !3746)
!3756 = !DILocation(line: 798, column: 22, scope: !3746)
!3757 = !DILocation(line: 0, scope: !3746)
!3758 = !DILocation(line: 800, column: 16, scope: !3746)
!3759 = !DILocation(line: 800, column: 11, scope: !3746)
!3760 = !DILocation(line: 800, column: 4, scope: !3746)
!3761 = !DILocation(line: 800, column: 9, scope: !3746)
!3762 = !DILocation(line: 803, column: 18, scope: !3733)
!3763 = !DILocation(line: 803, column: 24, scope: !3733)
!3764 = !DILocation(line: 803, column: 2, scope: !3746)
!3765 = distinct !{!3765, !3754, !3766}
!3766 = !DILocation(line: 803, column: 37, scope: !3733)
!3767 = !DILocation(line: 808, column: 12, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3733, file: !2264, line: 808, column: 6)
!3769 = !DILocation(line: 808, column: 6, scope: !3733)
!3770 = !DILocation(line: 809, column: 7, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3768, file: !2264, line: 808, column: 23)
!3772 = !DILocation(line: 813, column: 3, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !2264, line: 811, column: 27)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !2264, line: 811, column: 14)
!3775 = distinct !DILexicalBlock(scope: !3771, file: !2264, line: 809, column: 7)
!3776 = !DILocation(line: 0, scope: !3775)
!3777 = !DILocation(line: 818, column: 2, scope: !3733)
!3778 = distinct !DISubprogram(name: "store_count", scope: !2264, file: !2264, line: 1280, type: !3779, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3783)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{null, !3781, !102, !103}
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 32)
!3782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3304)
!3783 = !{!3784, !3785, !3786}
!3784 = !DILocalVariable(name: "conv", arg: 1, scope: !3778, file: !2264, line: 1280, type: !3781)
!3785 = !DILocalVariable(name: "dp", arg: 2, scope: !3778, file: !2264, line: 1281, type: !102)
!3786 = !DILocalVariable(name: "count", arg: 3, scope: !3778, file: !2264, line: 1282, type: !103)
!3787 = !DILocation(line: 0, scope: !3778)
!3788 = !DILocation(line: 1284, column: 38, scope: !3778)
!3789 = !DILocation(line: 1284, column: 2, scope: !3778)
!3790 = !DILocation(line: 1286, column: 4, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3778, file: !2264, line: 1284, column: 50)
!3792 = !DILocation(line: 1286, column: 14, scope: !3791)
!3793 = !DILocation(line: 1287, column: 3, scope: !3791)
!3794 = !DILocation(line: 1289, column: 24, scope: !3791)
!3795 = !DILocation(line: 1289, column: 22, scope: !3791)
!3796 = !DILocation(line: 1290, column: 3, scope: !3791)
!3797 = !DILocation(line: 1292, column: 18, scope: !3791)
!3798 = !DILocation(line: 1292, column: 4, scope: !3791)
!3799 = !DILocation(line: 1292, column: 16, scope: !3791)
!3800 = !DILocation(line: 1293, column: 3, scope: !3791)
!3801 = !DILocation(line: 1295, column: 4, scope: !3791)
!3802 = !DILocation(line: 1295, column: 15, scope: !3791)
!3803 = !DILocation(line: 1296, column: 3, scope: !3791)
!3804 = !DILocation(line: 1298, column: 22, scope: !3791)
!3805 = !DILocation(line: 1298, column: 4, scope: !3791)
!3806 = !DILocation(line: 1298, column: 20, scope: !3791)
!3807 = !DILocation(line: 1299, column: 3, scope: !3791)
!3808 = !DILocation(line: 1301, column: 21, scope: !3791)
!3809 = !DILocation(line: 1301, column: 4, scope: !3791)
!3810 = !DILocation(line: 1301, column: 19, scope: !3791)
!3811 = !DILocation(line: 1302, column: 3, scope: !3791)
!3812 = !DILocation(line: 1304, column: 4, scope: !3791)
!3813 = !DILocation(line: 1304, column: 17, scope: !3791)
!3814 = !DILocation(line: 1305, column: 3, scope: !3791)
!3815 = !DILocation(line: 1307, column: 4, scope: !3791)
!3816 = !DILocation(line: 1307, column: 20, scope: !3791)
!3817 = !DILocation(line: 1308, column: 3, scope: !3791)
!3818 = !DILocation(line: 1316, column: 1, scope: !3778)
!3819 = distinct !DISubprogram(name: "isupper", scope: !3820, file: !3820, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3821)
!3820 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3821 = !{!3822}
!3822 = !DILocalVariable(name: "a", arg: 1, scope: !3819, file: !3820, line: 16, type: !103)
!3823 = !DILocation(line: 0, scope: !3819)
!3824 = !DILocation(line: 18, column: 29, scope: !3819)
!3825 = !DILocation(line: 18, column: 45, scope: !3819)
!3826 = !DILocation(line: 18, column: 2, scope: !3819)
!3827 = distinct !DISubprogram(name: "conversion_radix", scope: !2264, file: !2264, line: 761, type: !3828, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3830)
!3828 = !DISubroutineType(types: !3829)
!3829 = !{!200, !146}
!3830 = !{!3831}
!3831 = !DILocalVariable(name: "specifier", arg: 1, scope: !3827, file: !2264, line: 761, type: !146)
!3832 = !DILocation(line: 0, scope: !3827)
!3833 = !DILocation(line: 763, column: 2, scope: !3827)
!3834 = !DILocation(line: 770, column: 3, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3827, file: !2264, line: 763, column: 21)
!3836 = !DILocation(line: 774, column: 3, scope: !3835)
!3837 = !DILocation(line: 0, scope: !3835)
!3838 = !DILocation(line: 776, column: 1, scope: !3827)
!3839 = distinct !DISubprogram(name: "extract_flags", scope: !2264, file: !2264, line: 339, type: !3681, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3840)
!3840 = !{!3841, !3842, !3843}
!3841 = !DILocalVariable(name: "conv", arg: 1, scope: !3839, file: !2264, line: 339, type: !3337)
!3842 = !DILocalVariable(name: "sp", arg: 2, scope: !3839, file: !2264, line: 340, type: !144)
!3843 = !DILocalVariable(name: "loop", scope: !3839, file: !2264, line: 342, type: !157)
!3844 = !DILocation(line: 0, scope: !3839)
!3845 = !DILocation(line: 344, column: 2, scope: !3839)
!3846 = !DILocation(line: 345, column: 11, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3839, file: !2264, line: 344, column: 5)
!3848 = !DILocation(line: 345, column: 3, scope: !3847)
!3849 = !DILocation(line: 351, column: 4, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3847, file: !2264, line: 345, column: 16)
!3851 = !DILocation(line: 354, column: 4, scope: !3850)
!3852 = !DILocation(line: 357, column: 4, scope: !3850)
!3853 = !DILocation(line: 360, column: 4, scope: !3850)
!3854 = !DILocation(line: 0, scope: !3850)
!3855 = !DILocation(line: 370, column: 12, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3839, file: !2264, line: 370, column: 6)
!3857 = !DILocation(line: 370, column: 22, scope: !3856)
!3858 = !DILocation(line: 371, column: 19, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3856, file: !2264, line: 370, column: 42)
!3860 = !DILocation(line: 372, column: 2, scope: !3859)
!3861 = !DILocation(line: 376, column: 2, scope: !3839)
!3862 = distinct !DISubprogram(name: "extract_width", scope: !2264, file: !2264, line: 388, type: !3681, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3863)
!3863 = !{!3864, !3865, !3866, !3867}
!3864 = !DILocalVariable(name: "conv", arg: 1, scope: !3862, file: !2264, line: 388, type: !3337)
!3865 = !DILocalVariable(name: "sp", arg: 2, scope: !3862, file: !2264, line: 389, type: !144)
!3866 = !DILocalVariable(name: "wp", scope: !3862, file: !2264, line: 398, type: !144)
!3867 = !DILocalVariable(name: "width", scope: !3862, file: !2264, line: 399, type: !200)
!3868 = !DILocation(line: 0, scope: !3862)
!3869 = !DILocation(line: 391, column: 8, scope: !3862)
!3870 = !DILocation(line: 391, column: 22, scope: !3862)
!3871 = !DILocation(line: 393, column: 6, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3862, file: !2264, line: 393, column: 6)
!3873 = !DILocation(line: 393, column: 10, scope: !3872)
!3874 = !DILocation(line: 393, column: 6, scope: !3862)
!3875 = !DILocation(line: 394, column: 20, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3872, file: !2264, line: 393, column: 18)
!3877 = !DILocation(line: 395, column: 10, scope: !3876)
!3878 = !DILocation(line: 395, column: 3, scope: !3876)
!3879 = !DILocation(line: 399, column: 17, scope: !3862)
!3880 = !DILocation(line: 401, column: 6, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3862, file: !2264, line: 401, column: 6)
!3882 = !DILocation(line: 401, column: 9, scope: !3881)
!3883 = !DILocation(line: 401, column: 6, scope: !3862)
!3884 = !DILocation(line: 402, column: 23, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !2264, line: 401, column: 16)
!3886 = !DILocation(line: 403, column: 9, scope: !3885)
!3887 = !DILocation(line: 403, column: 21, scope: !3885)
!3888 = !DILocation(line: 405, column: 11, scope: !3885)
!3889 = !DILocation(line: 404, column: 21, scope: !3885)
!3890 = !DILocation(line: 406, column: 2, scope: !3885)
!3891 = !DILocation(line: 409, column: 1, scope: !3862)
!3892 = distinct !DISubprogram(name: "extract_prec", scope: !2264, file: !2264, line: 420, type: !3681, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3893)
!3893 = !{!3894, !3895, !3896}
!3894 = !DILocalVariable(name: "conv", arg: 1, scope: !3892, file: !2264, line: 420, type: !3337)
!3895 = !DILocalVariable(name: "sp", arg: 2, scope: !3892, file: !2264, line: 421, type: !144)
!3896 = !DILocalVariable(name: "prec", scope: !3892, file: !2264, line: 435, type: !200)
!3897 = !DILocation(line: 0, scope: !3892)
!3898 = !DILocation(line: 423, column: 24, scope: !3892)
!3899 = !DILocation(line: 423, column: 28, scope: !3892)
!3900 = !DILocation(line: 423, column: 8, scope: !3892)
!3901 = !DILocation(line: 423, column: 21, scope: !3892)
!3902 = !DILocation(line: 425, column: 6, scope: !3892)
!3903 = !DILocation(line: 428, column: 2, scope: !3892)
!3904 = !DILocation(line: 430, column: 6, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3892, file: !2264, line: 430, column: 6)
!3906 = !DILocation(line: 430, column: 10, scope: !3905)
!3907 = !DILocation(line: 430, column: 6, scope: !3892)
!3908 = !DILocation(line: 431, column: 19, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3905, file: !2264, line: 430, column: 18)
!3910 = !DILocation(line: 432, column: 10, scope: !3909)
!3911 = !DILocation(line: 432, column: 3, scope: !3909)
!3912 = !DILocation(line: 435, column: 16, scope: !3892)
!3913 = !DILocation(line: 437, column: 8, scope: !3892)
!3914 = !DILocation(line: 437, column: 19, scope: !3892)
!3915 = !DILocation(line: 439, column: 10, scope: !3892)
!3916 = !DILocation(line: 438, column: 20, scope: !3892)
!3917 = !DILocation(line: 441, column: 9, scope: !3892)
!3918 = !DILocation(line: 442, column: 1, scope: !3892)
!3919 = distinct !DISubprogram(name: "extract_length", scope: !2264, file: !2264, line: 453, type: !3681, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3920)
!3920 = !{!3921, !3922}
!3921 = !DILocalVariable(name: "conv", arg: 1, scope: !3919, file: !2264, line: 453, type: !3337)
!3922 = !DILocalVariable(name: "sp", arg: 2, scope: !3919, file: !2264, line: 454, type: !144)
!3923 = !DILocation(line: 0, scope: !3919)
!3924 = !DILocation(line: 456, column: 10, scope: !3919)
!3925 = !DILocation(line: 456, column: 2, scope: !3919)
!3926 = !DILocation(line: 458, column: 8, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !2264, line: 458, column: 7)
!3928 = distinct !DILexicalBlock(scope: !3919, file: !2264, line: 456, column: 15)
!3929 = !DILocation(line: 458, column: 7, scope: !3927)
!3930 = !DILocation(line: 458, column: 13, scope: !3927)
!3931 = !DILocation(line: 0, scope: !3927)
!3932 = !DILocation(line: 458, column: 7, scope: !3928)
!3933 = !DILocation(line: 459, column: 21, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3927, file: !2264, line: 458, column: 21)
!3935 = !DILocation(line: 460, column: 4, scope: !3934)
!3936 = !DILocation(line: 461, column: 3, scope: !3934)
!3937 = !DILocation(line: 462, column: 21, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3927, file: !2264, line: 461, column: 10)
!3939 = !DILocation(line: 466, column: 8, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3928, file: !2264, line: 466, column: 7)
!3941 = !DILocation(line: 466, column: 7, scope: !3940)
!3942 = !DILocation(line: 466, column: 13, scope: !3940)
!3943 = !DILocation(line: 0, scope: !3940)
!3944 = !DILocation(line: 466, column: 7, scope: !3928)
!3945 = !DILocation(line: 467, column: 21, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3940, file: !2264, line: 466, column: 21)
!3947 = !DILocation(line: 468, column: 4, scope: !3946)
!3948 = !DILocation(line: 469, column: 3, scope: !3946)
!3949 = !DILocation(line: 470, column: 21, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3940, file: !2264, line: 469, column: 10)
!3951 = !DILocation(line: 474, column: 9, scope: !3928)
!3952 = !DILocation(line: 474, column: 20, scope: !3928)
!3953 = !DILocation(line: 475, column: 3, scope: !3928)
!3954 = !DILocation(line: 476, column: 3, scope: !3928)
!3955 = !DILocation(line: 478, column: 9, scope: !3928)
!3956 = !DILocation(line: 478, column: 20, scope: !3928)
!3957 = !DILocation(line: 479, column: 3, scope: !3928)
!3958 = !DILocation(line: 480, column: 3, scope: !3928)
!3959 = !DILocation(line: 482, column: 9, scope: !3928)
!3960 = !DILocation(line: 482, column: 20, scope: !3928)
!3961 = !DILocation(line: 483, column: 3, scope: !3928)
!3962 = !DILocation(line: 484, column: 3, scope: !3928)
!3963 = !DILocation(line: 486, column: 9, scope: !3928)
!3964 = !DILocation(line: 486, column: 20, scope: !3928)
!3965 = !DILocation(line: 487, column: 3, scope: !3928)
!3966 = !DILocation(line: 492, column: 21, scope: !3928)
!3967 = !DILocation(line: 493, column: 3, scope: !3928)
!3968 = !DILocation(line: 495, column: 9, scope: !3928)
!3969 = !DILocation(line: 495, column: 20, scope: !3928)
!3970 = !DILocation(line: 496, column: 3, scope: !3928)
!3971 = !DILocation(line: 498, column: 2, scope: !3919)
!3972 = distinct !DISubprogram(name: "extract_specifier", scope: !2264, file: !2264, line: 513, type: !3681, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3973)
!3973 = !{!3974, !3975, !3976, !3977}
!3974 = !DILocalVariable(name: "conv", arg: 1, scope: !3972, file: !2264, line: 513, type: !3337)
!3975 = !DILocalVariable(name: "sp", arg: 2, scope: !3972, file: !2264, line: 514, type: !144)
!3976 = !DILocalVariable(name: "unsupported", scope: !3972, file: !2264, line: 516, type: !157)
!3977 = !DILabel(scope: !3978, name: "int_conv", file: !2264, line: 526)
!3978 = distinct !DILexicalBlock(scope: !3972, file: !2264, line: 520, column: 27)
!3979 = !DILocation(line: 0, scope: !3972)
!3980 = !DILocation(line: 518, column: 20, scope: !3972)
!3981 = !DILocation(line: 518, column: 8, scope: !3972)
!3982 = !DILocation(line: 518, column: 18, scope: !3972)
!3983 = !DILocation(line: 520, column: 2, scope: !3972)
!3984 = !DILocation(line: 525, column: 3, scope: !3978)
!3985 = !DILocation(line: 0, scope: !3978)
!3986 = !DILocation(line: 526, column: 1, scope: !3978)
!3987 = !DILocation(line: 528, column: 24, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3978, file: !2264, line: 528, column: 7)
!3989 = !DILocation(line: 528, column: 7, scope: !3978)
!3990 = !DILocation(line: 535, column: 23, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3978, file: !2264, line: 535, column: 7)
!3992 = !DILocation(line: 535, column: 7, scope: !3978)
!3993 = !DILocation(line: 536, column: 36, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3991, file: !2264, line: 535, column: 31)
!3995 = !DILocation(line: 537, column: 3, scope: !3994)
!3996 = !DILocation(line: 570, column: 9, scope: !3978)
!3997 = !DILocation(line: 570, column: 23, scope: !3978)
!3998 = !DILocation(line: 575, column: 4, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !2264, line: 573, column: 48)
!4000 = distinct !DILexicalBlock(scope: !3978, file: !2264, line: 573, column: 7)
!4001 = !DILocation(line: 603, column: 9, scope: !3978)
!4002 = !DILocation(line: 603, column: 23, scope: !3978)
!4003 = !DILocation(line: 605, column: 24, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3978, file: !2264, line: 605, column: 7)
!4005 = !DILocation(line: 605, column: 7, scope: !3978)
!4006 = !DILocation(line: 612, column: 9, scope: !3978)
!4007 = !DILocation(line: 612, column: 23, scope: !3978)
!4008 = !DILocation(line: 619, column: 24, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !3978, file: !2264, line: 619, column: 7)
!4010 = !DILocation(line: 619, column: 7, scope: !3978)
!4011 = !DILocation(line: 625, column: 9, scope: !3978)
!4012 = !DILocation(line: 625, column: 17, scope: !3978)
!4013 = !DILocation(line: 626, column: 3, scope: !3978)
!4014 = !DILocation(line: 629, column: 20, scope: !3972)
!4015 = !DILocation(line: 629, column: 8, scope: !3972)
!4016 = !DILocation(line: 518, column: 23, scope: !3972)
!4017 = !DILocation(line: 631, column: 2, scope: !3972)
!4018 = distinct !DISubprogram(name: "extract_decimal", scope: !2264, file: !2264, line: 318, type: !4019, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !4022)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{!200, !4021}
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!4022 = !{!4023, !4024, !4025}
!4023 = !DILocalVariable(name: "str", arg: 1, scope: !4018, file: !2264, line: 318, type: !4021)
!4024 = !DILocalVariable(name: "sp", scope: !4018, file: !2264, line: 320, type: !144)
!4025 = !DILocalVariable(name: "val", scope: !4018, file: !2264, line: 321, type: !200)
!4026 = !DILocation(line: 0, scope: !4018)
!4027 = !DILocation(line: 320, column: 19, scope: !4018)
!4028 = !DILocation(line: 323, column: 37, scope: !4018)
!4029 = !DILocation(line: 323, column: 17, scope: !4018)
!4030 = !DILocation(line: 323, column: 9, scope: !4018)
!4031 = !DILocation(line: 323, column: 2, scope: !4018)
!4032 = !DILocation(line: 324, column: 13, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4018, file: !2264, line: 323, column: 43)
!4034 = !DILocation(line: 324, column: 24, scope: !4033)
!4035 = !DILocation(line: 324, column: 19, scope: !4033)
!4036 = !DILocation(line: 324, column: 27, scope: !4033)
!4037 = distinct !{!4037, !4031, !4038}
!4038 = !DILocation(line: 325, column: 2, scope: !4018)
!4039 = !DILocation(line: 326, column: 7, scope: !4018)
!4040 = !DILocation(line: 327, column: 2, scope: !4018)
!4041 = distinct !DISubprogram(name: "isdigit", scope: !3820, file: !3820, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !4042)
!4042 = !{!4043}
!4043 = !DILocalVariable(name: "a", arg: 1, scope: !4041, file: !3820, line: 43, type: !103)
!4044 = !DILocation(line: 0, scope: !4041)
!4045 = !DILocation(line: 45, column: 29, scope: !4041)
!4046 = !DILocation(line: 45, column: 45, scope: !4041)
!4047 = !DILocation(line: 45, column: 2, scope: !4041)
!4048 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4049, file: !4049, line: 9, type: !2821, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2298, retainedNodes: !322)
!4049 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!4050 = !DILocation(line: 11, column: 1, scope: !4048)
!4051 = !{i64 2147561570, i64 2147561613, i64 2147561653}
!4052 = !DILocation(line: 12, column: 1, scope: !4048)
!4053 = !{i64 2147565797, i64 2147565840, i64 2147565880}
!4054 = !DILocation(line: 13, column: 1, scope: !4048)
!4055 = !{i64 2147566006, i64 2147566049, i64 2147566089}
!4056 = !DILocation(line: 14, column: 1, scope: !4048)
!4057 = !{i64 2147566175, i64 2147566218, i64 2147566258}
!4058 = !DILocation(line: 15, column: 1, scope: !4048)
!4059 = !{i64 2147566338, i64 2147566381, i64 2147566421}
!4060 = !DILocation(line: 16, column: 1, scope: !4048)
!4061 = !{i64 2147566522, i64 2147566565, i64 2147566605}
!4062 = !DILocation(line: 17, column: 1, scope: !4048)
!4063 = !{i64 2147566701, i64 2147566744, i64 2147566784}
!4064 = !DILocation(line: 18, column: 1, scope: !4048)
!4065 = !{i64 2147566943, i64 2147566986, i64 2147567026}
!4066 = !DILocation(line: 19, column: 1, scope: !4048)
!4067 = !{i64 2147567178, i64 2147567221, i64 2147567261}
!4068 = !DILocation(line: 20, column: 1, scope: !4048)
!4069 = !{i64 2147567364, i64 2147567407, i64 2147567447}
!4070 = !DILocation(line: 21, column: 1, scope: !4048)
!4071 = !{i64 2147567580, i64 2147567623, i64 2147567663}
!4072 = !DILocation(line: 22, column: 1, scope: !4048)
!4073 = !{i64 2147567783, i64 2147567826, i64 2147567866}
!4074 = !DILocation(line: 23, column: 1, scope: !4048)
!4075 = !{i64 2147567986, i64 2147568029, i64 2147568069}
!4076 = !DILocation(line: 24, column: 1, scope: !4048)
!4077 = !{i64 2147568161, i64 2147568204, i64 2147568244}
!4078 = !DILocation(line: 25, column: 1, scope: !4048)
!4079 = !{i64 2147568369, i64 2147568412, i64 2147568452}
!4080 = !DILocation(line: 26, column: 1, scope: !4048)
!4081 = !{i64 2147568573, i64 2147568616, i64 2147568656}
!4082 = !DILocation(line: 27, column: 1, scope: !4048)
!4083 = !{i64 2147568766, i64 2147568809, i64 2147568849}
!4084 = !DILocation(line: 28, column: 1, scope: !4048)
!4085 = !{i64 2147568968, i64 2147569011, i64 2147569051}
!4086 = !DILocation(line: 29, column: 1, scope: !4048)
!4087 = !{i64 2147569195, i64 2147569238, i64 2147569278}
!4088 = !DILocation(line: 30, column: 1, scope: !4048)
!4089 = !{i64 2147569397, i64 2147569440, i64 2147569480}
!4090 = !DILocation(line: 31, column: 1, scope: !4048)
!4091 = !{i64 2147569612, i64 2147569655, i64 2147569695}
!4092 = !DILocation(line: 32, column: 1, scope: !4048)
!4093 = !{i64 2147569784, i64 2147569827, i64 2147569867}
!4094 = !DILocation(line: 33, column: 1, scope: !4048)
!4095 = !{i64 2147569986, i64 2147570029, i64 2147570069}
!4096 = !DILocation(line: 34, column: 1, scope: !4048)
!4097 = !{i64 2147570212, i64 2147570255, i64 2147570295}
!4098 = !DILocation(line: 35, column: 1, scope: !4048)
!4099 = !{i64 2147570411, i64 2147570454, i64 2147570494}
!4100 = !DILocation(line: 36, column: 1, scope: !4048)
!4101 = !{i64 2147570586, i64 2147570629, i64 2147570669}
!4102 = !DILocation(line: 37, column: 1, scope: !4048)
!4103 = !{i64 2147570839, i64 2147570882, i64 2147570922}
!4104 = !DILocation(line: 38, column: 1, scope: !4048)
!4105 = !{i64 2147571080, i64 2147571123, i64 2147571163}
!4106 = !DILocation(line: 39, column: 1, scope: !4048)
!4107 = !{i64 2147571315, i64 2147571358, i64 2147571398}
!4108 = !DILocation(line: 40, column: 1, scope: !4048)
!4109 = !{i64 2147571547, i64 2147571590, i64 2147571630}
!4110 = !DILocation(line: 41, column: 1, scope: !4048)
!4111 = !{i64 2147571773, i64 2147571816, i64 2147571856}
!4112 = !DILocation(line: 42, column: 1, scope: !4048)
!4113 = !{i64 2147571999, i64 2147572042, i64 2147572082}
!4114 = !DILocation(line: 43, column: 1, scope: !4048)
!4115 = !{i64 2147572225, i64 2147572268, i64 2147572308}
!4116 = !DILocation(line: 44, column: 1, scope: !4048)
!4117 = !{i64 2147572460, i64 2147572503, i64 2147572543}
!4118 = !DILocation(line: 45, column: 1, scope: !4048)
!4119 = !{i64 2147572704, i64 2147572747, i64 2147572787}
!4120 = !DILocation(line: 46, column: 1, scope: !4048)
!4121 = !{i64 2147572951, i64 2147572994, i64 2147573034}
!4122 = !DILocation(line: 47, column: 1, scope: !4048)
!4123 = !{i64 2147573183, i64 2147573226, i64 2147573266}
!4124 = !DILocation(line: 48, column: 1, scope: !4048)
!4125 = !{i64 2147573427, i64 2147573470, i64 2147573510}
!4126 = !DILocation(line: 49, column: 1, scope: !4048)
!4127 = !{i64 2147573665, i64 2147573708, i64 2147573748}
!4128 = !DILocation(line: 50, column: 1, scope: !4048)
!4129 = !{i64 2147573939, i64 2147573982, i64 2147574022}
!4130 = !DILocation(line: 51, column: 1, scope: !4048)
!4131 = !{i64 2147574177, i64 2147574220, i64 2147574260}
!4132 = !DILocation(line: 52, column: 1, scope: !4048)
!4133 = !{i64 2147574430, i64 2147574473, i64 2147574513}
!4134 = !DILocation(line: 53, column: 1, scope: !4048)
!4135 = !{i64 2147578735, i64 2147578778, i64 2147578818}
!4136 = !DILocation(line: 54, column: 1, scope: !4048)
!4137 = !{i64 2147578970, i64 2147579013, i64 2147579053}
!4138 = !DILocation(line: 55, column: 1, scope: !4048)
!4139 = !{i64 2147579220, i64 2147579263, i64 2147579303}
!4140 = !DILocation(line: 56, column: 1, scope: !4048)
!4141 = !{i64 2147579467, i64 2147579510, i64 2147579550}
!4142 = !DILocation(line: 57, column: 1, scope: !4048)
!4143 = !{i64 2147579702, i64 2147579745, i64 2147579785}
!4144 = !DILocation(line: 58, column: 1, scope: !4048)
!4145 = !{i64 2147579937, i64 2147579980, i64 2147580020}
!4146 = !DILocation(line: 59, column: 1, scope: !4048)
!4147 = !{i64 2147580172, i64 2147580215, i64 2147580255}
!4148 = !DILocation(line: 60, column: 1, scope: !4048)
!4149 = !{i64 2147580407, i64 2147580450, i64 2147580490}
!4150 = !DILocation(line: 61, column: 1, scope: !4048)
!4151 = !{i64 2147580651, i64 2147580694, i64 2147580734}
!4152 = !DILocation(line: 62, column: 1, scope: !4048)
!4153 = !{i64 2147580889, i64 2147580932, i64 2147580972}
!4154 = !DILocation(line: 63, column: 1, scope: !4048)
!4155 = !{i64 2147581130, i64 2147581173, i64 2147581213}
!4156 = !DILocation(line: 64, column: 1, scope: !4048)
!4157 = !{i64 2147581410, i64 2147581453, i64 2147581493}
!4158 = !DILocation(line: 65, column: 1, scope: !4048)
!4159 = !{i64 2147581669, i64 2147581712, i64 2147581752}
!4160 = !DILocation(line: 66, column: 1, scope: !4048)
!4161 = !{i64 2147581907, i64 2147581950, i64 2147581990}
!4162 = !DILocation(line: 67, column: 1, scope: !4048)
!4163 = !{i64 2147582136, i64 2147582179, i64 2147582219}
!4164 = !DILocation(line: 68, column: 1, scope: !4048)
!4165 = !{i64 2147582344, i64 2147582387, i64 2147582427}
!4166 = !DILocation(line: 69, column: 1, scope: !4048)
!4167 = !{i64 2147582555, i64 2147582598, i64 2147582638}
!4168 = !DILocation(line: 70, column: 1, scope: !4048)
!4169 = !{i64 2147582790, i64 2147582833, i64 2147582873}
!4170 = !DILocation(line: 71, column: 1, scope: !4048)
!4171 = !{i64 2147583019, i64 2147583062, i64 2147583102}
!4172 = !DILocation(line: 72, column: 1, scope: !4048)
!4173 = !{i64 2147583257, i64 2147583300, i64 2147583340}
!4174 = !DILocation(line: 73, column: 1, scope: !4048)
!4175 = !{i64 2147583489, i64 2147583532, i64 2147583572}
!4176 = !DILocation(line: 74, column: 1, scope: !4048)
!4177 = !{i64 2147583715, i64 2147583758, i64 2147583798}
!4178 = !DILocation(line: 75, column: 1, scope: !4048)
!4179 = !{i64 2147583932, i64 2147583975, i64 2147584015}
!4180 = !DILocation(line: 76, column: 1, scope: !4048)
!4181 = !{i64 2147584164, i64 2147584207, i64 2147584247}
!4182 = !DILocation(line: 77, column: 1, scope: !4048)
!4183 = !{i64 2147584390, i64 2147584433, i64 2147584473}
!4184 = !DILocation(line: 78, column: 1, scope: !4048)
!4185 = !{i64 2147584604, i64 2147584647, i64 2147584687}
!4186 = !DILocation(line: 79, column: 1, scope: !4048)
!4187 = !{i64 2147584824, i64 2147584867, i64 2147584907}
!4188 = !DILocation(line: 80, column: 1, scope: !4048)
!4189 = !{i64 2147585056, i64 2147585099, i64 2147585139}
!4190 = !DILocation(line: 81, column: 1, scope: !4048)
!4191 = !{i64 2147585264, i64 2147585307, i64 2147585347}
!4192 = !DILocation(line: 82, column: 1, scope: !4048)
!4193 = !{i64 2147585469, i64 2147585512, i64 2147585552}
!4194 = !DILocation(line: 83, column: 1, scope: !4048)
!4195 = !{i64 2147585686, i64 2147585729, i64 2147585769}
!4196 = !DILocation(line: 84, column: 1, scope: !4048)
!4197 = !{i64 2147585900, i64 2147585943, i64 2147585983}
!4198 = !DILocation(line: 85, column: 1, scope: !4048)
!4199 = !{i64 2147586126, i64 2147586169, i64 2147586209}
!4200 = !DILocation(line: 86, column: 1, scope: !4048)
!4201 = !{i64 2147586346, i64 2147586389, i64 2147586429}
!4202 = !DILocation(line: 87, column: 1, scope: !4048)
!4203 = !{i64 2147586551, i64 2147586594, i64 2147586634}
!4204 = !DILocation(line: 88, column: 1, scope: !4048)
!4205 = !{i64 2147590844, i64 2147590887, i64 2147590927}
!4206 = !DILocation(line: 89, column: 1, scope: !4048)
!4207 = !{i64 2147591079, i64 2147591122, i64 2147591162}
!4208 = !DILocation(line: 90, column: 1, scope: !4048)
!4209 = !{i64 2147591329, i64 2147591372, i64 2147591412}
!4210 = !DILocation(line: 91, column: 1, scope: !4048)
!4211 = !{i64 2147591579, i64 2147591622, i64 2147591662}
!4212 = !DILocation(line: 92, column: 1, scope: !4048)
!4213 = !{i64 2147591817, i64 2147591860, i64 2147591900}
!4214 = !DILocation(line: 93, column: 1, scope: !4048)
!4215 = !{i64 2147592028, i64 2147592071, i64 2147592111}
!4216 = !DILocation(line: 94, column: 1, scope: !4048)
!4217 = !{i64 2147592245, i64 2147592288, i64 2147592328}
!4218 = !DILocation(line: 95, column: 1, scope: !4048)
!4219 = !{i64 2147592441, i64 2147592484, i64 2147592524}
!4220 = !DILocation(line: 96, column: 1, scope: !4048)
!4221 = !{i64 2147592643, i64 2147592686, i64 2147592726}
!4222 = !DILocation(line: 97, column: 1, scope: !4048)
!4223 = !{i64 2147592836, i64 2147592879, i64 2147592919}
!4224 = !DILocation(line: 98, column: 1, scope: !4048)
!4225 = !{i64 2147593044, i64 2147593087, i64 2147593127}
!4226 = !DILocation(line: 99, column: 1, scope: !4048)
!4227 = !{i64 2147593240, i64 2147593283, i64 2147593323}
!4228 = !DILocation(line: 100, column: 1, scope: !4048)
!4229 = !{i64 2147593472, i64 2147593515, i64 2147593555}
!4230 = !DILocation(line: 101, column: 1, scope: !4048)
!4231 = !{i64 2147593683, i64 2147593726, i64 2147593766}
!4232 = !DILocation(line: 102, column: 1, scope: !4048)
!4233 = !{i64 2147593882, i64 2147593925, i64 2147593965}
!4234 = !DILocation(line: 103, column: 1, scope: !4048)
!4235 = !{i64 2147594057, i64 2147594100, i64 2147594140}
!4236 = !DILocation(line: 104, column: 1, scope: !4048)
!4237 = !{i64 2147594241, i64 2147594284, i64 2147594324}
!4238 = !DILocation(line: 105, column: 1, scope: !4048)
!4239 = !{i64 2147594443, i64 2147594486, i64 2147594526}
!4240 = !DILocation(line: 106, column: 1, scope: !4048)
!4241 = !{i64 2147594642, i64 2147594685, i64 2147594725}
!4242 = !DILocation(line: 107, column: 1, scope: !4048)
!4243 = !{i64 2147594808, i64 2147594851, i64 2147594891}
!4244 = !DILocation(line: 108, column: 1, scope: !4048)
!4245 = !{i64 2147594992, i64 2147595035, i64 2147595075}
!4246 = !DILocation(line: 109, column: 1, scope: !4048)
!4247 = !{i64 2147595182, i64 2147595225, i64 2147595265}
!4248 = !DILocation(line: 110, column: 1, scope: !4048)
!4249 = !{i64 2147595366, i64 2147595409, i64 2147595449}
!4250 = !DILocation(line: 111, column: 1, scope: !4048)
!4251 = !{i64 2147595580, i64 2147595623, i64 2147595663}
!4252 = !DILocation(line: 112, column: 1, scope: !4048)
!4253 = !{i64 2147595791, i64 2147595834, i64 2147595874}
!4254 = !DILocation(line: 113, column: 1, scope: !4048)
!4255 = !{i64 2147596014, i64 2147596057, i64 2147596097}
!4256 = !DILocation(line: 114, column: 1, scope: !4048)
!4257 = !{i64 2147596198, i64 2147596241, i64 2147596281}
!4258 = !DILocation(line: 115, column: 1, scope: !4048)
!4259 = !{i64 2147596412, i64 2147596455, i64 2147596495}
!4260 = !DILocation(line: 116, column: 1, scope: !4048)
!4261 = !{i64 2147596578, i64 2147596621, i64 2147596661}
!4262 = !DILocation(line: 117, column: 1, scope: !4048)
!4263 = !{i64 2147596759, i64 2147596802, i64 2147596842}
!4264 = !DILocation(line: 118, column: 1, scope: !4048)
!4265 = !{i64 2147596952, i64 2147596995, i64 2147597035}
!4266 = !DILocation(line: 119, column: 1, scope: !4048)
!4267 = !{i64 2147597178, i64 2147597221, i64 2147597261}
!4268 = !DILocation(line: 120, column: 1, scope: !4048)
!4269 = !{i64 2147597392, i64 2147597435, i64 2147597475}
!4270 = !DILocation(line: 121, column: 1, scope: !4048)
!4271 = !{i64 2147597618, i64 2147597661, i64 2147597701}
!4272 = !DILocation(line: 122, column: 1, scope: !4048)
!4273 = !{i64 2147597835, i64 2147597878, i64 2147597918}
!4274 = !DILocation(line: 123, column: 1, scope: !4048)
!4275 = !{i64 2147598112, i64 2147598155, i64 2147598195}
!4276 = !DILocation(line: 124, column: 1, scope: !4048)
!4277 = !{i64 2147598338, i64 2147598381, i64 2147598421}
!4278 = !DILocation(line: 125, column: 1, scope: !4048)
!4279 = !{i64 2147598546, i64 2147598589, i64 2147598629}
!4280 = !DILocation(line: 126, column: 1, scope: !4048)
!4281 = !{i64 2147598742, i64 2147598785, i64 2147598825}
!4282 = !DILocation(line: 127, column: 1, scope: !4048)
!4283 = !{i64 2147599007, i64 2147599050, i64 2147599090}
!4284 = !DILocation(line: 128, column: 1, scope: !4048)
!4285 = !{i64 2147599221, i64 2147599264, i64 2147599304}
!4286 = !DILocation(line: 129, column: 1, scope: !4048)
!4287 = !{i64 2147599396, i64 2147599439, i64 2147599479}
!4288 = !DILocation(line: 130, column: 1, scope: !4048)
!4289 = !{i64 2147599650, i64 2147599693, i64 2147599733}
!4290 = !DILocation(line: 131, column: 1, scope: !4048)
!4291 = !{i64 2147603910, i64 2147603953, i64 2147603993}
!4292 = !DILocation(line: 132, column: 1, scope: !4048)
!4293 = !{i64 2147604152, i64 2147604195, i64 2147604235}
!4294 = !DILocation(line: 133, column: 1, scope: !4048)
!4295 = !{i64 2147604315, i64 2147604358, i64 2147604398}
!4296 = !DILocation(line: 134, column: 1, scope: !4048)
!4297 = !{i64 2147604502, i64 2147604545, i64 2147604585}
!4298 = !DILocation(line: 135, column: 1, scope: !4048)
!4299 = !{i64 2147604695, i64 2147604738, i64 2147604778}
!4300 = !DILocation(line: 136, column: 1, scope: !4048)
!4301 = !{i64 2147604878, i64 2147604921, i64 2147604961}
!4302 = !DILocation(line: 137, column: 1, scope: !4048)
!4303 = !{i64 2147605092, i64 2147605135, i64 2147605175}
!4304 = !DILocation(line: 138, column: 1, scope: !4048)
!4305 = !{i64 2147605303, i64 2147605346, i64 2147605386}
!4306 = !DILocation(line: 139, column: 1, scope: !4048)
!4307 = !{i64 2147605523, i64 2147605566, i64 2147605606}
!4308 = !DILocation(line: 140, column: 1, scope: !4048)
!4309 = !{i64 2147605730, i64 2147605773, i64 2147605813}
!4310 = !DILocation(line: 141, column: 1, scope: !4048)
!4311 = !{i64 2147606003, i64 2147606046, i64 2147606086}
!4312 = !DILocation(line: 142, column: 1, scope: !4048)
!4313 = !{i64 2147606251, i64 2147606294, i64 2147606334}
!4314 = !DILocation(line: 143, column: 1, scope: !4048)
!4315 = !{i64 2147606450, i64 2147606493, i64 2147606533}
!4316 = !DILocation(line: 144, column: 1, scope: !4048)
!4317 = !{i64 2147606685, i64 2147606728, i64 2147606768}
!4318 = !DILocation(line: 145, column: 1, scope: !4048)
!4319 = !{i64 2147606935, i64 2147606978, i64 2147607018}
!4320 = !DILocation(line: 146, column: 1, scope: !4048)
!4321 = !{i64 2147607137, i64 2147607180, i64 2147607220}
!4322 = !DILocation(line: 147, column: 1, scope: !4048)
!4323 = !{i64 2147607360, i64 2147607403, i64 2147607443}
!4324 = !DILocation(line: 148, column: 1, scope: !4048)
!4325 = !{i64 2147607574, i64 2147607617, i64 2147607657}
!4326 = !DILocation(line: 149, column: 1, scope: !4048)
!4327 = !{i64 2147607818, i64 2147607861, i64 2147607901}
!4328 = !DILocation(line: 150, column: 1, scope: !4048)
!4329 = !{i64 2147608047, i64 2147608090, i64 2147608130}
!4330 = !DILocation(line: 151, column: 1, scope: !4048)
!4331 = !{i64 2147608276, i64 2147608319, i64 2147608359}
!4332 = !DILocation(line: 152, column: 1, scope: !4048)
!4333 = !{i64 2147608484, i64 2147608527, i64 2147608567}
!4334 = !DILocation(line: 153, column: 1, scope: !4048)
!4335 = !{i64 2147608722, i64 2147608765, i64 2147608805}
!4336 = !DILocation(line: 154, column: 1, scope: !4048)
!4337 = !{i64 2147608948, i64 2147608991, i64 2147609031}
!4338 = !DILocation(line: 155, column: 1, scope: !4048)
!4339 = !{i64 2147609207, i64 2147609250, i64 2147609290}
!4340 = !DILocation(line: 156, column: 1, scope: !4048)
!4341 = !{i64 2147609427, i64 2147609470, i64 2147609510}
!4342 = !DILocation(line: 157, column: 1, scope: !4048)
!4343 = !{i64 2147609659, i64 2147609702, i64 2147609742}
!4344 = !DILocation(line: 158, column: 1, scope: !4048)
!4345 = !{i64 2147609900, i64 2147609943, i64 2147609983}
!4346 = !DILocation(line: 159, column: 1, scope: !4048)
!4347 = !{i64 2147610141, i64 2147610184, i64 2147610224}
!4348 = !DILocation(line: 160, column: 1, scope: !4048)
!4349 = !{i64 2147610364, i64 2147610407, i64 2147610447}
!4350 = !DILocation(line: 161, column: 1, scope: !4048)
!4351 = !{i64 2147610581, i64 2147610624, i64 2147610664}
!4352 = !DILocation(line: 162, column: 1, scope: !4048)
!4353 = !{i64 2147610822, i64 2147610865, i64 2147610905}
!4354 = !DILocation(line: 163, column: 1, scope: !4048)
!4355 = !{i64 2147611009, i64 2147611052, i64 2147611092}
!4356 = !DILocation(line: 164, column: 1, scope: !4048)
!4357 = !{i64 2147611196, i64 2147611239, i64 2147611279}
!4358 = !DILocation(line: 165, column: 1, scope: !4048)
!4359 = !{i64 2147611359, i64 2147611402, i64 2147611442}
!4360 = !DILocation(line: 166, column: 1, scope: !4048)
!4361 = !{i64 2147611618, i64 2147611661, i64 2147611701}
!4362 = !DILocation(line: 167, column: 1, scope: !4048)
!4363 = !{i64 2147611841, i64 2147611884, i64 2147611924}
!4364 = !DILocation(line: 168, column: 1, scope: !4048)
!4365 = !{i64 2147612070, i64 2147612113, i64 2147612153}
!4366 = !DILocation(line: 169, column: 1, scope: !4048)
!4367 = !{i64 2147612266, i64 2147612309, i64 2147612349}
!4368 = !DILocation(line: 170, column: 1, scope: !4048)
!4369 = !{i64 2147616539, i64 2147616582, i64 2147616622}
!4370 = !DILocation(line: 171, column: 1, scope: !4048)
!4371 = !{i64 2147616760, i64 2147616803, i64 2147616843}
!4372 = !DILocation(line: 172, column: 1, scope: !4048)
!4373 = !{i64 2147616974, i64 2147617017, i64 2147617057}
!4374 = !DILocation(line: 173, column: 1, scope: !4048)
!4375 = !{i64 2147617164, i64 2147617207, i64 2147617247}
!4376 = !DILocation(line: 174, column: 1, scope: !4048)
!4377 = !{i64 2147617363, i64 2147617406, i64 2147617446}
!4378 = !DILocation(line: 175, column: 1, scope: !4048)
!4379 = !{i64 2147617568, i64 2147617611, i64 2147617651}
!4380 = !DILocation(line: 176, column: 1, scope: !4048)
!4381 = !{i64 2147617788, i64 2147617831, i64 2147617871}
!4382 = !DILocation(line: 177, column: 1, scope: !4048)
!4383 = !{i64 2147617989, i64 2147618032, i64 2147618072}
!4384 = !DILocation(line: 178, column: 1, scope: !4048)
!4385 = !{i64 2147618188, i64 2147618231, i64 2147618271}
!4386 = !DILocation(line: 179, column: 1, scope: !4048)
!4387 = !{i64 2147618393, i64 2147618436, i64 2147618476}
!4388 = !DILocation(line: 180, column: 1, scope: !4048)
!4389 = !{i64 2147618562, i64 2147618605, i64 2147618645}
!4390 = !DILocation(line: 181, column: 1, scope: !4048)
!4391 = !{i64 2147618746, i64 2147618789, i64 2147618829}
!4392 = !DILocation(line: 182, column: 1, scope: !4048)
!4393 = !{i64 2147618930, i64 2147618973, i64 2147619013}
!4394 = !DILocation(line: 183, column: 1, scope: !4048)
!4395 = !{i64 2147619117, i64 2147619160, i64 2147619200}
!4396 = !DILocation(line: 184, column: 1, scope: !4048)
!4397 = !{i64 2147619301, i64 2147619344, i64 2147619384}
!4398 = !DILocation(line: 185, column: 1, scope: !4048)
!4399 = !{i64 2147619539, i64 2147619582, i64 2147619622}
!4400 = !DILocation(line: 186, column: 1, scope: !4048)
!4401 = !{i64 2147619769, i64 2147619812, i64 2147619852}
!4402 = !DILocation(line: 187, column: 1, scope: !4048)
!4403 = !{i64 2147619998, i64 2147620041, i64 2147620081}
!4404 = !DILocation(line: 188, column: 1, scope: !4048)
!4405 = !{i64 2147620185, i64 2147620228, i64 2147620268}
!4406 = !DILocation(line: 189, column: 1, scope: !4048)
!4407 = !{i64 2147620381, i64 2147620424, i64 2147620464}
!4408 = !DILocation(line: 190, column: 1, scope: !4048)
!4409 = !{i64 2147620589, i64 2147620632, i64 2147620672}
!4410 = !DILocation(line: 191, column: 1, scope: !4048)
!4411 = !{i64 2147620801, i64 2147620844, i64 2147620884}
!4412 = !DILocation(line: 192, column: 1, scope: !4048)
!4413 = !{i64 2147621000, i64 2147621043, i64 2147621083}
!4414 = !DILocation(line: 193, column: 1, scope: !4048)
!4415 = !{i64 2147621238, i64 2147621281, i64 2147621321}
!4416 = !DILocation(line: 194, column: 1, scope: !4048)
!4417 = !{i64 2147621434, i64 2147621477, i64 2147621517}
!4418 = !DILocation(line: 195, column: 1, scope: !4048)
!4419 = !{i64 2147621636, i64 2147621679, i64 2147621719}
!4420 = !DILocation(line: 196, column: 1, scope: !4048)
!4421 = !{i64 2147621829, i64 2147621872, i64 2147621912}
!4422 = !DILocation(line: 197, column: 1, scope: !4048)
!4423 = !{i64 2147622063, i64 2147622106, i64 2147622146}
!4424 = !DILocation(line: 198, column: 1, scope: !4048)
!4425 = !{i64 2147622226, i64 2147622269, i64 2147622309}
!4426 = !DILocation(line: 199, column: 1, scope: !4048)
!4427 = !{i64 2147622465, i64 2147622508, i64 2147622548}
!4428 = !DILocation(line: 200, column: 1, scope: !4048)
!4429 = !{i64 2147622704, i64 2147622747, i64 2147622787}
!4430 = !DILocation(line: 201, column: 1, scope: !4048)
!4431 = !{i64 2147622940, i64 2147622983, i64 2147623023}
!4432 = !DILocation(line: 202, column: 1, scope: !4048)
!4433 = !{i64 2147623170, i64 2147623213, i64 2147623253}
!4434 = !DILocation(line: 203, column: 1, scope: !4048)
!4435 = !{i64 2147623357, i64 2147623400, i64 2147623440}
!4436 = !DILocation(line: 204, column: 1, scope: !4048)
!4437 = !{i64 2147623556, i64 2147623599, i64 2147623639}
!4438 = !DILocation(line: 205, column: 1, scope: !4048)
!4439 = !{i64 2147623827, i64 2147623870, i64 2147623910}
!4440 = !DILocation(line: 206, column: 1, scope: !4048)
!4441 = !{i64 2147624002, i64 2147624045, i64 2147624085}
!4442 = !DILocation(line: 207, column: 1, scope: !4048)
!4443 = !{i64 2147624236, i64 2147624279, i64 2147624319}
!4444 = !DILocation(line: 208, column: 1, scope: !4048)
!4445 = !{i64 2147624444, i64 2147624487, i64 2147624527}
!4446 = !DILocation(line: 209, column: 1, scope: !4048)
!4447 = !{i64 2147624662, i64 2147624705, i64 2147624745}
!4448 = !DILocation(line: 210, column: 1, scope: !4048)
!4449 = !{i64 2147624852, i64 2147624895, i64 2147624935}
!4450 = !DILocation(line: 211, column: 1, scope: !4048)
!4451 = !{i64 2147625048, i64 2147625091, i64 2147625131}
!4452 = !DILocation(line: 212, column: 1, scope: !4048)
!4453 = !{i64 2147625254, i64 2147625297, i64 2147625337}
!4454 = !DILocation(line: 213, column: 1, scope: !4048)
!4455 = !{i64 2147625459, i64 2147625502, i64 2147625542}
!4456 = !DILocation(line: 214, column: 1, scope: !4048)
!4457 = !{i64 2147629734, i64 2147629777, i64 2147629817}
!4458 = !DILocation(line: 215, column: 1, scope: !4048)
!4459 = !{i64 2147629960, i64 2147630003, i64 2147630043}
!4460 = !DILocation(line: 216, column: 1, scope: !4048)
!4461 = !{i64 2147630192, i64 2147630235, i64 2147630275}
!4462 = !DILocation(line: 217, column: 1, scope: !4048)
!4463 = !{i64 2147630376, i64 2147630419, i64 2147630459}
!4464 = !DILocation(line: 218, column: 1, scope: !4048)
!4465 = !{i64 2147630585, i64 2147630628, i64 2147630668}
!4466 = !DILocation(line: 219, column: 1, scope: !4048)
!4467 = !{i64 2147630769, i64 2147630812, i64 2147630852}
!4468 = !DILocation(line: 220, column: 1, scope: !4048)
!4469 = !{i64 2147630995, i64 2147631038, i64 2147631078}
!4470 = !DILocation(line: 221, column: 1, scope: !4048)
!4471 = !{i64 2147631221, i64 2147631264, i64 2147631304}
!4472 = !DILocation(line: 222, column: 1, scope: !4048)
!4473 = !{i64 2147631447, i64 2147631490, i64 2147631530}
!4474 = !DILocation(line: 223, column: 1, scope: !4048)
!4475 = !{i64 2147631673, i64 2147631716, i64 2147631756}
!4476 = !DILocation(line: 224, column: 1, scope: !4048)
!4477 = !{i64 2147631899, i64 2147631942, i64 2147631982}
!4478 = !DILocation(line: 225, column: 1, scope: !4048)
!4479 = !{i64 2147632131, i64 2147632174, i64 2147632214}
!4480 = !DILocation(line: 226, column: 1, scope: !4048)
!4481 = !{i64 2147632369, i64 2147632412, i64 2147632452}
!4482 = !DILocation(line: 227, column: 1, scope: !4048)
!4483 = !{i64 2147632589, i64 2147632632, i64 2147632672}
!4484 = !DILocation(line: 228, column: 1, scope: !4048)
!4485 = !{i64 2147632833, i64 2147632876, i64 2147632916}
!4486 = !DILocation(line: 229, column: 1, scope: !4048)
!4487 = !{i64 2147633074, i64 2147633117, i64 2147633157}
!4488 = !DILocation(line: 230, column: 1, scope: !4048)
!4489 = !{i64 2147633309, i64 2147633352, i64 2147633392}
!4490 = !DILocation(line: 231, column: 1, scope: !4048)
!4491 = !{i64 2147633541, i64 2147633584, i64 2147633624}
!4492 = !DILocation(line: 232, column: 1, scope: !4048)
!4493 = !{i64 2147633743, i64 2147633786, i64 2147633826}
!4494 = !DILocation(line: 233, column: 1, scope: !4048)
!4495 = !{i64 2147633993, i64 2147634036, i64 2147634076}
!4496 = !DILocation(line: 234, column: 1, scope: !4048)
!4497 = !{i64 2147634231, i64 2147634274, i64 2147634314}
!4498 = !DILocation(line: 235, column: 1, scope: !4048)
!4499 = !{i64 2147634415, i64 2147634458, i64 2147634498}
!4500 = !DILocation(line: 236, column: 1, scope: !4048)
!4501 = !{i64 2147634639, i64 2147634682, i64 2147634722}
!4502 = !DILocation(line: 237, column: 1, scope: !4048)
!4503 = !{i64 2147634877, i64 2147634920, i64 2147634960}
!4504 = !DILocation(line: 238, column: 1, scope: !4048)
!4505 = !{i64 2147635115, i64 2147635158, i64 2147635198}
!4506 = !DILocation(line: 239, column: 1, scope: !4048)
!4507 = !{i64 2147635308, i64 2147635351, i64 2147635391}
!4508 = !DILocation(line: 240, column: 1, scope: !4048)
!4509 = !{i64 2147635561, i64 2147635604, i64 2147635644}
!4510 = !DILocation(line: 241, column: 1, scope: !4048)
!4511 = !{i64 2147635775, i64 2147635818, i64 2147635858}
!4512 = !DILocation(line: 242, column: 1, scope: !4048)
!4513 = !{i64 2147635983, i64 2147636026, i64 2147636066}
!4514 = !DILocation(line: 243, column: 1, scope: !4048)
!4515 = !{i64 2147636173, i64 2147636216, i64 2147636256}
!4516 = !DILocation(line: 244, column: 1, scope: !4048)
!4517 = !{i64 2147636387, i64 2147636430, i64 2147636470}
!4518 = !DILocation(line: 245, column: 1, scope: !4048)
!4519 = !{i64 2147636649, i64 2147636692, i64 2147636732}
!4520 = !DILocation(line: 246, column: 1, scope: !4048)
!4521 = !{i64 2147636860, i64 2147636903, i64 2147636943}
!4522 = !DILocation(line: 247, column: 1, scope: !4048)
!4523 = !{i64 2147637104, i64 2147637147, i64 2147637187}
!4524 = !DILocation(line: 248, column: 1, scope: !4048)
!4525 = !{i64 2147637315, i64 2147637358, i64 2147637398}
!4526 = !DILocation(line: 249, column: 1, scope: !4048)
!4527 = !{i64 2147637544, i64 2147637587, i64 2147637627}
!4528 = !DILocation(line: 250, column: 1, scope: !4048)
!4529 = !{i64 2147637809, i64 2147637852, i64 2147637892}
!4530 = !DILocation(line: 251, column: 1, scope: !4048)
!4531 = !{i64 2147638014, i64 2147638057, i64 2147638097}
!4532 = !DILocation(line: 252, column: 1, scope: !4048)
!4533 = !{i64 2147642271, i64 2147642314, i64 2147642354}
!4534 = !DILocation(line: 253, column: 1, scope: !4048)
!4535 = !{i64 2147642494, i64 2147642537, i64 2147642577}
!4536 = !DILocation(line: 254, column: 1, scope: !4048)
!4537 = !{i64 2147642657, i64 2147642700, i64 2147642740}
!4538 = !DILocation(line: 255, column: 1, scope: !4048)
!4539 = !{i64 2147642862, i64 2147642905, i64 2147642945}
!4540 = !DILocation(line: 256, column: 1, scope: !4048)
!4541 = !{i64 2147643082, i64 2147643125, i64 2147643165}
!4542 = !DILocation(line: 257, column: 1, scope: !4048)
!4543 = !{i64 2147643296, i64 2147643339, i64 2147643379}
!4544 = !DILocation(line: 258, column: 1, scope: !4048)
!4545 = !{i64 2147643510, i64 2147643553, i64 2147643593}
!4546 = !DILocation(line: 259, column: 1, scope: !4048)
!4547 = !{i64 2147643721, i64 2147643764, i64 2147643804}
!4548 = !DILocation(line: 260, column: 1, scope: !4048)
!4549 = !{i64 2147643914, i64 2147643957, i64 2147643997}
!4550 = !DILocation(line: 261, column: 1, scope: !4048)
!4551 = !{i64 2147644113, i64 2147644156, i64 2147644196}
!4552 = !DILocation(line: 262, column: 1, scope: !4048)
!4553 = !{i64 2147644285, i64 2147644328, i64 2147644368}
!4554 = !DILocation(line: 263, column: 1, scope: !4048)
!4555 = !{i64 2147644478, i64 2147644521, i64 2147644561}
!4556 = !DILocation(line: 264, column: 1, scope: !4048)
!4557 = !{i64 2147644674, i64 2147644717, i64 2147644757}
!4558 = !DILocation(line: 265, column: 1, scope: !4048)
!4559 = !{i64 2147644901, i64 2147644944, i64 2147644984}
!4560 = !DILocation(line: 266, column: 1, scope: !4048)
!4561 = !{i64 2147645118, i64 2147645161, i64 2147645201}
!4562 = !DILocation(line: 267, column: 1, scope: !4048)
!4563 = !{i64 2147645410, i64 2147645453, i64 2147645493}
!4564 = !DILocation(line: 268, column: 1, scope: !4048)
!4565 = !{i64 2147645642, i64 2147645685, i64 2147645725}
!4566 = !DILocation(line: 269, column: 1, scope: !4048)
!4567 = !{i64 2147645859, i64 2147645902, i64 2147645942}
!4568 = !DILocation(line: 270, column: 1, scope: !4048)
!4569 = !{i64 2147646066, i64 2147646109, i64 2147646149}
!4570 = !DILocation(line: 271, column: 1, scope: !4048)
!4571 = !{i64 2147646267, i64 2147646310, i64 2147646350}
!4572 = !DILocation(line: 272, column: 1, scope: !4048)
!4573 = !{i64 2147646499, i64 2147646542, i64 2147646582}
!4574 = !DILocation(line: 273, column: 1, scope: !4048)
!4575 = !{i64 2147646707, i64 2147646750, i64 2147646790}
!4576 = !DILocation(line: 274, column: 1, scope: !4048)
!4577 = !{i64 2147646897, i64 2147646940, i64 2147646980}
!4578 = !DILocation(line: 275, column: 1, scope: !4048)
!4579 = !{i64 2147647123, i64 2147647166, i64 2147647206}
!4580 = !DILocation(line: 276, column: 1, scope: !4048)
!4581 = !{i64 2147647312, i64 2147647355, i64 2147647395}
!4582 = !DILocation(line: 277, column: 1, scope: !4048)
!4583 = !{i64 2147647583, i64 2147647626, i64 2147647666}
!4584 = !DILocation(line: 278, column: 1, scope: !4048)
!4585 = !{i64 2147647803, i64 2147647846, i64 2147647886}
!4586 = !DILocation(line: 279, column: 1, scope: !4048)
!4587 = !{i64 2147648056, i64 2147648099, i64 2147648139}
!4588 = !DILocation(line: 280, column: 1, scope: !4048)
!4589 = !{i64 2147648264, i64 2147648307, i64 2147648347}
!4590 = !DILocation(line: 281, column: 1, scope: !4048)
!4591 = !{i64 2147648496, i64 2147648539, i64 2147648579}
!4592 = !DILocation(line: 282, column: 1, scope: !4048)
!4593 = !{i64 2147648707, i64 2147648750, i64 2147648790}
!4594 = !DILocation(line: 283, column: 1, scope: !4048)
!4595 = !{i64 2147648897, i64 2147648940, i64 2147648980}
!4596 = !DILocation(line: 284, column: 1, scope: !4048)
!4597 = !{i64 2147649111, i64 2147649154, i64 2147649194}
!4598 = !DILocation(line: 285, column: 1, scope: !4048)
!4599 = !{i64 2147649310, i64 2147649353, i64 2147649393}
!4600 = !DILocation(line: 286, column: 1, scope: !4048)
!4601 = !{i64 2147649497, i64 2147649540, i64 2147649580}
!4602 = !DILocation(line: 287, column: 1, scope: !4048)
!4603 = !{i64 2147649705, i64 2147649748, i64 2147649788}
!4604 = !DILocation(line: 288, column: 1, scope: !4048)
!4605 = !{i64 2147649934, i64 2147649977, i64 2147650017}
!4606 = !DILocation(line: 289, column: 1, scope: !4048)
!4607 = !{i64 2147650136, i64 2147650179, i64 2147650219}
!4608 = !DILocation(line: 290, column: 1, scope: !4048)
!4609 = !{i64 2147650335, i64 2147650378, i64 2147650418}
!4610 = !DILocation(line: 291, column: 1, scope: !4048)
!4611 = !{i64 2147650552, i64 2147650595, i64 2147650635}
!4612 = !DILocation(line: 293, column: 1, scope: !4048)
!4613 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4614)
!4614 = !{!4615, !4616}
!4615 = !DILocalVariable(name: "arg", arg: 1, scope: !4613, file: !129, line: 30, type: !138)
!4616 = !DILocalVariable(name: "key", scope: !4613, file: !129, line: 32, type: !121)
!4617 = !DILocation(line: 0, scope: !4613)
!4618 = !DILocation(line: 37, column: 2, scope: !4613)
!4619 = !DILocation(line: 38, column: 2, scope: !4613)
!4620 = !DILocation(line: 55, column: 2, scope: !4621, inlinedAt: !4628)
!4621 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4622, file: !4622, line: 42, type: !4623, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4625)
!4622 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!32}
!4625 = !{!4626, !4627}
!4626 = !DILocalVariable(name: "key", scope: !4621, file: !4622, line: 44, type: !32)
!4627 = !DILocalVariable(name: "tmp", scope: !4621, file: !4622, line: 53, type: !32)
!4628 = distinct !DILocation(line: 40, column: 8, scope: !4613)
!4629 = !{i64 2184590}
!4630 = !DILocation(line: 0, scope: !4621, inlinedAt: !4628)
!4631 = !DILocalVariable(name: "key", arg: 1, scope: !4632, file: !4622, line: 84, type: !32)
!4632 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4622, file: !4622, line: 84, type: !4633, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4635)
!4633 = !DISubroutineType(types: !4634)
!4634 = !{null, !32}
!4635 = !{!4631}
!4636 = !DILocation(line: 0, scope: !4632, inlinedAt: !4637)
!4637 = distinct !DILocation(line: 47, column: 2, scope: !4613)
!4638 = !DILocation(line: 95, column: 2, scope: !4632, inlinedAt: !4637)
!4639 = !{i64 2185407}
!4640 = !DILocation(line: 51, column: 18, scope: !4613)
!4641 = !DILocation(line: 53, column: 2, scope: !4613)
!4642 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !4643, file: !4643, line: 1609, type: !2821, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!4643 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4644 = !DILocation(line: 1611, column: 3, scope: !4642)
!4645 = !DILocation(line: 1612, column: 1, scope: !4642)
!4646 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !4643, file: !4643, line: 1629, type: !2821, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!4647 = !DILocation(line: 1631, column: 3, scope: !4646)
!4648 = !DILocation(line: 1632, column: 1, scope: !4646)
!4649 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !4650)
!4650 = !{!4651}
!4651 = !DILocalVariable(name: "dev", arg: 1, scope: !4649, file: !171, line: 26, type: !179)
!4652 = !DILocation(line: 0, scope: !4649)
!4653 = !DILocation(line: 68, column: 2, scope: !4649)
!4654 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !4655, file: !4655, line: 57, type: !4656, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !4702)
!4655 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4656 = !DISubroutineType(types: !4657)
!4657 = !{null, !32, !4658}
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 32)
!4659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4660)
!4660 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2420, line: 141, baseType: !4661)
!4661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2420, line: 97, size: 256, elements: !4662)
!4662 = !{!4663}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !4661, file: !2420, line: 107, baseType: !4664, size: 256)
!4664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2420, line: 98, size: 256, elements: !4665)
!4665 = !{!4666, !4671, !4676, !4681, !4686, !4691, !4696, !4701}
!4666 = !DIDerivedType(tag: DW_TAG_member, scope: !4664, file: !2420, line: 99, baseType: !4667, size: 32)
!4667 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4664, file: !2420, line: 99, size: 32, elements: !4668)
!4668 = !{!4669, !4670}
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !4667, file: !2420, line: 99, baseType: !121, size: 32)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !4667, file: !2420, line: 99, baseType: !121, size: 32)
!4671 = !DIDerivedType(tag: DW_TAG_member, scope: !4664, file: !2420, line: 100, baseType: !4672, size: 32, offset: 32)
!4672 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4664, file: !2420, line: 100, size: 32, elements: !4673)
!4673 = !{!4674, !4675}
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !4672, file: !2420, line: 100, baseType: !121, size: 32)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !4672, file: !2420, line: 100, baseType: !121, size: 32)
!4676 = !DIDerivedType(tag: DW_TAG_member, scope: !4664, file: !2420, line: 101, baseType: !4677, size: 32, offset: 64)
!4677 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4664, file: !2420, line: 101, size: 32, elements: !4678)
!4678 = !{!4679, !4680}
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !4677, file: !2420, line: 101, baseType: !121, size: 32)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !4677, file: !2420, line: 101, baseType: !121, size: 32)
!4681 = !DIDerivedType(tag: DW_TAG_member, scope: !4664, file: !2420, line: 102, baseType: !4682, size: 32, offset: 96)
!4682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4664, file: !2420, line: 102, size: 32, elements: !4683)
!4683 = !{!4684, !4685}
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !4682, file: !2420, line: 102, baseType: !121, size: 32)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !4682, file: !2420, line: 102, baseType: !121, size: 32)
!4686 = !DIDerivedType(tag: DW_TAG_member, scope: !4664, file: !2420, line: 103, baseType: !4687, size: 32, offset: 128)
!4687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4664, file: !2420, line: 103, size: 32, elements: !4688)
!4688 = !{!4689, !4690}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4687, file: !2420, line: 103, baseType: !121, size: 32)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4687, file: !2420, line: 103, baseType: !121, size: 32)
!4691 = !DIDerivedType(tag: DW_TAG_member, scope: !4664, file: !2420, line: 104, baseType: !4692, size: 32, offset: 160)
!4692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4664, file: !2420, line: 104, size: 32, elements: !4693)
!4693 = !{!4694, !4695}
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !4692, file: !2420, line: 104, baseType: !121, size: 32)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4692, file: !2420, line: 104, baseType: !121, size: 32)
!4696 = !DIDerivedType(tag: DW_TAG_member, scope: !4664, file: !2420, line: 105, baseType: !4697, size: 32, offset: 192)
!4697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4664, file: !2420, line: 105, size: 32, elements: !4698)
!4698 = !{!4699, !4700}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !4697, file: !2420, line: 105, baseType: !121, size: 32)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4697, file: !2420, line: 105, baseType: !121, size: 32)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !4664, file: !2420, line: 106, baseType: !121, size: 32, offset: 224)
!4702 = !{!4703, !4704}
!4703 = !DILocalVariable(name: "reason", arg: 1, scope: !4654, file: !4655, line: 57, type: !32)
!4704 = !DILocalVariable(name: "esf", arg: 2, scope: !4654, file: !4655, line: 57, type: !4658)
!4705 = !DILocation(line: 0, scope: !4654)
!4706 = !DILocation(line: 63, column: 2, scope: !4654)
!4707 = !DILocation(line: 64, column: 1, scope: !4654)
!4708 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !4655, file: !4655, line: 82, type: !4709, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !4724)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{null, !4658, !4711}
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4712, size: 32)
!4712 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !4713)
!4713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !4714)
!4714 = !{!4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723}
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4713, file: !284, line: 26, baseType: !121, size: 32)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4713, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4713, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4713, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4713, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4713, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4713, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4713, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4713, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!4724 = !{!4725, !4726, !4727}
!4725 = !DILocalVariable(name: "esf", arg: 1, scope: !4708, file: !4655, line: 82, type: !4658)
!4726 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !4708, file: !4655, line: 82, type: !4711)
!4727 = !DILocalVariable(name: "reason", scope: !4708, file: !4655, line: 88, type: !32)
!4728 = !DILocation(line: 0, scope: !4708)
!4729 = !DILocation(line: 88, column: 35, scope: !4708)
!4730 = !DILocation(line: 108, column: 2, scope: !4708)
!4731 = !DILocation(line: 131, column: 1, scope: !4708)
!4732 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !4655, file: !4655, line: 133, type: !4733, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !4735)
!4733 = !DISubroutineType(types: !4734)
!4734 = !{null, !102}
!4735 = !{!4736, !4737, !4738}
!4736 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !4732, file: !4655, line: 133, type: !102)
!4737 = !DILocalVariable(name: "ssf_contents", scope: !4732, file: !4655, line: 135, type: !723)
!4738 = !DILocalVariable(name: "oops_esf", scope: !4732, file: !4655, line: 136, type: !4660)
!4739 = !DILocation(line: 0, scope: !4732)
!4740 = !DILocation(line: 136, column: 2, scope: !4732)
!4741 = !DILocation(line: 136, column: 15, scope: !4732)
!4742 = !DILocation(line: 139, column: 22, scope: !4732)
!4743 = !DILocation(line: 139, column: 17, scope: !4732)
!4744 = !DILocation(line: 139, column: 20, scope: !4732)
!4745 = !DILocation(line: 141, column: 2, scope: !4732)
!4746 = !DILocation(line: 142, column: 2, scope: !4732)
!4747 = distinct !DISubprogram(name: "arch_irq_enable", scope: !4748, file: !4748, line: 40, type: !4633, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4749)
!4748 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4749 = !{!4750}
!4750 = !DILocalVariable(name: "irq", arg: 1, scope: !4747, file: !4748, line: 40, type: !32)
!4751 = !DILocation(line: 0, scope: !4747)
!4752 = !DILocation(line: 42, column: 2, scope: !4747)
!4753 = !DILocation(line: 43, column: 1, scope: !4747)
!4754 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !356, file: !356, line: 1684, type: !4755, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4757)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{null, !621}
!4757 = !{!4758}
!4758 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4754, file: !356, line: 1684, type: !621)
!4759 = !DILocation(line: 0, scope: !4754)
!4760 = !DILocation(line: 1686, column: 23, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4754, file: !356, line: 1686, column: 7)
!4762 = !DILocation(line: 1686, column: 7, scope: !4754)
!4763 = !DILocation(line: 1688, column: 5, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4761, file: !356, line: 1687, column: 3)
!4765 = !{i64 2151254112}
!4766 = !DILocation(line: 1689, column: 81, scope: !4764)
!4767 = !DILocation(line: 1689, column: 60, scope: !4764)
!4768 = !DILocation(line: 1689, column: 34, scope: !4764)
!4769 = !DILocation(line: 1689, column: 5, scope: !4764)
!4770 = !DILocation(line: 1689, column: 43, scope: !4764)
!4771 = !DILocation(line: 1690, column: 5, scope: !4764)
!4772 = !{i64 2151254226}
!4773 = !DILocation(line: 1691, column: 3, scope: !4764)
!4774 = !DILocation(line: 1692, column: 1, scope: !4754)
!4775 = distinct !DISubprogram(name: "arch_irq_disable", scope: !4748, file: !4748, line: 45, type: !4633, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4776)
!4776 = !{!4777}
!4777 = !DILocalVariable(name: "irq", arg: 1, scope: !4775, file: !4748, line: 45, type: !32)
!4778 = !DILocation(line: 0, scope: !4775)
!4779 = !DILocation(line: 47, column: 2, scope: !4775)
!4780 = !DILocation(line: 48, column: 1, scope: !4775)
!4781 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !356, file: !356, line: 1722, type: !4755, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4782)
!4782 = !{!4783}
!4783 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4781, file: !356, line: 1722, type: !621)
!4784 = !DILocation(line: 0, scope: !4781)
!4785 = !DILocation(line: 1724, column: 23, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4781, file: !356, line: 1724, column: 7)
!4787 = !DILocation(line: 1724, column: 7, scope: !4781)
!4788 = !DILocation(line: 1726, column: 81, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4786, file: !356, line: 1725, column: 3)
!4790 = !DILocation(line: 1726, column: 60, scope: !4789)
!4791 = !DILocation(line: 1726, column: 34, scope: !4789)
!4792 = !DILocation(line: 1726, column: 5, scope: !4789)
!4793 = !DILocation(line: 1726, column: 43, scope: !4789)
!4794 = !DILocation(line: 271, column: 3, scope: !4795, inlinedAt: !4797)
!4795 = distinct !DISubprogram(name: "__DSB", scope: !4796, file: !4796, line: 269, type: !2821, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !322)
!4796 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4797 = distinct !DILocation(line: 1727, column: 5, scope: !4789)
!4798 = !{i64 3708495}
!4799 = !DILocation(line: 260, column: 3, scope: !4800, inlinedAt: !4801)
!4800 = distinct !DISubprogram(name: "__ISB", scope: !4796, file: !4796, line: 258, type: !2821, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !322)
!4801 = distinct !DILocation(line: 1728, column: 5, scope: !4789)
!4802 = !{i64 3708212}
!4803 = !DILocation(line: 1729, column: 3, scope: !4789)
!4804 = !DILocation(line: 1730, column: 1, scope: !4781)
!4805 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !4748, file: !4748, line: 50, type: !4806, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4808)
!4806 = !DISubroutineType(types: !4807)
!4807 = !{!103, !32}
!4808 = !{!4809}
!4809 = !DILocalVariable(name: "irq", arg: 1, scope: !4805, file: !4748, line: 50, type: !32)
!4810 = !DILocation(line: 0, scope: !4805)
!4811 = !DILocation(line: 52, column: 20, scope: !4805)
!4812 = !DILocation(line: 52, column: 9, scope: !4805)
!4813 = !DILocation(line: 52, column: 41, scope: !4805)
!4814 = !DILocation(line: 52, column: 39, scope: !4805)
!4815 = !DILocation(line: 52, column: 2, scope: !4805)
!4816 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !4748, file: !4748, line: 64, type: !4817, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4819)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{null, !32, !32, !121}
!4819 = !{!4820, !4821, !4822}
!4820 = !DILocalVariable(name: "irq", arg: 1, scope: !4816, file: !4748, line: 64, type: !32)
!4821 = !DILocalVariable(name: "prio", arg: 2, scope: !4816, file: !4748, line: 64, type: !32)
!4822 = !DILocalVariable(name: "flags", arg: 3, scope: !4816, file: !4748, line: 64, type: !121)
!4823 = !DILocation(line: 0, scope: !4816)
!4824 = !DILocation(line: 83, column: 8, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4826, file: !4748, line: 82, column: 9)
!4826 = distinct !DILexicalBlock(scope: !4816, file: !4748, line: 76, column: 6)
!4827 = !DILocation(line: 95, column: 2, scope: !4816)
!4828 = !DILocation(line: 96, column: 1, scope: !4816)
!4829 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4830, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4832)
!4830 = !DISubroutineType(types: !4831)
!4831 = !{null, !621, !121}
!4832 = !{!4833, !4834}
!4833 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4829, file: !356, line: 1814, type: !621)
!4834 = !DILocalVariable(name: "priority", arg: 2, scope: !4829, file: !356, line: 1814, type: !121)
!4835 = !DILocation(line: 0, scope: !4829)
!4836 = !DILocation(line: 0, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4829, file: !356, line: 1816, column: 7)
!4838 = !DILocation(line: 1816, column: 7, scope: !4829)
!4839 = !DILocation(line: 1824, column: 1, scope: !4829)
!4840 = distinct !DISubprogram(name: "z_irq_spurious", scope: !4748, file: !4748, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4841)
!4841 = !{!4842}
!4842 = !DILocalVariable(name: "unused", arg: 1, scope: !4840, file: !4748, line: 155, type: !13)
!4843 = !DILocation(line: 0, scope: !4840)
!4844 = !DILocation(line: 159, column: 2, scope: !4840)
!4845 = !DILocation(line: 160, column: 1, scope: !4840)
!4846 = distinct !DISubprogram(name: "z_arm_nmi", scope: !4847, file: !4847, line: 87, type: !2821, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !322)
!4847 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4848 = !DILocation(line: 89, column: 2, scope: !4846)
!4849 = !DILocation(line: 90, column: 2, scope: !4846)
!4850 = !DILocation(line: 91, column: 1, scope: !4846)
!4851 = !DISubprogram(name: "z_SysNmiOnReset", scope: !4847, file: !4847, line: 23, type: !2821, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!4852 = !DISubprogram(name: "z_arm_int_exit", scope: !4853, file: !4853, line: 153, type: !2821, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!4853 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4854 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !4855, file: !4855, line: 256, type: !2821, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !322)
!4855 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4856 = !DILocation(line: 258, column: 2, scope: !4854)
!4857 = !DILocation(line: 260, column: 2, scope: !4854)
!4858 = !DILocation(line: 262, column: 2, scope: !4854)
!4859 = !DILocation(line: 263, column: 2, scope: !4854)
!4860 = !DILocation(line: 267, column: 2, scope: !4854)
!4861 = !DILocation(line: 268, column: 2, scope: !4854)
!4862 = distinct !DISubprogram(name: "relocate_vector_table", scope: !4855, file: !4855, line: 53, type: !2821, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !322)
!4863 = !DILocation(line: 55, column: 12, scope: !4862)
!4864 = !DILocation(line: 271, column: 3, scope: !4865, inlinedAt: !4866)
!4865 = distinct !DISubprogram(name: "__DSB", scope: !4796, file: !4796, line: 269, type: !2821, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !322)
!4866 = distinct !DILocation(line: 56, column: 2, scope: !4862)
!4867 = !{i64 3707166}
!4868 = !DILocation(line: 260, column: 3, scope: !4869, inlinedAt: !4870)
!4869 = distinct !DISubprogram(name: "__ISB", scope: !4796, file: !4796, line: 258, type: !2821, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !322)
!4870 = distinct !DILocation(line: 57, column: 2, scope: !4862)
!4871 = !{i64 3706883}
!4872 = !DILocation(line: 58, column: 1, scope: !4862)
!4873 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !4855, file: !4855, line: 96, type: !2821, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !322)
!4874 = !DILocation(line: 103, column: 13, scope: !4873)
!4875 = !DILocation(line: 975, column: 3, scope: !4876, inlinedAt: !4881)
!4876 = distinct !DISubprogram(name: "__get_CONTROL", scope: !4796, file: !4796, line: 971, type: !4877, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !4879)
!4877 = !DISubroutineType(types: !4878)
!4878 = !{!121}
!4879 = !{!4880}
!4880 = !DILocalVariable(name: "result", scope: !4876, file: !4796, line: 973, type: !121)
!4881 = distinct !DILocation(line: 189, column: 16, scope: !4873)
!4882 = !{i64 3727996}
!4883 = !DILocation(line: 0, scope: !4876, inlinedAt: !4881)
!4884 = !DILocation(line: 189, column: 32, scope: !4873)
!4885 = !DILocalVariable(name: "control", arg: 1, scope: !4886, file: !4796, line: 1001, type: !121)
!4886 = distinct !DISubprogram(name: "__set_CONTROL", scope: !4796, file: !4796, line: 1001, type: !4887, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !4889)
!4887 = !DISubroutineType(types: !4888)
!4888 = !{null, !121}
!4889 = !{!4885}
!4890 = !DILocation(line: 0, scope: !4886, inlinedAt: !4891)
!4891 = distinct !DILocation(line: 189, column: 2, scope: !4873)
!4892 = !DILocation(line: 1003, column: 3, scope: !4886, inlinedAt: !4891)
!4893 = !{i64 3728716}
!4894 = !DILocation(line: 260, column: 3, scope: !4869, inlinedAt: !4895)
!4895 = distinct !DILocation(line: 1004, column: 3, scope: !4886, inlinedAt: !4891)
!4896 = !DILocation(line: 191, column: 1, scope: !4873)
!4897 = distinct !DISubprogram(name: "arch_swap", scope: !4898, file: !4898, line: 33, type: !4806, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !4899)
!4898 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4899 = !{!4900}
!4900 = !DILocalVariable(name: "key", arg: 1, scope: !4897, file: !4898, line: 33, type: !32)
!4901 = !DILocation(line: 0, scope: !4897)
!4902 = !DILocation(line: 36, column: 2, scope: !4897)
!4903 = !DILocation(line: 36, column: 17, scope: !4897)
!4904 = !DILocation(line: 36, column: 25, scope: !4897)
!4905 = !DILocation(line: 37, column: 37, scope: !4897)
!4906 = !DILocation(line: 37, column: 17, scope: !4897)
!4907 = !DILocation(line: 37, column: 35, scope: !4897)
!4908 = !DILocation(line: 41, column: 12, scope: !4897)
!4909 = !DILocalVariable(name: "key", arg: 1, scope: !4910, file: !4622, line: 84, type: !32)
!4910 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4622, file: !4622, line: 84, type: !4633, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !4911)
!4911 = !{!4909}
!4912 = !DILocation(line: 0, scope: !4910, inlinedAt: !4913)
!4913 = distinct !DILocation(line: 44, column: 2, scope: !4897)
!4914 = !DILocation(line: 95, column: 2, scope: !4910, inlinedAt: !4913)
!4915 = !{i64 2277667}
!4916 = !DILocation(line: 53, column: 9, scope: !4897)
!4917 = !DILocation(line: 53, column: 24, scope: !4897)
!4918 = !DILocation(line: 53, column: 2, scope: !4897)
!4919 = distinct !DISubprogram(name: "arch_new_thread", scope: !4920, file: !4920, line: 56, type: !4921, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !5028)
!4920 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4921 = !DISubroutineType(types: !4922)
!4922 = !{null, !4923, !5023, !995, !3123, !102, !102, !102}
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 32)
!4924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !4925)
!4925 = !{!4926, !4984, !4996, !4997, !4998, !4999, !5005, !5018}
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4924, file: !211, line: 247, baseType: !4927, size: 384)
!4927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !4928)
!4928 = !{!4929, !4953, !4960, !4961, !4962, !4971, !4972, !4973}
!4929 = !DIDerivedType(tag: DW_TAG_member, scope: !4927, file: !211, line: 60, baseType: !4930, size: 64)
!4930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4927, file: !211, line: 60, size: 64, elements: !4931)
!4931 = !{!4932, !4947}
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4930, file: !211, line: 61, baseType: !4933, size: 64)
!4933 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !4934)
!4934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !4935)
!4935 = !{!4936, !4942}
!4936 = !DIDerivedType(tag: DW_TAG_member, scope: !4934, file: !221, line: 38, baseType: !4937, size: 32)
!4937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4934, file: !221, line: 38, size: 32, elements: !4938)
!4938 = !{!4939, !4941}
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4937, file: !221, line: 39, baseType: !4940, size: 32)
!4940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4934, size: 32)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4937, file: !221, line: 40, baseType: !4940, size: 32)
!4942 = !DIDerivedType(tag: DW_TAG_member, scope: !4934, file: !221, line: 42, baseType: !4943, size: 32, offset: 32)
!4943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4934, file: !221, line: 42, size: 32, elements: !4944)
!4944 = !{!4945, !4946}
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4943, file: !221, line: 43, baseType: !4940, size: 32)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4943, file: !221, line: 44, baseType: !4940, size: 32)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4930, file: !211, line: 62, baseType: !4948, size: 64)
!4948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !4949)
!4949 = !{!4950}
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4948, file: !237, line: 50, baseType: !4951, size: 64)
!4951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4952, size: 64, elements: !242)
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 32)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4927, file: !211, line: 68, baseType: !4954, size: 32, offset: 64)
!4954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4955, size: 32)
!4955 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !4956)
!4956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !4957)
!4957 = !{!4958}
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4956, file: !247, line: 232, baseType: !4959, size: 64)
!4959 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !4934)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4927, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4927, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!4962 = !DIDerivedType(tag: DW_TAG_member, scope: !4927, file: !211, line: 90, baseType: !4963, size: 16, offset: 112)
!4963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4927, file: !211, line: 90, size: 16, elements: !4964)
!4964 = !{!4965, !4970}
!4965 = !DIDerivedType(tag: DW_TAG_member, scope: !4963, file: !211, line: 91, baseType: !4966, size: 16)
!4966 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4963, file: !211, line: 91, size: 16, elements: !4967)
!4967 = !{!4968, !4969}
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4966, file: !211, line: 96, baseType: !261, size: 8)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4966, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4963, file: !211, line: 100, baseType: !265, size: 16)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4927, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4927, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4927, file: !211, line: 131, baseType: !4974, size: 192, offset: 192)
!4974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !4975)
!4975 = !{!4976, !4977, !4983}
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4974, file: !247, line: 245, baseType: !4933, size: 64)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4974, file: !247, line: 246, baseType: !4978, size: 32, offset: 64)
!4978 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !4979)
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 32)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{null, !4982}
!4982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4974, size: 32)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4974, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4924, file: !211, line: 250, baseType: !4985, size: 288, offset: 384)
!4985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !4986)
!4986 = !{!4987, !4988, !4989, !4990, !4991, !4992, !4993, !4994, !4995}
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4985, file: !284, line: 26, baseType: !121, size: 32)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4985, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4985, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4985, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4985, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4985, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4985, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4985, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4985, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4924, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4924, file: !211, line: 256, baseType: !4955, size: 64, offset: 704)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4924, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4924, file: !211, line: 300, baseType: !5000, size: 96, offset: 800)
!5000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5001)
!5001 = !{!5002, !5003, !5004}
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5000, file: !211, line: 153, baseType: !22, size: 32)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5000, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5000, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4924, file: !211, line: 325, baseType: !5006, size: 32, offset: 896)
!5006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5007, size: 32)
!5007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5008)
!5008 = !{!5009, !5015, !5016}
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5007, file: !307, line: 5074, baseType: !5010, size: 96)
!5010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5011)
!5011 = !{!5012, !5013, !5014}
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5010, file: !311, line: 57, baseType: !314, size: 32)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5010, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5010, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5007, file: !307, line: 5075, baseType: !4955, size: 64, offset: 96)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5007, file: !307, line: 5076, baseType: !5017, offset: 160)
!5017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4924, file: !211, line: 343, baseType: !5019, size: 64, offset: 928)
!5019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5020)
!5020 = !{!5021, !5022}
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5019, file: !284, line: 63, baseType: !121, size: 32)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5019, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5024, size: 32)
!5024 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3124, line: 44, baseType: !5025)
!5025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1930, line: 47, size: 8, elements: !5026)
!5026 = !{!5027}
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5025, file: !1930, line: 48, baseType: !146, size: 8)
!5028 = !{!5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036}
!5029 = !DILocalVariable(name: "thread", arg: 1, scope: !4919, file: !4920, line: 56, type: !4923)
!5030 = !DILocalVariable(name: "stack", arg: 2, scope: !4919, file: !4920, line: 56, type: !5023)
!5031 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !4919, file: !4920, line: 57, type: !995)
!5032 = !DILocalVariable(name: "entry", arg: 4, scope: !4919, file: !4920, line: 57, type: !3123)
!5033 = !DILocalVariable(name: "p1", arg: 5, scope: !4919, file: !4920, line: 58, type: !102)
!5034 = !DILocalVariable(name: "p2", arg: 6, scope: !4919, file: !4920, line: 58, type: !102)
!5035 = !DILocalVariable(name: "p3", arg: 7, scope: !4919, file: !4920, line: 58, type: !102)
!5036 = !DILocalVariable(name: "iframe", scope: !4919, file: !4920, line: 60, type: !2418)
!5037 = !DILocation(line: 0, scope: !4919)
!5038 = !DILocation(line: 85, column: 11, scope: !4919)
!5039 = !DILocation(line: 93, column: 10, scope: !4919)
!5040 = !DILocation(line: 98, column: 13, scope: !4919)
!5041 = !DILocation(line: 100, column: 15, scope: !4919)
!5042 = !DILocation(line: 100, column: 10, scope: !4919)
!5043 = !DILocation(line: 100, column: 13, scope: !4919)
!5044 = !DILocation(line: 101, column: 15, scope: !4919)
!5045 = !DILocation(line: 101, column: 10, scope: !4919)
!5046 = !DILocation(line: 101, column: 13, scope: !4919)
!5047 = !DILocation(line: 102, column: 15, scope: !4919)
!5048 = !DILocation(line: 102, column: 10, scope: !4919)
!5049 = !DILocation(line: 102, column: 13, scope: !4919)
!5050 = !DILocation(line: 103, column: 15, scope: !4919)
!5051 = !DILocation(line: 103, column: 10, scope: !4919)
!5052 = !DILocation(line: 103, column: 13, scope: !4919)
!5053 = !DILocation(line: 106, column: 10, scope: !4919)
!5054 = !DILocation(line: 106, column: 15, scope: !4919)
!5055 = !DILocation(line: 122, column: 29, scope: !4919)
!5056 = !DILocation(line: 122, column: 23, scope: !4919)
!5057 = !DILocation(line: 122, column: 27, scope: !4919)
!5058 = !DILocation(line: 123, column: 15, scope: !4919)
!5059 = !DILocation(line: 123, column: 23, scope: !4919)
!5060 = !DILocation(line: 143, column: 1, scope: !4919)
!5061 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !4920, file: !4920, line: 385, type: !5062, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !5065)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{!121, !5064, !5064}
!5064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!5065 = !{!5066, !5067, !5068, !5071}
!5066 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5061, file: !4920, line: 385, type: !5064)
!5067 = !DILocalVariable(name: "psp", arg: 2, scope: !5061, file: !4920, line: 385, type: !5064)
!5068 = !DILocalVariable(name: "thread", scope: !5061, file: !4920, line: 388, type: !5069)
!5069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5070, size: 32)
!5070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4924)
!5071 = !DILocalVariable(name: "guard_len", scope: !5061, file: !4920, line: 405, type: !121)
!5072 = !DILocation(line: 0, scope: !5061)
!5073 = !DILocation(line: 388, column: 34, scope: !5061)
!5074 = !DILocation(line: 390, column: 13, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5061, file: !4920, line: 390, column: 6)
!5076 = !DILocation(line: 390, column: 6, scope: !5061)
!5077 = !DILocation(line: 438, column: 6, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5061, file: !4920, line: 438, column: 6)
!5079 = !DILocation(line: 438, column: 6, scope: !5061)
!5080 = !DILocation(line: 442, column: 3, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5078, file: !4920, line: 440, column: 22)
!5082 = !DILocation(line: 455, column: 1, scope: !5061)
!5083 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !4920, file: !4920, line: 530, type: !5084, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !5086)
!5084 = !DISubroutineType(types: !5085)
!5085 = !{null, !4923, !995, !3123}
!5086 = !{!5087, !5088, !5089}
!5087 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5083, file: !4920, line: 530, type: !4923)
!5088 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5083, file: !4920, line: 530, type: !995)
!5089 = !DILocalVariable(name: "_main", arg: 3, scope: !5083, file: !4920, line: 531, type: !3123)
!5090 = !DILocation(line: 0, scope: !5083)
!5091 = !DILocation(line: 535, column: 11, scope: !5083)
!5092 = !DILocation(line: 560, column: 2, scope: !5083)
!5093 = !DILocation(line: 576, column: 2, scope: !5083)
!5094 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5095 = !DILocation(line: 603, column: 2, scope: !5083)
!5096 = distinct !DISubprogram(name: "z_arm_fault", scope: !5097, file: !5097, line: 1036, type: !5098, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5113)
!5097 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5098 = !DISubroutineType(types: !5099)
!5099 = !{null, !121, !121, !121, !5100}
!5100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5101, size: 32)
!5101 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !5102)
!5102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5103)
!5103 = !{!5104, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112}
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5102, file: !284, line: 26, baseType: !121, size: 32)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5102, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5102, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5102, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5102, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5102, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5102, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5102, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5102, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5113 = !{!5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123}
!5114 = !DILocalVariable(name: "msp", arg: 1, scope: !5096, file: !5097, line: 1036, type: !121)
!5115 = !DILocalVariable(name: "psp", arg: 2, scope: !5096, file: !5097, line: 1036, type: !121)
!5116 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5096, file: !5097, line: 1036, type: !121)
!5117 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5096, file: !5097, line: 1037, type: !5100)
!5118 = !DILocalVariable(name: "reason", scope: !5096, file: !5097, line: 1039, type: !121)
!5119 = !DILocalVariable(name: "fault", scope: !5096, file: !5097, line: 1040, type: !103)
!5120 = !DILocalVariable(name: "recoverable", scope: !5096, file: !5097, line: 1041, type: !157)
!5121 = !DILocalVariable(name: "nested_exc", scope: !5096, file: !5097, line: 1041, type: !157)
!5122 = !DILocalVariable(name: "esf", scope: !5096, file: !5097, line: 1042, type: !2486)
!5123 = !DILocalVariable(name: "esf_copy", scope: !5096, file: !5097, line: 1047, type: !2487)
!5124 = !DILocation(line: 0, scope: !5096)
!5125 = !DILocation(line: 1040, column: 19, scope: !5096)
!5126 = !DILocation(line: 1040, column: 24, scope: !5096)
!5127 = !DILocation(line: 1041, column: 2, scope: !5096)
!5128 = !DILocation(line: 1047, column: 2, scope: !5096)
!5129 = !DILocation(line: 1047, column: 15, scope: !5096)
!5130 = !DILocalVariable(name: "key", arg: 1, scope: !5131, file: !4622, line: 84, type: !32)
!5131 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4622, file: !4622, line: 84, type: !4633, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5132)
!5132 = !{!5130}
!5133 = !DILocation(line: 0, scope: !5131, inlinedAt: !5134)
!5134 = distinct !DILocation(line: 1050, column: 2, scope: !5096)
!5135 = !DILocation(line: 95, column: 2, scope: !5131, inlinedAt: !5134)
!5136 = !{i64 2310911}
!5137 = !DILocation(line: 1055, column: 9, scope: !5096)
!5138 = !DILocation(line: 1063, column: 11, scope: !5096)
!5139 = !DILocation(line: 1064, column: 6, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5096, file: !5097, line: 1064, column: 6)
!5141 = !{i8 0, i8 2}
!5142 = !DILocation(line: 1064, column: 6, scope: !5096)
!5143 = !DILocation(line: 1070, column: 20, scope: !5096)
!5144 = !DILocation(line: 1070, column: 2, scope: !5096)
!5145 = !DILocation(line: 1089, column: 6, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5096, file: !5097, line: 1089, column: 6)
!5147 = !DILocation(line: 0, scope: !5146)
!5148 = !DILocation(line: 1089, column: 6, scope: !5096)
!5149 = !DILocation(line: 1090, column: 28, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5151, file: !5097, line: 1090, column: 7)
!5151 = distinct !DILexicalBlock(scope: !5146, file: !5097, line: 1089, column: 18)
!5152 = !DILocation(line: 1090, column: 44, scope: !5150)
!5153 = !DILocation(line: 1090, column: 7, scope: !5151)
!5154 = !DILocation(line: 1091, column: 24, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5150, file: !5097, line: 1090, column: 50)
!5156 = !DILocation(line: 1092, column: 3, scope: !5155)
!5157 = !DILocation(line: 1094, column: 23, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5146, file: !5097, line: 1093, column: 9)
!5159 = !DILocation(line: 1097, column: 2, scope: !5096)
!5160 = !DILocation(line: 1098, column: 1, scope: !5096)
!5161 = distinct !DISubprogram(name: "get_esf", scope: !5097, file: !5097, line: 894, type: !5162, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5165)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{!2486, !121, !121, !121, !5164}
!5164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!5165 = !{!5166, !5167, !5168, !5169, !5170, !5171}
!5166 = !DILocalVariable(name: "msp", arg: 1, scope: !5161, file: !5097, line: 894, type: !121)
!5167 = !DILocalVariable(name: "psp", arg: 2, scope: !5161, file: !5097, line: 894, type: !121)
!5168 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5161, file: !5097, line: 894, type: !121)
!5169 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5161, file: !5097, line: 895, type: !5164)
!5170 = !DILocalVariable(name: "alternative_state_exc", scope: !5161, file: !5097, line: 897, type: !157)
!5171 = !DILocalVariable(name: "ptr_esf", scope: !5161, file: !5097, line: 898, type: !2486)
!5172 = !DILocation(line: 0, scope: !5161)
!5173 = !DILocation(line: 900, column: 14, scope: !5161)
!5174 = !DILocation(line: 902, column: 49, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5161, file: !5097, line: 902, column: 6)
!5176 = !DILocation(line: 902, column: 6, scope: !5161)
!5177 = !DILocation(line: 983, column: 18, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5161, file: !5097, line: 983, column: 6)
!5179 = !DILocation(line: 991, column: 7, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5181, file: !5097, line: 990, column: 30)
!5181 = distinct !DILexicalBlock(scope: !5161, file: !5097, line: 990, column: 6)
!5182 = !DILocation(line: 998, column: 16, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5184, file: !5097, line: 995, column: 10)
!5184 = distinct !DILexicalBlock(scope: !5180, file: !5097, line: 991, column: 7)
!5185 = !DILocation(line: 1002, column: 2, scope: !5161)
!5186 = !DILocation(line: 1003, column: 1, scope: !5161)
!5187 = distinct !DISubprogram(name: "fault_handle", scope: !5097, file: !5097, line: 786, type: !5188, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5190)
!5188 = !DISubroutineType(types: !5189)
!5189 = !{!121, !2486, !103, !5164}
!5190 = !{!5191, !5192, !5193, !5194}
!5191 = !DILocalVariable(name: "esf", arg: 1, scope: !5187, file: !5097, line: 786, type: !2486)
!5192 = !DILocalVariable(name: "fault", arg: 2, scope: !5187, file: !5097, line: 786, type: !103)
!5193 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5187, file: !5097, line: 786, type: !5164)
!5194 = !DILocalVariable(name: "reason", scope: !5187, file: !5097, line: 788, type: !121)
!5195 = !DILocation(line: 0, scope: !5187)
!5196 = !DILocation(line: 790, column: 15, scope: !5187)
!5197 = !DILocation(line: 792, column: 2, scope: !5187)
!5198 = !DILocation(line: 794, column: 12, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5187, file: !5097, line: 792, column: 17)
!5200 = !DILocation(line: 795, column: 3, scope: !5199)
!5201 = !DILocation(line: 800, column: 12, scope: !5199)
!5202 = !DILocation(line: 801, column: 3, scope: !5199)
!5203 = !DILocation(line: 803, column: 12, scope: !5199)
!5204 = !DILocation(line: 804, column: 3, scope: !5199)
!5205 = !DILocation(line: 806, column: 12, scope: !5199)
!5206 = !DILocation(line: 807, column: 3, scope: !5199)
!5207 = !DILocation(line: 814, column: 3, scope: !5199)
!5208 = !DILocation(line: 815, column: 3, scope: !5199)
!5209 = !DILocation(line: 829, column: 2, scope: !5187)
!5210 = distinct !DISubprogram(name: "hard_fault", scope: !5097, file: !5097, line: 709, type: !5211, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5213)
!5211 = !DISubroutineType(types: !5212)
!5212 = !{!121, !2486, !5164}
!5213 = !{!5214, !5215, !5216}
!5214 = !DILocalVariable(name: "esf", arg: 1, scope: !5210, file: !5097, line: 709, type: !2486)
!5215 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5210, file: !5097, line: 709, type: !5164)
!5216 = !DILocalVariable(name: "reason", scope: !5210, file: !5097, line: 711, type: !121)
!5217 = !DILocation(line: 0, scope: !5210)
!5218 = !DILocation(line: 732, column: 15, scope: !5210)
!5219 = !DILocation(line: 734, column: 12, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5210, file: !5097, line: 734, column: 6)
!5221 = !DILocation(line: 734, column: 17, scope: !5220)
!5222 = !DILocation(line: 734, column: 41, scope: !5220)
!5223 = !DILocation(line: 734, column: 6, scope: !5210)
!5224 = !DILocation(line: 736, column: 19, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5220, file: !5097, line: 736, column: 13)
!5226 = !DILocation(line: 736, column: 49, scope: !5225)
!5227 = !DILocation(line: 736, column: 13, scope: !5220)
!5228 = !DILocation(line: 738, column: 19, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5225, file: !5097, line: 738, column: 13)
!5230 = !DILocation(line: 738, column: 24, scope: !5229)
!5231 = !DILocation(line: 738, column: 47, scope: !5229)
!5232 = !DILocation(line: 738, column: 13, scope: !5225)
!5233 = !DILocation(line: 740, column: 7, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5235, file: !5097, line: 740, column: 7)
!5235 = distinct !DILexicalBlock(scope: !5229, file: !5097, line: 738, column: 53)
!5236 = !DILocation(line: 740, column: 7, scope: !5235)
!5237 = !DILocation(line: 742, column: 24, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5234, file: !5097, line: 740, column: 38)
!5239 = !DILocation(line: 743, column: 3, scope: !5238)
!5240 = !DILocation(line: 743, column: 20, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5234, file: !5097, line: 743, column: 14)
!5242 = !DILocation(line: 743, column: 25, scope: !5241)
!5243 = !DILocation(line: 743, column: 52, scope: !5241)
!5244 = !DILocation(line: 743, column: 14, scope: !5234)
!5245 = !DILocation(line: 744, column: 13, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5241, file: !5097, line: 743, column: 58)
!5247 = !DILocation(line: 745, column: 3, scope: !5246)
!5248 = !DILocation(line: 745, column: 20, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5241, file: !5097, line: 745, column: 14)
!5250 = !DILocation(line: 745, column: 25, scope: !5249)
!5251 = !DILocation(line: 745, column: 52, scope: !5249)
!5252 = !DILocation(line: 745, column: 14, scope: !5241)
!5253 = !DILocation(line: 746, column: 13, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5249, file: !5097, line: 745, column: 58)
!5255 = !DILocation(line: 747, column: 3, scope: !5254)
!5256 = !DILocation(line: 747, column: 20, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5249, file: !5097, line: 747, column: 14)
!5258 = !DILocation(line: 747, column: 52, scope: !5257)
!5259 = !DILocation(line: 747, column: 14, scope: !5249)
!5260 = !DILocation(line: 748, column: 13, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5257, file: !5097, line: 747, column: 58)
!5262 = !DILocation(line: 753, column: 3, scope: !5261)
!5263 = !DILocation(line: 766, column: 2, scope: !5210)
!5264 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5097, file: !5097, line: 229, type: !5188, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5265)
!5265 = !{!5266, !5267, !5268, !5269, !5270, !5271, !5274}
!5266 = !DILocalVariable(name: "esf", arg: 1, scope: !5264, file: !5097, line: 229, type: !2486)
!5267 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5264, file: !5097, line: 229, type: !103)
!5268 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5264, file: !5097, line: 230, type: !5164)
!5269 = !DILocalVariable(name: "reason", scope: !5264, file: !5097, line: 232, type: !121)
!5270 = !DILocalVariable(name: "mmfar", scope: !5264, file: !5097, line: 233, type: !121)
!5271 = !DILocalVariable(name: "temp", scope: !5272, file: !5097, line: 254, type: !121)
!5272 = distinct !DILexicalBlock(scope: !5273, file: !5097, line: 244, column: 48)
!5273 = distinct !DILexicalBlock(scope: !5264, file: !5097, line: 244, column: 6)
!5274 = !DILocalVariable(name: "min_stack_ptr", scope: !5275, file: !5097, line: 309, type: !121)
!5275 = distinct !DILexicalBlock(scope: !5276, file: !5097, line: 308, column: 43)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !5097, line: 308, column: 7)
!5277 = distinct !DILexicalBlock(scope: !5278, file: !5097, line: 289, column: 40)
!5278 = distinct !DILexicalBlock(scope: !5264, file: !5097, line: 288, column: 6)
!5279 = !DILocation(line: 0, scope: !5264)
!5280 = !DILocation(line: 237, column: 12, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5264, file: !5097, line: 237, column: 6)
!5282 = !DILocation(line: 241, column: 12, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5264, file: !5097, line: 241, column: 6)
!5284 = !DILocation(line: 244, column: 12, scope: !5273)
!5285 = !DILocation(line: 244, column: 17, scope: !5273)
!5286 = !DILocation(line: 244, column: 42, scope: !5273)
!5287 = !DILocation(line: 244, column: 6, scope: !5264)
!5288 = !DILocation(line: 254, column: 24, scope: !5272)
!5289 = !DILocation(line: 0, scope: !5272)
!5290 = !DILocation(line: 256, column: 13, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5272, file: !5097, line: 256, column: 7)
!5292 = !DILocation(line: 256, column: 18, scope: !5291)
!5293 = !DILocation(line: 256, column: 44, scope: !5291)
!5294 = !DILocation(line: 256, column: 7, scope: !5272)
!5295 = !DILocation(line: 259, column: 24, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5297, file: !5097, line: 259, column: 8)
!5297 = distinct !DILexicalBlock(scope: !5291, file: !5097, line: 256, column: 50)
!5298 = !DILocation(line: 259, column: 8, scope: !5297)
!5299 = !DILocation(line: 261, column: 15, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5296, file: !5097, line: 259, column: 30)
!5301 = !DILocation(line: 262, column: 4, scope: !5300)
!5302 = !DILocation(line: 265, column: 12, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5264, file: !5097, line: 265, column: 6)
!5304 = !DILocation(line: 269, column: 12, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5264, file: !5097, line: 269, column: 6)
!5306 = !DILocation(line: 288, column: 12, scope: !5278)
!5307 = !DILocation(line: 288, column: 17, scope: !5278)
!5308 = !DILocation(line: 288, column: 41, scope: !5278)
!5309 = !DILocation(line: 289, column: 9, scope: !5278)
!5310 = !DILocation(line: 289, column: 14, scope: !5278)
!5311 = !DILocation(line: 288, column: 6, scope: !5264)
!5312 = !DILocation(line: 308, column: 12, scope: !5276)
!5313 = !DILocation(line: 308, column: 17, scope: !5276)
!5314 = !DILocation(line: 308, column: 7, scope: !5277)
!5315 = !DILocation(line: 310, column: 6, scope: !5275)
!5316 = !DILocation(line: 309, column: 29, scope: !5275)
!5317 = !DILocation(line: 0, scope: !5275)
!5318 = !DILocation(line: 312, column: 8, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5275, file: !5097, line: 312, column: 8)
!5320 = !DILocation(line: 312, column: 8, scope: !5275)
!5321 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5322, file: !4796, line: 1099, type: !121)
!5322 = distinct !DISubprogram(name: "__set_PSP", scope: !4796, file: !4796, line: 1099, type: !4887, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5323)
!5323 = !{!5321}
!5324 = !DILocation(line: 0, scope: !5322, inlinedAt: !5325)
!5325 = distinct !DILocation(line: 338, column: 5, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5319, file: !5097, line: 312, column: 23)
!5327 = !DILocation(line: 1101, column: 3, scope: !5322, inlinedAt: !5325)
!5328 = !{i64 3758135}
!5329 = !DILocation(line: 341, column: 4, scope: !5326)
!5330 = !DILocation(line: 360, column: 12, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5264, file: !5097, line: 360, column: 6)
!5332 = !DILocation(line: 360, column: 17, scope: !5331)
!5333 = !DILocation(line: 360, column: 41, scope: !5331)
!5334 = !DILocation(line: 360, column: 6, scope: !5264)
!5335 = !DILocation(line: 361, column: 14, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5331, file: !5097, line: 360, column: 47)
!5337 = !DILocation(line: 362, column: 2, scope: !5336)
!5338 = !DILocation(line: 366, column: 12, scope: !5264)
!5339 = !DILocation(line: 369, column: 15, scope: !5264)
!5340 = !DILocation(line: 371, column: 2, scope: !5264)
!5341 = distinct !DISubprogram(name: "bus_fault", scope: !5097, file: !5097, line: 383, type: !5342, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5344)
!5342 = !DISubroutineType(types: !5343)
!5343 = !{!103, !2486, !103, !5164}
!5344 = !{!5345, !5346, !5347, !5348, !5349}
!5345 = !DILocalVariable(name: "esf", arg: 1, scope: !5341, file: !5097, line: 383, type: !2486)
!5346 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5341, file: !5097, line: 383, type: !103)
!5347 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5341, file: !5097, line: 383, type: !5164)
!5348 = !DILocalVariable(name: "reason", scope: !5341, file: !5097, line: 385, type: !121)
!5349 = !DILocalVariable(name: "bfar", scope: !5350, file: !5097, line: 405, type: !121)
!5350 = distinct !DILexicalBlock(scope: !5351, file: !5097, line: 395, column: 42)
!5351 = distinct !DILexicalBlock(scope: !5341, file: !5097, line: 395, column: 6)
!5352 = !DILocation(line: 0, scope: !5341)
!5353 = !DILocation(line: 389, column: 11, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5341, file: !5097, line: 389, column: 6)
!5355 = !DILocation(line: 392, column: 11, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5341, file: !5097, line: 392, column: 6)
!5357 = !DILocation(line: 395, column: 11, scope: !5351)
!5358 = !DILocation(line: 395, column: 16, scope: !5351)
!5359 = !DILocation(line: 395, column: 6, scope: !5341)
!5360 = !DILocation(line: 405, column: 3, scope: !5350)
!5361 = !DILocation(line: 0, scope: !5350)
!5362 = !DILocation(line: 407, column: 13, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5350, file: !5097, line: 407, column: 7)
!5364 = !DILocation(line: 407, column: 18, scope: !5363)
!5365 = !DILocation(line: 407, column: 44, scope: !5363)
!5366 = !DILocation(line: 407, column: 7, scope: !5350)
!5367 = !DILocation(line: 411, column: 15, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !5097, line: 409, column: 30)
!5369 = distinct !DILexicalBlock(scope: !5370, file: !5097, line: 409, column: 8)
!5370 = distinct !DILexicalBlock(scope: !5363, file: !5097, line: 407, column: 50)
!5371 = !DILocation(line: 412, column: 4, scope: !5368)
!5372 = !DILocation(line: 415, column: 11, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5341, file: !5097, line: 415, column: 6)
!5374 = !DILocation(line: 418, column: 12, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5341, file: !5097, line: 418, column: 6)
!5376 = !DILocation(line: 418, column: 17, scope: !5375)
!5377 = !DILocation(line: 418, column: 41, scope: !5375)
!5378 = !DILocation(line: 418, column: 6, scope: !5341)
!5379 = !DILocation(line: 423, column: 18, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5375, file: !5097, line: 423, column: 13)
!5381 = !DILocation(line: 524, column: 12, scope: !5341)
!5382 = !DILocation(line: 526, column: 15, scope: !5341)
!5383 = !DILocation(line: 528, column: 2, scope: !5341)
!5384 = distinct !DISubprogram(name: "usage_fault", scope: !5097, file: !5097, line: 539, type: !5385, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5389)
!5385 = !DISubroutineType(types: !5386)
!5386 = !{!121, !5387}
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5388, size: 32)
!5388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2487)
!5389 = !{!5390, !5391}
!5390 = !DILocalVariable(name: "esf", arg: 1, scope: !5384, file: !5097, line: 539, type: !5387)
!5391 = !DILocalVariable(name: "reason", scope: !5384, file: !5097, line: 541, type: !121)
!5392 = !DILocation(line: 0, scope: !5384)
!5393 = !DILocation(line: 546, column: 12, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5384, file: !5097, line: 546, column: 6)
!5395 = !DILocation(line: 549, column: 12, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5384, file: !5097, line: 549, column: 6)
!5397 = !DILocation(line: 567, column: 12, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5384, file: !5097, line: 567, column: 6)
!5399 = !DILocation(line: 570, column: 12, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5384, file: !5097, line: 570, column: 6)
!5401 = !DILocation(line: 573, column: 12, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5384, file: !5097, line: 573, column: 6)
!5403 = !DILocation(line: 576, column: 12, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5384, file: !5097, line: 576, column: 6)
!5405 = !DILocation(line: 581, column: 12, scope: !5384)
!5406 = !DILocation(line: 583, column: 2, scope: !5384)
!5407 = distinct !DISubprogram(name: "debug_monitor", scope: !5097, file: !5097, line: 632, type: !5408, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5410)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{null, !2486, !5164}
!5410 = !{!5411, !5412}
!5411 = !DILocalVariable(name: "esf", arg: 1, scope: !5407, file: !5097, line: 632, type: !2486)
!5412 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5407, file: !5097, line: 632, type: !5164)
!5413 = !DILocation(line: 0, scope: !5407)
!5414 = !DILocation(line: 634, column: 15, scope: !5407)
!5415 = !DILocation(line: 652, column: 1, scope: !5407)
!5416 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5097, file: !5097, line: 658, type: !5417, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5419)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{!157, !2486}
!5419 = !{!5420, !5421, !5422}
!5420 = !DILocalVariable(name: "esf", arg: 1, scope: !5416, file: !5097, line: 658, type: !2486)
!5421 = !DILocalVariable(name: "ret_addr", scope: !5416, file: !5097, line: 660, type: !2529)
!5422 = !DILocalVariable(name: "fault_insn", scope: !5416, file: !5097, line: 686, type: !265)
!5423 = !DILocation(line: 0, scope: !5416)
!5424 = !DILocation(line: 660, column: 46, scope: !5416)
!5425 = !DILocation(line: 660, column: 23, scope: !5416)
!5426 = !DILocation(line: 682, column: 11, scope: !5416)
!5427 = !DILocation(line: 271, column: 3, scope: !5428, inlinedAt: !5429)
!5428 = distinct !DISubprogram(name: "__DSB", scope: !4796, file: !4796, line: 269, type: !2821, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !322)
!5429 = distinct !DILocation(line: 683, column: 2, scope: !5416)
!5430 = !{i64 3734270}
!5431 = !DILocation(line: 260, column: 3, scope: !5432, inlinedAt: !5433)
!5432 = distinct !DISubprogram(name: "__ISB", scope: !4796, file: !4796, line: 258, type: !2821, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !322)
!5433 = distinct !DILocation(line: 684, column: 2, scope: !5416)
!5434 = !{i64 3733987}
!5435 = !DILocation(line: 686, column: 35, scope: !5416)
!5436 = !DILocation(line: 686, column: 24, scope: !5416)
!5437 = !DILocation(line: 688, column: 11, scope: !5416)
!5438 = !DILocation(line: 271, column: 3, scope: !5428, inlinedAt: !5439)
!5439 = distinct !DILocation(line: 689, column: 2, scope: !5416)
!5440 = !DILocation(line: 260, column: 3, scope: !5432, inlinedAt: !5441)
!5441 = distinct !DILocation(line: 690, column: 2, scope: !5416)
!5442 = !DILocation(line: 693, column: 45, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5416, file: !5097, line: 693, column: 6)
!5444 = !DILocation(line: 699, column: 1, scope: !5416)
!5445 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5097, file: !5097, line: 1107, type: !2821, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !322)
!5446 = !DILocation(line: 1111, column: 11, scope: !5445)
!5447 = !DILocation(line: 1136, column: 1, scope: !5445)
!5448 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5449, file: !5449, line: 26, type: !2821, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5450)
!5449 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5450 = !{!5451}
!5451 = !DILocalVariable(name: "irq", scope: !5448, file: !5449, line: 28, type: !103)
!5452 = !DILocation(line: 0, scope: !5448)
!5453 = !DILocation(line: 30, column: 2, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5448, file: !5449, line: 30, column: 2)
!5455 = !DILocation(line: 31, column: 3, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5457, file: !5449, line: 30, column: 39)
!5457 = distinct !DILexicalBlock(scope: !5454, file: !5449, line: 30, column: 2)
!5458 = !DILocation(line: 30, column: 35, scope: !5457)
!5459 = !DILocation(line: 30, column: 13, scope: !5457)
!5460 = distinct !{!5460, !5453, !5461}
!5461 = !DILocation(line: 32, column: 2, scope: !5454)
!5462 = !DILocation(line: 33, column: 1, scope: !5448)
!5463 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4830, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5464)
!5464 = !{!5465, !5466}
!5465 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5463, file: !356, line: 1814, type: !621)
!5466 = !DILocalVariable(name: "priority", arg: 2, scope: !5463, file: !356, line: 1814, type: !121)
!5467 = !DILocation(line: 0, scope: !5463)
!5468 = !DILocation(line: 1816, column: 7, scope: !5463)
!5469 = !DILocation(line: 0, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5463, file: !356, line: 1816, column: 7)
!5471 = !DILocation(line: 1824, column: 1, scope: !5463)
!5472 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5473, file: !5473, line: 27, type: !5474, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !5577)
!5473 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5474 = !DISubroutineType(types: !5475)
!5475 = !{null, !5476}
!5476 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !5477)
!5477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5478, size: 32)
!5478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !5479)
!5479 = !{!5480, !5538, !5550, !5551, !5552, !5553, !5559, !5572}
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5478, file: !211, line: 247, baseType: !5481, size: 384)
!5481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !5482)
!5482 = !{!5483, !5507, !5514, !5515, !5516, !5525, !5526, !5527}
!5483 = !DIDerivedType(tag: DW_TAG_member, scope: !5481, file: !211, line: 60, baseType: !5484, size: 64)
!5484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5481, file: !211, line: 60, size: 64, elements: !5485)
!5485 = !{!5486, !5501}
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5484, file: !211, line: 61, baseType: !5487, size: 64)
!5487 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !5488)
!5488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !5489)
!5489 = !{!5490, !5496}
!5490 = !DIDerivedType(tag: DW_TAG_member, scope: !5488, file: !221, line: 38, baseType: !5491, size: 32)
!5491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5488, file: !221, line: 38, size: 32, elements: !5492)
!5492 = !{!5493, !5495}
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5491, file: !221, line: 39, baseType: !5494, size: 32)
!5494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5488, size: 32)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5491, file: !221, line: 40, baseType: !5494, size: 32)
!5496 = !DIDerivedType(tag: DW_TAG_member, scope: !5488, file: !221, line: 42, baseType: !5497, size: 32, offset: 32)
!5497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5488, file: !221, line: 42, size: 32, elements: !5498)
!5498 = !{!5499, !5500}
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5497, file: !221, line: 43, baseType: !5494, size: 32)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5497, file: !221, line: 44, baseType: !5494, size: 32)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5484, file: !211, line: 62, baseType: !5502, size: 64)
!5502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !5503)
!5503 = !{!5504}
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5502, file: !237, line: 50, baseType: !5505, size: 64)
!5505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5506, size: 64, elements: !242)
!5506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5502, size: 32)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5481, file: !211, line: 68, baseType: !5508, size: 32, offset: 64)
!5508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5509, size: 32)
!5509 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !5510)
!5510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !5511)
!5511 = !{!5512}
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5510, file: !247, line: 232, baseType: !5513, size: 64)
!5513 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !5488)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5481, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5481, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!5516 = !DIDerivedType(tag: DW_TAG_member, scope: !5481, file: !211, line: 90, baseType: !5517, size: 16, offset: 112)
!5517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5481, file: !211, line: 90, size: 16, elements: !5518)
!5518 = !{!5519, !5524}
!5519 = !DIDerivedType(tag: DW_TAG_member, scope: !5517, file: !211, line: 91, baseType: !5520, size: 16)
!5520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5517, file: !211, line: 91, size: 16, elements: !5521)
!5521 = !{!5522, !5523}
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5520, file: !211, line: 96, baseType: !261, size: 8)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5520, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5517, file: !211, line: 100, baseType: !265, size: 16)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5481, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5481, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5481, file: !211, line: 131, baseType: !5528, size: 192, offset: 192)
!5528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !5529)
!5529 = !{!5530, !5531, !5537}
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5528, file: !247, line: 245, baseType: !5487, size: 64)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5528, file: !247, line: 246, baseType: !5532, size: 32, offset: 64)
!5532 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !5533)
!5533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5534, size: 32)
!5534 = !DISubroutineType(types: !5535)
!5535 = !{null, !5536}
!5536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5528, size: 32)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5528, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5478, file: !211, line: 250, baseType: !5539, size: 288, offset: 384)
!5539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5540)
!5540 = !{!5541, !5542, !5543, !5544, !5545, !5546, !5547, !5548, !5549}
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5539, file: !284, line: 26, baseType: !121, size: 32)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5539, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5539, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5539, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5539, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5539, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5539, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5539, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5539, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5478, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5478, file: !211, line: 256, baseType: !5509, size: 64, offset: 704)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5478, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5478, file: !211, line: 300, baseType: !5554, size: 96, offset: 800)
!5554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5555)
!5555 = !{!5556, !5557, !5558}
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5554, file: !211, line: 153, baseType: !22, size: 32)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5554, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5554, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5478, file: !211, line: 325, baseType: !5560, size: 32, offset: 896)
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 32)
!5561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5562)
!5562 = !{!5563, !5569, !5570}
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5561, file: !307, line: 5074, baseType: !5564, size: 96)
!5564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5565)
!5565 = !{!5566, !5567, !5568}
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5564, file: !311, line: 57, baseType: !314, size: 32)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5564, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5564, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5561, file: !307, line: 5075, baseType: !5509, size: 64, offset: 96)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5561, file: !307, line: 5076, baseType: !5571, offset: 160)
!5571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5478, file: !211, line: 343, baseType: !5573, size: 64, offset: 928)
!5573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5574)
!5574 = !{!5575, !5576}
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5573, file: !284, line: 63, baseType: !121, size: 32)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5573, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5577 = !{!5578}
!5578 = !DILocalVariable(name: "thread", arg: 1, scope: !5472, file: !5473, line: 27, type: !5476)
!5579 = !DILocation(line: 0, scope: !5472)
!5580 = !DILocation(line: 29, column: 6, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5472, file: !5473, line: 29, column: 6)
!5582 = !DILocation(line: 29, column: 15, scope: !5581)
!5583 = !DILocation(line: 29, column: 6, scope: !5472)
!5584 = !DILocation(line: 1031, column: 3, scope: !5585, inlinedAt: !5588)
!5585 = distinct !DISubprogram(name: "__get_IPSR", scope: !4796, file: !4796, line: 1027, type: !4877, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !5586)
!5586 = !{!5587}
!5587 = !DILocalVariable(name: "result", scope: !5585, file: !4796, line: 1029, type: !121)
!5588 = distinct !DILocation(line: 48, column: 10, scope: !5589, inlinedAt: !5593)
!5589 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5590, file: !5590, line: 46, type: !5591, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !322)
!5590 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5591 = !DISubroutineType(types: !5592)
!5592 = !{!157}
!5593 = distinct !DILocation(line: 30, column: 7, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !5473, line: 30, column: 7)
!5595 = distinct !DILexicalBlock(scope: !5581, file: !5473, line: 29, column: 26)
!5596 = !{i64 3723118}
!5597 = !DILocation(line: 0, scope: !5585, inlinedAt: !5588)
!5598 = !DILocation(line: 48, column: 9, scope: !5589, inlinedAt: !5593)
!5599 = !DILocation(line: 30, column: 7, scope: !5595)
!5600 = !DILocation(line: 42, column: 14, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5594, file: !5473, line: 30, column: 25)
!5602 = !DILocation(line: 48, column: 15, scope: !5601)
!5603 = !DILocation(line: 49, column: 3, scope: !5601)
!5604 = !DILocation(line: 52, column: 2, scope: !5472)
!5605 = !DILocation(line: 53, column: 1, scope: !5472)
!5606 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !206, file: !206, line: 127, type: !2821, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !322)
!5607 = !DILocation(line: 134, column: 2, scope: !5606)
!5608 = !DILocation(line: 156, column: 1, scope: !5606)
!5609 = !DILocation(line: 0, scope: !205)
!5610 = !DILocation(line: 289, column: 36, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !205, file: !206, line: 285, column: 2)
!5612 = !DILocation(line: 289, column: 42, scope: !5611)
!5613 = !DILocation(line: 300, column: 36, scope: !205)
!5614 = !DILocation(line: 301, column: 35, scope: !205)
!5615 = !DILocation(line: 302, column: 37, scope: !205)
!5616 = !DILocation(line: 311, column: 2, scope: !205)
!5617 = !DILocation(line: 316, column: 1, scope: !205)
!5618 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !384, file: !384, line: 180, type: !2821, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5619 = !DILocation(line: 188, column: 12, scope: !5618)
!5620 = !DILocation(line: 271, column: 3, scope: !5621, inlinedAt: !5622)
!5621 = distinct !DISubprogram(name: "__DSB", scope: !4796, file: !4796, line: 269, type: !2821, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5622 = distinct !DILocation(line: 192, column: 2, scope: !5618)
!5623 = !{i64 3911020}
!5624 = !DILocation(line: 260, column: 3, scope: !5625, inlinedAt: !5626)
!5625 = distinct !DISubprogram(name: "__ISB", scope: !4796, file: !4796, line: 258, type: !2821, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5626 = distinct !DILocation(line: 193, column: 2, scope: !5618)
!5627 = !{i64 3910737}
!5628 = !DILocation(line: 194, column: 1, scope: !5618)
!5629 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !384, file: !384, line: 199, type: !2821, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5630 = !DILocation(line: 282, column: 3, scope: !5631, inlinedAt: !5632)
!5631 = distinct !DISubprogram(name: "__DMB", scope: !4796, file: !4796, line: 280, type: !2821, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5632 = distinct !DILocation(line: 202, column: 2, scope: !5629)
!5633 = !{i64 3911296}
!5634 = !DILocation(line: 205, column: 12, scope: !5629)
!5635 = !DILocation(line: 206, column: 1, scope: !5629)
!5636 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !384, file: !384, line: 275, type: !5637, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5650)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{null, !5639, !1705, !5064, !5064}
!5639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5640, size: 32)
!5640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5641)
!5641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !5642)
!5642 = !{!5643, !5644, !5645}
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5641, file: !335, line: 53, baseType: !22, size: 32)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5641, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5641, file: !335, line: 55, baseType: !5646, size: 32, offset: 64)
!5646 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !5647)
!5647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !5648)
!5648 = !{!5649}
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !5647, file: !341, line: 150, baseType: !121, size: 32)
!5650 = !{!5651, !5652, !5653, !5654}
!5651 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5636, file: !384, line: 276, type: !5639)
!5652 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5636, file: !384, line: 276, type: !1705)
!5653 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !5636, file: !384, line: 277, type: !5064)
!5654 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5636, file: !384, line: 277, type: !5064)
!5655 = !DILocation(line: 0, scope: !5636)
!5656 = !DILocation(line: 279, column: 6, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5636, file: !384, line: 279, column: 6)
!5658 = !DILocation(line: 285, column: 1, scope: !5636)
!5659 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !5660, file: !5660, line: 220, type: !5661, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5663)
!5660 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5661 = !DISubroutineType(types: !5662)
!5662 = !{!103, !5639, !1705, !5064, !5064}
!5663 = !{!5664, !5665, !5666, !5667, !5668}
!5664 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5659, file: !5660, line: 221, type: !5639)
!5665 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5659, file: !5660, line: 221, type: !1705)
!5666 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !5659, file: !5660, line: 222, type: !5064)
!5667 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5659, file: !5660, line: 223, type: !5064)
!5668 = !DILocalVariable(name: "mpu_reg_index", scope: !5659, file: !5660, line: 225, type: !103)
!5669 = !DILocation(line: 0, scope: !5659)
!5670 = !DILocation(line: 225, column: 22, scope: !5659)
!5671 = !DILocation(line: 233, column: 18, scope: !5659)
!5672 = !DILocation(line: 236, column: 23, scope: !5659)
!5673 = !DILocation(line: 236, column: 21, scope: !5659)
!5674 = !DILocation(line: 238, column: 2, scope: !5659)
!5675 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !384, file: !384, line: 105, type: !5676, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5678)
!5676 = !DISubroutineType(types: !5677)
!5677 = !{!103, !5639, !154, !154, !157}
!5678 = !{!5679, !5680, !5681, !5682, !5683, !5684}
!5679 = !DILocalVariable(name: "regions", arg: 1, scope: !5675, file: !384, line: 106, type: !5639)
!5680 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5675, file: !384, line: 106, type: !154)
!5681 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !5675, file: !384, line: 106, type: !154)
!5682 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !5675, file: !384, line: 107, type: !157)
!5683 = !DILocalVariable(name: "i", scope: !5675, file: !384, line: 109, type: !103)
!5684 = !DILocalVariable(name: "reg_index", scope: !5675, file: !384, line: 110, type: !103)
!5685 = !DILocation(line: 0, scope: !5675)
!5686 = !DILocation(line: 110, column: 18, scope: !5675)
!5687 = !DILocation(line: 112, column: 16, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5689, file: !384, line: 112, column: 2)
!5689 = distinct !DILexicalBlock(scope: !5675, file: !384, line: 112, column: 2)
!5690 = !DILocation(line: 112, column: 2, scope: !5689)
!5691 = !DILocation(line: 113, column: 7, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5693, file: !384, line: 113, column: 7)
!5693 = distinct !DILexicalBlock(scope: !5688, file: !384, line: 112, column: 36)
!5694 = !DILocation(line: 113, column: 18, scope: !5692)
!5695 = !DILocation(line: 113, column: 23, scope: !5692)
!5696 = !DILocation(line: 113, column: 7, scope: !5693)
!5697 = !DILocation(line: 118, column: 23, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5693, file: !384, line: 118, column: 7)
!5699 = !DILocation(line: 119, column: 7, scope: !5698)
!5700 = !DILocation(line: 118, column: 7, scope: !5693)
!5701 = !DILocation(line: 124, column: 36, scope: !5693)
!5702 = !DILocation(line: 124, column: 15, scope: !5693)
!5703 = !DILocation(line: 126, column: 17, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5693, file: !384, line: 126, column: 7)
!5705 = !DILocation(line: 126, column: 7, scope: !5693)
!5706 = !DILocation(line: 131, column: 12, scope: !5693)
!5707 = !DILocation(line: 132, column: 2, scope: !5693)
!5708 = !DILocation(line: 112, column: 32, scope: !5688)
!5709 = distinct !{!5709, !5690, !5710}
!5710 = !DILocation(line: 132, column: 2, scope: !5689)
!5711 = !DILocation(line: 135, column: 1, scope: !5675)
!5712 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !5660, file: !5660, line: 63, type: !5713, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5715)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!103, !5639}
!5715 = !{!5716, !5717}
!5716 = !DILocalVariable(name: "part", arg: 1, scope: !5712, file: !5660, line: 63, type: !5639)
!5717 = !DILocalVariable(name: "partition_is_valid", scope: !5712, file: !5660, line: 70, type: !103)
!5718 = !DILocation(line: 0, scope: !5712)
!5719 = !DILocation(line: 71, column: 11, scope: !5712)
!5720 = !DILocation(line: 71, column: 37, scope: !5712)
!5721 = !{i32 0, i32 33}
!5722 = !DILocation(line: 72, column: 3, scope: !5712)
!5723 = !DILocation(line: 71, column: 30, scope: !5712)
!5724 = !DILocation(line: 75, column: 11, scope: !5712)
!5725 = !DILocation(line: 75, column: 17, scope: !5712)
!5726 = !DILocation(line: 75, column: 38, scope: !5712)
!5727 = !DILocation(line: 77, column: 2, scope: !5712)
!5728 = distinct !DISubprogram(name: "mpu_configure_region", scope: !384, file: !384, line: 79, type: !5729, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5731)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{!103, !1705, !5639}
!5731 = !{!5732, !5733, !5734}
!5732 = !DILocalVariable(name: "index", arg: 1, scope: !5728, file: !384, line: 79, type: !1705)
!5733 = !DILocalVariable(name: "new_region", arg: 2, scope: !5728, file: !384, line: 80, type: !5639)
!5734 = !DILocalVariable(name: "region_conf", scope: !5728, file: !384, line: 82, type: !373)
!5735 = !DILocation(line: 0, scope: !5728)
!5736 = !DILocation(line: 82, column: 2, scope: !5728)
!5737 = !DILocation(line: 82, column: 24, scope: !5728)
!5738 = !DILocation(line: 87, column: 33, scope: !5728)
!5739 = !DILocation(line: 87, column: 14, scope: !5728)
!5740 = !DILocation(line: 87, column: 19, scope: !5728)
!5741 = !DILocation(line: 91, column: 55, scope: !5728)
!5742 = !DILocation(line: 92, column: 16, scope: !5728)
!5743 = !DILocation(line: 92, column: 53, scope: !5728)
!5744 = !DILocation(line: 91, column: 2, scope: !5728)
!5745 = !DILocation(line: 95, column: 9, scope: !5728)
!5746 = !DILocation(line: 97, column: 1, scope: !5728)
!5747 = !DILocation(line: 95, column: 2, scope: !5728)
!5748 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !5660, file: !5660, line: 113, type: !5749, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5754)
!5749 = !DISubroutineType(types: !5750)
!5750 = !{null, !5751, !5752, !121, !121}
!5751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!5752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5753, size: 32)
!5753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5646)
!5754 = !{!5755, !5756, !5757, !5758}
!5755 = !DILocalVariable(name: "p_attr", arg: 1, scope: !5748, file: !5660, line: 114, type: !5751)
!5756 = !DILocalVariable(name: "attr", arg: 2, scope: !5748, file: !5660, line: 115, type: !5752)
!5757 = !DILocalVariable(name: "base", arg: 3, scope: !5748, file: !5660, line: 115, type: !121)
!5758 = !DILocalVariable(name: "size", arg: 4, scope: !5748, file: !5660, line: 115, type: !121)
!5759 = !DILocation(line: 0, scope: !5748)
!5760 = !DILocation(line: 127, column: 23, scope: !5748)
!5761 = !DILocation(line: 127, column: 35, scope: !5748)
!5762 = !DILocation(line: 127, column: 33, scope: !5748)
!5763 = !DILocation(line: 127, column: 10, scope: !5748)
!5764 = !DILocation(line: 127, column: 15, scope: !5748)
!5765 = !DILocation(line: 129, column: 1, scope: !5748)
!5766 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !384, file: !384, line: 57, type: !5767, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5769)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!103, !1705, !371}
!5769 = !{!5770, !5771}
!5770 = !DILocalVariable(name: "index", arg: 1, scope: !5766, file: !384, line: 57, type: !1705)
!5771 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5766, file: !384, line: 58, type: !371)
!5772 = !DILocation(line: 0, scope: !5766)
!5773 = !DILocation(line: 61, column: 6, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5766, file: !384, line: 61, column: 6)
!5775 = !DILocation(line: 61, column: 12, scope: !5774)
!5776 = !DILocation(line: 61, column: 6, scope: !5766)
!5777 = !DILocation(line: 71, column: 2, scope: !5766)
!5778 = !DILocation(line: 73, column: 2, scope: !5766)
!5779 = !DILocation(line: 74, column: 1, scope: !5766)
!5780 = distinct !DISubprogram(name: "region_init", scope: !5660, file: !5660, line: 29, type: !5781, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5783)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{null, !5064, !371}
!5783 = !{!5784, !5785}
!5784 = !DILocalVariable(name: "index", arg: 1, scope: !5780, file: !5660, line: 29, type: !5064)
!5785 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5780, file: !5660, line: 30, type: !371)
!5786 = !DILocation(line: 0, scope: !5780)
!5787 = !DILocation(line: 33, column: 2, scope: !5780)
!5788 = !DILocation(line: 47, column: 28, scope: !5780)
!5789 = !DILocation(line: 47, column: 33, scope: !5780)
!5790 = !DILocation(line: 48, column: 26, scope: !5780)
!5791 = !DILocation(line: 47, column: 12, scope: !5780)
!5792 = !DILocation(line: 49, column: 32, scope: !5780)
!5793 = !DILocation(line: 49, column: 37, scope: !5780)
!5794 = !DILocation(line: 49, column: 12, scope: !5780)
!5795 = !DILocation(line: 53, column: 1, scope: !5780)
!5796 = distinct !DISubprogram(name: "set_region_number", scope: !5797, file: !5797, line: 32, type: !4887, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5798)
!5797 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5798 = !{!5799}
!5799 = !DILocalVariable(name: "index", arg: 1, scope: !5796, file: !5797, line: 32, type: !121)
!5800 = !DILocation(line: 0, scope: !5796)
!5801 = !DILocation(line: 34, column: 11, scope: !5796)
!5802 = !DILocation(line: 35, column: 1, scope: !5796)
!5803 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !5660, file: !5660, line: 88, type: !5804, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5806)
!5804 = !DISubroutineType(types: !5805)
!5805 = !{!121, !121}
!5806 = !{!5807}
!5807 = !DILocalVariable(name: "size", arg: 1, scope: !5803, file: !5660, line: 88, type: !121)
!5808 = !DILocation(line: 0, scope: !5803)
!5809 = !DILocation(line: 91, column: 11, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5803, file: !5660, line: 91, column: 6)
!5811 = !DILocation(line: 91, column: 6, scope: !5803)
!5812 = !DILocation(line: 100, column: 11, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5803, file: !5660, line: 100, column: 6)
!5814 = !DILocation(line: 100, column: 6, scope: !5803)
!5815 = !DILocation(line: 104, column: 35, scope: !5803)
!5816 = !DILocation(line: 104, column: 16, scope: !5803)
!5817 = !DILocation(line: 104, column: 50, scope: !5803)
!5818 = !DILocation(line: 104, column: 72, scope: !5803)
!5819 = !DILocation(line: 104, column: 2, scope: !5803)
!5820 = !DILocation(line: 106, column: 1, scope: !5803)
!5821 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !384, file: !384, line: 307, type: !5822, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5824)
!5822 = !DISubroutineType(types: !5823)
!5823 = !{null, !5639, !154}
!5824 = !{!5825, !5826}
!5825 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5821, file: !384, line: 308, type: !5639)
!5826 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5821, file: !384, line: 308, type: !154)
!5827 = !DILocation(line: 0, scope: !5821)
!5828 = !DILocation(line: 310, column: 6, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5821, file: !384, line: 310, column: 6)
!5830 = !DILocation(line: 316, column: 1, scope: !5821)
!5831 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !5660, file: !5660, line: 249, type: !5832, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5834)
!5832 = !DISubroutineType(types: !5833)
!5833 = !{!103, !5639, !154}
!5834 = !{!5835, !5836, !5837, !5838}
!5835 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5831, file: !5660, line: 250, type: !5639)
!5836 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5831, file: !5660, line: 250, type: !154)
!5837 = !DILocalVariable(name: "mpu_reg_index", scope: !5831, file: !5660, line: 252, type: !103)
!5838 = !DILocalVariable(name: "i", scope: !5839, file: !5660, line: 264, type: !103)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !5660, line: 264, column: 3)
!5840 = distinct !DILexicalBlock(scope: !5841, file: !5660, line: 261, column: 32)
!5841 = distinct !DILexicalBlock(scope: !5831, file: !5660, line: 261, column: 6)
!5842 = !DILocation(line: 0, scope: !5831)
!5843 = !DILocation(line: 252, column: 22, scope: !5831)
!5844 = !DILocation(line: 258, column: 18, scope: !5831)
!5845 = !DILocation(line: 261, column: 20, scope: !5841)
!5846 = !DILocation(line: 261, column: 6, scope: !5831)
!5847 = !DILocation(line: 0, scope: !5839)
!5848 = !DILocation(line: 265, column: 4, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5850, file: !5660, line: 264, column: 59)
!5850 = distinct !DILexicalBlock(scope: !5839, file: !5660, line: 264, column: 3)
!5851 = !DILocation(line: 264, column: 55, scope: !5850)
!5852 = !DILocation(line: 264, column: 33, scope: !5850)
!5853 = !DILocation(line: 264, column: 3, scope: !5839)
!5854 = distinct !{!5854, !5853, !5855}
!5855 = !DILocation(line: 266, column: 3, scope: !5839)
!5856 = !DILocation(line: 269, column: 2, scope: !5831)
!5857 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !5858, file: !5858, line: 218, type: !4887, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5859)
!5858 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5859 = !{!5860}
!5860 = !DILocalVariable(name: "rnr", arg: 1, scope: !5857, file: !5858, line: 218, type: !121)
!5861 = !DILocation(line: 0, scope: !5857)
!5862 = !DILocation(line: 220, column: 12, scope: !5857)
!5863 = !DILocation(line: 221, column: 13, scope: !5857)
!5864 = !DILocation(line: 222, column: 1, scope: !5857)
!5865 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !384, file: !384, line: 326, type: !5866, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5868)
!5866 = !DISubroutineType(types: !5867)
!5867 = !{!103}
!5868 = !{!5869}
!5869 = !DILocalVariable(name: "r_index", scope: !5865, file: !384, line: 328, type: !121)
!5870 = !DILocation(line: 330, column: 17, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5865, file: !384, line: 330, column: 6)
!5872 = !DILocation(line: 330, column: 29, scope: !5871)
!5873 = !DILocation(line: 330, column: 6, scope: !5865)
!5874 = !DILocation(line: 347, column: 2, scope: !5865)
!5875 = !DILocation(line: 0, scope: !5865)
!5876 = !DILocation(line: 364, column: 29, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !384, line: 364, column: 2)
!5878 = distinct !DILexicalBlock(scope: !5865, file: !384, line: 364, column: 2)
!5879 = !DILocation(line: 364, column: 2, scope: !5878)
!5880 = !DILocation(line: 365, column: 25, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5877, file: !384, line: 364, column: 66)
!5882 = !DILocation(line: 365, column: 3, scope: !5881)
!5883 = !DILocation(line: 364, column: 62, scope: !5877)
!5884 = distinct !{!5884, !5879, !5885}
!5885 = !DILocation(line: 366, column: 2, scope: !5878)
!5886 = !DILocation(line: 369, column: 23, scope: !5865)
!5887 = !DILocation(line: 369, column: 21, scope: !5865)
!5888 = !DILocation(line: 372, column: 2, scope: !5865)
!5889 = !DILocation(line: 443, column: 2, scope: !5865)
!5890 = !DILocation(line: 444, column: 1, scope: !5865)
!5891 = distinct !DISubprogram(name: "strcpy", scope: !5892, file: !5892, line: 20, type: !5893, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5897)
!5892 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5893 = !DISubroutineType(types: !5894)
!5894 = !{!995, !5895, !5896}
!5895 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !995)
!5896 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!5897 = !{!5898, !5899, !5900}
!5898 = !DILocalVariable(name: "d", arg: 1, scope: !5891, file: !5892, line: 20, type: !5895)
!5899 = !DILocalVariable(name: "s", arg: 2, scope: !5891, file: !5892, line: 20, type: !5896)
!5900 = !DILocalVariable(name: "dest", scope: !5891, file: !5892, line: 22, type: !995)
!5901 = !DILocation(line: 0, scope: !5891)
!5902 = !DILocation(line: 24, column: 9, scope: !5891)
!5903 = !DILocation(line: 24, column: 12, scope: !5891)
!5904 = !DILocation(line: 24, column: 2, scope: !5891)
!5905 = !DILocation(line: 25, column: 6, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5891, file: !5892, line: 24, column: 21)
!5907 = !DILocation(line: 26, column: 4, scope: !5906)
!5908 = !DILocation(line: 27, column: 4, scope: !5906)
!5909 = distinct !{!5909, !5904, !5910}
!5910 = !DILocation(line: 28, column: 2, scope: !5891)
!5911 = !DILocation(line: 30, column: 5, scope: !5891)
!5912 = !DILocation(line: 32, column: 2, scope: !5891)
!5913 = distinct !DISubprogram(name: "strncpy", scope: !5892, file: !5892, line: 42, type: !5914, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5916)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!995, !5895, !5896, !200}
!5916 = !{!5917, !5918, !5919, !5920}
!5917 = !DILocalVariable(name: "d", arg: 1, scope: !5913, file: !5892, line: 42, type: !5895)
!5918 = !DILocalVariable(name: "s", arg: 2, scope: !5913, file: !5892, line: 42, type: !5896)
!5919 = !DILocalVariable(name: "n", arg: 3, scope: !5913, file: !5892, line: 42, type: !200)
!5920 = !DILocalVariable(name: "dest", scope: !5913, file: !5892, line: 44, type: !995)
!5921 = !DILocation(line: 0, scope: !5913)
!5922 = !DILocation(line: 46, column: 12, scope: !5913)
!5923 = !DILocation(line: 46, column: 17, scope: !5913)
!5924 = !DILocation(line: 46, column: 20, scope: !5913)
!5925 = !DILocation(line: 46, column: 23, scope: !5913)
!5926 = !DILocation(line: 46, column: 2, scope: !5913)
!5927 = !DILocation(line: 47, column: 6, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5913, file: !5892, line: 46, column: 32)
!5929 = !DILocation(line: 48, column: 4, scope: !5928)
!5930 = !DILocation(line: 49, column: 4, scope: !5928)
!5931 = !DILocation(line: 50, column: 4, scope: !5928)
!5932 = distinct !{!5932, !5926, !5933}
!5933 = !DILocation(line: 51, column: 2, scope: !5913)
!5934 = !DILocation(line: 54, column: 6, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5913, file: !5892, line: 53, column: 16)
!5936 = !DILocation(line: 55, column: 4, scope: !5935)
!5937 = !DILocation(line: 56, column: 4, scope: !5935)
!5938 = !DILocation(line: 53, column: 11, scope: !5913)
!5939 = !DILocation(line: 53, column: 2, scope: !5913)
!5940 = distinct !{!5940, !5939, !5941}
!5941 = !DILocation(line: 57, column: 2, scope: !5913)
!5942 = !DILocation(line: 59, column: 2, scope: !5913)
!5943 = distinct !DISubprogram(name: "strchr", scope: !5892, file: !5892, line: 69, type: !5944, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5946)
!5944 = !DISubroutineType(types: !5945)
!5945 = !{!995, !144, !103}
!5946 = !{!5947, !5948, !5949}
!5947 = !DILocalVariable(name: "s", arg: 1, scope: !5943, file: !5892, line: 69, type: !144)
!5948 = !DILocalVariable(name: "c", arg: 2, scope: !5943, file: !5892, line: 69, type: !103)
!5949 = !DILocalVariable(name: "tmp", scope: !5943, file: !5892, line: 71, type: !146)
!5950 = !DILocation(line: 0, scope: !5943)
!5951 = !DILocation(line: 73, column: 2, scope: !5943)
!5952 = !DILocation(line: 73, column: 10, scope: !5943)
!5953 = !DILocation(line: 73, column: 13, scope: !5943)
!5954 = !DILocation(line: 73, column: 21, scope: !5943)
!5955 = !DILocation(line: 74, column: 4, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5943, file: !5892, line: 73, column: 38)
!5957 = distinct !{!5957, !5951, !5958}
!5958 = !DILocation(line: 75, column: 2, scope: !5943)
!5959 = !DILocation(line: 77, column: 9, scope: !5943)
!5960 = !DILocation(line: 77, column: 2, scope: !5943)
!5961 = distinct !DISubprogram(name: "strrchr", scope: !5892, file: !5892, line: 87, type: !5944, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5962)
!5962 = !{!5963, !5964, !5965}
!5963 = !DILocalVariable(name: "s", arg: 1, scope: !5961, file: !5892, line: 87, type: !144)
!5964 = !DILocalVariable(name: "c", arg: 2, scope: !5961, file: !5892, line: 87, type: !103)
!5965 = !DILocalVariable(name: "match", scope: !5961, file: !5892, line: 89, type: !995)
!5966 = !DILocation(line: 0, scope: !5961)
!5967 = !DILocation(line: 91, column: 2, scope: !5961)
!5968 = !DILocation(line: 92, column: 7, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5970, file: !5892, line: 92, column: 7)
!5970 = distinct !DILexicalBlock(scope: !5961, file: !5892, line: 91, column: 5)
!5971 = !DILocation(line: 92, column: 10, scope: !5969)
!5972 = !DILocation(line: 92, column: 7, scope: !5970)
!5973 = !DILocation(line: 95, column: 13, scope: !5961)
!5974 = !DILocation(line: 95, column: 2, scope: !5970)
!5975 = distinct !{!5975, !5967, !5976}
!5976 = !DILocation(line: 95, column: 15, scope: !5961)
!5977 = !DILocation(line: 97, column: 2, scope: !5961)
!5978 = distinct !DISubprogram(name: "strlen", scope: !5892, file: !5892, line: 107, type: !5979, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5981)
!5979 = !DISubroutineType(types: !5980)
!5980 = !{!200, !144}
!5981 = !{!5982, !5983}
!5982 = !DILocalVariable(name: "s", arg: 1, scope: !5978, file: !5892, line: 107, type: !144)
!5983 = !DILocalVariable(name: "n", scope: !5978, file: !5892, line: 109, type: !200)
!5984 = !DILocation(line: 0, scope: !5978)
!5985 = !DILocation(line: 111, column: 9, scope: !5978)
!5986 = !DILocation(line: 111, column: 12, scope: !5978)
!5987 = !DILocation(line: 111, column: 2, scope: !5978)
!5988 = !DILocation(line: 112, column: 4, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5978, file: !5892, line: 111, column: 21)
!5990 = !DILocation(line: 113, column: 4, scope: !5989)
!5991 = distinct !{!5991, !5987, !5992}
!5992 = !DILocation(line: 114, column: 2, scope: !5978)
!5993 = !DILocation(line: 116, column: 2, scope: !5978)
!5994 = distinct !DISubprogram(name: "strnlen", scope: !5892, file: !5892, line: 126, type: !5995, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5997)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{!200, !144, !200}
!5997 = !{!5998, !5999, !6000}
!5998 = !DILocalVariable(name: "s", arg: 1, scope: !5994, file: !5892, line: 126, type: !144)
!5999 = !DILocalVariable(name: "maxlen", arg: 2, scope: !5994, file: !5892, line: 126, type: !200)
!6000 = !DILocalVariable(name: "n", scope: !5994, file: !5892, line: 128, type: !200)
!6001 = !DILocation(line: 0, scope: !5994)
!6002 = !DILocation(line: 130, column: 9, scope: !5994)
!6003 = !DILocation(line: 130, column: 12, scope: !5994)
!6004 = !DILocation(line: 130, column: 20, scope: !5994)
!6005 = !DILocation(line: 130, column: 2, scope: !5994)
!6006 = !DILocation(line: 131, column: 4, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5994, file: !5892, line: 130, column: 35)
!6008 = !DILocation(line: 132, column: 4, scope: !6007)
!6009 = distinct !{!6009, !6005, !6010}
!6010 = !DILocation(line: 133, column: 2, scope: !5994)
!6011 = !DILocation(line: 135, column: 2, scope: !5994)
!6012 = distinct !DISubprogram(name: "strcmp", scope: !5892, file: !5892, line: 145, type: !6013, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6015)
!6013 = !DISubroutineType(types: !6014)
!6014 = !{!103, !144, !144}
!6015 = !{!6016, !6017}
!6016 = !DILocalVariable(name: "s1", arg: 1, scope: !6012, file: !5892, line: 145, type: !144)
!6017 = !DILocalVariable(name: "s2", arg: 2, scope: !6012, file: !5892, line: 145, type: !144)
!6018 = !DILocation(line: 0, scope: !6012)
!6019 = !DILocation(line: 147, column: 10, scope: !6012)
!6020 = !DILocation(line: 147, column: 17, scope: !6012)
!6021 = !DILocation(line: 147, column: 14, scope: !6012)
!6022 = !DILocation(line: 147, column: 22, scope: !6012)
!6023 = !DILocation(line: 148, column: 5, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6012, file: !5892, line: 147, column: 40)
!6025 = !DILocation(line: 149, column: 5, scope: !6024)
!6026 = distinct !{!6026, !6027, !6028}
!6027 = !DILocation(line: 147, column: 2, scope: !6012)
!6028 = !DILocation(line: 150, column: 2, scope: !6012)
!6029 = !DILocation(line: 152, column: 9, scope: !6012)
!6030 = !DILocation(line: 152, column: 15, scope: !6012)
!6031 = !DILocation(line: 152, column: 13, scope: !6012)
!6032 = !DILocation(line: 152, column: 2, scope: !6012)
!6033 = distinct !DISubprogram(name: "strncmp", scope: !5892, file: !5892, line: 162, type: !6034, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6036)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!103, !144, !144, !200}
!6036 = !{!6037, !6038, !6039}
!6037 = !DILocalVariable(name: "s1", arg: 1, scope: !6033, file: !5892, line: 162, type: !144)
!6038 = !DILocalVariable(name: "s2", arg: 2, scope: !6033, file: !5892, line: 162, type: !144)
!6039 = !DILocalVariable(name: "n", arg: 3, scope: !6033, file: !5892, line: 162, type: !200)
!6040 = !DILocation(line: 0, scope: !6033)
!6041 = !DILocation(line: 164, column: 17, scope: !6033)
!6042 = !DILocation(line: 164, column: 21, scope: !6033)
!6043 = !DILocation(line: 164, column: 28, scope: !6033)
!6044 = !DILocation(line: 164, column: 25, scope: !6033)
!6045 = !DILocation(line: 164, column: 33, scope: !6033)
!6046 = !DILocation(line: 165, column: 5, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6033, file: !5892, line: 164, column: 51)
!6048 = !DILocation(line: 166, column: 5, scope: !6047)
!6049 = !DILocation(line: 167, column: 4, scope: !6047)
!6050 = distinct !{!6050, !6051, !6052}
!6051 = !DILocation(line: 164, column: 2, scope: !6033)
!6052 = !DILocation(line: 168, column: 2, scope: !6033)
!6053 = !DILocation(line: 170, column: 25, scope: !6033)
!6054 = !DILocation(line: 170, column: 31, scope: !6033)
!6055 = !DILocation(line: 170, column: 29, scope: !6033)
!6056 = !DILocation(line: 170, column: 9, scope: !6033)
!6057 = !DILocation(line: 170, column: 2, scope: !6033)
!6058 = distinct !DISubprogram(name: "strtok_r", scope: !5892, file: !5892, line: 180, type: !6059, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6062)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{!995, !995, !144, !6061}
!6061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!6062 = !{!6063, !6064, !6065, !6066, !6067}
!6063 = !DILocalVariable(name: "str", arg: 1, scope: !6058, file: !5892, line: 180, type: !995)
!6064 = !DILocalVariable(name: "sep", arg: 2, scope: !6058, file: !5892, line: 180, type: !144)
!6065 = !DILocalVariable(name: "state", arg: 3, scope: !6058, file: !5892, line: 180, type: !6061)
!6066 = !DILocalVariable(name: "start", scope: !6058, file: !5892, line: 182, type: !995)
!6067 = !DILocalVariable(name: "end", scope: !6058, file: !5892, line: 182, type: !995)
!6068 = !DILocation(line: 0, scope: !6058)
!6069 = !DILocation(line: 184, column: 10, scope: !6058)
!6070 = !DILocation(line: 184, column: 22, scope: !6058)
!6071 = !DILocation(line: 187, column: 9, scope: !6058)
!6072 = !DILocation(line: 187, column: 16, scope: !6058)
!6073 = !DILocation(line: 187, column: 19, scope: !6058)
!6074 = !DILocation(line: 187, column: 2, scope: !6058)
!6075 = !DILocation(line: 188, column: 8, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6058, file: !5892, line: 187, column: 40)
!6077 = distinct !{!6077, !6074, !6078}
!6078 = !DILocation(line: 189, column: 2, scope: !6058)
!6079 = !DILocation(line: 198, column: 9, scope: !6058)
!6080 = !DILocation(line: 198, column: 18, scope: !6058)
!6081 = !DILocation(line: 198, column: 17, scope: !6058)
!6082 = !DILocation(line: 198, column: 2, scope: !6058)
!6083 = !DILocation(line: 199, column: 6, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6058, file: !5892, line: 198, column: 37)
!6085 = !DILocation(line: 198, column: 14, scope: !6058)
!6086 = distinct !{!6086, !6082, !6087}
!6087 = !DILocation(line: 200, column: 2, scope: !6058)
!6088 = !DILocation(line: 203, column: 8, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !5892, line: 202, column: 20)
!6090 = distinct !DILexicalBlock(scope: !6058, file: !5892, line: 202, column: 6)
!6091 = !DILocation(line: 204, column: 16, scope: !6089)
!6092 = !DILocation(line: 205, column: 2, scope: !6089)
!6093 = !DILocation(line: 210, column: 1, scope: !6058)
!6094 = distinct !DISubprogram(name: "strcat", scope: !5892, file: !5892, line: 212, type: !5893, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6095)
!6095 = !{!6096, !6097}
!6096 = !DILocalVariable(name: "dest", arg: 1, scope: !6094, file: !5892, line: 212, type: !5895)
!6097 = !DILocalVariable(name: "src", arg: 2, scope: !6094, file: !5892, line: 212, type: !5896)
!6098 = !DILocation(line: 0, scope: !6094)
!6099 = !DILocation(line: 214, column: 16, scope: !6094)
!6100 = !DILocation(line: 214, column: 14, scope: !6094)
!6101 = !DILocation(line: 214, column: 2, scope: !6094)
!6102 = !DILocation(line: 215, column: 2, scope: !6094)
!6103 = distinct !DISubprogram(name: "strncat", scope: !5892, file: !5892, line: 218, type: !5914, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6104)
!6104 = !{!6105, !6106, !6107, !6108, !6109}
!6105 = !DILocalVariable(name: "dest", arg: 1, scope: !6103, file: !5892, line: 218, type: !5895)
!6106 = !DILocalVariable(name: "src", arg: 2, scope: !6103, file: !5892, line: 218, type: !5896)
!6107 = !DILocalVariable(name: "n", arg: 3, scope: !6103, file: !5892, line: 219, type: !200)
!6108 = !DILocalVariable(name: "orig_dest", scope: !6103, file: !5892, line: 221, type: !995)
!6109 = !DILocalVariable(name: "len", scope: !6103, file: !5892, line: 222, type: !200)
!6110 = !DILocation(line: 0, scope: !6103)
!6111 = !DILocation(line: 222, column: 15, scope: !6103)
!6112 = !DILocation(line: 224, column: 7, scope: !6103)
!6113 = !DILocation(line: 225, column: 14, scope: !6103)
!6114 = !DILocation(line: 225, column: 19, scope: !6103)
!6115 = !DILocation(line: 225, column: 11, scope: !6103)
!6116 = !DILocation(line: 225, column: 23, scope: !6103)
!6117 = !DILocation(line: 225, column: 28, scope: !6103)
!6118 = !DILocation(line: 225, column: 2, scope: !6103)
!6119 = !DILocation(line: 226, column: 17, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6103, file: !5892, line: 225, column: 38)
!6121 = !DILocation(line: 226, column: 8, scope: !6120)
!6122 = !DILocation(line: 226, column: 11, scope: !6120)
!6123 = distinct !{!6123, !6118, !6124}
!6124 = !DILocation(line: 227, column: 2, scope: !6103)
!6125 = !DILocation(line: 228, column: 8, scope: !6103)
!6126 = !DILocation(line: 230, column: 2, scope: !6103)
!6127 = distinct !DISubprogram(name: "memcmp", scope: !5892, file: !5892, line: 239, type: !6128, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6130)
!6128 = !DISubroutineType(types: !6129)
!6129 = !{!103, !13, !13, !200}
!6130 = !{!6131, !6132, !6133, !6134, !6135}
!6131 = !DILocalVariable(name: "m1", arg: 1, scope: !6127, file: !5892, line: 239, type: !13)
!6132 = !DILocalVariable(name: "m2", arg: 2, scope: !6127, file: !5892, line: 239, type: !13)
!6133 = !DILocalVariable(name: "n", arg: 3, scope: !6127, file: !5892, line: 239, type: !200)
!6134 = !DILocalVariable(name: "c1", scope: !6127, file: !5892, line: 241, type: !144)
!6135 = !DILocalVariable(name: "c2", scope: !6127, file: !5892, line: 242, type: !144)
!6136 = !DILocation(line: 0, scope: !6127)
!6137 = !DILocation(line: 244, column: 7, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6127, file: !5892, line: 244, column: 6)
!6139 = !DILocation(line: 244, column: 6, scope: !6127)
!6140 = !DILocation(line: 248, column: 10, scope: !6127)
!6141 = !DILocation(line: 248, column: 14, scope: !6127)
!6142 = !DILocation(line: 248, column: 19, scope: !6127)
!6143 = !DILocation(line: 248, column: 2, scope: !6127)
!6144 = !DILocation(line: 248, column: 23, scope: !6127)
!6145 = !DILocation(line: 248, column: 30, scope: !6127)
!6146 = !DILocation(line: 248, column: 27, scope: !6127)
!6147 = !DILocation(line: 249, column: 5, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6127, file: !5892, line: 248, column: 36)
!6149 = !DILocation(line: 250, column: 5, scope: !6148)
!6150 = distinct !{!6150, !6143, !6151}
!6151 = !DILocation(line: 251, column: 2, scope: !6127)
!6152 = !DILocation(line: 253, column: 9, scope: !6127)
!6153 = !DILocation(line: 253, column: 15, scope: !6127)
!6154 = !DILocation(line: 253, column: 13, scope: !6127)
!6155 = !DILocation(line: 253, column: 2, scope: !6127)
!6156 = !DILocation(line: 254, column: 1, scope: !6127)
!6157 = distinct !DISubprogram(name: "memmove", scope: !5892, file: !5892, line: 263, type: !6158, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6160)
!6158 = !DISubroutineType(types: !6159)
!6159 = !{!102, !102, !13, !200}
!6160 = !{!6161, !6162, !6163, !6164, !6165}
!6161 = !DILocalVariable(name: "d", arg: 1, scope: !6157, file: !5892, line: 263, type: !102)
!6162 = !DILocalVariable(name: "s", arg: 2, scope: !6157, file: !5892, line: 263, type: !13)
!6163 = !DILocalVariable(name: "n", arg: 3, scope: !6157, file: !5892, line: 263, type: !200)
!6164 = !DILocalVariable(name: "dest", scope: !6157, file: !5892, line: 265, type: !995)
!6165 = !DILocalVariable(name: "src", scope: !6157, file: !5892, line: 266, type: !144)
!6166 = !DILocation(line: 0, scope: !6157)
!6167 = !DILocation(line: 268, column: 21, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6157, file: !5892, line: 268, column: 6)
!6169 = !DILocation(line: 268, column: 28, scope: !6168)
!6170 = !DILocation(line: 268, column: 6, scope: !6157)
!6171 = !DILocation(line: 280, column: 12, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6168, file: !5892, line: 278, column: 9)
!6173 = !DILocation(line: 280, column: 3, scope: !6172)
!6174 = !DILocation(line: 275, column: 5, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !5892, line: 274, column: 17)
!6176 = distinct !DILexicalBlock(scope: !6168, file: !5892, line: 268, column: 33)
!6177 = !DILocation(line: 276, column: 14, scope: !6175)
!6178 = !DILocation(line: 276, column: 4, scope: !6175)
!6179 = !DILocation(line: 276, column: 12, scope: !6175)
!6180 = !DILocation(line: 274, column: 12, scope: !6176)
!6181 = !DILocation(line: 274, column: 3, scope: !6176)
!6182 = distinct !{!6182, !6181, !6183}
!6183 = !DILocation(line: 277, column: 3, scope: !6176)
!6184 = !DILocation(line: 281, column: 12, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6172, file: !5892, line: 280, column: 17)
!6186 = !DILocation(line: 281, column: 10, scope: !6185)
!6187 = !DILocation(line: 282, column: 8, scope: !6185)
!6188 = !DILocation(line: 283, column: 7, scope: !6185)
!6189 = !DILocation(line: 284, column: 5, scope: !6185)
!6190 = distinct !{!6190, !6173, !6191}
!6191 = !DILocation(line: 285, column: 3, scope: !6172)
!6192 = !DILocation(line: 288, column: 2, scope: !6157)
!6193 = distinct !DISubprogram(name: "memcpy", scope: !5892, file: !5892, line: 298, type: !6194, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6198)
!6194 = !DISubroutineType(types: !6195)
!6195 = !{!102, !6196, !6197, !200}
!6196 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6197 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6198 = !{!6199, !6200, !6201, !6202, !6203}
!6199 = !DILocalVariable(name: "d", arg: 1, scope: !6193, file: !5892, line: 298, type: !6196)
!6200 = !DILocalVariable(name: "s", arg: 2, scope: !6193, file: !5892, line: 298, type: !6197)
!6201 = !DILocalVariable(name: "n", arg: 3, scope: !6193, file: !5892, line: 298, type: !200)
!6202 = !DILocalVariable(name: "d_byte", scope: !6193, file: !5892, line: 302, type: !828)
!6203 = !DILocalVariable(name: "s_byte", scope: !6193, file: !5892, line: 303, type: !2606)
!6204 = !DILocation(line: 0, scope: !6193)
!6205 = !DILocation(line: 337, column: 11, scope: !6193)
!6206 = !DILocation(line: 337, column: 2, scope: !6193)
!6207 = !DILocation(line: 338, column: 25, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6193, file: !5892, line: 337, column: 16)
!6209 = !DILocation(line: 338, column: 17, scope: !6208)
!6210 = !DILocation(line: 338, column: 11, scope: !6208)
!6211 = !DILocation(line: 338, column: 15, scope: !6208)
!6212 = !DILocation(line: 339, column: 4, scope: !6208)
!6213 = distinct !{!6213, !6206, !6214}
!6214 = !DILocation(line: 340, column: 2, scope: !6193)
!6215 = !DILocation(line: 342, column: 2, scope: !6193)
!6216 = distinct !DISubprogram(name: "memset", scope: !5892, file: !5892, line: 352, type: !6217, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6219)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!102, !102, !103, !200}
!6219 = !{!6220, !6221, !6222, !6223, !6224}
!6220 = !DILocalVariable(name: "buf", arg: 1, scope: !6216, file: !5892, line: 352, type: !102)
!6221 = !DILocalVariable(name: "c", arg: 2, scope: !6216, file: !5892, line: 352, type: !103)
!6222 = !DILocalVariable(name: "n", arg: 3, scope: !6216, file: !5892, line: 352, type: !200)
!6223 = !DILocalVariable(name: "d_byte", scope: !6216, file: !5892, line: 356, type: !828)
!6224 = !DILocalVariable(name: "c_byte", scope: !6216, file: !5892, line: 357, type: !155)
!6225 = !DILocation(line: 0, scope: !6216)
!6226 = !DILocation(line: 357, column: 25, scope: !6216)
!6227 = !DILocation(line: 389, column: 11, scope: !6216)
!6228 = !DILocation(line: 389, column: 2, scope: !6216)
!6229 = !DILocation(line: 390, column: 11, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6216, file: !5892, line: 389, column: 16)
!6231 = !DILocation(line: 390, column: 15, scope: !6230)
!6232 = !DILocation(line: 391, column: 4, scope: !6230)
!6233 = distinct !{!6233, !6228, !6234}
!6234 = !DILocation(line: 392, column: 2, scope: !6216)
!6235 = !DILocation(line: 394, column: 2, scope: !6216)
!6236 = distinct !DISubprogram(name: "memchr", scope: !5892, file: !5892, line: 404, type: !6237, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6239)
!6237 = !DISubroutineType(types: !6238)
!6238 = !{!102, !13, !103, !200}
!6239 = !{!6240, !6241, !6242, !6243}
!6240 = !DILocalVariable(name: "s", arg: 1, scope: !6236, file: !5892, line: 404, type: !13)
!6241 = !DILocalVariable(name: "c", arg: 2, scope: !6236, file: !5892, line: 404, type: !103)
!6242 = !DILocalVariable(name: "n", arg: 3, scope: !6236, file: !5892, line: 404, type: !200)
!6243 = !DILocalVariable(name: "p", scope: !6244, file: !5892, line: 407, type: !2606)
!6244 = distinct !DILexicalBlock(scope: !6245, file: !5892, line: 406, column: 14)
!6245 = distinct !DILexicalBlock(scope: !6236, file: !5892, line: 406, column: 6)
!6246 = !DILocation(line: 0, scope: !6236)
!6247 = !DILocation(line: 406, column: 8, scope: !6245)
!6248 = !DILocation(line: 406, column: 6, scope: !6236)
!6249 = !DILocation(line: 409, column: 3, scope: !6244)
!6250 = !DILocation(line: 0, scope: !6244)
!6251 = !DILocation(line: 410, column: 8, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !5892, line: 410, column: 8)
!6253 = distinct !DILexicalBlock(scope: !6244, file: !5892, line: 409, column: 6)
!6254 = !DILocation(line: 410, column: 13, scope: !6252)
!6255 = !DILocation(line: 410, column: 8, scope: !6253)
!6256 = distinct !{!6256, !6249, !6257}
!6257 = !DILocation(line: 414, column: 20, scope: !6244)
!6258 = !DILocation(line: 417, column: 2, scope: !6236)
!6259 = !DILocation(line: 418, column: 1, scope: !6236)
!6260 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !394, file: !394, line: 23, type: !2941, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6261)
!6261 = !{!6262}
!6262 = !DILocalVariable(name: "hook", arg: 1, scope: !6260, file: !394, line: 23, type: !106)
!6263 = !DILocation(line: 0, scope: !6260)
!6264 = !DILocation(line: 25, column: 15, scope: !6260)
!6265 = !DILocation(line: 26, column: 1, scope: !6260)
!6266 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !394, file: !394, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6267)
!6267 = !{!6268}
!6268 = !DILocalVariable(name: "c", arg: 1, scope: !6266, file: !394, line: 14, type: !103)
!6269 = !DILocation(line: 0, scope: !6266)
!6270 = !DILocation(line: 18, column: 2, scope: !6266)
!6271 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !394, file: !394, line: 28, type: !6272, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6274)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!103, !103, !390}
!6274 = !{!6275, !6276}
!6275 = !DILocalVariable(name: "c", arg: 1, scope: !6271, file: !394, line: 28, type: !103)
!6276 = !DILocalVariable(name: "stream", arg: 2, scope: !6271, file: !394, line: 28, type: !390)
!6277 = !DILocation(line: 0, scope: !6271)
!6278 = !DILocation(line: 30, column: 27, scope: !6271)
!6279 = !DILocation(line: 30, column: 50, scope: !6271)
!6280 = !DILocation(line: 30, column: 9, scope: !6271)
!6281 = !DILocation(line: 30, column: 2, scope: !6271)
!6282 = distinct !DISubprogram(name: "fputc", scope: !394, file: !394, line: 41, type: !6272, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6283)
!6283 = !{!6284, !6285}
!6284 = !DILocalVariable(name: "c", arg: 1, scope: !6282, file: !394, line: 41, type: !103)
!6285 = !DILocalVariable(name: "stream", arg: 2, scope: !6282, file: !394, line: 41, type: !390)
!6286 = !DILocation(line: 0, scope: !6282)
!6287 = !DILocation(line: 43, column: 9, scope: !6282)
!6288 = !DILocation(line: 43, column: 2, scope: !6282)
!6289 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6290, file: !6290, line: 72, type: !6272, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6291)
!6290 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!6291 = !{!6292, !6293}
!6292 = !DILocalVariable(name: "c", arg: 1, scope: !6289, file: !6290, line: 72, type: !103)
!6293 = !DILocalVariable(name: "stream", arg: 2, scope: !6289, file: !6290, line: 72, type: !390)
!6294 = !DILocation(line: 0, scope: !6289)
!6295 = !DILocation(line: 81, column: 2, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6289, file: !6290, line: 81, column: 2)
!6297 = !{i64 2155123243}
!6298 = !DILocation(line: 82, column: 9, scope: !6289)
!6299 = !DILocation(line: 82, column: 2, scope: !6289)
!6300 = distinct !DISubprogram(name: "fputs", scope: !394, file: !394, line: 46, type: !6301, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6304)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{!103, !5896, !6303}
!6303 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !390)
!6304 = !{!6305, !6306, !6307, !6308}
!6305 = !DILocalVariable(name: "s", arg: 1, scope: !6300, file: !394, line: 46, type: !5896)
!6306 = !DILocalVariable(name: "stream", arg: 2, scope: !6300, file: !394, line: 46, type: !6303)
!6307 = !DILocalVariable(name: "len", scope: !6300, file: !394, line: 48, type: !103)
!6308 = !DILocalVariable(name: "ret", scope: !6300, file: !394, line: 49, type: !103)
!6309 = !DILocation(line: 0, scope: !6300)
!6310 = !DILocation(line: 48, column: 12, scope: !6300)
!6311 = !DILocation(line: 51, column: 8, scope: !6300)
!6312 = !DILocation(line: 53, column: 13, scope: !6300)
!6313 = !DILocation(line: 53, column: 9, scope: !6300)
!6314 = !DILocation(line: 53, column: 2, scope: !6300)
!6315 = distinct !DISubprogram(name: "fwrite", scope: !394, file: !394, line: 99, type: !6316, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6318)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{!200, !6197, !200, !200, !6303}
!6318 = !{!6319, !6320, !6321, !6322}
!6319 = !DILocalVariable(name: "ptr", arg: 1, scope: !6315, file: !394, line: 99, type: !6197)
!6320 = !DILocalVariable(name: "size", arg: 2, scope: !6315, file: !394, line: 99, type: !200)
!6321 = !DILocalVariable(name: "nitems", arg: 3, scope: !6315, file: !394, line: 99, type: !200)
!6322 = !DILocalVariable(name: "stream", arg: 4, scope: !6315, file: !394, line: 100, type: !6303)
!6323 = !DILocation(line: 0, scope: !6315)
!6324 = !DILocation(line: 102, column: 9, scope: !6315)
!6325 = !DILocation(line: 102, column: 2, scope: !6315)
!6326 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6290, file: !6290, line: 96, type: !6316, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6327)
!6327 = !{!6328, !6329, !6330, !6331}
!6328 = !DILocalVariable(name: "ptr", arg: 1, scope: !6326, file: !6290, line: 96, type: !6197)
!6329 = !DILocalVariable(name: "size", arg: 2, scope: !6326, file: !6290, line: 96, type: !200)
!6330 = !DILocalVariable(name: "nitems", arg: 3, scope: !6326, file: !6290, line: 96, type: !200)
!6331 = !DILocalVariable(name: "stream", arg: 4, scope: !6326, file: !6290, line: 96, type: !6303)
!6332 = !DILocation(line: 0, scope: !6326)
!6333 = !DILocation(line: 107, column: 2, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6326, file: !6290, line: 107, column: 2)
!6335 = !{i64 2155123347}
!6336 = !DILocation(line: 108, column: 9, scope: !6326)
!6337 = !DILocation(line: 108, column: 2, scope: !6326)
!6338 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !394, file: !394, line: 56, type: !6316, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6339)
!6339 = !{!6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347}
!6340 = !DILocalVariable(name: "ptr", arg: 1, scope: !6338, file: !394, line: 56, type: !6197)
!6341 = !DILocalVariable(name: "size", arg: 2, scope: !6338, file: !394, line: 56, type: !200)
!6342 = !DILocalVariable(name: "nitems", arg: 3, scope: !6338, file: !394, line: 57, type: !200)
!6343 = !DILocalVariable(name: "stream", arg: 4, scope: !6338, file: !394, line: 57, type: !6303)
!6344 = !DILocalVariable(name: "i", scope: !6338, file: !394, line: 59, type: !200)
!6345 = !DILocalVariable(name: "j", scope: !6338, file: !394, line: 60, type: !200)
!6346 = !DILocalVariable(name: "p", scope: !6338, file: !394, line: 61, type: !2606)
!6347 = !DILabel(scope: !6338, name: "done", file: !394, line: 82)
!6348 = !DILocation(line: 0, scope: !6338)
!6349 = !DILocation(line: 63, column: 14, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6338, file: !394, line: 63, column: 6)
!6351 = !DILocation(line: 63, column: 24, scope: !6350)
!6352 = !DILocation(line: 72, column: 3, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6338, file: !394, line: 70, column: 5)
!6354 = !DILocation(line: 0, scope: !6353)
!6355 = !DILocation(line: 73, column: 8, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6357, file: !394, line: 73, column: 8)
!6357 = distinct !DILexicalBlock(scope: !6353, file: !394, line: 72, column: 6)
!6358 = !DILocation(line: 73, column: 29, scope: !6356)
!6359 = !DILocation(line: 73, column: 27, scope: !6356)
!6360 = !DILocation(line: 73, column: 21, scope: !6356)
!6361 = !DILocation(line: 73, column: 33, scope: !6356)
!6362 = !DILocation(line: 73, column: 8, scope: !6357)
!6363 = !DILocation(line: 76, column: 5, scope: !6357)
!6364 = !DILocation(line: 77, column: 14, scope: !6353)
!6365 = !DILocation(line: 77, column: 3, scope: !6357)
!6366 = distinct !{!6366, !6352, !6367}
!6367 = !DILocation(line: 77, column: 17, scope: !6353)
!6368 = !DILocation(line: 79, column: 4, scope: !6353)
!6369 = !DILocation(line: 80, column: 13, scope: !6338)
!6370 = !DILocation(line: 80, column: 2, scope: !6353)
!6371 = distinct !{!6371, !6372, !6373}
!6372 = !DILocation(line: 70, column: 2, scope: !6338)
!6373 = !DILocation(line: 80, column: 16, scope: !6338)
!6374 = !DILocation(line: 82, column: 1, scope: !6338)
!6375 = !DILocation(line: 83, column: 17, scope: !6338)
!6376 = !DILocation(line: 83, column: 2, scope: !6338)
!6377 = !DILocation(line: 84, column: 1, scope: !6338)
!6378 = distinct !DISubprogram(name: "puts", scope: !394, file: !394, line: 106, type: !6379, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6381)
!6379 = !DISubroutineType(types: !6380)
!6380 = !{!103, !144}
!6381 = !{!6382}
!6382 = !DILocalVariable(name: "s", arg: 1, scope: !6378, file: !394, line: 106, type: !144)
!6383 = !DILocation(line: 0, scope: !6378)
!6384 = !DILocation(line: 108, column: 6, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6378, file: !394, line: 108, column: 6)
!6386 = !DILocation(line: 108, column: 23, scope: !6385)
!6387 = !DILocation(line: 108, column: 6, scope: !6378)
!6388 = !DILocation(line: 112, column: 9, scope: !6378)
!6389 = !DILocation(line: 112, column: 29, scope: !6378)
!6390 = !DILocation(line: 112, column: 2, scope: !6378)
!6391 = !DILocation(line: 113, column: 1, scope: !6378)
!6392 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !535, file: !535, line: 368, type: !588, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6393)
!6393 = !{!6394}
!6394 = !DILocalVariable(name: "dev", arg: 1, scope: !6392, file: !535, line: 368, type: !564)
!6395 = !DILocation(line: 0, scope: !6392)
!6396 = !DILocation(line: 370, column: 2, scope: !6392)
!6397 = !DILocation(line: 371, column: 1, scope: !6392)
!6398 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !535, file: !535, line: 243, type: !6399, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6401)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{null, !103, !103, !564}
!6401 = !{!6402, !6403, !6404, !6405, !6407}
!6402 = !DILocalVariable(name: "min", arg: 1, scope: !6398, file: !535, line: 243, type: !103)
!6403 = !DILocalVariable(name: "max", arg: 2, scope: !6398, file: !535, line: 243, type: !103)
!6404 = !DILocalVariable(name: "dev", arg: 3, scope: !6398, file: !535, line: 243, type: !564)
!6405 = !DILocalVariable(name: "data", scope: !6398, file: !535, line: 245, type: !6406)
!6406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!6407 = !DILocalVariable(name: "line", scope: !6398, file: !535, line: 246, type: !103)
!6408 = !DILocation(line: 0, scope: !6398)
!6409 = !DILocation(line: 245, column: 38, scope: !6398)
!6410 = !DILocation(line: 249, column: 24, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6412, file: !535, line: 249, column: 2)
!6412 = distinct !DILexicalBlock(scope: !6398, file: !535, line: 249, column: 2)
!6413 = !DILocation(line: 249, column: 2, scope: !6412)
!6414 = !DILocation(line: 251, column: 7, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6416, file: !535, line: 251, column: 7)
!6416 = distinct !DILexicalBlock(scope: !6411, file: !535, line: 249, column: 39)
!6417 = !DILocation(line: 251, column: 7, scope: !6416)
!6418 = !DILocation(line: 253, column: 4, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6415, file: !535, line: 251, column: 36)
!6420 = !DILocation(line: 256, column: 24, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6419, file: !535, line: 256, column: 8)
!6422 = !DILocation(line: 256, column: 9, scope: !6421)
!6423 = !DILocation(line: 256, column: 8, scope: !6419)
!6424 = !DILocation(line: 260, column: 43, scope: !6419)
!6425 = !DILocation(line: 260, column: 4, scope: !6419)
!6426 = !DILocation(line: 261, column: 3, scope: !6419)
!6427 = !DILocation(line: 249, column: 35, scope: !6411)
!6428 = distinct !{!6428, !6413, !6429}
!6429 = !DILocation(line: 262, column: 2, scope: !6412)
!6430 = !DILocation(line: 263, column: 1, scope: !6398)
!6431 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !535, file: !535, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6432)
!6432 = !{!6433}
!6433 = !DILocalVariable(name: "line", arg: 1, scope: !6431, file: !535, line: 158, type: !103)
!6434 = !DILocation(line: 0, scope: !6431)
!6435 = !DILocation(line: 170, column: 38, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !535, line: 160, column: 17)
!6437 = distinct !DILexicalBlock(scope: !6431, file: !535, line: 160, column: 6)
!6438 = !DILocation(line: 170, column: 10, scope: !6436)
!6439 = !DILocation(line: 176, column: 1, scope: !6431)
!6440 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !535, file: !535, line: 183, type: !6441, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6443)
!6441 = !DISubroutineType(types: !6442)
!6442 = !{null, !103}
!6443 = !{!6444}
!6444 = !DILocalVariable(name: "line", arg: 1, scope: !6440, file: !535, line: 183, type: !103)
!6445 = !DILocation(line: 0, scope: !6440)
!6446 = !DILocation(line: 195, column: 28, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6448, file: !535, line: 185, column: 17)
!6448 = distinct !DILexicalBlock(scope: !6440, file: !535, line: 185, column: 6)
!6449 = !DILocation(line: 195, column: 3, scope: !6447)
!6450 = !DILocation(line: 200, column: 1, scope: !6440)
!6451 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !6452, file: !6452, line: 910, type: !4887, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6453)
!6452 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6453 = !{!6454}
!6454 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6451, file: !6452, line: 910, type: !121)
!6455 = !DILocation(line: 0, scope: !6451)
!6456 = !DILocation(line: 912, column: 3, scope: !6451)
!6457 = !DILocation(line: 913, column: 1, scope: !6451)
!6458 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !6452, file: !6452, line: 834, type: !5804, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6459)
!6459 = !{!6460}
!6460 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6458, file: !6452, line: 834, type: !121)
!6461 = !DILocation(line: 0, scope: !6458)
!6462 = !DILocation(line: 836, column: 11, scope: !6458)
!6463 = !DILocation(line: 836, column: 40, scope: !6458)
!6464 = !DILocation(line: 836, column: 3, scope: !6458)
!6465 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !535, file: !535, line: 304, type: !588, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6466)
!6466 = !{!6467}
!6467 = !DILocalVariable(name: "dev", arg: 1, scope: !6465, file: !535, line: 304, type: !564)
!6468 = !DILocation(line: 0, scope: !6465)
!6469 = !DILocation(line: 306, column: 2, scope: !6465)
!6470 = !DILocation(line: 307, column: 1, scope: !6465)
!6471 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !535, file: !535, line: 299, type: !588, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6472)
!6472 = !{!6473}
!6473 = !DILocalVariable(name: "dev", arg: 1, scope: !6471, file: !535, line: 299, type: !564)
!6474 = !DILocation(line: 0, scope: !6471)
!6475 = !DILocation(line: 301, column: 2, scope: !6471)
!6476 = !DILocation(line: 302, column: 1, scope: !6471)
!6477 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !535, file: !535, line: 294, type: !588, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6478)
!6478 = !{!6479}
!6479 = !DILocalVariable(name: "dev", arg: 1, scope: !6477, file: !535, line: 294, type: !564)
!6480 = !DILocation(line: 0, scope: !6477)
!6481 = !DILocation(line: 296, column: 2, scope: !6477)
!6482 = !DILocation(line: 297, column: 1, scope: !6477)
!6483 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !535, file: !535, line: 397, type: !588, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6484)
!6484 = !{!6485}
!6485 = !DILocalVariable(name: "dev", arg: 1, scope: !6483, file: !535, line: 397, type: !564)
!6486 = !DILocation(line: 0, scope: !6483)
!6487 = !DILocation(line: 399, column: 2, scope: !6483)
!6488 = !DILocation(line: 400, column: 1, scope: !6483)
!6489 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !535, file: !535, line: 392, type: !588, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6490)
!6490 = !{!6491}
!6491 = !DILocalVariable(name: "dev", arg: 1, scope: !6489, file: !535, line: 392, type: !564)
!6492 = !DILocation(line: 0, scope: !6489)
!6493 = !DILocation(line: 394, column: 2, scope: !6489)
!6494 = !DILocation(line: 395, column: 1, scope: !6489)
!6495 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !535, file: !535, line: 289, type: !588, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6496)
!6496 = !{!6497}
!6497 = !DILocalVariable(name: "dev", arg: 1, scope: !6495, file: !535, line: 289, type: !564)
!6498 = !DILocation(line: 0, scope: !6495)
!6499 = !DILocation(line: 291, column: 2, scope: !6495)
!6500 = !DILocation(line: 292, column: 1, scope: !6495)
!6501 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !535, file: !535, line: 387, type: !588, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6502)
!6502 = !{!6503}
!6503 = !DILocalVariable(name: "dev", arg: 1, scope: !6501, file: !535, line: 387, type: !564)
!6504 = !DILocation(line: 0, scope: !6501)
!6505 = !DILocation(line: 389, column: 2, scope: !6501)
!6506 = !DILocation(line: 390, column: 1, scope: !6501)
!6507 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !535, file: !535, line: 382, type: !588, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6508)
!6508 = !{!6509}
!6509 = !DILocalVariable(name: "dev", arg: 1, scope: !6507, file: !535, line: 382, type: !564)
!6510 = !DILocation(line: 0, scope: !6507)
!6511 = !DILocation(line: 384, column: 2, scope: !6507)
!6512 = !DILocation(line: 385, column: 1, scope: !6507)
!6513 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !535, file: !535, line: 373, type: !588, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6514)
!6514 = !{!6515}
!6515 = !DILocalVariable(name: "dev", arg: 1, scope: !6513, file: !535, line: 373, type: !564)
!6516 = !DILocation(line: 0, scope: !6513)
!6517 = !DILocation(line: 375, column: 2, scope: !6513)
!6518 = !DILocation(line: 376, column: 1, scope: !6513)
!6519 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !535, file: !535, line: 284, type: !588, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6520)
!6520 = !{!6521}
!6521 = !DILocalVariable(name: "dev", arg: 1, scope: !6519, file: !535, line: 284, type: !564)
!6522 = !DILocation(line: 0, scope: !6519)
!6523 = !DILocation(line: 286, column: 2, scope: !6519)
!6524 = !DILocation(line: 287, column: 1, scope: !6519)
!6525 = distinct !DISubprogram(name: "stm32_exti_init", scope: !535, file: !535, line: 416, type: !562, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6526)
!6526 = !{!6527}
!6527 = !DILocalVariable(name: "dev", arg: 1, scope: !6525, file: !535, line: 416, type: !564)
!6528 = !DILocation(line: 0, scope: !6525)
!6529 = !DILocation(line: 418, column: 2, scope: !6525)
!6530 = !DILocation(line: 420, column: 2, scope: !6525)
!6531 = !DILocation(line: 0, scope: !587)
!6532 = !DILocation(line: 493, column: 2, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !587, file: !535, line: 493, column: 2)
!6534 = !DILocation(line: 497, column: 2, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !587, file: !535, line: 497, column: 2)
!6536 = !DILocation(line: 507, column: 2, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !587, file: !535, line: 507, column: 2)
!6538 = !DILocation(line: 512, column: 2, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !587, file: !535, line: 512, column: 2)
!6540 = !DILocation(line: 516, column: 2, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !587, file: !535, line: 516, column: 2)
!6542 = !DILocation(line: 523, column: 2, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !587, file: !535, line: 523, column: 2)
!6544 = !DILocation(line: 527, column: 2, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !587, file: !535, line: 527, column: 2)
!6546 = !DILocation(line: 581, column: 2, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !587, file: !535, line: 581, column: 2)
!6548 = !DILocation(line: 586, column: 2, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !587, file: !535, line: 586, column: 2)
!6550 = !DILocation(line: 591, column: 2, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !587, file: !535, line: 591, column: 2)
!6552 = !DILocation(line: 595, column: 2, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !587, file: !535, line: 595, column: 2)
!6554 = !DILocation(line: 607, column: 1, scope: !587)
!6555 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !535, file: !535, line: 112, type: !6441, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6556)
!6556 = !{!6557, !6558}
!6557 = !DILocalVariable(name: "line", arg: 1, scope: !6555, file: !535, line: 112, type: !103)
!6558 = !DILocalVariable(name: "irqnum", scope: !6555, file: !535, line: 114, type: !103)
!6559 = !DILocation(line: 0, scope: !6555)
!6560 = !DILocation(line: 121, column: 11, scope: !6555)
!6561 = !DILocation(line: 130, column: 26, scope: !6555)
!6562 = !DILocation(line: 130, column: 2, scope: !6555)
!6563 = !DILocation(line: 134, column: 2, scope: !6555)
!6564 = !DILocation(line: 135, column: 1, scope: !6555)
!6565 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !6452, file: !6452, line: 268, type: !4887, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6566)
!6566 = !{!6567}
!6567 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6565, file: !6452, line: 268, type: !121)
!6568 = !DILocation(line: 0, scope: !6565)
!6569 = !DILocation(line: 270, column: 3, scope: !6565)
!6570 = !DILocation(line: 271, column: 1, scope: !6565)
!6571 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !535, file: !535, line: 137, type: !6441, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6572)
!6572 = !{!6573}
!6573 = !DILocalVariable(name: "line", arg: 1, scope: !6571, file: !535, line: 137, type: !103)
!6574 = !DILocation(line: 0, scope: !6571)
!6575 = !DILocation(line: 141, column: 11, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6571, file: !535, line: 141, column: 6)
!6577 = !DILocation(line: 141, column: 6, scope: !6571)
!6578 = !DILocation(line: 145, column: 28, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6576, file: !535, line: 141, column: 17)
!6580 = !DILocation(line: 145, column: 3, scope: !6579)
!6581 = !DILocation(line: 147, column: 2, scope: !6579)
!6582 = !DILocation(line: 151, column: 1, scope: !6571)
!6583 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !6452, file: !6452, line: 309, type: !4887, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6584)
!6584 = !{!6585}
!6585 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6583, file: !6452, line: 309, type: !121)
!6586 = !DILocation(line: 0, scope: !6583)
!6587 = !DILocation(line: 311, column: 3, scope: !6583)
!6588 = !DILocation(line: 312, column: 1, scope: !6583)
!6589 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !535, file: !535, line: 202, type: !6590, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6592)
!6590 = !DISubroutineType(types: !6591)
!6591 = !{null, !103, !103}
!6592 = !{!6593, !6594}
!6593 = !DILocalVariable(name: "line", arg: 1, scope: !6589, file: !535, line: 202, type: !103)
!6594 = !DILocalVariable(name: "trigger", arg: 2, scope: !6589, file: !535, line: 202, type: !103)
!6595 = !DILocation(line: 0, scope: !6589)
!6596 = !DILocation(line: 211, column: 2, scope: !6589)
!6597 = !DILocation(line: 213, column: 36, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6589, file: !535, line: 211, column: 19)
!6599 = !DILocation(line: 213, column: 3, scope: !6598)
!6600 = !DILocation(line: 214, column: 3, scope: !6598)
!6601 = !DILocation(line: 215, column: 3, scope: !6598)
!6602 = !DILocation(line: 217, column: 35, scope: !6598)
!6603 = !DILocation(line: 217, column: 3, scope: !6598)
!6604 = !DILocation(line: 218, column: 3, scope: !6598)
!6605 = !DILocation(line: 219, column: 3, scope: !6598)
!6606 = !DILocation(line: 221, column: 36, scope: !6598)
!6607 = !DILocation(line: 221, column: 3, scope: !6598)
!6608 = !DILocation(line: 222, column: 3, scope: !6598)
!6609 = !DILocation(line: 223, column: 3, scope: !6598)
!6610 = !DILocation(line: 225, column: 35, scope: !6598)
!6611 = !DILocation(line: 225, column: 3, scope: !6598)
!6612 = !DILocation(line: 226, column: 3, scope: !6598)
!6613 = !DILocation(line: 227, column: 3, scope: !6598)
!6614 = !DILocation(line: 232, column: 1, scope: !6589)
!6615 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !6452, file: !6452, line: 573, type: !4887, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6616)
!6616 = !{!6617}
!6617 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6615, file: !6452, line: 573, type: !121)
!6618 = !DILocation(line: 0, scope: !6615)
!6619 = !DILocation(line: 575, column: 3, scope: !6615)
!6620 = !DILocation(line: 577, column: 1, scope: !6615)
!6621 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !6452, file: !6452, line: 703, type: !4887, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6622)
!6622 = !{!6623}
!6623 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6621, file: !6452, line: 703, type: !121)
!6624 = !DILocation(line: 0, scope: !6621)
!6625 = !DILocation(line: 705, column: 3, scope: !6621)
!6626 = !DILocation(line: 706, column: 1, scope: !6621)
!6627 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !6452, file: !6452, line: 529, type: !4887, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6628)
!6628 = !{!6629}
!6629 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6627, file: !6452, line: 529, type: !121)
!6630 = !DILocation(line: 0, scope: !6627)
!6631 = !DILocation(line: 531, column: 3, scope: !6627)
!6632 = !DILocation(line: 533, column: 1, scope: !6627)
!6633 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !6452, file: !6452, line: 661, type: !4887, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6634)
!6634 = !{!6635}
!6635 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6633, file: !6452, line: 661, type: !121)
!6636 = !DILocation(line: 0, scope: !6633)
!6637 = !DILocation(line: 663, column: 3, scope: !6633)
!6638 = !DILocation(line: 664, column: 1, scope: !6633)
!6639 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !535, file: !535, line: 433, type: !6640, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6642)
!6640 = !DISubroutineType(types: !6641)
!6641 = !{!103, !103, !575, !102}
!6642 = !{!6643, !6644, !6645, !6646, !6648}
!6643 = !DILocalVariable(name: "line", arg: 1, scope: !6639, file: !535, line: 433, type: !103)
!6644 = !DILocalVariable(name: "cb", arg: 2, scope: !6639, file: !535, line: 433, type: !575)
!6645 = !DILocalVariable(name: "arg", arg: 3, scope: !6639, file: !535, line: 433, type: !102)
!6646 = !DILocalVariable(name: "dev", scope: !6639, file: !535, line: 435, type: !6647)
!6647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !564)
!6648 = !DILocalVariable(name: "data", scope: !6639, file: !535, line: 436, type: !6406)
!6649 = !DILocation(line: 0, scope: !6639)
!6650 = !DILocation(line: 438, column: 21, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6639, file: !535, line: 438, column: 6)
!6652 = !DILocation(line: 438, column: 6, scope: !6651)
!6653 = !DILocation(line: 438, column: 6, scope: !6639)
!6654 = !DILocation(line: 442, column: 20, scope: !6639)
!6655 = !DILocation(line: 443, column: 17, scope: !6639)
!6656 = !DILocation(line: 443, column: 22, scope: !6639)
!6657 = !DILocation(line: 445, column: 2, scope: !6639)
!6658 = !DILocation(line: 446, column: 1, scope: !6639)
!6659 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !535, file: !535, line: 448, type: !6441, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6660)
!6660 = !{!6661, !6662, !6663}
!6661 = !DILocalVariable(name: "line", arg: 1, scope: !6659, file: !535, line: 448, type: !103)
!6662 = !DILocalVariable(name: "dev", scope: !6659, file: !535, line: 450, type: !6647)
!6663 = !DILocalVariable(name: "data", scope: !6659, file: !535, line: 451, type: !6406)
!6664 = !DILocation(line: 0, scope: !6659)
!6665 = !DILocation(line: 453, column: 17, scope: !6659)
!6666 = !DILocation(line: 453, column: 20, scope: !6659)
!6667 = !DILocation(line: 454, column: 17, scope: !6659)
!6668 = !DILocation(line: 454, column: 22, scope: !6659)
!6669 = !DILocation(line: 455, column: 1, scope: !6659)
!6670 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !727, file: !727, line: 183, type: !765, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6671)
!6671 = !{!6672, !6673, !6674, !6675, !6676}
!6672 = !DILocalVariable(name: "dev", arg: 1, scope: !6670, file: !727, line: 183, type: !756)
!6673 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6670, file: !727, line: 184, type: !767)
!6674 = !DILocalVariable(name: "pclken", scope: !6670, file: !727, line: 186, type: !717)
!6675 = !DILocalVariable(name: "reg", scope: !6670, file: !727, line: 187, type: !1310)
!6676 = !DILocalVariable(name: "reg_val", scope: !6670, file: !727, line: 188, type: !121)
!6677 = !DILocation(line: 0, scope: !6670)
!6678 = !DILocation(line: 192, column: 6, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6670, file: !727, line: 192, column: 6)
!6680 = !DILocation(line: 192, column: 6, scope: !6670)
!6681 = !DILocation(line: 197, column: 52, scope: !6670)
!6682 = !DILocation(line: 197, column: 8, scope: !6670)
!6683 = !DILocation(line: 198, column: 12, scope: !6670)
!6684 = !DILocation(line: 199, column: 21, scope: !6670)
!6685 = !DILocation(line: 199, column: 10, scope: !6670)
!6686 = !DILocation(line: 200, column: 7, scope: !6670)
!6687 = !DILocation(line: 202, column: 2, scope: !6670)
!6688 = !DILocation(line: 203, column: 1, scope: !6670)
!6689 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !727, file: !727, line: 205, type: !765, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6690)
!6690 = !{!6691, !6692, !6693, !6694, !6695}
!6691 = !DILocalVariable(name: "dev", arg: 1, scope: !6689, file: !727, line: 205, type: !756)
!6692 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6689, file: !727, line: 206, type: !767)
!6693 = !DILocalVariable(name: "pclken", scope: !6689, file: !727, line: 208, type: !717)
!6694 = !DILocalVariable(name: "reg", scope: !6689, file: !727, line: 209, type: !1310)
!6695 = !DILocalVariable(name: "reg_val", scope: !6689, file: !727, line: 210, type: !121)
!6696 = !DILocation(line: 0, scope: !6689)
!6697 = !DILocation(line: 214, column: 6, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6689, file: !727, line: 214, column: 6)
!6699 = !DILocation(line: 214, column: 6, scope: !6689)
!6700 = !DILocation(line: 219, column: 52, scope: !6689)
!6701 = !DILocation(line: 219, column: 8, scope: !6689)
!6702 = !DILocation(line: 220, column: 12, scope: !6689)
!6703 = !DILocation(line: 221, column: 22, scope: !6689)
!6704 = !DILocation(line: 221, column: 13, scope: !6689)
!6705 = !DILocation(line: 221, column: 10, scope: !6689)
!6706 = !DILocation(line: 222, column: 7, scope: !6689)
!6707 = !DILocation(line: 224, column: 2, scope: !6689)
!6708 = !DILocation(line: 225, column: 1, scope: !6689)
!6709 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !727, file: !727, line: 262, type: !781, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6710)
!6710 = !{!6711, !6712, !6713, !6714, !6715, !6716, !6717, !6718}
!6711 = !DILocalVariable(name: "clock", arg: 1, scope: !6709, file: !727, line: 262, type: !756)
!6712 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6709, file: !727, line: 263, type: !767)
!6713 = !DILocalVariable(name: "rate", arg: 3, scope: !6709, file: !727, line: 264, type: !723)
!6714 = !DILocalVariable(name: "pclken", scope: !6709, file: !727, line: 266, type: !717)
!6715 = !DILocalVariable(name: "ahb_clock", scope: !6709, file: !727, line: 273, type: !121)
!6716 = !DILocalVariable(name: "apb1_clock", scope: !6709, file: !727, line: 274, type: !121)
!6717 = !DILocalVariable(name: "apb2_clock", scope: !6709, file: !727, line: 276, type: !121)
!6718 = !DILocalVariable(name: "ahb3_clock", scope: !6709, file: !727, line: 286, type: !121)
!6719 = !DILocation(line: 0, scope: !6709)
!6720 = !DILocation(line: 273, column: 23, scope: !6709)
!6721 = !DILocation(line: 299, column: 18, scope: !6709)
!6722 = !DILocation(line: 299, column: 2, scope: !6709)
!6723 = !DILocation(line: 274, column: 24, scope: !6709)
!6724 = !DILocation(line: 319, column: 3, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6709, file: !727, line: 299, column: 23)
!6726 = !DILocation(line: 276, column: 24, scope: !6709)
!6727 = !DILocation(line: 323, column: 3, scope: !6725)
!6728 = !DILocation(line: 346, column: 33, scope: !6725)
!6729 = !DILocation(line: 346, column: 11, scope: !6725)
!6730 = !DILocation(line: 350, column: 3, scope: !6725)
!6731 = !DILocation(line: 354, column: 33, scope: !6725)
!6732 = !DILocation(line: 354, column: 11, scope: !6725)
!6733 = !DILocation(line: 358, column: 3, scope: !6725)
!6734 = !DILocation(line: 374, column: 3, scope: !6725)
!6735 = !DILocation(line: 379, column: 3, scope: !6725)
!6736 = !DILocation(line: 0, scope: !6725)
!6737 = !DILocation(line: 396, column: 1, scope: !6709)
!6738 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !727, file: !727, line: 227, type: !797, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6739)
!6739 = !{!6740, !6741, !6742, !6743, !6744, !6745, !6746, !6747}
!6740 = !DILocalVariable(name: "dev", arg: 1, scope: !6738, file: !727, line: 227, type: !756)
!6741 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6738, file: !727, line: 228, type: !767)
!6742 = !DILocalVariable(name: "data", arg: 3, scope: !6738, file: !727, line: 229, type: !102)
!6743 = !DILocalVariable(name: "pclken", scope: !6738, file: !727, line: 233, type: !717)
!6744 = !DILocalVariable(name: "reg", scope: !6738, file: !727, line: 234, type: !1310)
!6745 = !DILocalVariable(name: "reg_val", scope: !6738, file: !727, line: 235, type: !121)
!6746 = !DILocalVariable(name: "dt_val", scope: !6738, file: !727, line: 235, type: !121)
!6747 = !DILocalVariable(name: "err", scope: !6738, file: !727, line: 236, type: !103)
!6748 = !DILocation(line: 0, scope: !6738)
!6749 = !DILocation(line: 241, column: 30, scope: !6738)
!6750 = !DILocation(line: 241, column: 8, scope: !6738)
!6751 = !DILocation(line: 242, column: 10, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6738, file: !727, line: 242, column: 6)
!6753 = !DILocation(line: 242, column: 6, scope: !6738)
!6754 = !DILocation(line: 247, column: 11, scope: !6738)
!6755 = !DILocation(line: 248, column: 6, scope: !6738)
!6756 = !DILocation(line: 247, column: 44, scope: !6738)
!6757 = !DILocation(line: 250, column: 6, scope: !6738)
!6758 = !DILocation(line: 249, column: 52, scope: !6738)
!6759 = !DILocation(line: 249, column: 8, scope: !6738)
!6760 = !DILocation(line: 251, column: 12, scope: !6738)
!6761 = !DILocation(line: 252, column: 10, scope: !6738)
!6762 = !DILocation(line: 253, column: 7, scope: !6738)
!6763 = !DILocation(line: 255, column: 2, scope: !6738)
!6764 = !DILocation(line: 260, column: 1, scope: !6738)
!6765 = distinct !DISubprogram(name: "enabled_clock", scope: !727, file: !727, line: 100, type: !6766, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6768)
!6766 = !DISubroutineType(types: !6767)
!6767 = !{!103, !121}
!6768 = !{!6769, !6770}
!6769 = !DILocalVariable(name: "src_clk", arg: 1, scope: !6765, file: !727, line: 100, type: !121)
!6770 = !DILocalVariable(name: "r", scope: !6765, file: !727, line: 102, type: !103)
!6771 = !DILocation(line: 0, scope: !6765)
!6772 = !DILocation(line: 104, column: 2, scope: !6765)
!6773 = !DILocation(line: 180, column: 2, scope: !6765)
!6774 = !DILocation(line: 181, column: 1, scope: !6765)
!6775 = distinct !DISubprogram(name: "get_bus_clock", scope: !727, file: !727, line: 79, type: !6776, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6778)
!6776 = !DISubroutineType(types: !6777)
!6777 = !{!121, !121, !121}
!6778 = !{!6779, !6780}
!6779 = !DILocalVariable(name: "clock", arg: 1, scope: !6775, file: !727, line: 79, type: !121)
!6780 = !DILocalVariable(name: "prescaler", arg: 2, scope: !6775, file: !727, line: 79, type: !121)
!6781 = !DILocation(line: 0, scope: !6775)
!6782 = !DILocation(line: 81, column: 15, scope: !6775)
!6783 = !DILocation(line: 81, column: 2, scope: !6775)
!6784 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !727, file: !727, line: 68, type: !6785, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6787)
!6785 = !DISubroutineType(types: !6786)
!6786 = !{!121, !121, !103, !103, !103}
!6787 = !{!6788, !6789, !6790, !6791}
!6788 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !6784, file: !727, line: 68, type: !121)
!6789 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !6784, file: !727, line: 69, type: !103)
!6790 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !6784, file: !727, line: 70, type: !103)
!6791 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !6784, file: !727, line: 71, type: !103)
!6792 = !DILocation(line: 0, scope: !6784)
!6793 = !DILocation(line: 75, column: 22, scope: !6784)
!6794 = !DILocation(line: 76, column: 13, scope: !6784)
!6795 = !DILocation(line: 75, column: 34, scope: !6784)
!6796 = !DILocation(line: 75, column: 2, scope: !6784)
!6797 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !727, file: !727, line: 641, type: !754, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6798)
!6798 = !{!6799, !6800, !6801}
!6799 = !DILocalVariable(name: "dev", arg: 1, scope: !6797, file: !727, line: 641, type: !756)
!6800 = !DILocalVariable(name: "old_flash_freq", scope: !6797, file: !727, line: 664, type: !121)
!6801 = !DILocalVariable(name: "new_flash_freq", scope: !6797, file: !727, line: 665, type: !121)
!6802 = !DILocation(line: 0, scope: !6797)
!6803 = !DILocation(line: 646, column: 2, scope: !6797)
!6804 = !DILocation(line: 667, column: 19, scope: !6797)
!6805 = !DILocation(line: 674, column: 21, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6797, file: !727, line: 674, column: 6)
!6807 = !DILocation(line: 674, column: 6, scope: !6797)
!6808 = !DILocation(line: 675, column: 3, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6806, file: !727, line: 674, column: 59)
!6810 = !DILocation(line: 676, column: 2, scope: !6809)
!6811 = !DILocation(line: 680, column: 2, scope: !6797)
!6812 = !DILocation(line: 683, column: 2, scope: !6797)
!6813 = !DILocation(line: 690, column: 3, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !727, line: 689, column: 9)
!6815 = distinct !DILexicalBlock(scope: !6797, file: !727, line: 685, column: 6)
!6816 = !DILocation(line: 695, column: 2, scope: !6797)
!6817 = !DILocation(line: 696, column: 2, scope: !6797)
!6818 = !DILocation(line: 696, column: 9, scope: !6797)
!6819 = !DILocation(line: 696, column: 34, scope: !6797)
!6820 = distinct !{!6820, !6817, !6821}
!6821 = !DILocation(line: 697, column: 2, scope: !6797)
!6822 = !DILocation(line: 720, column: 21, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6797, file: !727, line: 720, column: 6)
!6824 = !DILocation(line: 720, column: 6, scope: !6797)
!6825 = !DILocation(line: 721, column: 3, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6823, file: !727, line: 720, column: 60)
!6827 = !DILocation(line: 722, column: 2, scope: !6826)
!6828 = !DILocation(line: 725, column: 18, scope: !6797)
!6829 = !DILocation(line: 728, column: 2, scope: !6797)
!6830 = !DILocation(line: 730, column: 2, scope: !6797)
!6831 = !DILocation(line: 745, column: 2, scope: !6797)
!6832 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !6833, file: !6833, line: 3275, type: !4877, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6833 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6834 = !DILocation(line: 3277, column: 21, scope: !6832)
!6835 = !DILocation(line: 3277, column: 3, scope: !6832)
!6836 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !727, file: !727, line: 507, type: !2821, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6837 = !DILocation(line: 516, column: 4, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !727, line: 515, column: 10)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !727, line: 513, column: 7)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !727, line: 510, column: 37)
!6841 = distinct !DILexicalBlock(scope: !6836, file: !727, line: 510, column: 6)
!6842 = !DILocation(line: 526, column: 3, scope: !6840)
!6843 = !DILocation(line: 527, column: 3, scope: !6840)
!6844 = !DILocation(line: 527, column: 10, scope: !6840)
!6845 = !DILocation(line: 527, column: 31, scope: !6840)
!6846 = distinct !{!6846, !6843, !6847}
!6847 = !DILocation(line: 529, column: 3, scope: !6840)
!6848 = !DILocation(line: 583, column: 3, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !727, line: 577, column: 37)
!6850 = distinct !DILexicalBlock(scope: !6836, file: !727, line: 577, column: 6)
!6851 = !DILocation(line: 584, column: 3, scope: !6849)
!6852 = !DILocation(line: 584, column: 10, scope: !6849)
!6853 = !DILocation(line: 584, column: 31, scope: !6849)
!6854 = distinct !{!6854, !6851, !6855}
!6855 = !DILocation(line: 585, column: 3, scope: !6849)
!6856 = !DILocation(line: 627, column: 1, scope: !6836)
!6857 = distinct !DISubprogram(name: "set_up_plls", scope: !727, file: !727, line: 448, type: !2821, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6858 = !DILocation(line: 460, column: 6, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6857, file: !727, line: 460, column: 6)
!6860 = !DILocation(line: 460, column: 31, scope: !6859)
!6861 = !DILocation(line: 460, column: 6, scope: !6857)
!6862 = !DILocation(line: 461, column: 3, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6859, file: !727, line: 460, column: 67)
!6864 = !DILocation(line: 462, column: 3, scope: !6863)
!6865 = !DILocation(line: 463, column: 2, scope: !6863)
!6866 = !DILocation(line: 464, column: 2, scope: !6857)
!6867 = !DILocation(line: 488, column: 2, scope: !6857)
!6868 = !DILocation(line: 492, column: 2, scope: !6857)
!6869 = !DILocation(line: 496, column: 2, scope: !6857)
!6870 = !DILocation(line: 499, column: 2, scope: !6857)
!6871 = !DILocation(line: 500, column: 2, scope: !6857)
!6872 = !DILocation(line: 500, column: 9, scope: !6857)
!6873 = !DILocation(line: 500, column: 30, scope: !6857)
!6874 = distinct !{!6874, !6871, !6875}
!6875 = !DILocation(line: 502, column: 2, scope: !6857)
!6876 = !DILocation(line: 505, column: 1, scope: !6857)
!6877 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6833, file: !6833, line: 3224, type: !4887, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6878)
!6878 = !{!6879}
!6879 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6877, file: !6833, line: 3224, type: !121)
!6880 = !DILocation(line: 0, scope: !6877)
!6881 = !DILocation(line: 3226, column: 3, scope: !6877)
!6882 = !DILocation(line: 3227, column: 1, scope: !6877)
!6883 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6833, file: !6833, line: 3188, type: !4887, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6884)
!6884 = !{!6885}
!6885 = !DILocalVariable(name: "Source", arg: 1, scope: !6883, file: !6833, line: 3188, type: !121)
!6886 = !DILocation(line: 0, scope: !6883)
!6887 = !DILocation(line: 3190, column: 3, scope: !6883)
!6888 = !DILocation(line: 3191, column: 1, scope: !6883)
!6889 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6833, file: !6833, line: 3204, type: !4877, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6890 = !DILocation(line: 3206, column: 21, scope: !6889)
!6891 = !DILocation(line: 3206, column: 3, scope: !6889)
!6892 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6833, file: !6833, line: 3240, type: !4887, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6893)
!6893 = !{!6894}
!6894 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6892, file: !6833, line: 3240, type: !121)
!6895 = !DILocation(line: 0, scope: !6892)
!6896 = !DILocation(line: 3242, column: 3, scope: !6892)
!6897 = !DILocation(line: 3243, column: 1, scope: !6892)
!6898 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6833, file: !6833, line: 3256, type: !4887, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6899)
!6899 = !{!6900}
!6900 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6898, file: !6833, line: 3256, type: !121)
!6901 = !DILocation(line: 0, scope: !6898)
!6902 = !DILocation(line: 3258, column: 3, scope: !6898)
!6903 = !DILocation(line: 3259, column: 1, scope: !6898)
!6904 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !727, file: !727, line: 409, type: !2821, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6905 = !DILocation(line: 412, column: 6, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6904, file: !727, line: 412, column: 6)
!6907 = !DILocation(line: 412, column: 27, scope: !6906)
!6908 = !DILocation(line: 412, column: 6, scope: !6904)
!6909 = !DILocation(line: 414, column: 3, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6906, file: !727, line: 412, column: 33)
!6911 = !DILocation(line: 415, column: 3, scope: !6910)
!6912 = !DILocation(line: 415, column: 10, scope: !6910)
!6913 = !DILocation(line: 415, column: 31, scope: !6910)
!6914 = distinct !{!6914, !6911, !6915}
!6915 = !DILocation(line: 417, column: 3, scope: !6910)
!6916 = !DILocation(line: 421, column: 2, scope: !6904)
!6917 = !DILocation(line: 422, column: 2, scope: !6904)
!6918 = !DILocation(line: 422, column: 9, scope: !6904)
!6919 = !DILocation(line: 422, column: 34, scope: !6904)
!6920 = distinct !{!6920, !6917, !6921}
!6921 = !DILocation(line: 423, column: 2, scope: !6904)
!6922 = !DILocation(line: 424, column: 1, scope: !6904)
!6923 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !6833, file: !6833, line: 4195, type: !2821, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6924 = !DILocation(line: 4197, column: 3, scope: !6923)
!6925 = !DILocation(line: 4198, column: 1, scope: !6923)
!6926 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6833, file: !6833, line: 4184, type: !2821, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6927 = !DILocation(line: 4186, column: 3, scope: !6926)
!6928 = !DILocation(line: 4187, column: 1, scope: !6926)
!6929 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6833, file: !6833, line: 4205, type: !4877, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6930 = !DILocation(line: 4207, column: 11, scope: !6929)
!6931 = !DILocation(line: 4207, column: 44, scope: !6929)
!6932 = !DILocation(line: 4207, column: 3, scope: !6929)
!6933 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6833, file: !6833, line: 3007, type: !4877, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6934 = !DILocation(line: 3009, column: 11, scope: !6933)
!6935 = !DILocation(line: 3009, column: 44, scope: !6933)
!6936 = !DILocation(line: 3009, column: 3, scope: !6933)
!6937 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6833, file: !6833, line: 2987, type: !2821, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6938 = !DILocation(line: 2989, column: 3, scope: !6937)
!6939 = !DILocation(line: 2990, column: 1, scope: !6937)
!6940 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6833, file: !6833, line: 2939, type: !2821, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6941 = !DILocation(line: 2941, column: 3, scope: !6940)
!6942 = !DILocation(line: 2942, column: 1, scope: !6940)
!6943 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6833, file: !6833, line: 2949, type: !2821, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6944 = !DILocation(line: 2951, column: 3, scope: !6943)
!6945 = !DILocation(line: 2952, column: 1, scope: !6943)
!6946 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6833, file: !6833, line: 2969, type: !4877, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6947 = !DILocation(line: 2971, column: 11, scope: !6946)
!6948 = !DILocation(line: 2971, column: 44, scope: !6946)
!6949 = !DILocation(line: 2971, column: 3, scope: !6946)
!6950 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !6833, file: !6833, line: 3143, type: !2821, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6951 = !DILocation(line: 3145, column: 3, scope: !6950)
!6952 = !DILocation(line: 3146, column: 1, scope: !6950)
!6953 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !6833, file: !6833, line: 3163, type: !4877, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6954 = !DILocation(line: 3165, column: 11, scope: !6953)
!6955 = !DILocation(line: 3165, column: 46, scope: !6953)
!6956 = !DILocation(line: 3165, column: 3, scope: !6953)
!6957 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !6958, file: !6958, line: 40, type: !4877, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2608, retainedNodes: !322)
!6958 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6959 = !DILocation(line: 45, column: 3, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6958, line: 44, column: 44)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6958, line: 44, column: 13)
!6962 = distinct !DILexicalBlock(scope: !6957, file: !6958, line: 42, column: 6)
!6963 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !6958, file: !6958, line: 56, type: !2821, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2608, retainedNodes: !322)
!6964 = !DILocation(line: 58, column: 2, scope: !6963)
!6965 = !DILocation(line: 62, column: 1, scope: !6963)
!6966 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6833, file: !6833, line: 4304, type: !6967, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2608, retainedNodes: !6969)
!6967 = !DISubroutineType(types: !6968)
!6968 = !{null, !121, !121, !121, !121}
!6969 = !{!6970, !6971, !6972, !6973}
!6970 = !DILocalVariable(name: "Source", arg: 1, scope: !6966, file: !6833, line: 4304, type: !121)
!6971 = !DILocalVariable(name: "PLLM", arg: 2, scope: !6966, file: !6833, line: 4304, type: !121)
!6972 = !DILocalVariable(name: "PLLN", arg: 3, scope: !6966, file: !6833, line: 4304, type: !121)
!6973 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !6966, file: !6833, line: 4304, type: !121)
!6974 = !DILocation(line: 0, scope: !6966)
!6975 = !DILocation(line: 4306, column: 3, scope: !6966)
!6976 = !DILocation(line: 4308, column: 3, scope: !6966)
!6977 = !DILocation(line: 4310, column: 3, scope: !6966)
!6978 = !DILocation(line: 4312, column: 1, scope: !6966)
!6979 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !6958, file: !6958, line: 69, type: !2821, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2608, retainedNodes: !322)
!6980 = !DILocation(line: 72, column: 2, scope: !6979)
!6981 = !DILocation(line: 73, column: 1, scope: !6979)
!6982 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !6983, file: !6983, line: 1185, type: !4887, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2608, retainedNodes: !6984)
!6983 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6984 = !{!6985, !6986}
!6985 = !DILocalVariable(name: "Periphs", arg: 1, scope: !6982, file: !6983, line: 1185, type: !121)
!6986 = !DILocalVariable(name: "tmpreg", scope: !6982, file: !6983, line: 1187, type: !120)
!6987 = !DILocation(line: 0, scope: !6982)
!6988 = !DILocation(line: 1187, column: 3, scope: !6982)
!6989 = !DILocation(line: 1187, column: 17, scope: !6982)
!6990 = !DILocation(line: 1188, column: 3, scope: !6982)
!6991 = !DILocation(line: 1190, column: 12, scope: !6982)
!6992 = !DILocation(line: 1190, column: 10, scope: !6982)
!6993 = !DILocation(line: 1191, column: 9, scope: !6982)
!6994 = !DILocation(line: 1192, column: 1, scope: !6982)
!6995 = distinct !DISubprogram(name: "uart_console_init", scope: !858, file: !858, line: 588, type: !835, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !6996)
!6996 = !{!6997}
!6997 = !DILocalVariable(name: "arg", arg: 1, scope: !6995, file: !858, line: 588, type: !813)
!6998 = !DILocation(line: 0, scope: !6995)
!6999 = !DILocation(line: 593, column: 7, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6995, file: !858, line: 593, column: 6)
!7001 = !DILocation(line: 593, column: 6, scope: !6995)
!7002 = !DILocation(line: 597, column: 2, scope: !6995)
!7003 = !DILocation(line: 599, column: 2, scope: !6995)
!7004 = !DILocation(line: 600, column: 1, scope: !6995)
!7005 = distinct !DISubprogram(name: "device_is_ready", scope: !7006, file: !7006, line: 47, type: !7007, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7009)
!7006 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!7007 = !DISubroutineType(types: !7008)
!7008 = !{!157, !813}
!7009 = !{!7010}
!7010 = !DILocalVariable(name: "dev", arg: 1, scope: !7005, file: !7006, line: 47, type: !813)
!7011 = !DILocation(line: 0, scope: !7005)
!7012 = !DILocation(line: 55, column: 2, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7005, file: !7006, line: 55, column: 2)
!7014 = !{i64 2155286336}
!7015 = !DILocation(line: 56, column: 9, scope: !7005)
!7016 = !DILocation(line: 56, column: 2, scope: !7005)
!7017 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !858, file: !858, line: 573, type: !2821, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !322)
!7018 = !DILocation(line: 576, column: 2, scope: !7017)
!7019 = !DILocation(line: 579, column: 2, scope: !7017)
!7020 = !DILocation(line: 581, column: 1, scope: !7017)
!7021 = distinct !DISubprogram(name: "console_out", scope: !858, file: !858, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7022)
!7022 = !{!7023}
!7023 = !DILocalVariable(name: "c", arg: 1, scope: !7021, file: !858, line: 77, type: !103)
!7024 = !DILocation(line: 0, scope: !7021)
!7025 = !DILocation(line: 89, column: 11, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7021, file: !858, line: 89, column: 6)
!7027 = !DILocation(line: 89, column: 6, scope: !7021)
!7028 = !DILocation(line: 90, column: 3, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7026, file: !858, line: 89, column: 17)
!7030 = !DILocation(line: 91, column: 2, scope: !7029)
!7031 = !DILocation(line: 92, column: 34, scope: !7021)
!7032 = !DILocation(line: 92, column: 2, scope: !7021)
!7033 = !DILocation(line: 94, column: 2, scope: !7021)
!7034 = distinct !DISubprogram(name: "uart_poll_out", scope: !7035, file: !7035, line: 95, type: !831, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7036)
!7035 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/minimal")
!7036 = !{!7037, !7038}
!7037 = !DILocalVariable(name: "dev", arg: 1, scope: !7034, file: !7035, line: 95, type: !813)
!7038 = !DILocalVariable(name: "out_char", arg: 2, scope: !7034, file: !7035, line: 95, type: !155)
!7039 = !DILocation(line: 0, scope: !7034)
!7040 = !DILocation(line: 105, column: 2, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7034, file: !7035, line: 105, column: 2)
!7042 = !{i64 2155369727}
!7043 = !DILocation(line: 106, column: 2, scope: !7034)
!7044 = !DILocation(line: 107, column: 1, scope: !7034)
!7045 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !807, file: !807, line: 574, type: !831, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7046)
!7046 = !{!7047, !7048, !7049}
!7047 = !DILocalVariable(name: "dev", arg: 1, scope: !7045, file: !807, line: 574, type: !813)
!7048 = !DILocalVariable(name: "out_char", arg: 2, scope: !7045, file: !807, line: 575, type: !155)
!7049 = !DILocalVariable(name: "api", scope: !7045, file: !807, line: 577, type: !804)
!7050 = !DILocation(line: 0, scope: !7045)
!7051 = !DILocation(line: 578, column: 40, scope: !7045)
!7052 = !DILocation(line: 580, column: 7, scope: !7045)
!7053 = !DILocation(line: 580, column: 2, scope: !7045)
!7054 = !DILocation(line: 581, column: 1, scope: !7045)
!7055 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !7007, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7056)
!7056 = !{!7057}
!7057 = !DILocalVariable(name: "dev", arg: 1, scope: !7055, file: !141, line: 730, type: !813)
!7058 = !DILocation(line: 0, scope: !7055)
!7059 = !DILocation(line: 732, column: 9, scope: !7055)
!7060 = !DILocation(line: 732, column: 2, scope: !7055)
!7061 = distinct !DISubprogram(name: "uart_register_input", scope: !858, file: !858, line: 560, type: !7062, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7107)
!7062 = !DISubroutineType(types: !7063)
!7063 = !{null, !7064, !7064, !7104}
!7064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7065, size: 32)
!7065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !307, line: 2208, size: 128, elements: !7066)
!7066 = !{!7067}
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7065, file: !307, line: 2209, baseType: !7068, size: 128)
!7068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !307, line: 1709, size: 128, elements: !7069)
!7069 = !{!7070, !7083, !7085}
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7068, file: !307, line: 1710, baseType: !7071, size: 64)
!7071 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7072, line: 46, baseType: !7073)
!7072 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7072, line: 41, size: 64, elements: !7074)
!7074 = !{!7075, !7082}
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7073, file: !7072, line: 42, baseType: !7076, size: 32)
!7076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7077, size: 32)
!7077 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7072, line: 39, baseType: !7078)
!7078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7072, line: 35, size: 32, elements: !7079)
!7079 = !{!7080}
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7078, file: !7072, line: 36, baseType: !7081, size: 32)
!7081 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7072, line: 32, baseType: !121)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7073, file: !7072, line: 43, baseType: !7076, size: 32, offset: 32)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7068, file: !307, line: 1711, baseType: !7084, offset: 64)
!7084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7068, file: !307, line: 1712, baseType: !7086, size: 64, offset: 64)
!7086 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !7087)
!7087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !7088)
!7088 = !{!7089}
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7087, file: !247, line: 232, baseType: !7090, size: 64)
!7090 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !7091)
!7091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !7092)
!7092 = !{!7093, !7099}
!7093 = !DIDerivedType(tag: DW_TAG_member, scope: !7091, file: !221, line: 38, baseType: !7094, size: 32)
!7094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7091, file: !221, line: 38, size: 32, elements: !7095)
!7095 = !{!7096, !7098}
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7094, file: !221, line: 39, baseType: !7097, size: 32)
!7097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7091, size: 32)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7094, file: !221, line: 40, baseType: !7097, size: 32)
!7099 = !DIDerivedType(tag: DW_TAG_member, scope: !7091, file: !221, line: 42, baseType: !7100, size: 32, offset: 32)
!7100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7091, file: !221, line: 42, size: 32, elements: !7101)
!7101 = !{!7102, !7103}
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7100, file: !221, line: 43, baseType: !7097, size: 32)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7100, file: !221, line: 44, baseType: !7097, size: 32)
!7104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7105, size: 32)
!7105 = !DISubroutineType(types: !7106)
!7106 = !{!154, !995, !154}
!7107 = !{!7108, !7109, !7110}
!7108 = !DILocalVariable(name: "avail", arg: 1, scope: !7061, file: !858, line: 560, type: !7064)
!7109 = !DILocalVariable(name: "lines", arg: 2, scope: !7061, file: !858, line: 560, type: !7064)
!7110 = !DILocalVariable(name: "completion", arg: 3, scope: !7061, file: !858, line: 561, type: !7104)
!7111 = !DILocation(line: 0, scope: !7061)
!7112 = !DILocation(line: 566, column: 1, scope: !7061)
!7113 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1039, file: !1039, line: 523, type: !894, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7114)
!7114 = !{!7115, !7116, !7117, !7118, !7119}
!7115 = !DILocalVariable(name: "dev", arg: 1, scope: !7113, file: !1039, line: 523, type: !896)
!7116 = !DILocalVariable(name: "pin", arg: 2, scope: !7113, file: !1039, line: 524, type: !911)
!7117 = !DILocalVariable(name: "flags", arg: 3, scope: !7113, file: !1039, line: 524, type: !912)
!7118 = !DILocalVariable(name: "err", scope: !7113, file: !1039, line: 526, type: !103)
!7119 = !DILocalVariable(name: "pincfg", scope: !7113, file: !1039, line: 527, type: !103)
!7120 = !DILocation(line: 0, scope: !7113)
!7121 = !DILocation(line: 527, column: 2, scope: !7113)
!7122 = !DILocation(line: 532, column: 8, scope: !7113)
!7123 = !DILocation(line: 533, column: 10, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7113, file: !1039, line: 533, column: 6)
!7125 = !DILocation(line: 533, column: 6, scope: !7113)
!7126 = !DILocation(line: 543, column: 13, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7113, file: !1039, line: 543, column: 6)
!7128 = !DILocation(line: 543, column: 28, scope: !7127)
!7129 = !DILocation(line: 543, column: 6, scope: !7113)
!7130 = !DILocation(line: 544, column: 14, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !1039, line: 544, column: 7)
!7132 = distinct !DILexicalBlock(scope: !7127, file: !1039, line: 543, column: 34)
!7133 = !DILocation(line: 544, column: 39, scope: !7131)
!7134 = !DILocation(line: 544, column: 7, scope: !7132)
!7135 = !DILocation(line: 545, column: 38, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7131, file: !1039, line: 544, column: 45)
!7137 = !DILocation(line: 545, column: 4, scope: !7136)
!7138 = !DILocation(line: 546, column: 3, scope: !7136)
!7139 = !DILocation(line: 546, column: 21, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7131, file: !1039, line: 546, column: 14)
!7141 = !DILocation(line: 546, column: 45, scope: !7140)
!7142 = !DILocation(line: 546, column: 14, scope: !7131)
!7143 = !DILocation(line: 547, column: 40, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7140, file: !1039, line: 546, column: 51)
!7145 = !DILocation(line: 547, column: 4, scope: !7144)
!7146 = !DILocation(line: 548, column: 3, scope: !7144)
!7147 = !DILocation(line: 551, column: 32, scope: !7113)
!7148 = !DILocation(line: 551, column: 37, scope: !7113)
!7149 = !DILocation(line: 551, column: 2, scope: !7113)
!7150 = !DILocation(line: 554, column: 6, scope: !7113)
!7151 = !DILocation(line: 562, column: 1, scope: !7113)
!7152 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1039, file: !1039, line: 410, type: !7153, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7155)
!7153 = !DISubroutineType(types: !7154)
!7154 = !{!103, !896, !723}
!7155 = !{!7156, !7157, !7158, !7160}
!7156 = !DILocalVariable(name: "dev", arg: 1, scope: !7152, file: !1039, line: 410, type: !896)
!7157 = !DILocalVariable(name: "value", arg: 2, scope: !7152, file: !1039, line: 410, type: !723)
!7158 = !DILocalVariable(name: "cfg", scope: !7152, file: !1039, line: 412, type: !7159)
!7159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!7160 = !DILocalVariable(name: "gpio", scope: !7152, file: !1039, line: 413, type: !969)
!7161 = !DILocation(line: 0, scope: !7152)
!7162 = !DILocation(line: 412, column: 45, scope: !7152)
!7163 = !DILocation(line: 413, column: 44, scope: !7152)
!7164 = !DILocation(line: 415, column: 11, scope: !7152)
!7165 = !DILocation(line: 415, column: 9, scope: !7152)
!7166 = !DILocation(line: 417, column: 2, scope: !7152)
!7167 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1039, file: !1039, line: 420, type: !921, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7168)
!7168 = !{!7169, !7170, !7171, !7172, !7173, !7174}
!7169 = !DILocalVariable(name: "dev", arg: 1, scope: !7167, file: !1039, line: 420, type: !896)
!7170 = !DILocalVariable(name: "mask", arg: 2, scope: !7167, file: !1039, line: 421, type: !923)
!7171 = !DILocalVariable(name: "value", arg: 3, scope: !7167, file: !1039, line: 422, type: !918)
!7172 = !DILocalVariable(name: "cfg", scope: !7167, file: !1039, line: 424, type: !7159)
!7173 = !DILocalVariable(name: "gpio", scope: !7167, file: !1039, line: 425, type: !969)
!7174 = !DILocalVariable(name: "port_value", scope: !7167, file: !1039, line: 426, type: !121)
!7175 = !DILocation(line: 0, scope: !7167)
!7176 = !DILocation(line: 424, column: 45, scope: !7167)
!7177 = !DILocation(line: 425, column: 44, scope: !7167)
!7178 = !DILocation(line: 430, column: 15, scope: !7167)
!7179 = !DILocation(line: 431, column: 46, scope: !7167)
!7180 = !DILocation(line: 431, column: 44, scope: !7167)
!7181 = !DILocation(line: 431, column: 61, scope: !7167)
!7182 = !DILocation(line: 431, column: 53, scope: !7167)
!7183 = !DILocation(line: 431, column: 2, scope: !7167)
!7184 = !DILocation(line: 435, column: 2, scope: !7167)
!7185 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1039, file: !1039, line: 438, type: !926, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7186)
!7186 = !{!7187, !7188, !7189, !7190}
!7187 = !DILocalVariable(name: "dev", arg: 1, scope: !7185, file: !1039, line: 438, type: !896)
!7188 = !DILocalVariable(name: "pins", arg: 2, scope: !7185, file: !1039, line: 439, type: !923)
!7189 = !DILocalVariable(name: "cfg", scope: !7185, file: !1039, line: 441, type: !7159)
!7190 = !DILocalVariable(name: "gpio", scope: !7185, file: !1039, line: 442, type: !969)
!7191 = !DILocation(line: 0, scope: !7185)
!7192 = !DILocation(line: 441, column: 45, scope: !7185)
!7193 = !DILocation(line: 442, column: 44, scope: !7185)
!7194 = !DILocation(line: 448, column: 2, scope: !7185)
!7195 = !DILocation(line: 450, column: 2, scope: !7185)
!7196 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1039, file: !1039, line: 453, type: !926, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7197)
!7197 = !{!7198, !7199, !7200, !7201}
!7198 = !DILocalVariable(name: "dev", arg: 1, scope: !7196, file: !1039, line: 453, type: !896)
!7199 = !DILocalVariable(name: "pins", arg: 2, scope: !7196, file: !1039, line: 454, type: !923)
!7200 = !DILocalVariable(name: "cfg", scope: !7196, file: !1039, line: 456, type: !7159)
!7201 = !DILocalVariable(name: "gpio", scope: !7196, file: !1039, line: 457, type: !969)
!7202 = !DILocation(line: 0, scope: !7196)
!7203 = !DILocation(line: 456, column: 45, scope: !7196)
!7204 = !DILocation(line: 457, column: 44, scope: !7196)
!7205 = !DILocation(line: 467, column: 2, scope: !7196)
!7206 = !DILocation(line: 470, column: 2, scope: !7196)
!7207 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1039, file: !1039, line: 473, type: !926, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7208)
!7208 = !{!7209, !7210, !7211, !7212}
!7209 = !DILocalVariable(name: "dev", arg: 1, scope: !7207, file: !1039, line: 473, type: !896)
!7210 = !DILocalVariable(name: "pins", arg: 2, scope: !7207, file: !1039, line: 474, type: !923)
!7211 = !DILocalVariable(name: "cfg", scope: !7207, file: !1039, line: 476, type: !7159)
!7212 = !DILocalVariable(name: "gpio", scope: !7207, file: !1039, line: 477, type: !969)
!7213 = !DILocation(line: 0, scope: !7207)
!7214 = !DILocation(line: 476, column: 45, scope: !7207)
!7215 = !DILocation(line: 477, column: 44, scope: !7207)
!7216 = !DILocation(line: 484, column: 2, scope: !7207)
!7217 = !DILocation(line: 487, column: 2, scope: !7207)
!7218 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1039, file: !1039, line: 594, type: !932, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7219)
!7219 = !{!7220, !7221, !7222, !7223, !7224, !7225, !7227, !7228, !7229}
!7220 = !DILocalVariable(name: "dev", arg: 1, scope: !7218, file: !1039, line: 594, type: !896)
!7221 = !DILocalVariable(name: "pin", arg: 2, scope: !7218, file: !1039, line: 595, type: !911)
!7222 = !DILocalVariable(name: "mode", arg: 3, scope: !7218, file: !1039, line: 596, type: !870)
!7223 = !DILocalVariable(name: "trig", arg: 4, scope: !7218, file: !1039, line: 597, type: !876)
!7224 = !DILocalVariable(name: "cfg", scope: !7218, file: !1039, line: 599, type: !7159)
!7225 = !DILocalVariable(name: "data", scope: !7218, file: !1039, line: 600, type: !7226)
!7226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!7227 = !DILocalVariable(name: "edge", scope: !7218, file: !1039, line: 601, type: !103)
!7228 = !DILocalVariable(name: "err", scope: !7218, file: !1039, line: 602, type: !103)
!7229 = !DILabel(scope: !7218, name: "exit", file: !1039, line: 643)
!7230 = !DILocation(line: 0, scope: !7218)
!7231 = !DILocation(line: 599, column: 45, scope: !7218)
!7232 = !DILocation(line: 604, column: 6, scope: !7218)
!7233 = !DILocation(line: 605, column: 34, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !1039, line: 605, column: 7)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !1039, line: 604, column: 38)
!7236 = distinct !DILexicalBlock(scope: !7218, file: !1039, line: 604, column: 6)
!7237 = !DILocation(line: 605, column: 7, scope: !7234)
!7238 = !DILocation(line: 605, column: 47, scope: !7234)
!7239 = !DILocation(line: 605, column: 39, scope: !7234)
!7240 = !DILocation(line: 605, column: 7, scope: !7235)
!7241 = !DILocation(line: 606, column: 4, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7234, file: !1039, line: 605, column: 53)
!7243 = !DILocation(line: 607, column: 4, scope: !7242)
!7244 = !DILocation(line: 608, column: 4, scope: !7242)
!7245 = !DILocation(line: 609, column: 3, scope: !7242)
!7246 = !DILocation(line: 600, column: 38, scope: !7218)
!7247 = !DILocation(line: 620, column: 30, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7218, file: !1039, line: 620, column: 6)
!7249 = !DILocation(line: 620, column: 6, scope: !7248)
!7250 = !DILocation(line: 620, column: 57, scope: !7248)
!7251 = !DILocation(line: 620, column: 6, scope: !7218)
!7252 = !DILocation(line: 625, column: 29, scope: !7218)
!7253 = !DILocation(line: 625, column: 2, scope: !7218)
!7254 = !DILocation(line: 627, column: 2, scope: !7218)
!7255 = !DILocation(line: 630, column: 3, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7218, file: !1039, line: 627, column: 16)
!7257 = !DILocation(line: 633, column: 3, scope: !7256)
!7258 = !DILocation(line: 636, column: 3, scope: !7256)
!7259 = !DILocation(line: 639, column: 2, scope: !7218)
!7260 = !DILocation(line: 641, column: 2, scope: !7218)
!7261 = !DILocation(line: 643, column: 1, scope: !7218)
!7262 = !DILocation(line: 644, column: 2, scope: !7218)
!7263 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1039, file: !1039, line: 647, type: !936, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7264)
!7264 = !{!7265, !7266, !7267, !7268}
!7265 = !DILocalVariable(name: "dev", arg: 1, scope: !7263, file: !1039, line: 647, type: !896)
!7266 = !DILocalVariable(name: "callback", arg: 2, scope: !7263, file: !1039, line: 648, type: !938)
!7267 = !DILocalVariable(name: "set", arg: 3, scope: !7263, file: !1039, line: 649, type: !157)
!7268 = !DILocalVariable(name: "data", scope: !7263, file: !1039, line: 651, type: !7226)
!7269 = !DILocation(line: 0, scope: !7263)
!7270 = !DILocation(line: 651, column: 38, scope: !7263)
!7271 = !DILocation(line: 653, column: 37, scope: !7263)
!7272 = !DILocation(line: 653, column: 9, scope: !7263)
!7273 = !DILocation(line: 653, column: 2, scope: !7263)
!7274 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7275, file: !7275, line: 38, type: !7276, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7279)
!7275 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7276 = !DISubroutineType(types: !7277)
!7277 = !{!103, !7278, !938, !157}
!7278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!7279 = !{!7280, !7281, !7282}
!7280 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7274, file: !7275, line: 38, type: !7278)
!7281 = !DILocalVariable(name: "callback", arg: 2, scope: !7274, file: !7275, line: 39, type: !938)
!7282 = !DILocalVariable(name: "set", arg: 3, scope: !7274, file: !7275, line: 40, type: !157)
!7283 = !DILocation(line: 0, scope: !7274)
!7284 = !DILocation(line: 45, column: 7, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7274, file: !7275, line: 45, column: 6)
!7286 = !DILocation(line: 45, column: 6, scope: !7274)
!7287 = !DILocation(line: 46, column: 56, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !7275, line: 46, column: 7)
!7289 = distinct !DILexicalBlock(scope: !7285, file: !7275, line: 45, column: 38)
!7290 = !DILocation(line: 46, column: 8, scope: !7288)
!7291 = !DILocation(line: 46, column: 7, scope: !7289)
!7292 = !DILocation(line: 51, column: 13, scope: !7285)
!7293 = !DILocation(line: 56, column: 43, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7295, file: !7275, line: 55, column: 11)
!7295 = distinct !DILexicalBlock(scope: !7274, file: !7275, line: 55, column: 6)
!7296 = !DILocation(line: 56, column: 3, scope: !7294)
!7297 = !DILocation(line: 57, column: 2, scope: !7294)
!7298 = !DILocation(line: 60, column: 1, scope: !7274)
!7299 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !943, file: !943, line: 261, type: !7300, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7302)
!7300 = !DISubroutineType(types: !7301)
!7301 = !{!157, !7278}
!7302 = !{!7303}
!7303 = !DILocalVariable(name: "list", arg: 1, scope: !7299, file: !943, line: 261, type: !7278)
!7304 = !DILocation(line: 0, scope: !7299)
!7305 = !DILocation(line: 261, column: 1, scope: !7299)
!7306 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !943, file: !943, line: 417, type: !7307, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7309)
!7307 = !DISubroutineType(types: !7308)
!7308 = !{!157, !7278, !1112}
!7309 = !{!7310, !7311, !7312, !7313}
!7310 = !DILocalVariable(name: "list", arg: 1, scope: !7306, file: !943, line: 417, type: !7278)
!7311 = !DILocalVariable(name: "node", arg: 2, scope: !7306, file: !943, line: 417, type: !1112)
!7312 = !DILocalVariable(name: "prev", scope: !7306, file: !943, line: 417, type: !1112)
!7313 = !DILocalVariable(name: "test", scope: !7306, file: !943, line: 417, type: !1112)
!7314 = !DILocation(line: 0, scope: !7306)
!7315 = !DILocation(line: 417, column: 1, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7306, file: !943, line: 417, column: 1)
!7317 = !DILocation(line: 417, column: 1, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7316, file: !943, line: 417, column: 1)
!7319 = !DILocation(line: 417, column: 1, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7321, file: !943, line: 417, column: 1)
!7321 = distinct !DILexicalBlock(scope: !7318, file: !943, line: 417, column: 1)
!7322 = !DILocation(line: 417, column: 1, scope: !7321)
!7323 = distinct !{!7323, !7315, !7315}
!7324 = !DILocation(line: 417, column: 1, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7320, file: !943, line: 417, column: 1)
!7326 = !DILocation(line: 417, column: 1, scope: !7306)
!7327 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !943, file: !943, line: 298, type: !7328, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7330)
!7328 = !DISubroutineType(types: !7329)
!7329 = !{null, !7278, !1112}
!7330 = !{!7331, !7332}
!7331 = !DILocalVariable(name: "list", arg: 1, scope: !7327, file: !943, line: 298, type: !7278)
!7332 = !DILocalVariable(name: "node", arg: 2, scope: !7327, file: !943, line: 298, type: !1112)
!7333 = !DILocation(line: 0, scope: !7327)
!7334 = !DILocation(line: 298, column: 1, scope: !7327)
!7335 = !DILocation(line: 298, column: 1, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7327, file: !943, line: 298, column: 1)
!7337 = !DILocation(line: 298, column: 1, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7336, file: !943, line: 298, column: 1)
!7339 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !943, file: !943, line: 231, type: !7340, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7342)
!7340 = !DISubroutineType(types: !7341)
!7341 = !{!1112, !7278}
!7342 = !{!7343}
!7343 = !DILocalVariable(name: "list", arg: 1, scope: !7339, file: !943, line: 231, type: !7278)
!7344 = !DILocation(line: 0, scope: !7339)
!7345 = !DILocation(line: 233, column: 15, scope: !7339)
!7346 = !DILocation(line: 233, column: 2, scope: !7339)
!7347 = distinct !DISubprogram(name: "z_snode_next_set", scope: !943, file: !943, line: 209, type: !7348, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7350)
!7348 = !DISubroutineType(types: !7349)
!7349 = !{null, !1112, !1112}
!7350 = !{!7351, !7352}
!7351 = !DILocalVariable(name: "parent", arg: 1, scope: !7347, file: !943, line: 209, type: !1112)
!7352 = !DILocalVariable(name: "child", arg: 2, scope: !7347, file: !943, line: 209, type: !1112)
!7353 = !DILocation(line: 0, scope: !7347)
!7354 = !DILocation(line: 211, column: 10, scope: !7347)
!7355 = !DILocation(line: 211, column: 15, scope: !7347)
!7356 = !DILocation(line: 212, column: 1, scope: !7347)
!7357 = distinct !DISubprogram(name: "z_slist_head_set", scope: !943, file: !943, line: 214, type: !7328, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7358)
!7358 = !{!7359, !7360}
!7359 = !DILocalVariable(name: "list", arg: 1, scope: !7357, file: !943, line: 214, type: !7278)
!7360 = !DILocalVariable(name: "node", arg: 2, scope: !7357, file: !943, line: 214, type: !1112)
!7361 = !DILocation(line: 0, scope: !7357)
!7362 = !DILocation(line: 216, column: 8, scope: !7357)
!7363 = !DILocation(line: 216, column: 13, scope: !7357)
!7364 = !DILocation(line: 217, column: 1, scope: !7357)
!7365 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !943, file: !943, line: 243, type: !7340, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7366)
!7366 = !{!7367}
!7367 = !DILocalVariable(name: "list", arg: 1, scope: !7365, file: !943, line: 243, type: !7278)
!7368 = !DILocation(line: 0, scope: !7365)
!7369 = !DILocation(line: 245, column: 15, scope: !7365)
!7370 = !DILocation(line: 245, column: 2, scope: !7365)
!7371 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !943, file: !943, line: 219, type: !7328, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7372)
!7372 = !{!7373, !7374}
!7373 = !DILocalVariable(name: "list", arg: 1, scope: !7371, file: !943, line: 219, type: !7278)
!7374 = !DILocalVariable(name: "node", arg: 2, scope: !7371, file: !943, line: 219, type: !1112)
!7375 = !DILocation(line: 0, scope: !7371)
!7376 = !DILocation(line: 221, column: 8, scope: !7371)
!7377 = !DILocation(line: 221, column: 13, scope: !7371)
!7378 = !DILocation(line: 222, column: 1, scope: !7371)
!7379 = distinct !DISubprogram(name: "sys_slist_remove", scope: !943, file: !943, line: 401, type: !7380, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7382)
!7380 = !DISubroutineType(types: !7381)
!7381 = !{null, !7278, !1112, !1112}
!7382 = !{!7383, !7384, !7385}
!7383 = !DILocalVariable(name: "list", arg: 1, scope: !7379, file: !943, line: 401, type: !7278)
!7384 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7379, file: !943, line: 401, type: !1112)
!7385 = !DILocalVariable(name: "node", arg: 3, scope: !7379, file: !943, line: 401, type: !1112)
!7386 = !DILocation(line: 0, scope: !7379)
!7387 = !DILocation(line: 401, column: 1, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7379, file: !943, line: 401, column: 1)
!7389 = !DILocation(line: 0, scope: !7388)
!7390 = !DILocation(line: 401, column: 1, scope: !7379)
!7391 = !DILocation(line: 401, column: 1, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7388, file: !943, line: 401, column: 1)
!7393 = !DILocation(line: 401, column: 1, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7392, file: !943, line: 401, column: 1)
!7395 = !DILocation(line: 401, column: 1, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7394, file: !943, line: 401, column: 1)
!7397 = !DILocation(line: 401, column: 1, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7388, file: !943, line: 401, column: 1)
!7399 = !DILocation(line: 401, column: 1, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7398, file: !943, line: 401, column: 1)
!7401 = !DILocation(line: 401, column: 1, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7400, file: !943, line: 401, column: 1)
!7403 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !943, file: !943, line: 285, type: !7404, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7406)
!7404 = !DISubroutineType(types: !7405)
!7405 = !{!1112, !1112}
!7406 = !{!7407}
!7407 = !DILocalVariable(name: "node", arg: 1, scope: !7403, file: !943, line: 285, type: !1112)
!7408 = !DILocation(line: 0, scope: !7403)
!7409 = !DILocation(line: 285, column: 1, scope: !7403)
!7410 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !943, file: !943, line: 274, type: !7404, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7411)
!7411 = !{!7412}
!7412 = !DILocalVariable(name: "node", arg: 1, scope: !7410, file: !943, line: 274, type: !1112)
!7413 = !DILocation(line: 0, scope: !7410)
!7414 = !DILocation(line: 274, column: 1, scope: !7410)
!7415 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !943, file: !943, line: 204, type: !7404, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7416)
!7416 = !{!7417}
!7417 = !DILocalVariable(name: "node", arg: 1, scope: !7415, file: !943, line: 204, type: !1112)
!7418 = !DILocation(line: 0, scope: !7415)
!7419 = !DILocation(line: 206, column: 15, scope: !7415)
!7420 = !DILocation(line: 206, column: 2, scope: !7415)
!7421 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1039, file: !1039, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7422)
!7422 = !{!7423, !7424, !7425}
!7423 = !DILocalVariable(name: "pin", arg: 1, scope: !7421, file: !1039, line: 342, type: !103)
!7424 = !DILocalVariable(name: "line", scope: !7421, file: !1039, line: 344, type: !121)
!7425 = !DILocalVariable(name: "port", scope: !7421, file: !1039, line: 345, type: !103)
!7426 = !DILocation(line: 0, scope: !7421)
!7427 = !DILocation(line: 344, column: 18, scope: !7421)
!7428 = !{i32 983040, i32 0}
!7429 = !DILocation(line: 356, column: 9, scope: !7421)
!7430 = !DILocation(line: 370, column: 2, scope: !7421)
!7431 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1039, file: !1039, line: 37, type: !578, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7432)
!7432 = !{!7433, !7434, !7435}
!7433 = !DILocalVariable(name: "line", arg: 1, scope: !7431, file: !1039, line: 37, type: !103)
!7434 = !DILocalVariable(name: "arg", arg: 2, scope: !7431, file: !1039, line: 37, type: !102)
!7435 = !DILocalVariable(name: "data", scope: !7431, file: !1039, line: 39, type: !7226)
!7436 = !DILocation(line: 0, scope: !7431)
!7437 = !DILocation(line: 41, column: 29, scope: !7431)
!7438 = !DILocation(line: 41, column: 39, scope: !7431)
!7439 = !DILocation(line: 41, column: 44, scope: !7431)
!7440 = !DILocation(line: 41, column: 2, scope: !7431)
!7441 = !DILocation(line: 42, column: 1, scope: !7431)
!7442 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1039, file: !1039, line: 376, type: !7443, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7445)
!7443 = !DISubroutineType(types: !7444)
!7444 = !{!103, !103, !103}
!7445 = !{!7446, !7447, !7448, !7450, !7451}
!7446 = !DILocalVariable(name: "port", arg: 1, scope: !7442, file: !1039, line: 376, type: !103)
!7447 = !DILocalVariable(name: "pin", arg: 2, scope: !7442, file: !1039, line: 376, type: !103)
!7448 = !DILocalVariable(name: "clk", scope: !7442, file: !1039, line: 386, type: !7449)
!7449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !896)
!7450 = !DILocalVariable(name: "pclken", scope: !7442, file: !1039, line: 387, type: !1155)
!7451 = !DILocalVariable(name: "ret", scope: !7442, file: !1039, line: 396, type: !103)
!7452 = !DILocation(line: 0, scope: !7442)
!7453 = !DILocation(line: 387, column: 2, scope: !7442)
!7454 = !DILocation(line: 387, column: 22, scope: !7442)
!7455 = !DILocation(line: 399, column: 8, scope: !7442)
!7456 = !DILocation(line: 400, column: 10, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7442, file: !1039, line: 400, column: 6)
!7458 = !DILocation(line: 400, column: 6, scope: !7442)
!7459 = !DILocation(line: 405, column: 2, scope: !7442)
!7460 = !DILocation(line: 407, column: 2, scope: !7442)
!7461 = !DILocation(line: 408, column: 1, scope: !7442)
!7462 = distinct !DISubprogram(name: "clock_control_on", scope: !671, file: !671, line: 123, type: !1004, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7463)
!7463 = !{!7464, !7465, !7466}
!7464 = !DILocalVariable(name: "dev", arg: 1, scope: !7462, file: !671, line: 123, type: !896)
!7465 = !DILocalVariable(name: "sys", arg: 2, scope: !7462, file: !671, line: 124, type: !767)
!7466 = !DILocalVariable(name: "api", scope: !7462, file: !671, line: 126, type: !997)
!7467 = !DILocation(line: 0, scope: !7462)
!7468 = !DILocation(line: 127, column: 49, scope: !7462)
!7469 = !DILocation(line: 129, column: 14, scope: !7462)
!7470 = !DILocation(line: 129, column: 9, scope: !7462)
!7471 = !DILocation(line: 129, column: 2, scope: !7462)
!7472 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1039, file: !1039, line: 311, type: !6590, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7473)
!7473 = !{!7474, !7475, !7476}
!7474 = !DILocalVariable(name: "port", arg: 1, scope: !7472, file: !1039, line: 311, type: !103)
!7475 = !DILocalVariable(name: "pin", arg: 2, scope: !7472, file: !1039, line: 311, type: !103)
!7476 = !DILocalVariable(name: "line", scope: !7472, file: !1039, line: 313, type: !121)
!7477 = !DILocation(line: 0, scope: !7472)
!7478 = !DILocation(line: 313, column: 18, scope: !7472)
!7479 = !DILocation(line: 337, column: 2, scope: !7472)
!7480 = !DILocation(line: 340, column: 1, scope: !7472)
!7481 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1039, file: !1039, line: 295, type: !7482, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7484)
!7482 = !DISubroutineType(types: !7483)
!7483 = !{!121, !103}
!7484 = !{!7485}
!7485 = !DILocalVariable(name: "pin", arg: 1, scope: !7481, file: !1039, line: 295, type: !103)
!7486 = !DILocation(line: 0, scope: !7481)
!7487 = !DILocation(line: 307, column: 46, scope: !7481)
!7488 = !DILocation(line: 307, column: 27, scope: !7481)
!7489 = !DILocation(line: 307, column: 32, scope: !7481)
!7490 = !DILocation(line: 307, column: 14, scope: !7481)
!7491 = !DILocation(line: 307, column: 39, scope: !7481)
!7492 = !DILocation(line: 307, column: 2, scope: !7481)
!7493 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !4643, file: !4643, line: 671, type: !7494, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7496)
!7494 = !DISubroutineType(types: !7495)
!7495 = !{null, !121, !121}
!7496 = !{!7497, !7498}
!7497 = !DILocalVariable(name: "Port", arg: 1, scope: !7493, file: !4643, line: 671, type: !121)
!7498 = !DILocalVariable(name: "Line", arg: 2, scope: !7493, file: !4643, line: 671, type: !121)
!7499 = !DILocation(line: 0, scope: !7493)
!7500 = !DILocation(line: 673, column: 3, scope: !7493)
!7501 = !DILocalVariable(name: "value", arg: 1, scope: !7502, file: !4796, line: 373, type: !121)
!7502 = distinct !DISubprogram(name: "__RBIT", scope: !4796, file: !4796, line: 373, type: !5804, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7503)
!7503 = !{!7501, !7504}
!7504 = !DILocalVariable(name: "result", scope: !7502, file: !4796, line: 375, type: !121)
!7505 = !DILocation(line: 0, scope: !7502, inlinedAt: !7506)
!7506 = distinct !DILocation(line: 673, column: 3, scope: !7493)
!7507 = !DILocation(line: 380, column: 4, scope: !7502, inlinedAt: !7506)
!7508 = !{i64 3730418}
!7509 = !DILocalVariable(name: "value", arg: 1, scope: !7510, file: !4796, line: 403, type: !121)
!7510 = distinct !DISubprogram(name: "__CLZ", scope: !4796, file: !4796, line: 403, type: !7511, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7513)
!7511 = !DISubroutineType(types: !7512)
!7512 = !{!154, !121}
!7513 = !{!7509}
!7514 = !DILocation(line: 0, scope: !7510, inlinedAt: !7515)
!7515 = distinct !DILocation(line: 673, column: 3, scope: !7493)
!7516 = !DILocation(line: 414, column: 7, scope: !7510, inlinedAt: !7515)
!7517 = !DILocation(line: 674, column: 1, scope: !7493)
!7518 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7275, file: !7275, line: 69, type: !7519, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7521)
!7519 = !DISubroutineType(types: !7520)
!7520 = !{null, !7278, !896, !121}
!7521 = !{!7522, !7523, !7524, !7525, !7526}
!7522 = !DILocalVariable(name: "list", arg: 1, scope: !7518, file: !7275, line: 69, type: !7278)
!7523 = !DILocalVariable(name: "port", arg: 2, scope: !7518, file: !7275, line: 70, type: !896)
!7524 = !DILocalVariable(name: "pins", arg: 3, scope: !7518, file: !7275, line: 71, type: !121)
!7525 = !DILocalVariable(name: "cb", scope: !7518, file: !7275, line: 73, type: !938)
!7526 = !DILocalVariable(name: "tmp", scope: !7518, file: !7275, line: 73, type: !938)
!7527 = !DILocation(line: 0, scope: !7518)
!7528 = !DILocation(line: 75, column: 2, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7518, file: !7275, line: 75, column: 2)
!7530 = !DILocation(line: 0, scope: !7529)
!7531 = !DILocation(line: 76, column: 11, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !7275, line: 76, column: 7)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !7275, line: 75, column: 57)
!7534 = distinct !DILexicalBlock(scope: !7529, file: !7275, line: 75, column: 2)
!7535 = !DILocation(line: 76, column: 20, scope: !7532)
!7536 = !DILocation(line: 76, column: 7, scope: !7533)
!7537 = !DILocation(line: 78, column: 8, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7532, file: !7275, line: 76, column: 28)
!7539 = !DILocation(line: 78, column: 4, scope: !7538)
!7540 = !DILocation(line: 79, column: 3, scope: !7538)
!7541 = !DILocation(line: 75, column: 2, scope: !7534)
!7542 = !DILocation(line: 81, column: 1, scope: !7518)
!7543 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !4643, file: !4643, line: 710, type: !5804, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7544)
!7544 = !{!7545}
!7545 = !DILocalVariable(name: "Line", arg: 1, scope: !7543, file: !4643, line: 710, type: !121)
!7546 = !DILocation(line: 0, scope: !7543)
!7547 = !DILocation(line: 712, column: 21, scope: !7543)
!7548 = !DILocation(line: 0, scope: !7502, inlinedAt: !7549)
!7549 = distinct !DILocation(line: 712, column: 76, scope: !7543)
!7550 = !DILocation(line: 380, column: 4, scope: !7502, inlinedAt: !7549)
!7551 = !DILocation(line: 0, scope: !7510, inlinedAt: !7552)
!7552 = distinct !DILocation(line: 712, column: 76, scope: !7543)
!7553 = !DILocation(line: 414, column: 7, scope: !7510, inlinedAt: !7552)
!7554 = !DILocation(line: 712, column: 73, scope: !7543)
!7555 = !DILocation(line: 712, column: 3, scope: !7543)
!7556 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !7557, file: !7557, line: 910, type: !7558, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7560)
!7557 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7558 = !DISubroutineType(types: !7559)
!7559 = !{null, !969, !121}
!7560 = !{!7561, !7562}
!7561 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7556, file: !7557, line: 910, type: !969)
!7562 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7556, file: !7557, line: 910, type: !121)
!7563 = !DILocation(line: 0, scope: !7556)
!7564 = !DILocation(line: 912, column: 3, scope: !7556)
!7565 = !DILocation(line: 913, column: 1, scope: !7556)
!7566 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !7557, file: !7557, line: 823, type: !7567, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7569)
!7567 = !DISubroutineType(types: !7568)
!7568 = !{!121, !969}
!7569 = !{!7570}
!7570 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7566, file: !7557, line: 823, type: !969)
!7571 = !DILocation(line: 0, scope: !7566)
!7572 = !DILocation(line: 825, column: 21, scope: !7566)
!7573 = !DILocation(line: 825, column: 3, scope: !7566)
!7574 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !7557, file: !7557, line: 812, type: !7558, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7575)
!7575 = !{!7576, !7577}
!7576 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7574, file: !7557, line: 812, type: !969)
!7577 = !DILocalVariable(name: "PortValue", arg: 2, scope: !7574, file: !7557, line: 812, type: !121)
!7578 = !DILocation(line: 0, scope: !7574)
!7579 = !DILocation(line: 814, column: 3, scope: !7574)
!7580 = !DILocation(line: 815, column: 1, scope: !7574)
!7581 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !7557, file: !7557, line: 771, type: !7567, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7582)
!7582 = !{!7583}
!7583 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7581, file: !7557, line: 771, type: !969)
!7584 = !DILocation(line: 0, scope: !7581)
!7585 = !DILocation(line: 773, column: 21, scope: !7581)
!7586 = !DILocation(line: 773, column: 3, scope: !7581)
!7587 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1039, file: !1039, line: 47, type: !7588, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7590)
!7588 = !DISubroutineType(types: !7589)
!7589 = !{!103, !912, !2288}
!7590 = !{!7591, !7592}
!7591 = !DILocalVariable(name: "flags", arg: 1, scope: !7587, file: !1039, line: 47, type: !912)
!7592 = !DILocalVariable(name: "pincfg", arg: 2, scope: !7587, file: !1039, line: 47, type: !2288)
!7593 = !DILocation(line: 0, scope: !7587)
!7594 = !DILocation(line: 50, column: 13, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7587, file: !1039, line: 50, column: 6)
!7596 = !DILocation(line: 50, column: 28, scope: !7595)
!7597 = !DILocation(line: 50, column: 6, scope: !7587)
!7598 = !DILocation(line: 53, column: 11, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7595, file: !1039, line: 50, column: 34)
!7600 = !DILocation(line: 55, column: 14, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7599, file: !1039, line: 55, column: 7)
!7602 = !DILocation(line: 55, column: 35, scope: !7601)
!7603 = !DILocation(line: 55, column: 7, scope: !7599)
!7604 = !DILocation(line: 56, column: 14, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7606, file: !1039, line: 56, column: 8)
!7606 = distinct !DILexicalBlock(scope: !7601, file: !1039, line: 55, column: 41)
!7607 = !DILocation(line: 56, column: 8, scope: !7606)
!7608 = !DILocation(line: 0, scope: !7601)
!7609 = !DILocation(line: 66, column: 14, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7599, file: !1039, line: 66, column: 7)
!7611 = !DILocation(line: 66, column: 30, scope: !7610)
!7612 = !DILocation(line: 66, column: 7, scope: !7599)
!7613 = !DILocation(line: 67, column: 12, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7610, file: !1039, line: 66, column: 36)
!7615 = !DILocation(line: 68, column: 3, scope: !7614)
!7616 = !DILocation(line: 68, column: 21, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7610, file: !1039, line: 68, column: 14)
!7618 = !DILocation(line: 68, column: 39, scope: !7617)
!7619 = !DILocation(line: 68, column: 14, scope: !7610)
!7620 = !DILocation(line: 69, column: 12, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7617, file: !1039, line: 68, column: 45)
!7622 = !DILocation(line: 70, column: 3, scope: !7621)
!7623 = !DILocation(line: 72, column: 21, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7595, file: !1039, line: 72, column: 14)
!7625 = !DILocation(line: 72, column: 35, scope: !7624)
!7626 = !DILocation(line: 72, column: 14, scope: !7595)
!7627 = !DILocation(line: 77, column: 14, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7629, file: !1039, line: 77, column: 7)
!7629 = distinct !DILexicalBlock(scope: !7624, file: !1039, line: 72, column: 41)
!7630 = !DILocation(line: 77, column: 30, scope: !7628)
!7631 = !DILocation(line: 77, column: 7, scope: !7629)
!7632 = !DILocation(line: 0, scope: !7595)
!7633 = !DILocation(line: 90, column: 1, scope: !7587)
!7634 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1039, file: !1039, line: 157, type: !7635, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7637)
!7635 = !DISubroutineType(types: !7636)
!7636 = !{null, !896, !103, !103, !103}
!7637 = !{!7638, !7639, !7640, !7641, !7642, !7643, !7644, !7645, !7646, !7647, !7648}
!7638 = !DILocalVariable(name: "dev", arg: 1, scope: !7634, file: !1039, line: 157, type: !896)
!7639 = !DILocalVariable(name: "pin", arg: 2, scope: !7634, file: !1039, line: 157, type: !103)
!7640 = !DILocalVariable(name: "conf", arg: 3, scope: !7634, file: !1039, line: 158, type: !103)
!7641 = !DILocalVariable(name: "func", arg: 4, scope: !7634, file: !1039, line: 158, type: !103)
!7642 = !DILocalVariable(name: "cfg", scope: !7634, file: !1039, line: 160, type: !7159)
!7643 = !DILocalVariable(name: "gpio", scope: !7634, file: !1039, line: 161, type: !969)
!7644 = !DILocalVariable(name: "pin_ll", scope: !7634, file: !1039, line: 163, type: !103)
!7645 = !DILocalVariable(name: "mode", scope: !7634, file: !1039, line: 227, type: !32)
!7646 = !DILocalVariable(name: "otype", scope: !7634, file: !1039, line: 227, type: !32)
!7647 = !DILocalVariable(name: "ospeed", scope: !7634, file: !1039, line: 227, type: !32)
!7648 = !DILocalVariable(name: "pupd", scope: !7634, file: !1039, line: 227, type: !32)
!7649 = !DILocation(line: 0, scope: !7634)
!7650 = !DILocation(line: 160, column: 45, scope: !7634)
!7651 = !DILocation(line: 161, column: 44, scope: !7634)
!7652 = !DILocation(line: 163, column: 15, scope: !7634)
!7653 = !DILocation(line: 229, column: 14, scope: !7634)
!7654 = !DILocation(line: 246, column: 47, scope: !7634)
!7655 = !DILocation(line: 246, column: 2, scope: !7634)
!7656 = !DILocation(line: 248, column: 43, scope: !7634)
!7657 = !DILocation(line: 248, column: 2, scope: !7634)
!7658 = !DILocation(line: 250, column: 40, scope: !7634)
!7659 = !DILocation(line: 250, column: 2, scope: !7634)
!7660 = !DILocation(line: 252, column: 11, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7634, file: !1039, line: 252, column: 6)
!7662 = !DILocation(line: 252, column: 6, scope: !7634)
!7663 = !DILocation(line: 253, column: 11, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !1039, line: 253, column: 7)
!7665 = distinct !DILexicalBlock(scope: !7661, file: !1039, line: 252, column: 36)
!7666 = !DILocation(line: 253, column: 7, scope: !7665)
!7667 = !DILocation(line: 254, column: 4, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7664, file: !1039, line: 253, column: 16)
!7669 = !DILocation(line: 255, column: 3, scope: !7668)
!7670 = !DILocation(line: 256, column: 4, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7664, file: !1039, line: 255, column: 10)
!7672 = !DILocation(line: 260, column: 40, scope: !7634)
!7673 = !DILocation(line: 260, column: 2, scope: !7634)
!7674 = !DILocation(line: 265, column: 1, scope: !7634)
!7675 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1039, file: !1039, line: 137, type: !7482, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7676)
!7676 = !{!7677, !7678}
!7677 = !DILocalVariable(name: "pin", arg: 1, scope: !7675, file: !1039, line: 137, type: !103)
!7678 = !DILocalVariable(name: "pinval", scope: !7675, file: !1039, line: 139, type: !121)
!7679 = !DILocation(line: 0, scope: !7675)
!7680 = !DILocation(line: 149, column: 13, scope: !7675)
!7681 = !DILocation(line: 151, column: 2, scope: !7675)
!7682 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !7557, file: !7557, line: 342, type: !7683, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7685)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{null, !969, !121, !121}
!7685 = !{!7686, !7687, !7688}
!7686 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7682, file: !7557, line: 342, type: !969)
!7687 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7682, file: !7557, line: 342, type: !121)
!7688 = !DILocalVariable(name: "OutputType", arg: 3, scope: !7682, file: !7557, line: 342, type: !121)
!7689 = !DILocation(line: 0, scope: !7682)
!7690 = !DILocation(line: 344, column: 3, scope: !7682)
!7691 = !DILocation(line: 345, column: 1, scope: !7682)
!7692 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !7557, file: !7557, line: 413, type: !7683, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7693)
!7693 = !{!7694, !7695, !7696}
!7694 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7692, file: !7557, line: 413, type: !969)
!7695 = !DILocalVariable(name: "Pin", arg: 2, scope: !7692, file: !7557, line: 413, type: !121)
!7696 = !DILocalVariable(name: "Speed", arg: 3, scope: !7692, file: !7557, line: 413, type: !121)
!7697 = !DILocation(line: 0, scope: !7692)
!7698 = !DILocation(line: 415, column: 3, scope: !7692)
!7699 = !DILocation(line: 0, scope: !7502, inlinedAt: !7700)
!7700 = distinct !DILocation(line: 415, column: 3, scope: !7692)
!7701 = !DILocation(line: 380, column: 4, scope: !7502, inlinedAt: !7700)
!7702 = !DILocation(line: 0, scope: !7510, inlinedAt: !7703)
!7703 = distinct !DILocation(line: 415, column: 3, scope: !7692)
!7704 = !DILocation(line: 414, column: 7, scope: !7510, inlinedAt: !7703)
!7705 = !DILocation(line: 0, scope: !7502, inlinedAt: !7706)
!7706 = distinct !DILocation(line: 415, column: 3, scope: !7692)
!7707 = !DILocation(line: 0, scope: !7510, inlinedAt: !7708)
!7708 = distinct !DILocation(line: 415, column: 3, scope: !7692)
!7709 = !DILocation(line: 417, column: 1, scope: !7692)
!7710 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !7557, file: !7557, line: 484, type: !7683, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7711)
!7711 = !{!7712, !7713, !7714}
!7712 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7710, file: !7557, line: 484, type: !969)
!7713 = !DILocalVariable(name: "Pin", arg: 2, scope: !7710, file: !7557, line: 484, type: !121)
!7714 = !DILocalVariable(name: "Pull", arg: 3, scope: !7710, file: !7557, line: 484, type: !121)
!7715 = !DILocation(line: 0, scope: !7710)
!7716 = !DILocation(line: 486, column: 3, scope: !7710)
!7717 = !DILocation(line: 0, scope: !7502, inlinedAt: !7718)
!7718 = distinct !DILocation(line: 486, column: 3, scope: !7710)
!7719 = !DILocation(line: 380, column: 4, scope: !7502, inlinedAt: !7718)
!7720 = !DILocation(line: 0, scope: !7510, inlinedAt: !7721)
!7721 = distinct !DILocation(line: 486, column: 3, scope: !7710)
!7722 = !DILocation(line: 414, column: 7, scope: !7510, inlinedAt: !7721)
!7723 = !DILocation(line: 0, scope: !7502, inlinedAt: !7724)
!7724 = distinct !DILocation(line: 486, column: 3, scope: !7710)
!7725 = !DILocation(line: 0, scope: !7510, inlinedAt: !7726)
!7726 = distinct !DILocation(line: 486, column: 3, scope: !7710)
!7727 = !DILocation(line: 487, column: 1, scope: !7710)
!7728 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !7557, file: !7557, line: 556, type: !7683, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7729)
!7729 = !{!7730, !7731, !7732}
!7730 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7728, file: !7557, line: 556, type: !969)
!7731 = !DILocalVariable(name: "Pin", arg: 2, scope: !7728, file: !7557, line: 556, type: !121)
!7732 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7728, file: !7557, line: 556, type: !121)
!7733 = !DILocation(line: 0, scope: !7728)
!7734 = !DILocation(line: 558, column: 3, scope: !7728)
!7735 = !DILocation(line: 0, scope: !7502, inlinedAt: !7736)
!7736 = distinct !DILocation(line: 558, column: 3, scope: !7728)
!7737 = !DILocation(line: 380, column: 4, scope: !7502, inlinedAt: !7736)
!7738 = !DILocation(line: 0, scope: !7510, inlinedAt: !7739)
!7739 = distinct !DILocation(line: 558, column: 3, scope: !7728)
!7740 = !DILocation(line: 414, column: 7, scope: !7510, inlinedAt: !7739)
!7741 = !DILocation(line: 0, scope: !7502, inlinedAt: !7742)
!7742 = distinct !DILocation(line: 558, column: 3, scope: !7728)
!7743 = !DILocation(line: 0, scope: !7510, inlinedAt: !7744)
!7744 = distinct !DILocation(line: 558, column: 3, scope: !7728)
!7745 = !DILocation(line: 560, column: 1, scope: !7728)
!7746 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !7557, file: !7557, line: 633, type: !7683, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7747)
!7747 = !{!7748, !7749, !7750}
!7748 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7746, file: !7557, line: 633, type: !969)
!7749 = !DILocalVariable(name: "Pin", arg: 2, scope: !7746, file: !7557, line: 633, type: !121)
!7750 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7746, file: !7557, line: 633, type: !121)
!7751 = !DILocation(line: 0, scope: !7746)
!7752 = !DILocation(line: 635, column: 3, scope: !7746)
!7753 = !DILocation(line: 0, scope: !7502, inlinedAt: !7754)
!7754 = distinct !DILocation(line: 635, column: 3, scope: !7746)
!7755 = !DILocation(line: 380, column: 4, scope: !7502, inlinedAt: !7754)
!7756 = !DILocation(line: 0, scope: !7510, inlinedAt: !7757)
!7757 = distinct !DILocation(line: 635, column: 3, scope: !7746)
!7758 = !DILocation(line: 414, column: 7, scope: !7510, inlinedAt: !7757)
!7759 = !DILocation(line: 0, scope: !7502, inlinedAt: !7760)
!7760 = distinct !DILocation(line: 635, column: 3, scope: !7746)
!7761 = !DILocation(line: 0, scope: !7510, inlinedAt: !7762)
!7762 = distinct !DILocation(line: 635, column: 3, scope: !7746)
!7763 = !DILocation(line: 637, column: 1, scope: !7746)
!7764 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !7557, file: !7557, line: 273, type: !7683, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7765)
!7765 = !{!7766, !7767, !7768}
!7766 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7764, file: !7557, line: 273, type: !969)
!7767 = !DILocalVariable(name: "Pin", arg: 2, scope: !7764, file: !7557, line: 273, type: !121)
!7768 = !DILocalVariable(name: "Mode", arg: 3, scope: !7764, file: !7557, line: 273, type: !121)
!7769 = !DILocation(line: 0, scope: !7764)
!7770 = !DILocation(line: 275, column: 3, scope: !7764)
!7771 = !DILocation(line: 0, scope: !7502, inlinedAt: !7772)
!7772 = distinct !DILocation(line: 275, column: 3, scope: !7764)
!7773 = !DILocation(line: 380, column: 4, scope: !7502, inlinedAt: !7772)
!7774 = !DILocation(line: 0, scope: !7510, inlinedAt: !7775)
!7775 = distinct !DILocation(line: 275, column: 3, scope: !7764)
!7776 = !DILocation(line: 414, column: 7, scope: !7510, inlinedAt: !7775)
!7777 = !DILocation(line: 0, scope: !7502, inlinedAt: !7778)
!7778 = distinct !DILocation(line: 275, column: 3, scope: !7764)
!7779 = !DILocation(line: 0, scope: !7510, inlinedAt: !7780)
!7780 = distinct !DILocation(line: 275, column: 3, scope: !7764)
!7781 = !DILocation(line: 276, column: 1, scope: !7764)
!7782 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1039, file: !1039, line: 698, type: !1052, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7783)
!7783 = !{!7784, !7785, !7786}
!7784 = !DILocalVariable(name: "dev", arg: 1, scope: !7782, file: !1039, line: 698, type: !896)
!7785 = !DILocalVariable(name: "data", scope: !7782, file: !1039, line: 700, type: !7226)
!7786 = !DILocalVariable(name: "ret", scope: !7782, file: !1039, line: 701, type: !103)
!7787 = !DILocation(line: 0, scope: !7782)
!7788 = !DILocation(line: 700, column: 38, scope: !7782)
!7789 = !DILocation(line: 703, column: 8, scope: !7782)
!7790 = !DILocation(line: 703, column: 12, scope: !7782)
!7791 = !DILocation(line: 705, column: 7, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7782, file: !1039, line: 705, column: 6)
!7793 = !DILocation(line: 705, column: 6, scope: !7782)
!7794 = !DILocation(line: 722, column: 8, scope: !7782)
!7795 = !DILocation(line: 723, column: 10, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7782, file: !1039, line: 723, column: 6)
!7797 = !DILocation(line: 723, column: 6, scope: !7782)
!7798 = !DILocation(line: 731, column: 1, scope: !7782)
!7799 = distinct !DISubprogram(name: "device_is_ready", scope: !7006, file: !7006, line: 47, type: !7800, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7802)
!7800 = !DISubroutineType(types: !7801)
!7801 = !{!157, !896}
!7802 = !{!7803}
!7803 = !DILocalVariable(name: "dev", arg: 1, scope: !7799, file: !7006, line: 47, type: !896)
!7804 = !DILocation(line: 0, scope: !7799)
!7805 = !DILocation(line: 55, column: 2, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7799, file: !7006, line: 55, column: 2)
!7807 = !{i64 2155277543}
!7808 = !DILocation(line: 56, column: 9, scope: !7799)
!7809 = !DILocation(line: 56, column: 2, scope: !7799)
!7810 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1039, file: !1039, line: 270, type: !7811, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7813)
!7811 = !DISubroutineType(types: !7812)
!7812 = !{!103, !896, !157}
!7813 = !{!7814, !7815, !7816, !7817, !7818}
!7814 = !DILocalVariable(name: "dev", arg: 1, scope: !7810, file: !1039, line: 270, type: !896)
!7815 = !DILocalVariable(name: "on", arg: 2, scope: !7810, file: !1039, line: 270, type: !157)
!7816 = !DILocalVariable(name: "cfg", scope: !7810, file: !1039, line: 272, type: !7159)
!7817 = !DILocalVariable(name: "ret", scope: !7810, file: !1039, line: 273, type: !103)
!7818 = !DILocalVariable(name: "clk", scope: !7810, file: !1039, line: 278, type: !7449)
!7819 = !DILocation(line: 0, scope: !7810)
!7820 = !DILocation(line: 272, column: 45, scope: !7810)
!7821 = !DILocation(line: 282, column: 38, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !1039, line: 280, column: 10)
!7823 = distinct !DILexicalBlock(scope: !7810, file: !1039, line: 280, column: 6)
!7824 = !DILocation(line: 282, column: 6, scope: !7822)
!7825 = !DILocation(line: 281, column: 9, scope: !7822)
!7826 = !DILocation(line: 293, column: 1, scope: !7810)
!7827 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !7800, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7828)
!7828 = !{!7829}
!7829 = !DILocalVariable(name: "dev", arg: 1, scope: !7827, file: !141, line: 730, type: !896)
!7830 = !DILocation(line: 0, scope: !7827)
!7831 = !DILocation(line: 732, column: 9, scope: !7827)
!7832 = !DILocation(line: 732, column: 2, scope: !7827)
!7833 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1039, file: !1039, line: 496, type: !7834, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7836)
!7834 = !DISubroutineType(types: !7835)
!7835 = !{!103, !896, !103, !103, !103}
!7836 = !{!7837, !7838, !7839, !7840, !7841, !7842}
!7837 = !DILocalVariable(name: "dev", arg: 1, scope: !7833, file: !1039, line: 496, type: !896)
!7838 = !DILocalVariable(name: "pin", arg: 2, scope: !7833, file: !1039, line: 496, type: !103)
!7839 = !DILocalVariable(name: "conf", arg: 3, scope: !7833, file: !1039, line: 496, type: !103)
!7840 = !DILocalVariable(name: "func", arg: 4, scope: !7833, file: !1039, line: 496, type: !103)
!7841 = !DILocalVariable(name: "ret", scope: !7833, file: !1039, line: 498, type: !103)
!7842 = !DILocalVariable(name: "gpio_out", scope: !7843, file: !1039, line: 508, type: !121)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !1039, line: 507, column: 27)
!7844 = distinct !DILexicalBlock(scope: !7833, file: !1039, line: 507, column: 6)
!7845 = !DILocation(line: 0, scope: !7833)
!7846 = !DILocation(line: 505, column: 2, scope: !7833)
!7847 = !DILocation(line: 507, column: 11, scope: !7844)
!7848 = !DILocation(line: 507, column: 6, scope: !7833)
!7849 = !DILocation(line: 508, column: 28, scope: !7843)
!7850 = !DILocation(line: 0, scope: !7843)
!7851 = !DILocation(line: 510, column: 16, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7843, file: !1039, line: 510, column: 7)
!7853 = !DILocation(line: 0, scope: !7852)
!7854 = !DILocation(line: 510, column: 7, scope: !7843)
!7855 = !DILocation(line: 511, column: 4, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7852, file: !1039, line: 510, column: 32)
!7857 = !DILocation(line: 512, column: 3, scope: !7856)
!7858 = !DILocation(line: 513, column: 4, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7860, file: !1039, line: 512, column: 39)
!7860 = distinct !DILexicalBlock(scope: !7852, file: !1039, line: 512, column: 14)
!7861 = !DILocation(line: 514, column: 3, scope: !7859)
!7862 = !DILocation(line: 518, column: 1, scope: !7833)
!7863 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1314, file: !1314, line: 526, type: !1215, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7864)
!7864 = !{!7865, !7866, !7867}
!7865 = !DILocalVariable(name: "dev", arg: 1, scope: !7863, file: !1314, line: 526, type: !1217)
!7866 = !DILocalVariable(name: "c", arg: 2, scope: !7863, file: !1314, line: 526, type: !828)
!7867 = !DILocalVariable(name: "config", scope: !7863, file: !1314, line: 528, type: !7868)
!7868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!7869 = !DILocation(line: 0, scope: !7863)
!7870 = !DILocation(line: 528, column: 48, scope: !7863)
!7871 = !DILocation(line: 531, column: 40, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7863, file: !1314, line: 531, column: 6)
!7873 = !DILocation(line: 531, column: 6, scope: !7872)
!7874 = !DILocation(line: 531, column: 6, scope: !7863)
!7875 = !DILocation(line: 532, column: 34, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7872, file: !1314, line: 531, column: 48)
!7877 = !DILocation(line: 532, column: 3, scope: !7876)
!7878 = !DILocation(line: 533, column: 2, scope: !7876)
!7879 = !DILocation(line: 539, column: 42, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7863, file: !1314, line: 539, column: 6)
!7881 = !DILocation(line: 539, column: 7, scope: !7880)
!7882 = !DILocation(line: 539, column: 6, scope: !7863)
!7883 = !DILocation(line: 543, column: 52, scope: !7863)
!7884 = !DILocation(line: 543, column: 22, scope: !7863)
!7885 = !DILocation(line: 543, column: 5, scope: !7863)
!7886 = !DILocation(line: 545, column: 2, scope: !7863)
!7887 = !DILocation(line: 546, column: 1, scope: !7863)
!7888 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1314, file: !1314, line: 548, type: !1234, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7889)
!7889 = !{!7890, !7891, !7892, !7893}
!7890 = !DILocalVariable(name: "dev", arg: 1, scope: !7888, file: !1314, line: 548, type: !1217)
!7891 = !DILocalVariable(name: "c", arg: 2, scope: !7888, file: !1314, line: 549, type: !155)
!7892 = !DILocalVariable(name: "config", scope: !7888, file: !1314, line: 551, type: !7868)
!7893 = !DILocalVariable(name: "key", scope: !7888, file: !1314, line: 555, type: !32)
!7894 = !DILocation(line: 0, scope: !7888)
!7895 = !DILocation(line: 551, column: 48, scope: !7888)
!7896 = !DILocation(line: 562, column: 2, scope: !7888)
!7897 = !DILocation(line: 563, column: 41, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7899, file: !1314, line: 563, column: 7)
!7899 = distinct !DILexicalBlock(scope: !7888, file: !1314, line: 562, column: 12)
!7900 = !DILocation(line: 563, column: 7, scope: !7898)
!7901 = !DILocation(line: 563, column: 7, scope: !7899)
!7902 = !DILocation(line: 55, column: 2, scope: !7903, inlinedAt: !7907)
!7903 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4622, file: !4622, line: 42, type: !4623, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7904)
!7904 = !{!7905, !7906}
!7905 = !DILocalVariable(name: "key", scope: !7903, file: !4622, line: 44, type: !32)
!7906 = !DILocalVariable(name: "tmp", scope: !7903, file: !4622, line: 53, type: !32)
!7907 = distinct !DILocation(line: 564, column: 10, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7898, file: !1314, line: 563, column: 49)
!7909 = !{i64 2327268}
!7910 = !DILocation(line: 0, scope: !7903, inlinedAt: !7907)
!7911 = !DILocation(line: 565, column: 42, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7908, file: !1314, line: 565, column: 8)
!7913 = !DILocation(line: 565, column: 8, scope: !7912)
!7914 = !DILocation(line: 565, column: 8, scope: !7908)
!7915 = !DILocalVariable(name: "key", arg: 1, scope: !7916, file: !4622, line: 84, type: !32)
!7916 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4622, file: !4622, line: 84, type: !4633, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7917)
!7917 = !{!7915}
!7918 = !DILocation(line: 0, scope: !7916, inlinedAt: !7919)
!7919 = distinct !DILocation(line: 568, column: 4, scope: !7908)
!7920 = !DILocation(line: 95, column: 2, scope: !7916, inlinedAt: !7919)
!7921 = !{i64 2328085}
!7922 = !DILocation(line: 569, column: 3, scope: !7908)
!7923 = distinct !{!7923, !7896, !7924}
!7924 = !DILocation(line: 570, column: 2, scope: !7888)
!7925 = !DILocation(line: 592, column: 33, scope: !7888)
!7926 = !DILocation(line: 592, column: 2, scope: !7888)
!7927 = !DILocation(line: 0, scope: !7916, inlinedAt: !7928)
!7928 = distinct !DILocation(line: 593, column: 2, scope: !7888)
!7929 = !DILocation(line: 95, column: 2, scope: !7916, inlinedAt: !7928)
!7930 = !DILocation(line: 594, column: 1, scope: !7888)
!7931 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1314, file: !1314, line: 596, type: !1238, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7932)
!7932 = !{!7933, !7934, !7935}
!7933 = !DILocalVariable(name: "dev", arg: 1, scope: !7931, file: !1314, line: 596, type: !1217)
!7934 = !DILocalVariable(name: "config", scope: !7931, file: !1314, line: 598, type: !7868)
!7935 = !DILocalVariable(name: "err", scope: !7931, file: !1314, line: 599, type: !121)
!7936 = !DILocation(line: 0, scope: !7931)
!7937 = !DILocation(line: 598, column: 48, scope: !7931)
!7938 = !DILocation(line: 606, column: 40, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7931, file: !1314, line: 606, column: 6)
!7940 = !DILocation(line: 606, column: 6, scope: !7939)
!7941 = !DILocation(line: 606, column: 6, scope: !7931)
!7942 = !DILocation(line: 610, column: 39, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7931, file: !1314, line: 610, column: 6)
!7944 = !DILocation(line: 610, column: 6, scope: !7943)
!7945 = !DILocation(line: 610, column: 6, scope: !7931)
!7946 = !DILocation(line: 614, column: 39, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7931, file: !1314, line: 614, column: 6)
!7948 = !DILocation(line: 614, column: 6, scope: !7947)
!7949 = !DILocation(line: 614, column: 6, scope: !7931)
!7950 = !DILocation(line: 619, column: 40, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7931, file: !1314, line: 619, column: 6)
!7952 = !DILocation(line: 619, column: 6, scope: !7951)
!7953 = !DILocation(line: 619, column: 6, scope: !7931)
!7954 = !DILocation(line: 623, column: 10, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7931, file: !1314, line: 623, column: 6)
!7956 = !DILocation(line: 623, column: 6, scope: !7931)
!7957 = !DILocation(line: 624, column: 34, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7955, file: !1314, line: 623, column: 24)
!7959 = !DILocation(line: 624, column: 3, scope: !7958)
!7960 = !DILocation(line: 625, column: 2, scope: !7958)
!7961 = !DILocation(line: 632, column: 10, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7931, file: !1314, line: 632, column: 6)
!7963 = !DILocation(line: 632, column: 6, scope: !7931)
!7964 = !DILocation(line: 633, column: 34, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7962, file: !1314, line: 632, column: 32)
!7966 = !DILocation(line: 633, column: 3, scope: !7965)
!7967 = !DILocation(line: 634, column: 2, scope: !7965)
!7968 = !DILocation(line: 636, column: 10, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7931, file: !1314, line: 636, column: 6)
!7970 = !DILocation(line: 636, column: 6, scope: !7931)
!7971 = !DILocation(line: 637, column: 33, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7969, file: !1314, line: 636, column: 31)
!7973 = !DILocation(line: 637, column: 3, scope: !7972)
!7974 = !DILocation(line: 638, column: 2, scope: !7972)
!7975 = !DILocation(line: 640, column: 10, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7931, file: !1314, line: 640, column: 6)
!7977 = !DILocation(line: 640, column: 6, scope: !7931)
!7978 = !DILocation(line: 641, column: 33, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7976, file: !1314, line: 640, column: 32)
!7980 = !DILocation(line: 641, column: 3, scope: !7979)
!7981 = !DILocation(line: 642, column: 2, scope: !7979)
!7982 = !DILocation(line: 646, column: 32, scope: !7931)
!7983 = !DILocation(line: 646, column: 2, scope: !7931)
!7984 = !DILocation(line: 648, column: 2, scope: !7931)
!7985 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1314, file: !1314, line: 419, type: !1242, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7986)
!7986 = !{!7987, !7988, !7989, !7990, !7992, !7993, !7994, !7995}
!7987 = !DILocalVariable(name: "dev", arg: 1, scope: !7985, file: !1314, line: 419, type: !1217)
!7988 = !DILocalVariable(name: "cfg", arg: 2, scope: !7985, file: !1314, line: 420, type: !1244)
!7989 = !DILocalVariable(name: "config", scope: !7985, file: !1314, line: 422, type: !7868)
!7990 = !DILocalVariable(name: "data", scope: !7985, file: !1314, line: 423, type: !7991)
!7991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!7992 = !DILocalVariable(name: "parity", scope: !7985, file: !1314, line: 424, type: !5064)
!7993 = !DILocalVariable(name: "stopbits", scope: !7985, file: !1314, line: 425, type: !5064)
!7994 = !DILocalVariable(name: "databits", scope: !7985, file: !1314, line: 426, type: !5064)
!7995 = !DILocalVariable(name: "flowctrl", scope: !7985, file: !1314, line: 428, type: !5064)
!7996 = !DILocation(line: 0, scope: !7985)
!7997 = !DILocation(line: 422, column: 48, scope: !7985)
!7998 = !DILocation(line: 423, column: 38, scope: !7985)
!7999 = !DILocation(line: 424, column: 56, scope: !7985)
!8000 = !DILocation(line: 424, column: 51, scope: !7985)
!8001 = !DILocation(line: 424, column: 26, scope: !7985)
!8002 = !DILocation(line: 425, column: 60, scope: !7985)
!8003 = !DILocation(line: 425, column: 55, scope: !7985)
!8004 = !DILocation(line: 425, column: 28, scope: !7985)
!8005 = !DILocation(line: 426, column: 60, scope: !7985)
!8006 = !DILocation(line: 426, column: 55, scope: !7985)
!8007 = !DILocation(line: 426, column: 28, scope: !7985)
!8008 = !DILocation(line: 428, column: 58, scope: !7985)
!8009 = !DILocation(line: 428, column: 53, scope: !7985)
!8010 = !DILocation(line: 428, column: 28, scope: !7985)
!8011 = !DILocation(line: 431, column: 44, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7985, file: !1314, line: 431, column: 6)
!8013 = !DILocation(line: 438, column: 22, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !7985, file: !1314, line: 437, column: 6)
!8015 = !DILocation(line: 437, column: 6, scope: !7985)
!8016 = !DILocation(line: 448, column: 6, scope: !7985)
!8017 = !DILocation(line: 465, column: 47, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !7985, file: !1314, line: 465, column: 6)
!8019 = !DILocation(line: 475, column: 21, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !7985, file: !1314, line: 475, column: 6)
!8021 = !DILocation(line: 475, column: 6, scope: !7985)
!8022 = !DILocation(line: 476, column: 8, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8024, file: !1314, line: 476, column: 7)
!8024 = distinct !DILexicalBlock(scope: !8020, file: !1314, line: 475, column: 49)
!8025 = !DILocation(line: 477, column: 34, scope: !8023)
!8026 = !DILocation(line: 476, column: 7, scope: !8024)
!8027 = !DILocation(line: 482, column: 27, scope: !7985)
!8028 = !DILocation(line: 482, column: 2, scope: !7985)
!8029 = !DILocation(line: 484, column: 16, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !7985, file: !1314, line: 484, column: 6)
!8031 = !DILocation(line: 484, column: 13, scope: !8030)
!8032 = !DILocation(line: 484, column: 6, scope: !7985)
!8033 = !DILocation(line: 485, column: 3, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8030, file: !1314, line: 484, column: 44)
!8035 = !DILocation(line: 486, column: 2, scope: !8034)
!8036 = !DILocation(line: 488, column: 18, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !7985, file: !1314, line: 488, column: 6)
!8038 = !DILocation(line: 488, column: 15, scope: !8037)
!8039 = !DILocation(line: 488, column: 6, scope: !7985)
!8040 = !DILocation(line: 489, column: 3, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8037, file: !1314, line: 488, column: 48)
!8042 = !DILocation(line: 490, column: 2, scope: !8041)
!8043 = !DILocation(line: 492, column: 18, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !7985, file: !1314, line: 492, column: 6)
!8045 = !DILocation(line: 492, column: 15, scope: !8044)
!8046 = !DILocation(line: 492, column: 6, scope: !7985)
!8047 = !DILocation(line: 493, column: 3, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8044, file: !1314, line: 492, column: 48)
!8049 = !DILocation(line: 494, column: 2, scope: !8048)
!8050 = !DILocation(line: 496, column: 18, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !7985, file: !1314, line: 496, column: 6)
!8052 = !DILocation(line: 496, column: 15, scope: !8051)
!8053 = !DILocation(line: 496, column: 6, scope: !7985)
!8054 = !DILocation(line: 497, column: 3, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8051, file: !1314, line: 496, column: 46)
!8056 = !DILocation(line: 498, column: 2, scope: !8055)
!8057 = !DILocation(line: 500, column: 11, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !7985, file: !1314, line: 500, column: 6)
!8059 = !DILocation(line: 500, column: 29, scope: !8058)
!8060 = !DILocation(line: 500, column: 20, scope: !8058)
!8061 = !DILocation(line: 500, column: 6, scope: !7985)
!8062 = !DILocation(line: 501, column: 3, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8058, file: !1314, line: 500, column: 40)
!8064 = !DILocation(line: 502, column: 26, scope: !8063)
!8065 = !DILocation(line: 502, column: 19, scope: !8063)
!8066 = !DILocation(line: 503, column: 2, scope: !8063)
!8067 = !DILocation(line: 505, column: 26, scope: !7985)
!8068 = !DILocation(line: 505, column: 2, scope: !7985)
!8069 = !DILocation(line: 506, column: 2, scope: !7985)
!8070 = !DILocation(line: 507, column: 1, scope: !7985)
!8071 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1314, file: !1314, line: 509, type: !1255, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8072)
!8072 = !{!8073, !8074, !8075}
!8073 = !DILocalVariable(name: "dev", arg: 1, scope: !8071, file: !1314, line: 509, type: !1217)
!8074 = !DILocalVariable(name: "cfg", arg: 2, scope: !8071, file: !1314, line: 510, type: !1257)
!8075 = !DILocalVariable(name: "data", scope: !8071, file: !1314, line: 512, type: !7991)
!8076 = !DILocation(line: 0, scope: !8071)
!8077 = !DILocation(line: 512, column: 38, scope: !8071)
!8078 = !DILocation(line: 514, column: 24, scope: !8071)
!8079 = !DILocation(line: 514, column: 7, scope: !8071)
!8080 = !DILocation(line: 514, column: 16, scope: !8071)
!8081 = !DILocation(line: 515, column: 41, scope: !8071)
!8082 = !{i32 0, i32 1537}
!8083 = !DILocation(line: 515, column: 16, scope: !8071)
!8084 = !DILocation(line: 515, column: 7, scope: !8071)
!8085 = !DILocation(line: 515, column: 14, scope: !8071)
!8086 = !DILocation(line: 517, column: 3, scope: !8071)
!8087 = !{i32 0, i32 12289}
!8088 = !DILocation(line: 516, column: 19, scope: !8071)
!8089 = !DILocation(line: 516, column: 7, scope: !8071)
!8090 = !DILocation(line: 516, column: 17, scope: !8071)
!8091 = !DILocation(line: 519, column: 3, scope: !8071)
!8092 = !DILocation(line: 519, column: 33, scope: !8071)
!8093 = !DILocation(line: 518, column: 19, scope: !8071)
!8094 = !DILocation(line: 518, column: 7, scope: !8071)
!8095 = !DILocation(line: 518, column: 17, scope: !8071)
!8096 = !DILocation(line: 521, column: 3, scope: !8071)
!8097 = !{i32 0, i32 769}
!8098 = !DILocation(line: 520, column: 19, scope: !8071)
!8099 = !DILocation(line: 520, column: 7, scope: !8071)
!8100 = !DILocation(line: 520, column: 17, scope: !8071)
!8101 = !DILocation(line: 522, column: 2, scope: !8071)
!8102 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1314, file: !1314, line: 205, type: !8103, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8105)
!8103 = !DISubroutineType(types: !8104)
!8104 = !{!121, !1217}
!8105 = !{!8106, !8107}
!8106 = !DILocalVariable(name: "dev", arg: 1, scope: !8102, file: !1314, line: 205, type: !1217)
!8107 = !DILocalVariable(name: "config", scope: !8102, file: !1314, line: 207, type: !7868)
!8108 = !DILocation(line: 0, scope: !8102)
!8109 = !DILocation(line: 207, column: 48, scope: !8102)
!8110 = !DILocation(line: 209, column: 36, scope: !8102)
!8111 = !DILocation(line: 209, column: 9, scope: !8102)
!8112 = !DILocation(line: 209, column: 2, scope: !8102)
!8113 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1314, file: !1314, line: 270, type: !8114, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8116)
!8114 = !DISubroutineType(types: !8115)
!8115 = !{!1183, !121}
!8116 = !{!8117}
!8117 = !DILocalVariable(name: "parity", arg: 1, scope: !8113, file: !1314, line: 270, type: !121)
!8118 = !DILocation(line: 0, scope: !8113)
!8119 = !DILocation(line: 272, column: 2, scope: !8113)
!8120 = !DILocation(line: 281, column: 1, scope: !8113)
!8121 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1314, file: !1314, line: 220, type: !8103, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8122)
!8122 = !{!8123, !8124}
!8123 = !DILocalVariable(name: "dev", arg: 1, scope: !8121, file: !1314, line: 220, type: !1217)
!8124 = !DILocalVariable(name: "config", scope: !8121, file: !1314, line: 222, type: !7868)
!8125 = !DILocation(line: 0, scope: !8121)
!8126 = !DILocation(line: 222, column: 48, scope: !8121)
!8127 = !DILocation(line: 224, column: 44, scope: !8121)
!8128 = !DILocation(line: 224, column: 9, scope: !8121)
!8129 = !DILocation(line: 224, column: 2, scope: !8121)
!8130 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1314, file: !1314, line: 304, type: !8131, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8133)
!8131 = !DISubroutineType(types: !8132)
!8132 = !{!1197, !121}
!8133 = !{!8134}
!8134 = !DILocalVariable(name: "sb", arg: 1, scope: !8130, file: !1314, line: 304, type: !121)
!8135 = !DILocation(line: 0, scope: !8130)
!8136 = !DILocation(line: 306, column: 2, scope: !8130)
!8137 = !DILocation(line: 0, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8130, file: !1314, line: 306, column: 14)
!8139 = !DILocation(line: 323, column: 1, scope: !8130)
!8140 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1314, file: !1314, line: 235, type: !8103, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8141)
!8141 = !{!8142, !8143}
!8142 = !DILocalVariable(name: "dev", arg: 1, scope: !8140, file: !1314, line: 235, type: !1217)
!8143 = !DILocalVariable(name: "config", scope: !8140, file: !1314, line: 237, type: !7868)
!8144 = !DILocation(line: 0, scope: !8140)
!8145 = !DILocation(line: 237, column: 48, scope: !8140)
!8146 = !DILocation(line: 239, column: 39, scope: !8140)
!8147 = !DILocation(line: 239, column: 9, scope: !8140)
!8148 = !DILocation(line: 239, column: 2, scope: !8140)
!8149 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1314, file: !1314, line: 355, type: !8150, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8152)
!8150 = !DISubroutineType(types: !8151)
!8151 = !{!1190, !121, !121}
!8152 = !{!8153, !8154}
!8153 = !DILocalVariable(name: "db", arg: 1, scope: !8149, file: !1314, line: 355, type: !121)
!8154 = !DILocalVariable(name: "p", arg: 2, scope: !8149, file: !1314, line: 356, type: !121)
!8155 = !DILocation(line: 0, scope: !8149)
!8156 = !DILocation(line: 358, column: 2, scope: !8149)
!8157 = !DILocation(line: 384, column: 1, scope: !8149)
!8158 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1314, file: !1314, line: 250, type: !8103, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8159)
!8159 = !{!8160, !8161}
!8160 = !DILocalVariable(name: "dev", arg: 1, scope: !8158, file: !1314, line: 250, type: !1217)
!8161 = !DILocalVariable(name: "config", scope: !8158, file: !1314, line: 252, type: !7868)
!8162 = !DILocation(line: 0, scope: !8158)
!8163 = !DILocation(line: 252, column: 48, scope: !8158)
!8164 = !DILocation(line: 254, column: 40, scope: !8158)
!8165 = !DILocation(line: 254, column: 9, scope: !8158)
!8166 = !DILocation(line: 254, column: 2, scope: !8158)
!8167 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1314, file: !1314, line: 409, type: !8168, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8170)
!8168 = !DISubroutineType(types: !8169)
!8169 = !{!1203, !121}
!8170 = !{!8171}
!8171 = !DILocalVariable(name: "fc", arg: 1, scope: !8167, file: !1314, line: 409, type: !121)
!8172 = !DILocation(line: 0, scope: !8167)
!8173 = !DILocation(line: 411, column: 9, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8167, file: !1314, line: 411, column: 6)
!8175 = !DILocation(line: 416, column: 1, scope: !8167)
!8176 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8177, file: !8177, line: 967, type: !8178, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8180)
!8177 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8178 = !DISubroutineType(types: !8179)
!8179 = !{!121, !1258}
!8180 = !{!8181}
!8181 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8176, file: !8177, line: 967, type: !1258)
!8182 = !DILocation(line: 0, scope: !8176)
!8183 = !DILocation(line: 969, column: 21, scope: !8176)
!8184 = !DILocation(line: 969, column: 3, scope: !8176)
!8185 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8177, file: !8177, line: 601, type: !8178, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8186)
!8186 = !{!8187}
!8187 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8185, file: !8177, line: 601, type: !1258)
!8188 = !DILocation(line: 0, scope: !8185)
!8189 = !DILocation(line: 603, column: 21, scope: !8185)
!8190 = !DILocation(line: 603, column: 3, scope: !8185)
!8191 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8177, file: !8177, line: 820, type: !8178, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8192)
!8192 = !{!8193}
!8193 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8191, file: !8177, line: 820, type: !1258)
!8194 = !DILocation(line: 0, scope: !8191)
!8195 = !DILocation(line: 822, column: 21, scope: !8191)
!8196 = !DILocation(line: 822, column: 3, scope: !8191)
!8197 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8177, file: !8177, line: 547, type: !8178, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8198)
!8198 = !{!8199}
!8199 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8197, file: !8177, line: 547, type: !1258)
!8200 = !DILocation(line: 0, scope: !8197)
!8201 = !DILocation(line: 549, column: 21, scope: !8197)
!8202 = !DILocation(line: 549, column: 3, scope: !8197)
!8203 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1314, file: !1314, line: 257, type: !8204, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8206)
!8204 = !DISubroutineType(types: !8205)
!8205 = !{!121, !1183}
!8206 = !{!8207}
!8207 = !DILocalVariable(name: "parity", arg: 1, scope: !8203, file: !1314, line: 257, type: !1183)
!8208 = !DILocation(line: 0, scope: !8203)
!8209 = !DILocation(line: 259, column: 2, scope: !8203)
!8210 = !DILocation(line: 268, column: 1, scope: !8203)
!8211 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1314, file: !1314, line: 283, type: !8212, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8214)
!8212 = !DISubroutineType(types: !8213)
!8213 = !{!121, !1197}
!8214 = !{!8215}
!8215 = !DILocalVariable(name: "sb", arg: 1, scope: !8211, file: !1314, line: 283, type: !1197)
!8216 = !DILocation(line: 0, scope: !8211)
!8217 = !DILocation(line: 285, column: 2, scope: !8211)
!8218 = !DILocation(line: 0, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8211, file: !1314, line: 285, column: 14)
!8220 = !DILocation(line: 302, column: 1, scope: !8211)
!8221 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1314, file: !1314, line: 325, type: !8222, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8224)
!8222 = !DISubroutineType(types: !8223)
!8223 = !{!121, !1190, !1183}
!8224 = !{!8225, !8226}
!8225 = !DILocalVariable(name: "db", arg: 1, scope: !8221, file: !1314, line: 325, type: !1190)
!8226 = !DILocalVariable(name: "p", arg: 2, scope: !8221, file: !1314, line: 326, type: !1183)
!8227 = !DILocation(line: 0, scope: !8221)
!8228 = !DILocation(line: 328, column: 2, scope: !8221)
!8229 = !DILocation(line: 353, column: 1, scope: !8221)
!8230 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1314, file: !1314, line: 393, type: !8231, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8233)
!8231 = !DISubroutineType(types: !8232)
!8232 = !{!121, !1203}
!8233 = !{!8234}
!8234 = !DILocalVariable(name: "fc", arg: 1, scope: !8230, file: !1314, line: 393, type: !1203)
!8235 = !DILocation(line: 0, scope: !8230)
!8236 = !DILocation(line: 395, column: 9, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8230, file: !1314, line: 395, column: 6)
!8238 = !DILocation(line: 400, column: 1, scope: !8230)
!8239 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8177, file: !8177, line: 424, type: !8240, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8242)
!8240 = !DISubroutineType(types: !8241)
!8241 = !{null, !1258}
!8242 = !{!8243}
!8243 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8239, file: !8177, line: 424, type: !1258)
!8244 = !DILocation(line: 0, scope: !8239)
!8245 = !DILocation(line: 426, column: 3, scope: !8239)
!8246 = !DILocation(line: 427, column: 1, scope: !8239)
!8247 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1314, file: !1314, line: 197, type: !8248, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8250)
!8248 = !DISubroutineType(types: !8249)
!8249 = !{null, !1217, !121}
!8250 = !{!8251, !8252, !8253}
!8251 = !DILocalVariable(name: "dev", arg: 1, scope: !8247, file: !1314, line: 197, type: !1217)
!8252 = !DILocalVariable(name: "parity", arg: 2, scope: !8247, file: !1314, line: 198, type: !121)
!8253 = !DILocalVariable(name: "config", scope: !8247, file: !1314, line: 200, type: !7868)
!8254 = !DILocation(line: 0, scope: !8247)
!8255 = !DILocation(line: 200, column: 48, scope: !8247)
!8256 = !DILocation(line: 202, column: 29, scope: !8247)
!8257 = !DILocation(line: 202, column: 2, scope: !8247)
!8258 = !DILocation(line: 203, column: 1, scope: !8247)
!8259 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1314, file: !1314, line: 212, type: !8248, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8260)
!8260 = !{!8261, !8262, !8263}
!8261 = !DILocalVariable(name: "dev", arg: 1, scope: !8259, file: !1314, line: 212, type: !1217)
!8262 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8259, file: !1314, line: 213, type: !121)
!8263 = !DILocalVariable(name: "config", scope: !8259, file: !1314, line: 215, type: !7868)
!8264 = !DILocation(line: 0, scope: !8259)
!8265 = !DILocation(line: 215, column: 48, scope: !8259)
!8266 = !DILocation(line: 217, column: 37, scope: !8259)
!8267 = !DILocation(line: 217, column: 2, scope: !8259)
!8268 = !DILocation(line: 218, column: 1, scope: !8259)
!8269 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1314, file: !1314, line: 227, type: !8248, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8270)
!8270 = !{!8271, !8272, !8273}
!8271 = !DILocalVariable(name: "dev", arg: 1, scope: !8269, file: !1314, line: 227, type: !1217)
!8272 = !DILocalVariable(name: "databits", arg: 2, scope: !8269, file: !1314, line: 228, type: !121)
!8273 = !DILocalVariable(name: "config", scope: !8269, file: !1314, line: 230, type: !7868)
!8274 = !DILocation(line: 0, scope: !8269)
!8275 = !DILocation(line: 230, column: 48, scope: !8269)
!8276 = !DILocation(line: 232, column: 32, scope: !8269)
!8277 = !DILocation(line: 232, column: 2, scope: !8269)
!8278 = !DILocation(line: 233, column: 1, scope: !8269)
!8279 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1314, file: !1314, line: 242, type: !8248, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8280)
!8280 = !{!8281, !8282, !8283}
!8281 = !DILocalVariable(name: "dev", arg: 1, scope: !8279, file: !1314, line: 242, type: !1217)
!8282 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8279, file: !1314, line: 243, type: !121)
!8283 = !DILocalVariable(name: "config", scope: !8279, file: !1314, line: 245, type: !7868)
!8284 = !DILocation(line: 0, scope: !8279)
!8285 = !DILocation(line: 245, column: 48, scope: !8279)
!8286 = !DILocation(line: 247, column: 33, scope: !8279)
!8287 = !DILocation(line: 247, column: 2, scope: !8279)
!8288 = !DILocation(line: 248, column: 1, scope: !8279)
!8289 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1314, file: !1314, line: 107, type: !8248, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8290)
!8290 = !{!8291, !8292, !8293, !8294, !8295}
!8291 = !DILocalVariable(name: "dev", arg: 1, scope: !8289, file: !1314, line: 107, type: !1217)
!8292 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8289, file: !1314, line: 107, type: !121)
!8293 = !DILocalVariable(name: "config", scope: !8289, file: !1314, line: 109, type: !7868)
!8294 = !DILocalVariable(name: "data", scope: !8289, file: !1314, line: 110, type: !7991)
!8295 = !DILocalVariable(name: "clock_rate", scope: !8289, file: !1314, line: 112, type: !121)
!8296 = !DILocation(line: 0, scope: !8289)
!8297 = !DILocation(line: 109, column: 48, scope: !8289)
!8298 = !DILocation(line: 110, column: 38, scope: !8289)
!8299 = !DILocation(line: 112, column: 2, scope: !8289)
!8300 = !DILocation(line: 123, column: 36, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !1314, line: 123, column: 7)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !1314, line: 122, column: 9)
!8303 = distinct !DILexicalBlock(scope: !8289, file: !1314, line: 115, column: 6)
!8304 = !DILocation(line: 124, column: 42, scope: !8301)
!8305 = !DILocation(line: 123, column: 7, scope: !8301)
!8306 = !DILocation(line: 125, column: 22, scope: !8301)
!8307 = !DILocation(line: 123, column: 7, scope: !8302)
!8308 = !DILocation(line: 176, column: 36, scope: !8289)
!8309 = !DILocation(line: 176, column: 3, scope: !8289)
!8310 = !DILocation(line: 179, column: 32, scope: !8289)
!8311 = !DILocation(line: 180, column: 10, scope: !8289)
!8312 = !DILocation(line: 179, column: 3, scope: !8289)
!8313 = !DILocation(line: 195, column: 1, scope: !8289)
!8314 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8177, file: !8177, line: 410, type: !8240, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8315)
!8315 = !{!8316}
!8316 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8314, file: !8177, line: 410, type: !1258)
!8317 = !DILocation(line: 0, scope: !8314)
!8318 = !DILocation(line: 412, column: 3, scope: !8314)
!8319 = !DILocation(line: 413, column: 1, scope: !8314)
!8320 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !671, file: !671, line: 216, type: !1291, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8321)
!8321 = !{!8322, !8323, !8324, !8325}
!8322 = !DILocalVariable(name: "dev", arg: 1, scope: !8320, file: !671, line: 216, type: !1217)
!8323 = !DILocalVariable(name: "sys", arg: 2, scope: !8320, file: !671, line: 217, type: !767)
!8324 = !DILocalVariable(name: "rate", arg: 3, scope: !8320, file: !671, line: 218, type: !723)
!8325 = !DILocalVariable(name: "api", scope: !8320, file: !671, line: 220, type: !1269)
!8326 = !DILocation(line: 0, scope: !8320)
!8327 = !DILocation(line: 221, column: 49, scope: !8320)
!8328 = !DILocation(line: 223, column: 11, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8320, file: !671, line: 223, column: 6)
!8330 = !DILocation(line: 223, column: 20, scope: !8329)
!8331 = !DILocation(line: 223, column: 6, scope: !8320)
!8332 = !DILocation(line: 227, column: 9, scope: !8320)
!8333 = !DILocation(line: 227, column: 2, scope: !8320)
!8334 = !DILocation(line: 228, column: 1, scope: !8320)
!8335 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8177, file: !8177, line: 615, type: !8336, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8338)
!8336 = !DISubroutineType(types: !8337)
!8337 = !{null, !1258, !121}
!8338 = !{!8339, !8340}
!8339 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8335, file: !8177, line: 615, type: !1258)
!8340 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8335, file: !8177, line: 615, type: !121)
!8341 = !DILocation(line: 0, scope: !8335)
!8342 = !DILocation(line: 617, column: 3, scope: !8335)
!8343 = !DILocation(line: 618, column: 1, scope: !8335)
!8344 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8177, file: !8177, line: 1020, type: !8345, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8347)
!8345 = !DISubroutineType(types: !8346)
!8346 = !{null, !1258, !121, !121, !121}
!8347 = !{!8348, !8349, !8350, !8351}
!8348 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8344, file: !8177, line: 1020, type: !1258)
!8349 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8344, file: !8177, line: 1020, type: !121)
!8350 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8344, file: !8177, line: 1020, type: !121)
!8351 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8344, file: !8177, line: 1021, type: !121)
!8352 = !DILocation(line: 0, scope: !8344)
!8353 = !DILocation(line: 1029, column: 30, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8355, file: !8177, line: 1028, column: 3)
!8355 = distinct !DILexicalBlock(scope: !8344, file: !8177, line: 1023, column: 7)
!8356 = !DILocation(line: 1029, column: 19, scope: !8354)
!8357 = !DILocation(line: 1029, column: 13, scope: !8354)
!8358 = !DILocation(line: 1029, column: 17, scope: !8354)
!8359 = !DILocation(line: 1031, column: 1, scope: !8344)
!8360 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8177, file: !8177, line: 949, type: !8336, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8361)
!8361 = !{!8362, !8363}
!8362 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8360, file: !8177, line: 949, type: !1258)
!8363 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8360, file: !8177, line: 949, type: !121)
!8364 = !DILocation(line: 0, scope: !8360)
!8365 = !DILocation(line: 951, column: 3, scope: !8360)
!8366 = !DILocation(line: 952, column: 1, scope: !8360)
!8367 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8177, file: !8177, line: 588, type: !8336, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8368)
!8368 = !{!8369, !8370}
!8369 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8367, file: !8177, line: 588, type: !1258)
!8370 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8367, file: !8177, line: 588, type: !121)
!8371 = !DILocation(line: 0, scope: !8367)
!8372 = !DILocation(line: 590, column: 3, scope: !8367)
!8373 = !DILocation(line: 591, column: 1, scope: !8367)
!8374 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8177, file: !8177, line: 805, type: !8336, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8375)
!8375 = !{!8376, !8377}
!8376 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8374, file: !8177, line: 805, type: !1258)
!8377 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8374, file: !8177, line: 805, type: !121)
!8378 = !DILocation(line: 0, scope: !8374)
!8379 = !DILocation(line: 807, column: 3, scope: !8374)
!8380 = !DILocation(line: 808, column: 1, scope: !8374)
!8381 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8177, file: !8177, line: 532, type: !8336, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8382)
!8382 = !{!8383, !8384}
!8383 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8381, file: !8177, line: 532, type: !1258)
!8384 = !DILocalVariable(name: "Parity", arg: 2, scope: !8381, file: !8177, line: 532, type: !121)
!8385 = !DILocation(line: 0, scope: !8381)
!8386 = !DILocation(line: 534, column: 3, scope: !8381)
!8387 = !DILocation(line: 535, column: 1, scope: !8381)
!8388 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8177, file: !8177, line: 1770, type: !8178, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8389)
!8389 = !{!8390}
!8390 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8388, file: !8177, line: 1770, type: !1258)
!8391 = !DILocation(line: 0, scope: !8388)
!8392 = !DILocation(line: 1772, column: 11, scope: !8388)
!8393 = !DILocation(line: 1772, column: 46, scope: !8388)
!8394 = !DILocation(line: 1772, column: 3, scope: !8388)
!8395 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8177, file: !8177, line: 1737, type: !8178, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8396)
!8396 = !{!8397}
!8397 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8395, file: !8177, line: 1737, type: !1258)
!8398 = !DILocation(line: 0, scope: !8395)
!8399 = !DILocation(line: 1739, column: 11, scope: !8395)
!8400 = !DILocation(line: 1739, column: 3, scope: !8395)
!8401 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8177, file: !8177, line: 1748, type: !8178, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8402)
!8402 = !{!8403}
!8403 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8401, file: !8177, line: 1748, type: !1258)
!8404 = !DILocation(line: 0, scope: !8401)
!8405 = !DILocation(line: 1750, column: 11, scope: !8401)
!8406 = !DILocation(line: 1750, column: 45, scope: !8401)
!8407 = !DILocation(line: 1750, column: 3, scope: !8401)
!8408 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8177, file: !8177, line: 1827, type: !8178, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8409)
!8409 = !{!8410}
!8410 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8408, file: !8177, line: 1827, type: !1258)
!8411 = !DILocation(line: 0, scope: !8408)
!8412 = !DILocation(line: 1829, column: 11, scope: !8408)
!8413 = !DILocation(line: 1829, column: 46, scope: !8408)
!8414 = !DILocation(line: 1829, column: 3, scope: !8408)
!8415 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8177, file: !8177, line: 1992, type: !8240, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8416)
!8416 = !{!8417}
!8417 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8415, file: !8177, line: 1992, type: !1258)
!8418 = !DILocation(line: 0, scope: !8415)
!8419 = !DILocation(line: 1994, column: 3, scope: !8415)
!8420 = !DILocation(line: 1995, column: 1, scope: !8415)
!8421 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8177, file: !8177, line: 1934, type: !8240, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8422)
!8422 = !{!8423, !8424}
!8423 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8421, file: !8177, line: 1934, type: !1258)
!8424 = !DILocalVariable(name: "tmpreg", scope: !8421, file: !8177, line: 1936, type: !120)
!8425 = !DILocation(line: 0, scope: !8421)
!8426 = !DILocation(line: 1936, column: 3, scope: !8421)
!8427 = !DILocation(line: 1936, column: 17, scope: !8421)
!8428 = !DILocation(line: 1937, column: 20, scope: !8421)
!8429 = !DILocation(line: 1937, column: 10, scope: !8421)
!8430 = !DILocation(line: 1938, column: 10, scope: !8421)
!8431 = !DILocation(line: 1939, column: 20, scope: !8421)
!8432 = !DILocation(line: 1939, column: 10, scope: !8421)
!8433 = !DILocation(line: 1940, column: 10, scope: !8421)
!8434 = !DILocation(line: 1941, column: 1, scope: !8421)
!8435 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8177, file: !8177, line: 1877, type: !8240, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8436)
!8436 = !{!8437, !8438}
!8437 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8435, file: !8177, line: 1877, type: !1258)
!8438 = !DILocalVariable(name: "tmpreg", scope: !8435, file: !8177, line: 1879, type: !120)
!8439 = !DILocation(line: 0, scope: !8435)
!8440 = !DILocation(line: 1879, column: 3, scope: !8435)
!8441 = !DILocation(line: 1879, column: 17, scope: !8435)
!8442 = !DILocation(line: 1880, column: 20, scope: !8435)
!8443 = !DILocation(line: 1880, column: 10, scope: !8435)
!8444 = !DILocation(line: 1881, column: 10, scope: !8435)
!8445 = !DILocation(line: 1882, column: 20, scope: !8435)
!8446 = !DILocation(line: 1882, column: 10, scope: !8435)
!8447 = !DILocation(line: 1883, column: 10, scope: !8435)
!8448 = !DILocation(line: 1884, column: 1, scope: !8435)
!8449 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8177, file: !8177, line: 1896, type: !8240, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8450)
!8450 = !{!8451, !8452}
!8451 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8449, file: !8177, line: 1896, type: !1258)
!8452 = !DILocalVariable(name: "tmpreg", scope: !8449, file: !8177, line: 1898, type: !120)
!8453 = !DILocation(line: 0, scope: !8449)
!8454 = !DILocation(line: 1898, column: 3, scope: !8449)
!8455 = !DILocation(line: 1898, column: 17, scope: !8449)
!8456 = !DILocation(line: 1899, column: 20, scope: !8449)
!8457 = !DILocation(line: 1899, column: 10, scope: !8449)
!8458 = !DILocation(line: 1900, column: 10, scope: !8449)
!8459 = !DILocation(line: 1901, column: 20, scope: !8449)
!8460 = !DILocation(line: 1901, column: 10, scope: !8449)
!8461 = !DILocation(line: 1902, column: 10, scope: !8449)
!8462 = !DILocation(line: 1903, column: 1, scope: !8449)
!8463 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8177, file: !8177, line: 1915, type: !8240, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8464)
!8464 = !{!8465, !8466}
!8465 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8463, file: !8177, line: 1915, type: !1258)
!8466 = !DILocalVariable(name: "tmpreg", scope: !8463, file: !8177, line: 1917, type: !120)
!8467 = !DILocation(line: 0, scope: !8463)
!8468 = !DILocation(line: 1917, column: 3, scope: !8463)
!8469 = !DILocation(line: 1917, column: 17, scope: !8463)
!8470 = !DILocation(line: 1918, column: 20, scope: !8463)
!8471 = !DILocation(line: 1918, column: 10, scope: !8463)
!8472 = !DILocation(line: 1919, column: 10, scope: !8463)
!8473 = !DILocation(line: 1920, column: 20, scope: !8463)
!8474 = !DILocation(line: 1920, column: 10, scope: !8463)
!8475 = !DILocation(line: 1921, column: 10, scope: !8463)
!8476 = !DILocation(line: 1922, column: 1, scope: !8463)
!8477 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8177, file: !8177, line: 1814, type: !8178, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8478)
!8478 = !{!8479}
!8479 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8477, file: !8177, line: 1814, type: !1258)
!8480 = !DILocation(line: 0, scope: !8477)
!8481 = !DILocation(line: 1816, column: 11, scope: !8477)
!8482 = !DILocation(line: 1816, column: 46, scope: !8477)
!8483 = !DILocation(line: 1816, column: 3, scope: !8477)
!8484 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8177, file: !8177, line: 2426, type: !8485, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8487)
!8485 = !DISubroutineType(types: !8486)
!8486 = !{null, !1258, !154}
!8487 = !{!8488, !8489}
!8488 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8484, file: !8177, line: 2426, type: !1258)
!8489 = !DILocalVariable(name: "Value", arg: 2, scope: !8484, file: !8177, line: 2426, type: !154)
!8490 = !DILocation(line: 0, scope: !8484)
!8491 = !DILocation(line: 2428, column: 16, scope: !8484)
!8492 = !DILocation(line: 2428, column: 11, scope: !8484)
!8493 = !DILocation(line: 2428, column: 14, scope: !8484)
!8494 = !DILocation(line: 2429, column: 1, scope: !8484)
!8495 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8177, file: !8177, line: 1792, type: !8178, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8496)
!8496 = !{!8497}
!8497 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8495, file: !8177, line: 1792, type: !1258)
!8498 = !DILocation(line: 0, scope: !8495)
!8499 = !DILocation(line: 1794, column: 11, scope: !8495)
!8500 = !DILocation(line: 1794, column: 47, scope: !8495)
!8501 = !DILocation(line: 1794, column: 3, scope: !8495)
!8502 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8177, file: !8177, line: 2403, type: !8503, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8505)
!8503 = !DISubroutineType(types: !8504)
!8504 = !{!154, !1258}
!8505 = !{!8506}
!8506 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8502, file: !8177, line: 2403, type: !1258)
!8507 = !DILocation(line: 0, scope: !8502)
!8508 = !DILocation(line: 2405, column: 20, scope: !8502)
!8509 = !DILocation(line: 2405, column: 10, scope: !8502)
!8510 = !DILocation(line: 2405, column: 3, scope: !8502)
!8511 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1314, file: !1314, line: 1583, type: !1238, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8512)
!8512 = !{!8513, !8514, !8515, !8516, !8517, !8518}
!8513 = !DILocalVariable(name: "dev", arg: 1, scope: !8511, file: !1314, line: 1583, type: !1217)
!8514 = !DILocalVariable(name: "config", scope: !8511, file: !1314, line: 1585, type: !7868)
!8515 = !DILocalVariable(name: "data", scope: !8511, file: !1314, line: 1586, type: !7991)
!8516 = !DILocalVariable(name: "ll_parity", scope: !8511, file: !1314, line: 1587, type: !121)
!8517 = !DILocalVariable(name: "ll_datawidth", scope: !8511, file: !1314, line: 1588, type: !121)
!8518 = !DILocalVariable(name: "err", scope: !8511, file: !1314, line: 1589, type: !103)
!8519 = !DILocation(line: 0, scope: !8511)
!8520 = !DILocation(line: 1585, column: 48, scope: !8511)
!8521 = !DILocation(line: 1586, column: 38, scope: !8511)
!8522 = !DILocation(line: 1591, column: 2, scope: !8511)
!8523 = !DILocation(line: 1593, column: 29, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8511, file: !1314, line: 1593, column: 6)
!8525 = !DILocation(line: 1593, column: 7, scope: !8524)
!8526 = !DILocation(line: 1593, column: 6, scope: !8511)
!8527 = !DILocation(line: 1599, column: 31, scope: !8511)
!8528 = !DILocation(line: 1599, column: 71, scope: !8511)
!8529 = !DILocation(line: 1599, column: 8, scope: !8511)
!8530 = !DILocation(line: 1600, column: 10, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8511, file: !1314, line: 1600, column: 6)
!8532 = !DILocation(line: 1600, column: 6, scope: !8511)
!8533 = !DILocation(line: 1616, column: 36, scope: !8511)
!8534 = !DILocation(line: 1616, column: 8, scope: !8511)
!8535 = !DILocation(line: 1617, column: 10, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8511, file: !1314, line: 1617, column: 6)
!8537 = !DILocation(line: 1617, column: 6, scope: !8511)
!8538 = !DILocation(line: 1621, column: 27, scope: !8511)
!8539 = !DILocation(line: 1621, column: 2, scope: !8511)
!8540 = !DILocation(line: 1624, column: 40, scope: !8511)
!8541 = !DILocation(line: 1624, column: 2, scope: !8511)
!8542 = !DILocation(line: 1630, column: 14, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8511, file: !1314, line: 1630, column: 6)
!8544 = !DILocation(line: 1630, column: 6, scope: !8511)
!8545 = !DILocation(line: 1638, column: 2, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8547, file: !1314, line: 1634, column: 34)
!8547 = distinct !DILexicalBlock(scope: !8543, file: !1314, line: 1634, column: 13)
!8548 = !DILocation(line: 0, scope: !8543)
!8549 = !DILocation(line: 1649, column: 35, scope: !8511)
!8550 = !DILocation(line: 1649, column: 2, scope: !8511)
!8551 = !DILocation(line: 1654, column: 14, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8511, file: !1314, line: 1654, column: 6)
!8553 = !DILocation(line: 1654, column: 6, scope: !8511)
!8554 = !DILocation(line: 1655, column: 3, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8552, file: !1314, line: 1654, column: 31)
!8556 = !DILocation(line: 1656, column: 2, scope: !8555)
!8557 = !DILocation(line: 1659, column: 37, scope: !8511)
!8558 = !DILocation(line: 1659, column: 2, scope: !8511)
!8559 = !DILocation(line: 1662, column: 14, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8511, file: !1314, line: 1662, column: 6)
!8561 = !DILocation(line: 1662, column: 6, scope: !8511)
!8562 = !DILocation(line: 1663, column: 37, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8560, file: !1314, line: 1662, column: 27)
!8564 = !DILocation(line: 1663, column: 3, scope: !8563)
!8565 = !DILocation(line: 1664, column: 2, scope: !8563)
!8566 = !DILocation(line: 1684, column: 26, scope: !8511)
!8567 = !DILocation(line: 1684, column: 2, scope: !8511)
!8568 = !DILocation(line: 1722, column: 2, scope: !8511)
!8569 = !DILocation(line: 1724, column: 1, scope: !8511)
!8570 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1314, file: !1314, line: 651, type: !8571, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8573)
!8571 = !DISubroutineType(types: !8572)
!8572 = !{null, !1217}
!8573 = !{!8574, !8575, !8576}
!8574 = !DILocalVariable(name: "dev", arg: 1, scope: !8570, file: !1314, line: 651, type: !1217)
!8575 = !DILocalVariable(name: "data", scope: !8570, file: !1314, line: 653, type: !7991)
!8576 = !DILocalVariable(name: "clk", scope: !8570, file: !1314, line: 654, type: !8577)
!8577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1217)
!8578 = !DILocation(line: 0, scope: !8570)
!8579 = !DILocation(line: 653, column: 38, scope: !8570)
!8580 = !DILocation(line: 656, column: 8, scope: !8570)
!8581 = !DILocation(line: 656, column: 14, scope: !8570)
!8582 = !DILocation(line: 657, column: 1, scope: !8570)
!8583 = distinct !DISubprogram(name: "device_is_ready", scope: !7006, file: !7006, line: 47, type: !8584, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8586)
!8584 = !DISubroutineType(types: !8585)
!8585 = !{!157, !1217}
!8586 = !{!8587}
!8587 = !DILocalVariable(name: "dev", arg: 1, scope: !8583, file: !7006, line: 47, type: !1217)
!8588 = !DILocation(line: 0, scope: !8583)
!8589 = !DILocation(line: 55, column: 2, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8583, file: !7006, line: 55, column: 2)
!8591 = !{i64 2155368706}
!8592 = !DILocation(line: 56, column: 9, scope: !8583)
!8593 = !DILocation(line: 56, column: 2, scope: !8583)
!8594 = distinct !DISubprogram(name: "clock_control_on", scope: !671, file: !671, line: 123, type: !1276, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8595)
!8595 = !{!8596, !8597, !8598}
!8596 = !DILocalVariable(name: "dev", arg: 1, scope: !8594, file: !671, line: 123, type: !1217)
!8597 = !DILocalVariable(name: "sys", arg: 2, scope: !8594, file: !671, line: 124, type: !767)
!8598 = !DILocalVariable(name: "api", scope: !8594, file: !671, line: 126, type: !1269)
!8599 = !DILocation(line: 0, scope: !8594)
!8600 = !DILocation(line: 127, column: 49, scope: !8594)
!8601 = !DILocation(line: 129, column: 14, scope: !8594)
!8602 = !DILocation(line: 129, column: 9, scope: !8594)
!8603 = !DILocation(line: 129, column: 2, scope: !8594)
!8604 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1365, file: !1365, line: 342, type: !8605, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8607)
!8605 = !DISubroutineType(types: !8606)
!8606 = !{!103, !1415, !154}
!8607 = !{!8608, !8609, !8610, !8611}
!8608 = !DILocalVariable(name: "config", arg: 1, scope: !8604, file: !1365, line: 342, type: !1415)
!8609 = !DILocalVariable(name: "id", arg: 2, scope: !8604, file: !1365, line: 343, type: !154)
!8610 = !DILocalVariable(name: "ret", scope: !8604, file: !1365, line: 345, type: !103)
!8611 = !DILocalVariable(name: "state", scope: !8604, file: !1365, line: 346, type: !1368)
!8612 = !DILocation(line: 0, scope: !8604)
!8613 = !DILocation(line: 346, column: 2, scope: !8604)
!8614 = !DILocation(line: 348, column: 8, scope: !8604)
!8615 = !DILocation(line: 349, column: 10, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8604, file: !1365, line: 349, column: 6)
!8617 = !DILocation(line: 349, column: 6, scope: !8604)
!8618 = !DILocation(line: 353, column: 44, scope: !8604)
!8619 = !DILocation(line: 353, column: 9, scope: !8604)
!8620 = !DILocation(line: 353, column: 2, scope: !8604)
!8621 = !DILocation(line: 354, column: 1, scope: !8604)
!8622 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8177, file: !8177, line: 497, type: !8336, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8623)
!8623 = !{!8624, !8625, !8626}
!8624 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8622, file: !8177, line: 497, type: !1258)
!8625 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !8622, file: !8177, line: 497, type: !121)
!8626 = !DILocalVariable(name: "val", scope: !8627, file: !8177, line: 499, type: !121)
!8627 = distinct !DILexicalBlock(scope: !8622, file: !8177, line: 499, column: 3)
!8628 = !DILocation(line: 0, scope: !8622)
!8629 = !DILocation(line: 499, column: 3, scope: !8627)
!8630 = !DILocalVariable(name: "addr", arg: 1, scope: !8631, file: !4796, line: 476, type: !1310)
!8631 = distinct !DISubprogram(name: "__LDREXW", scope: !4796, file: !4796, line: 476, type: !8632, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8634)
!8632 = !DISubroutineType(types: !8633)
!8633 = !{!121, !1310}
!8634 = !{!8630, !8635}
!8635 = !DILocalVariable(name: "result", scope: !8631, file: !4796, line: 478, type: !121)
!8636 = !DILocation(line: 0, scope: !8631, inlinedAt: !8637)
!8637 = distinct !DILocation(line: 499, column: 3, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8627, file: !8177, line: 499, column: 3)
!8639 = !DILocation(line: 480, column: 4, scope: !8631, inlinedAt: !8637)
!8640 = !{i64 3758025}
!8641 = !DILocation(line: 499, column: 3, scope: !8638)
!8642 = !DILocation(line: 0, scope: !8627)
!8643 = !DILocalVariable(name: "value", arg: 1, scope: !8644, file: !4796, line: 527, type: !121)
!8644 = distinct !DISubprogram(name: "__STREXW", scope: !4796, file: !4796, line: 527, type: !8645, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8647)
!8645 = !DISubroutineType(types: !8646)
!8646 = !{!121, !121, !1310}
!8647 = !{!8643, !8648, !8649}
!8648 = !DILocalVariable(name: "addr", arg: 2, scope: !8644, file: !4796, line: 527, type: !1310)
!8649 = !DILocalVariable(name: "result", scope: !8644, file: !4796, line: 529, type: !121)
!8650 = !DILocation(line: 0, scope: !8644, inlinedAt: !8651)
!8651 = distinct !DILocation(line: 499, column: 3, scope: !8627)
!8652 = !DILocation(line: 531, column: 4, scope: !8644, inlinedAt: !8651)
!8653 = !{i64 3759461}
!8654 = distinct !{!8654, !8629, !8629}
!8655 = !DILocation(line: 500, column: 1, scope: !8622)
!8656 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8177, file: !8177, line: 850, type: !8345, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8657)
!8657 = !{!8658, !8659, !8660, !8661}
!8658 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8656, file: !8177, line: 850, type: !1258)
!8659 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8656, file: !8177, line: 850, type: !121)
!8660 = !DILocalVariable(name: "Parity", arg: 3, scope: !8656, file: !8177, line: 850, type: !121)
!8661 = !DILocalVariable(name: "StopBits", arg: 4, scope: !8656, file: !8177, line: 851, type: !121)
!8662 = !DILocation(line: 0, scope: !8656)
!8663 = !DILocation(line: 853, column: 3, scope: !8656)
!8664 = !DILocation(line: 854, column: 3, scope: !8656)
!8665 = !DILocation(line: 855, column: 1, scope: !8656)
!8666 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8177, file: !8177, line: 1337, type: !8240, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8667)
!8667 = !{!8668}
!8668 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8666, file: !8177, line: 1337, type: !1258)
!8669 = !DILocation(line: 0, scope: !8666)
!8670 = !DILocation(line: 1339, column: 3, scope: !8666)
!8671 = !DILocation(line: 1340, column: 1, scope: !8666)
!8672 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1365, file: !1365, line: 316, type: !8673, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8675)
!8673 = !DISubroutineType(types: !8674)
!8674 = !{!103, !1415, !1368}
!8675 = !{!8676, !8677, !8678}
!8676 = !DILocalVariable(name: "config", arg: 1, scope: !8672, file: !1365, line: 317, type: !1415)
!8677 = !DILocalVariable(name: "state", arg: 2, scope: !8672, file: !1365, line: 318, type: !1368)
!8678 = !DILocalVariable(name: "reg", scope: !8672, file: !1365, line: 320, type: !22)
!8679 = !DILocation(line: 0, scope: !8672)
!8680 = !DILocation(line: 329, column: 39, scope: !8672)
!8681 = !DILocation(line: 329, column: 52, scope: !8672)
!8682 = !DILocation(line: 329, column: 9, scope: !8672)
!8683 = !DILocation(line: 329, column: 2, scope: !8672)
!8684 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8584, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8685)
!8685 = !{!8686}
!8686 = !DILocalVariable(name: "dev", arg: 1, scope: !8684, file: !141, line: 730, type: !1217)
!8687 = !DILocation(line: 0, scope: !8684)
!8688 = !DILocation(line: 732, column: 9, scope: !8684)
!8689 = !DILocation(line: 732, column: 2, scope: !8684)
!8690 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1532, file: !1532, line: 270, type: !1538, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8691)
!8691 = !{!8692}
!8692 = !DILocalVariable(name: "dev", arg: 1, scope: !8690, file: !1532, line: 270, type: !1540)
!8693 = !DILocation(line: 0, scope: !8690)
!8694 = !DILocation(line: 274, column: 2, scope: !8690)
!8695 = !DILocation(line: 275, column: 12, scope: !8690)
!8696 = !DILocation(line: 276, column: 15, scope: !8690)
!8697 = !DILocation(line: 277, column: 16, scope: !8690)
!8698 = !DILocation(line: 278, column: 15, scope: !8690)
!8699 = !DILocation(line: 279, column: 16, scope: !8690)
!8700 = !DILocation(line: 282, column: 2, scope: !8690)
!8701 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4830, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8702)
!8702 = !{!8703, !8704}
!8703 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8701, file: !356, line: 1814, type: !621)
!8704 = !DILocalVariable(name: "priority", arg: 2, scope: !8701, file: !356, line: 1814, type: !121)
!8705 = !DILocation(line: 0, scope: !8701)
!8706 = !DILocation(line: 1822, column: 46, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !356, line: 1821, column: 3)
!8708 = distinct !DILexicalBlock(scope: !8701, file: !356, line: 1816, column: 7)
!8709 = !DILocation(line: 1824, column: 1, scope: !8701)
!8710 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1532, file: !1532, line: 118, type: !4733, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8711)
!8711 = !{!8712, !8713}
!8712 = !DILocalVariable(name: "arg", arg: 1, scope: !8710, file: !1532, line: 118, type: !102)
!8713 = !DILocalVariable(name: "dticks", scope: !8710, file: !1532, line: 121, type: !121)
!8714 = !DILocation(line: 0, scope: !8710)
!8715 = !DILocation(line: 124, column: 2, scope: !8710)
!8716 = !DILocation(line: 129, column: 17, scope: !8710)
!8717 = !DILocation(line: 129, column: 14, scope: !8710)
!8718 = !DILocation(line: 130, column: 15, scope: !8710)
!8719 = !DILocation(line: 145, column: 27, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !1532, line: 132, column: 16)
!8721 = distinct !DILexicalBlock(scope: !8710, file: !1532, line: 132, column: 6)
!8722 = !DILocation(line: 145, column: 25, scope: !8720)
!8723 = !DILocation(line: 145, column: 45, scope: !8720)
!8724 = !DILocation(line: 146, column: 30, scope: !8720)
!8725 = !DILocation(line: 146, column: 20, scope: !8720)
!8726 = !DILocation(line: 147, column: 3, scope: !8720)
!8727 = !DILocation(line: 151, column: 2, scope: !8710)
!8728 = !DILocation(line: 152, column: 1, scope: !8710)
!8729 = distinct !DISubprogram(name: "elapsed", scope: !1532, file: !1532, line: 85, type: !4877, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8730)
!8730 = !{!8731, !8732, !8733}
!8731 = !DILocalVariable(name: "val1", scope: !8729, file: !1532, line: 87, type: !121)
!8732 = !DILocalVariable(name: "ctrl", scope: !8729, file: !1532, line: 88, type: !121)
!8733 = !DILocalVariable(name: "val2", scope: !8729, file: !1532, line: 89, type: !121)
!8734 = !DILocation(line: 87, column: 27, scope: !8729)
!8735 = !DILocation(line: 0, scope: !8729)
!8736 = !DILocation(line: 88, column: 27, scope: !8729)
!8737 = !DILocation(line: 89, column: 27, scope: !8729)
!8738 = !DILocation(line: 105, column: 12, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8729, file: !1532, line: 105, column: 6)
!8740 = !DILocation(line: 106, column: 6, scope: !8739)
!8741 = !DILocation(line: 107, column: 16, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8739, file: !1532, line: 106, column: 24)
!8743 = !DILocation(line: 111, column: 18, scope: !8742)
!8744 = !DILocation(line: 112, column: 2, scope: !8742)
!8745 = !DILocation(line: 114, column: 20, scope: !8729)
!8746 = !DILocation(line: 114, column: 30, scope: !8729)
!8747 = !DILocation(line: 114, column: 28, scope: !8729)
!8748 = !DILocation(line: 114, column: 2, scope: !8729)
!8749 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1532, file: !1532, line: 154, type: !8750, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8752)
!8750 = !DISubroutineType(types: !8751)
!8751 = !{null, !595, !157}
!8752 = !{!8753, !8754, !8755, !8756, !8757, !8758, !8759, !8764, !8765}
!8753 = !DILocalVariable(name: "ticks", arg: 1, scope: !8749, file: !1532, line: 154, type: !595)
!8754 = !DILocalVariable(name: "idle", arg: 2, scope: !8749, file: !1532, line: 154, type: !157)
!8755 = !DILocalVariable(name: "delay", scope: !8749, file: !1532, line: 169, type: !121)
!8756 = !DILocalVariable(name: "val1", scope: !8749, file: !1532, line: 170, type: !121)
!8757 = !DILocalVariable(name: "val2", scope: !8749, file: !1532, line: 170, type: !121)
!8758 = !DILocalVariable(name: "last_load_", scope: !8749, file: !1532, line: 171, type: !121)
!8759 = !DILocalVariable(name: "key", scope: !8749, file: !1532, line: 176, type: !8760)
!8760 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !8761)
!8761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !8762)
!8762 = !{!8763}
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8761, file: !321, line: 33, baseType: !103, size: 32)
!8764 = !DILocalVariable(name: "pending", scope: !8749, file: !1532, line: 178, type: !121)
!8765 = !DILocalVariable(name: "unannounced", scope: !8749, file: !1532, line: 185, type: !121)
!8766 = !DILocation(line: 0, scope: !8749)
!8767 = !DILocation(line: 162, column: 49, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8749, file: !1532, line: 162, column: 6)
!8769 = !DILocation(line: 163, column: 17, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8768, file: !1532, line: 162, column: 78)
!8771 = !DILocation(line: 164, column: 13, scope: !8770)
!8772 = !DILocation(line: 165, column: 3, scope: !8770)
!8773 = !DILocation(line: 171, column: 24, scope: !8749)
!8774 = !DILocation(line: 173, column: 10, scope: !8749)
!8775 = !DILocation(line: 174, column: 10, scope: !8749)
!8776 = !DILocalVariable(name: "l", arg: 1, scope: !8777, file: !321, line: 136, type: !8780)
!8777 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !8778, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8781)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{!8760, !8780}
!8780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!8781 = !{!8776, !8782}
!8782 = !DILocalVariable(name: "k", scope: !8777, file: !321, line: 139, type: !8760)
!8783 = !DILocation(line: 0, scope: !8777, inlinedAt: !8784)
!8784 = distinct !DILocation(line: 176, column: 25, scope: !8749)
!8785 = !DILocation(line: 55, column: 2, scope: !8786, inlinedAt: !8790)
!8786 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4622, file: !4622, line: 42, type: !4623, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8787)
!8787 = !{!8788, !8789}
!8788 = !DILocalVariable(name: "key", scope: !8786, file: !4622, line: 44, type: !32)
!8789 = !DILocalVariable(name: "tmp", scope: !8786, file: !4622, line: 53, type: !32)
!8790 = distinct !DILocation(line: 145, column: 10, scope: !8777, inlinedAt: !8784)
!8791 = !{i64 2278877}
!8792 = !DILocation(line: 0, scope: !8786, inlinedAt: !8790)
!8793 = !DILocation(line: 178, column: 21, scope: !8749)
!8794 = !DILocation(line: 180, column: 18, scope: !8749)
!8795 = !DILocation(line: 182, column: 14, scope: !8749)
!8796 = !DILocation(line: 183, column: 15, scope: !8749)
!8797 = !DILocation(line: 185, column: 39, scope: !8749)
!8798 = !DILocation(line: 185, column: 37, scope: !8749)
!8799 = !DILocation(line: 187, column: 27, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8749, file: !1532, line: 187, column: 6)
!8801 = !DILocation(line: 187, column: 6, scope: !8749)
!8802 = !DILocation(line: 202, column: 27, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8800, file: !1532, line: 195, column: 9)
!8804 = !DILocation(line: 202, column: 48, scope: !8803)
!8805 = !DILocation(line: 203, column: 9, scope: !8803)
!8806 = !DILocation(line: 204, column: 11, scope: !8803)
!8807 = !DILocation(line: 205, column: 13, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8803, file: !1532, line: 205, column: 7)
!8809 = !DILocation(line: 205, column: 7, scope: !8803)
!8810 = !DILocation(line: 0, scope: !8800)
!8811 = !DILocation(line: 212, column: 18, scope: !8749)
!8812 = !DILocation(line: 214, column: 28, scope: !8749)
!8813 = !DILocation(line: 214, column: 16, scope: !8749)
!8814 = !DILocation(line: 215, column: 15, scope: !8749)
!8815 = !DILocation(line: 227, column: 11, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8749, file: !1532, line: 227, column: 6)
!8817 = !DILocation(line: 227, column: 6, scope: !8749)
!8818 = !DILocation(line: 228, column: 15, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8816, file: !1532, line: 227, column: 19)
!8820 = !DILocation(line: 228, column: 38, scope: !8819)
!8821 = !DILocation(line: 228, column: 24, scope: !8819)
!8822 = !DILocation(line: 229, column: 2, scope: !8819)
!8823 = !DILocation(line: 230, column: 24, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8816, file: !1532, line: 229, column: 9)
!8825 = !DILocation(line: 230, column: 15, scope: !8824)
!8826 = !DILocation(line: 0, scope: !8816)
!8827 = !DILocalVariable(name: "key", arg: 2, scope: !8828, file: !321, line: 190, type: !8760)
!8828 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !8829, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8831)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{null, !8780, !8760}
!8831 = !{!8832, !8827}
!8832 = !DILocalVariable(name: "l", arg: 1, scope: !8828, file: !321, line: 189, type: !8780)
!8833 = !DILocation(line: 0, scope: !8828, inlinedAt: !8834)
!8834 = distinct !DILocation(line: 232, column: 2, scope: !8749)
!8835 = !DILocalVariable(name: "key", arg: 1, scope: !8836, file: !4622, line: 84, type: !32)
!8836 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4622, file: !4622, line: 84, type: !4633, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8837)
!8837 = !{!8835}
!8838 = !DILocation(line: 0, scope: !8836, inlinedAt: !8839)
!8839 = distinct !DILocation(line: 215, column: 2, scope: !8828, inlinedAt: !8834)
!8840 = !DILocation(line: 95, column: 2, scope: !8836, inlinedAt: !8839)
!8841 = !{i64 2279694}
!8842 = !DILocation(line: 234, column: 1, scope: !8749)
!8843 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1532, file: !1532, line: 236, type: !4877, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8844)
!8844 = !{!8845, !8846}
!8845 = !DILocalVariable(name: "key", scope: !8843, file: !1532, line: 242, type: !8760)
!8846 = !DILocalVariable(name: "cyc", scope: !8843, file: !1532, line: 243, type: !121)
!8847 = !DILocation(line: 0, scope: !8777, inlinedAt: !8848)
!8848 = distinct !DILocation(line: 242, column: 25, scope: !8843)
!8849 = !DILocation(line: 55, column: 2, scope: !8786, inlinedAt: !8850)
!8850 = distinct !DILocation(line: 145, column: 10, scope: !8777, inlinedAt: !8848)
!8851 = !DILocation(line: 0, scope: !8786, inlinedAt: !8850)
!8852 = !DILocation(line: 0, scope: !8843)
!8853 = !DILocation(line: 243, column: 17, scope: !8843)
!8854 = !DILocation(line: 243, column: 29, scope: !8843)
!8855 = !DILocation(line: 243, column: 27, scope: !8843)
!8856 = !DILocation(line: 243, column: 43, scope: !8843)
!8857 = !DILocation(line: 243, column: 41, scope: !8843)
!8858 = !DILocation(line: 0, scope: !8828, inlinedAt: !8859)
!8859 = distinct !DILocation(line: 245, column: 2, scope: !8843)
!8860 = !DILocation(line: 0, scope: !8836, inlinedAt: !8861)
!8861 = distinct !DILocation(line: 215, column: 2, scope: !8828, inlinedAt: !8859)
!8862 = !DILocation(line: 95, column: 2, scope: !8836, inlinedAt: !8861)
!8863 = !DILocation(line: 246, column: 13, scope: !8843)
!8864 = !DILocation(line: 246, column: 2, scope: !8843)
!8865 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1532, file: !1532, line: 249, type: !4877, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8866)
!8866 = !{!8867, !8868}
!8867 = !DILocalVariable(name: "key", scope: !8865, file: !1532, line: 251, type: !8760)
!8868 = !DILocalVariable(name: "ret", scope: !8865, file: !1532, line: 252, type: !121)
!8869 = !DILocation(line: 0, scope: !8777, inlinedAt: !8870)
!8870 = distinct !DILocation(line: 251, column: 25, scope: !8865)
!8871 = !DILocation(line: 55, column: 2, scope: !8786, inlinedAt: !8872)
!8872 = distinct !DILocation(line: 145, column: 10, scope: !8777, inlinedAt: !8870)
!8873 = !DILocation(line: 0, scope: !8786, inlinedAt: !8872)
!8874 = !DILocation(line: 0, scope: !8865)
!8875 = !DILocation(line: 252, column: 17, scope: !8865)
!8876 = !DILocation(line: 252, column: 29, scope: !8865)
!8877 = !DILocation(line: 252, column: 27, scope: !8865)
!8878 = !DILocation(line: 0, scope: !8828, inlinedAt: !8879)
!8879 = distinct !DILocation(line: 254, column: 2, scope: !8865)
!8880 = !DILocation(line: 0, scope: !8836, inlinedAt: !8881)
!8881 = distinct !DILocation(line: 215, column: 2, scope: !8828, inlinedAt: !8879)
!8882 = !DILocation(line: 95, column: 2, scope: !8836, inlinedAt: !8881)
!8883 = !DILocation(line: 255, column: 2, scope: !8865)
!8884 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1532, file: !1532, line: 258, type: !2821, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !322)
!8885 = !DILocation(line: 260, column: 6, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8884, file: !1532, line: 260, column: 6)
!8887 = !DILocation(line: 260, column: 16, scope: !8886)
!8888 = !DILocation(line: 260, column: 6, scope: !8884)
!8889 = !DILocation(line: 261, column: 17, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8886, file: !1532, line: 260, column: 34)
!8891 = !DILocation(line: 262, column: 2, scope: !8890)
!8892 = !DILocation(line: 263, column: 1, scope: !8884)
!8893 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1532, file: !1532, line: 265, type: !2821, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !322)
!8894 = !DILocation(line: 267, column: 16, scope: !8893)
!8895 = !DILocation(line: 268, column: 1, scope: !8893)
!8896 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !8897, file: !8897, line: 9, type: !8898, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !8921)
!8897 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8898 = !DISubroutineType(types: !8899)
!8899 = !{!103, !8900, !154, !8920}
!8900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8901, size: 32)
!8901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8902)
!8902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1365, line: 60, size: 64, elements: !8903)
!8903 = !{!8904, !8919}
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !8902, file: !1365, line: 69, baseType: !8905, size: 32)
!8905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8906, size: 32)
!8906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8907)
!8907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1365, line: 50, size: 64, elements: !8908)
!8908 = !{!8909, !8917, !8918}
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !8907, file: !1365, line: 52, baseType: !8910, size: 32)
!8910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8911, size: 32)
!8911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8912)
!8912 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1376, line: 37, baseType: !8913)
!8913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1376, line: 32, size: 64, elements: !8914)
!8914 = !{!8915, !8916}
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8913, file: !1376, line: 34, baseType: !121, size: 32)
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !8913, file: !1376, line: 36, baseType: !121, size: 32, offset: 32)
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !8907, file: !1365, line: 54, baseType: !154, size: 8, offset: 32)
!8918 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8907, file: !1365, line: 56, baseType: !154, size: 8, offset: 40)
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !8902, file: !1365, line: 71, baseType: !154, size: 8, offset: 32)
!8920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8905, size: 32)
!8921 = !{!8922, !8923, !8924}
!8922 = !DILocalVariable(name: "config", arg: 1, scope: !8896, file: !8897, line: 9, type: !8900)
!8923 = !DILocalVariable(name: "id", arg: 2, scope: !8896, file: !8897, line: 9, type: !154)
!8924 = !DILocalVariable(name: "state", arg: 3, scope: !8896, file: !8897, line: 10, type: !8920)
!8925 = !DILocation(line: 0, scope: !8896)
!8926 = !DILocation(line: 12, column: 20, scope: !8896)
!8927 = !DILocation(line: 13, column: 27, scope: !8896)
!8928 = !DILocation(line: 13, column: 42, scope: !8896)
!8929 = !DILocation(line: 13, column: 19, scope: !8896)
!8930 = !DILocation(line: 13, column: 16, scope: !8896)
!8931 = !DILocation(line: 13, column: 2, scope: !8896)
!8932 = distinct !{!8932, !8931, !8933}
!8933 = !DILocation(line: 19, column: 2, scope: !8896)
!8934 = !DILocation(line: 14, column: 23, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8936, file: !8897, line: 14, column: 7)
!8936 = distinct !DILexicalBlock(scope: !8896, file: !8897, line: 13, column: 54)
!8937 = !DILocation(line: 14, column: 10, scope: !8935)
!8938 = !DILocation(line: 18, column: 11, scope: !8936)
!8939 = !DILocation(line: 14, column: 7, scope: !8936)
!8940 = !DILocation(line: 22, column: 1, scope: !8896)
!8941 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1649, file: !1649, line: 193, type: !8942, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !8951)
!8942 = !DISubroutineType(types: !8943)
!8943 = !{!103, !8944, !154, !22}
!8944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8945, size: 32)
!8945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8946)
!8946 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1376, line: 37, baseType: !8947)
!8947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1376, line: 32, size: 64, elements: !8948)
!8948 = !{!8949, !8950}
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8947, file: !1376, line: 34, baseType: !121, size: 32)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !8947, file: !1376, line: 36, baseType: !121, size: 32, offset: 32)
!8951 = !{!8952, !8953, !8954, !8955, !8956, !8957, !8958, !8959, !8961}
!8952 = !DILocalVariable(name: "pins", arg: 1, scope: !8941, file: !1649, line: 193, type: !8944)
!8953 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !8941, file: !1649, line: 193, type: !154)
!8954 = !DILocalVariable(name: "reg", arg: 3, scope: !8941, file: !1649, line: 194, type: !22)
!8955 = !DILocalVariable(name: "pin", scope: !8941, file: !1649, line: 196, type: !121)
!8956 = !DILocalVariable(name: "mux", scope: !8941, file: !1649, line: 196, type: !121)
!8957 = !DILocalVariable(name: "pin_cgf", scope: !8941, file: !1649, line: 197, type: !121)
!8958 = !DILocalVariable(name: "ret", scope: !8941, file: !1649, line: 198, type: !103)
!8959 = !DILocalVariable(name: "i", scope: !8960, file: !1649, line: 209, type: !154)
!8960 = distinct !DILexicalBlock(scope: !8941, file: !1649, line: 209, column: 2)
!8961 = !DILocalVariable(name: "gpio_out", scope: !8962, file: !1649, line: 239, type: !121)
!8962 = distinct !DILexicalBlock(scope: !8963, file: !1649, line: 238, column: 55)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !1649, line: 238, column: 14)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !1649, line: 236, column: 14)
!8965 = distinct !DILexicalBlock(scope: !8966, file: !1649, line: 234, column: 7)
!8966 = distinct !DILexicalBlock(scope: !8967, file: !1649, line: 209, column: 41)
!8967 = distinct !DILexicalBlock(scope: !8960, file: !1649, line: 209, column: 2)
!8968 = !DILocation(line: 0, scope: !8941)
!8969 = !DILocation(line: 0, scope: !8960)
!8970 = !DILocation(line: 209, column: 25, scope: !8967)
!8971 = !DILocation(line: 209, column: 2, scope: !8960)
!8972 = distinct !{!8972, !8971, !8973}
!8973 = !DILocation(line: 259, column: 2, scope: !8960)
!8974 = !DILocation(line: 210, column: 17, scope: !8966)
!8975 = !DILocation(line: 234, column: 7, scope: !8965)
!8976 = !DILocation(line: 234, column: 33, scope: !8965)
!8977 = !DILocation(line: 234, column: 7, scope: !8966)
!8978 = !DILocation(line: 235, column: 22, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8965, file: !1649, line: 234, column: 49)
!8980 = !DILocation(line: 235, column: 29, scope: !8979)
!8981 = !DILocation(line: 236, column: 3, scope: !8979)
!8982 = !DILocation(line: 236, column: 14, scope: !8965)
!8983 = !DILocation(line: 239, column: 32, scope: !8962)
!8984 = !DILocation(line: 0, scope: !8962)
!8985 = !DILocation(line: 241, column: 8, scope: !8962)
!8986 = !DILocation(line: 246, column: 3, scope: !8962)
!8987 = !DILocation(line: 252, column: 9, scope: !8966)
!8988 = !DILocation(line: 255, column: 9, scope: !8966)
!8989 = !DILocation(line: 256, column: 11, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8966, file: !1649, line: 256, column: 7)
!8991 = !DILocation(line: 209, column: 37, scope: !8967)
!8992 = !DILocation(line: 256, column: 7, scope: !8966)
!8993 = !DILocation(line: 262, column: 1, scope: !8941)
!8994 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1649, file: !1649, line: 176, type: !8995, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !8997)
!8995 = !DISubroutineType(types: !8996)
!8996 = !{!103, !121, !121, !121}
!8997 = !{!8998, !8999, !9000, !9001}
!8998 = !DILocalVariable(name: "pin", arg: 1, scope: !8994, file: !1649, line: 176, type: !121)
!8999 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !8994, file: !1649, line: 176, type: !121)
!9000 = !DILocalVariable(name: "pin_func", arg: 3, scope: !8994, file: !1649, line: 176, type: !121)
!9001 = !DILocalVariable(name: "port_device", scope: !8994, file: !1649, line: 178, type: !1579)
!9002 = !DILocation(line: 0, scope: !8994)
!9003 = !DILocation(line: 180, column: 22, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8994, file: !1649, line: 180, column: 6)
!9005 = !DILocation(line: 180, column: 6, scope: !8994)
!9006 = !DILocation(line: 180, column: 6, scope: !9004)
!9007 = !DILocation(line: 184, column: 16, scope: !8994)
!9008 = !DILocation(line: 186, column: 19, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !8994, file: !1649, line: 186, column: 6)
!9010 = !DILocation(line: 186, column: 28, scope: !9009)
!9011 = !DILocation(line: 186, column: 33, scope: !9009)
!9012 = !DILocation(line: 186, column: 6, scope: !8994)
!9013 = !DILocation(line: 190, column: 43, scope: !8994)
!9014 = !DILocation(line: 190, column: 9, scope: !8994)
!9015 = !DILocation(line: 190, column: 2, scope: !8994)
!9016 = !DILocation(line: 191, column: 1, scope: !8994)
!9017 = distinct !DISubprogram(name: "device_is_ready", scope: !7006, file: !7006, line: 47, type: !9018, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !9020)
!9018 = !DISubroutineType(types: !9019)
!9019 = !{!157, !1579}
!9020 = !{!9021}
!9021 = !DILocalVariable(name: "dev", arg: 1, scope: !9017, file: !7006, line: 47, type: !1579)
!9022 = !DILocation(line: 0, scope: !9017)
!9023 = !DILocation(line: 55, column: 2, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9017, file: !7006, line: 55, column: 2)
!9025 = !{i64 2149512886}
!9026 = !DILocation(line: 56, column: 9, scope: !9017)
!9027 = !DILocation(line: 56, column: 2, scope: !9017)
!9028 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9018, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !9029)
!9029 = !{!9030}
!9030 = !DILocalVariable(name: "dev", arg: 1, scope: !9028, file: !141, line: 730, type: !1579)
!9031 = !DILocation(line: 0, scope: !9028)
!9032 = !DILocation(line: 732, column: 9, scope: !9028)
!9033 = !DILocation(line: 732, column: 2, scope: !9028)
!9034 = distinct !DISubprogram(name: "SystemInit", scope: !1701, file: !1701, line: 167, type: !2821, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !322)
!9035 = !DILocation(line: 182, column: 1, scope: !9034)
!9036 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1701, file: !1701, line: 220, type: !2821, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !9037)
!9037 = !{!9038, !9039, !9040, !9041, !9042}
!9038 = !DILocalVariable(name: "tmp", scope: !9036, file: !1701, line: 222, type: !121)
!9039 = !DILocalVariable(name: "pllvco", scope: !9036, file: !1701, line: 222, type: !121)
!9040 = !DILocalVariable(name: "pllp", scope: !9036, file: !1701, line: 222, type: !121)
!9041 = !DILocalVariable(name: "pllsource", scope: !9036, file: !1701, line: 222, type: !121)
!9042 = !DILocalVariable(name: "pllm", scope: !9036, file: !1701, line: 222, type: !121)
!9043 = !DILocation(line: 0, scope: !9036)
!9044 = !DILocation(line: 225, column: 14, scope: !9036)
!9045 = !DILocation(line: 225, column: 19, scope: !9036)
!9046 = !DILocation(line: 227, column: 3, scope: !9036)
!9047 = !DILocation(line: 240, column: 25, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9036, file: !1701, line: 228, column: 3)
!9049 = !DILocation(line: 241, column: 19, scope: !9048)
!9050 = !DILocation(line: 241, column: 27, scope: !9048)
!9051 = !DILocation(line: 0, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9048, file: !1701, line: 243, column: 11)
!9053 = !DILocation(line: 254, column: 22, scope: !9048)
!9054 = !DILocation(line: 254, column: 62, scope: !9048)
!9055 = !DILocation(line: 255, column: 31, scope: !9048)
!9056 = !DILocation(line: 256, column: 7, scope: !9048)
!9057 = !DILocation(line: 0, scope: !9048)
!9058 = !DILocation(line: 263, column: 30, scope: !9036)
!9059 = !DILocation(line: 263, column: 52, scope: !9036)
!9060 = !DILocation(line: 263, column: 9, scope: !9036)
!9061 = !DILocation(line: 265, column: 19, scope: !9036)
!9062 = !DILocation(line: 266, column: 1, scope: !9036)
!9063 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !9064, file: !9064, line: 87, type: !9065, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9104)
!9064 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9065 = !DISubroutineType(types: !9066)
!9066 = !{!9067, !9068}
!9067 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2655, line: 44, baseType: !2654)
!9068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9069, size: 32)
!9069 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !9070, line: 172, baseType: !9071)
!9070 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9070, line: 121, size: 736, elements: !9072)
!9072 = !{!9073, !9074, !9083, !9091, !9092, !9093, !9094, !9095, !9096, !9097, !9098, !9099, !9100, !9101, !9102, !9103}
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !9071, file: !9070, line: 123, baseType: !121, size: 32)
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !9071, file: !9070, line: 126, baseType: !9075, size: 160, offset: 32)
!9075 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !9070, line: 97, baseType: !9076)
!9076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9070, line: 79, size: 160, elements: !9077)
!9077 = !{!9078, !9079, !9080, !9081, !9082}
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !9076, file: !9070, line: 81, baseType: !121, size: 32)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !9076, file: !9070, line: 84, baseType: !121, size: 32, offset: 32)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !9076, file: !9070, line: 87, baseType: !121, size: 32, offset: 64)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !9076, file: !9070, line: 90, baseType: !121, size: 32, offset: 96)
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !9076, file: !9070, line: 94, baseType: !121, size: 32, offset: 128)
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !9071, file: !9070, line: 129, baseType: !9084, size: 128, offset: 192)
!9084 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !9070, line: 116, baseType: !9085)
!9085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9070, line: 102, size: 128, elements: !9086)
!9086 = !{!9087, !9088, !9089, !9090}
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !9085, file: !9070, line: 104, baseType: !121, size: 32)
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !9085, file: !9070, line: 107, baseType: !121, size: 32, offset: 32)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !9085, file: !9070, line: 110, baseType: !121, size: 32, offset: 64)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !9085, file: !9070, line: 113, baseType: !121, size: 32, offset: 96)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !9071, file: !9070, line: 132, baseType: !121, size: 32, offset: 320)
!9092 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !9071, file: !9070, line: 136, baseType: !121, size: 32, offset: 352)
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !9071, file: !9070, line: 140, baseType: !121, size: 32, offset: 384)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !9071, file: !9070, line: 143, baseType: !121, size: 32, offset: 416)
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !9071, file: !9070, line: 146, baseType: !121, size: 32, offset: 448)
!9096 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !9071, file: !9070, line: 149, baseType: !121, size: 32, offset: 480)
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !9071, file: !9070, line: 152, baseType: !121, size: 32, offset: 512)
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !9071, file: !9070, line: 155, baseType: !121, size: 32, offset: 544)
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !9071, file: !9070, line: 158, baseType: !121, size: 32, offset: 576)
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !9071, file: !9070, line: 161, baseType: !121, size: 32, offset: 608)
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !9071, file: !9070, line: 164, baseType: !121, size: 32, offset: 640)
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !9071, file: !9070, line: 167, baseType: !121, size: 32, offset: 672)
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !9071, file: !9070, line: 170, baseType: !154, size: 8, offset: 704)
!9104 = !{!9105, !9106, !9107, !9108, !9109, !9110, !9111, !9112, !9113, !9114, !9115}
!9105 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9063, file: !9064, line: 87, type: !9068)
!9106 = !DILocalVariable(name: "tickstart", scope: !9063, file: !9064, line: 89, type: !121)
!9107 = !DILocalVariable(name: "tmpreg1", scope: !9063, file: !9064, line: 90, type: !121)
!9108 = !DILocalVariable(name: "plli2sp", scope: !9063, file: !9064, line: 91, type: !121)
!9109 = !DILocalVariable(name: "plli2sq", scope: !9063, file: !9064, line: 92, type: !121)
!9110 = !DILocalVariable(name: "plli2sr", scope: !9063, file: !9064, line: 93, type: !121)
!9111 = !DILocalVariable(name: "pllsaip", scope: !9063, file: !9064, line: 94, type: !121)
!9112 = !DILocalVariable(name: "pllsaiq", scope: !9063, file: !9064, line: 95, type: !121)
!9113 = !DILocalVariable(name: "plli2sused", scope: !9063, file: !9064, line: 96, type: !121)
!9114 = !DILocalVariable(name: "pllsaiused", scope: !9063, file: !9064, line: 97, type: !121)
!9115 = !DILocalVariable(name: "tmpreg", scope: !9116, file: !9064, line: 184, type: !120)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !9064, line: 184, column: 5)
!9117 = distinct !DILexicalBlock(scope: !9118, file: !9064, line: 179, column: 3)
!9118 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 178, column: 6)
!9119 = !DILocation(line: 0, scope: !9063)
!9120 = !DILocation(line: 103, column: 23, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 103, column: 6)
!9122 = !DILocation(line: 103, column: 45, scope: !9121)
!9123 = !DILocation(line: 103, column: 71, scope: !9121)
!9124 = !DILocation(line: 103, column: 6, scope: !9063)
!9125 = !DILocation(line: 109, column: 5, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9121, file: !9064, line: 104, column: 3)
!9127 = !DILocation(line: 111, column: 23, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9126, file: !9064, line: 111, column: 8)
!9129 = !DILocation(line: 111, column: 45, scope: !9128)
!9130 = !DILocation(line: 111, column: 8, scope: !9126)
!9131 = !DILocation(line: 119, column: 23, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 119, column: 6)
!9133 = !DILocation(line: 119, column: 45, scope: !9132)
!9134 = !DILocation(line: 119, column: 71, scope: !9132)
!9135 = !DILocation(line: 119, column: 6, scope: !9063)
!9136 = !DILocation(line: 125, column: 5, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9132, file: !9064, line: 120, column: 3)
!9138 = !DILocation(line: 127, column: 23, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9137, file: !9064, line: 127, column: 8)
!9140 = !DILocation(line: 127, column: 45, scope: !9139)
!9141 = !DILocation(line: 127, column: 8, scope: !9137)
!9142 = !DILocation(line: 135, column: 23, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 135, column: 6)
!9144 = !DILocation(line: 135, column: 45, scope: !9143)
!9145 = !DILocation(line: 135, column: 67, scope: !9143)
!9146 = !DILocation(line: 135, column: 6, scope: !9063)
!9147 = !DILocation(line: 141, column: 5, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9143, file: !9064, line: 136, column: 3)
!9149 = !DILocation(line: 143, column: 23, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9148, file: !9064, line: 143, column: 8)
!9151 = !DILocation(line: 143, column: 42, scope: !9150)
!9152 = !DILocation(line: 143, column: 8, scope: !9148)
!9153 = !DILocation(line: 148, column: 42, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9148, file: !9064, line: 148, column: 8)
!9155 = !DILocation(line: 148, column: 8, scope: !9148)
!9156 = !DILocation(line: 156, column: 23, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 156, column: 6)
!9158 = !DILocation(line: 156, column: 45, scope: !9157)
!9159 = !DILocation(line: 156, column: 67, scope: !9157)
!9160 = !DILocation(line: 156, column: 6, scope: !9063)
!9161 = !DILocation(line: 162, column: 5, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9157, file: !9064, line: 157, column: 3)
!9163 = !DILocation(line: 165, column: 23, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9162, file: !9064, line: 165, column: 8)
!9165 = !DILocation(line: 165, column: 42, scope: !9164)
!9166 = !DILocation(line: 165, column: 8, scope: !9162)
!9167 = !DILocation(line: 170, column: 42, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9162, file: !9064, line: 170, column: 8)
!9169 = !DILocation(line: 170, column: 8, scope: !9162)
!9170 = !DILocation(line: 178, column: 23, scope: !9118)
!9171 = !DILocation(line: 178, column: 45, scope: !9118)
!9172 = !DILocation(line: 178, column: 66, scope: !9118)
!9173 = !DILocation(line: 178, column: 6, scope: !9063)
!9174 = !DILocation(line: 184, column: 5, scope: !9116)
!9175 = !DILocation(line: 184, column: 5, scope: !9117)
!9176 = !DILocation(line: 187, column: 13, scope: !9117)
!9177 = !DILocation(line: 190, column: 17, scope: !9117)
!9178 = !DILocation(line: 192, column: 5, scope: !9117)
!9179 = !DILocation(line: 192, column: 17, scope: !9117)
!9180 = !DILocation(line: 192, column: 20, scope: !9117)
!9181 = !DILocation(line: 192, column: 34, scope: !9117)
!9182 = !DILocation(line: 194, column: 11, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9184, file: !9064, line: 194, column: 10)
!9184 = distinct !DILexicalBlock(scope: !9117, file: !9064, line: 193, column: 5)
!9185 = !DILocation(line: 194, column: 25, scope: !9183)
!9186 = !DILocation(line: 194, column: 39, scope: !9183)
!9187 = !DILocation(line: 194, column: 10, scope: !9184)
!9188 = distinct !{!9188, !9178, !9189}
!9189 = !DILocation(line: 198, column: 5, scope: !9117)
!9190 = !DILocation(line: 200, column: 21, scope: !9117)
!9191 = !DILocation(line: 200, column: 26, scope: !9117)
!9192 = !DILocation(line: 201, column: 17, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9117, file: !9064, line: 201, column: 8)
!9194 = !DILocation(line: 201, column: 33, scope: !9193)
!9195 = !DILocation(line: 201, column: 66, scope: !9193)
!9196 = !DILocation(line: 201, column: 84, scope: !9193)
!9197 = !DILocation(line: 201, column: 47, scope: !9193)
!9198 = !DILocation(line: 201, column: 8, scope: !9117)
!9199 = !DILocation(line: 204, column: 23, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9193, file: !9064, line: 202, column: 5)
!9201 = !DILocation(line: 204, column: 28, scope: !9200)
!9202 = !DILocation(line: 206, column: 7, scope: !9200)
!9203 = !DILocation(line: 207, column: 7, scope: !9200)
!9204 = !DILocation(line: 209, column: 17, scope: !9200)
!9205 = !DILocation(line: 212, column: 10, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9200, file: !9064, line: 212, column: 10)
!9207 = !DILocation(line: 212, column: 10, scope: !9200)
!9208 = !DILocation(line: 215, column: 21, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9206, file: !9064, line: 213, column: 7)
!9210 = !DILocation(line: 218, column: 9, scope: !9209)
!9211 = !DILocation(line: 218, column: 15, scope: !9209)
!9212 = !DILocation(line: 218, column: 51, scope: !9209)
!9213 = !DILocation(line: 220, column: 15, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !9064, line: 220, column: 14)
!9215 = distinct !DILexicalBlock(scope: !9209, file: !9064, line: 219, column: 9)
!9216 = !DILocation(line: 220, column: 29, scope: !9214)
!9217 = !DILocation(line: 220, column: 43, scope: !9214)
!9218 = !DILocation(line: 220, column: 14, scope: !9215)
!9219 = distinct !{!9219, !9210, !9220}
!9220 = !DILocation(line: 224, column: 9, scope: !9209)
!9221 = !DILocation(line: 227, column: 5, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9117, file: !9064, line: 227, column: 5)
!9223 = !DILocation(line: 232, column: 23, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 232, column: 6)
!9225 = !DILocation(line: 228, column: 3, scope: !9117)
!9226 = !DILocation(line: 232, column: 45, scope: !9224)
!9227 = !DILocation(line: 232, column: 66, scope: !9224)
!9228 = !DILocation(line: 232, column: 6, scope: !9063)
!9229 = !DILocation(line: 235, column: 5, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9224, file: !9064, line: 233, column: 3)
!9231 = !DILocation(line: 240, column: 23, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 240, column: 6)
!9233 = !DILocation(line: 236, column: 3, scope: !9230)
!9234 = !DILocation(line: 240, column: 45, scope: !9232)
!9235 = !DILocation(line: 240, column: 70, scope: !9232)
!9236 = !DILocation(line: 240, column: 6, scope: !9063)
!9237 = !DILocation(line: 246, column: 5, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9232, file: !9064, line: 241, column: 3)
!9239 = !DILocation(line: 251, column: 23, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 251, column: 6)
!9241 = !DILocation(line: 247, column: 3, scope: !9238)
!9242 = !DILocation(line: 251, column: 45, scope: !9240)
!9243 = !DILocation(line: 251, column: 66, scope: !9240)
!9244 = !DILocation(line: 251, column: 6, scope: !9063)
!9245 = !DILocation(line: 257, column: 5, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9240, file: !9064, line: 252, column: 3)
!9247 = !DILocation(line: 262, column: 23, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 262, column: 6)
!9249 = !DILocation(line: 258, column: 3, scope: !9246)
!9250 = !DILocation(line: 262, column: 45, scope: !9248)
!9251 = !DILocation(line: 262, column: 68, scope: !9248)
!9252 = !DILocation(line: 262, column: 6, scope: !9063)
!9253 = !DILocation(line: 268, column: 5, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9248, file: !9064, line: 263, column: 3)
!9255 = !DILocation(line: 271, column: 23, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9254, file: !9064, line: 271, column: 8)
!9257 = !DILocation(line: 271, column: 43, scope: !9256)
!9258 = !DILocation(line: 271, column: 8, scope: !9254)
!9259 = !DILocation(line: 279, column: 23, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 279, column: 6)
!9261 = !DILocation(line: 279, column: 45, scope: !9260)
!9262 = !DILocation(line: 279, column: 67, scope: !9260)
!9263 = !DILocation(line: 279, column: 6, scope: !9063)
!9264 = !DILocation(line: 285, column: 5, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9260, file: !9064, line: 280, column: 3)
!9266 = !DILocation(line: 290, column: 23, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 290, column: 6)
!9268 = !DILocation(line: 286, column: 3, scope: !9265)
!9269 = !DILocation(line: 290, column: 45, scope: !9267)
!9270 = !DILocation(line: 290, column: 70, scope: !9267)
!9271 = !DILocation(line: 290, column: 6, scope: !9063)
!9272 = !DILocation(line: 296, column: 5, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9267, file: !9064, line: 291, column: 3)
!9274 = !DILocation(line: 298, column: 23, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9273, file: !9064, line: 298, column: 8)
!9276 = !DILocation(line: 298, column: 43, scope: !9275)
!9277 = !DILocation(line: 298, column: 8, scope: !9273)
!9278 = !DILocation(line: 308, column: 44, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 308, column: 6)
!9280 = !DILocation(line: 308, column: 18, scope: !9279)
!9281 = !DILocation(line: 308, column: 25, scope: !9279)
!9282 = !DILocation(line: 308, column: 65, scope: !9279)
!9283 = !DILocation(line: 308, column: 6, scope: !9063)
!9284 = !DILocation(line: 311, column: 5, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9279, file: !9064, line: 309, column: 3)
!9286 = !DILocation(line: 313, column: 17, scope: !9285)
!9287 = !DILocation(line: 315, column: 5, scope: !9285)
!9288 = !DILocation(line: 315, column: 11, scope: !9285)
!9289 = !DILocation(line: 317, column: 11, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9291, file: !9064, line: 317, column: 10)
!9291 = distinct !DILexicalBlock(scope: !9285, file: !9064, line: 316, column: 5)
!9292 = !DILocation(line: 317, column: 25, scope: !9290)
!9293 = !DILocation(line: 317, column: 39, scope: !9290)
!9294 = !DILocation(line: 317, column: 10, scope: !9291)
!9295 = distinct !{!9295, !9287, !9296}
!9296 = !DILocation(line: 322, column: 5, scope: !9285)
!9297 = !DILocation(line: 329, column: 27, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9285, file: !9064, line: 329, column: 8)
!9299 = !DILocation(line: 329, column: 49, scope: !9298)
!9300 = !DILocation(line: 329, column: 75, scope: !9298)
!9301 = !DILocation(line: 329, column: 102, scope: !9298)
!9302 = !DILocation(line: 329, column: 121, scope: !9298)
!9303 = !DILocation(line: 329, column: 143, scope: !9298)
!9304 = !DILocation(line: 329, column: 176, scope: !9298)
!9305 = !DILocation(line: 330, column: 49, scope: !9298)
!9306 = !DILocation(line: 330, column: 75, scope: !9298)
!9307 = !DILocation(line: 330, column: 102, scope: !9298)
!9308 = !DILocation(line: 330, column: 121, scope: !9298)
!9309 = !DILocation(line: 330, column: 143, scope: !9298)
!9310 = !DILocation(line: 329, column: 8, scope: !9285)
!9311 = !DILocation(line: 336, column: 26, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9298, file: !9064, line: 331, column: 5)
!9313 = !DILocation(line: 336, column: 100, scope: !9312)
!9314 = !DILocation(line: 337, column: 24, scope: !9312)
!9315 = !DILocation(line: 337, column: 61, scope: !9312)
!9316 = !DILocation(line: 341, column: 7, scope: !9312)
!9317 = !DILocation(line: 345, column: 27, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9285, file: !9064, line: 345, column: 8)
!9319 = !DILocation(line: 342, column: 5, scope: !9312)
!9320 = !DILocation(line: 345, column: 49, scope: !9318)
!9321 = !DILocation(line: 345, column: 71, scope: !9318)
!9322 = !DILocation(line: 345, column: 94, scope: !9318)
!9323 = !DILocation(line: 345, column: 113, scope: !9318)
!9324 = !DILocation(line: 345, column: 132, scope: !9318)
!9325 = !DILocation(line: 345, column: 162, scope: !9318)
!9326 = !DILocation(line: 346, column: 49, scope: !9318)
!9327 = !DILocation(line: 346, column: 71, scope: !9318)
!9328 = !DILocation(line: 346, column: 94, scope: !9318)
!9329 = !DILocation(line: 346, column: 113, scope: !9318)
!9330 = !DILocation(line: 346, column: 132, scope: !9318)
!9331 = !DILocation(line: 345, column: 8, scope: !9285)
!9332 = !DILocation(line: 354, column: 26, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9318, file: !9064, line: 347, column: 5)
!9334 = !DILocation(line: 354, column: 100, scope: !9333)
!9335 = !DILocation(line: 355, column: 24, scope: !9333)
!9336 = !DILocation(line: 355, column: 61, scope: !9333)
!9337 = !DILocation(line: 360, column: 7, scope: !9333)
!9338 = !DILocation(line: 363, column: 7, scope: !9333)
!9339 = !DILocation(line: 367, column: 26, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9285, file: !9064, line: 367, column: 8)
!9341 = !DILocation(line: 364, column: 5, scope: !9333)
!9342 = !DILocation(line: 367, column: 48, scope: !9340)
!9343 = !DILocation(line: 367, column: 73, scope: !9340)
!9344 = !DILocation(line: 367, column: 99, scope: !9340)
!9345 = !DILocation(line: 367, column: 118, scope: !9340)
!9346 = !DILocation(line: 367, column: 138, scope: !9340)
!9347 = !DILocation(line: 367, column: 8, scope: !9285)
!9348 = !DILocation(line: 372, column: 26, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9340, file: !9064, line: 368, column: 5)
!9350 = !DILocation(line: 373, column: 24, scope: !9349)
!9351 = !DILocation(line: 373, column: 61, scope: !9349)
!9352 = !DILocation(line: 377, column: 7, scope: !9349)
!9353 = !DILocation(line: 381, column: 24, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9285, file: !9064, line: 381, column: 8)
!9355 = !DILocation(line: 378, column: 5, scope: !9349)
!9356 = !DILocation(line: 381, column: 45, scope: !9354)
!9357 = !DILocation(line: 381, column: 69, scope: !9354)
!9358 = !DILocation(line: 381, column: 8, scope: !9285)
!9359 = !DILocation(line: 390, column: 7, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9354, file: !9064, line: 382, column: 5)
!9361 = !DILocation(line: 391, column: 5, scope: !9360)
!9362 = !DILocation(line: 394, column: 5, scope: !9285)
!9363 = !DILocation(line: 396, column: 17, scope: !9285)
!9364 = !DILocation(line: 398, column: 5, scope: !9285)
!9365 = !DILocation(line: 398, column: 11, scope: !9285)
!9366 = !DILocation(line: 398, column: 51, scope: !9285)
!9367 = !DILocation(line: 400, column: 11, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !9064, line: 400, column: 10)
!9369 = distinct !DILexicalBlock(scope: !9285, file: !9064, line: 399, column: 5)
!9370 = !DILocation(line: 400, column: 25, scope: !9368)
!9371 = !DILocation(line: 400, column: 39, scope: !9368)
!9372 = !DILocation(line: 400, column: 10, scope: !9369)
!9373 = distinct !{!9373, !9364, !9374}
!9374 = !DILocation(line: 405, column: 5, scope: !9285)
!9375 = !DILocation(line: 411, column: 17, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9063, file: !9064, line: 411, column: 6)
!9377 = !DILocation(line: 411, column: 6, scope: !9063)
!9378 = !DILocation(line: 414, column: 5, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9376, file: !9064, line: 412, column: 3)
!9380 = !DILocation(line: 416, column: 17, scope: !9379)
!9381 = !DILocation(line: 418, column: 5, scope: !9379)
!9382 = !DILocation(line: 418, column: 11, scope: !9379)
!9383 = !DILocation(line: 420, column: 11, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9385, file: !9064, line: 420, column: 10)
!9385 = distinct !DILexicalBlock(scope: !9379, file: !9064, line: 419, column: 5)
!9386 = !DILocation(line: 420, column: 25, scope: !9384)
!9387 = !DILocation(line: 420, column: 39, scope: !9384)
!9388 = !DILocation(line: 420, column: 10, scope: !9385)
!9389 = distinct !{!9389, !9381, !9390}
!9390 = !DILocation(line: 425, column: 5, scope: !9379)
!9391 = !DILocation(line: 432, column: 27, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9379, file: !9064, line: 432, column: 8)
!9393 = !DILocation(line: 432, column: 49, scope: !9392)
!9394 = !DILocation(line: 432, column: 71, scope: !9392)
!9395 = !DILocation(line: 432, column: 94, scope: !9392)
!9396 = !DILocation(line: 432, column: 113, scope: !9392)
!9397 = !DILocation(line: 432, column: 132, scope: !9392)
!9398 = !DILocation(line: 432, column: 162, scope: !9392)
!9399 = !DILocation(line: 433, column: 49, scope: !9392)
!9400 = !DILocation(line: 433, column: 71, scope: !9392)
!9401 = !DILocation(line: 433, column: 94, scope: !9392)
!9402 = !DILocation(line: 433, column: 113, scope: !9392)
!9403 = !DILocation(line: 433, column: 132, scope: !9392)
!9404 = !DILocation(line: 432, column: 8, scope: !9379)
!9405 = !DILocation(line: 441, column: 26, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9392, file: !9064, line: 434, column: 5)
!9407 = !DILocation(line: 441, column: 100, scope: !9406)
!9408 = !DILocation(line: 445, column: 7, scope: !9406)
!9409 = !DILocation(line: 448, column: 7, scope: !9406)
!9410 = !DILocation(line: 453, column: 26, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9379, file: !9064, line: 453, column: 8)
!9412 = !DILocation(line: 449, column: 5, scope: !9406)
!9413 = !DILocation(line: 453, column: 48, scope: !9411)
!9414 = !DILocation(line: 453, column: 71, scope: !9411)
!9415 = !DILocation(line: 453, column: 95, scope: !9411)
!9416 = !DILocation(line: 453, column: 114, scope: !9411)
!9417 = !DILocation(line: 453, column: 134, scope: !9411)
!9418 = !DILocation(line: 453, column: 8, scope: !9379)
!9419 = !DILocation(line: 458, column: 24, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9411, file: !9064, line: 454, column: 5)
!9421 = !DILocation(line: 458, column: 61, scope: !9420)
!9422 = !DILocation(line: 462, column: 7, scope: !9420)
!9423 = !DILocation(line: 463, column: 5, scope: !9420)
!9424 = !DILocation(line: 466, column: 5, scope: !9379)
!9425 = !DILocation(line: 468, column: 17, scope: !9379)
!9426 = !DILocation(line: 470, column: 5, scope: !9379)
!9427 = !DILocation(line: 470, column: 11, scope: !9379)
!9428 = !DILocation(line: 470, column: 39, scope: !9379)
!9429 = !DILocation(line: 472, column: 11, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9431, file: !9064, line: 472, column: 10)
!9431 = distinct !DILexicalBlock(scope: !9379, file: !9064, line: 471, column: 5)
!9432 = !DILocation(line: 472, column: 25, scope: !9430)
!9433 = !DILocation(line: 472, column: 39, scope: !9430)
!9434 = !DILocation(line: 472, column: 10, scope: !9431)
!9435 = distinct !{!9435, !9426, !9436}
!9436 = !DILocation(line: 477, column: 5, scope: !9379)
!9437 = !DILocation(line: 480, column: 1, scope: !9063)
!9438 = !DISubprogram(name: "HAL_GetTick", scope: !9439, file: !9439, line: 234, type: !4877, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9439 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9440 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !9064, file: !9064, line: 489, type: !9441, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9443)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{null, !9068}
!9443 = !{!9444, !9445}
!9444 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9440, file: !9064, line: 489, type: !9068)
!9445 = !DILocalVariable(name: "tempreg", scope: !9440, file: !9064, line: 491, type: !121)
!9446 = !DILocation(line: 0, scope: !9440)
!9447 = !DILocation(line: 494, column: 18, scope: !9440)
!9448 = !DILocation(line: 494, column: 39, scope: !9440)
!9449 = !DILocation(line: 502, column: 52, scope: !9440)
!9450 = !DILocation(line: 502, column: 63, scope: !9440)
!9451 = !DILocation(line: 502, column: 25, scope: !9440)
!9452 = !DILocation(line: 502, column: 33, scope: !9440)
!9453 = !DILocation(line: 503, column: 52, scope: !9440)
!9454 = !DILocation(line: 503, column: 89, scope: !9440)
!9455 = !DILocation(line: 503, column: 25, scope: !9440)
!9456 = !DILocation(line: 503, column: 33, scope: !9440)
!9457 = !DILocation(line: 504, column: 54, scope: !9440)
!9458 = !DILocation(line: 504, column: 128, scope: !9440)
!9459 = !DILocation(line: 504, column: 25, scope: !9440)
!9460 = !DILocation(line: 504, column: 33, scope: !9440)
!9461 = !DILocation(line: 505, column: 52, scope: !9440)
!9462 = !DILocation(line: 505, column: 89, scope: !9440)
!9463 = !DILocation(line: 505, column: 25, scope: !9440)
!9464 = !DILocation(line: 505, column: 33, scope: !9440)
!9465 = !DILocation(line: 506, column: 52, scope: !9440)
!9466 = !DILocation(line: 506, column: 89, scope: !9440)
!9467 = !DILocation(line: 506, column: 25, scope: !9440)
!9468 = !DILocation(line: 506, column: 33, scope: !9440)
!9469 = !DILocation(line: 508, column: 52, scope: !9440)
!9470 = !DILocation(line: 508, column: 63, scope: !9440)
!9471 = !DILocation(line: 508, column: 25, scope: !9440)
!9472 = !DILocation(line: 508, column: 33, scope: !9440)
!9473 = !DILocation(line: 509, column: 52, scope: !9440)
!9474 = !DILocation(line: 509, column: 89, scope: !9440)
!9475 = !DILocation(line: 509, column: 25, scope: !9440)
!9476 = !DILocation(line: 509, column: 33, scope: !9440)
!9477 = !DILocation(line: 510, column: 54, scope: !9440)
!9478 = !DILocation(line: 510, column: 128, scope: !9440)
!9479 = !DILocation(line: 510, column: 25, scope: !9440)
!9480 = !DILocation(line: 510, column: 33, scope: !9440)
!9481 = !DILocation(line: 511, column: 52, scope: !9440)
!9482 = !DILocation(line: 511, column: 89, scope: !9440)
!9483 = !DILocation(line: 511, column: 25, scope: !9440)
!9484 = !DILocation(line: 511, column: 33, scope: !9440)
!9485 = !DILocation(line: 513, column: 48, scope: !9440)
!9486 = !DILocation(line: 513, column: 56, scope: !9440)
!9487 = !DILocation(line: 513, column: 18, scope: !9440)
!9488 = !DILocation(line: 513, column: 29, scope: !9440)
!9489 = !DILocation(line: 514, column: 48, scope: !9440)
!9490 = !DILocation(line: 514, column: 82, scope: !9440)
!9491 = !DILocation(line: 514, column: 18, scope: !9440)
!9492 = !DILocation(line: 514, column: 29, scope: !9440)
!9493 = !DILocation(line: 517, column: 39, scope: !9440)
!9494 = !DILocation(line: 517, column: 18, scope: !9440)
!9495 = !DILocation(line: 517, column: 37, scope: !9440)
!9496 = !DILocation(line: 520, column: 39, scope: !9440)
!9497 = !DILocation(line: 520, column: 18, scope: !9440)
!9498 = !DILocation(line: 520, column: 37, scope: !9440)
!9499 = !DILocation(line: 523, column: 42, scope: !9440)
!9500 = !DILocation(line: 523, column: 18, scope: !9440)
!9501 = !DILocation(line: 523, column: 40, scope: !9440)
!9502 = !DILocation(line: 526, column: 42, scope: !9440)
!9503 = !DILocation(line: 526, column: 18, scope: !9440)
!9504 = !DILocation(line: 526, column: 40, scope: !9440)
!9505 = !DILocation(line: 529, column: 19, scope: !9440)
!9506 = !DILocation(line: 529, column: 24, scope: !9440)
!9507 = !DILocation(line: 530, column: 67, scope: !9440)
!9508 = !DILocation(line: 530, column: 72, scope: !9440)
!9509 = !DILocation(line: 530, column: 59, scope: !9440)
!9510 = !DILocation(line: 530, column: 18, scope: !9440)
!9511 = !DILocation(line: 530, column: 36, scope: !9440)
!9512 = !DILocation(line: 533, column: 38, scope: !9440)
!9513 = !DILocation(line: 533, column: 18, scope: !9440)
!9514 = !DILocation(line: 533, column: 36, scope: !9440)
!9515 = !DILocation(line: 536, column: 42, scope: !9440)
!9516 = !DILocation(line: 536, column: 18, scope: !9440)
!9517 = !DILocation(line: 536, column: 40, scope: !9440)
!9518 = !DILocation(line: 539, column: 40, scope: !9440)
!9519 = !DILocation(line: 539, column: 18, scope: !9440)
!9520 = !DILocation(line: 539, column: 38, scope: !9440)
!9521 = !DILocation(line: 542, column: 39, scope: !9440)
!9522 = !DILocation(line: 542, column: 18, scope: !9440)
!9523 = !DILocation(line: 542, column: 37, scope: !9440)
!9524 = !DILocation(line: 545, column: 40, scope: !9440)
!9525 = !DILocation(line: 545, column: 18, scope: !9440)
!9526 = !DILocation(line: 545, column: 38, scope: !9440)
!9527 = !DILocation(line: 548, column: 13, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9440, file: !9064, line: 548, column: 7)
!9529 = !DILocation(line: 548, column: 7, scope: !9440)
!9530 = !DILocation(line: 550, column: 20, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9528, file: !9064, line: 549, column: 3)
!9532 = !DILocation(line: 550, column: 37, scope: !9531)
!9533 = !DILocation(line: 556, column: 1, scope: !9440)
!9534 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !9064, file: !9064, line: 569, type: !5804, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9535)
!9535 = !{!9536, !9537, !9538, !9539, !9540, !9541, !9542}
!9536 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !9534, file: !9064, line: 569, type: !121)
!9537 = !DILocalVariable(name: "tmpreg1", scope: !9534, file: !9064, line: 571, type: !121)
!9538 = !DILocalVariable(name: "frequency", scope: !9534, file: !9064, line: 573, type: !121)
!9539 = !DILocalVariable(name: "vcoinput", scope: !9534, file: !9064, line: 575, type: !121)
!9540 = !DILocalVariable(name: "saiclocksource", scope: !9534, file: !9064, line: 577, type: !121)
!9541 = !DILocalVariable(name: "srcclk", scope: !9534, file: !9064, line: 578, type: !121)
!9542 = !DILocalVariable(name: "vcooutput", scope: !9534, file: !9064, line: 580, type: !121)
!9543 = !DILocation(line: 0, scope: !9534)
!9544 = !DILocation(line: 581, column: 3, scope: !9534)
!9545 = !DILocation(line: 586, column: 29, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9547, file: !9064, line: 585, column: 5)
!9547 = distinct !DILexicalBlock(scope: !9534, file: !9064, line: 582, column: 3)
!9548 = !DILocation(line: 588, column: 7, scope: !9546)
!9549 = !DILocation(line: 594, column: 20, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9551, file: !9064, line: 594, column: 14)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !9064, line: 591, column: 9)
!9552 = distinct !DILexicalBlock(scope: !9546, file: !9064, line: 589, column: 7)
!9553 = !DILocation(line: 0, scope: !9550)
!9554 = !DILocation(line: 606, column: 27, scope: !9551)
!9555 = !DILocation(line: 606, column: 64, scope: !9551)
!9556 = !DILocation(line: 607, column: 42, scope: !9551)
!9557 = !DILocation(line: 607, column: 79, scope: !9551)
!9558 = !DILocation(line: 607, column: 33, scope: !9551)
!9559 = !DILocation(line: 607, column: 86, scope: !9551)
!9560 = !DILocation(line: 610, column: 29, scope: !9551)
!9561 = !DILocation(line: 610, column: 63, scope: !9551)
!9562 = !DILocation(line: 610, column: 70, scope: !9551)
!9563 = !DILocation(line: 611, column: 32, scope: !9551)
!9564 = !DILocation(line: 612, column: 11, scope: !9551)
!9565 = !DILocation(line: 619, column: 20, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9567, file: !9064, line: 619, column: 14)
!9567 = distinct !DILexicalBlock(scope: !9552, file: !9064, line: 616, column: 9)
!9568 = !DILocation(line: 0, scope: !9566)
!9569 = !DILocation(line: 632, column: 27, scope: !9567)
!9570 = !DILocation(line: 632, column: 64, scope: !9567)
!9571 = !DILocation(line: 633, column: 42, scope: !9567)
!9572 = !DILocation(line: 633, column: 79, scope: !9567)
!9573 = !DILocation(line: 633, column: 33, scope: !9567)
!9574 = !DILocation(line: 633, column: 86, scope: !9567)
!9575 = !DILocation(line: 636, column: 28, scope: !9567)
!9576 = !DILocation(line: 636, column: 36, scope: !9567)
!9577 = !DILocation(line: 636, column: 62, scope: !9567)
!9578 = !DILocation(line: 637, column: 32, scope: !9567)
!9579 = !DILocation(line: 638, column: 11, scope: !9567)
!9580 = !DILocation(line: 645, column: 20, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9582, file: !9064, line: 645, column: 14)
!9582 = distinct !DILexicalBlock(scope: !9552, file: !9064, line: 642, column: 9)
!9583 = !DILocation(line: 0, scope: !9581)
!9584 = !DILocation(line: 658, column: 27, scope: !9582)
!9585 = !DILocation(line: 658, column: 55, scope: !9582)
!9586 = !DILocation(line: 659, column: 42, scope: !9582)
!9587 = !DILocation(line: 659, column: 70, scope: !9582)
!9588 = !DILocation(line: 659, column: 33, scope: !9582)
!9589 = !DILocation(line: 659, column: 77, scope: !9582)
!9590 = !DILocation(line: 660, column: 11, scope: !9582)
!9591 = !DILocation(line: 665, column: 11, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9552, file: !9064, line: 663, column: 9)
!9593 = !DILocation(line: 669, column: 20, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9595, file: !9064, line: 669, column: 14)
!9595 = distinct !DILexicalBlock(scope: !9552, file: !9064, line: 668, column: 9)
!9596 = !DILocation(line: 691, column: 16, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9547, file: !9064, line: 689, column: 5)
!9598 = !DILocation(line: 692, column: 7, scope: !9597)
!9599 = !DILocation(line: 706, column: 20, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9601, file: !9064, line: 706, column: 14)
!9601 = distinct !DILexicalBlock(scope: !9602, file: !9064, line: 703, column: 9)
!9602 = distinct !DILexicalBlock(scope: !9597, file: !9064, line: 693, column: 7)
!9603 = !DILocation(line: 0, scope: !9600)
!9604 = !DILocation(line: 718, column: 53, scope: !9601)
!9605 = !DILocation(line: 718, column: 90, scope: !9601)
!9606 = !DILocation(line: 718, column: 43, scope: !9601)
!9607 = !DILocation(line: 720, column: 53, scope: !9601)
!9608 = !DILocation(line: 720, column: 90, scope: !9601)
!9609 = !DILocation(line: 720, column: 44, scope: !9601)
!9610 = !DILocation(line: 721, column: 11, scope: !9601)
!9611 = !DILocation(line: 728, column: 20, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9613, file: !9064, line: 728, column: 14)
!9613 = distinct !DILexicalBlock(scope: !9602, file: !9064, line: 725, column: 9)
!9614 = !DILocation(line: 0, scope: !9612)
!9615 = !DILocation(line: 740, column: 53, scope: !9613)
!9616 = !DILocation(line: 740, column: 81, scope: !9613)
!9617 = !DILocation(line: 740, column: 43, scope: !9613)
!9618 = !DILocation(line: 742, column: 53, scope: !9613)
!9619 = !DILocation(line: 742, column: 81, scope: !9613)
!9620 = !DILocation(line: 742, column: 44, scope: !9613)
!9621 = !DILocation(line: 743, column: 11, scope: !9613)
!9622 = !DILocation(line: 748, column: 20, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9624, file: !9064, line: 748, column: 14)
!9624 = distinct !DILexicalBlock(scope: !9602, file: !9064, line: 747, column: 9)
!9625 = !DILocation(line: 770, column: 16, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9547, file: !9064, line: 768, column: 5)
!9627 = !DILocation(line: 771, column: 7, scope: !9626)
!9628 = !DILocation(line: 785, column: 20, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9630, file: !9064, line: 785, column: 14)
!9630 = distinct !DILexicalBlock(scope: !9631, file: !9064, line: 782, column: 9)
!9631 = distinct !DILexicalBlock(scope: !9626, file: !9064, line: 772, column: 7)
!9632 = !DILocation(line: 0, scope: !9629)
!9633 = !DILocation(line: 797, column: 53, scope: !9630)
!9634 = !DILocation(line: 797, column: 90, scope: !9630)
!9635 = !DILocation(line: 797, column: 43, scope: !9630)
!9636 = !DILocation(line: 799, column: 53, scope: !9630)
!9637 = !DILocation(line: 799, column: 90, scope: !9630)
!9638 = !DILocation(line: 799, column: 44, scope: !9630)
!9639 = !DILocation(line: 800, column: 11, scope: !9630)
!9640 = !DILocation(line: 807, column: 20, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9642, file: !9064, line: 807, column: 14)
!9642 = distinct !DILexicalBlock(scope: !9631, file: !9064, line: 804, column: 9)
!9643 = !DILocation(line: 0, scope: !9641)
!9644 = !DILocation(line: 819, column: 53, scope: !9642)
!9645 = !DILocation(line: 819, column: 81, scope: !9642)
!9646 = !DILocation(line: 819, column: 43, scope: !9642)
!9647 = !DILocation(line: 821, column: 53, scope: !9642)
!9648 = !DILocation(line: 821, column: 81, scope: !9642)
!9649 = !DILocation(line: 821, column: 44, scope: !9642)
!9650 = !DILocation(line: 822, column: 11, scope: !9642)
!9651 = !DILocation(line: 827, column: 20, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !9064, line: 827, column: 14)
!9653 = distinct !DILexicalBlock(scope: !9631, file: !9064, line: 826, column: 9)
!9654 = !DILocation(line: 847, column: 3, scope: !9534)
!9655 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !9064, file: !9064, line: 2766, type: !9656, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9658)
!9656 = !DISubroutineType(types: !9657)
!9657 = !{null, !154}
!9658 = !{!9659}
!9659 = !DILocalVariable(name: "Mode", arg: 1, scope: !9655, file: !9064, line: 2766, type: !154)
!9660 = !DILocation(line: 0, scope: !9655)
!9661 = !DILocation(line: 2770, column: 11, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9655, file: !9064, line: 2770, column: 6)
!9663 = !DILocation(line: 0, scope: !9662)
!9664 = !DILocation(line: 2770, column: 6, scope: !9655)
!9665 = !DILocation(line: 2778, column: 1, scope: !9655)
!9666 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !9064, file: !9064, line: 2803, type: !9667, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9670)
!9667 = !DISubroutineType(types: !9668)
!9668 = !{!9067, !9669}
!9669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9075, size: 32)
!9670 = !{!9671, !9672}
!9671 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !9666, file: !9064, line: 2803, type: !9669)
!9672 = !DILocalVariable(name: "tickstart", scope: !9666, file: !9064, line: 2805, type: !121)
!9673 = !DILocation(line: 0, scope: !9666)
!9674 = !DILocation(line: 2821, column: 3, scope: !9666)
!9675 = !DILocation(line: 2824, column: 15, scope: !9666)
!9676 = !DILocation(line: 2825, column: 3, scope: !9666)
!9677 = !DILocation(line: 2825, column: 9, scope: !9666)
!9678 = !DILocation(line: 2827, column: 9, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9680, file: !9064, line: 2827, column: 8)
!9680 = distinct !DILexicalBlock(scope: !9666, file: !9064, line: 2826, column: 3)
!9681 = !DILocation(line: 2827, column: 23, scope: !9679)
!9682 = !DILocation(line: 2827, column: 37, scope: !9679)
!9683 = !DILocation(line: 2827, column: 8, scope: !9680)
!9684 = distinct !{!9684, !9676, !9685}
!9685 = !DILocation(line: 2832, column: 3, scope: !9666)
!9686 = !DILocation(line: 2840, column: 3, scope: !9666)
!9687 = !DILocation(line: 2866, column: 3, scope: !9666)
!9688 = !DILocation(line: 2869, column: 15, scope: !9666)
!9689 = !DILocation(line: 2870, column: 3, scope: !9666)
!9690 = !DILocation(line: 2870, column: 9, scope: !9666)
!9691 = !DILocation(line: 2870, column: 48, scope: !9666)
!9692 = !DILocation(line: 2872, column: 9, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9694, file: !9064, line: 2872, column: 8)
!9694 = distinct !DILexicalBlock(scope: !9666, file: !9064, line: 2871, column: 3)
!9695 = !DILocation(line: 2872, column: 23, scope: !9693)
!9696 = !DILocation(line: 2872, column: 37, scope: !9693)
!9697 = !DILocation(line: 2872, column: 8, scope: !9694)
!9698 = distinct !{!9698, !9689, !9699}
!9699 = !DILocation(line: 2877, column: 3, scope: !9666)
!9700 = !DILocation(line: 2880, column: 1, scope: !9666)
!9701 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !9064, file: !9064, line: 2886, type: !9702, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9704)
!9702 = !DISubroutineType(types: !9703)
!9703 = !{!9067}
!9704 = !{!9705}
!9705 = !DILocalVariable(name: "tickstart", scope: !9701, file: !9064, line: 2888, type: !121)
!9706 = !DILocation(line: 2891, column: 3, scope: !9701)
!9707 = !DILocation(line: 2894, column: 15, scope: !9701)
!9708 = !DILocation(line: 0, scope: !9701)
!9709 = !DILocation(line: 2895, column: 3, scope: !9701)
!9710 = !DILocation(line: 2895, column: 9, scope: !9701)
!9711 = !DILocation(line: 2895, column: 45, scope: !9701)
!9712 = !DILocation(line: 2897, column: 9, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !9064, line: 2897, column: 8)
!9714 = distinct !DILexicalBlock(scope: !9701, file: !9064, line: 2896, column: 3)
!9715 = !DILocation(line: 2897, column: 23, scope: !9713)
!9716 = !DILocation(line: 2897, column: 36, scope: !9713)
!9717 = !DILocation(line: 2897, column: 8, scope: !9714)
!9718 = distinct !{!9718, !9709, !9719}
!9719 = !DILocation(line: 2902, column: 3, scope: !9701)
!9720 = !DILocation(line: 2905, column: 1, scope: !9701)
!9721 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !9064, file: !9064, line: 2916, type: !9722, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9725)
!9722 = !DISubroutineType(types: !9723)
!9723 = !{!9067, !9724}
!9724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9084, size: 32)
!9725 = !{!9726, !9727}
!9726 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !9721, file: !9064, line: 2916, type: !9724)
!9727 = !DILocalVariable(name: "tickstart", scope: !9721, file: !9064, line: 2918, type: !121)
!9728 = !DILocation(line: 0, scope: !9721)
!9729 = !DILocation(line: 2934, column: 3, scope: !9721)
!9730 = !DILocation(line: 2937, column: 15, scope: !9721)
!9731 = !DILocation(line: 2938, column: 3, scope: !9721)
!9732 = !DILocation(line: 2938, column: 9, scope: !9721)
!9733 = !DILocation(line: 2940, column: 9, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !9064, line: 2940, column: 8)
!9735 = distinct !DILexicalBlock(scope: !9721, file: !9064, line: 2939, column: 3)
!9736 = !DILocation(line: 2940, column: 23, scope: !9734)
!9737 = !DILocation(line: 2940, column: 37, scope: !9734)
!9738 = !DILocation(line: 2940, column: 8, scope: !9735)
!9739 = distinct !{!9739, !9731, !9740}
!9740 = !DILocation(line: 2945, column: 3, scope: !9721)
!9741 = !DILocation(line: 2953, column: 3, scope: !9721)
!9742 = !DILocation(line: 2970, column: 3, scope: !9721)
!9743 = !DILocation(line: 2973, column: 15, scope: !9721)
!9744 = !DILocation(line: 2974, column: 3, scope: !9721)
!9745 = !DILocation(line: 2974, column: 9, scope: !9721)
!9746 = !DILocation(line: 2974, column: 37, scope: !9721)
!9747 = !DILocation(line: 2976, column: 9, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9749, file: !9064, line: 2976, column: 8)
!9749 = distinct !DILexicalBlock(scope: !9721, file: !9064, line: 2975, column: 3)
!9750 = !DILocation(line: 2976, column: 23, scope: !9748)
!9751 = !DILocation(line: 2976, column: 37, scope: !9748)
!9752 = !DILocation(line: 2976, column: 8, scope: !9749)
!9753 = distinct !{!9753, !9744, !9754}
!9754 = !DILocation(line: 2981, column: 3, scope: !9721)
!9755 = !DILocation(line: 2984, column: 1, scope: !9721)
!9756 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !9064, file: !9064, line: 2990, type: !9702, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9757)
!9757 = !{!9758}
!9758 = !DILocalVariable(name: "tickstart", scope: !9756, file: !9064, line: 2992, type: !121)
!9759 = !DILocation(line: 2995, column: 3, scope: !9756)
!9760 = !DILocation(line: 2998, column: 15, scope: !9756)
!9761 = !DILocation(line: 0, scope: !9756)
!9762 = !DILocation(line: 2999, column: 3, scope: !9756)
!9763 = !DILocation(line: 2999, column: 9, scope: !9756)
!9764 = !DILocation(line: 3001, column: 9, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !9064, line: 3001, column: 8)
!9766 = distinct !DILexicalBlock(scope: !9756, file: !9064, line: 3000, column: 3)
!9767 = !DILocation(line: 3001, column: 23, scope: !9765)
!9768 = !DILocation(line: 3001, column: 36, scope: !9765)
!9769 = !DILocation(line: 3001, column: 8, scope: !9766)
!9770 = distinct !{!9770, !9762, !9771}
!9771 = !DILocation(line: 3006, column: 3, scope: !9756)
!9772 = !DILocation(line: 3009, column: 1, scope: !9756)
!9773 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9064, file: !9064, line: 3051, type: !4877, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9774)
!9774 = !{!9775, !9776, !9777, !9778, !9779}
!9775 = !DILocalVariable(name: "pllm", scope: !9773, file: !9064, line: 3053, type: !121)
!9776 = !DILocalVariable(name: "pllvco", scope: !9773, file: !9064, line: 3054, type: !121)
!9777 = !DILocalVariable(name: "pllp", scope: !9773, file: !9064, line: 3055, type: !121)
!9778 = !DILocalVariable(name: "pllr", scope: !9773, file: !9064, line: 3056, type: !121)
!9779 = !DILocalVariable(name: "sysclockfreq", scope: !9773, file: !9064, line: 3057, type: !121)
!9780 = !DILocation(line: 0, scope: !9773)
!9781 = !DILocation(line: 3060, column: 16, scope: !9773)
!9782 = !DILocation(line: 3060, column: 3, scope: !9773)
!9783 = !DILocation(line: 3076, column: 19, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9785, file: !9064, line: 3073, column: 5)
!9785 = distinct !DILexicalBlock(scope: !9773, file: !9064, line: 3061, column: 3)
!9786 = !DILocation(line: 3076, column: 27, scope: !9784)
!9787 = !DILocation(line: 3077, column: 10, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9784, file: !9064, line: 3077, column: 10)
!9789 = !DILocation(line: 0, scope: !9788)
!9790 = !DILocation(line: 3087, column: 23, scope: !9784)
!9791 = !DILocation(line: 3087, column: 82, scope: !9784)
!9792 = !DILocation(line: 3089, column: 28, scope: !9784)
!9793 = !DILocation(line: 3090, column: 7, scope: !9784)
!9794 = !DILocation(line: 3096, column: 19, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9785, file: !9064, line: 3093, column: 5)
!9796 = !DILocation(line: 3096, column: 27, scope: !9795)
!9797 = !DILocation(line: 3097, column: 10, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9795, file: !9064, line: 3097, column: 10)
!9799 = !DILocation(line: 0, scope: !9798)
!9800 = !DILocation(line: 3107, column: 21, scope: !9795)
!9801 = !DILocation(line: 3107, column: 49, scope: !9795)
!9802 = !DILocation(line: 3109, column: 28, scope: !9795)
!9803 = !DILocation(line: 3110, column: 7, scope: !9795)
!9804 = !DILocation(line: 0, scope: !9785)
!9805 = !DILocation(line: 3118, column: 3, scope: !9773)
!9806 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9064, file: !9064, line: 3143, type: !9702, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9807)
!9807 = !{!9808}
!9808 = !DILocalVariable(name: "tickstart", scope: !9806, file: !9064, line: 3145, type: !121)
!9809 = !DILocation(line: 3148, column: 15, scope: !9806)
!9810 = !DILocation(line: 0, scope: !9806)
!9811 = !DILocation(line: 3151, column: 3, scope: !9806)
!9812 = !DILocation(line: 3154, column: 3, scope: !9806)
!9813 = !DILocation(line: 3154, column: 10, scope: !9806)
!9814 = !DILocation(line: 3154, column: 43, scope: !9806)
!9815 = !DILocation(line: 3156, column: 10, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9817, file: !9064, line: 3156, column: 9)
!9817 = distinct !DILexicalBlock(scope: !9806, file: !9064, line: 3155, column: 3)
!9818 = !DILocation(line: 3156, column: 24, scope: !9816)
!9819 = !DILocation(line: 3156, column: 37, scope: !9816)
!9820 = !DILocation(line: 3156, column: 9, scope: !9817)
!9821 = distinct !{!9821, !9812, !9822}
!9822 = !DILocation(line: 3160, column: 3, scope: !9806)
!9823 = !DILocation(line: 3163, column: 3, scope: !9806)
!9824 = !DILocation(line: 3166, column: 15, scope: !9806)
!9825 = !DILocation(line: 3169, column: 3, scope: !9806)
!9826 = !DILocation(line: 3172, column: 3, scope: !9806)
!9827 = !DILocation(line: 3172, column: 10, scope: !9806)
!9828 = !DILocation(line: 3172, column: 44, scope: !9806)
!9829 = !DILocation(line: 3174, column: 24, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9831, file: !9064, line: 3174, column: 9)
!9831 = distinct !DILexicalBlock(scope: !9806, file: !9064, line: 3173, column: 3)
!9832 = !DILocation(line: 3174, column: 37, scope: !9830)
!9833 = !DILocation(line: 3174, column: 9, scope: !9831)
!9834 = distinct !{!9834, !9826, !9835}
!9835 = !DILocation(line: 3178, column: 3, scope: !9806)
!9836 = !DILocation(line: 3184, column: 3, scope: !9806)
!9837 = !DILocation(line: 3187, column: 3, scope: !9806)
!9838 = !DILocation(line: 3187, column: 10, scope: !9806)
!9839 = !DILocation(line: 3187, column: 43, scope: !9806)
!9840 = !DILocation(line: 3189, column: 24, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9842, file: !9064, line: 3189, column: 9)
!9842 = distinct !DILexicalBlock(scope: !9806, file: !9064, line: 3188, column: 3)
!9843 = !DILocation(line: 3189, column: 37, scope: !9841)
!9844 = !DILocation(line: 3189, column: 9, scope: !9842)
!9845 = distinct !{!9845, !9837, !9846}
!9846 = !DILocation(line: 3193, column: 3, scope: !9806)
!9847 = !DILocation(line: 3199, column: 3, scope: !9806)
!9848 = !DILocation(line: 3202, column: 3, scope: !9806)
!9849 = !DILocation(line: 3202, column: 10, scope: !9806)
!9850 = !DILocation(line: 3202, column: 43, scope: !9806)
!9851 = !DILocation(line: 3204, column: 24, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9853, file: !9064, line: 3204, column: 9)
!9853 = distinct !DILexicalBlock(scope: !9806, file: !9064, line: 3203, column: 3)
!9854 = !DILocation(line: 3204, column: 37, scope: !9852)
!9855 = !DILocation(line: 3204, column: 9, scope: !9853)
!9856 = distinct !{!9856, !9848, !9857}
!9857 = !DILocation(line: 3208, column: 3, scope: !9806)
!9858 = !DILocation(line: 3215, column: 3, scope: !9806)
!9859 = !DILocation(line: 3218, column: 3, scope: !9806)
!9860 = !DILocation(line: 3218, column: 10, scope: !9806)
!9861 = !DILocation(line: 3218, column: 46, scope: !9806)
!9862 = !DILocation(line: 3220, column: 24, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9864, file: !9064, line: 3220, column: 9)
!9864 = distinct !DILexicalBlock(scope: !9806, file: !9064, line: 3219, column: 3)
!9865 = !DILocation(line: 3220, column: 37, scope: !9863)
!9866 = !DILocation(line: 3220, column: 9, scope: !9864)
!9867 = distinct !{!9867, !9859, !9868}
!9868 = !DILocation(line: 3224, column: 3, scope: !9806)
!9869 = !DILocation(line: 3232, column: 3, scope: !9806)
!9870 = !DILocation(line: 3235, column: 3, scope: !9806)
!9871 = !DILocation(line: 3235, column: 10, scope: !9806)
!9872 = !DILocation(line: 3235, column: 46, scope: !9806)
!9873 = !DILocation(line: 3237, column: 10, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9875, file: !9064, line: 3237, column: 9)
!9875 = distinct !DILexicalBlock(scope: !9806, file: !9064, line: 3236, column: 3)
!9876 = !DILocation(line: 3237, column: 24, scope: !9874)
!9877 = !DILocation(line: 3237, column: 37, scope: !9874)
!9878 = !DILocation(line: 3237, column: 9, scope: !9875)
!9879 = distinct !{!9879, !9870, !9880}
!9880 = !DILocation(line: 3241, column: 3, scope: !9806)
!9881 = !DILocation(line: 3247, column: 16, scope: !9806)
!9882 = !DILocation(line: 3257, column: 19, scope: !9806)
!9883 = !DILocation(line: 3270, column: 19, scope: !9806)
!9884 = !DILocation(line: 3274, column: 3, scope: !9806)
!9885 = !DILocation(line: 3277, column: 3, scope: !9806)
!9886 = !DILocation(line: 3281, column: 3, scope: !9806)
!9887 = !DILocation(line: 3285, column: 3, scope: !9806)
!9888 = !DILocation(line: 3288, column: 3, scope: !9806)
!9889 = !DILocation(line: 3292, column: 3, scope: !9806)
!9890 = !DILocation(line: 3296, column: 3, scope: !9806)
!9891 = !DILocation(line: 3299, column: 3, scope: !9806)
!9892 = !DILocation(line: 3302, column: 19, scope: !9806)
!9893 = !DILocation(line: 3305, column: 19, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9806, file: !9064, line: 3305, column: 6)
!9895 = !DILocation(line: 3305, column: 6, scope: !9894)
!9896 = !DILocation(line: 3305, column: 31, scope: !9894)
!9897 = !DILocation(line: 0, scope: !9894)
!9898 = !DILocation(line: 3313, column: 1, scope: !9806)
!9899 = !DISubprogram(name: "HAL_InitTick", scope: !9439, file: !9439, line: 223, type: !9900, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9900 = !DISubroutineType(types: !9901)
!9901 = !{!9067, !121}
!9902 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9064, file: !9064, line: 3333, type: !9903, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9927)
!9903 = !DISubroutineType(types: !9904)
!9904 = !{!9067, !9905}
!9905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9906, size: 32)
!9906 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !9907, line: 70, baseType: !9908)
!9907 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9907, line: 49, size: 416, elements: !9909)
!9909 = !{!9910, !9911, !9912, !9913, !9914, !9915, !9916}
!9910 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !9908, file: !9907, line: 51, baseType: !121, size: 32)
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !9908, file: !9907, line: 54, baseType: !121, size: 32, offset: 32)
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !9908, file: !9907, line: 57, baseType: !121, size: 32, offset: 64)
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !9908, file: !9907, line: 60, baseType: !121, size: 32, offset: 96)
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !9908, file: !9907, line: 63, baseType: !121, size: 32, offset: 128)
!9915 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !9908, file: !9907, line: 66, baseType: !121, size: 32, offset: 160)
!9916 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !9908, file: !9907, line: 69, baseType: !9917, size: 224, offset: 192)
!9917 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9070, line: 73, baseType: !9918)
!9918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9070, line: 45, size: 224, elements: !9919)
!9919 = !{!9920, !9921, !9922, !9923, !9924, !9925, !9926}
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !9918, file: !9070, line: 47, baseType: !121, size: 32)
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !9918, file: !9070, line: 50, baseType: !121, size: 32, offset: 32)
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !9918, file: !9070, line: 53, baseType: !121, size: 32, offset: 64)
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !9918, file: !9070, line: 56, baseType: !121, size: 32, offset: 96)
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !9918, file: !9070, line: 60, baseType: !121, size: 32, offset: 128)
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !9918, file: !9070, line: 63, baseType: !121, size: 32, offset: 160)
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !9918, file: !9070, line: 68, baseType: !121, size: 32, offset: 192)
!9927 = !{!9928, !9929, !9930, !9931, !9935}
!9928 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9902, file: !9064, line: 3333, type: !9905)
!9929 = !DILocalVariable(name: "tickstart", scope: !9902, file: !9064, line: 3335, type: !121)
!9930 = !DILocalVariable(name: "pll_config", scope: !9902, file: !9064, line: 3335, type: !121)
!9931 = !DILocalVariable(name: "pwrclkchanged", scope: !9932, file: !9064, line: 3517, type: !9934)
!9932 = distinct !DILexicalBlock(scope: !9933, file: !9064, line: 3516, column: 3)
!9933 = distinct !DILexicalBlock(scope: !9902, file: !9064, line: 3515, column: 6)
!9934 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !666, line: 188, baseType: !2661)
!9935 = !DILocalVariable(name: "tmpreg", scope: !9936, file: !9064, line: 3526, type: !120)
!9936 = distinct !DILexicalBlock(scope: !9937, file: !9064, line: 3526, column: 7)
!9937 = distinct !DILexicalBlock(scope: !9938, file: !9064, line: 3525, column: 5)
!9938 = distinct !DILexicalBlock(scope: !9932, file: !9064, line: 3524, column: 8)
!9939 = !DILocation(line: 0, scope: !9902)
!9940 = !DILocation(line: 3338, column: 24, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9902, file: !9064, line: 3338, column: 6)
!9942 = !DILocation(line: 3338, column: 6, scope: !9902)
!9943 = !DILocation(line: 3346, column: 27, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9902, file: !9064, line: 3346, column: 6)
!9945 = !DILocation(line: 3346, column: 43, scope: !9944)
!9946 = !DILocation(line: 3346, column: 69, scope: !9944)
!9947 = !DILocation(line: 3346, column: 6, scope: !9902)
!9948 = !DILocation(line: 3352, column: 9, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !9064, line: 3352, column: 8)
!9950 = distinct !DILexicalBlock(scope: !9944, file: !9064, line: 3347, column: 3)
!9951 = !DILocation(line: 3352, column: 39, scope: !9949)
!9952 = !DILocation(line: 3352, column: 128, scope: !9949)
!9953 = !DILocation(line: 3353, column: 9, scope: !9949)
!9954 = !DILocation(line: 3353, column: 39, scope: !9949)
!9955 = !DILocation(line: 3353, column: 60, scope: !9949)
!9956 = !DILocation(line: 3353, column: 70, scope: !9949)
!9957 = !DILocation(line: 3353, column: 78, scope: !9949)
!9958 = !DILocation(line: 3353, column: 100, scope: !9949)
!9959 = !DILocation(line: 3353, column: 128, scope: !9949)
!9960 = !DILocation(line: 3354, column: 9, scope: !9949)
!9961 = !DILocation(line: 3354, column: 39, scope: !9949)
!9962 = !DILocation(line: 3354, column: 61, scope: !9949)
!9963 = !DILocation(line: 3354, column: 71, scope: !9949)
!9964 = !DILocation(line: 3354, column: 79, scope: !9949)
!9965 = !DILocation(line: 3354, column: 101, scope: !9949)
!9966 = !DILocation(line: 3352, column: 8, scope: !9950)
!9967 = !DILocation(line: 3360, column: 11, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9969, file: !9064, line: 3360, column: 10)
!9969 = distinct !DILexicalBlock(scope: !9949, file: !9064, line: 3359, column: 5)
!9970 = !DILocation(line: 3360, column: 57, scope: !9968)
!9971 = !DILocation(line: 3360, column: 80, scope: !9968)
!9972 = !DILocation(line: 3360, column: 89, scope: !9968)
!9973 = !DILocation(line: 3360, column: 10, scope: !9969)
!9974 = !DILocation(line: 3368, column: 7, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !9064, line: 3368, column: 7)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !9064, line: 3368, column: 7)
!9977 = distinct !DILexicalBlock(scope: !9949, file: !9064, line: 3366, column: 5)
!9978 = !DILocation(line: 3368, column: 7, scope: !9976)
!9979 = !DILocation(line: 3368, column: 7, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9975, file: !9064, line: 3368, column: 7)
!9981 = !DILocation(line: 3368, column: 7, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9983, file: !9064, line: 3368, column: 7)
!9983 = distinct !DILexicalBlock(scope: !9975, file: !9064, line: 3368, column: 7)
!9984 = !DILocation(line: 3368, column: 7, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9983, file: !9064, line: 3368, column: 7)
!9986 = !DILocation(line: 0, scope: !9975)
!9987 = !DILocation(line: 3371, column: 30, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9977, file: !9064, line: 3371, column: 10)
!9989 = !DILocation(line: 3371, column: 40, scope: !9988)
!9990 = !DILocation(line: 0, scope: !9988)
!9991 = !DILocation(line: 3371, column: 10, scope: !9977)
!9992 = !DILocation(line: 3377, column: 15, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9988, file: !9064, line: 3372, column: 7)
!9994 = !DILocation(line: 3377, column: 51, scope: !9993)
!9995 = !DILocation(line: 3377, column: 9, scope: !9993)
!9996 = !DILocation(line: 3379, column: 15, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9998, file: !9064, line: 3379, column: 14)
!9998 = distinct !DILexicalBlock(scope: !9993, file: !9064, line: 3378, column: 9)
!9999 = !DILocation(line: 3379, column: 29, scope: !9997)
!10000 = !DILocation(line: 3379, column: 43, scope: !9997)
!10001 = !DILocation(line: 3379, column: 14, scope: !9998)
!10002 = distinct !{!10002, !9995, !10003}
!10003 = !DILocation(line: 3383, column: 9, scope: !9993)
!10004 = !DILocation(line: 3391, column: 15, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9988, file: !9064, line: 3386, column: 7)
!10006 = !DILocation(line: 3391, column: 9, scope: !10005)
!10007 = !DILocation(line: 3393, column: 15, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10009, file: !9064, line: 3393, column: 14)
!10009 = distinct !DILexicalBlock(scope: !10005, file: !9064, line: 3392, column: 9)
!10010 = !DILocation(line: 3393, column: 29, scope: !10008)
!10011 = !DILocation(line: 3393, column: 43, scope: !10008)
!10012 = !DILocation(line: 3393, column: 14, scope: !10009)
!10013 = distinct !{!10013, !10006, !10014}
!10014 = !DILocation(line: 3397, column: 9, scope: !10005)
!10015 = !DILocation(line: 3402, column: 27, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9902, file: !9064, line: 3402, column: 6)
!10017 = !DILocation(line: 3402, column: 43, scope: !10016)
!10018 = !DILocation(line: 3402, column: 69, scope: !10016)
!10019 = !DILocation(line: 3402, column: 6, scope: !9902)
!10020 = !DILocation(line: 3410, column: 9, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10022, file: !9064, line: 3410, column: 8)
!10022 = distinct !DILexicalBlock(scope: !10016, file: !9064, line: 3403, column: 3)
!10023 = !DILocation(line: 3410, column: 39, scope: !10021)
!10024 = !DILocation(line: 3410, column: 128, scope: !10021)
!10025 = !DILocation(line: 3411, column: 9, scope: !10021)
!10026 = !DILocation(line: 3411, column: 39, scope: !10021)
!10027 = !DILocation(line: 3411, column: 60, scope: !10021)
!10028 = !DILocation(line: 3411, column: 70, scope: !10021)
!10029 = !DILocation(line: 3411, column: 78, scope: !10021)
!10030 = !DILocation(line: 3411, column: 100, scope: !10021)
!10031 = !DILocation(line: 3411, column: 128, scope: !10021)
!10032 = !DILocation(line: 3412, column: 9, scope: !10021)
!10033 = !DILocation(line: 3412, column: 39, scope: !10021)
!10034 = !DILocation(line: 3412, column: 61, scope: !10021)
!10035 = !DILocation(line: 3412, column: 71, scope: !10021)
!10036 = !DILocation(line: 3412, column: 79, scope: !10021)
!10037 = !DILocation(line: 3412, column: 101, scope: !10021)
!10038 = !DILocation(line: 3410, column: 8, scope: !10022)
!10039 = !DILocation(line: 3419, column: 11, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10041, file: !9064, line: 3419, column: 10)
!10041 = distinct !DILexicalBlock(scope: !10021, file: !9064, line: 3417, column: 5)
!10042 = !DILocation(line: 3419, column: 57, scope: !10040)
!10043 = !DILocation(line: 3419, column: 80, scope: !10040)
!10044 = !DILocation(line: 3419, column: 89, scope: !10040)
!10045 = !DILocation(line: 3419, column: 10, scope: !10041)
!10046 = !DILocation(line: 3433, column: 30, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10048, file: !9064, line: 3433, column: 10)
!10048 = distinct !DILexicalBlock(scope: !10021, file: !9064, line: 3431, column: 5)
!10049 = !DILocation(line: 3433, column: 39, scope: !10047)
!10050 = !DILocation(line: 3433, column: 10, scope: !10048)
!10051 = !DILocation(line: 3436, column: 9, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10047, file: !9064, line: 3434, column: 7)
!10053 = !DILocation(line: 3439, column: 21, scope: !10052)
!10054 = !DILocation(line: 3442, column: 9, scope: !10052)
!10055 = !DILocation(line: 3442, column: 15, scope: !10052)
!10056 = !DILocation(line: 3442, column: 51, scope: !10052)
!10057 = !DILocation(line: 3444, column: 15, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10059, file: !9064, line: 3444, column: 14)
!10059 = distinct !DILexicalBlock(scope: !10052, file: !9064, line: 3443, column: 9)
!10060 = !DILocation(line: 3444, column: 29, scope: !10058)
!10061 = !DILocation(line: 3444, column: 43, scope: !10058)
!10062 = !DILocation(line: 3444, column: 14, scope: !10059)
!10063 = distinct !{!10063, !10054, !10064}
!10064 = !DILocation(line: 3448, column: 9, scope: !10052)
!10065 = !DILocation(line: 3456, column: 9, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10047, file: !9064, line: 3454, column: 7)
!10067 = !DILocation(line: 3459, column: 21, scope: !10066)
!10068 = !DILocation(line: 3462, column: 9, scope: !10066)
!10069 = !DILocation(line: 3462, column: 15, scope: !10066)
!10070 = !DILocation(line: 3464, column: 15, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !9064, line: 3464, column: 14)
!10072 = distinct !DILexicalBlock(scope: !10066, file: !9064, line: 3463, column: 9)
!10073 = !DILocation(line: 3464, column: 29, scope: !10071)
!10074 = !DILocation(line: 3464, column: 43, scope: !10071)
!10075 = !DILocation(line: 3464, column: 14, scope: !10072)
!10076 = distinct !{!10076, !10068, !10077}
!10077 = !DILocation(line: 3468, column: 9, scope: !10066)
!10078 = !DILocation(line: 0, scope: !10021)
!10079 = !DILocation(line: 3473, column: 27, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !9902, file: !9064, line: 3473, column: 6)
!10081 = !DILocation(line: 3473, column: 43, scope: !10080)
!10082 = !DILocation(line: 3473, column: 69, scope: !10080)
!10083 = !DILocation(line: 3473, column: 6, scope: !9902)
!10084 = !DILocation(line: 3479, column: 28, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10086, file: !9064, line: 3479, column: 8)
!10086 = distinct !DILexicalBlock(scope: !10080, file: !9064, line: 3474, column: 3)
!10087 = !DILocation(line: 3479, column: 37, scope: !10085)
!10088 = !DILocation(line: 3479, column: 8, scope: !10086)
!10089 = !DILocation(line: 3482, column: 7, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10085, file: !9064, line: 3480, column: 5)
!10091 = !DILocation(line: 3485, column: 19, scope: !10090)
!10092 = !DILocation(line: 3488, column: 7, scope: !10090)
!10093 = !DILocation(line: 3488, column: 13, scope: !10090)
!10094 = !DILocation(line: 3488, column: 49, scope: !10090)
!10095 = !DILocation(line: 3490, column: 13, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10097, file: !9064, line: 3490, column: 12)
!10097 = distinct !DILexicalBlock(scope: !10090, file: !9064, line: 3489, column: 7)
!10098 = !DILocation(line: 3490, column: 27, scope: !10096)
!10099 = !DILocation(line: 3490, column: 41, scope: !10096)
!10100 = !DILocation(line: 3490, column: 12, scope: !10097)
!10101 = distinct !{!10101, !10092, !10102}
!10102 = !DILocation(line: 3494, column: 7, scope: !10090)
!10103 = !DILocation(line: 3499, column: 7, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10085, file: !9064, line: 3497, column: 5)
!10105 = !DILocation(line: 3502, column: 19, scope: !10104)
!10106 = !DILocation(line: 3505, column: 7, scope: !10104)
!10107 = !DILocation(line: 3505, column: 13, scope: !10104)
!10108 = !DILocation(line: 3507, column: 13, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10110, file: !9064, line: 3507, column: 12)
!10110 = distinct !DILexicalBlock(scope: !10104, file: !9064, line: 3506, column: 7)
!10111 = !DILocation(line: 3507, column: 27, scope: !10109)
!10112 = !DILocation(line: 3507, column: 41, scope: !10109)
!10113 = !DILocation(line: 3507, column: 12, scope: !10110)
!10114 = distinct !{!10114, !10106, !10115}
!10115 = !DILocation(line: 3511, column: 7, scope: !10104)
!10116 = !DILocation(line: 3515, column: 27, scope: !9933)
!10117 = !DILocation(line: 3515, column: 43, scope: !9933)
!10118 = !DILocation(line: 3515, column: 69, scope: !9933)
!10119 = !DILocation(line: 3515, column: 6, scope: !9902)
!10120 = !DILocation(line: 0, scope: !9932)
!10121 = !DILocation(line: 3524, column: 8, scope: !9938)
!10122 = !DILocation(line: 3524, column: 8, scope: !9932)
!10123 = !DILocation(line: 3526, column: 7, scope: !9936)
!10124 = !DILocation(line: 3526, column: 7, scope: !9937)
!10125 = !DILocation(line: 3528, column: 5, scope: !9937)
!10126 = !DILocation(line: 3530, column: 8, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !9932, file: !9064, line: 3530, column: 8)
!10128 = !DILocation(line: 3530, column: 8, scope: !9932)
!10129 = !DILocation(line: 3533, column: 7, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10127, file: !9064, line: 3531, column: 5)
!10131 = !DILocation(line: 3536, column: 19, scope: !10130)
!10132 = !DILocation(line: 3538, column: 7, scope: !10130)
!10133 = !DILocation(line: 3538, column: 13, scope: !10130)
!10134 = !DILocation(line: 3540, column: 13, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10136, file: !9064, line: 3540, column: 12)
!10136 = distinct !DILexicalBlock(scope: !10130, file: !9064, line: 3539, column: 7)
!10137 = !DILocation(line: 3540, column: 27, scope: !10135)
!10138 = !DILocation(line: 3540, column: 40, scope: !10135)
!10139 = !DILocation(line: 3540, column: 12, scope: !10136)
!10140 = distinct !{!10140, !10132, !10141}
!10141 = !DILocation(line: 3544, column: 7, scope: !10130)
!10142 = !DILocation(line: 3548, column: 5, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10144, file: !9064, line: 3548, column: 5)
!10144 = distinct !DILexicalBlock(scope: !9932, file: !9064, line: 3548, column: 5)
!10145 = !DILocation(line: 3548, column: 5, scope: !10144)
!10146 = !DILocation(line: 3548, column: 5, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10143, file: !9064, line: 3548, column: 5)
!10148 = !DILocation(line: 3548, column: 5, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10150, file: !9064, line: 3548, column: 5)
!10150 = distinct !DILexicalBlock(scope: !10143, file: !9064, line: 3548, column: 5)
!10151 = !DILocation(line: 3548, column: 5, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10150, file: !9064, line: 3548, column: 5)
!10153 = !DILocation(line: 0, scope: !10143)
!10154 = !DILocation(line: 3550, column: 28, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !9932, file: !9064, line: 3550, column: 8)
!10156 = !DILocation(line: 3550, column: 38, scope: !10155)
!10157 = !DILocation(line: 0, scope: !10155)
!10158 = !DILocation(line: 3550, column: 8, scope: !9932)
!10159 = !DILocation(line: 3556, column: 13, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10155, file: !9064, line: 3551, column: 5)
!10161 = !DILocation(line: 3556, column: 49, scope: !10160)
!10162 = !DILocation(line: 3556, column: 7, scope: !10160)
!10163 = !DILocation(line: 3558, column: 13, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10165, file: !9064, line: 3558, column: 12)
!10165 = distinct !DILexicalBlock(scope: !10160, file: !9064, line: 3557, column: 7)
!10166 = !DILocation(line: 3558, column: 27, scope: !10164)
!10167 = !DILocation(line: 3558, column: 41, scope: !10164)
!10168 = !DILocation(line: 3558, column: 12, scope: !10165)
!10169 = distinct !{!10169, !10162, !10170}
!10170 = !DILocation(line: 3562, column: 7, scope: !10160)
!10171 = !DILocation(line: 3570, column: 13, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10155, file: !9064, line: 3565, column: 5)
!10173 = !DILocation(line: 3570, column: 7, scope: !10172)
!10174 = !DILocation(line: 3572, column: 13, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10176, file: !9064, line: 3572, column: 12)
!10176 = distinct !DILexicalBlock(scope: !10172, file: !9064, line: 3571, column: 7)
!10177 = !DILocation(line: 3572, column: 27, scope: !10175)
!10178 = !DILocation(line: 3572, column: 41, scope: !10175)
!10179 = !DILocation(line: 3572, column: 12, scope: !10176)
!10180 = distinct !{!10180, !10173, !10181}
!10181 = !DILocation(line: 3576, column: 7, scope: !10172)
!10182 = !DILocation(line: 3580, column: 8, scope: !9932)
!10183 = !DILocation(line: 3582, column: 7, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10185, file: !9064, line: 3581, column: 5)
!10185 = distinct !DILexicalBlock(scope: !9932, file: !9064, line: 3580, column: 8)
!10186 = !DILocation(line: 3583, column: 5, scope: !10184)
!10187 = !DILocation(line: 3588, column: 31, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !9902, file: !9064, line: 3588, column: 7)
!10189 = !DILocation(line: 3588, column: 41, scope: !10188)
!10190 = !DILocation(line: 3588, column: 7, scope: !9902)
!10191 = !DILocation(line: 3591, column: 8, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10193, file: !9064, line: 3591, column: 8)
!10193 = distinct !DILexicalBlock(scope: !10188, file: !9064, line: 3589, column: 3)
!10194 = !DILocation(line: 3591, column: 38, scope: !10192)
!10195 = !DILocation(line: 3591, column: 8, scope: !10193)
!10196 = !DILocation(line: 3593, column: 44, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10198, file: !9064, line: 3593, column: 10)
!10198 = distinct !DILexicalBlock(scope: !10192, file: !9064, line: 3592, column: 5)
!10199 = !DILocation(line: 0, scope: !10197)
!10200 = !DILocation(line: 3593, column: 10, scope: !10198)
!10201 = !DILocation(line: 3610, column: 15, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10197, file: !9064, line: 3594, column: 7)
!10203 = !DILocation(line: 3610, column: 9, scope: !10202)
!10204 = !DILocation(line: 3612, column: 15, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10206, file: !9064, line: 3612, column: 14)
!10206 = distinct !DILexicalBlock(scope: !10202, file: !9064, line: 3611, column: 9)
!10207 = !DILocation(line: 3612, column: 29, scope: !10205)
!10208 = !DILocation(line: 3612, column: 43, scope: !10205)
!10209 = !DILocation(line: 3612, column: 14, scope: !10206)
!10210 = distinct !{!10210, !10203, !10211}
!10211 = !DILocation(line: 3616, column: 9, scope: !10202)
!10212 = !DILocation(line: 3619, column: 9, scope: !10202)
!10213 = !DILocation(line: 3626, column: 9, scope: !10202)
!10214 = !DILocation(line: 3629, column: 21, scope: !10202)
!10215 = !DILocation(line: 3632, column: 9, scope: !10202)
!10216 = !DILocation(line: 3632, column: 15, scope: !10202)
!10217 = !DILocation(line: 3632, column: 51, scope: !10202)
!10218 = !DILocation(line: 3634, column: 15, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !9064, line: 3634, column: 14)
!10220 = distinct !DILexicalBlock(scope: !10202, file: !9064, line: 3633, column: 9)
!10221 = !DILocation(line: 3634, column: 29, scope: !10219)
!10222 = !DILocation(line: 3634, column: 43, scope: !10219)
!10223 = !DILocation(line: 3634, column: 14, scope: !10220)
!10224 = distinct !{!10224, !10215, !10225}
!10225 = !DILocation(line: 3638, column: 9, scope: !10202)
!10226 = !DILocation(line: 3649, column: 15, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10197, file: !9064, line: 3641, column: 7)
!10228 = !DILocation(line: 3649, column: 9, scope: !10227)
!10229 = !DILocation(line: 3651, column: 15, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10231, file: !9064, line: 3651, column: 14)
!10231 = distinct !DILexicalBlock(scope: !10227, file: !9064, line: 3650, column: 9)
!10232 = !DILocation(line: 3651, column: 29, scope: !10230)
!10233 = !DILocation(line: 3651, column: 43, scope: !10230)
!10234 = !DILocation(line: 3651, column: 14, scope: !10231)
!10235 = distinct !{!10235, !10228, !10236}
!10236 = !DILocation(line: 3655, column: 9, scope: !10227)
!10237 = !DILocation(line: 3661, column: 44, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10239, file: !9064, line: 3661, column: 10)
!10239 = distinct !DILexicalBlock(scope: !10192, file: !9064, line: 3659, column: 5)
!10240 = !DILocation(line: 3661, column: 10, scope: !10239)
!10241 = !DILocation(line: 3668, column: 27, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10238, file: !9064, line: 3666, column: 7)
!10243 = !DILocation(line: 3671, column: 14, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10242, file: !9064, line: 3670, column: 13)
!10245 = !DILocation(line: 3671, column: 81, scope: !10244)
!10246 = !DILocation(line: 3671, column: 55, scope: !10244)
!10247 = !DILocation(line: 3671, column: 92, scope: !10244)
!10248 = !DILocation(line: 3672, column: 14, scope: !10244)
!10249 = !DILocation(line: 3672, column: 80, scope: !10244)
!10250 = !DILocation(line: 3672, column: 53, scope: !10244)
!10251 = !DILocation(line: 3672, column: 111, scope: !10244)
!10252 = !DILocation(line: 3673, column: 14, scope: !10244)
!10253 = !DILocation(line: 3673, column: 80, scope: !10244)
!10254 = !DILocation(line: 3673, column: 86, scope: !10244)
!10255 = !DILocation(line: 3673, column: 53, scope: !10244)
!10256 = !DILocation(line: 3673, column: 111, scope: !10244)
!10257 = !DILocation(line: 3674, column: 14, scope: !10244)
!10258 = !DILocation(line: 3674, column: 82, scope: !10244)
!10259 = !DILocation(line: 3674, column: 101, scope: !10244)
!10260 = !DILocation(line: 3674, column: 53, scope: !10244)
!10261 = !DILocation(line: 3674, column: 126, scope: !10244)
!10262 = !DILocation(line: 3675, column: 14, scope: !10244)
!10263 = !DILocation(line: 3675, column: 80, scope: !10244)
!10264 = !DILocation(line: 3675, column: 85, scope: !10244)
!10265 = !DILocation(line: 3675, column: 53, scope: !10244)
!10266 = !DILocation(line: 3675, column: 111, scope: !10244)
!10267 = !DILocation(line: 3676, column: 14, scope: !10244)
!10268 = !DILocation(line: 3676, column: 80, scope: !10244)
!10269 = !DILocation(line: 3676, column: 85, scope: !10244)
!10270 = !DILocation(line: 3676, column: 53, scope: !10244)
!10271 = !DILocation(line: 3670, column: 13, scope: !10242)
!10272 = !DILocation(line: 3691, column: 3, scope: !9902)
!10273 = !DILocation(line: 3692, column: 1, scope: !9902)
!10274 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9064, file: !9064, line: 3703, type: !10275, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !10277)
!10275 = !DISubroutineType(types: !10276)
!10276 = !{null, !9905}
!10277 = !{!10278}
!10278 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10274, file: !9064, line: 3703, type: !9905)
!10279 = !DILocation(line: 0, scope: !10274)
!10280 = !DILocation(line: 3706, column: 22, scope: !10274)
!10281 = !DILocation(line: 3706, column: 37, scope: !10274)
!10282 = !DILocation(line: 3709, column: 12, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10274, file: !9064, line: 3709, column: 6)
!10284 = !DILocation(line: 3709, column: 15, scope: !10283)
!10285 = !DILocation(line: 3709, column: 31, scope: !10283)
!10286 = !DILocation(line: 3709, column: 6, scope: !10274)
!10287 = !DILocation(line: 3711, column: 24, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10283, file: !9064, line: 3710, column: 3)
!10289 = !DILocation(line: 3711, column: 33, scope: !10288)
!10290 = !DILocation(line: 3712, column: 3, scope: !10288)
!10291 = !DILocation(line: 3713, column: 17, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10283, file: !9064, line: 3713, column: 11)
!10293 = !DILocation(line: 3713, column: 20, scope: !10292)
!10294 = !DILocation(line: 3713, column: 35, scope: !10292)
!10295 = !DILocation(line: 0, scope: !10292)
!10296 = !DILocation(line: 3713, column: 11, scope: !10283)
!10297 = !DILocation(line: 3715, column: 33, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10292, file: !9064, line: 3714, column: 3)
!10299 = !DILocation(line: 3716, column: 3, scope: !10298)
!10300 = !DILocation(line: 3719, column: 33, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10292, file: !9064, line: 3718, column: 3)
!10302 = !DILocation(line: 3723, column: 12, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10274, file: !9064, line: 3723, column: 6)
!10304 = !DILocation(line: 3723, column: 15, scope: !10303)
!10305 = !DILocation(line: 3729, column: 24, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10303, file: !9064, line: 3728, column: 3)
!10307 = !DILocation(line: 3729, column: 33, scope: !10306)
!10308 = !DILocation(line: 3732, column: 61, scope: !10274)
!10309 = !DILocation(line: 3732, column: 81, scope: !10274)
!10310 = !DILocation(line: 3732, column: 22, scope: !10274)
!10311 = !DILocation(line: 3732, column: 42, scope: !10274)
!10312 = !DILocation(line: 3735, column: 12, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10274, file: !9064, line: 3735, column: 6)
!10314 = !DILocation(line: 3735, column: 17, scope: !10313)
!10315 = !DILocation(line: 3735, column: 35, scope: !10313)
!10316 = !DILocation(line: 3735, column: 6, scope: !10274)
!10317 = !DILocation(line: 3737, column: 24, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10313, file: !9064, line: 3736, column: 3)
!10319 = !DILocation(line: 3737, column: 33, scope: !10318)
!10320 = !DILocation(line: 3738, column: 3, scope: !10318)
!10321 = !DILocation(line: 3739, column: 17, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10313, file: !9064, line: 3739, column: 11)
!10323 = !DILocation(line: 3739, column: 22, scope: !10322)
!10324 = !DILocation(line: 3739, column: 39, scope: !10322)
!10325 = !DILocation(line: 0, scope: !10322)
!10326 = !DILocation(line: 3739, column: 11, scope: !10313)
!10327 = !DILocation(line: 3741, column: 33, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10322, file: !9064, line: 3740, column: 3)
!10329 = !DILocation(line: 3742, column: 3, scope: !10328)
!10330 = !DILocation(line: 3745, column: 33, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10322, file: !9064, line: 3744, column: 3)
!10332 = !DILocation(line: 3749, column: 12, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10274, file: !9064, line: 3749, column: 6)
!10334 = !DILocation(line: 3749, column: 16, scope: !10333)
!10335 = !DILocation(line: 3755, column: 24, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10333, file: !9064, line: 3754, column: 3)
!10337 = !DILocation(line: 3755, column: 33, scope: !10336)
!10338 = !DILocation(line: 3759, column: 12, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10274, file: !9064, line: 3759, column: 6)
!10340 = !DILocation(line: 3759, column: 15, scope: !10339)
!10341 = !DILocation(line: 3759, column: 30, scope: !10339)
!10342 = !DILocation(line: 3759, column: 6, scope: !10274)
!10343 = !DILocation(line: 3765, column: 28, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10339, file: !9064, line: 3764, column: 3)
!10345 = !DILocation(line: 3765, column: 37, scope: !10344)
!10346 = !DILocation(line: 3767, column: 54, scope: !10274)
!10347 = !DILocation(line: 3767, column: 62, scope: !10274)
!10348 = !DILocation(line: 3767, column: 26, scope: !10274)
!10349 = !DILocation(line: 3767, column: 36, scope: !10274)
!10350 = !DILocation(line: 3768, column: 49, scope: !10274)
!10351 = !DILocation(line: 3768, column: 57, scope: !10274)
!10352 = !DILocation(line: 3768, column: 26, scope: !10274)
!10353 = !DILocation(line: 3768, column: 31, scope: !10274)
!10354 = !DILocation(line: 3769, column: 50, scope: !10274)
!10355 = !DILocation(line: 3769, column: 78, scope: !10274)
!10356 = !DILocation(line: 3769, column: 26, scope: !10274)
!10357 = !DILocation(line: 3769, column: 31, scope: !10274)
!10358 = !DILocation(line: 3770, column: 52, scope: !10274)
!10359 = !DILocation(line: 3770, column: 102, scope: !10274)
!10360 = !DILocation(line: 3770, column: 109, scope: !10274)
!10361 = !DILocation(line: 3770, column: 26, scope: !10274)
!10362 = !DILocation(line: 3770, column: 31, scope: !10274)
!10363 = !DILocation(line: 3771, column: 50, scope: !10274)
!10364 = !DILocation(line: 3771, column: 78, scope: !10274)
!10365 = !DILocation(line: 3771, column: 26, scope: !10274)
!10366 = !DILocation(line: 3771, column: 31, scope: !10274)
!10367 = !DILocation(line: 3772, column: 50, scope: !10274)
!10368 = !DILocation(line: 3772, column: 78, scope: !10274)
!10369 = !DILocation(line: 3772, column: 26, scope: !10274)
!10370 = !DILocation(line: 3772, column: 31, scope: !10274)
!10371 = !DILocation(line: 3773, column: 1, scope: !10274)
!10372 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !10373, file: !10373, line: 257, type: !4887, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10374)
!10373 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10374 = !{!10375}
!10375 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10372, file: !10373, line: 257, type: !121)
!10376 = !DILocation(line: 0, scope: !10372)
!10377 = !DILocation(line: 260, column: 3, scope: !10372)
!10378 = !DILocation(line: 261, column: 1, scope: !10372)
!10379 = distinct !DISubprogram(name: "LL_InitTick", scope: !10380, file: !10380, line: 260, type: !7494, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10381)
!10380 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10381 = !{!10382, !10383}
!10382 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10379, file: !10380, line: 260, type: !121)
!10383 = !DILocalVariable(name: "Ticks", arg: 2, scope: !10379, file: !10380, line: 260, type: !121)
!10384 = !DILocation(line: 0, scope: !10379)
!10385 = !DILocation(line: 263, column: 46, scope: !10379)
!10386 = !DILocation(line: 263, column: 55, scope: !10379)
!10387 = !DILocation(line: 263, column: 18, scope: !10379)
!10388 = !DILocation(line: 264, column: 18, scope: !10379)
!10389 = !DILocation(line: 265, column: 18, scope: !10379)
!10390 = !DILocation(line: 267, column: 1, scope: !10379)
!10391 = distinct !DISubprogram(name: "LL_mDelay", scope: !10373, file: !10373, line: 273, type: !4887, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10392)
!10392 = !{!10393, !10394}
!10393 = !DILocalVariable(name: "Delay", arg: 1, scope: !10391, file: !10373, line: 273, type: !121)
!10394 = !DILocalVariable(name: "tmp", scope: !10391, file: !10373, line: 275, type: !120)
!10395 = !DILocation(line: 0, scope: !10391)
!10396 = !DILocation(line: 275, column: 3, scope: !10391)
!10397 = !DILocation(line: 275, column: 18, scope: !10391)
!10398 = !DILocation(line: 275, column: 33, scope: !10391)
!10399 = !DILocation(line: 277, column: 10, scope: !10391)
!10400 = !DILocation(line: 280, column: 12, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10391, file: !10373, line: 280, column: 6)
!10402 = !DILocation(line: 285, column: 3, scope: !10391)
!10403 = !DILocation(line: 287, column: 18, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !10373, line: 287, column: 8)
!10405 = distinct !DILexicalBlock(scope: !10391, file: !10373, line: 286, column: 3)
!10406 = !DILocation(line: 292, column: 1, scope: !10391)
!10407 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !10373, file: !10373, line: 323, type: !4887, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10408)
!10408 = !{!10409}
!10409 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10407, file: !10373, line: 323, type: !121)
!10410 = !DILocation(line: 0, scope: !10407)
!10411 = !DILocation(line: 326, column: 19, scope: !10407)
!10412 = !DILocation(line: 327, column: 1, scope: !10407)
!10413 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !10373, file: !10373, line: 338, type: !10414, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10417)
!10414 = !DISubroutineType(types: !10415)
!10415 = !{!10416, !121}
!10416 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !666, line: 201, baseType: !665)
!10417 = !{!10418, !10419, !10420, !10421, !10422}
!10418 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !10413, file: !10373, line: 338, type: !121)
!10419 = !DILocalVariable(name: "timeout", scope: !10413, file: !10373, line: 340, type: !121)
!10420 = !DILocalVariable(name: "getlatency", scope: !10413, file: !10373, line: 341, type: !121)
!10421 = !DILocalVariable(name: "latency", scope: !10413, file: !10373, line: 342, type: !121)
!10422 = !DILocalVariable(name: "status", scope: !10413, file: !10373, line: 343, type: !10416)
!10423 = !DILocation(line: 0, scope: !10413)
!10424 = !DILocation(line: 347, column: 21, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10413, file: !10373, line: 347, column: 6)
!10426 = !DILocation(line: 347, column: 6, scope: !10413)
!10427 = !DILocation(line: 353, column: 8, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10429, file: !10373, line: 353, column: 8)
!10429 = distinct !DILexicalBlock(scope: !10425, file: !10373, line: 352, column: 3)
!10430 = !DILocation(line: 353, column: 40, scope: !10428)
!10431 = !DILocation(line: 353, column: 8, scope: !10429)
!10432 = !DILocation(line: 356, column: 26, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10434, file: !10373, line: 356, column: 10)
!10434 = distinct !DILexicalBlock(scope: !10428, file: !10373, line: 354, column: 5)
!10435 = !DILocation(line: 356, column: 55, scope: !10433)
!10436 = !DILocation(line: 362, column: 55, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10434, file: !10373, line: 362, column: 10)
!10438 = !DILocation(line: 368, column: 55, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10434, file: !10373, line: 368, column: 10)
!10440 = !DILocation(line: 374, column: 26, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10434, file: !10373, line: 374, column: 10)
!10442 = !DILocation(line: 374, column: 55, scope: !10441)
!10443 = !DILocation(line: 380, column: 28, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !10373, line: 380, column: 12)
!10445 = distinct !DILexicalBlock(scope: !10441, file: !10373, line: 379, column: 7)
!10446 = !DILocation(line: 380, column: 57, scope: !10444)
!10447 = !DILocation(line: 387, column: 8, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10429, file: !10373, line: 387, column: 8)
!10449 = !DILocation(line: 387, column: 40, scope: !10448)
!10450 = !DILocation(line: 387, column: 8, scope: !10429)
!10451 = !DILocation(line: 390, column: 26, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10453, file: !10373, line: 390, column: 10)
!10453 = distinct !DILexicalBlock(scope: !10448, file: !10373, line: 388, column: 5)
!10454 = !DILocation(line: 390, column: 55, scope: !10452)
!10455 = !DILocation(line: 396, column: 26, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10453, file: !10373, line: 396, column: 10)
!10457 = !DILocation(line: 396, column: 55, scope: !10456)
!10458 = !DILocation(line: 402, column: 26, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10453, file: !10373, line: 402, column: 10)
!10460 = !DILocation(line: 402, column: 55, scope: !10459)
!10461 = !DILocation(line: 407, column: 26, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10453, file: !10373, line: 407, column: 10)
!10463 = !DILocation(line: 407, column: 55, scope: !10462)
!10464 = !DILocation(line: 413, column: 28, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10466, file: !10373, line: 413, column: 12)
!10466 = distinct !DILexicalBlock(scope: !10462, file: !10373, line: 412, column: 7)
!10467 = !DILocation(line: 413, column: 57, scope: !10465)
!10468 = !DILocation(line: 0, scope: !10429)
!10469 = !DILocation(line: 420, column: 8, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10429, file: !10373, line: 420, column: 8)
!10471 = !DILocation(line: 420, column: 40, scope: !10470)
!10472 = !DILocation(line: 420, column: 8, scope: !10429)
!10473 = !DILocation(line: 423, column: 26, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10475, file: !10373, line: 423, column: 10)
!10475 = distinct !DILexicalBlock(scope: !10470, file: !10373, line: 421, column: 5)
!10476 = !DILocation(line: 423, column: 55, scope: !10474)
!10477 = !DILocation(line: 429, column: 26, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10475, file: !10373, line: 429, column: 10)
!10479 = !DILocation(line: 429, column: 55, scope: !10478)
!10480 = !DILocation(line: 435, column: 28, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !10373, line: 435, column: 12)
!10482 = distinct !DILexicalBlock(scope: !10478, file: !10373, line: 434, column: 7)
!10483 = !DILocation(line: 435, column: 57, scope: !10481)
!10484 = !DILocation(line: 444, column: 5, scope: !10429)
!10485 = !DILocation(line: 448, column: 5, scope: !10429)
!10486 = !DILocation(line: 451, column: 18, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10429, file: !10373, line: 449, column: 5)
!10488 = !DILocation(line: 452, column: 12, scope: !10487)
!10489 = !DILocation(line: 453, column: 26, scope: !10429)
!10490 = !DILocation(line: 453, column: 38, scope: !10429)
!10491 = !DILocation(line: 453, column: 5, scope: !10487)
!10492 = distinct !{!10492, !10485, !10493}
!10493 = !DILocation(line: 453, column: 54, scope: !10429)
!10494 = !DILocation(line: 0, scope: !10425)
!10495 = !DILocation(line: 464, column: 3, scope: !10413)
!10496 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !10497, file: !10497, line: 519, type: !4877, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10497 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10498 = !DILocation(line: 521, column: 21, scope: !10496)
!10499 = !DILocation(line: 521, column: 3, scope: !10496)
!10500 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !4643, file: !4643, line: 1543, type: !4887, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10501)
!10501 = !{!10502}
!10502 = !DILocalVariable(name: "Latency", arg: 1, scope: !10500, file: !4643, line: 1543, type: !121)
!10503 = !DILocation(line: 0, scope: !10500)
!10504 = !DILocation(line: 1545, column: 3, scope: !10500)
!10505 = !DILocation(line: 1546, column: 1, scope: !10500)
!10506 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !4643, file: !4643, line: 1569, type: !4877, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10507 = !DILocation(line: 1571, column: 21, scope: !10506)
!10508 = !DILocation(line: 1571, column: 3, scope: !10506)
!10509 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !10373, file: !10373, line: 483, type: !10510, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10526)
!10510 = !DISubroutineType(types: !10511)
!10511 = !{!10416, !10512, !10519}
!10512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10513, size: 32)
!10513 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !10380, line: 114, baseType: !10514)
!10514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10380, line: 94, size: 96, elements: !10515)
!10515 = !{!10516, !10517, !10518}
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10514, file: !10380, line: 96, baseType: !121, size: 32)
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10514, file: !10380, line: 102, baseType: !121, size: 32, offset: 32)
!10518 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10514, file: !10380, line: 109, baseType: !121, size: 32, offset: 64)
!10519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10520, size: 32)
!10520 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !10380, line: 139, baseType: !10521)
!10521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10380, line: 119, size: 96, elements: !10522)
!10522 = !{!10523, !10524, !10525}
!10523 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10521, file: !10380, line: 121, baseType: !121, size: 32)
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10521, file: !10380, line: 127, baseType: !121, size: 32, offset: 32)
!10525 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10521, file: !10380, line: 133, baseType: !121, size: 32, offset: 64)
!10526 = !{!10527, !10528, !10529, !10530}
!10527 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10509, file: !10373, line: 483, type: !10512)
!10528 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10509, file: !10373, line: 484, type: !10519)
!10529 = !DILocalVariable(name: "status", scope: !10509, file: !10373, line: 486, type: !10416)
!10530 = !DILocalVariable(name: "pllfreq", scope: !10509, file: !10373, line: 487, type: !121)
!10531 = !DILocation(line: 0, scope: !10509)
!10532 = !DILocation(line: 490, column: 6, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10509, file: !10373, line: 490, column: 6)
!10534 = !DILocation(line: 490, column: 25, scope: !10533)
!10535 = !DILocation(line: 490, column: 6, scope: !10509)
!10536 = !DILocation(line: 493, column: 15, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10533, file: !10373, line: 491, column: 3)
!10538 = !DILocation(line: 496, column: 8, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10537, file: !10373, line: 496, column: 8)
!10540 = !DILocation(line: 496, column: 29, scope: !10539)
!10541 = !DILocation(line: 496, column: 8, scope: !10537)
!10542 = !DILocation(line: 498, column: 7, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10539, file: !10373, line: 497, column: 5)
!10544 = !DILocation(line: 499, column: 7, scope: !10543)
!10545 = !DILocation(line: 499, column: 14, scope: !10543)
!10546 = !DILocation(line: 499, column: 35, scope: !10543)
!10547 = distinct !{!10547, !10544, !10548}
!10548 = !DILocation(line: 502, column: 7, scope: !10543)
!10549 = !DILocation(line: 506, column: 76, scope: !10537)
!10550 = !DILocation(line: 506, column: 103, scope: !10537)
!10551 = !DILocation(line: 507, column: 54, scope: !10537)
!10552 = !DILocation(line: 506, column: 5, scope: !10537)
!10553 = !DILocation(line: 510, column: 14, scope: !10537)
!10554 = !DILocation(line: 511, column: 3, scope: !10537)
!10555 = !DILocation(line: 0, scope: !10533)
!10556 = !DILocation(line: 518, column: 3, scope: !10509)
!10557 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !10373, file: !10373, line: 642, type: !10558, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10560)
!10558 = !DISubroutineType(types: !10559)
!10559 = !{!10416}
!10560 = !{!10561}
!10561 = !DILocalVariable(name: "status", scope: !10557, file: !10373, line: 644, type: !10416)
!10562 = !DILocation(line: 0, scope: !10557)
!10563 = !DILocation(line: 647, column: 6, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10557, file: !10373, line: 647, column: 6)
!10565 = !DILocation(line: 647, column: 27, scope: !10564)
!10566 = !DILocation(line: 655, column: 6, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10557, file: !10373, line: 655, column: 6)
!10568 = !DILocation(line: 655, column: 30, scope: !10567)
!10569 = !DILocation(line: 663, column: 6, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10557, file: !10373, line: 663, column: 6)
!10571 = !DILocation(line: 663, column: 30, scope: !10570)
!10572 = !DILocation(line: 663, column: 6, scope: !10557)
!10573 = !DILocation(line: 669, column: 3, scope: !10557)
!10574 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !10373, file: !10373, line: 611, type: !10575, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10577)
!10575 = !DISubroutineType(types: !10576)
!10576 = !{!121, !121, !10512}
!10577 = !{!10578, !10579, !10580}
!10578 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10574, file: !10373, line: 611, type: !121)
!10579 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10574, file: !10373, line: 611, type: !10512)
!10580 = !DILocalVariable(name: "pllfreq", scope: !10574, file: !10373, line: 613, type: !121)
!10581 = !DILocation(line: 0, scope: !10574)
!10582 = !DILocation(line: 622, column: 56, scope: !10574)
!10583 = !DILocation(line: 622, column: 61, scope: !10574)
!10584 = !DILocation(line: 622, column: 32, scope: !10574)
!10585 = !DILocation(line: 626, column: 45, scope: !10574)
!10586 = !DILocation(line: 626, column: 50, scope: !10574)
!10587 = !DILocation(line: 626, column: 21, scope: !10574)
!10588 = !DILocation(line: 630, column: 47, scope: !10574)
!10589 = !DILocation(line: 630, column: 82, scope: !10574)
!10590 = !DILocation(line: 630, column: 21, scope: !10574)
!10591 = !DILocation(line: 633, column: 3, scope: !10574)
!10592 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6833, file: !6833, line: 3007, type: !4877, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10593 = !DILocation(line: 3009, column: 11, scope: !10592)
!10594 = !DILocation(line: 3009, column: 44, scope: !10592)
!10595 = !DILocation(line: 3009, column: 3, scope: !10592)
!10596 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6833, file: !6833, line: 2987, type: !2821, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10597 = !DILocation(line: 2989, column: 3, scope: !10596)
!10598 = !DILocation(line: 2990, column: 1, scope: !10596)
!10599 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6833, file: !6833, line: 4304, type: !6967, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10600)
!10600 = !{!10601, !10602, !10603, !10604}
!10601 = !DILocalVariable(name: "Source", arg: 1, scope: !10599, file: !6833, line: 4304, type: !121)
!10602 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10599, file: !6833, line: 4304, type: !121)
!10603 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10599, file: !6833, line: 4304, type: !121)
!10604 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10599, file: !6833, line: 4304, type: !121)
!10605 = !DILocation(line: 0, scope: !10599)
!10606 = !DILocation(line: 4306, column: 3, scope: !10599)
!10607 = !DILocation(line: 4308, column: 3, scope: !10599)
!10608 = !DILocation(line: 4310, column: 3, scope: !10599)
!10609 = !DILocation(line: 4312, column: 1, scope: !10599)
!10610 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !10373, file: !10373, line: 681, type: !10611, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10613)
!10611 = !DISubroutineType(types: !10612)
!10612 = !{!10416, !121, !10519}
!10613 = !{!10614, !10615, !10616, !10617}
!10614 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10610, file: !10373, line: 681, type: !121)
!10615 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10610, file: !10373, line: 681, type: !10519)
!10616 = !DILocalVariable(name: "status", scope: !10610, file: !10373, line: 683, type: !10416)
!10617 = !DILocalVariable(name: "hclk_frequency", scope: !10610, file: !10373, line: 684, type: !121)
!10618 = !DILocation(line: 0, scope: !10610)
!10619 = !DILocation(line: 691, column: 20, scope: !10610)
!10620 = !DILocation(line: 694, column: 6, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10610, file: !10373, line: 694, column: 6)
!10622 = !DILocation(line: 694, column: 22, scope: !10621)
!10623 = !DILocation(line: 694, column: 6, scope: !10610)
!10624 = !DILocation(line: 697, column: 14, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10621, file: !10373, line: 695, column: 3)
!10626 = !DILocation(line: 701, column: 13, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10610, file: !10373, line: 701, column: 6)
!10628 = !DILocation(line: 701, column: 6, scope: !10610)
!10629 = !DILocation(line: 704, column: 5, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10627, file: !10373, line: 702, column: 3)
!10631 = !DILocation(line: 705, column: 5, scope: !10630)
!10632 = !DILocation(line: 705, column: 12, scope: !10630)
!10633 = !DILocation(line: 705, column: 33, scope: !10630)
!10634 = distinct !{!10634, !10631, !10635}
!10635 = !DILocation(line: 708, column: 5, scope: !10630)
!10636 = !DILocation(line: 711, column: 49, scope: !10630)
!10637 = !DILocation(line: 711, column: 5, scope: !10630)
!10638 = !DILocation(line: 712, column: 5, scope: !10630)
!10639 = !DILocation(line: 713, column: 5, scope: !10630)
!10640 = !DILocation(line: 713, column: 12, scope: !10630)
!10641 = !DILocation(line: 713, column: 37, scope: !10630)
!10642 = distinct !{!10642, !10639, !10643}
!10643 = !DILocation(line: 716, column: 5, scope: !10630)
!10644 = !DILocation(line: 719, column: 50, scope: !10630)
!10645 = !DILocation(line: 719, column: 5, scope: !10630)
!10646 = !DILocation(line: 720, column: 50, scope: !10630)
!10647 = !DILocation(line: 720, column: 5, scope: !10630)
!10648 = !DILocation(line: 721, column: 3, scope: !10630)
!10649 = !DILocation(line: 724, column: 6, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10610, file: !10373, line: 724, column: 6)
!10651 = !DILocation(line: 724, column: 22, scope: !10650)
!10652 = !DILocation(line: 724, column: 6, scope: !10610)
!10653 = !DILocation(line: 727, column: 14, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10650, file: !10373, line: 725, column: 3)
!10655 = !DILocation(line: 728, column: 3, scope: !10654)
!10656 = !DILocation(line: 731, column: 13, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10610, file: !10373, line: 731, column: 6)
!10658 = !DILocation(line: 731, column: 6, scope: !10610)
!10659 = !DILocation(line: 733, column: 5, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10657, file: !10373, line: 732, column: 3)
!10661 = !DILocation(line: 734, column: 3, scope: !10660)
!10662 = !DILocation(line: 736, column: 3, scope: !10610)
!10663 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6833, file: !6833, line: 4184, type: !2821, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10664 = !DILocation(line: 4186, column: 3, scope: !10663)
!10665 = !DILocation(line: 4187, column: 1, scope: !10663)
!10666 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6833, file: !6833, line: 4205, type: !4877, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10667 = !DILocation(line: 4207, column: 11, scope: !10666)
!10668 = !DILocation(line: 4207, column: 44, scope: !10666)
!10669 = !DILocation(line: 4207, column: 3, scope: !10666)
!10670 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6833, file: !6833, line: 3224, type: !4887, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10671)
!10671 = !{!10672}
!10672 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10670, file: !6833, line: 3224, type: !121)
!10673 = !DILocation(line: 0, scope: !10670)
!10674 = !DILocation(line: 3226, column: 3, scope: !10670)
!10675 = !DILocation(line: 3227, column: 1, scope: !10670)
!10676 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6833, file: !6833, line: 3188, type: !4887, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10677)
!10677 = !{!10678}
!10678 = !DILocalVariable(name: "Source", arg: 1, scope: !10676, file: !6833, line: 3188, type: !121)
!10679 = !DILocation(line: 0, scope: !10676)
!10680 = !DILocation(line: 3190, column: 3, scope: !10676)
!10681 = !DILocation(line: 3191, column: 1, scope: !10676)
!10682 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6833, file: !6833, line: 3204, type: !4877, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10683 = !DILocation(line: 3206, column: 21, scope: !10682)
!10684 = !DILocation(line: 3206, column: 3, scope: !10682)
!10685 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6833, file: !6833, line: 3240, type: !4887, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10686)
!10686 = !{!10687}
!10687 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10685, file: !6833, line: 3240, type: !121)
!10688 = !DILocation(line: 0, scope: !10685)
!10689 = !DILocation(line: 3242, column: 3, scope: !10685)
!10690 = !DILocation(line: 3243, column: 1, scope: !10685)
!10691 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6833, file: !6833, line: 3256, type: !4887, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10692)
!10692 = !{!10693}
!10693 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10691, file: !6833, line: 3256, type: !121)
!10694 = !DILocation(line: 0, scope: !10691)
!10695 = !DILocation(line: 3258, column: 3, scope: !10691)
!10696 = !DILocation(line: 3259, column: 1, scope: !10691)
!10697 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !6833, file: !6833, line: 5969, type: !4877, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10698 = !DILocation(line: 5971, column: 11, scope: !10697)
!10699 = !DILocation(line: 5971, column: 47, scope: !10697)
!10700 = !DILocation(line: 5971, column: 3, scope: !10697)
!10701 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !6833, file: !6833, line: 5153, type: !4877, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10702 = !DILocation(line: 5155, column: 11, scope: !10701)
!10703 = !DILocation(line: 5155, column: 47, scope: !10701)
!10704 = !DILocation(line: 5155, column: 3, scope: !10701)
!10705 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !10373, file: !10373, line: 540, type: !10706, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10708)
!10706 = !DISubroutineType(types: !10707)
!10707 = !{!10416, !121, !121, !10512, !10519}
!10708 = !{!10709, !10710, !10711, !10712, !10713, !10714}
!10709 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10705, file: !10373, line: 540, type: !121)
!10710 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10705, file: !10373, line: 540, type: !121)
!10711 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10705, file: !10373, line: 541, type: !10512)
!10712 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10705, file: !10373, line: 541, type: !10519)
!10713 = !DILocalVariable(name: "status", scope: !10705, file: !10373, line: 543, type: !10416)
!10714 = !DILocalVariable(name: "pllfreq", scope: !10705, file: !10373, line: 544, type: !121)
!10715 = !DILocation(line: 0, scope: !10705)
!10716 = !DILocation(line: 551, column: 6, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10705, file: !10373, line: 551, column: 6)
!10718 = !DILocation(line: 551, column: 25, scope: !10717)
!10719 = !DILocation(line: 551, column: 6, scope: !10705)
!10720 = !DILocation(line: 554, column: 15, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10717, file: !10373, line: 552, column: 3)
!10722 = !DILocation(line: 557, column: 8, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10721, file: !10373, line: 557, column: 8)
!10724 = !DILocation(line: 557, column: 29, scope: !10723)
!10725 = !DILocation(line: 557, column: 8, scope: !10721)
!10726 = !DILocation(line: 560, column: 20, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10728, file: !10373, line: 560, column: 10)
!10728 = distinct !DILexicalBlock(scope: !10723, file: !10373, line: 558, column: 5)
!10729 = !DILocation(line: 560, column: 10, scope: !10728)
!10730 = !DILocation(line: 562, column: 9, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10727, file: !10373, line: 561, column: 7)
!10732 = !DILocation(line: 563, column: 7, scope: !10731)
!10733 = !DILocation(line: 566, column: 9, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10727, file: !10373, line: 565, column: 7)
!10735 = !DILocation(line: 570, column: 7, scope: !10728)
!10736 = !DILocation(line: 571, column: 7, scope: !10728)
!10737 = !DILocation(line: 571, column: 14, scope: !10728)
!10738 = !DILocation(line: 571, column: 35, scope: !10728)
!10739 = distinct !{!10739, !10736, !10740}
!10740 = !DILocation(line: 574, column: 7, scope: !10728)
!10741 = !DILocation(line: 578, column: 76, scope: !10721)
!10742 = !DILocation(line: 578, column: 103, scope: !10721)
!10743 = !DILocation(line: 579, column: 54, scope: !10721)
!10744 = !DILocation(line: 578, column: 5, scope: !10721)
!10745 = !DILocation(line: 582, column: 14, scope: !10721)
!10746 = !DILocation(line: 583, column: 3, scope: !10721)
!10747 = !DILocation(line: 0, scope: !10717)
!10748 = !DILocation(line: 590, column: 3, scope: !10705)
!10749 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6833, file: !6833, line: 2969, type: !4877, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10750 = !DILocation(line: 2971, column: 11, scope: !10749)
!10751 = !DILocation(line: 2971, column: 44, scope: !10749)
!10752 = !DILocation(line: 2971, column: 3, scope: !10749)
!10753 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !6833, file: !6833, line: 2929, type: !2821, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10754 = !DILocation(line: 2931, column: 3, scope: !10753)
!10755 = !DILocation(line: 2932, column: 1, scope: !10753)
!10756 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6833, file: !6833, line: 2939, type: !2821, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10757 = !DILocation(line: 2941, column: 3, scope: !10756)
!10758 = !DILocation(line: 2942, column: 1, scope: !10756)
!10759 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6833, file: !6833, line: 2949, type: !2821, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10760 = !DILocation(line: 2951, column: 3, scope: !10759)
!10761 = !DILocation(line: 2952, column: 1, scope: !10759)
!10762 = distinct !DISubprogram(name: "z_device_state_init", scope: !10763, file: !10763, line: 23, type: !2821, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10764)
!10763 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10764 = !{!10765}
!10765 = !DILocalVariable(name: "dev", scope: !10762, file: !10763, line: 25, type: !10766)
!10766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10767, size: 32)
!10767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10768)
!10768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !10769)
!10769 = !{!10770, !10771, !10772, !10773, !10779, !10780}
!10770 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10768, file: !141, line: 380, baseType: !144, size: 32)
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10768, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10768, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!10773 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10768, file: !141, line: 386, baseType: !10774, size: 32, offset: 96)
!10774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10775, size: 32)
!10775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !10776)
!10776 = !{!10777, !10778}
!10777 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10775, file: !141, line: 359, baseType: !154, size: 8)
!10778 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10775, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10779 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10768, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!10780 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10768, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!10781 = !DILocation(line: 0, scope: !10762)
!10782 = !DILocation(line: 31, column: 1, scope: !10762)
!10783 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10763, file: !10763, line: 33, type: !10784, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10786)
!10784 = !DISubroutineType(types: !10785)
!10785 = !{!10766, !144}
!10786 = !{!10787, !10788}
!10787 = !DILocalVariable(name: "name", arg: 1, scope: !10783, file: !10763, line: 33, type: !144)
!10788 = !DILocalVariable(name: "dev", scope: !10783, file: !10763, line: 35, type: !10766)
!10789 = !DILocation(line: 0, scope: !10783)
!10790 = !DILocation(line: 40, column: 12, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10783, file: !10763, line: 40, column: 6)
!10792 = !DILocation(line: 40, column: 21, scope: !10791)
!10793 = !DILocation(line: 40, column: 25, scope: !10791)
!10794 = !DILocation(line: 40, column: 33, scope: !10791)
!10795 = !DILocation(line: 40, column: 6, scope: !10783)
!10796 = !DILocation(line: 55, column: 2, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10783, file: !10763, line: 55, column: 2)
!10798 = !DILocation(line: 50, column: 7, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10800, file: !10763, line: 50, column: 7)
!10800 = distinct !DILexicalBlock(scope: !10801, file: !10763, line: 49, column: 57)
!10801 = distinct !DILexicalBlock(scope: !10802, file: !10763, line: 49, column: 2)
!10802 = distinct !DILexicalBlock(scope: !10783, file: !10763, line: 49, column: 2)
!10803 = !DILocation(line: 50, column: 30, scope: !10799)
!10804 = !DILocation(line: 50, column: 39, scope: !10799)
!10805 = !DILocation(line: 50, column: 44, scope: !10799)
!10806 = !DILocation(line: 50, column: 7, scope: !10800)
!10807 = !DILocation(line: 49, column: 53, scope: !10801)
!10808 = !DILocation(line: 49, column: 33, scope: !10801)
!10809 = !DILocation(line: 49, column: 2, scope: !10802)
!10810 = distinct !{!10810, !10809, !10811}
!10811 = !DILocation(line: 53, column: 2, scope: !10802)
!10812 = !DILocation(line: 56, column: 7, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10814, file: !10763, line: 56, column: 7)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !10763, line: 55, column: 57)
!10815 = distinct !DILexicalBlock(scope: !10797, file: !10763, line: 55, column: 2)
!10816 = !DILocation(line: 56, column: 30, scope: !10813)
!10817 = !DILocation(line: 56, column: 52, scope: !10813)
!10818 = !DILocation(line: 56, column: 34, scope: !10813)
!10819 = !DILocation(line: 56, column: 58, scope: !10813)
!10820 = !DILocation(line: 56, column: 7, scope: !10814)
!10821 = !DILocation(line: 55, column: 53, scope: !10815)
!10822 = !DILocation(line: 55, column: 33, scope: !10815)
!10823 = distinct !{!10823, !10796, !10824}
!10824 = !DILocation(line: 59, column: 2, scope: !10797)
!10825 = !DILocation(line: 62, column: 1, scope: !10783)
!10826 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10763, file: !10763, line: 93, type: !10827, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10829)
!10827 = !DISubroutineType(types: !10828)
!10828 = !{!157, !10766}
!10829 = !{!10830}
!10830 = !DILocalVariable(name: "dev", arg: 1, scope: !10826, file: !10763, line: 93, type: !10766)
!10831 = !DILocation(line: 0, scope: !10826)
!10832 = !DILocation(line: 99, column: 10, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10826, file: !10763, line: 99, column: 6)
!10834 = !DILocation(line: 99, column: 6, scope: !10826)
!10835 = !DILocation(line: 103, column: 14, scope: !10826)
!10836 = !DILocation(line: 103, column: 21, scope: !10826)
!10837 = !DILocation(line: 103, column: 33, scope: !10826)
!10838 = !DILocation(line: 103, column: 49, scope: !10826)
!10839 = !DILocation(line: 103, column: 58, scope: !10826)
!10840 = !DILocation(line: 104, column: 1, scope: !10826)
!10841 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10763, file: !10763, line: 87, type: !10842, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10845)
!10842 = !DISubroutineType(types: !10843)
!10843 = !{!200, !10844}
!10844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10766, size: 32)
!10845 = !{!10846}
!10846 = !DILocalVariable(name: "devices", arg: 1, scope: !10841, file: !10763, line: 87, type: !10844)
!10847 = !DILocation(line: 0, scope: !10841)
!10848 = !DILocation(line: 89, column: 11, scope: !10841)
!10849 = !DILocation(line: 90, column: 2, scope: !10841)
!10850 = distinct !DISubprogram(name: "device_required_foreach", scope: !10763, file: !10763, line: 125, type: !10851, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10857)
!10851 = !DISubroutineType(types: !10852)
!10852 = !{!103, !10766, !10853, !102}
!10853 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !10854)
!10854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10855, size: 32)
!10855 = !DISubroutineType(types: !10856)
!10856 = !{!103, !10766, !102}
!10857 = !{!10858, !10859, !10860, !10861, !10862}
!10858 = !DILocalVariable(name: "dev", arg: 1, scope: !10850, file: !10763, line: 125, type: !10766)
!10859 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10850, file: !10763, line: 126, type: !10853)
!10860 = !DILocalVariable(name: "context", arg: 3, scope: !10850, file: !10763, line: 127, type: !102)
!10861 = !DILocalVariable(name: "handle_count", scope: !10850, file: !10763, line: 129, type: !200)
!10862 = !DILocalVariable(name: "handles", scope: !10850, file: !10763, line: 130, type: !160)
!10863 = !DILocation(line: 0, scope: !10850)
!10864 = !DILocation(line: 129, column: 2, scope: !10850)
!10865 = !DILocation(line: 129, column: 9, scope: !10850)
!10866 = !DILocation(line: 130, column: 35, scope: !10850)
!10867 = !DILocation(line: 132, column: 33, scope: !10850)
!10868 = !DILocation(line: 132, column: 9, scope: !10850)
!10869 = !DILocation(line: 133, column: 1, scope: !10850)
!10870 = !DILocation(line: 132, column: 2, scope: !10850)
!10871 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !10872, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10874)
!10872 = !DISubroutineType(types: !10873)
!10873 = !{!160, !10766, !2295}
!10874 = !{!10875, !10876, !10877, !10878}
!10875 = !DILocalVariable(name: "dev", arg: 1, scope: !10871, file: !141, line: 493, type: !10766)
!10876 = !DILocalVariable(name: "count", arg: 2, scope: !10871, file: !141, line: 493, type: !2295)
!10877 = !DILocalVariable(name: "rv", scope: !10871, file: !141, line: 495, type: !160)
!10878 = !DILocalVariable(name: "i", scope: !10879, file: !141, line: 498, type: !200)
!10879 = distinct !DILexicalBlock(scope: !10880, file: !141, line: 497, column: 18)
!10880 = distinct !DILexicalBlock(scope: !10871, file: !141, line: 497, column: 6)
!10881 = !DILocation(line: 0, scope: !10871)
!10882 = !DILocation(line: 495, column: 35, scope: !10871)
!10883 = !DILocation(line: 497, column: 9, scope: !10880)
!10884 = !DILocation(line: 497, column: 6, scope: !10871)
!10885 = !DILocation(line: 0, scope: !10879)
!10886 = !DILocation(line: 500, column: 11, scope: !10879)
!10887 = !DILocation(line: 500, column: 40, scope: !10879)
!10888 = !DILocation(line: 502, column: 4, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10879, file: !141, line: 501, column: 40)
!10890 = distinct !{!10890, !10891, !10892}
!10891 = !DILocation(line: 500, column: 3, scope: !10879)
!10892 = !DILocation(line: 503, column: 3, scope: !10879)
!10893 = !DILocation(line: 504, column: 10, scope: !10879)
!10894 = !DILocation(line: 505, column: 2, scope: !10879)
!10895 = !DILocation(line: 507, column: 2, scope: !10871)
!10896 = distinct !DISubprogram(name: "device_visitor", scope: !10763, file: !10763, line: 106, type: !10897, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10899)
!10897 = !DISubroutineType(types: !10898)
!10898 = !{!103, !160, !200, !10853, !102}
!10899 = !{!10900, !10901, !10902, !10903, !10904, !10906, !10909, !10910}
!10900 = !DILocalVariable(name: "handles", arg: 1, scope: !10896, file: !10763, line: 106, type: !160)
!10901 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10896, file: !10763, line: 107, type: !200)
!10902 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10896, file: !10763, line: 108, type: !10853)
!10903 = !DILocalVariable(name: "context", arg: 4, scope: !10896, file: !10763, line: 109, type: !102)
!10904 = !DILocalVariable(name: "i", scope: !10905, file: !10763, line: 112, type: !200)
!10905 = distinct !DILexicalBlock(scope: !10896, file: !10763, line: 112, column: 2)
!10906 = !DILocalVariable(name: "dh", scope: !10907, file: !10763, line: 113, type: !162)
!10907 = distinct !DILexicalBlock(scope: !10908, file: !10763, line: 112, column: 44)
!10908 = distinct !DILexicalBlock(scope: !10905, file: !10763, line: 112, column: 2)
!10909 = !DILocalVariable(name: "rdev", scope: !10907, file: !10763, line: 114, type: !10766)
!10910 = !DILocalVariable(name: "rc", scope: !10907, file: !10763, line: 115, type: !103)
!10911 = !DILocation(line: 0, scope: !10896)
!10912 = !DILocation(line: 0, scope: !10905)
!10913 = !DILocation(line: 112, column: 23, scope: !10908)
!10914 = !DILocation(line: 112, column: 2, scope: !10905)
!10915 = distinct !{!10915, !10914, !10916}
!10916 = !DILocation(line: 120, column: 2, scope: !10905)
!10917 = !DILocation(line: 113, column: 24, scope: !10907)
!10918 = !DILocation(line: 0, scope: !10907)
!10919 = !DILocation(line: 114, column: 31, scope: !10907)
!10920 = !DILocation(line: 115, column: 12, scope: !10907)
!10921 = !DILocation(line: 117, column: 10, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10907, file: !10763, line: 117, column: 7)
!10923 = !DILocation(line: 112, column: 39, scope: !10908)
!10924 = !DILocation(line: 123, column: 1, scope: !10896)
!10925 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !10926, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10928)
!10926 = !DISubroutineType(types: !10927)
!10927 = !{!10766, !162}
!10928 = !{!10929, !10930, !10931}
!10929 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10925, file: !141, line: 439, type: !162)
!10930 = !DILocalVariable(name: "dev", scope: !10925, file: !141, line: 443, type: !10766)
!10931 = !DILocalVariable(name: "numdev", scope: !10925, file: !141, line: 444, type: !200)
!10932 = !DILocation(line: 0, scope: !10925)
!10933 = !DILocation(line: 446, column: 7, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10925, file: !141, line: 446, column: 6)
!10935 = !DILocation(line: 446, column: 18, scope: !10934)
!10936 = !DILocation(line: 446, column: 23, scope: !10934)
!10937 = !DILocation(line: 450, column: 2, scope: !10925)
!10938 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10763, file: !10763, line: 135, type: !10851, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10939)
!10939 = !{!10940, !10941, !10942, !10943, !10944}
!10940 = !DILocalVariable(name: "dev", arg: 1, scope: !10938, file: !10763, line: 135, type: !10766)
!10941 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10938, file: !10763, line: 136, type: !10853)
!10942 = !DILocalVariable(name: "context", arg: 3, scope: !10938, file: !10763, line: 137, type: !102)
!10943 = !DILocalVariable(name: "handle_count", scope: !10938, file: !10763, line: 139, type: !200)
!10944 = !DILocalVariable(name: "handles", scope: !10938, file: !10763, line: 140, type: !160)
!10945 = !DILocation(line: 0, scope: !10938)
!10946 = !DILocation(line: 139, column: 2, scope: !10938)
!10947 = !DILocation(line: 139, column: 9, scope: !10938)
!10948 = !DILocation(line: 140, column: 35, scope: !10938)
!10949 = !DILocation(line: 142, column: 33, scope: !10938)
!10950 = !DILocation(line: 142, column: 9, scope: !10938)
!10951 = !DILocation(line: 143, column: 1, scope: !10938)
!10952 = !DILocation(line: 142, column: 2, scope: !10938)
!10953 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !10872, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10954)
!10954 = !{!10955, !10956, !10957, !10958, !10959}
!10955 = !DILocalVariable(name: "dev", arg: 1, scope: !10953, file: !141, line: 573, type: !10766)
!10956 = !DILocalVariable(name: "count", arg: 2, scope: !10953, file: !141, line: 573, type: !2295)
!10957 = !DILocalVariable(name: "rv", scope: !10953, file: !141, line: 575, type: !160)
!10958 = !DILocalVariable(name: "region", scope: !10953, file: !141, line: 576, type: !200)
!10959 = !DILocalVariable(name: "i", scope: !10953, file: !141, line: 577, type: !200)
!10960 = !DILocation(line: 0, scope: !10953)
!10961 = !DILocation(line: 575, column: 35, scope: !10953)
!10962 = !DILocation(line: 579, column: 9, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10953, file: !141, line: 579, column: 6)
!10964 = !DILocation(line: 579, column: 6, scope: !10953)
!10965 = !DILocation(line: 582, column: 8, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !141, line: 582, column: 8)
!10967 = distinct !DILexicalBlock(scope: !10968, file: !141, line: 581, column: 23)
!10968 = distinct !DILexicalBlock(scope: !10963, file: !141, line: 579, column: 18)
!10969 = !DILocation(line: 582, column: 12, scope: !10966)
!10970 = !DILocation(line: 585, column: 6, scope: !10967)
!10971 = !DILocation(line: 0, scope: !10968)
!10972 = !DILocation(line: 581, column: 17, scope: !10968)
!10973 = !DILocation(line: 581, column: 3, scope: !10968)
!10974 = !DILocation(line: 588, column: 10, scope: !10968)
!10975 = !DILocation(line: 588, column: 16, scope: !10968)
!10976 = !DILocation(line: 589, column: 4, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10968, file: !141, line: 588, column: 39)
!10978 = !DILocation(line: 588, column: 3, scope: !10968)
!10979 = distinct !{!10979, !10978, !10980}
!10980 = !DILocation(line: 590, column: 3, scope: !10968)
!10981 = !DILocation(line: 591, column: 10, scope: !10968)
!10982 = !DILocation(line: 592, column: 2, scope: !10968)
!10983 = !DILocation(line: 575, column: 25, scope: !10953)
!10984 = !DILocation(line: 594, column: 2, scope: !10953)
!10985 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1714, file: !1714, line: 49, type: !10986, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1711, retainedNodes: !322)
!10986 = !DISubroutineType(types: !10987)
!10987 = !{!2288}
!10988 = !DILocation(line: 51, column: 10, scope: !10985)
!10989 = !DILocation(line: 51, column: 20, scope: !10985)
!10990 = !DILocation(line: 51, column: 2, scope: !10985)
!10991 = distinct !DISubprogram(name: "coredump", scope: !2788, file: !2788, line: 209, type: !10992, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11138)
!10992 = !DISubroutineType(types: !10993)
!10993 = !{null, !32, !10994, !11038}
!10994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10995, size: 32)
!10995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10996)
!10996 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2420, line: 141, baseType: !10997)
!10997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2420, line: 97, size: 256, elements: !10998)
!10998 = !{!10999}
!10999 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10997, file: !2420, line: 107, baseType: !11000, size: 256)
!11000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2420, line: 98, size: 256, elements: !11001)
!11001 = !{!11002, !11007, !11012, !11017, !11022, !11027, !11032, !11037}
!11002 = !DIDerivedType(tag: DW_TAG_member, scope: !11000, file: !2420, line: 99, baseType: !11003, size: 32)
!11003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11000, file: !2420, line: 99, size: 32, elements: !11004)
!11004 = !{!11005, !11006}
!11005 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11003, file: !2420, line: 99, baseType: !121, size: 32)
!11006 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11003, file: !2420, line: 99, baseType: !121, size: 32)
!11007 = !DIDerivedType(tag: DW_TAG_member, scope: !11000, file: !2420, line: 100, baseType: !11008, size: 32, offset: 32)
!11008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11000, file: !2420, line: 100, size: 32, elements: !11009)
!11009 = !{!11010, !11011}
!11010 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11008, file: !2420, line: 100, baseType: !121, size: 32)
!11011 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11008, file: !2420, line: 100, baseType: !121, size: 32)
!11012 = !DIDerivedType(tag: DW_TAG_member, scope: !11000, file: !2420, line: 101, baseType: !11013, size: 32, offset: 64)
!11013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11000, file: !2420, line: 101, size: 32, elements: !11014)
!11014 = !{!11015, !11016}
!11015 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11013, file: !2420, line: 101, baseType: !121, size: 32)
!11016 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11013, file: !2420, line: 101, baseType: !121, size: 32)
!11017 = !DIDerivedType(tag: DW_TAG_member, scope: !11000, file: !2420, line: 102, baseType: !11018, size: 32, offset: 96)
!11018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11000, file: !2420, line: 102, size: 32, elements: !11019)
!11019 = !{!11020, !11021}
!11020 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11018, file: !2420, line: 102, baseType: !121, size: 32)
!11021 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11018, file: !2420, line: 102, baseType: !121, size: 32)
!11022 = !DIDerivedType(tag: DW_TAG_member, scope: !11000, file: !2420, line: 103, baseType: !11023, size: 32, offset: 128)
!11023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11000, file: !2420, line: 103, size: 32, elements: !11024)
!11024 = !{!11025, !11026}
!11025 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11023, file: !2420, line: 103, baseType: !121, size: 32)
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11023, file: !2420, line: 103, baseType: !121, size: 32)
!11027 = !DIDerivedType(tag: DW_TAG_member, scope: !11000, file: !2420, line: 104, baseType: !11028, size: 32, offset: 160)
!11028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11000, file: !2420, line: 104, size: 32, elements: !11029)
!11029 = !{!11030, !11031}
!11030 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11028, file: !2420, line: 104, baseType: !121, size: 32)
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11028, file: !2420, line: 104, baseType: !121, size: 32)
!11032 = !DIDerivedType(tag: DW_TAG_member, scope: !11000, file: !2420, line: 105, baseType: !11033, size: 32, offset: 192)
!11033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11000, file: !2420, line: 105, size: 32, elements: !11034)
!11034 = !{!11035, !11036}
!11035 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11033, file: !2420, line: 105, baseType: !121, size: 32)
!11036 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11033, file: !2420, line: 105, baseType: !121, size: 32)
!11037 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11000, file: !2420, line: 106, baseType: !121, size: 32, offset: 224)
!11038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11039, size: 32)
!11039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !11040)
!11040 = !{!11041, !11099, !11111, !11112, !11113, !11114, !11120, !11133}
!11041 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11039, file: !211, line: 247, baseType: !11042, size: 384)
!11042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !11043)
!11043 = !{!11044, !11068, !11075, !11076, !11077, !11086, !11087, !11088}
!11044 = !DIDerivedType(tag: DW_TAG_member, scope: !11042, file: !211, line: 60, baseType: !11045, size: 64)
!11045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11042, file: !211, line: 60, size: 64, elements: !11046)
!11046 = !{!11047, !11062}
!11047 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11045, file: !211, line: 61, baseType: !11048, size: 64)
!11048 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !11049)
!11049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !11050)
!11050 = !{!11051, !11057}
!11051 = !DIDerivedType(tag: DW_TAG_member, scope: !11049, file: !221, line: 38, baseType: !11052, size: 32)
!11052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11049, file: !221, line: 38, size: 32, elements: !11053)
!11053 = !{!11054, !11056}
!11054 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11052, file: !221, line: 39, baseType: !11055, size: 32)
!11055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11049, size: 32)
!11056 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11052, file: !221, line: 40, baseType: !11055, size: 32)
!11057 = !DIDerivedType(tag: DW_TAG_member, scope: !11049, file: !221, line: 42, baseType: !11058, size: 32, offset: 32)
!11058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11049, file: !221, line: 42, size: 32, elements: !11059)
!11059 = !{!11060, !11061}
!11060 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11058, file: !221, line: 43, baseType: !11055, size: 32)
!11061 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11058, file: !221, line: 44, baseType: !11055, size: 32)
!11062 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11045, file: !211, line: 62, baseType: !11063, size: 64)
!11063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !11064)
!11064 = !{!11065}
!11065 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11063, file: !237, line: 50, baseType: !11066, size: 64)
!11066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11067, size: 64, elements: !242)
!11067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11063, size: 32)
!11068 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11042, file: !211, line: 68, baseType: !11069, size: 32, offset: 64)
!11069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11070, size: 32)
!11070 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !11071)
!11071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !11072)
!11072 = !{!11073}
!11073 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11071, file: !247, line: 232, baseType: !11074, size: 64)
!11074 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !11049)
!11075 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11042, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!11076 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11042, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!11077 = !DIDerivedType(tag: DW_TAG_member, scope: !11042, file: !211, line: 90, baseType: !11078, size: 16, offset: 112)
!11078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11042, file: !211, line: 90, size: 16, elements: !11079)
!11079 = !{!11080, !11085}
!11080 = !DIDerivedType(tag: DW_TAG_member, scope: !11078, file: !211, line: 91, baseType: !11081, size: 16)
!11081 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11078, file: !211, line: 91, size: 16, elements: !11082)
!11082 = !{!11083, !11084}
!11083 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11081, file: !211, line: 96, baseType: !261, size: 8)
!11084 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11081, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11078, file: !211, line: 100, baseType: !265, size: 16)
!11086 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11042, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11042, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11042, file: !211, line: 131, baseType: !11089, size: 192, offset: 192)
!11089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !11090)
!11090 = !{!11091, !11092, !11098}
!11091 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11089, file: !247, line: 245, baseType: !11048, size: 64)
!11092 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11089, file: !247, line: 246, baseType: !11093, size: 32, offset: 64)
!11093 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !11094)
!11094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11095, size: 32)
!11095 = !DISubroutineType(types: !11096)
!11096 = !{null, !11097}
!11097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11089, size: 32)
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11089, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11039, file: !211, line: 250, baseType: !11100, size: 288, offset: 384)
!11100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !11101)
!11101 = !{!11102, !11103, !11104, !11105, !11106, !11107, !11108, !11109, !11110}
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11100, file: !284, line: 26, baseType: !121, size: 32)
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11100, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11100, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11100, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11100, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11100, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11100, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11100, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11100, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11039, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11039, file: !211, line: 256, baseType: !11070, size: 64, offset: 704)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11039, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11039, file: !211, line: 300, baseType: !11115, size: 96, offset: 800)
!11115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !11116)
!11116 = !{!11117, !11118, !11119}
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11115, file: !211, line: 153, baseType: !22, size: 32)
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11115, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!11119 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11115, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11039, file: !211, line: 325, baseType: !11121, size: 32, offset: 896)
!11121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11122, size: 32)
!11122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !11123)
!11123 = !{!11124, !11130, !11131}
!11124 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11122, file: !307, line: 5074, baseType: !11125, size: 96)
!11125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !11126)
!11126 = !{!11127, !11128, !11129}
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11125, file: !311, line: 57, baseType: !314, size: 32)
!11128 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11125, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11125, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!11130 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11122, file: !307, line: 5075, baseType: !11070, size: 64, offset: 96)
!11131 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11122, file: !307, line: 5076, baseType: !11132, offset: 160)
!11132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!11133 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11039, file: !211, line: 343, baseType: !11134, size: 64, offset: 928)
!11134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !11135)
!11135 = !{!11136, !11137}
!11136 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11134, file: !284, line: 63, baseType: !121, size: 32)
!11137 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11134, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!11138 = !{!11139, !11140, !11141}
!11139 = !DILocalVariable(name: "reason", arg: 1, scope: !10991, file: !2788, line: 209, type: !32)
!11140 = !DILocalVariable(name: "esf", arg: 2, scope: !10991, file: !2788, line: 209, type: !10994)
!11141 = !DILocalVariable(name: "thread", arg: 3, scope: !10991, file: !2788, line: 210, type: !11038)
!11142 = !DILocation(line: 0, scope: !10991)
!11143 = !DILocation(line: 212, column: 1, scope: !10991)
!11144 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2788, file: !2788, line: 214, type: !11145, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11147)
!11145 = !DISubroutineType(types: !11146)
!11146 = !{null, !22, !22}
!11147 = !{!11148, !11149}
!11148 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11144, file: !2788, line: 214, type: !22)
!11149 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11144, file: !2788, line: 214, type: !22)
!11150 = !DILocation(line: 0, scope: !11144)
!11151 = !DILocation(line: 216, column: 1, scope: !11144)
!11152 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2788, file: !2788, line: 218, type: !11153, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11155)
!11153 = !DISubroutineType(types: !11154)
!11154 = !{null, !1755, !200}
!11155 = !{!11156, !11157}
!11156 = !DILocalVariable(name: "buf", arg: 1, scope: !11152, file: !2788, line: 218, type: !1755)
!11157 = !DILocalVariable(name: "buflen", arg: 2, scope: !11152, file: !2788, line: 218, type: !200)
!11158 = !DILocation(line: 0, scope: !11152)
!11159 = !DILocation(line: 220, column: 1, scope: !11152)
!11160 = distinct !DISubprogram(name: "coredump_query", scope: !2788, file: !2788, line: 222, type: !11161, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11163)
!11161 = !DISubroutineType(types: !11162)
!11162 = !{!103, !2787, !102}
!11163 = !{!11164, !11165}
!11164 = !DILocalVariable(name: "query_id", arg: 1, scope: !11160, file: !2788, line: 222, type: !2787)
!11165 = !DILocalVariable(name: "arg", arg: 2, scope: !11160, file: !2788, line: 222, type: !102)
!11166 = !DILocation(line: 0, scope: !11160)
!11167 = !DILocation(line: 224, column: 2, scope: !11160)
!11168 = distinct !DISubprogram(name: "coredump_cmd", scope: !2788, file: !2788, line: 227, type: !11169, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11171)
!11169 = !DISubroutineType(types: !11170)
!11170 = !{!103, !2794, !102}
!11171 = !{!11172, !11173}
!11172 = !DILocalVariable(name: "query_id", arg: 1, scope: !11168, file: !2788, line: 227, type: !2794)
!11173 = !DILocalVariable(name: "arg", arg: 2, scope: !11168, file: !2788, line: 227, type: !102)
!11174 = !DILocation(line: 0, scope: !11168)
!11175 = !DILocation(line: 229, column: 2, scope: !11168)
!11176 = distinct !DISubprogram(name: "arch_system_halt", scope: !11177, file: !11177, line: 23, type: !4633, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11178)
!11177 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11178 = !{!11179}
!11179 = !DILocalVariable(name: "reason", arg: 1, scope: !11176, file: !11177, line: 23, type: !32)
!11180 = !DILocation(line: 0, scope: !11176)
!11181 = !DILocation(line: 55, column: 2, scope: !11182, inlinedAt: !11186)
!11182 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4622, file: !4622, line: 42, type: !4623, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11183)
!11183 = !{!11184, !11185}
!11184 = !DILocalVariable(name: "key", scope: !11182, file: !4622, line: 44, type: !32)
!11185 = !DILocalVariable(name: "tmp", scope: !11182, file: !4622, line: 53, type: !32)
!11186 = distinct !DILocation(line: 31, column: 8, scope: !11176)
!11187 = !{i64 2279828}
!11188 = !DILocation(line: 0, scope: !11182, inlinedAt: !11186)
!11189 = !DILocation(line: 32, column: 2, scope: !11176)
!11190 = !DILocation(line: 32, column: 2, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !11177, line: 32, column: 2)
!11192 = distinct !DILexicalBlock(scope: !11176, file: !11177, line: 32, column: 2)
!11193 = distinct !{!11193, !11194, !11195}
!11194 = !DILocation(line: 32, column: 2, scope: !11192)
!11195 = !DILocation(line: 34, column: 2, scope: !11192)
!11196 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11177, file: !11177, line: 39, type: !11197, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11199)
!11197 = !DISubroutineType(types: !11198)
!11198 = !{null, !32, !10994}
!11199 = !{!11200, !11201}
!11200 = !DILocalVariable(name: "reason", arg: 1, scope: !11196, file: !11177, line: 39, type: !32)
!11201 = !DILocalVariable(name: "esf", arg: 2, scope: !11196, file: !11177, line: 40, type: !10994)
!11202 = !DILocation(line: 0, scope: !11196)
!11203 = !DILocation(line: 46, column: 2, scope: !11196)
!11204 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11177, file: !11177, line: 81, type: !4633, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11205)
!11205 = !{!11206}
!11206 = !DILocalVariable(name: "reason", arg: 1, scope: !11204, file: !11177, line: 81, type: !32)
!11207 = !DILocation(line: 0, scope: !11204)
!11208 = !DILocation(line: 83, column: 2, scope: !11204)
!11209 = distinct !DISubprogram(name: "z_fatal_error", scope: !11177, file: !11177, line: 96, type: !11197, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11210)
!11210 = !{!11211, !11212, !11213, !11214}
!11211 = !DILocalVariable(name: "reason", arg: 1, scope: !11209, file: !11177, line: 96, type: !32)
!11212 = !DILocalVariable(name: "esf", arg: 2, scope: !11209, file: !11177, line: 96, type: !10994)
!11213 = !DILocalVariable(name: "key", scope: !11209, file: !11177, line: 102, type: !32)
!11214 = !DILocalVariable(name: "thread", scope: !11209, file: !11177, line: 103, type: !11038)
!11215 = !DILocation(line: 0, scope: !11209)
!11216 = !DILocation(line: 55, column: 2, scope: !11182, inlinedAt: !11217)
!11217 = distinct !DILocation(line: 102, column: 21, scope: !11209)
!11218 = !DILocation(line: 0, scope: !11182, inlinedAt: !11217)
!11219 = !DILocation(line: 119, column: 11, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11209, file: !11177, line: 119, column: 6)
!11221 = !DILocation(line: 119, column: 20, scope: !11220)
!11222 = !DILocation(line: 131, column: 2, scope: !11209)
!11223 = !DILocation(line: 151, column: 7, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11225, file: !11177, line: 146, column: 32)
!11225 = distinct !DILexicalBlock(scope: !11209, file: !11177, line: 146, column: 6)
!11226 = !DILocation(line: 151, column: 21, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11224, file: !11177, line: 151, column: 7)
!11228 = !DILocation(line: 104, column: 4, scope: !11209)
!11229 = !DILocalVariable(name: "key", arg: 1, scope: !11230, file: !4622, line: 84, type: !32)
!11230 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4622, file: !4622, line: 84, type: !4633, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11231)
!11231 = !{!11229}
!11232 = !DILocation(line: 0, scope: !11230, inlinedAt: !11233)
!11233 = distinct !DILocation(line: 186, column: 2, scope: !11209)
!11234 = !DILocation(line: 95, column: 2, scope: !11230, inlinedAt: !11233)
!11235 = !{i64 2280645}
!11236 = !DILocation(line: 189, column: 3, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11238, file: !11177, line: 188, column: 41)
!11238 = distinct !DILexicalBlock(scope: !11209, file: !11177, line: 188, column: 6)
!11239 = !DILocation(line: 191, column: 1, scope: !11209)
!11240 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !11241, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !322)
!11241 = !DISubroutineType(types: !11242)
!11242 = !{!11243}
!11243 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !11038)
!11244 = !DILocation(line: 535, column: 9, scope: !11240)
!11245 = !DILocation(line: 535, column: 2, scope: !11240)
!11246 = distinct !DISubprogram(name: "k_thread_abort", scope: !3245, file: !3245, line: 188, type: !11247, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11249)
!11247 = !DISubroutineType(types: !11248)
!11248 = !{null, !11243}
!11249 = !{!11250}
!11250 = !DILocalVariable(name: "thread", arg: 1, scope: !11246, file: !3245, line: 188, type: !11243)
!11251 = !DILocation(line: 0, scope: !11246)
!11252 = !DILocation(line: 197, column: 2, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11246, file: !3245, line: 197, column: 2)
!11254 = !{i64 2155061399}
!11255 = !DILocation(line: 198, column: 2, scope: !11246)
!11256 = !DILocation(line: 199, column: 1, scope: !11246)
!11257 = distinct !DISubprogram(name: "z_current_get", scope: !3245, file: !3245, line: 173, type: !11241, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !322)
!11258 = !DILocation(line: 180, column: 2, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11257, file: !3245, line: 180, column: 2)
!11260 = !{i64 2155061331}
!11261 = !DILocation(line: 181, column: 9, scope: !11257)
!11262 = !DILocation(line: 181, column: 2, scope: !11257)
!11263 = distinct !DISubprogram(name: "z_early_memset", scope: !1722, file: !1722, line: 108, type: !11264, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11266)
!11264 = !DISubroutineType(types: !11265)
!11265 = !{null, !102, !103, !200}
!11266 = !{!11267, !11268, !11269}
!11267 = !DILocalVariable(name: "dst", arg: 1, scope: !11263, file: !1722, line: 108, type: !102)
!11268 = !DILocalVariable(name: "c", arg: 2, scope: !11263, file: !1722, line: 108, type: !103)
!11269 = !DILocalVariable(name: "n", arg: 3, scope: !11263, file: !1722, line: 108, type: !200)
!11270 = !DILocation(line: 0, scope: !11263)
!11271 = !DILocation(line: 110, column: 9, scope: !11263)
!11272 = !DILocation(line: 111, column: 1, scope: !11263)
!11273 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1722, file: !1722, line: 121, type: !11274, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11276)
!11274 = !DISubroutineType(types: !11275)
!11275 = !{null, !102, !13, !200}
!11276 = !{!11277, !11278, !11279}
!11277 = !DILocalVariable(name: "dst", arg: 1, scope: !11273, file: !1722, line: 121, type: !102)
!11278 = !DILocalVariable(name: "src", arg: 2, scope: !11273, file: !1722, line: 121, type: !13)
!11279 = !DILocalVariable(name: "n", arg: 3, scope: !11273, file: !1722, line: 121, type: !200)
!11280 = !DILocation(line: 0, scope: !11273)
!11281 = !DILocation(line: 123, column: 9, scope: !11273)
!11282 = !DILocation(line: 124, column: 1, scope: !11273)
!11283 = distinct !DISubprogram(name: "z_bss_zero", scope: !1722, file: !1722, line: 132, type: !2821, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11284 = !DILocation(line: 143, column: 2, scope: !11283)
!11285 = !DILocation(line: 168, column: 1, scope: !11283)
!11286 = distinct !DISubprogram(name: "z_init_cpu", scope: !1722, file: !1722, line: 372, type: !6441, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11287)
!11287 = !{!11288}
!11288 = !DILocalVariable(name: "id", arg: 1, scope: !11286, file: !1722, line: 372, type: !103)
!11289 = !DILocation(line: 0, scope: !11286)
!11290 = !DILocation(line: 374, column: 2, scope: !11286)
!11291 = !DILocation(line: 375, column: 34, scope: !11286)
!11292 = !DILocation(line: 375, column: 19, scope: !11286)
!11293 = !DILocation(line: 375, column: 31, scope: !11286)
!11294 = !DILocation(line: 376, column: 24, scope: !11286)
!11295 = !DILocation(line: 376, column: 19, scope: !11286)
!11296 = !DILocation(line: 376, column: 22, scope: !11286)
!11297 = !DILocation(line: 378, column: 26, scope: !11286)
!11298 = !DILocation(line: 378, column: 4, scope: !11286)
!11299 = !DILocation(line: 378, column: 50, scope: !11286)
!11300 = !DILocation(line: 377, column: 19, scope: !11286)
!11301 = !DILocation(line: 377, column: 29, scope: !11286)
!11302 = !DILocation(line: 384, column: 1, scope: !11286)
!11303 = distinct !DISubprogram(name: "init_idle_thread", scope: !1722, file: !1722, line: 343, type: !6441, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11304)
!11304 = !{!11305, !11306, !11307, !11310}
!11305 = !DILocalVariable(name: "i", arg: 1, scope: !11303, file: !1722, line: 343, type: !103)
!11306 = !DILocalVariable(name: "thread", scope: !11303, file: !1722, line: 345, type: !1815)
!11307 = !DILocalVariable(name: "stack", scope: !11303, file: !1722, line: 346, type: !11308)
!11308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11309, size: 32)
!11309 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3124, line: 44, baseType: !1929)
!11310 = !DILocalVariable(name: "tname", scope: !11303, file: !1722, line: 358, type: !995)
!11311 = !DILocation(line: 0, scope: !11303)
!11312 = !DILocation(line: 345, column: 29, scope: !11303)
!11313 = !DILocation(line: 346, column: 28, scope: !11303)
!11314 = !DILocation(line: 362, column: 37, scope: !11303)
!11315 = !DILocation(line: 362, column: 36, scope: !11303)
!11316 = !DILocation(line: 361, column: 2, scope: !11303)
!11317 = !DILocation(line: 365, column: 2, scope: !11303)
!11318 = !DILocation(line: 370, column: 1, scope: !11303)
!11319 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1930, file: !1930, line: 331, type: !11320, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11322)
!11320 = !DISubroutineType(types: !11321)
!11321 = !{!995, !11308}
!11322 = !{!11323}
!11323 = !DILocalVariable(name: "sym", arg: 1, scope: !11319, file: !1930, line: 331, type: !11308)
!11324 = !DILocation(line: 0, scope: !11319)
!11325 = !DILocation(line: 333, column: 21, scope: !11319)
!11326 = !DILocation(line: 333, column: 2, scope: !11319)
!11327 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11328, file: !11328, line: 155, type: !11329, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11331)
!11328 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11329 = !DISubroutineType(types: !11330)
!11330 = !{null, !1815}
!11331 = !{!11332}
!11332 = !DILocalVariable(name: "thread", arg: 1, scope: !11327, file: !11328, line: 155, type: !1815)
!11333 = !DILocation(line: 0, scope: !11327)
!11334 = !DILocation(line: 157, column: 15, scope: !11327)
!11335 = !DILocation(line: 157, column: 28, scope: !11327)
!11336 = !DILocation(line: 158, column: 1, scope: !11327)
!11337 = distinct !DISubprogram(name: "z_cstart", scope: !1722, file: !1722, line: 501, type: !2821, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11338)
!11338 = !{!11339}
!11339 = !DILocalVariable(name: "dummy_thread", scope: !11337, file: !1722, line: 518, type: !1816)
!11340 = !DILocation(line: 507, column: 2, scope: !11337)
!11341 = !DILocation(line: 43, column: 14, scope: !11342, inlinedAt: !11346)
!11342 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11343, file: !11343, line: 40, type: !2821, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11344)
!11343 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11344 = !{!11345}
!11345 = !DILocalVariable(name: "msp", scope: !11342, file: !11343, line: 42, type: !121)
!11346 = distinct !DILocation(line: 44, column: 2, scope: !11347, inlinedAt: !11349)
!11347 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11348, file: !11348, line: 42, type: !2821, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11348 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11349 = distinct !DILocation(line: 510, column: 2, scope: !11337)
!11350 = !DILocation(line: 43, column: 3, scope: !11342, inlinedAt: !11346)
!11351 = !DILocation(line: 43, column: 60, scope: !11342, inlinedAt: !11346)
!11352 = !DILocation(line: 0, scope: !11342, inlinedAt: !11346)
!11353 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11354, file: !4796, line: 1153, type: !121)
!11354 = distinct !DISubprogram(name: "__set_MSP", scope: !4796, file: !4796, line: 1153, type: !4887, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11355)
!11355 = !{!11353}
!11356 = !DILocation(line: 0, scope: !11354, inlinedAt: !11357)
!11357 = distinct !DILocation(line: 46, column: 2, scope: !11342, inlinedAt: !11346)
!11358 = !DILocation(line: 1155, column: 3, scope: !11354, inlinedAt: !11357)
!11359 = !{i64 3745767}
!11360 = !DILocation(line: 62, column: 11, scope: !11342, inlinedAt: !11346)
!11361 = !DILocation(line: 102, column: 2, scope: !11362, inlinedAt: !11363)
!11362 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !5590, file: !5590, line: 97, type: !2821, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11363 = distinct !DILocation(line: 45, column: 2, scope: !11347, inlinedAt: !11349)
!11364 = !DILocation(line: 108, column: 2, scope: !11362, inlinedAt: !11363)
!11365 = !DILocation(line: 112, column: 2, scope: !11362, inlinedAt: !11363)
!11366 = !DILocation(line: 113, column: 2, scope: !11362, inlinedAt: !11363)
!11367 = !DILocation(line: 114, column: 2, scope: !11362, inlinedAt: !11363)
!11368 = !DILocation(line: 116, column: 2, scope: !11362, inlinedAt: !11363)
!11369 = !DILocation(line: 123, column: 13, scope: !11362, inlinedAt: !11363)
!11370 = !DILocation(line: 46, column: 2, scope: !11347, inlinedAt: !11349)
!11371 = !DILocation(line: 47, column: 2, scope: !11347, inlinedAt: !11349)
!11372 = !DILocation(line: 174, column: 12, scope: !11373, inlinedAt: !11374)
!11373 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !5590, file: !5590, line: 169, type: !2821, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11374 = distinct !DILocation(line: 48, column: 2, scope: !11347, inlinedAt: !11349)
!11375 = !DILocation(line: 179, column: 12, scope: !11373, inlinedAt: !11374)
!11376 = !DILocation(line: 50, column: 2, scope: !11347, inlinedAt: !11349)
!11377 = !DILocation(line: 57, column: 2, scope: !11347, inlinedAt: !11349)
!11378 = !DILocation(line: 518, column: 2, scope: !11337)
!11379 = !DILocation(line: 518, column: 18, scope: !11337)
!11380 = !DILocation(line: 520, column: 2, scope: !11337)
!11381 = !DILocation(line: 523, column: 2, scope: !11337)
!11382 = !DILocation(line: 526, column: 2, scope: !11337)
!11383 = !DILocation(line: 527, column: 2, scope: !11337)
!11384 = !DILocation(line: 543, column: 24, scope: !11337)
!11385 = !DILocation(line: 543, column: 2, scope: !11337)
!11386 = !DILocation(line: 0, scope: !1949)
!11387 = !DILocation(line: 246, column: 15, scope: !1967)
!11388 = !DILocation(line: 246, column: 36, scope: !1966)
!11389 = !DILocation(line: 246, column: 2, scope: !1967)
!11390 = !DILocation(line: 247, column: 37, scope: !1965)
!11391 = !DILocation(line: 0, scope: !1965)
!11392 = !DILocation(line: 248, column: 19, scope: !1965)
!11393 = !DILocation(line: 248, column: 12, scope: !1965)
!11394 = !DILocation(line: 250, column: 11, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !1965, file: !1722, line: 250, column: 7)
!11396 = !DILocation(line: 250, column: 7, scope: !1965)
!11397 = !DILocation(line: 254, column: 11, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11399, file: !1722, line: 254, column: 8)
!11399 = distinct !DILexicalBlock(scope: !11395, file: !1722, line: 250, column: 20)
!11400 = !DILocation(line: 254, column: 8, scope: !11399)
!11401 = !DILocation(line: 255, column: 9, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11398, file: !1722, line: 254, column: 17)
!11403 = !DILocation(line: 258, column: 9, scope: !11402)
!11404 = !DILocation(line: 261, column: 28, scope: !11402)
!11405 = !DILocation(line: 261, column: 10, scope: !11402)
!11406 = !DILocation(line: 261, column: 17, scope: !11402)
!11407 = !DILocation(line: 261, column: 26, scope: !11402)
!11408 = !DILocation(line: 262, column: 4, scope: !11402)
!11409 = !DILocation(line: 263, column: 9, scope: !11399)
!11410 = !DILocation(line: 263, column: 16, scope: !11399)
!11411 = !DILocation(line: 263, column: 28, scope: !11399)
!11412 = !DILocation(line: 264, column: 3, scope: !11399)
!11413 = !DILocation(line: 246, column: 60, scope: !1966)
!11414 = distinct !{!11414, !11389, !11415}
!11415 = !DILocation(line: 265, column: 2, scope: !1967)
!11416 = !DILocation(line: 266, column: 1, scope: !1949)
!11417 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4830, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11418)
!11418 = !{!11419, !11420}
!11419 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11417, file: !356, line: 1814, type: !621)
!11420 = !DILocalVariable(name: "priority", arg: 2, scope: !11417, file: !356, line: 1814, type: !121)
!11421 = !DILocation(line: 0, scope: !11417)
!11422 = !DILocation(line: 1822, column: 48, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11424, file: !356, line: 1821, column: 3)
!11424 = distinct !DILexicalBlock(scope: !11417, file: !356, line: 1816, column: 7)
!11425 = !DILocation(line: 1822, column: 32, scope: !11423)
!11426 = !DILocation(line: 1822, column: 40, scope: !11423)
!11427 = !DILocation(line: 1822, column: 5, scope: !11423)
!11428 = !DILocation(line: 1822, column: 46, scope: !11423)
!11429 = !DILocation(line: 1824, column: 1, scope: !11417)
!11430 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11348, file: !11348, line: 32, type: !2821, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!11431 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11432, file: !11432, line: 215, type: !11329, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11433)
!11432 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11433 = !{!11434}
!11434 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11431, file: !11432, line: 215, type: !1815)
!11435 = !DILocation(line: 0, scope: !11431)
!11436 = !DILocation(line: 217, column: 21, scope: !11431)
!11437 = !DILocation(line: 217, column: 34, scope: !11431)
!11438 = !DILocation(line: 221, column: 21, scope: !11431)
!11439 = !DILocation(line: 221, column: 34, scope: !11431)
!11440 = !DILocation(line: 223, column: 27, scope: !11431)
!11441 = !DILocation(line: 223, column: 33, scope: !11431)
!11442 = !DILocation(line: 224, column: 27, scope: !11431)
!11443 = !DILocation(line: 224, column: 32, scope: !11431)
!11444 = !DILocation(line: 232, column: 16, scope: !11431)
!11445 = !DILocation(line: 232, column: 30, scope: !11431)
!11446 = !DILocation(line: 239, column: 24, scope: !11431)
!11447 = !DILocation(line: 240, column: 1, scope: !11431)
!11448 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1722, file: !1722, line: 399, type: !11449, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11451)
!11449 = !DISubroutineType(types: !11450)
!11450 = !{!995}
!11451 = !{!11452}
!11452 = !DILocalVariable(name: "stack_ptr", scope: !11448, file: !1722, line: 401, type: !995)
!11453 = !DILocation(line: 404, column: 2, scope: !11448)
!11454 = !DILocation(line: 416, column: 24, scope: !11448)
!11455 = !DILocation(line: 418, column: 14, scope: !11448)
!11456 = !DILocation(line: 0, scope: !11448)
!11457 = !DILocation(line: 423, column: 2, scope: !11448)
!11458 = !DILocation(line: 424, column: 2, scope: !11448)
!11459 = !DILocation(line: 426, column: 2, scope: !11448)
!11460 = !DILocation(line: 428, column: 2, scope: !11448)
!11461 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1722, file: !1722, line: 432, type: !11462, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11464)
!11462 = !DISubroutineType(types: !11463)
!11463 = !{null, !995}
!11464 = !{!11465}
!11465 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11461, file: !1722, line: 432, type: !995)
!11466 = !DILocation(line: 0, scope: !11461)
!11467 = !DILocation(line: 435, column: 2, scope: !11461)
!11468 = !DILocation(line: 445, column: 2, scope: !11461)
!11469 = distinct !DISubprogram(name: "bg_thread_main", scope: !1722, file: !1722, line: 277, type: !3126, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11470)
!11470 = !{!11471, !11472, !11473}
!11471 = !DILocalVariable(name: "unused1", arg: 1, scope: !11469, file: !1722, line: 277, type: !102)
!11472 = !DILocalVariable(name: "unused2", arg: 2, scope: !11469, file: !1722, line: 277, type: !102)
!11473 = !DILocalVariable(name: "unused3", arg: 3, scope: !11469, file: !1722, line: 277, type: !102)
!11474 = !DILocation(line: 0, scope: !11469)
!11475 = !DILocation(line: 291, column: 20, scope: !11469)
!11476 = !DILocation(line: 293, column: 2, scope: !11469)
!11477 = !DILocation(line: 297, column: 2, scope: !11469)
!11478 = !DILocation(line: 305, column: 2, scope: !11469)
!11479 = !DILocation(line: 307, column: 2, scope: !11469)
!11480 = !DILocation(line: 330, column: 8, scope: !11469)
!11481 = !DILocation(line: 333, column: 34, scope: !11469)
!11482 = !DILocation(line: 339, column: 1, scope: !11469)
!11483 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1978, file: !1978, line: 45, type: !11484, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11492)
!11484 = !DISubroutineType(types: !11485)
!11485 = !{null, !11486, !102}
!11486 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !307, line: 103, baseType: !11487)
!11487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11488, size: 32)
!11488 = !DISubroutineType(types: !11489)
!11489 = !{null, !11490, !102}
!11490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11491, size: 32)
!11491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1983)
!11492 = !{!11493, !11494}
!11493 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11483, file: !1978, line: 45, type: !11486)
!11494 = !DILocalVariable(name: "user_data", arg: 2, scope: !11483, file: !1978, line: 45, type: !102)
!11495 = !DILocation(line: 0, scope: !11483)
!11496 = !DILocation(line: 71, column: 1, scope: !11483)
!11497 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1978, file: !1978, line: 73, type: !11484, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11498)
!11498 = !{!11499, !11500}
!11499 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11497, file: !1978, line: 73, type: !11486)
!11500 = !DILocalVariable(name: "user_data", arg: 2, scope: !11497, file: !1978, line: 73, type: !102)
!11501 = !DILocation(line: 0, scope: !11497)
!11502 = !DILocation(line: 95, column: 1, scope: !11497)
!11503 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1978, file: !1978, line: 97, type: !5591, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11504 = !DILocation(line: 1031, column: 3, scope: !11505, inlinedAt: !11508)
!11505 = distinct !DISubprogram(name: "__get_IPSR", scope: !4796, file: !4796, line: 1027, type: !4877, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11506)
!11506 = !{!11507}
!11507 = !DILocalVariable(name: "result", scope: !11505, file: !4796, line: 1029, type: !121)
!11508 = distinct !DILocation(line: 48, column: 10, scope: !11509, inlinedAt: !11510)
!11509 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5590, file: !5590, line: 46, type: !5591, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11510 = distinct !DILocation(line: 99, column: 9, scope: !11503)
!11511 = !{i64 3751418}
!11512 = !DILocation(line: 0, scope: !11505, inlinedAt: !11508)
!11513 = !DILocation(line: 48, column: 9, scope: !11509, inlinedAt: !11510)
!11514 = !DILocation(line: 99, column: 2, scope: !11503)
!11515 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1978, file: !1978, line: 106, type: !2821, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11516 = !DILocation(line: 108, column: 2, scope: !11515)
!11517 = !DILocation(line: 108, column: 17, scope: !11515)
!11518 = !DILocation(line: 108, column: 30, scope: !11515)
!11519 = !DILocation(line: 109, column: 1, scope: !11515)
!11520 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1978, file: !1978, line: 116, type: !2821, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11521 = !DILocation(line: 118, column: 2, scope: !11520)
!11522 = !DILocation(line: 118, column: 17, scope: !11520)
!11523 = !DILocation(line: 118, column: 30, scope: !11520)
!11524 = !DILocation(line: 119, column: 1, scope: !11520)
!11525 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1978, file: !1978, line: 126, type: !5591, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11526 = !DILocation(line: 128, column: 10, scope: !11525)
!11527 = !DILocation(line: 128, column: 25, scope: !11525)
!11528 = !DILocation(line: 128, column: 38, scope: !11525)
!11529 = !DILocation(line: 128, column: 53, scope: !11525)
!11530 = !DILocation(line: 128, column: 2, scope: !11525)
!11531 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1978, file: !1978, line: 187, type: !11532, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11534)
!11532 = !DISubroutineType(types: !11533)
!11533 = !{!103, !1982, !144}
!11534 = !{!11535, !11536}
!11535 = !DILocalVariable(name: "thread", arg: 1, scope: !11531, file: !1978, line: 187, type: !1982)
!11536 = !DILocalVariable(name: "value", arg: 2, scope: !11531, file: !1978, line: 187, type: !144)
!11537 = !DILocation(line: 0, scope: !11531)
!11538 = !DILocation(line: 206, column: 2, scope: !11531)
!11539 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1978, file: !1978, line: 238, type: !11540, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11542)
!11540 = !DISubroutineType(types: !11541)
!11541 = !{!144, !1982}
!11542 = !{!11543}
!11543 = !DILocalVariable(name: "thread", arg: 1, scope: !11539, file: !1978, line: 238, type: !1982)
!11544 = !DILocation(line: 0, scope: !11539)
!11545 = !DILocation(line: 244, column: 2, scope: !11539)
!11546 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1978, file: !1978, line: 248, type: !11547, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11549)
!11547 = !DISubroutineType(types: !11548)
!11548 = !{!103, !1981, !995, !200}
!11549 = !{!11550, !11551, !11552}
!11550 = !DILocalVariable(name: "thread", arg: 1, scope: !11546, file: !1978, line: 248, type: !1981)
!11551 = !DILocalVariable(name: "buf", arg: 2, scope: !11546, file: !1978, line: 248, type: !995)
!11552 = !DILocalVariable(name: "size", arg: 3, scope: !11546, file: !1978, line: 248, type: !200)
!11553 = !DILocation(line: 0, scope: !11546)
!11554 = !DILocation(line: 257, column: 2, scope: !11546)
!11555 = !DILocation(line: 0, scope: !1977)
!11556 = !DILocation(line: 281, column: 11, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !1977, file: !1978, line: 281, column: 6)
!11558 = !DILocation(line: 281, column: 20, scope: !11557)
!11559 = !DILocation(line: 275, column: 45, scope: !1977)
!11560 = !DILocation(line: 285, column: 10, scope: !1977)
!11561 = !DILocation(line: 0, scope: !2098)
!11562 = !DILocation(line: 293, column: 39, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !2098, file: !1978, line: 293, column: 2)
!11564 = !DILocation(line: 293, column: 2, scope: !2098)
!11565 = !DILocation(line: 273, column: 14, scope: !1977)
!11566 = !DILocation(line: 309, column: 2, scope: !1977)
!11567 = !DILocation(line: 309, column: 11, scope: !1977)
!11568 = !DILocation(line: 311, column: 2, scope: !1977)
!11569 = !DILocation(line: 293, column: 26, scope: !11563)
!11570 = !DILocation(line: 294, column: 9, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11563, file: !1978, line: 293, column: 54)
!11572 = !DILocation(line: 295, column: 21, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11571, file: !1978, line: 295, column: 7)
!11574 = !DILocation(line: 295, column: 28, scope: !11573)
!11575 = !DILocation(line: 295, column: 7, scope: !11571)
!11576 = !DILocation(line: 299, column: 25, scope: !11571)
!11577 = !DILocation(line: 299, column: 41, scope: !11571)
!11578 = !DILocation(line: 300, column: 7, scope: !11571)
!11579 = !DILocation(line: 300, column: 26, scope: !11571)
!11580 = !DILocation(line: 299, column: 10, scope: !11571)
!11581 = !DILocation(line: 299, column: 7, scope: !11571)
!11582 = !DILocation(line: 302, column: 16, scope: !11571)
!11583 = !DILocation(line: 304, column: 20, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11571, file: !1978, line: 304, column: 7)
!11585 = !DILocation(line: 304, column: 7, scope: !11571)
!11586 = !DILocation(line: 305, column: 26, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11584, file: !1978, line: 304, column: 26)
!11588 = !DILocation(line: 305, column: 42, scope: !11587)
!11589 = !DILocation(line: 305, column: 11, scope: !11587)
!11590 = !DILocation(line: 305, column: 8, scope: !11587)
!11591 = !DILocation(line: 306, column: 3, scope: !11587)
!11592 = !DILocation(line: 293, column: 50, scope: !11563)
!11593 = !DILocation(line: 312, column: 1, scope: !1977)
!11594 = distinct !DISubprogram(name: "copy_bytes", scope: !1978, file: !1978, line: 261, type: !11595, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11597)
!11595 = !DISubroutineType(types: !11596)
!11596 = !{!200, !995, !200, !144, !200}
!11597 = !{!11598, !11599, !11600, !11601, !11602}
!11598 = !DILocalVariable(name: "dest", arg: 1, scope: !11594, file: !1978, line: 261, type: !995)
!11599 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11594, file: !1978, line: 261, type: !200)
!11600 = !DILocalVariable(name: "src", arg: 3, scope: !11594, file: !1978, line: 261, type: !144)
!11601 = !DILocalVariable(name: "src_size", arg: 4, scope: !11594, file: !1978, line: 261, type: !200)
!11602 = !DILocalVariable(name: "bytes_to_copy", scope: !11594, file: !1978, line: 263, type: !200)
!11603 = !DILocation(line: 0, scope: !11594)
!11604 = !DILocation(line: 265, column: 18, scope: !11594)
!11605 = !DILocation(line: 266, column: 2, scope: !11594)
!11606 = !DILocation(line: 268, column: 2, scope: !11594)
!11607 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1978, file: !1978, line: 383, type: !11608, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11610)
!11608 = !DISubroutineType(types: !11609)
!11609 = !{null, !1982}
!11610 = !{!11611}
!11611 = !DILocalVariable(name: "thread", arg: 1, scope: !11607, file: !1978, line: 383, type: !1982)
!11612 = !DILocation(line: 0, scope: !11607)
!11613 = !DILocation(line: 387, column: 2, scope: !11607)
!11614 = !DILocation(line: 388, column: 1, scope: !11607)
!11615 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1978, file: !1978, line: 528, type: !11616, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11623)
!11616 = !DISubroutineType(types: !11617)
!11617 = !{!995, !1982, !11618, !200, !3123, !102, !102, !102, !103, !121, !144}
!11618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11619, size: 32)
!11619 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3124, line: 44, baseType: !11620)
!11620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1930, line: 47, size: 8, elements: !11621)
!11621 = !{!11622}
!11622 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11620, file: !1930, line: 48, baseType: !146, size: 8)
!11623 = !{!11624, !11625, !11626, !11627, !11628, !11629, !11630, !11631, !11632, !11633, !11634}
!11624 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11615, file: !1978, line: 528, type: !1982)
!11625 = !DILocalVariable(name: "stack", arg: 2, scope: !11615, file: !1978, line: 529, type: !11618)
!11626 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11615, file: !1978, line: 529, type: !200)
!11627 = !DILocalVariable(name: "entry", arg: 4, scope: !11615, file: !1978, line: 530, type: !3123)
!11628 = !DILocalVariable(name: "p1", arg: 5, scope: !11615, file: !1978, line: 531, type: !102)
!11629 = !DILocalVariable(name: "p2", arg: 6, scope: !11615, file: !1978, line: 531, type: !102)
!11630 = !DILocalVariable(name: "p3", arg: 7, scope: !11615, file: !1978, line: 531, type: !102)
!11631 = !DILocalVariable(name: "prio", arg: 8, scope: !11615, file: !1978, line: 532, type: !103)
!11632 = !DILocalVariable(name: "options", arg: 9, scope: !11615, file: !1978, line: 532, type: !121)
!11633 = !DILocalVariable(name: "name", arg: 10, scope: !11615, file: !1978, line: 532, type: !144)
!11634 = !DILocalVariable(name: "stack_ptr", scope: !11615, file: !1978, line: 534, type: !995)
!11635 = !DILocation(line: 0, scope: !11615)
!11636 = !DILocation(line: 550, column: 28, scope: !11615)
!11637 = !DILocation(line: 550, column: 2, scope: !11615)
!11638 = !DILocation(line: 553, column: 34, scope: !11615)
!11639 = !DILocation(line: 553, column: 2, scope: !11615)
!11640 = !DILocation(line: 554, column: 14, scope: !11615)
!11641 = !DILocation(line: 564, column: 2, scope: !11615)
!11642 = !DILocation(line: 567, column: 14, scope: !11615)
!11643 = !DILocation(line: 567, column: 24, scope: !11615)
!11644 = !DILocation(line: 612, column: 7, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11615, file: !1978, line: 612, column: 6)
!11646 = !DILocation(line: 612, column: 6, scope: !11615)
!11647 = !DILocation(line: 627, column: 40, scope: !11615)
!11648 = !DILocation(line: 637, column: 2, scope: !11615)
!11649 = !DILocation(line: 613, column: 15, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11645, file: !1978, line: 612, column: 17)
!11651 = !DILocation(line: 613, column: 29, scope: !11650)
!11652 = !DILocation(line: 638, column: 1, scope: !11615)
!11653 = distinct !DISubprogram(name: "z_waitq_init", scope: !11654, file: !11654, line: 47, type: !11655, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11657)
!11654 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11655 = !DISubroutineType(types: !11656)
!11656 = !{null, !2013}
!11657 = !{!11658}
!11658 = !DILocalVariable(name: "w", arg: 1, scope: !11653, file: !11654, line: 47, type: !2013)
!11659 = !DILocation(line: 0, scope: !11653)
!11660 = !DILocation(line: 49, column: 21, scope: !11653)
!11661 = !DILocation(line: 49, column: 2, scope: !11653)
!11662 = !DILocation(line: 50, column: 1, scope: !11653)
!11663 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1978, file: !1978, line: 791, type: !11664, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11667)
!11664 = !DISubroutineType(types: !11665)
!11665 = !{null, !11666, !103, !121, !32}
!11666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 32)
!11667 = !{!11668, !11669, !11670, !11671}
!11668 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11663, file: !1978, line: 791, type: !11666)
!11669 = !DILocalVariable(name: "priority", arg: 2, scope: !11663, file: !1978, line: 791, type: !103)
!11670 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11663, file: !1978, line: 792, type: !121)
!11671 = !DILocalVariable(name: "options", arg: 4, scope: !11663, file: !1978, line: 792, type: !32)
!11672 = !DILocation(line: 0, scope: !11663)
!11673 = !DILocation(line: 795, column: 15, scope: !11663)
!11674 = !DILocation(line: 795, column: 25, scope: !11663)
!11675 = !DILocation(line: 796, column: 30, scope: !11663)
!11676 = !DILocation(line: 796, column: 15, scope: !11663)
!11677 = !DILocation(line: 796, column: 28, scope: !11663)
!11678 = !DILocation(line: 797, column: 30, scope: !11663)
!11679 = !DILocation(line: 797, column: 15, scope: !11663)
!11680 = !DILocation(line: 797, column: 28, scope: !11663)
!11681 = !DILocation(line: 799, column: 22, scope: !11663)
!11682 = !DILocation(line: 799, column: 15, scope: !11663)
!11683 = !DILocation(line: 799, column: 20, scope: !11663)
!11684 = !DILocation(line: 801, column: 15, scope: !11663)
!11685 = !DILocation(line: 801, column: 28, scope: !11663)
!11686 = !DILocation(line: 814, column: 2, scope: !11663)
!11687 = !DILocation(line: 815, column: 1, scope: !11663)
!11688 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1978, file: !1978, line: 449, type: !11689, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11691)
!11689 = !DISubroutineType(types: !11690)
!11690 = !{!995, !1982, !11618, !200}
!11691 = !{!11692, !11693, !11694, !11695, !11696, !11697, !11698, !11699}
!11692 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11688, file: !1978, line: 449, type: !1982)
!11693 = !DILocalVariable(name: "stack", arg: 2, scope: !11688, file: !1978, line: 450, type: !11618)
!11694 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11688, file: !1978, line: 450, type: !200)
!11695 = !DILocalVariable(name: "stack_obj_size", scope: !11688, file: !1978, line: 452, type: !200)
!11696 = !DILocalVariable(name: "stack_buf_size", scope: !11688, file: !1978, line: 452, type: !200)
!11697 = !DILocalVariable(name: "stack_ptr", scope: !11688, file: !1978, line: 453, type: !995)
!11698 = !DILocalVariable(name: "stack_buf_start", scope: !11688, file: !1978, line: 453, type: !995)
!11699 = !DILocalVariable(name: "delta", scope: !11688, file: !1978, line: 454, type: !200)
!11700 = !DILocation(line: 0, scope: !11688)
!11701 = !DILocation(line: 465, column: 20, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11688, file: !1978, line: 463, column: 2)
!11703 = !DILocation(line: 466, column: 21, scope: !11702)
!11704 = !DILocation(line: 473, column: 28, scope: !11688)
!11705 = !DILocation(line: 514, column: 33, scope: !11688)
!11706 = !DILocation(line: 514, column: 25, scope: !11688)
!11707 = !DILocation(line: 514, column: 31, scope: !11688)
!11708 = !DILocation(line: 515, column: 25, scope: !11688)
!11709 = !DILocation(line: 515, column: 30, scope: !11688)
!11710 = !DILocation(line: 516, column: 25, scope: !11688)
!11711 = !DILocation(line: 516, column: 31, scope: !11688)
!11712 = !DILocation(line: 520, column: 2, scope: !11688)
!11713 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1930, file: !1930, line: 331, type: !11714, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11716)
!11714 = !DISubroutineType(types: !11715)
!11715 = !{!995, !11618}
!11716 = !{!11717}
!11717 = !DILocalVariable(name: "sym", arg: 1, scope: !11713, file: !1930, line: 331, type: !11618)
!11718 = !DILocation(line: 0, scope: !11713)
!11719 = !DILocation(line: 333, column: 21, scope: !11713)
!11720 = !DILocation(line: 333, column: 2, scope: !11713)
!11721 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11722, file: !11722, line: 40, type: !11723, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11725)
!11722 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11723 = !DISubroutineType(types: !11724)
!11724 = !{null, !11666}
!11725 = !{!11726}
!11726 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11721, file: !11722, line: 40, type: !11666)
!11727 = !DILocation(line: 0, scope: !11721)
!11728 = !DILocation(line: 42, column: 31, scope: !11721)
!11729 = !DILocation(line: 42, column: 2, scope: !11721)
!11730 = !DILocation(line: 43, column: 1, scope: !11721)
!11731 = distinct !DISubprogram(name: "z_init_timeout", scope: !11722, file: !11722, line: 25, type: !2039, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11732)
!11732 = !{!11733}
!11733 = !DILocalVariable(name: "to", arg: 1, scope: !11731, file: !11722, line: 25, type: !2041)
!11734 = !DILocation(line: 0, scope: !11731)
!11735 = !DILocation(line: 27, column: 22, scope: !11731)
!11736 = !DILocation(line: 27, column: 2, scope: !11731)
!11737 = !DILocation(line: 28, column: 1, scope: !11731)
!11738 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !11739, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11741)
!11739 = !DISubroutineType(types: !11740)
!11740 = !{null, !2085}
!11741 = !{!11742}
!11742 = !DILocalVariable(name: "node", arg: 1, scope: !11738, file: !221, line: 211, type: !2085)
!11743 = !DILocation(line: 0, scope: !11738)
!11744 = !DILocation(line: 213, column: 8, scope: !11738)
!11745 = !DILocation(line: 213, column: 13, scope: !11738)
!11746 = !DILocation(line: 214, column: 8, scope: !11738)
!11747 = !DILocation(line: 214, column: 13, scope: !11738)
!11748 = !DILocation(line: 215, column: 1, scope: !11738)
!11749 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !11750, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11753)
!11750 = !DISubroutineType(types: !11751)
!11751 = !{null, !11752}
!11752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!11753 = !{!11754}
!11754 = !DILocalVariable(name: "list", arg: 1, scope: !11749, file: !221, line: 197, type: !11752)
!11755 = !DILocation(line: 0, scope: !11749)
!11756 = !DILocation(line: 199, column: 8, scope: !11749)
!11757 = !DILocation(line: 199, column: 13, scope: !11749)
!11758 = !DILocation(line: 200, column: 8, scope: !11749)
!11759 = !DILocation(line: 200, column: 13, scope: !11749)
!11760 = !DILocation(line: 201, column: 1, scope: !11749)
!11761 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1978, file: !1978, line: 641, type: !11762, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11768)
!11762 = !DISubroutineType(types: !11763)
!11763 = !{!1981, !1982, !11618, !200, !3123, !102, !102, !102, !103, !121, !11764}
!11764 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1457, line: 67, baseType: !11765)
!11765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1457, line: 65, size: 64, elements: !11766)
!11766 = !{!11767}
!11767 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11765, file: !1457, line: 66, baseType: !1456, size: 64)
!11768 = !{!11769, !11770, !11771, !11772, !11773, !11774, !11775, !11776, !11777, !11778}
!11769 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11761, file: !1978, line: 641, type: !1982)
!11770 = !DILocalVariable(name: "stack", arg: 2, scope: !11761, file: !1978, line: 642, type: !11618)
!11771 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11761, file: !1978, line: 643, type: !200)
!11772 = !DILocalVariable(name: "entry", arg: 4, scope: !11761, file: !1978, line: 643, type: !3123)
!11773 = !DILocalVariable(name: "p1", arg: 5, scope: !11761, file: !1978, line: 644, type: !102)
!11774 = !DILocalVariable(name: "p2", arg: 6, scope: !11761, file: !1978, line: 644, type: !102)
!11775 = !DILocalVariable(name: "p3", arg: 7, scope: !11761, file: !1978, line: 644, type: !102)
!11776 = !DILocalVariable(name: "prio", arg: 8, scope: !11761, file: !1978, line: 645, type: !103)
!11777 = !DILocalVariable(name: "options", arg: 9, scope: !11761, file: !1978, line: 645, type: !121)
!11778 = !DILocalVariable(name: "delay", arg: 10, scope: !11761, file: !1978, line: 645, type: !11764)
!11779 = !DILocation(line: 0, scope: !11761)
!11780 = !DILocation(line: 649, column: 2, scope: !11761)
!11781 = !DILocation(line: 652, column: 7, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11761, file: !1978, line: 652, column: 6)
!11783 = !DILocation(line: 652, column: 6, scope: !11761)
!11784 = !DILocation(line: 653, column: 3, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11782, file: !1978, line: 652, column: 39)
!11786 = !DILocation(line: 654, column: 2, scope: !11785)
!11787 = !DILocation(line: 656, column: 2, scope: !11761)
!11788 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1978, file: !1978, line: 401, type: !11789, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11791)
!11789 = !DISubroutineType(types: !11790)
!11790 = !{null, !1982, !11764}
!11791 = !{!11792, !11793}
!11792 = !DILocalVariable(name: "thread", arg: 1, scope: !11788, file: !1978, line: 401, type: !1982)
!11793 = !DILocalVariable(name: "delay", arg: 2, scope: !11788, file: !1978, line: 401, type: !11764)
!11794 = !DILocation(line: 0, scope: !11788)
!11795 = !DILocation(line: 404, column: 6, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11788, file: !1978, line: 404, column: 6)
!11797 = !DILocation(line: 404, column: 6, scope: !11788)
!11798 = !DILocation(line: 405, column: 3, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11796, file: !1978, line: 404, column: 38)
!11800 = !DILocation(line: 406, column: 2, scope: !11799)
!11801 = !DILocation(line: 407, column: 3, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11796, file: !1978, line: 406, column: 9)
!11803 = !DILocation(line: 413, column: 1, scope: !11788)
!11804 = distinct !DISubprogram(name: "k_thread_start", scope: !3245, file: !3245, line: 205, type: !11805, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11807)
!11805 = !DISubroutineType(types: !11806)
!11806 = !{null, !1981}
!11807 = !{!11808}
!11808 = !DILocalVariable(name: "thread", arg: 1, scope: !11804, file: !3245, line: 205, type: !1981)
!11809 = !DILocation(line: 0, scope: !11804)
!11810 = !DILocation(line: 214, column: 2, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11804, file: !3245, line: 214, column: 2)
!11812 = !{i64 2155086623}
!11813 = !DILocation(line: 215, column: 2, scope: !11804)
!11814 = !DILocation(line: 216, column: 1, scope: !11804)
!11815 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11722, file: !11722, line: 47, type: !11789, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11816)
!11816 = !{!11817, !11818}
!11817 = !DILocalVariable(name: "thread", arg: 1, scope: !11815, file: !11722, line: 47, type: !1982)
!11818 = !DILocalVariable(name: "ticks", arg: 2, scope: !11815, file: !11722, line: 47, type: !11764)
!11819 = !DILocation(line: 0, scope: !11815)
!11820 = !DILocation(line: 49, column: 30, scope: !11815)
!11821 = !DILocation(line: 49, column: 2, scope: !11815)
!11822 = !DILocation(line: 50, column: 1, scope: !11815)
!11823 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1978, file: !1978, line: 748, type: !2821, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11824)
!11824 = !{!11825, !11843}
!11825 = !DILocalVariable(name: "thread_data", scope: !11826, file: !1978, line: 750, type: !11827)
!11826 = distinct !DILexicalBlock(scope: !11823, file: !1978, line: 750, column: 2)
!11827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11828, size: 32)
!11828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !307, line: 620, size: 384, elements: !11829)
!11829 = !{!11830, !11831, !11832, !11833, !11834, !11835, !11836, !11837, !11838, !11839, !11840, !11842}
!11830 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11828, file: !307, line: 621, baseType: !1982, size: 32)
!11831 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11828, file: !307, line: 622, baseType: !11618, size: 32, offset: 32)
!11832 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11828, file: !307, line: 623, baseType: !32, size: 32, offset: 64)
!11833 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11828, file: !307, line: 624, baseType: !3123, size: 32, offset: 96)
!11834 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11828, file: !307, line: 625, baseType: !102, size: 32, offset: 128)
!11835 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11828, file: !307, line: 626, baseType: !102, size: 32, offset: 160)
!11836 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11828, file: !307, line: 627, baseType: !102, size: 32, offset: 192)
!11837 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11828, file: !307, line: 628, baseType: !103, size: 32, offset: 224)
!11838 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11828, file: !307, line: 629, baseType: !121, size: 32, offset: 256)
!11839 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11828, file: !307, line: 630, baseType: !595, size: 32, offset: 288)
!11840 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11828, file: !307, line: 631, baseType: !11841, size: 32, offset: 320)
!11841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 32)
!11842 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11828, file: !307, line: 632, baseType: !144, size: 32, offset: 352)
!11843 = !DILocalVariable(name: "thread_data", scope: !11844, file: !1978, line: 781, type: !11827)
!11844 = distinct !DILexicalBlock(scope: !11823, file: !1978, line: 781, column: 2)
!11845 = !DILocation(line: 0, scope: !11826)
!11846 = !DILocation(line: 750, column: 2, scope: !11826)
!11847 = !DILocation(line: 780, column: 2, scope: !11823)
!11848 = !DILocation(line: 0, scope: !11844)
!11849 = !DILocation(line: 781, column: 2, scope: !11844)
!11850 = !DILocation(line: 752, column: 17, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11852, file: !1978, line: 750, column: 38)
!11852 = distinct !DILexicalBlock(scope: !11826, file: !1978, line: 750, column: 2)
!11853 = !DILocation(line: 753, column: 17, scope: !11851)
!11854 = !DILocation(line: 754, column: 17, scope: !11851)
!11855 = !DILocation(line: 755, column: 17, scope: !11851)
!11856 = !DILocation(line: 756, column: 17, scope: !11851)
!11857 = !DILocation(line: 757, column: 17, scope: !11851)
!11858 = !DILocation(line: 758, column: 17, scope: !11851)
!11859 = !DILocation(line: 759, column: 17, scope: !11851)
!11860 = !DILocation(line: 760, column: 17, scope: !11851)
!11861 = !DILocation(line: 751, column: 3, scope: !11851)
!11862 = !DILocation(line: 763, column: 16, scope: !11851)
!11863 = !DILocation(line: 763, column: 29, scope: !11851)
!11864 = !DILocation(line: 763, column: 39, scope: !11851)
!11865 = !DILocation(line: 750, column: 2, scope: !11852)
!11866 = !DILocation(line: 750, column: 2, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11852, file: !1978, line: 750, column: 2)
!11868 = distinct !{!11868, !11846, !11869}
!11869 = !DILocation(line: 764, column: 2, scope: !11826)
!11870 = !DILocation(line: 787, column: 2, scope: !11823)
!11871 = !DILocation(line: 788, column: 1, scope: !11823)
!11872 = !DILocation(line: 782, column: 20, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11874, file: !1978, line: 782, column: 7)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !1978, line: 781, column: 38)
!11875 = distinct !DILexicalBlock(scope: !11844, file: !1978, line: 781, column: 2)
!11876 = !DILocation(line: 782, column: 31, scope: !11873)
!11877 = !DILocation(line: 782, column: 7, scope: !11874)
!11878 = !DILocation(line: 783, column: 37, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11873, file: !1978, line: 782, column: 51)
!11880 = !DILocation(line: 784, column: 10, scope: !11879)
!11881 = !DILocation(line: 783, column: 4, scope: !11879)
!11882 = !DILocation(line: 785, column: 3, scope: !11879)
!11883 = !DILocation(line: 781, column: 2, scope: !11875)
!11884 = !DILocation(line: 781, column: 2, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11875, file: !1978, line: 781, column: 2)
!11886 = distinct !{!11886, !11849, !11887}
!11887 = !DILocation(line: 786, column: 2, scope: !11844)
!11888 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !11889, file: !11889, line: 403, type: !11890, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11892)
!11889 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11890 = !DISubroutineType(types: !11891)
!11891 = !{!1308, !1308}
!11892 = !{!11893}
!11893 = !DILocalVariable(name: "t", arg: 1, scope: !11888, file: !11889, line: 403, type: !1308)
!11894 = !DILocation(line: 0, scope: !11888)
!11895 = !DILocalVariable(name: "t", arg: 1, scope: !11896, file: !11889, line: 102, type: !1308)
!11896 = distinct !DISubprogram(name: "z_tmcvt", scope: !11889, file: !11889, line: 102, type: !11897, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11899)
!11897 = !DISubroutineType(types: !11898)
!11898 = !{!1308, !1308, !121, !121, !157, !157, !157, !157}
!11899 = !{!11895, !11900, !11901, !11902, !11903, !11904, !11905, !11906, !11907, !11908, !11909}
!11900 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11896, file: !11889, line: 102, type: !121)
!11901 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11896, file: !11889, line: 103, type: !121)
!11902 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11896, file: !11889, line: 103, type: !157)
!11903 = !DILocalVariable(name: "result32", arg: 5, scope: !11896, file: !11889, line: 104, type: !157)
!11904 = !DILocalVariable(name: "round_up", arg: 6, scope: !11896, file: !11889, line: 104, type: !157)
!11905 = !DILocalVariable(name: "round_off", arg: 7, scope: !11896, file: !11889, line: 105, type: !157)
!11906 = !DILocalVariable(name: "mul_ratio", scope: !11896, file: !11889, line: 107, type: !157)
!11907 = !DILocalVariable(name: "div_ratio", scope: !11896, file: !11889, line: 109, type: !157)
!11908 = !DILocalVariable(name: "off", scope: !11896, file: !11889, line: 116, type: !1308)
!11909 = !DILocalVariable(name: "rdivisor", scope: !11910, file: !11889, line: 119, type: !121)
!11910 = distinct !DILexicalBlock(scope: !11911, file: !11889, line: 118, column: 18)
!11911 = distinct !DILexicalBlock(scope: !11896, file: !11889, line: 118, column: 6)
!11912 = !DILocation(line: 0, scope: !11896, inlinedAt: !11913)
!11913 = distinct !DILocation(line: 406, column: 9, scope: !11888)
!11914 = !DILocation(line: 145, column: 13, scope: !11915, inlinedAt: !11913)
!11915 = distinct !DILexicalBlock(scope: !11916, file: !11889, line: 144, column: 10)
!11916 = distinct !DILexicalBlock(scope: !11917, file: !11889, line: 142, column: 7)
!11917 = distinct !DILexicalBlock(scope: !11918, file: !11889, line: 141, column: 24)
!11918 = distinct !DILexicalBlock(scope: !11919, file: !11889, line: 141, column: 13)
!11919 = distinct !DILexicalBlock(scope: !11896, file: !11889, line: 134, column: 6)
!11920 = !DILocation(line: 406, column: 2, scope: !11888)
!11921 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1978, file: !1978, line: 817, type: !3121, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11922)
!11922 = !{!11923, !11924, !11925, !11926}
!11923 = !DILocalVariable(name: "entry", arg: 1, scope: !11921, file: !1978, line: 817, type: !3123)
!11924 = !DILocalVariable(name: "p1", arg: 2, scope: !11921, file: !1978, line: 818, type: !102)
!11925 = !DILocalVariable(name: "p2", arg: 3, scope: !11921, file: !1978, line: 818, type: !102)
!11926 = !DILocalVariable(name: "p3", arg: 4, scope: !11921, file: !1978, line: 818, type: !102)
!11927 = !DILocation(line: 0, scope: !11921)
!11928 = !DILocation(line: 822, column: 2, scope: !11921)
!11929 = !DILocation(line: 822, column: 17, scope: !11921)
!11930 = !DILocation(line: 822, column: 30, scope: !11921)
!11931 = !DILocation(line: 823, column: 2, scope: !11921)
!11932 = !DILocation(line: 845, column: 2, scope: !11921)
!11933 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1978, file: !1978, line: 888, type: !11934, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11936)
!11934 = !DISubroutineType(types: !11935)
!11935 = !{!103, !1982}
!11936 = !{!11937}
!11937 = !DILocalVariable(name: "thread", arg: 1, scope: !11933, file: !1978, line: 888, type: !1982)
!11938 = !DILocation(line: 0, scope: !11933)
!11939 = !DILocation(line: 893, column: 2, scope: !11933)
!11940 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1978, file: !1978, line: 897, type: !11941, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11943)
!11941 = !DISubroutineType(types: !11942)
!11942 = !{!103, !1982, !32}
!11943 = !{!11944, !11945}
!11944 = !DILocalVariable(name: "thread", arg: 1, scope: !11940, file: !1978, line: 897, type: !1982)
!11945 = !DILocalVariable(name: "options", arg: 2, scope: !11940, file: !1978, line: 897, type: !32)
!11946 = !DILocation(line: 0, scope: !11940)
!11947 = !DILocation(line: 902, column: 2, scope: !11940)
!11948 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1978, file: !1978, line: 1072, type: !11949, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11954)
!11949 = !DISubroutineType(types: !11950)
!11950 = !{!103, !1981, !11951}
!11951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11952, size: 32)
!11952 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !211, line: 234, baseType: !11953)
!11953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !211, line: 192, elements: !322)
!11954 = !{!11955, !11956}
!11955 = !DILocalVariable(name: "thread", arg: 1, scope: !11948, file: !1978, line: 1072, type: !1981)
!11956 = !DILocalVariable(name: "stats", arg: 2, scope: !11948, file: !1978, line: 1073, type: !11951)
!11957 = !DILocation(line: 0, scope: !11948)
!11958 = !DILocation(line: 1075, column: 14, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11948, file: !1978, line: 1075, column: 6)
!11960 = !DILocation(line: 1075, column: 23, scope: !11959)
!11961 = !DILocation(line: 1086, column: 1, scope: !11948)
!11962 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1978, file: !1978, line: 1088, type: !11963, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11965)
!11963 = !DISubroutineType(types: !11964)
!11964 = !{!103, !11951}
!11965 = !{!11966}
!11966 = !DILocalVariable(name: "stats", arg: 1, scope: !11962, file: !1978, line: 1088, type: !11951)
!11967 = !DILocation(line: 0, scope: !11962)
!11968 = !DILocation(line: 1094, column: 12, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11962, file: !1978, line: 1094, column: 6)
!11970 = !DILocation(line: 1120, column: 1, scope: !11962)
!11971 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11972, file: !11972, line: 20, type: !2821, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!11972 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11973 = !DILocation(line: 30, column: 2, scope: !11971)
!11974 = !DILocation(line: 31, column: 1, scope: !11971)
!11975 = distinct !DISubprogram(name: "idle", scope: !11972, file: !11972, line: 33, type: !3126, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !11976)
!11976 = !{!11977, !11978, !11979}
!11977 = !DILocalVariable(name: "unused1", arg: 1, scope: !11975, file: !11972, line: 33, type: !102)
!11978 = !DILocalVariable(name: "unused2", arg: 2, scope: !11975, file: !11972, line: 33, type: !102)
!11979 = !DILocalVariable(name: "unused3", arg: 3, scope: !11975, file: !11972, line: 33, type: !102)
!11980 = !DILocation(line: 0, scope: !11975)
!11981 = !DILocation(line: 41, column: 2, scope: !11975)
!11982 = !DILocation(line: 55, column: 2, scope: !11983, inlinedAt: !11987)
!11983 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4622, file: !4622, line: 42, type: !4623, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !11984)
!11984 = !{!11985, !11986}
!11985 = !DILocalVariable(name: "key", scope: !11983, file: !4622, line: 44, type: !32)
!11986 = !DILocalVariable(name: "tmp", scope: !11983, file: !4622, line: 53, type: !32)
!11987 = distinct !DILocation(line: 62, column: 10, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11975, file: !11972, line: 41, column: 15)
!11989 = !{i64 2278170}
!11990 = !DILocation(line: 0, scope: !11983, inlinedAt: !11987)
!11991 = !DILocation(line: 86, column: 3, scope: !11988)
!11992 = distinct !{!11992, !11981, !11993}
!11993 = !DILocation(line: 105, column: 2, scope: !11975)
!11994 = distinct !DISubprogram(name: "k_cpu_idle", scope: !307, file: !307, line: 5627, type: !2821, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!11995 = !DILocation(line: 5629, column: 2, scope: !11994)
!11996 = !DILocation(line: 5630, column: 1, scope: !11994)
!11997 = !DISubprogram(name: "arch_cpu_idle", scope: !3124, file: !3124, line: 167, type: !2821, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!11998 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2210, file: !2210, line: 93, type: !11999, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12001)
!11999 = !DISubroutineType(types: !12000)
!12000 = !{!595, !2105, !2105}
!12001 = !{!12002, !12003, !12004, !12005}
!12002 = !DILocalVariable(name: "thread_1", arg: 1, scope: !11998, file: !2210, line: 93, type: !2105)
!12003 = !DILocalVariable(name: "thread_2", arg: 2, scope: !11998, file: !2210, line: 94, type: !2105)
!12004 = !DILocalVariable(name: "b1", scope: !11998, file: !2210, line: 97, type: !595)
!12005 = !DILocalVariable(name: "b2", scope: !11998, file: !2210, line: 98, type: !595)
!12006 = !DILocation(line: 0, scope: !11998)
!12007 = !DILocation(line: 97, column: 30, scope: !11998)
!12008 = !DILocation(line: 98, column: 30, scope: !11998)
!12009 = !DILocation(line: 100, column: 9, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !11998, file: !2210, line: 100, column: 6)
!12011 = !DILocation(line: 100, column: 6, scope: !11998)
!12012 = !DILocation(line: 125, column: 1, scope: !11998)
!12013 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2210, file: !2210, line: 428, type: !12014, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12016)
!12014 = !DISubroutineType(types: !12015)
!12015 = !{null, !2105}
!12016 = !{!12017}
!12017 = !DILocalVariable(name: "curr", arg: 1, scope: !12013, file: !2210, line: 428, type: !2105)
!12018 = !DILocation(line: 0, scope: !12013)
!12019 = !DILocation(line: 434, column: 6, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12013, file: !2210, line: 434, column: 6)
!12021 = !DILocation(line: 434, column: 23, scope: !12020)
!12022 = !DILocation(line: 434, column: 6, scope: !12013)
!12023 = !DILocation(line: 435, column: 50, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12020, file: !2210, line: 434, column: 29)
!12025 = !DILocation(line: 435, column: 48, scope: !12024)
!12026 = !DILocation(line: 435, column: 29, scope: !12024)
!12027 = !DILocation(line: 436, column: 24, scope: !12024)
!12028 = !DILocation(line: 436, column: 3, scope: !12024)
!12029 = !DILocation(line: 437, column: 2, scope: !12024)
!12030 = !DILocation(line: 438, column: 1, scope: !12013)
!12031 = distinct !DISubprogram(name: "slice_time", scope: !2210, file: !2210, line: 407, type: !12032, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12034)
!12032 = !DISubroutineType(types: !12033)
!12033 = !{!103, !2105}
!12034 = !{!12035, !12036}
!12035 = !DILocalVariable(name: "curr", arg: 1, scope: !12031, file: !2210, line: 407, type: !2105)
!12036 = !DILocalVariable(name: "ret", scope: !12031, file: !2210, line: 409, type: !103)
!12037 = !DILocation(line: 0, scope: !12031)
!12038 = !DILocation(line: 409, column: 12, scope: !12031)
!12039 = !DILocation(line: 416, column: 2, scope: !12031)
!12040 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2210, file: !2210, line: 440, type: !12041, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12043)
!12041 = !DISubroutineType(types: !12042)
!12042 = !{null, !595, !103}
!12043 = !{!12044, !12045, !12046, !12052}
!12044 = !DILocalVariable(name: "slice", arg: 1, scope: !12040, file: !2210, line: 440, type: !595)
!12045 = !DILocalVariable(name: "prio", arg: 2, scope: !12040, file: !2210, line: 440, type: !103)
!12046 = !DILocalVariable(name: "__i", scope: !12047, file: !2210, line: 442, type: !12048)
!12047 = distinct !DILexicalBlock(scope: !12040, file: !2210, line: 442, column: 2)
!12048 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !12049)
!12049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !12050)
!12050 = !{!12051}
!12051 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12049, file: !321, line: 33, baseType: !103, size: 32)
!12052 = !DILocalVariable(name: "__key", scope: !12047, file: !2210, line: 442, type: !12048)
!12053 = !DILocation(line: 0, scope: !12040)
!12054 = !DILocation(line: 0, scope: !12047)
!12055 = !DILocalVariable(name: "l", arg: 1, scope: !12056, file: !321, line: 136, type: !12059)
!12056 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !12057, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12060)
!12057 = !DISubroutineType(types: !12058)
!12058 = !{!12048, !12059}
!12059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!12060 = !{!12055, !12061}
!12061 = !DILocalVariable(name: "k", scope: !12056, file: !321, line: 139, type: !12048)
!12062 = !DILocation(line: 0, scope: !12056, inlinedAt: !12063)
!12063 = distinct !DILocation(line: 442, column: 2, scope: !12047)
!12064 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !12069)
!12065 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4622, file: !4622, line: 42, type: !4623, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12066)
!12066 = !{!12067, !12068}
!12067 = !DILocalVariable(name: "key", scope: !12065, file: !4622, line: 44, type: !32)
!12068 = !DILocalVariable(name: "tmp", scope: !12065, file: !4622, line: 53, type: !32)
!12069 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !12063)
!12070 = !{i64 2322141}
!12071 = !DILocation(line: 0, scope: !12065, inlinedAt: !12069)
!12072 = !DILocation(line: 443, column: 29, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12074, file: !2210, line: 442, column: 26)
!12074 = distinct !DILexicalBlock(scope: !12047, file: !2210, line: 442, column: 2)
!12075 = !DILocation(line: 444, column: 17, scope: !12073)
!12076 = !DILocation(line: 445, column: 51, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12073, file: !2210, line: 445, column: 7)
!12078 = !DILocation(line: 445, column: 7, scope: !12073)
!12079 = !DILocation(line: 0, scope: !12073)
!12080 = !DILocation(line: 451, column: 18, scope: !12073)
!12081 = !DILocation(line: 452, column: 3, scope: !12073)
!12082 = !DILocalVariable(name: "key", arg: 2, scope: !12083, file: !321, line: 190, type: !12048)
!12083 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !12084, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12086)
!12084 = !DISubroutineType(types: !12085)
!12085 = !{null, !12059, !12048}
!12086 = !{!12087, !12082}
!12087 = !DILocalVariable(name: "l", arg: 1, scope: !12083, file: !321, line: 189, type: !12059)
!12088 = !DILocation(line: 0, scope: !12083, inlinedAt: !12089)
!12089 = distinct !DILocation(line: 442, column: 2, scope: !12074)
!12090 = !DILocalVariable(name: "key", arg: 1, scope: !12091, file: !4622, line: 84, type: !32)
!12091 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4622, file: !4622, line: 84, type: !4633, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12092)
!12092 = !{!12090}
!12093 = !DILocation(line: 0, scope: !12091, inlinedAt: !12094)
!12094 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !12089)
!12095 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12094)
!12096 = !{i64 2322958}
!12097 = !DILocation(line: 454, column: 1, scope: !12040)
!12098 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !11889, file: !11889, line: 389, type: !5804, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12099)
!12099 = !{!12100}
!12100 = !DILocalVariable(name: "t", arg: 1, scope: !12098, file: !11889, line: 389, type: !121)
!12101 = !DILocation(line: 0, scope: !12098)
!12102 = !DILocalVariable(name: "t", arg: 1, scope: !12103, file: !11889, line: 102, type: !1308)
!12103 = distinct !DISubprogram(name: "z_tmcvt", scope: !11889, file: !11889, line: 102, type: !11897, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12104)
!12104 = !{!12102, !12105, !12106, !12107, !12108, !12109, !12110, !12111, !12112, !12113, !12114}
!12105 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12103, file: !11889, line: 102, type: !121)
!12106 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12103, file: !11889, line: 103, type: !121)
!12107 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12103, file: !11889, line: 103, type: !157)
!12108 = !DILocalVariable(name: "result32", arg: 5, scope: !12103, file: !11889, line: 104, type: !157)
!12109 = !DILocalVariable(name: "round_up", arg: 6, scope: !12103, file: !11889, line: 104, type: !157)
!12110 = !DILocalVariable(name: "round_off", arg: 7, scope: !12103, file: !11889, line: 105, type: !157)
!12111 = !DILocalVariable(name: "mul_ratio", scope: !12103, file: !11889, line: 107, type: !157)
!12112 = !DILocalVariable(name: "div_ratio", scope: !12103, file: !11889, line: 109, type: !157)
!12113 = !DILocalVariable(name: "off", scope: !12103, file: !11889, line: 116, type: !1308)
!12114 = !DILocalVariable(name: "rdivisor", scope: !12115, file: !11889, line: 119, type: !121)
!12115 = distinct !DILexicalBlock(scope: !12116, file: !11889, line: 118, column: 18)
!12116 = distinct !DILexicalBlock(scope: !12103, file: !11889, line: 118, column: 6)
!12117 = !DILocation(line: 0, scope: !12103, inlinedAt: !12118)
!12118 = distinct !DILocation(line: 392, column: 9, scope: !12098)
!12119 = !DILocation(line: 143, column: 25, scope: !12120, inlinedAt: !12118)
!12120 = distinct !DILexicalBlock(scope: !12121, file: !11889, line: 142, column: 17)
!12121 = distinct !DILexicalBlock(scope: !12122, file: !11889, line: 142, column: 7)
!12122 = distinct !DILexicalBlock(scope: !12123, file: !11889, line: 141, column: 24)
!12123 = distinct !DILexicalBlock(scope: !12124, file: !11889, line: 141, column: 13)
!12124 = distinct !DILexicalBlock(scope: !12103, file: !11889, line: 134, column: 6)
!12125 = !DILocation(line: 392, column: 2, scope: !12098)
!12126 = distinct !DISubprogram(name: "z_time_slice", scope: !2210, file: !2210, line: 502, type: !6441, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12127)
!12127 = !{!12128, !12129}
!12128 = !DILocalVariable(name: "ticks", arg: 1, scope: !12126, file: !2210, line: 502, type: !103)
!12129 = !DILocalVariable(name: "key", scope: !12126, file: !2210, line: 511, type: !12048)
!12130 = !DILocation(line: 0, scope: !12126)
!12131 = !DILocation(line: 0, scope: !12056, inlinedAt: !12132)
!12132 = distinct !DILocation(line: 511, column: 25, scope: !12126)
!12133 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !12134)
!12134 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !12132)
!12135 = !DILocation(line: 0, scope: !12065, inlinedAt: !12134)
!12136 = !DILocation(line: 514, column: 6, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12126, file: !2210, line: 514, column: 6)
!12138 = !DILocation(line: 514, column: 25, scope: !12137)
!12139 = !DILocation(line: 514, column: 22, scope: !12137)
!12140 = !DILocation(line: 514, column: 6, scope: !12126)
!12141 = !DILocation(line: 515, column: 3, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12137, file: !2210, line: 514, column: 35)
!12143 = !DILocation(line: 0, scope: !12083, inlinedAt: !12144)
!12144 = distinct !DILocation(line: 516, column: 3, scope: !12142)
!12145 = !DILocation(line: 0, scope: !12091, inlinedAt: !12146)
!12146 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !12144)
!12147 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12146)
!12148 = !DILocation(line: 517, column: 3, scope: !12142)
!12149 = !DILocation(line: 519, column: 18, scope: !12126)
!12150 = !DILocation(line: 522, column: 6, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12126, file: !2210, line: 522, column: 6)
!12152 = !DILocation(line: 522, column: 27, scope: !12151)
!12153 = !DILocation(line: 522, column: 30, scope: !12151)
!12154 = !DILocation(line: 522, column: 6, scope: !12126)
!12155 = !DILocation(line: 523, column: 30, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12157, file: !2210, line: 523, column: 7)
!12157 = distinct !DILexicalBlock(scope: !12151, file: !2210, line: 522, column: 51)
!12158 = !DILocation(line: 523, column: 13, scope: !12156)
!12159 = !DILocation(line: 523, column: 7, scope: !12157)
!12160 = !DILocation(line: 530, column: 10, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12156, file: !2210, line: 523, column: 43)
!12162 = !DILocation(line: 531, column: 3, scope: !12161)
!12163 = !DILocation(line: 532, column: 30, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12156, file: !2210, line: 531, column: 10)
!12165 = !DILocation(line: 535, column: 29, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12151, file: !2210, line: 534, column: 9)
!12167 = !DILocation(line: 0, scope: !12083, inlinedAt: !12168)
!12168 = distinct !DILocation(line: 537, column: 2, scope: !12126)
!12169 = !DILocation(line: 0, scope: !12091, inlinedAt: !12170)
!12170 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !12168)
!12171 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12170)
!12172 = !DILocation(line: 538, column: 1, scope: !12126)
!12173 = distinct !DISubprogram(name: "sliceable", scope: !2210, file: !2210, line: 468, type: !12174, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12176)
!12174 = !DISubroutineType(types: !12175)
!12175 = !{!157, !2105}
!12176 = !{!12177, !12178}
!12177 = !DILocalVariable(name: "thread", arg: 1, scope: !12173, file: !2210, line: 468, type: !2105)
!12178 = !DILocalVariable(name: "ret", scope: !12173, file: !2210, line: 470, type: !157)
!12179 = !DILocation(line: 0, scope: !12173)
!12180 = !DILocation(line: 470, column: 13, scope: !12173)
!12181 = !DILocation(line: 471, column: 3, scope: !12173)
!12182 = !DILocation(line: 471, column: 7, scope: !12173)
!12183 = !DILocation(line: 472, column: 3, scope: !12173)
!12184 = !DILocation(line: 472, column: 37, scope: !12173)
!12185 = !DILocation(line: 472, column: 24, scope: !12173)
!12186 = !DILocation(line: 472, column: 43, scope: !12173)
!12187 = !DILocation(line: 472, column: 7, scope: !12173)
!12188 = !DILocation(line: 473, column: 3, scope: !12173)
!12189 = !DILocation(line: 473, column: 7, scope: !12173)
!12190 = !DILocation(line: 473, column: 6, scope: !12173)
!12191 = !DILocation(line: 479, column: 2, scope: !12173)
!12192 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2210, file: !2210, line: 482, type: !12193, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12195)
!12193 = !DISubroutineType(types: !12194)
!12194 = !{!12048, !12048}
!12195 = !{!12196, !12197}
!12196 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12192, file: !2210, line: 482, type: !12048)
!12197 = !DILocalVariable(name: "curr", scope: !12192, file: !2210, line: 484, type: !2105)
!12198 = !DILocation(line: 0, scope: !12192)
!12199 = !DILocation(line: 484, column: 26, scope: !12192)
!12200 = !DILocation(line: 493, column: 7, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12192, file: !2210, line: 493, column: 6)
!12202 = !DILocation(line: 493, column: 6, scope: !12192)
!12203 = !DILocation(line: 494, column: 3, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12201, file: !2210, line: 493, column: 49)
!12205 = !DILocation(line: 495, column: 2, scope: !12204)
!12206 = !DILocation(line: 496, column: 2, scope: !12192)
!12207 = !DILocation(line: 499, column: 1, scope: !12192)
!12208 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11328, file: !11328, line: 106, type: !12174, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12209)
!12209 = !{!12210, !12211}
!12210 = !DILocalVariable(name: "thread", arg: 1, scope: !12208, file: !11328, line: 106, type: !2105)
!12211 = !DILocalVariable(name: "state", scope: !12208, file: !11328, line: 108, type: !154)
!12212 = !DILocation(line: 0, scope: !12208)
!12213 = !DILocation(line: 108, column: 31, scope: !12208)
!12214 = !DILocation(line: 110, column: 16, scope: !12208)
!12215 = !DILocation(line: 111, column: 41, scope: !12208)
!12216 = !DILocation(line: 110, column: 2, scope: !12208)
!12217 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2210, file: !2210, line: 393, type: !12014, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12218)
!12218 = !{!12219}
!12219 = !DILocalVariable(name: "thread", arg: 1, scope: !12217, file: !2210, line: 393, type: !2105)
!12220 = !DILocation(line: 0, scope: !12217)
!12221 = !DILocation(line: 395, column: 6, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12217, file: !2210, line: 395, column: 6)
!12223 = !DILocation(line: 395, column: 6, scope: !12217)
!12224 = !DILocalVariable(name: "thread", arg: 1, scope: !12225, file: !2210, line: 264, type: !2105)
!12225 = distinct !DISubprogram(name: "dequeue_thread", scope: !2210, file: !2210, line: 264, type: !12014, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12226)
!12226 = !{!12224}
!12227 = !DILocation(line: 0, scope: !12225, inlinedAt: !12228)
!12228 = distinct !DILocation(line: 396, column: 3, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12222, file: !2210, line: 395, column: 34)
!12230 = !DILocation(line: 266, column: 15, scope: !12225, inlinedAt: !12228)
!12231 = !DILocation(line: 266, column: 28, scope: !12225, inlinedAt: !12228)
!12232 = !DILocalVariable(name: "thread", arg: 1, scope: !12233, file: !2210, line: 232, type: !2105)
!12233 = distinct !DISubprogram(name: "runq_remove", scope: !2210, file: !2210, line: 232, type: !12014, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12234)
!12234 = !{!12232}
!12235 = !DILocation(line: 0, scope: !12233, inlinedAt: !12236)
!12236 = distinct !DILocation(line: 268, column: 3, scope: !12237, inlinedAt: !12228)
!12237 = distinct !DILexicalBlock(scope: !12238, file: !2210, line: 267, column: 35)
!12238 = distinct !DILexicalBlock(scope: !12225, file: !2210, line: 267, column: 6)
!12239 = !DILocation(line: 234, column: 2, scope: !12233, inlinedAt: !12236)
!12240 = !DILocation(line: 397, column: 2, scope: !12229)
!12241 = !DILocalVariable(name: "thread", arg: 1, scope: !12242, file: !2210, line: 250, type: !2105)
!12242 = distinct !DISubprogram(name: "queue_thread", scope: !2210, file: !2210, line: 250, type: !12014, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12243)
!12243 = !{!12241}
!12244 = !DILocation(line: 0, scope: !12242, inlinedAt: !12245)
!12245 = distinct !DILocation(line: 398, column: 2, scope: !12217)
!12246 = !DILocation(line: 252, column: 15, scope: !12242, inlinedAt: !12245)
!12247 = !DILocation(line: 252, column: 28, scope: !12242, inlinedAt: !12245)
!12248 = !DILocalVariable(name: "thread", arg: 1, scope: !12249, file: !2210, line: 227, type: !2105)
!12249 = distinct !DISubprogram(name: "runq_add", scope: !2210, file: !2210, line: 227, type: !12014, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12250)
!12250 = !{!12248}
!12251 = !DILocation(line: 0, scope: !12249, inlinedAt: !12252)
!12252 = distinct !DILocation(line: 254, column: 3, scope: !12253, inlinedAt: !12245)
!12253 = distinct !DILexicalBlock(scope: !12254, file: !2210, line: 253, column: 35)
!12254 = distinct !DILexicalBlock(scope: !12242, file: !2210, line: 253, column: 6)
!12255 = !DILocalVariable(name: "pq", arg: 1, scope: !12256, file: !2210, line: 181, type: !12259)
!12256 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2210, file: !2210, line: 181, type: !12257, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12260)
!12257 = !DISubroutineType(types: !12258)
!12258 = !{null, !12259, !2105}
!12259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!12260 = !{!12255, !12261, !12262}
!12261 = !DILocalVariable(name: "thread", arg: 2, scope: !12256, file: !2210, line: 182, type: !2105)
!12262 = !DILocalVariable(name: "t", scope: !12256, file: !2210, line: 184, type: !2105)
!12263 = !DILocation(line: 0, scope: !12256, inlinedAt: !12264)
!12264 = distinct !DILocation(line: 229, column: 2, scope: !12249, inlinedAt: !12252)
!12265 = !DILocation(line: 188, column: 2, scope: !12266, inlinedAt: !12264)
!12266 = distinct !DILexicalBlock(scope: !12256, file: !2210, line: 188, column: 2)
!12267 = !DILocation(line: 188, column: 2, scope: !12268, inlinedAt: !12264)
!12268 = distinct !DILexicalBlock(scope: !12266, file: !2210, line: 188, column: 2)
!12269 = !DILocation(line: 0, scope: !12266, inlinedAt: !12264)
!12270 = !DILocation(line: 189, column: 7, scope: !12271, inlinedAt: !12264)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !2210, line: 189, column: 7)
!12272 = distinct !DILexicalBlock(scope: !12268, file: !2210, line: 188, column: 56)
!12273 = !DILocation(line: 189, column: 35, scope: !12271, inlinedAt: !12264)
!12274 = !DILocation(line: 189, column: 7, scope: !12272, inlinedAt: !12264)
!12275 = !DILocation(line: 191, column: 21, scope: !12276, inlinedAt: !12264)
!12276 = distinct !DILexicalBlock(scope: !12271, file: !2210, line: 189, column: 40)
!12277 = !DILocation(line: 190, column: 4, scope: !12276, inlinedAt: !12264)
!12278 = !DILocation(line: 192, column: 4, scope: !12276, inlinedAt: !12264)
!12279 = distinct !{!12279, !12265, !12280}
!12280 = !DILocation(line: 194, column: 2, scope: !12266, inlinedAt: !12264)
!12281 = !DILocation(line: 196, column: 37, scope: !12256, inlinedAt: !12264)
!12282 = !DILocation(line: 196, column: 2, scope: !12256, inlinedAt: !12264)
!12283 = !DILocation(line: 197, column: 1, scope: !12256, inlinedAt: !12264)
!12284 = !DILocation(line: 399, column: 25, scope: !12217)
!12285 = !DILocation(line: 399, column: 22, scope: !12217)
!12286 = !DILocation(line: 399, column: 2, scope: !12217)
!12287 = !DILocation(line: 400, column: 1, scope: !12217)
!12288 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11328, file: !11328, line: 136, type: !12174, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12289)
!12289 = !{!12290}
!12290 = !DILocalVariable(name: "thread", arg: 1, scope: !12288, file: !11328, line: 136, type: !2105)
!12291 = !DILocation(line: 0, scope: !12288)
!12292 = !DILocation(line: 138, column: 9, scope: !12288)
!12293 = !DILocation(line: 138, column: 2, scope: !12288)
!12294 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2210, file: !2210, line: 1137, type: !12257, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12295)
!12295 = !{!12296, !12297}
!12296 = !DILocalVariable(name: "pq", arg: 1, scope: !12294, file: !2210, line: 1137, type: !12259)
!12297 = !DILocalVariable(name: "thread", arg: 2, scope: !12294, file: !2210, line: 1137, type: !2105)
!12298 = !DILocation(line: 0, scope: !12294)
!12299 = !DILocation(line: 1141, column: 33, scope: !12294)
!12300 = !DILocation(line: 1141, column: 2, scope: !12294)
!12301 = !DILocation(line: 1142, column: 1, scope: !12294)
!12302 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !12303, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12305)
!12303 = !DISubroutineType(types: !12304)
!12304 = !{!2206, !12259}
!12305 = !{!12306}
!12306 = !DILocalVariable(name: "list", arg: 1, scope: !12302, file: !221, line: 294, type: !12259)
!12307 = !DILocation(line: 0, scope: !12302)
!12308 = !DILocation(line: 296, column: 9, scope: !12302)
!12309 = !DILocation(line: 296, column: 49, scope: !12302)
!12310 = !DILocation(line: 296, column: 2, scope: !12302)
!12311 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !12312, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12314)
!12312 = !DISubroutineType(types: !12313)
!12313 = !{null, !2206, !2206}
!12314 = !{!12315, !12316, !12317}
!12315 = !DILocalVariable(name: "successor", arg: 1, scope: !12311, file: !221, line: 443, type: !2206)
!12316 = !DILocalVariable(name: "node", arg: 2, scope: !12311, file: !221, line: 443, type: !2206)
!12317 = !DILocalVariable(name: "prev", scope: !12311, file: !221, line: 445, type: !12318)
!12318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2206)
!12319 = !DILocation(line: 0, scope: !12311)
!12320 = !DILocation(line: 445, column: 39, scope: !12311)
!12321 = !DILocation(line: 447, column: 8, scope: !12311)
!12322 = !DILocation(line: 447, column: 13, scope: !12311)
!12323 = !DILocation(line: 448, column: 8, scope: !12311)
!12324 = !DILocation(line: 448, column: 13, scope: !12311)
!12325 = !DILocation(line: 449, column: 8, scope: !12311)
!12326 = !DILocation(line: 449, column: 13, scope: !12311)
!12327 = !DILocation(line: 450, column: 18, scope: !12311)
!12328 = !DILocation(line: 451, column: 1, scope: !12311)
!12329 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !12330, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12332)
!12330 = !DISubroutineType(types: !12331)
!12331 = !{!2206, !12259, !2206}
!12332 = !{!12333, !12334}
!12333 = !DILocalVariable(name: "list", arg: 1, scope: !12329, file: !221, line: 341, type: !12259)
!12334 = !DILocalVariable(name: "node", arg: 2, scope: !12329, file: !221, line: 342, type: !2206)
!12335 = !DILocation(line: 0, scope: !12329)
!12336 = !DILocation(line: 344, column: 15, scope: !12329)
!12337 = !DILocation(line: 344, column: 9, scope: !12329)
!12338 = !DILocation(line: 344, column: 26, scope: !12329)
!12339 = !DILocation(line: 344, column: 2, scope: !12329)
!12340 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !12341, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12343)
!12341 = !DISubroutineType(types: !12342)
!12342 = !{null, !12259, !2206}
!12343 = !{!12344, !12345, !12346}
!12344 = !DILocalVariable(name: "list", arg: 1, scope: !12340, file: !221, line: 404, type: !12259)
!12345 = !DILocalVariable(name: "node", arg: 2, scope: !12340, file: !221, line: 404, type: !2206)
!12346 = !DILocalVariable(name: "tail", scope: !12340, file: !221, line: 406, type: !12318)
!12347 = !DILocation(line: 0, scope: !12340)
!12348 = !DILocation(line: 406, column: 34, scope: !12340)
!12349 = !DILocation(line: 408, column: 8, scope: !12340)
!12350 = !DILocation(line: 408, column: 13, scope: !12340)
!12351 = !DILocation(line: 409, column: 8, scope: !12340)
!12352 = !DILocation(line: 409, column: 13, scope: !12340)
!12353 = !DILocation(line: 411, column: 8, scope: !12340)
!12354 = !DILocation(line: 411, column: 13, scope: !12340)
!12355 = !DILocation(line: 412, column: 13, scope: !12340)
!12356 = !DILocation(line: 413, column: 1, scope: !12340)
!12357 = distinct !DISubprogram(name: "update_cache", scope: !2210, file: !2210, line: 559, type: !6441, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12358)
!12358 = !{!12359, !12360}
!12359 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12357, file: !2210, line: 559, type: !103)
!12360 = !DILocalVariable(name: "thread", scope: !12357, file: !2210, line: 562, type: !2105)
!12361 = !DILocation(line: 0, scope: !12357)
!12362 = !DILocation(line: 239, column: 9, scope: !12363, inlinedAt: !12366)
!12363 = distinct !DISubprogram(name: "runq_best", scope: !2210, file: !2210, line: 237, type: !12364, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!12364 = !DISubroutineType(types: !12365)
!12365 = !{!2105}
!12366 = distinct !DILocation(line: 314, column: 28, scope: !12367, inlinedAt: !12370)
!12367 = distinct !DISubprogram(name: "next_up", scope: !2210, file: !2210, line: 312, type: !12364, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12368)
!12368 = !{!12369}
!12369 = !DILocalVariable(name: "thread", scope: !12367, file: !2210, line: 314, type: !2105)
!12370 = distinct !DILocation(line: 562, column: 28, scope: !12357)
!12371 = !DILocation(line: 0, scope: !12367, inlinedAt: !12370)
!12372 = !DILocation(line: 340, column: 17, scope: !12367, inlinedAt: !12370)
!12373 = !DILocation(line: 340, column: 9, scope: !12367, inlinedAt: !12370)
!12374 = !DILocalVariable(name: "thread", arg: 1, scope: !12375, file: !2210, line: 127, type: !2105)
!12375 = distinct !DISubprogram(name: "should_preempt", scope: !2210, file: !2210, line: 127, type: !12376, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12378)
!12376 = !DISubroutineType(types: !12377)
!12377 = !{!157, !2105, !103}
!12378 = !{!12374, !12379}
!12379 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12375, file: !2210, line: 128, type: !103)
!12380 = !DILocation(line: 0, scope: !12375, inlinedAt: !12381)
!12381 = distinct !DILocation(line: 564, column: 6, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12357, file: !2210, line: 564, column: 6)
!12383 = !DILocation(line: 133, column: 17, scope: !12384, inlinedAt: !12381)
!12384 = distinct !DILexicalBlock(scope: !12375, file: !2210, line: 133, column: 6)
!12385 = !DILocation(line: 0, scope: !12382)
!12386 = !DILocation(line: 133, column: 6, scope: !12375, inlinedAt: !12381)
!12387 = !DILocation(line: 140, column: 6, scope: !12388, inlinedAt: !12381)
!12388 = distinct !DILexicalBlock(scope: !12375, file: !2210, line: 140, column: 6)
!12389 = !DILocation(line: 140, column: 6, scope: !12375, inlinedAt: !12381)
!12390 = !DILocation(line: 150, column: 9, scope: !12391, inlinedAt: !12381)
!12391 = distinct !DILexicalBlock(scope: !12375, file: !2210, line: 149, column: 6)
!12392 = !DILocation(line: 149, column: 6, scope: !12375, inlinedAt: !12381)
!12393 = !DILocation(line: 157, column: 6, scope: !12394, inlinedAt: !12381)
!12394 = distinct !DILexicalBlock(scope: !12375, file: !2210, line: 157, column: 6)
!12395 = !DILocation(line: 564, column: 6, scope: !12357)
!12396 = !DILocation(line: 566, column: 14, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12398, file: !2210, line: 566, column: 7)
!12398 = distinct !DILexicalBlock(scope: !12382, file: !2210, line: 564, column: 42)
!12399 = !DILocation(line: 566, column: 7, scope: !12398)
!12400 = !DILocation(line: 567, column: 4, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12397, file: !2210, line: 566, column: 27)
!12402 = !DILocation(line: 568, column: 3, scope: !12401)
!12403 = !DILocation(line: 585, column: 1, scope: !12357)
!12404 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2210, file: !2210, line: 1144, type: !12405, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12407)
!12405 = !DISubroutineType(types: !12406)
!12406 = !{!2105, !12259}
!12407 = !{!12408, !12409, !12410}
!12408 = !DILocalVariable(name: "pq", arg: 1, scope: !12404, file: !2210, line: 1144, type: !12259)
!12409 = !DILocalVariable(name: "thread", scope: !12404, file: !2210, line: 1146, type: !2105)
!12410 = !DILocalVariable(name: "n", scope: !12404, file: !2210, line: 1147, type: !2206)
!12411 = !DILocation(line: 0, scope: !12404)
!12412 = !DILocation(line: 1147, column: 19, scope: !12404)
!12413 = !DILocation(line: 1152, column: 2, scope: !12404)
!12414 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11328, file: !11328, line: 115, type: !12174, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12415)
!12415 = !{!12416}
!12416 = !DILocalVariable(name: "thread", arg: 1, scope: !12414, file: !11328, line: 115, type: !2105)
!12417 = !DILocation(line: 0, scope: !12414)
!12418 = !DILocation(line: 117, column: 46, scope: !12414)
!12419 = !DILocation(line: 117, column: 10, scope: !12414)
!12420 = !DILocation(line: 117, column: 9, scope: !12414)
!12421 = !DILocation(line: 117, column: 2, scope: !12414)
!12422 = distinct !DISubprogram(name: "is_preempt", scope: !2210, file: !2210, line: 62, type: !12032, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12423)
!12423 = !{!12424}
!12424 = !DILocalVariable(name: "thread", arg: 1, scope: !12422, file: !2210, line: 62, type: !2105)
!12425 = !DILocation(line: 0, scope: !12422)
!12426 = !DILocation(line: 65, column: 22, scope: !12422)
!12427 = !DILocation(line: 65, column: 30, scope: !12422)
!12428 = !DILocation(line: 65, column: 2, scope: !12422)
!12429 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11722, file: !11722, line: 35, type: !12430, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12434)
!12430 = !DISubroutineType(types: !12431)
!12431 = !{!157, !12432}
!12432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12433, size: 32)
!12433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2156)
!12434 = !{!12435}
!12435 = !DILocalVariable(name: "to", arg: 1, scope: !12429, file: !11722, line: 35, type: !12432)
!12436 = !DILocation(line: 0, scope: !12429)
!12437 = !DILocation(line: 37, column: 35, scope: !12429)
!12438 = !DILocation(line: 37, column: 10, scope: !12429)
!12439 = !DILocation(line: 37, column: 9, scope: !12429)
!12440 = !DILocation(line: 37, column: 2, scope: !12429)
!12441 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !12442, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12446)
!12442 = !DISubroutineType(types: !12443)
!12443 = !{!157, !12444}
!12444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12445, size: 32)
!12445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2115)
!12446 = !{!12447}
!12447 = !DILocalVariable(name: "node", arg: 1, scope: !12441, file: !221, line: 225, type: !12444)
!12448 = !DILocation(line: 0, scope: !12441)
!12449 = !DILocation(line: 227, column: 15, scope: !12441)
!12450 = !DILocation(line: 227, column: 20, scope: !12441)
!12451 = !DILocation(line: 227, column: 2, scope: !12441)
!12452 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !12330, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12453)
!12453 = !{!12454, !12455}
!12454 = !DILocalVariable(name: "list", arg: 1, scope: !12452, file: !221, line: 325, type: !12259)
!12455 = !DILocalVariable(name: "node", arg: 2, scope: !12452, file: !221, line: 326, type: !2206)
!12456 = !DILocation(line: 0, scope: !12452)
!12457 = !DILocation(line: 328, column: 24, scope: !12452)
!12458 = !DILocation(line: 328, column: 15, scope: !12452)
!12459 = !DILocation(line: 328, column: 9, scope: !12452)
!12460 = !DILocation(line: 328, column: 45, scope: !12452)
!12461 = !DILocation(line: 328, column: 2, scope: !12452)
!12462 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !12463, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12465)
!12463 = !DISubroutineType(types: !12464)
!12464 = !{!157, !12259}
!12465 = !{!12466}
!12466 = !DILocalVariable(name: "list", arg: 1, scope: !12462, file: !221, line: 266, type: !12259)
!12467 = !DILocation(line: 0, scope: !12462)
!12468 = !DILocation(line: 268, column: 15, scope: !12462)
!12469 = !DILocation(line: 268, column: 20, scope: !12462)
!12470 = !DILocation(line: 268, column: 2, scope: !12462)
!12471 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !12472, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12474)
!12472 = !DISubroutineType(types: !12473)
!12473 = !{null, !2206}
!12474 = !{!12475, !12476, !12477}
!12475 = !DILocalVariable(name: "node", arg: 1, scope: !12471, file: !221, line: 496, type: !2206)
!12476 = !DILocalVariable(name: "prev", scope: !12471, file: !221, line: 498, type: !12318)
!12477 = !DILocalVariable(name: "next", scope: !12471, file: !221, line: 499, type: !12318)
!12478 = !DILocation(line: 0, scope: !12471)
!12479 = !DILocation(line: 498, column: 34, scope: !12471)
!12480 = !DILocation(line: 499, column: 34, scope: !12471)
!12481 = !DILocation(line: 501, column: 8, scope: !12471)
!12482 = !DILocation(line: 501, column: 13, scope: !12471)
!12483 = !DILocation(line: 502, column: 8, scope: !12471)
!12484 = !DILocation(line: 502, column: 13, scope: !12471)
!12485 = !DILocation(line: 503, column: 2, scope: !12471)
!12486 = !DILocation(line: 504, column: 1, scope: !12471)
!12487 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !12472, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12488)
!12488 = !{!12489}
!12489 = !DILocalVariable(name: "node", arg: 1, scope: !12487, file: !221, line: 211, type: !2206)
!12490 = !DILocation(line: 0, scope: !12487)
!12491 = !DILocation(line: 213, column: 8, scope: !12487)
!12492 = !DILocation(line: 213, column: 13, scope: !12487)
!12493 = !DILocation(line: 214, column: 8, scope: !12487)
!12494 = !DILocation(line: 214, column: 13, scope: !12487)
!12495 = !DILocation(line: 215, column: 1, scope: !12487)
!12496 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11328, file: !11328, line: 131, type: !12497, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12499)
!12497 = !DISubroutineType(types: !12498)
!12498 = !{!157, !2105, !121}
!12499 = !{!12500, !12501}
!12500 = !DILocalVariable(name: "thread", arg: 1, scope: !12496, file: !11328, line: 131, type: !2105)
!12501 = !DILocalVariable(name: "state", arg: 2, scope: !12496, file: !11328, line: 131, type: !121)
!12502 = !DILocation(line: 0, scope: !12496)
!12503 = !DILocation(line: 133, column: 23, scope: !12496)
!12504 = !DILocation(line: 133, column: 45, scope: !12496)
!12505 = !DILocation(line: 133, column: 2, scope: !12496)
!12506 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11328, file: !11328, line: 211, type: !12507, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12509)
!12507 = !DISubroutineType(types: !12508)
!12508 = !{!157, !103, !103}
!12509 = !{!12510, !12511}
!12510 = !DILocalVariable(name: "prio", arg: 1, scope: !12506, file: !11328, line: 211, type: !103)
!12511 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12506, file: !11328, line: 211, type: !103)
!12512 = !DILocation(line: 0, scope: !12506)
!12513 = !DILocation(line: 213, column: 9, scope: !12506)
!12514 = !DILocation(line: 213, column: 2, scope: !12506)
!12515 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11328, file: !11328, line: 83, type: !12174, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12516)
!12516 = !{!12517}
!12517 = !DILocalVariable(name: "thread", arg: 1, scope: !12515, file: !11328, line: 83, type: !2105)
!12518 = !DILocation(line: 0, scope: !12515)
!12519 = !DILocation(line: 89, column: 16, scope: !12515)
!12520 = !DILocation(line: 89, column: 2, scope: !12515)
!12521 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11328, file: !11328, line: 206, type: !12507, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12522)
!12522 = !{!12523, !12524}
!12523 = !DILocalVariable(name: "prio1", arg: 1, scope: !12521, file: !11328, line: 206, type: !103)
!12524 = !DILocalVariable(name: "prio2", arg: 2, scope: !12521, file: !11328, line: 206, type: !103)
!12525 = !DILocation(line: 0, scope: !12521)
!12526 = !DILocation(line: 208, column: 15, scope: !12521)
!12527 = !DILocation(line: 208, column: 2, scope: !12521)
!12528 = distinct !DISubprogram(name: "z_ready_thread", scope: !2210, file: !2210, line: 635, type: !12014, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12529)
!12529 = !{!12530, !12531, !12533}
!12530 = !DILocalVariable(name: "thread", arg: 1, scope: !12528, file: !2210, line: 635, type: !2105)
!12531 = !DILocalVariable(name: "__i", scope: !12532, file: !2210, line: 637, type: !12048)
!12532 = distinct !DILexicalBlock(scope: !12528, file: !2210, line: 637, column: 2)
!12533 = !DILocalVariable(name: "__key", scope: !12532, file: !2210, line: 637, type: !12048)
!12534 = !DILocation(line: 0, scope: !12528)
!12535 = !DILocation(line: 0, scope: !12532)
!12536 = !DILocation(line: 0, scope: !12056, inlinedAt: !12537)
!12537 = distinct !DILocation(line: 637, column: 2, scope: !12532)
!12538 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !12539)
!12539 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !12537)
!12540 = !DILocation(line: 0, scope: !12065, inlinedAt: !12539)
!12541 = !DILocation(line: 639, column: 4, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12543, file: !2210, line: 638, column: 41)
!12543 = distinct !DILexicalBlock(scope: !12544, file: !2210, line: 638, column: 7)
!12544 = distinct !DILexicalBlock(scope: !12545, file: !2210, line: 637, column: 26)
!12545 = distinct !DILexicalBlock(scope: !12532, file: !2210, line: 637, column: 2)
!12546 = !DILocation(line: 0, scope: !12083, inlinedAt: !12547)
!12547 = distinct !DILocation(line: 637, column: 2, scope: !12545)
!12548 = !DILocation(line: 0, scope: !12091, inlinedAt: !12549)
!12549 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !12547)
!12550 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12549)
!12551 = !DILocation(line: 642, column: 1, scope: !12528)
!12552 = distinct !DISubprogram(name: "ready_thread", scope: !2210, file: !2210, line: 617, type: !12014, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12553)
!12553 = !{!12554}
!12554 = !DILocalVariable(name: "thread", arg: 1, scope: !12552, file: !2210, line: 617, type: !2105)
!12555 = !DILocation(line: 0, scope: !12552)
!12556 = !DILocation(line: 626, column: 7, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12552, file: !2210, line: 626, column: 6)
!12558 = !DILocation(line: 626, column: 34, scope: !12557)
!12559 = !DILocation(line: 626, column: 37, scope: !12557)
!12560 = !DILocation(line: 626, column: 6, scope: !12552)
!12561 = !DILocation(line: 0, scope: !12242, inlinedAt: !12562)
!12562 = distinct !DILocation(line: 629, column: 3, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12557, file: !2210, line: 626, column: 64)
!12564 = !DILocation(line: 252, column: 15, scope: !12242, inlinedAt: !12562)
!12565 = !DILocation(line: 252, column: 28, scope: !12242, inlinedAt: !12562)
!12566 = !DILocation(line: 0, scope: !12249, inlinedAt: !12567)
!12567 = distinct !DILocation(line: 254, column: 3, scope: !12253, inlinedAt: !12562)
!12568 = !DILocation(line: 0, scope: !12256, inlinedAt: !12569)
!12569 = distinct !DILocation(line: 229, column: 2, scope: !12249, inlinedAt: !12567)
!12570 = !DILocation(line: 188, column: 2, scope: !12266, inlinedAt: !12569)
!12571 = !DILocation(line: 188, column: 2, scope: !12268, inlinedAt: !12569)
!12572 = !DILocation(line: 0, scope: !12266, inlinedAt: !12569)
!12573 = !DILocation(line: 189, column: 7, scope: !12271, inlinedAt: !12569)
!12574 = !DILocation(line: 189, column: 35, scope: !12271, inlinedAt: !12569)
!12575 = !DILocation(line: 189, column: 7, scope: !12272, inlinedAt: !12569)
!12576 = !DILocation(line: 191, column: 21, scope: !12276, inlinedAt: !12569)
!12577 = !DILocation(line: 190, column: 4, scope: !12276, inlinedAt: !12569)
!12578 = !DILocation(line: 192, column: 4, scope: !12276, inlinedAt: !12569)
!12579 = distinct !{!12579, !12570, !12580}
!12580 = !DILocation(line: 194, column: 2, scope: !12266, inlinedAt: !12569)
!12581 = !DILocation(line: 196, column: 37, scope: !12256, inlinedAt: !12569)
!12582 = !DILocation(line: 196, column: 2, scope: !12256, inlinedAt: !12569)
!12583 = !DILocation(line: 197, column: 1, scope: !12256, inlinedAt: !12569)
!12584 = !DILocation(line: 630, column: 3, scope: !12563)
!12585 = !DILocation(line: 632, column: 2, scope: !12563)
!12586 = !DILocation(line: 633, column: 1, scope: !12552)
!12587 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11328, file: !11328, line: 120, type: !12174, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12588)
!12588 = !{!12589}
!12589 = !DILocalVariable(name: "thread", arg: 1, scope: !12587, file: !11328, line: 120, type: !2105)
!12590 = !DILocation(line: 0, scope: !12587)
!12591 = !DILocation(line: 122, column: 12, scope: !12587)
!12592 = !DILocation(line: 122, column: 62, scope: !12587)
!12593 = !DILocation(line: 123, column: 4, scope: !12587)
!12594 = !DILocation(line: 122, column: 2, scope: !12587)
!12595 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2210, file: !2210, line: 644, type: !12014, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12596)
!12596 = !{!12597, !12598, !12600}
!12597 = !DILocalVariable(name: "thread", arg: 1, scope: !12595, file: !2210, line: 644, type: !2105)
!12598 = !DILocalVariable(name: "__i", scope: !12599, file: !2210, line: 646, type: !12048)
!12599 = distinct !DILexicalBlock(scope: !12595, file: !2210, line: 646, column: 2)
!12600 = !DILocalVariable(name: "__key", scope: !12599, file: !2210, line: 646, type: !12048)
!12601 = !DILocation(line: 0, scope: !12595)
!12602 = !DILocation(line: 0, scope: !12599)
!12603 = !DILocation(line: 0, scope: !12056, inlinedAt: !12604)
!12604 = distinct !DILocation(line: 646, column: 2, scope: !12599)
!12605 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !12606)
!12606 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !12604)
!12607 = !DILocation(line: 0, scope: !12065, inlinedAt: !12606)
!12608 = !DILocation(line: 647, column: 3, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12610, file: !2210, line: 646, column: 26)
!12610 = distinct !DILexicalBlock(scope: !12599, file: !2210, line: 646, column: 2)
!12611 = !DILocation(line: 0, scope: !12083, inlinedAt: !12612)
!12612 = distinct !DILocation(line: 646, column: 2, scope: !12610)
!12613 = !DILocation(line: 0, scope: !12091, inlinedAt: !12614)
!12614 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !12612)
!12615 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12614)
!12616 = !DILocation(line: 649, column: 1, scope: !12595)
!12617 = distinct !DISubprogram(name: "z_sched_start", scope: !2210, file: !2210, line: 651, type: !12014, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12618)
!12618 = !{!12619, !12620}
!12619 = !DILocalVariable(name: "thread", arg: 1, scope: !12617, file: !2210, line: 651, type: !2105)
!12620 = !DILocalVariable(name: "key", scope: !12617, file: !2210, line: 653, type: !12048)
!12621 = !DILocation(line: 0, scope: !12617)
!12622 = !DILocation(line: 0, scope: !12056, inlinedAt: !12623)
!12623 = distinct !DILocation(line: 653, column: 25, scope: !12617)
!12624 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !12625)
!12625 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !12623)
!12626 = !DILocation(line: 0, scope: !12065, inlinedAt: !12625)
!12627 = !DILocation(line: 655, column: 6, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12617, file: !2210, line: 655, column: 6)
!12629 = !DILocation(line: 655, column: 6, scope: !12617)
!12630 = !DILocation(line: 0, scope: !12083, inlinedAt: !12631)
!12631 = distinct !DILocation(line: 656, column: 3, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12628, file: !2210, line: 655, column: 36)
!12633 = !DILocation(line: 0, scope: !12091, inlinedAt: !12634)
!12634 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !12631)
!12635 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12634)
!12636 = !DILocation(line: 657, column: 3, scope: !12632)
!12637 = !DILocation(line: 660, column: 2, scope: !12617)
!12638 = !DILocation(line: 661, column: 2, scope: !12617)
!12639 = !DILocation(line: 662, column: 2, scope: !12617)
!12640 = !DILocation(line: 663, column: 1, scope: !12617)
!12641 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11328, file: !11328, line: 126, type: !12174, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12642)
!12642 = !{!12643}
!12643 = !DILocalVariable(name: "thread", arg: 1, scope: !12641, file: !11328, line: 126, type: !2105)
!12644 = !DILocation(line: 0, scope: !12641)
!12645 = !DILocation(line: 128, column: 23, scope: !12641)
!12646 = !DILocation(line: 128, column: 36, scope: !12641)
!12647 = !DILocation(line: 128, column: 56, scope: !12641)
!12648 = !DILocation(line: 128, column: 2, scope: !12641)
!12649 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11328, file: !11328, line: 155, type: !12014, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12650)
!12650 = !{!12651}
!12651 = !DILocalVariable(name: "thread", arg: 1, scope: !12649, file: !11328, line: 155, type: !2105)
!12652 = !DILocation(line: 0, scope: !12649)
!12653 = !DILocation(line: 157, column: 15, scope: !12649)
!12654 = !DILocation(line: 157, column: 28, scope: !12649)
!12655 = !DILocation(line: 158, column: 1, scope: !12649)
!12656 = distinct !DISubprogram(name: "z_reschedule", scope: !2210, file: !2210, line: 967, type: !12084, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12657)
!12657 = !{!12658, !12659}
!12658 = !DILocalVariable(name: "lock", arg: 1, scope: !12656, file: !2210, line: 967, type: !12059)
!12659 = !DILocalVariable(name: "key", arg: 2, scope: !12656, file: !2210, line: 967, type: !12048)
!12660 = !DILocation(line: 0, scope: !12656)
!12661 = !DILocation(line: 969, column: 6, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12656, file: !2210, line: 969, column: 6)
!12663 = !DILocation(line: 969, column: 23, scope: !12662)
!12664 = !DILocation(line: 969, column: 26, scope: !12662)
!12665 = !DILocation(line: 969, column: 6, scope: !12656)
!12666 = !DILocalVariable(name: "key", arg: 2, scope: !12667, file: !11432, line: 193, type: !12048)
!12667 = distinct !DISubprogram(name: "z_swap", scope: !11432, file: !11432, line: 193, type: !12668, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12670)
!12668 = !DISubroutineType(types: !12669)
!12669 = !{!103, !12059, !12048}
!12670 = !{!12671, !12666}
!12671 = !DILocalVariable(name: "lock", arg: 1, scope: !12667, file: !11432, line: 193, type: !12059)
!12672 = !DILocation(line: 0, scope: !12667, inlinedAt: !12673)
!12673 = distinct !DILocation(line: 970, column: 3, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12662, file: !2210, line: 969, column: 39)
!12675 = !DILocation(line: 196, column: 9, scope: !12667, inlinedAt: !12673)
!12676 = !DILocation(line: 971, column: 2, scope: !12674)
!12677 = !DILocation(line: 0, scope: !12083, inlinedAt: !12678)
!12678 = distinct !DILocation(line: 972, column: 3, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12662, file: !2210, line: 971, column: 9)
!12680 = !DILocation(line: 0, scope: !12091, inlinedAt: !12681)
!12681 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !12678)
!12682 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12681)
!12683 = !DILocation(line: 975, column: 1, scope: !12656)
!12684 = distinct !DISubprogram(name: "resched", scope: !2210, file: !2210, line: 940, type: !12685, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12687)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{!157, !121}
!12687 = !{!12688}
!12688 = !DILocalVariable(name: "key", arg: 1, scope: !12684, file: !2210, line: 940, type: !121)
!12689 = !DILocation(line: 0, scope: !12684)
!12690 = !DILocalVariable(name: "key", arg: 1, scope: !12691, file: !4622, line: 112, type: !32)
!12691 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4622, file: !4622, line: 112, type: !12692, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12694)
!12692 = !DISubroutineType(types: !12693)
!12693 = !{!157, !32}
!12694 = !{!12690}
!12695 = !DILocation(line: 0, scope: !12691, inlinedAt: !12696)
!12696 = distinct !DILocation(line: 946, column: 9, scope: !12684)
!12697 = !DILocation(line: 115, column: 13, scope: !12691, inlinedAt: !12696)
!12698 = !DILocation(line: 946, column: 32, scope: !12684)
!12699 = !DILocation(line: 1031, column: 3, scope: !12700, inlinedAt: !12703)
!12700 = distinct !DISubprogram(name: "__get_IPSR", scope: !4796, file: !4796, line: 1027, type: !4877, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12701)
!12701 = !{!12702}
!12702 = !DILocalVariable(name: "result", scope: !12700, file: !4796, line: 1029, type: !121)
!12703 = distinct !DILocation(line: 48, column: 10, scope: !12704, inlinedAt: !12705)
!12704 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5590, file: !5590, line: 46, type: !5591, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!12705 = distinct !DILocation(line: 946, column: 36, scope: !12684)
!12706 = !{i64 3768575}
!12707 = !DILocation(line: 0, scope: !12700, inlinedAt: !12703)
!12708 = !DILocation(line: 48, column: 9, scope: !12704, inlinedAt: !12705)
!12709 = !DILocation(line: 946, column: 2, scope: !12684)
!12710 = distinct !DISubprogram(name: "need_swap", scope: !2210, file: !2210, line: 953, type: !5591, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12711)
!12711 = !{!12712}
!12712 = !DILocalVariable(name: "new_thread", scope: !12710, file: !2210, line: 959, type: !2105)
!12713 = !DILocation(line: 962, column: 31, scope: !12710)
!12714 = !DILocation(line: 0, scope: !12710)
!12715 = !DILocation(line: 963, column: 23, scope: !12710)
!12716 = !DILocation(line: 963, column: 20, scope: !12710)
!12717 = !DILocation(line: 963, column: 2, scope: !12710)
!12718 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11432, file: !11432, line: 181, type: !4806, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12719)
!12719 = !{!12720, !12721}
!12720 = !DILocalVariable(name: "key", arg: 1, scope: !12718, file: !11432, line: 181, type: !32)
!12721 = !DILocalVariable(name: "ret", scope: !12718, file: !11432, line: 183, type: !103)
!12722 = !DILocation(line: 0, scope: !12718)
!12723 = !DILocation(line: 185, column: 8, scope: !12718)
!12724 = !DILocation(line: 186, column: 2, scope: !12718)
!12725 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2210, file: !2210, line: 665, type: !12014, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12726)
!12726 = !{!12727, !12728, !12730}
!12727 = !DILocalVariable(name: "thread", arg: 1, scope: !12725, file: !2210, line: 665, type: !2105)
!12728 = !DILocalVariable(name: "__i", scope: !12729, file: !2210, line: 671, type: !12048)
!12729 = distinct !DILexicalBlock(scope: !12725, file: !2210, line: 671, column: 2)
!12730 = !DILocalVariable(name: "__key", scope: !12729, file: !2210, line: 671, type: !12048)
!12731 = !DILocation(line: 0, scope: !12725)
!12732 = !DILocation(line: 669, column: 8, scope: !12725)
!12733 = !DILocation(line: 0, scope: !12729)
!12734 = !DILocation(line: 0, scope: !12056, inlinedAt: !12735)
!12735 = distinct !DILocation(line: 671, column: 2, scope: !12729)
!12736 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !12737)
!12737 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !12735)
!12738 = !DILocation(line: 0, scope: !12065, inlinedAt: !12737)
!12739 = !DILocation(line: 672, column: 7, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12741, file: !2210, line: 672, column: 7)
!12741 = distinct !DILexicalBlock(scope: !12742, file: !2210, line: 671, column: 26)
!12742 = distinct !DILexicalBlock(scope: !12729, file: !2210, line: 671, column: 2)
!12743 = !DILocation(line: 672, column: 7, scope: !12741)
!12744 = !DILocation(line: 0, scope: !12225, inlinedAt: !12745)
!12745 = distinct !DILocation(line: 673, column: 4, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12740, file: !2210, line: 672, column: 35)
!12747 = !DILocation(line: 266, column: 15, scope: !12225, inlinedAt: !12745)
!12748 = !DILocation(line: 266, column: 28, scope: !12225, inlinedAt: !12745)
!12749 = !DILocation(line: 0, scope: !12233, inlinedAt: !12750)
!12750 = distinct !DILocation(line: 268, column: 3, scope: !12237, inlinedAt: !12745)
!12751 = !DILocation(line: 234, column: 2, scope: !12233, inlinedAt: !12750)
!12752 = !DILocation(line: 674, column: 3, scope: !12746)
!12753 = !DILocation(line: 675, column: 3, scope: !12741)
!12754 = !DILocation(line: 676, column: 26, scope: !12741)
!12755 = !DILocation(line: 676, column: 23, scope: !12741)
!12756 = !DILocation(line: 676, column: 3, scope: !12741)
!12757 = !DILocation(line: 0, scope: !12083, inlinedAt: !12758)
!12758 = distinct !DILocation(line: 671, column: 2, scope: !12742)
!12759 = !DILocation(line: 0, scope: !12091, inlinedAt: !12760)
!12760 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !12758)
!12761 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12760)
!12762 = !DILocation(line: 679, column: 16, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12725, file: !2210, line: 679, column: 6)
!12764 = !DILocation(line: 679, column: 13, scope: !12763)
!12765 = !DILocation(line: 679, column: 6, scope: !12725)
!12766 = !DILocation(line: 680, column: 3, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12763, file: !2210, line: 679, column: 26)
!12768 = !DILocation(line: 681, column: 2, scope: !12767)
!12769 = !DILocation(line: 684, column: 1, scope: !12725)
!12770 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11722, file: !11722, line: 52, type: !12032, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12771)
!12771 = !{!12772}
!12772 = !DILocalVariable(name: "thread", arg: 1, scope: !12770, file: !11722, line: 52, type: !2105)
!12773 = !DILocation(line: 0, scope: !12770)
!12774 = !DILocation(line: 54, column: 39, scope: !12770)
!12775 = !DILocation(line: 54, column: 9, scope: !12770)
!12776 = !DILocation(line: 54, column: 2, scope: !12770)
!12777 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11328, file: !11328, line: 141, type: !12014, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12778)
!12778 = !{!12779}
!12779 = !DILocalVariable(name: "thread", arg: 1, scope: !12777, file: !11328, line: 141, type: !2105)
!12780 = !DILocation(line: 0, scope: !12777)
!12781 = !DILocation(line: 143, column: 15, scope: !12777)
!12782 = !DILocation(line: 143, column: 28, scope: !12777)
!12783 = !DILocation(line: 146, column: 1, scope: !12777)
!12784 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11328, file: !11328, line: 73, type: !2821, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!12785 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !12786)
!12786 = distinct !DILocation(line: 75, column: 30, scope: !12784)
!12787 = !DILocation(line: 0, scope: !12065, inlinedAt: !12786)
!12788 = !DILocation(line: 75, column: 9, scope: !12784)
!12789 = !DILocation(line: 76, column: 1, scope: !12784)
!12790 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2210, file: !2210, line: 977, type: !4887, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12791)
!12791 = !{!12792}
!12792 = !DILocalVariable(name: "key", arg: 1, scope: !12790, file: !2210, line: 977, type: !121)
!12793 = !DILocation(line: 0, scope: !12790)
!12794 = !DILocation(line: 979, column: 6, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12790, file: !2210, line: 979, column: 6)
!12796 = !DILocation(line: 979, column: 6, scope: !12790)
!12797 = !DILocation(line: 980, column: 3, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12795, file: !2210, line: 979, column: 20)
!12799 = !DILocation(line: 981, column: 2, scope: !12798)
!12800 = !DILocation(line: 0, scope: !12091, inlinedAt: !12801)
!12801 = distinct !DILocation(line: 982, column: 3, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12795, file: !2210, line: 981, column: 9)
!12803 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12801)
!12804 = !DILocation(line: 985, column: 1, scope: !12790)
!12805 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2210, file: !2210, line: 695, type: !12014, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12806)
!12806 = !{!12807, !12808}
!12807 = !DILocalVariable(name: "thread", arg: 1, scope: !12805, file: !2210, line: 695, type: !2105)
!12808 = !DILocalVariable(name: "key", scope: !12805, file: !2210, line: 699, type: !12048)
!12809 = !DILocation(line: 0, scope: !12805)
!12810 = !DILocation(line: 0, scope: !12056, inlinedAt: !12811)
!12811 = distinct !DILocation(line: 699, column: 25, scope: !12805)
!12812 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !12813)
!12813 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !12811)
!12814 = !DILocation(line: 0, scope: !12065, inlinedAt: !12813)
!12815 = !DILocation(line: 702, column: 7, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12805, file: !2210, line: 702, column: 6)
!12817 = !DILocation(line: 702, column: 6, scope: !12805)
!12818 = !DILocation(line: 0, scope: !12083, inlinedAt: !12819)
!12819 = distinct !DILocation(line: 703, column: 3, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12816, file: !2210, line: 702, column: 38)
!12821 = !DILocation(line: 0, scope: !12091, inlinedAt: !12822)
!12822 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !12819)
!12823 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12822)
!12824 = !DILocation(line: 704, column: 3, scope: !12820)
!12825 = !DILocation(line: 707, column: 2, scope: !12805)
!12826 = !DILocation(line: 708, column: 2, scope: !12805)
!12827 = !DILocation(line: 710, column: 2, scope: !12805)
!12828 = !DILocation(line: 713, column: 1, scope: !12805)
!12829 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11328, file: !11328, line: 96, type: !12174, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12830)
!12830 = !{!12831}
!12831 = !DILocalVariable(name: "thread", arg: 1, scope: !12829, file: !11328, line: 96, type: !2105)
!12832 = !DILocation(line: 0, scope: !12829)
!12833 = !DILocation(line: 98, column: 23, scope: !12829)
!12834 = !DILocation(line: 98, column: 36, scope: !12829)
!12835 = !DILocation(line: 98, column: 57, scope: !12829)
!12836 = !DILocation(line: 98, column: 2, scope: !12829)
!12837 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11328, file: !11328, line: 148, type: !12014, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12838)
!12838 = !{!12839}
!12839 = !DILocalVariable(name: "thread", arg: 1, scope: !12837, file: !11328, line: 148, type: !2105)
!12840 = !DILocation(line: 0, scope: !12837)
!12841 = !DILocation(line: 150, column: 15, scope: !12837)
!12842 = !DILocation(line: 150, column: 28, scope: !12837)
!12843 = !DILocation(line: 153, column: 1, scope: !12837)
!12844 = distinct !DISubprogram(name: "z_pend_thread", scope: !2210, file: !2210, line: 770, type: !12845, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12851)
!12845 = !DISubroutineType(types: !12846)
!12846 = !{null, !2105, !2136, !12847}
!12847 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1457, line: 67, baseType: !12848)
!12848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1457, line: 65, size: 64, elements: !12849)
!12849 = !{!12850}
!12850 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12848, file: !1457, line: 66, baseType: !1456, size: 64)
!12851 = !{!12852, !12853, !12854, !12855, !12857}
!12852 = !DILocalVariable(name: "thread", arg: 1, scope: !12844, file: !2210, line: 770, type: !2105)
!12853 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12844, file: !2210, line: 770, type: !2136)
!12854 = !DILocalVariable(name: "timeout", arg: 3, scope: !12844, file: !2210, line: 771, type: !12847)
!12855 = !DILocalVariable(name: "__i", scope: !12856, file: !2210, line: 774, type: !12048)
!12856 = distinct !DILexicalBlock(scope: !12844, file: !2210, line: 774, column: 2)
!12857 = !DILocalVariable(name: "__key", scope: !12856, file: !2210, line: 774, type: !12048)
!12858 = !DILocation(line: 0, scope: !12844)
!12859 = !DILocation(line: 0, scope: !12856)
!12860 = !DILocation(line: 0, scope: !12056, inlinedAt: !12861)
!12861 = distinct !DILocation(line: 774, column: 2, scope: !12856)
!12862 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !12863)
!12863 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !12861)
!12864 = !DILocation(line: 0, scope: !12065, inlinedAt: !12863)
!12865 = !DILocation(line: 775, column: 3, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !2210, line: 774, column: 26)
!12867 = distinct !DILexicalBlock(scope: !12856, file: !2210, line: 774, column: 2)
!12868 = !DILocation(line: 0, scope: !12083, inlinedAt: !12869)
!12869 = distinct !DILocation(line: 774, column: 2, scope: !12867)
!12870 = !DILocation(line: 0, scope: !12091, inlinedAt: !12871)
!12871 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !12869)
!12872 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12871)
!12873 = !DILocation(line: 777, column: 1, scope: !12844)
!12874 = distinct !DISubprogram(name: "pend_locked", scope: !2210, file: !2210, line: 760, type: !12845, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12875)
!12875 = !{!12876, !12877, !12878}
!12876 = !DILocalVariable(name: "thread", arg: 1, scope: !12874, file: !2210, line: 760, type: !2105)
!12877 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12874, file: !2210, line: 760, type: !2136)
!12878 = !DILocalVariable(name: "timeout", arg: 3, scope: !12874, file: !2210, line: 761, type: !12847)
!12879 = !DILocation(line: 0, scope: !12874)
!12880 = !DILocation(line: 766, column: 2, scope: !12874)
!12881 = !DILocation(line: 767, column: 2, scope: !12874)
!12882 = !DILocation(line: 768, column: 1, scope: !12874)
!12883 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2210, file: !2210, line: 740, type: !12884, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12886)
!12884 = !DISubroutineType(types: !12885)
!12885 = !{null, !2105, !2136}
!12886 = !{!12887, !12888}
!12887 = !DILocalVariable(name: "thread", arg: 1, scope: !12883, file: !2210, line: 740, type: !2105)
!12888 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12883, file: !2210, line: 740, type: !2136)
!12889 = !DILocation(line: 0, scope: !12883)
!12890 = !DILocation(line: 742, column: 2, scope: !12883)
!12891 = !DILocation(line: 743, column: 2, scope: !12883)
!12892 = !DILocation(line: 747, column: 13, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12883, file: !2210, line: 747, column: 6)
!12894 = !DILocation(line: 747, column: 6, scope: !12883)
!12895 = !DILocation(line: 748, column: 16, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12893, file: !2210, line: 747, column: 22)
!12897 = !DILocation(line: 748, column: 26, scope: !12896)
!12898 = !DILocation(line: 749, column: 28, scope: !12896)
!12899 = !DILocation(line: 0, scope: !12256, inlinedAt: !12900)
!12900 = distinct !DILocation(line: 749, column: 3, scope: !12896)
!12901 = !DILocation(line: 188, column: 2, scope: !12266, inlinedAt: !12900)
!12902 = !DILocation(line: 188, column: 2, scope: !12268, inlinedAt: !12900)
!12903 = !DILocation(line: 0, scope: !12266, inlinedAt: !12900)
!12904 = !DILocation(line: 189, column: 7, scope: !12271, inlinedAt: !12900)
!12905 = !DILocation(line: 189, column: 35, scope: !12271, inlinedAt: !12900)
!12906 = !DILocation(line: 189, column: 7, scope: !12272, inlinedAt: !12900)
!12907 = !DILocation(line: 191, column: 21, scope: !12276, inlinedAt: !12900)
!12908 = !DILocation(line: 190, column: 4, scope: !12276, inlinedAt: !12900)
!12909 = !DILocation(line: 192, column: 4, scope: !12276, inlinedAt: !12900)
!12910 = distinct !{!12910, !12901, !12911}
!12911 = !DILocation(line: 194, column: 2, scope: !12266, inlinedAt: !12900)
!12912 = !DILocation(line: 196, column: 37, scope: !12256, inlinedAt: !12900)
!12913 = !DILocation(line: 196, column: 2, scope: !12256, inlinedAt: !12900)
!12914 = !DILocation(line: 197, column: 1, scope: !12256, inlinedAt: !12900)
!12915 = !DILocation(line: 751, column: 1, scope: !12883)
!12916 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2210, file: !2210, line: 753, type: !12917, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12919)
!12917 = !DISubroutineType(types: !12918)
!12918 = !{null, !2105, !12847}
!12919 = !{!12920, !12921}
!12920 = !DILocalVariable(name: "thread", arg: 1, scope: !12916, file: !2210, line: 753, type: !2105)
!12921 = !DILocalVariable(name: "timeout", arg: 2, scope: !12916, file: !2210, line: 753, type: !12847)
!12922 = !DILocation(line: 0, scope: !12916)
!12923 = !DILocation(line: 755, column: 7, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12916, file: !2210, line: 755, column: 6)
!12925 = !DILocation(line: 755, column: 6, scope: !12916)
!12926 = !DILocation(line: 756, column: 3, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12924, file: !2210, line: 755, column: 41)
!12928 = !DILocation(line: 757, column: 2, scope: !12927)
!12929 = !DILocation(line: 758, column: 1, scope: !12916)
!12930 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11722, file: !11722, line: 47, type: !12917, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12931)
!12931 = !{!12932, !12933}
!12932 = !DILocalVariable(name: "thread", arg: 1, scope: !12930, file: !11722, line: 47, type: !2105)
!12933 = !DILocalVariable(name: "ticks", arg: 2, scope: !12930, file: !11722, line: 47, type: !12847)
!12934 = !DILocation(line: 0, scope: !12930)
!12935 = !DILocation(line: 49, column: 30, scope: !12930)
!12936 = !DILocation(line: 49, column: 2, scope: !12930)
!12937 = !DILocation(line: 50, column: 1, scope: !12930)
!12938 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2210, file: !2210, line: 795, type: !2162, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12939)
!12939 = !{!12940, !12941, !12942, !12944, !12945}
!12940 = !DILocalVariable(name: "timeout", arg: 1, scope: !12938, file: !2210, line: 795, type: !2164)
!12941 = !DILocalVariable(name: "thread", scope: !12938, file: !2210, line: 797, type: !2105)
!12942 = !DILocalVariable(name: "__i", scope: !12943, file: !2210, line: 800, type: !12048)
!12943 = distinct !DILexicalBlock(scope: !12938, file: !2210, line: 800, column: 2)
!12944 = !DILocalVariable(name: "__key", scope: !12943, file: !2210, line: 800, type: !12048)
!12945 = !DILocalVariable(name: "killed", scope: !12946, file: !2210, line: 801, type: !157)
!12946 = distinct !DILexicalBlock(scope: !12947, file: !2210, line: 800, column: 26)
!12947 = distinct !DILexicalBlock(scope: !12943, file: !2210, line: 800, column: 2)
!12948 = !DILocation(line: 0, scope: !12938)
!12949 = !DILocation(line: 797, column: 28, scope: !12938)
!12950 = !DILocation(line: 0, scope: !12943)
!12951 = !DILocation(line: 0, scope: !12056, inlinedAt: !12952)
!12952 = distinct !DILocation(line: 800, column: 2, scope: !12943)
!12953 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !12954)
!12954 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !12952)
!12955 = !DILocation(line: 0, scope: !12065, inlinedAt: !12954)
!12956 = !DILocation(line: 801, column: 27, scope: !12946)
!12957 = !DILocation(line: 801, column: 32, scope: !12946)
!12958 = !DILocation(line: 801, column: 61, scope: !12946)
!12959 = !DILocation(line: 0, scope: !12946)
!12960 = !DILocation(line: 804, column: 7, scope: !12946)
!12961 = !DILocation(line: 805, column: 21, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12963, file: !2210, line: 805, column: 8)
!12963 = distinct !DILexicalBlock(scope: !12964, file: !2210, line: 804, column: 16)
!12964 = distinct !DILexicalBlock(scope: !12946, file: !2210, line: 804, column: 7)
!12965 = !DILocation(line: 805, column: 31, scope: !12962)
!12966 = !DILocation(line: 805, column: 8, scope: !12963)
!12967 = !DILocation(line: 806, column: 5, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12962, file: !2210, line: 805, column: 40)
!12969 = !DILocation(line: 807, column: 4, scope: !12968)
!12970 = !DILocation(line: 808, column: 4, scope: !12963)
!12971 = !DILocation(line: 809, column: 4, scope: !12963)
!12972 = !DILocation(line: 810, column: 4, scope: !12963)
!12973 = !DILocation(line: 811, column: 3, scope: !12963)
!12974 = !DILocation(line: 0, scope: !12083, inlinedAt: !12975)
!12975 = distinct !DILocation(line: 800, column: 2, scope: !12947)
!12976 = !DILocation(line: 0, scope: !12091, inlinedAt: !12977)
!12977 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !12975)
!12978 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !12977)
!12979 = !DILocation(line: 813, column: 1, scope: !12938)
!12980 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2210, file: !2210, line: 779, type: !12014, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12981)
!12981 = !{!12982}
!12982 = !DILocalVariable(name: "thread", arg: 1, scope: !12980, file: !2210, line: 779, type: !2105)
!12983 = !DILocation(line: 0, scope: !12980)
!12984 = !DILocation(line: 781, column: 2, scope: !12980)
!12985 = !DILocation(line: 782, column: 2, scope: !12980)
!12986 = !DILocation(line: 783, column: 15, scope: !12980)
!12987 = !DILocation(line: 783, column: 25, scope: !12980)
!12988 = !DILocation(line: 784, column: 1, scope: !12980)
!12989 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11328, file: !11328, line: 165, type: !12014, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12990)
!12990 = !{!12991}
!12991 = !DILocalVariable(name: "thread", arg: 1, scope: !12989, file: !11328, line: 165, type: !2105)
!12992 = !DILocation(line: 0, scope: !12989)
!12993 = !DILocation(line: 167, column: 15, scope: !12989)
!12994 = !DILocation(line: 167, column: 28, scope: !12989)
!12995 = !DILocation(line: 168, column: 1, scope: !12989)
!12996 = distinct !DISubprogram(name: "unready_thread", scope: !2210, file: !2210, line: 731, type: !12014, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12997)
!12997 = !{!12998}
!12998 = !DILocalVariable(name: "thread", arg: 1, scope: !12996, file: !2210, line: 731, type: !2105)
!12999 = !DILocation(line: 0, scope: !12996)
!13000 = !DILocation(line: 733, column: 6, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12996, file: !2210, line: 733, column: 6)
!13002 = !DILocation(line: 733, column: 6, scope: !12996)
!13003 = !DILocation(line: 0, scope: !12225, inlinedAt: !13004)
!13004 = distinct !DILocation(line: 734, column: 3, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !13001, file: !2210, line: 733, column: 34)
!13006 = !DILocation(line: 266, column: 15, scope: !12225, inlinedAt: !13004)
!13007 = !DILocation(line: 266, column: 28, scope: !12225, inlinedAt: !13004)
!13008 = !DILocation(line: 0, scope: !12233, inlinedAt: !13009)
!13009 = distinct !DILocation(line: 268, column: 3, scope: !12237, inlinedAt: !13004)
!13010 = !DILocation(line: 234, column: 2, scope: !12233, inlinedAt: !13009)
!13011 = !DILocation(line: 735, column: 2, scope: !13005)
!13012 = !DILocation(line: 736, column: 25, scope: !12996)
!13013 = !DILocation(line: 736, column: 22, scope: !12996)
!13014 = !DILocation(line: 736, column: 2, scope: !12996)
!13015 = !DILocation(line: 737, column: 1, scope: !12996)
!13016 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11328, file: !11328, line: 160, type: !12014, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13017)
!13017 = !{!13018}
!13018 = !DILocalVariable(name: "thread", arg: 1, scope: !13016, file: !11328, line: 160, type: !2105)
!13019 = !DILocation(line: 0, scope: !13016)
!13020 = !DILocation(line: 162, column: 15, scope: !13016)
!13021 = !DILocation(line: 162, column: 28, scope: !13016)
!13022 = !DILocation(line: 163, column: 1, scope: !13016)
!13023 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2210, file: !2210, line: 786, type: !12014, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13024)
!13024 = !{!13025, !13026, !13028}
!13025 = !DILocalVariable(name: "thread", arg: 1, scope: !13023, file: !2210, line: 786, type: !2105)
!13026 = !DILocalVariable(name: "__i", scope: !13027, file: !2210, line: 788, type: !12048)
!13027 = distinct !DILexicalBlock(scope: !13023, file: !2210, line: 788, column: 2)
!13028 = !DILocalVariable(name: "__key", scope: !13027, file: !2210, line: 788, type: !12048)
!13029 = !DILocation(line: 0, scope: !13023)
!13030 = !DILocation(line: 0, scope: !13027)
!13031 = !DILocation(line: 0, scope: !12056, inlinedAt: !13032)
!13032 = distinct !DILocation(line: 788, column: 2, scope: !13027)
!13033 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13034)
!13034 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13032)
!13035 = !DILocation(line: 0, scope: !12065, inlinedAt: !13034)
!13036 = !DILocation(line: 789, column: 3, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !13038, file: !2210, line: 788, column: 26)
!13038 = distinct !DILexicalBlock(scope: !13027, file: !2210, line: 788, column: 2)
!13039 = !DILocation(line: 0, scope: !12083, inlinedAt: !13040)
!13040 = distinct !DILocation(line: 788, column: 2, scope: !13038)
!13041 = !DILocation(line: 0, scope: !12091, inlinedAt: !13042)
!13042 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13040)
!13043 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13042)
!13044 = !DILocation(line: 791, column: 1, scope: !13023)
!13045 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2210, file: !2210, line: 816, type: !13046, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13048)
!13046 = !DISubroutineType(types: !13047)
!13047 = !{!103, !121, !2136, !12847}
!13048 = !{!13049, !13050, !13051, !13052, !13053, !13055}
!13049 = !DILocalVariable(name: "key", arg: 1, scope: !13045, file: !2210, line: 816, type: !121)
!13050 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13045, file: !2210, line: 816, type: !2136)
!13051 = !DILocalVariable(name: "timeout", arg: 3, scope: !13045, file: !2210, line: 816, type: !12847)
!13052 = !DILocalVariable(name: "ret", scope: !13045, file: !2210, line: 828, type: !103)
!13053 = !DILocalVariable(name: "__i", scope: !13054, file: !2210, line: 829, type: !12048)
!13054 = distinct !DILexicalBlock(scope: !13045, file: !2210, line: 829, column: 2)
!13055 = !DILocalVariable(name: "__key", scope: !13054, file: !2210, line: 829, type: !12048)
!13056 = !DILocation(line: 0, scope: !13045)
!13057 = !DILocation(line: 823, column: 14, scope: !13045)
!13058 = !DILocation(line: 823, column: 2, scope: !13045)
!13059 = !DILocation(line: 826, column: 20, scope: !13045)
!13060 = !DILocation(line: 826, column: 18, scope: !13045)
!13061 = !DILocation(line: 828, column: 12, scope: !13045)
!13062 = !DILocation(line: 0, scope: !13054)
!13063 = !DILocation(line: 0, scope: !12056, inlinedAt: !13064)
!13064 = distinct !DILocation(line: 829, column: 2, scope: !13054)
!13065 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13066)
!13066 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13064)
!13067 = !DILocation(line: 0, scope: !12065, inlinedAt: !13066)
!13068 = !DILocation(line: 830, column: 7, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13070, file: !2210, line: 830, column: 7)
!13070 = distinct !DILexicalBlock(scope: !13071, file: !2210, line: 829, column: 26)
!13071 = distinct !DILexicalBlock(scope: !13054, file: !2210, line: 829, column: 2)
!13072 = !DILocation(line: 830, column: 26, scope: !13069)
!13073 = !DILocation(line: 830, column: 23, scope: !13069)
!13074 = !DILocation(line: 830, column: 7, scope: !13070)
!13075 = !DILocation(line: 831, column: 20, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13069, file: !2210, line: 830, column: 36)
!13077 = !DILocation(line: 832, column: 3, scope: !13076)
!13078 = !DILocation(line: 0, scope: !12083, inlinedAt: !13079)
!13079 = distinct !DILocation(line: 829, column: 2, scope: !13071)
!13080 = !DILocation(line: 0, scope: !12091, inlinedAt: !13081)
!13081 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13079)
!13082 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13081)
!13083 = !DILocation(line: 834, column: 2, scope: !13045)
!13084 = distinct !DISubprogram(name: "z_pend_curr", scope: !2210, file: !2210, line: 840, type: !13085, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13087)
!13085 = !DISubroutineType(types: !13086)
!13086 = !{!103, !12059, !12048, !2136, !12847}
!13087 = !{!13088, !13089, !13090, !13091}
!13088 = !DILocalVariable(name: "lock", arg: 1, scope: !13084, file: !2210, line: 840, type: !12059)
!13089 = !DILocalVariable(name: "key", arg: 2, scope: !13084, file: !2210, line: 840, type: !12048)
!13090 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13084, file: !2210, line: 841, type: !2136)
!13091 = !DILocalVariable(name: "timeout", arg: 4, scope: !13084, file: !2210, line: 841, type: !12847)
!13092 = !DILocation(line: 0, scope: !13084)
!13093 = !DILocation(line: 844, column: 20, scope: !13084)
!13094 = !DILocation(line: 844, column: 18, scope: !13084)
!13095 = !DILocation(line: 0, scope: !12056, inlinedAt: !13096)
!13096 = distinct !DILocation(line: 856, column: 9, scope: !13084)
!13097 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13098)
!13098 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13096)
!13099 = !DILocation(line: 0, scope: !12065, inlinedAt: !13098)
!13100 = !DILocation(line: 857, column: 14, scope: !13084)
!13101 = !DILocation(line: 857, column: 2, scope: !13084)
!13102 = !DILocation(line: 0, scope: !12667, inlinedAt: !13103)
!13103 = distinct !DILocation(line: 859, column: 9, scope: !13084)
!13104 = !DILocation(line: 196, column: 9, scope: !12667, inlinedAt: !13103)
!13105 = !DILocation(line: 859, column: 2, scope: !13084)
!13106 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2210, file: !2210, line: 862, type: !13107, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13109)
!13107 = !DISubroutineType(types: !13108)
!13108 = !{!2105, !2136}
!13109 = !{!13110, !13111, !13112, !13114}
!13110 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13106, file: !2210, line: 862, type: !2136)
!13111 = !DILocalVariable(name: "thread", scope: !13106, file: !2210, line: 864, type: !2105)
!13112 = !DILocalVariable(name: "__i", scope: !13113, file: !2210, line: 866, type: !12048)
!13113 = distinct !DILexicalBlock(scope: !13106, file: !2210, line: 866, column: 2)
!13114 = !DILocalVariable(name: "__key", scope: !13113, file: !2210, line: 866, type: !12048)
!13115 = !DILocation(line: 0, scope: !13106)
!13116 = !DILocation(line: 0, scope: !13113)
!13117 = !DILocation(line: 0, scope: !12056, inlinedAt: !13118)
!13118 = distinct !DILocation(line: 866, column: 2, scope: !13113)
!13119 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13120)
!13120 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13118)
!13121 = !DILocation(line: 0, scope: !12065, inlinedAt: !13120)
!13122 = !DILocation(line: 867, column: 12, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13124, file: !2210, line: 866, column: 26)
!13124 = distinct !DILexicalBlock(scope: !13113, file: !2210, line: 866, column: 2)
!13125 = !DILocation(line: 869, column: 14, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13123, file: !2210, line: 869, column: 7)
!13127 = !DILocation(line: 869, column: 7, scope: !13123)
!13128 = !DILocation(line: 870, column: 4, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13126, file: !2210, line: 869, column: 23)
!13130 = !DILocation(line: 871, column: 3, scope: !13129)
!13131 = !DILocation(line: 0, scope: !12083, inlinedAt: !13132)
!13132 = distinct !DILocation(line: 866, column: 2, scope: !13124)
!13133 = !DILocation(line: 0, scope: !12091, inlinedAt: !13134)
!13134 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13132)
!13135 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13134)
!13136 = !DILocation(line: 874, column: 2, scope: !13106)
!13137 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2210, file: !2210, line: 877, type: !13107, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13138)
!13138 = !{!13139, !13140, !13141, !13143}
!13139 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13137, file: !2210, line: 877, type: !2136)
!13140 = !DILocalVariable(name: "thread", scope: !13137, file: !2210, line: 879, type: !2105)
!13141 = !DILocalVariable(name: "__i", scope: !13142, file: !2210, line: 881, type: !12048)
!13142 = distinct !DILexicalBlock(scope: !13137, file: !2210, line: 881, column: 2)
!13143 = !DILocalVariable(name: "__key", scope: !13142, file: !2210, line: 881, type: !12048)
!13144 = !DILocation(line: 0, scope: !13137)
!13145 = !DILocation(line: 0, scope: !13142)
!13146 = !DILocation(line: 0, scope: !12056, inlinedAt: !13147)
!13147 = distinct !DILocation(line: 881, column: 2, scope: !13142)
!13148 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13149)
!13149 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13147)
!13150 = !DILocation(line: 0, scope: !12065, inlinedAt: !13149)
!13151 = !DILocation(line: 882, column: 12, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13153, file: !2210, line: 881, column: 26)
!13153 = distinct !DILexicalBlock(scope: !13142, file: !2210, line: 881, column: 2)
!13154 = !DILocation(line: 884, column: 14, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13152, file: !2210, line: 884, column: 7)
!13156 = !DILocation(line: 884, column: 7, scope: !13152)
!13157 = !DILocation(line: 885, column: 4, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13155, file: !2210, line: 884, column: 23)
!13159 = !DILocation(line: 886, column: 10, scope: !13158)
!13160 = !DILocation(line: 887, column: 3, scope: !13158)
!13161 = !DILocation(line: 0, scope: !12083, inlinedAt: !13162)
!13162 = distinct !DILocation(line: 881, column: 2, scope: !13153)
!13163 = !DILocation(line: 0, scope: !12091, inlinedAt: !13164)
!13164 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13162)
!13165 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13164)
!13166 = !DILocation(line: 890, column: 2, scope: !13137)
!13167 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2210, file: !2210, line: 893, type: !12014, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13168)
!13168 = !{!13169}
!13169 = !DILocalVariable(name: "thread", arg: 1, scope: !13167, file: !2210, line: 893, type: !2105)
!13170 = !DILocation(line: 0, scope: !13167)
!13171 = !DILocation(line: 0, scope: !13023, inlinedAt: !13172)
!13172 = distinct !DILocation(line: 895, column: 2, scope: !13167)
!13173 = !DILocation(line: 0, scope: !13027, inlinedAt: !13172)
!13174 = !DILocation(line: 0, scope: !12056, inlinedAt: !13175)
!13175 = distinct !DILocation(line: 788, column: 2, scope: !13027, inlinedAt: !13172)
!13176 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13177)
!13177 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13175)
!13178 = !DILocation(line: 0, scope: !12065, inlinedAt: !13177)
!13179 = !DILocation(line: 789, column: 3, scope: !13037, inlinedAt: !13172)
!13180 = !DILocation(line: 0, scope: !12083, inlinedAt: !13181)
!13181 = distinct !DILocation(line: 788, column: 2, scope: !13038, inlinedAt: !13172)
!13182 = !DILocation(line: 0, scope: !12091, inlinedAt: !13183)
!13183 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13181)
!13184 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13183)
!13185 = !DILocation(line: 896, column: 8, scope: !13167)
!13186 = !DILocation(line: 897, column: 1, scope: !13167)
!13187 = distinct !DISubprogram(name: "z_set_prio", scope: !2210, file: !2210, line: 902, type: !12376, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13188)
!13188 = !{!13189, !13190, !13191, !13192, !13194}
!13189 = !DILocalVariable(name: "thread", arg: 1, scope: !13187, file: !2210, line: 902, type: !2105)
!13190 = !DILocalVariable(name: "prio", arg: 2, scope: !13187, file: !2210, line: 902, type: !103)
!13191 = !DILocalVariable(name: "need_sched", scope: !13187, file: !2210, line: 904, type: !157)
!13192 = !DILocalVariable(name: "__i", scope: !13193, file: !2210, line: 906, type: !12048)
!13193 = distinct !DILexicalBlock(scope: !13187, file: !2210, line: 906, column: 2)
!13194 = !DILocalVariable(name: "__key", scope: !13193, file: !2210, line: 906, type: !12048)
!13195 = !DILocation(line: 0, scope: !13187)
!13196 = !DILocation(line: 0, scope: !13193)
!13197 = !DILocation(line: 0, scope: !12056, inlinedAt: !13198)
!13198 = distinct !DILocation(line: 906, column: 2, scope: !13193)
!13199 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13200)
!13200 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13198)
!13201 = !DILocation(line: 0, scope: !12065, inlinedAt: !13200)
!13202 = !DILocation(line: 907, column: 16, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13204, file: !2210, line: 906, column: 26)
!13204 = distinct !DILexicalBlock(scope: !13193, file: !2210, line: 906, column: 2)
!13205 = !DILocation(line: 909, column: 7, scope: !13203)
!13206 = !DILocation(line: 0, scope: !12225, inlinedAt: !13207)
!13207 = distinct !DILocation(line: 912, column: 5, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13209, file: !2210, line: 911, column: 63)
!13209 = distinct !DILexicalBlock(scope: !13210, file: !2210, line: 911, column: 8)
!13210 = distinct !DILexicalBlock(scope: !13211, file: !2210, line: 909, column: 19)
!13211 = distinct !DILexicalBlock(scope: !13203, file: !2210, line: 909, column: 7)
!13212 = !DILocation(line: 266, column: 28, scope: !12225, inlinedAt: !13207)
!13213 = !DILocation(line: 0, scope: !12233, inlinedAt: !13214)
!13214 = distinct !DILocation(line: 268, column: 3, scope: !12237, inlinedAt: !13207)
!13215 = !DILocation(line: 234, column: 2, scope: !12233, inlinedAt: !13214)
!13216 = !DILocation(line: 913, column: 23, scope: !13208)
!13217 = !DILocation(line: 0, scope: !12242, inlinedAt: !13218)
!13218 = distinct !DILocation(line: 914, column: 5, scope: !13208)
!13219 = !DILocation(line: 252, column: 28, scope: !12242, inlinedAt: !13218)
!13220 = !DILocation(line: 0, scope: !12249, inlinedAt: !13221)
!13221 = distinct !DILocation(line: 254, column: 3, scope: !12253, inlinedAt: !13218)
!13222 = !DILocation(line: 0, scope: !12256, inlinedAt: !13223)
!13223 = distinct !DILocation(line: 229, column: 2, scope: !12249, inlinedAt: !13221)
!13224 = !DILocation(line: 188, column: 2, scope: !12266, inlinedAt: !13223)
!13225 = !DILocation(line: 188, column: 2, scope: !12268, inlinedAt: !13223)
!13226 = !DILocation(line: 0, scope: !12266, inlinedAt: !13223)
!13227 = !DILocation(line: 189, column: 7, scope: !12271, inlinedAt: !13223)
!13228 = !DILocation(line: 189, column: 35, scope: !12271, inlinedAt: !13223)
!13229 = !DILocation(line: 189, column: 7, scope: !12272, inlinedAt: !13223)
!13230 = !DILocation(line: 190, column: 4, scope: !12276, inlinedAt: !13223)
!13231 = !DILocation(line: 192, column: 4, scope: !12276, inlinedAt: !13223)
!13232 = distinct !{!13232, !13224, !13233}
!13233 = !DILocation(line: 194, column: 2, scope: !12266, inlinedAt: !13223)
!13234 = !DILocation(line: 196, column: 2, scope: !12256, inlinedAt: !13223)
!13235 = !DILocation(line: 197, column: 1, scope: !12256, inlinedAt: !13223)
!13236 = !DILocation(line: 918, column: 4, scope: !13210)
!13237 = !DILocation(line: 919, column: 3, scope: !13210)
!13238 = !DILocation(line: 920, column: 22, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13211, file: !2210, line: 919, column: 10)
!13240 = !DILocation(line: 0, scope: !12083, inlinedAt: !13241)
!13241 = distinct !DILocation(line: 906, column: 2, scope: !13204)
!13242 = !DILocation(line: 0, scope: !12091, inlinedAt: !13243)
!13243 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13241)
!13244 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13243)
!13245 = !DILocation(line: 926, column: 2, scope: !13187)
!13246 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2210, file: !2210, line: 929, type: !13247, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13249)
!13247 = !DISubroutineType(types: !13248)
!13248 = !{null, !2105, !103}
!13249 = !{!13250, !13251, !13252}
!13250 = !DILocalVariable(name: "thread", arg: 1, scope: !13246, file: !2210, line: 929, type: !2105)
!13251 = !DILocalVariable(name: "prio", arg: 2, scope: !13246, file: !2210, line: 929, type: !103)
!13252 = !DILocalVariable(name: "need_sched", scope: !13246, file: !2210, line: 931, type: !157)
!13253 = !DILocation(line: 0, scope: !13246)
!13254 = !DILocation(line: 931, column: 20, scope: !13246)
!13255 = !DILocation(line: 935, column: 17, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13246, file: !2210, line: 935, column: 6)
!13257 = !DILocation(line: 935, column: 20, scope: !13256)
!13258 = !DILocation(line: 935, column: 35, scope: !13256)
!13259 = !DILocation(line: 935, column: 48, scope: !13256)
!13260 = !DILocation(line: 935, column: 6, scope: !13246)
!13261 = !DILocation(line: 936, column: 3, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13256, file: !2210, line: 935, column: 55)
!13263 = !DILocation(line: 937, column: 2, scope: !13262)
!13264 = !DILocation(line: 938, column: 1, scope: !13246)
!13265 = distinct !DISubprogram(name: "k_sched_lock", scope: !2210, file: !2210, line: 987, type: !2821, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13266)
!13266 = !{!13267, !13269}
!13267 = !DILocalVariable(name: "__i", scope: !13268, file: !2210, line: 989, type: !12048)
!13268 = distinct !DILexicalBlock(scope: !13265, file: !2210, line: 989, column: 2)
!13269 = !DILocalVariable(name: "__key", scope: !13268, file: !2210, line: 989, type: !12048)
!13270 = !DILocation(line: 0, scope: !13268)
!13271 = !DILocation(line: 0, scope: !12056, inlinedAt: !13272)
!13272 = distinct !DILocation(line: 989, column: 2, scope: !13268)
!13273 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13274)
!13274 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13272)
!13275 = !DILocation(line: 0, scope: !12065, inlinedAt: !13274)
!13276 = !DILocation(line: 992, column: 3, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13278, file: !2210, line: 989, column: 26)
!13278 = distinct !DILexicalBlock(scope: !13268, file: !2210, line: 989, column: 2)
!13279 = !DILocation(line: 0, scope: !12083, inlinedAt: !13280)
!13280 = distinct !DILocation(line: 989, column: 2, scope: !13278)
!13281 = !DILocation(line: 0, scope: !12091, inlinedAt: !13282)
!13282 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13280)
!13283 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13282)
!13284 = !DILocation(line: 994, column: 1, scope: !13265)
!13285 = distinct !DISubprogram(name: "z_sched_lock", scope: !11328, file: !11328, line: 251, type: !2821, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13286 = !DILocation(line: 256, column: 4, scope: !13285)
!13287 = !DILocation(line: 256, column: 19, scope: !13285)
!13288 = !DILocation(line: 256, column: 2, scope: !13285)
!13289 = !DILocation(line: 258, column: 2, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13285, file: !11328, line: 258, column: 2)
!13291 = !{i64 2155185799}
!13292 = !DILocation(line: 259, column: 1, scope: !13285)
!13293 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2210, file: !2210, line: 996, type: !2821, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13294)
!13294 = !{!13295, !13297}
!13295 = !DILocalVariable(name: "__i", scope: !13296, file: !2210, line: 998, type: !12048)
!13296 = distinct !DILexicalBlock(scope: !13293, file: !2210, line: 998, column: 2)
!13297 = !DILocalVariable(name: "__key", scope: !13296, file: !2210, line: 998, type: !12048)
!13298 = !DILocation(line: 0, scope: !13296)
!13299 = !DILocation(line: 0, scope: !12056, inlinedAt: !13300)
!13300 = distinct !DILocation(line: 998, column: 2, scope: !13296)
!13301 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13302)
!13302 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13300)
!13303 = !DILocation(line: 0, scope: !12065, inlinedAt: !13302)
!13304 = !DILocation(line: 1002, column: 5, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13306, file: !2210, line: 998, column: 26)
!13306 = distinct !DILexicalBlock(scope: !13296, file: !2210, line: 998, column: 2)
!13307 = !DILocation(line: 1002, column: 20, scope: !13305)
!13308 = !DILocation(line: 1002, column: 3, scope: !13305)
!13309 = !DILocation(line: 1003, column: 3, scope: !13305)
!13310 = !DILocation(line: 0, scope: !12083, inlinedAt: !13311)
!13311 = distinct !DILocation(line: 998, column: 2, scope: !13306)
!13312 = !DILocation(line: 0, scope: !12091, inlinedAt: !13313)
!13313 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13311)
!13314 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13313)
!13315 = !DILocation(line: 1011, column: 2, scope: !13293)
!13316 = !DILocation(line: 1012, column: 1, scope: !13293)
!13317 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2210, file: !2210, line: 1014, type: !12364, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13318 = !DILocation(line: 1028, column: 25, scope: !13317)
!13319 = !DILocation(line: 1028, column: 2, scope: !13317)
!13320 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2210, file: !2210, line: 1155, type: !13321, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13323)
!13321 = !DISubroutineType(types: !13322)
!13322 = !{!157, !2134, !2134}
!13323 = !{!13324, !13325, !13326, !13327, !13328}
!13324 = !DILocalVariable(name: "a", arg: 1, scope: !13320, file: !2210, line: 1155, type: !2134)
!13325 = !DILocalVariable(name: "b", arg: 2, scope: !13320, file: !2210, line: 1155, type: !2134)
!13326 = !DILocalVariable(name: "thread_a", scope: !13320, file: !2210, line: 1157, type: !2105)
!13327 = !DILocalVariable(name: "thread_b", scope: !13320, file: !2210, line: 1157, type: !2105)
!13328 = !DILocalVariable(name: "cmp", scope: !13320, file: !2210, line: 1158, type: !595)
!13329 = !DILocation(line: 0, scope: !13320)
!13330 = !DILocation(line: 1160, column: 13, scope: !13320)
!13331 = !DILocation(line: 1161, column: 13, scope: !13320)
!13332 = !DILocation(line: 1163, column: 8, scope: !13320)
!13333 = !DILocation(line: 1165, column: 10, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13320, file: !2210, line: 1165, column: 6)
!13335 = !DILocation(line: 1165, column: 6, scope: !13320)
!13336 = !DILocation(line: 1167, column: 17, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13334, file: !2210, line: 1167, column: 13)
!13338 = !DILocation(line: 1167, column: 13, scope: !13334)
!13339 = !DILocation(line: 1170, column: 25, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13337, file: !2210, line: 1169, column: 9)
!13341 = !DILocation(line: 1170, column: 52, scope: !13340)
!13342 = !DILocation(line: 1170, column: 35, scope: !13340)
!13343 = !DILocation(line: 1170, column: 3, scope: !13340)
!13344 = !DILocation(line: 0, scope: !13334)
!13345 = !DILocation(line: 1173, column: 1, scope: !13320)
!13346 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2210, file: !2210, line: 1175, type: !13347, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13362)
!13347 = !DISubroutineType(types: !13348)
!13348 = !{null, !13349, !2105}
!13349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13350, size: 32)
!13350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13351, line: 37, size: 128, elements: !13352)
!13351 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13352 = !{!13353, !13361}
!13353 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13350, file: !13351, line: 38, baseType: !13354, size: 96)
!13354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !237, line: 83, size: 96, elements: !13355)
!13355 = !{!13356, !13357, !13360}
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13354, file: !237, line: 84, baseType: !2134, size: 32)
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13354, file: !237, line: 85, baseType: !13358, size: 32, offset: 32)
!13358 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !237, line: 81, baseType: !13359)
!13359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13321, size: 32)
!13360 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13354, file: !237, line: 86, baseType: !103, size: 32, offset: 64)
!13361 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13350, file: !13351, line: 39, baseType: !103, size: 32, offset: 96)
!13362 = !{!13363, !13364, !13365, !13366, !13375}
!13363 = !DILocalVariable(name: "pq", arg: 1, scope: !13346, file: !2210, line: 1175, type: !13349)
!13364 = !DILocalVariable(name: "thread", arg: 2, scope: !13346, file: !2210, line: 1175, type: !2105)
!13365 = !DILocalVariable(name: "t", scope: !13346, file: !2210, line: 1177, type: !2105)
!13366 = !DILocalVariable(name: "__f", scope: !13367, file: !2210, line: 1190, type: !13370)
!13367 = distinct !DILexicalBlock(scope: !13368, file: !2210, line: 1190, column: 3)
!13368 = distinct !DILexicalBlock(scope: !13369, file: !2210, line: 1189, column: 27)
!13369 = distinct !DILexicalBlock(scope: !13346, file: !2210, line: 1189, column: 6)
!13370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !237, line: 155, size: 96, elements: !13371)
!13371 = !{!13372, !13373, !13374}
!13372 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13370, file: !237, line: 156, baseType: !2205, size: 32)
!13373 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13370, file: !237, line: 157, baseType: !1755, size: 32, offset: 32)
!13374 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13370, file: !237, line: 158, baseType: !595, size: 32, offset: 64)
!13375 = !DILocalVariable(name: "n", scope: !13376, file: !2210, line: 1190, type: !2134)
!13376 = distinct !DILexicalBlock(scope: !13377, file: !2210, line: 1190, column: 3)
!13377 = distinct !DILexicalBlock(scope: !13367, file: !2210, line: 1190, column: 3)
!13378 = !DILocation(line: 0, scope: !13346)
!13379 = !DILocation(line: 1181, column: 31, scope: !13346)
!13380 = !DILocation(line: 1181, column: 45, scope: !13346)
!13381 = !DILocation(line: 1181, column: 15, scope: !13346)
!13382 = !DILocation(line: 1181, column: 25, scope: !13346)
!13383 = !DILocation(line: 1189, column: 11, scope: !13369)
!13384 = !DILocation(line: 1189, column: 7, scope: !13369)
!13385 = !DILocation(line: 1189, column: 6, scope: !13346)
!13386 = !DILocation(line: 1190, column: 3, scope: !13367)
!13387 = !DILocation(line: 1190, column: 3, scope: !13376)
!13388 = !DILocation(line: 0, scope: !13376)
!13389 = !DILocation(line: 1190, column: 3, scope: !13377)
!13390 = !DILocation(line: 1193, column: 2, scope: !13368)
!13391 = !DILocation(line: 1191, column: 42, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13377, file: !2210, line: 1190, column: 54)
!13393 = !DILocation(line: 1191, column: 12, scope: !13392)
!13394 = !DILocation(line: 1191, column: 22, scope: !13392)
!13395 = distinct !{!13395, !13386, !13396}
!13396 = !DILocation(line: 1192, column: 3, scope: !13367)
!13397 = !DILocation(line: 1195, column: 17, scope: !13346)
!13398 = !DILocation(line: 1195, column: 37, scope: !13346)
!13399 = !DILocation(line: 1195, column: 2, scope: !13346)
!13400 = !DILocation(line: 1196, column: 1, scope: !13346)
!13401 = !DISubprogram(name: "z_rb_foreach_next", scope: !237, file: !237, line: 176, type: !13402, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13402 = !DISubroutineType(types: !13403)
!13403 = !{!2134, !13404, !13405}
!13404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13354, size: 32)
!13405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13370, size: 32)
!13406 = !DISubprogram(name: "rb_insert", scope: !237, file: !237, line: 105, type: !13407, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13407 = !DISubroutineType(types: !13408)
!13408 = !{null, !13404, !2134}
!13409 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2210, file: !2210, line: 1198, type: !13347, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13410)
!13410 = !{!13411, !13412}
!13411 = !DILocalVariable(name: "pq", arg: 1, scope: !13409, file: !2210, line: 1198, type: !13349)
!13412 = !DILocalVariable(name: "thread", arg: 2, scope: !13409, file: !2210, line: 1198, type: !2105)
!13413 = !DILocation(line: 0, scope: !13409)
!13414 = !DILocation(line: 1202, column: 17, scope: !13409)
!13415 = !DILocation(line: 1202, column: 37, scope: !13409)
!13416 = !DILocation(line: 1202, column: 2, scope: !13409)
!13417 = !DILocation(line: 1204, column: 16, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13409, file: !2210, line: 1204, column: 6)
!13419 = !DILocation(line: 1204, column: 7, scope: !13418)
!13420 = !DILocation(line: 1204, column: 6, scope: !13409)
!13421 = !DILocation(line: 1205, column: 7, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13418, file: !2210, line: 1204, column: 22)
!13423 = !DILocation(line: 1205, column: 22, scope: !13422)
!13424 = !DILocation(line: 1206, column: 2, scope: !13422)
!13425 = !DILocation(line: 1207, column: 1, scope: !13409)
!13426 = !DISubprogram(name: "rb_remove", scope: !237, file: !237, line: 110, type: !13407, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13427 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2210, file: !2210, line: 1209, type: !13428, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13430)
!13428 = !DISubroutineType(types: !13429)
!13429 = !{!2105, !13349}
!13430 = !{!13431, !13432, !13433}
!13431 = !DILocalVariable(name: "pq", arg: 1, scope: !13427, file: !2210, line: 1209, type: !13349)
!13432 = !DILocalVariable(name: "thread", scope: !13427, file: !2210, line: 1211, type: !2105)
!13433 = !DILocalVariable(name: "n", scope: !13427, file: !2210, line: 1212, type: !2134)
!13434 = !DILocation(line: 0, scope: !13427)
!13435 = !DILocation(line: 1212, column: 37, scope: !13427)
!13436 = !DILocation(line: 1212, column: 21, scope: !13427)
!13437 = !DILocation(line: 1217, column: 2, scope: !13427)
!13438 = distinct !DISubprogram(name: "rb_get_min", scope: !237, file: !237, line: 115, type: !13439, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13441)
!13439 = !DISubroutineType(types: !13440)
!13440 = !{!2134, !13404}
!13441 = !{!13442}
!13442 = !DILocalVariable(name: "tree", arg: 1, scope: !13438, file: !237, line: 115, type: !13404)
!13443 = !DILocation(line: 0, scope: !13438)
!13444 = !DILocation(line: 117, column: 9, scope: !13438)
!13445 = !DILocation(line: 117, column: 2, scope: !13438)
!13446 = !DISubprogram(name: "z_rb_get_minmax", scope: !237, file: !237, line: 100, type: !13447, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13447 = !DISubroutineType(types: !13448)
!13448 = !{!2134, !13404, !154}
!13449 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2210, file: !2210, line: 1246, type: !13450, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13460)
!13450 = !DISubroutineType(types: !13451)
!13451 = !{!2105, !13452}
!13452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13453, size: 32)
!13453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13351, line: 53, size: 2080, elements: !13454)
!13454 = !{!13455, !13459}
!13455 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13453, file: !13351, line: 54, baseType: !13456, size: 2048)
!13456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2141, size: 2048, elements: !13457)
!13457 = !{!13458}
!13458 = !DISubrange(count: 32)
!13459 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13453, file: !13351, line: 55, baseType: !32, size: 32, offset: 2048)
!13460 = !{!13461, !13462, !13463, !13464}
!13461 = !DILocalVariable(name: "pq", arg: 1, scope: !13449, file: !2210, line: 1246, type: !13452)
!13462 = !DILocalVariable(name: "thread", scope: !13449, file: !2210, line: 1252, type: !2105)
!13463 = !DILocalVariable(name: "l", scope: !13449, file: !2210, line: 1253, type: !12259)
!13464 = !DILocalVariable(name: "n", scope: !13449, file: !2210, line: 1254, type: !2206)
!13465 = !DILocation(line: 0, scope: !13449)
!13466 = !DILocation(line: 1248, column: 11, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13449, file: !2210, line: 1248, column: 6)
!13468 = !DILocation(line: 1248, column: 7, scope: !13467)
!13469 = !DILocation(line: 1248, column: 6, scope: !13449)
!13470 = !DILocation(line: 1253, column: 31, scope: !13449)
!13471 = !DILocation(line: 1253, column: 20, scope: !13449)
!13472 = !DILocation(line: 1254, column: 19, scope: !13449)
!13473 = !DILocation(line: 1260, column: 1, scope: !13449)
!13474 = distinct !DISubprogram(name: "z_unpend_all", scope: !2210, file: !2210, line: 1262, type: !13475, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13477)
!13475 = !DISubroutineType(types: !13476)
!13476 = !{!103, !2136}
!13477 = !{!13478, !13479, !13480}
!13478 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13474, file: !2210, line: 1262, type: !2136)
!13479 = !DILocalVariable(name: "need_sched", scope: !13474, file: !2210, line: 1264, type: !103)
!13480 = !DILocalVariable(name: "thread", scope: !13474, file: !2210, line: 1265, type: !2105)
!13481 = !DILocation(line: 0, scope: !13474)
!13482 = !DILocation(line: 1267, column: 19, scope: !13474)
!13483 = !DILocation(line: 1267, column: 41, scope: !13474)
!13484 = !DILocation(line: 1267, column: 2, scope: !13474)
!13485 = !DILocation(line: 1268, column: 3, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13474, file: !2210, line: 1267, column: 50)
!13487 = !DILocation(line: 1269, column: 3, scope: !13486)
!13488 = distinct !{!13488, !13484, !13489}
!13489 = !DILocation(line: 1271, column: 2, scope: !13474)
!13490 = !DILocation(line: 1273, column: 2, scope: !13474)
!13491 = distinct !DISubprogram(name: "z_waitq_head", scope: !11654, file: !11654, line: 52, type: !13107, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13492)
!13492 = !{!13493}
!13493 = !DILocalVariable(name: "w", arg: 1, scope: !13491, file: !11654, line: 52, type: !2136)
!13494 = !DILocation(line: 0, scope: !13491)
!13495 = !DILocation(line: 54, column: 52, scope: !13491)
!13496 = !DILocation(line: 54, column: 28, scope: !13491)
!13497 = !DILocation(line: 54, column: 9, scope: !13491)
!13498 = !DILocation(line: 54, column: 2, scope: !13491)
!13499 = distinct !DISubprogram(name: "init_ready_q", scope: !2210, file: !2210, line: 1276, type: !13500, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13507)
!13500 = !DISubroutineType(types: !13501)
!13501 = !{null, !13502}
!13502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13503, size: 32)
!13503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !13504)
!13504 = !{!13505, !13506}
!13505 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13503, file: !247, line: 86, baseType: !2105, size: 32)
!13506 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13503, file: !247, line: 90, baseType: !2141, size: 64, offset: 32)
!13507 = !{!13508}
!13508 = !DILocalVariable(name: "rq", arg: 1, scope: !13499, file: !2210, line: 1276, type: !13502)
!13509 = !DILocation(line: 0, scope: !13499)
!13510 = !DILocation(line: 1289, column: 22, scope: !13499)
!13511 = !DILocation(line: 1289, column: 2, scope: !13499)
!13512 = !DILocation(line: 1291, column: 1, scope: !13499)
!13513 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !13514, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13516)
!13514 = !DISubroutineType(types: !13515)
!13515 = !{null, !12259}
!13516 = !{!13517}
!13517 = !DILocalVariable(name: "list", arg: 1, scope: !13513, file: !221, line: 197, type: !12259)
!13518 = !DILocation(line: 0, scope: !13513)
!13519 = !DILocation(line: 199, column: 8, scope: !13513)
!13520 = !DILocation(line: 199, column: 13, scope: !13513)
!13521 = !DILocation(line: 200, column: 8, scope: !13513)
!13522 = !DILocation(line: 200, column: 13, scope: !13513)
!13523 = !DILocation(line: 201, column: 1, scope: !13513)
!13524 = distinct !DISubprogram(name: "z_sched_init", scope: !2210, file: !2210, line: 1293, type: !2821, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13525 = !DILocation(line: 1302, column: 2, scope: !13524)
!13526 = !DILocation(line: 1306, column: 2, scope: !13524)
!13527 = !DILocation(line: 1309, column: 1, scope: !13524)
!13528 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2210, file: !2210, line: 1311, type: !13529, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13532)
!13529 = !DISubroutineType(types: !13530)
!13530 = !{!103, !13531}
!13531 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !2105)
!13532 = !{!13533}
!13533 = !DILocalVariable(name: "thread", arg: 1, scope: !13528, file: !2210, line: 1311, type: !13531)
!13534 = !DILocation(line: 0, scope: !13528)
!13535 = !DILocation(line: 1313, column: 22, scope: !13528)
!13536 = !DILocation(line: 1313, column: 9, scope: !13528)
!13537 = !DILocation(line: 1313, column: 2, scope: !13528)
!13538 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2210, file: !2210, line: 1325, type: !13539, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13541)
!13539 = !DISubroutineType(types: !13540)
!13540 = !{null, !13531, !103}
!13541 = !{!13542, !13543, !13544}
!13542 = !DILocalVariable(name: "thread", arg: 1, scope: !13538, file: !2210, line: 1325, type: !13531)
!13543 = !DILocalVariable(name: "prio", arg: 2, scope: !13538, file: !2210, line: 1325, type: !103)
!13544 = !DILocalVariable(name: "th", scope: !13538, file: !2210, line: 1334, type: !2105)
!13545 = !DILocation(line: 0, scope: !13538)
!13546 = !DILocation(line: 1336, column: 2, scope: !13538)
!13547 = !DILocation(line: 1337, column: 1, scope: !13538)
!13548 = distinct !DISubprogram(name: "k_can_yield", scope: !2210, file: !2210, line: 1384, type: !5591, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13549 = !DILocation(line: 1386, column: 11, scope: !13548)
!13550 = !DILocation(line: 1386, column: 29, scope: !13548)
!13551 = !DILocation(line: 1386, column: 32, scope: !13548)
!13552 = !DILocation(line: 1386, column: 46, scope: !13548)
!13553 = !DILocation(line: 1387, column: 28, scope: !13548)
!13554 = !DILocation(line: 1387, column: 4, scope: !13548)
!13555 = !DILocation(line: 1386, column: 2, scope: !13548)
!13556 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !307, file: !307, line: 989, type: !5591, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13557 = !DILocation(line: 993, column: 10, scope: !13556)
!13558 = !DILocation(line: 993, column: 2, scope: !13556)
!13559 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2210, file: !2210, line: 1390, type: !2821, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13560)
!13560 = !{!13561}
!13561 = !DILocalVariable(name: "key", scope: !13559, file: !2210, line: 1396, type: !12048)
!13562 = !DILocation(line: 0, scope: !12056, inlinedAt: !13563)
!13563 = distinct !DILocation(line: 1396, column: 25, scope: !13559)
!13564 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13565)
!13565 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13563)
!13566 = !DILocation(line: 0, scope: !12065, inlinedAt: !13565)
!13567 = !DILocation(line: 0, scope: !13559)
!13568 = !DILocation(line: 1400, column: 18, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13570, file: !2210, line: 1399, column: 36)
!13570 = distinct !DILexicalBlock(scope: !13559, file: !2210, line: 1398, column: 6)
!13571 = !DILocation(line: 0, scope: !12225, inlinedAt: !13572)
!13572 = distinct !DILocation(line: 1400, column: 3, scope: !13569)
!13573 = !DILocation(line: 266, column: 15, scope: !12225, inlinedAt: !13572)
!13574 = !DILocation(line: 266, column: 28, scope: !12225, inlinedAt: !13572)
!13575 = !DILocation(line: 0, scope: !12233, inlinedAt: !13576)
!13576 = distinct !DILocation(line: 268, column: 3, scope: !12237, inlinedAt: !13572)
!13577 = !DILocation(line: 234, column: 2, scope: !12233, inlinedAt: !13576)
!13578 = !DILocation(line: 1402, column: 15, scope: !13559)
!13579 = !DILocation(line: 0, scope: !12242, inlinedAt: !13580)
!13580 = distinct !DILocation(line: 1402, column: 2, scope: !13559)
!13581 = !DILocation(line: 252, column: 15, scope: !12242, inlinedAt: !13580)
!13582 = !DILocation(line: 252, column: 28, scope: !12242, inlinedAt: !13580)
!13583 = !DILocation(line: 0, scope: !12249, inlinedAt: !13584)
!13584 = distinct !DILocation(line: 254, column: 3, scope: !12253, inlinedAt: !13580)
!13585 = !DILocation(line: 0, scope: !12256, inlinedAt: !13586)
!13586 = distinct !DILocation(line: 229, column: 2, scope: !12249, inlinedAt: !13584)
!13587 = !DILocation(line: 188, column: 2, scope: !12266, inlinedAt: !13586)
!13588 = !DILocation(line: 188, column: 2, scope: !12268, inlinedAt: !13586)
!13589 = !DILocation(line: 0, scope: !12266, inlinedAt: !13586)
!13590 = !DILocation(line: 189, column: 7, scope: !12271, inlinedAt: !13586)
!13591 = !DILocation(line: 189, column: 35, scope: !12271, inlinedAt: !13586)
!13592 = !DILocation(line: 189, column: 7, scope: !12272, inlinedAt: !13586)
!13593 = !DILocation(line: 191, column: 21, scope: !12276, inlinedAt: !13586)
!13594 = !DILocation(line: 190, column: 4, scope: !12276, inlinedAt: !13586)
!13595 = !DILocation(line: 192, column: 4, scope: !12276, inlinedAt: !13586)
!13596 = distinct !{!13596, !13587, !13597}
!13597 = !DILocation(line: 194, column: 2, scope: !12266, inlinedAt: !13586)
!13598 = !DILocation(line: 196, column: 37, scope: !12256, inlinedAt: !13586)
!13599 = !DILocation(line: 196, column: 2, scope: !12256, inlinedAt: !13586)
!13600 = !DILocation(line: 197, column: 1, scope: !12256, inlinedAt: !13586)
!13601 = !DILocation(line: 1403, column: 2, scope: !13559)
!13602 = !DILocation(line: 0, scope: !12667, inlinedAt: !13603)
!13603 = distinct !DILocation(line: 1404, column: 2, scope: !13559)
!13604 = !DILocation(line: 196, column: 9, scope: !12667, inlinedAt: !13603)
!13605 = !DILocation(line: 1405, column: 1, scope: !13559)
!13606 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2210, file: !2210, line: 1459, type: !13607, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13609)
!13607 = !DISubroutineType(types: !13608)
!13608 = !{!595, !12847}
!13609 = !{!13610, !13611, !13612}
!13610 = !DILocalVariable(name: "timeout", arg: 1, scope: !13606, file: !2210, line: 1459, type: !12847)
!13611 = !DILocalVariable(name: "ticks", scope: !13606, file: !2210, line: 1461, type: !1456)
!13612 = !DILocalVariable(name: "ret", scope: !13606, file: !2210, line: 1480, type: !595)
!13613 = !DILocation(line: 0, scope: !13606)
!13614 = !DILocation(line: 1468, column: 6, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13606, file: !2210, line: 1468, column: 6)
!13616 = !DILocation(line: 1468, column: 6, scope: !13606)
!13617 = !DILocation(line: 1469, column: 20, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13615, file: !2210, line: 1468, column: 40)
!13619 = !DILocation(line: 1469, column: 3, scope: !13618)
!13620 = !DILocation(line: 1473, column: 3, scope: !13618)
!13621 = !DILocation(line: 1478, column: 10, scope: !13606)
!13622 = !DILocation(line: 1480, column: 16, scope: !13606)
!13623 = !DILocation(line: 1485, column: 1, scope: !13606)
!13624 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3245, file: !3245, line: 310, type: !13625, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13627)
!13625 = !DISubroutineType(types: !13626)
!13626 = !{null, !13531}
!13627 = !{!13628}
!13628 = !DILocalVariable(name: "thread", arg: 1, scope: !13624, file: !3245, line: 310, type: !13531)
!13629 = !DILocation(line: 0, scope: !13624)
!13630 = !DILocation(line: 319, column: 2, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13624, file: !3245, line: 319, column: 2)
!13632 = !{i64 2155104188}
!13633 = !DILocation(line: 320, column: 2, scope: !13624)
!13634 = !DILocation(line: 321, column: 1, scope: !13624)
!13635 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2210, file: !2210, line: 1415, type: !13636, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13638)
!13636 = !DISubroutineType(types: !13637)
!13637 = !{!595, !1456}
!13638 = !{!13639, !13640, !13641, !13642}
!13639 = !DILocalVariable(name: "ticks", arg: 1, scope: !13635, file: !2210, line: 1415, type: !1456)
!13640 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13635, file: !2210, line: 1418, type: !121)
!13641 = !DILocalVariable(name: "timeout", scope: !13635, file: !2210, line: 1430, type: !12847)
!13642 = !DILocalVariable(name: "key", scope: !13635, file: !2210, line: 1437, type: !12048)
!13643 = !DILocation(line: 0, scope: !13635)
!13644 = !DILocation(line: 1425, column: 12, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13635, file: !2210, line: 1425, column: 6)
!13646 = !DILocation(line: 1425, column: 6, scope: !13635)
!13647 = !DILocation(line: 1426, column: 3, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13645, file: !2210, line: 1425, column: 18)
!13649 = !DILocation(line: 1427, column: 3, scope: !13648)
!13650 = !DILocation(line: 1431, column: 24, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13635, file: !2210, line: 1431, column: 6)
!13652 = !DILocation(line: 1431, column: 6, scope: !13635)
!13653 = !DILocation(line: 1432, column: 35, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13651, file: !2210, line: 1431, column: 30)
!13655 = !DILocation(line: 1432, column: 27, scope: !13654)
!13656 = !DILocation(line: 1433, column: 2, scope: !13654)
!13657 = !DILocation(line: 1434, column: 27, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13651, file: !2210, line: 1433, column: 9)
!13659 = !DILocation(line: 0, scope: !13651)
!13660 = !DILocation(line: 0, scope: !12056, inlinedAt: !13661)
!13661 = distinct !DILocation(line: 1437, column: 25, scope: !13635)
!13662 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13663)
!13663 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13661)
!13664 = !DILocation(line: 0, scope: !12065, inlinedAt: !13663)
!13665 = !DILocation(line: 1440, column: 20, scope: !13635)
!13666 = !DILocation(line: 1440, column: 18, scope: !13635)
!13667 = !DILocation(line: 1442, column: 2, scope: !13635)
!13668 = !DILocation(line: 1443, column: 23, scope: !13635)
!13669 = !DILocation(line: 1443, column: 2, scope: !13635)
!13670 = !DILocation(line: 1444, column: 29, scope: !13635)
!13671 = !DILocation(line: 1444, column: 2, scope: !13635)
!13672 = !DILocation(line: 0, scope: !12667, inlinedAt: !13673)
!13673 = distinct !DILocation(line: 1446, column: 8, scope: !13635)
!13674 = !DILocation(line: 196, column: 9, scope: !12667, inlinedAt: !13673)
!13675 = !DILocation(line: 1450, column: 10, scope: !13635)
!13676 = !DILocation(line: 1450, column: 45, scope: !13635)
!13677 = !DILocation(line: 1450, column: 43, scope: !13635)
!13678 = !DILocation(line: 1451, column: 6, scope: !13635)
!13679 = !DILocation(line: 1457, column: 1, scope: !13635)
!13680 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !11889, file: !11889, line: 1103, type: !11890, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13681)
!13681 = !{!13682}
!13682 = !DILocalVariable(name: "t", arg: 1, scope: !13680, file: !11889, line: 1103, type: !1308)
!13683 = !DILocation(line: 0, scope: !13680)
!13684 = !DILocation(line: 0, scope: !12103, inlinedAt: !13685)
!13685 = distinct !DILocation(line: 1106, column: 9, scope: !13680)
!13686 = !DILocation(line: 139, column: 13, scope: !13687, inlinedAt: !13685)
!13687 = distinct !DILexicalBlock(scope: !13688, file: !11889, line: 138, column: 10)
!13688 = distinct !DILexicalBlock(scope: !13689, file: !11889, line: 136, column: 7)
!13689 = distinct !DILexicalBlock(scope: !12124, file: !11889, line: 134, column: 17)
!13690 = !DILocation(line: 1106, column: 2, scope: !13680)
!13691 = distinct !DISubprogram(name: "k_yield", scope: !3245, file: !3245, line: 140, type: !2821, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13692 = !DILocation(line: 148, column: 2, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13691, file: !3245, line: 148, column: 2)
!13694 = !{i64 2155103508}
!13695 = !DILocation(line: 149, column: 2, scope: !13691)
!13696 = !DILocation(line: 150, column: 1, scope: !13691)
!13697 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2210, file: !2210, line: 1495, type: !13698, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13700)
!13698 = !DISubroutineType(types: !13699)
!13699 = !{!595, !103}
!13700 = !{!13701, !13702}
!13701 = !DILocalVariable(name: "us", arg: 1, scope: !13697, file: !2210, line: 1495, type: !103)
!13702 = !DILocalVariable(name: "ticks", scope: !13697, file: !2210, line: 1497, type: !595)
!13703 = !DILocation(line: 0, scope: !13697)
!13704 = !DILocation(line: 1501, column: 31, scope: !13697)
!13705 = !DILocation(line: 1501, column: 10, scope: !13697)
!13706 = !DILocation(line: 1502, column: 23, scope: !13697)
!13707 = !DILocation(line: 1502, column: 10, scope: !13697)
!13708 = !DILocation(line: 1506, column: 31, scope: !13697)
!13709 = !DILocation(line: 1506, column: 9, scope: !13697)
!13710 = !DILocation(line: 1506, column: 2, scope: !13697)
!13711 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !11889, file: !11889, line: 571, type: !11890, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13712)
!13712 = !{!13713}
!13713 = !DILocalVariable(name: "t", arg: 1, scope: !13711, file: !11889, line: 571, type: !1308)
!13714 = !DILocation(line: 0, scope: !13711)
!13715 = !DILocation(line: 0, scope: !12103, inlinedAt: !13716)
!13716 = distinct !DILocation(line: 574, column: 9, scope: !13711)
!13717 = !DILocation(line: 135, column: 5, scope: !13689, inlinedAt: !13716)
!13718 = !DILocation(line: 139, column: 13, scope: !13687, inlinedAt: !13716)
!13719 = !DILocation(line: 574, column: 2, scope: !13711)
!13720 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !11889, file: !11889, line: 1187, type: !11890, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13721)
!13721 = !{!13722}
!13722 = !DILocalVariable(name: "t", arg: 1, scope: !13720, file: !11889, line: 1187, type: !1308)
!13723 = !DILocation(line: 0, scope: !13720)
!13724 = !DILocation(line: 0, scope: !12103, inlinedAt: !13725)
!13725 = distinct !DILocation(line: 1190, column: 9, scope: !13720)
!13726 = !DILocation(line: 145, column: 13, scope: !13727, inlinedAt: !13725)
!13727 = distinct !DILexicalBlock(scope: !12121, file: !11889, line: 144, column: 10)
!13728 = !DILocation(line: 1190, column: 2, scope: !13720)
!13729 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2210, file: !2210, line: 1517, type: !13625, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13730)
!13730 = !{!13731}
!13731 = !DILocalVariable(name: "thread", arg: 1, scope: !13729, file: !2210, line: 1517, type: !13531)
!13732 = !DILocation(line: 0, scope: !13729)
!13733 = !DILocation(line: 1521, column: 6, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13729, file: !2210, line: 1521, column: 6)
!13735 = !DILocation(line: 1521, column: 6, scope: !13729)
!13736 = !DILocation(line: 1525, column: 6, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13729, file: !2210, line: 1525, column: 6)
!13738 = !DILocation(line: 1525, column: 37, scope: !13737)
!13739 = !DILocation(line: 1525, column: 6, scope: !13729)
!13740 = !DILocation(line: 1527, column: 20, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13742, file: !2210, line: 1527, column: 7)
!13742 = distinct !DILexicalBlock(scope: !13737, file: !2210, line: 1525, column: 42)
!13743 = !DILocation(line: 1527, column: 33, scope: !13741)
!13744 = !DILocation(line: 1527, column: 7, scope: !13742)
!13745 = !DILocation(line: 1532, column: 2, scope: !13729)
!13746 = !DILocation(line: 1533, column: 2, scope: !13729)
!13747 = !DILocation(line: 1031, column: 3, scope: !12700, inlinedAt: !13748)
!13748 = distinct !DILocation(line: 48, column: 10, scope: !12704, inlinedAt: !13749)
!13749 = distinct !DILocation(line: 1537, column: 7, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13729, file: !2210, line: 1537, column: 6)
!13751 = !DILocation(line: 0, scope: !12700, inlinedAt: !13748)
!13752 = !DILocation(line: 48, column: 9, scope: !12704, inlinedAt: !13749)
!13753 = !DILocation(line: 1537, column: 6, scope: !13729)
!13754 = !DILocation(line: 1538, column: 3, scope: !13755)
!13755 = distinct !DILexicalBlock(scope: !13750, file: !2210, line: 1537, column: 25)
!13756 = !DILocation(line: 1539, column: 2, scope: !13755)
!13757 = !DILocation(line: 1540, column: 1, scope: !13729)
!13758 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11328, file: !11328, line: 101, type: !12174, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13759)
!13759 = !{!13760}
!13760 = !DILocalVariable(name: "thread", arg: 1, scope: !13758, file: !11328, line: 101, type: !2105)
!13761 = !DILocation(line: 0, scope: !13758)
!13762 = !DILocation(line: 103, column: 23, scope: !13758)
!13763 = !DILocation(line: 103, column: 36, scope: !13758)
!13764 = !DILocation(line: 103, column: 55, scope: !13758)
!13765 = !DILocation(line: 103, column: 2, scope: !13758)
!13766 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2210, file: !2210, line: 1567, type: !13767, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13769)
!13767 = !DISubroutineType(types: !13768)
!13768 = !{!13531}
!13769 = !{!13770}
!13770 = !DILocalVariable(name: "ret", scope: !13766, file: !2210, line: 1577, type: !13531)
!13771 = !DILocation(line: 1577, column: 30, scope: !13766)
!13772 = !DILocation(line: 0, scope: !13766)
!13773 = !DILocation(line: 1582, column: 2, scope: !13766)
!13774 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2210, file: !2210, line: 1593, type: !5866, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13775 = !DILocation(line: 1031, column: 3, scope: !12700, inlinedAt: !13776)
!13776 = distinct !DILocation(line: 48, column: 10, scope: !12704, inlinedAt: !13777)
!13777 = distinct !DILocation(line: 1595, column: 10, scope: !13774)
!13778 = !DILocation(line: 0, scope: !12700, inlinedAt: !13776)
!13779 = !DILocation(line: 48, column: 9, scope: !12704, inlinedAt: !13777)
!13780 = !DILocation(line: 1595, column: 27, scope: !13774)
!13781 = !DILocation(line: 1595, column: 41, scope: !13774)
!13782 = !DILocation(line: 1595, column: 30, scope: !13774)
!13783 = !DILocation(line: 1595, column: 2, scope: !13774)
!13784 = distinct !DISubprogram(name: "z_thread_abort", scope: !2210, file: !2210, line: 1725, type: !12014, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13785)
!13785 = !{!13786, !13787}
!13786 = !DILocalVariable(name: "thread", arg: 1, scope: !13784, file: !2210, line: 1725, type: !2105)
!13787 = !DILocalVariable(name: "key", scope: !13784, file: !2210, line: 1727, type: !12048)
!13788 = !DILocation(line: 0, scope: !13784)
!13789 = !DILocation(line: 0, scope: !12056, inlinedAt: !13790)
!13790 = distinct !DILocation(line: 1727, column: 25, scope: !13784)
!13791 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13792)
!13792 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13790)
!13793 = !DILocation(line: 0, scope: !12065, inlinedAt: !13792)
!13794 = !DILocation(line: 1729, column: 20, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13784, file: !2210, line: 1729, column: 6)
!13796 = !DILocation(line: 1729, column: 33, scope: !13795)
!13797 = !DILocation(line: 1729, column: 48, scope: !13795)
!13798 = !DILocation(line: 1729, column: 6, scope: !13784)
!13799 = !DILocation(line: 0, scope: !12083, inlinedAt: !13800)
!13800 = distinct !DILocation(line: 1730, column: 3, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13795, file: !2210, line: 1729, column: 54)
!13802 = !DILocation(line: 0, scope: !12091, inlinedAt: !13803)
!13803 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13800)
!13804 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13803)
!13805 = !DILocation(line: 1732, column: 3, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13801, file: !2210, line: 1732, column: 3)
!13807 = !{i64 2155840918, i64 2155840934, i64 2155840960, i64 2155840988, i64 2155841008}
!13808 = !DILocation(line: 1733, column: 3, scope: !13801)
!13809 = !DILocation(line: 1736, column: 20, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13784, file: !2210, line: 1736, column: 6)
!13811 = !DILocation(line: 1736, column: 33, scope: !13810)
!13812 = !DILocation(line: 1736, column: 49, scope: !13810)
!13813 = !DILocation(line: 1736, column: 6, scope: !13784)
!13814 = !DILocation(line: 0, scope: !12083, inlinedAt: !13815)
!13815 = distinct !DILocation(line: 1737, column: 3, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13810, file: !2210, line: 1736, column: 56)
!13817 = !DILocation(line: 0, scope: !12091, inlinedAt: !13818)
!13818 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13815)
!13819 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13818)
!13820 = !DILocation(line: 1738, column: 3, scope: !13816)
!13821 = !DILocation(line: 1775, column: 2, scope: !13784)
!13822 = !DILocation(line: 1776, column: 16, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13784, file: !2210, line: 1776, column: 6)
!13824 = !DILocation(line: 1776, column: 13, scope: !13823)
!13825 = !DILocation(line: 1776, column: 25, scope: !13823)
!13826 = !DILocation(line: 1031, column: 3, scope: !12700, inlinedAt: !13827)
!13827 = distinct !DILocation(line: 48, column: 10, scope: !12704, inlinedAt: !13828)
!13828 = distinct !DILocation(line: 1776, column: 29, scope: !13823)
!13829 = !DILocation(line: 0, scope: !12700, inlinedAt: !13827)
!13830 = !DILocation(line: 48, column: 9, scope: !12704, inlinedAt: !13828)
!13831 = !DILocation(line: 1776, column: 6, scope: !13784)
!13832 = !DILocation(line: 0, scope: !12667, inlinedAt: !13833)
!13833 = distinct !DILocation(line: 1777, column: 3, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13823, file: !2210, line: 1776, column: 47)
!13835 = !DILocation(line: 196, column: 9, scope: !12667, inlinedAt: !13833)
!13836 = !DILocation(line: 1779, column: 2, scope: !13834)
!13837 = !DILocation(line: 0, scope: !12083, inlinedAt: !13838)
!13838 = distinct !DILocation(line: 1780, column: 2, scope: !13784)
!13839 = !DILocation(line: 0, scope: !12091, inlinedAt: !13840)
!13840 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13838)
!13841 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13840)
!13842 = !DILocation(line: 1781, column: 1, scope: !13784)
!13843 = distinct !DISubprogram(name: "end_thread", scope: !2210, file: !2210, line: 1690, type: !12014, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13844)
!13844 = !{!13845}
!13845 = !DILocalVariable(name: "thread", arg: 1, scope: !13843, file: !2210, line: 1690, type: !2105)
!13846 = !DILocation(line: 0, scope: !13843)
!13847 = !DILocation(line: 1695, column: 20, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13843, file: !2210, line: 1695, column: 6)
!13849 = !DILocation(line: 1695, column: 33, scope: !13848)
!13850 = !DILocation(line: 1695, column: 49, scope: !13848)
!13851 = !DILocation(line: 1695, column: 6, scope: !13843)
!13852 = !DILocation(line: 1697, column: 29, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13848, file: !2210, line: 1695, column: 56)
!13854 = !DILocation(line: 1698, column: 7, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13853, file: !2210, line: 1698, column: 7)
!13856 = !DILocation(line: 1698, column: 7, scope: !13853)
!13857 = !DILocation(line: 0, scope: !12225, inlinedAt: !13858)
!13858 = distinct !DILocation(line: 1699, column: 4, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13855, file: !2210, line: 1698, column: 35)
!13860 = !DILocation(line: 266, column: 28, scope: !12225, inlinedAt: !13858)
!13861 = !DILocation(line: 0, scope: !12233, inlinedAt: !13862)
!13862 = distinct !DILocation(line: 268, column: 3, scope: !12237, inlinedAt: !13858)
!13863 = !DILocation(line: 234, column: 2, scope: !12233, inlinedAt: !13862)
!13864 = !DILocation(line: 1700, column: 3, scope: !13859)
!13865 = !DILocation(line: 1701, column: 20, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13853, file: !2210, line: 1701, column: 7)
!13867 = !DILocation(line: 1701, column: 30, scope: !13866)
!13868 = !DILocation(line: 1701, column: 7, scope: !13853)
!13869 = !DILocation(line: 1702, column: 4, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13866, file: !2210, line: 1701, column: 39)
!13871 = !DILocation(line: 1703, column: 3, scope: !13870)
!13872 = !DILocation(line: 1704, column: 9, scope: !13853)
!13873 = !DILocation(line: 1705, column: 23, scope: !13853)
!13874 = !DILocation(line: 1705, column: 3, scope: !13853)
!13875 = !DILocation(line: 1706, column: 3, scope: !13853)
!13876 = !DILocation(line: 1722, column: 2, scope: !13853)
!13877 = !DILocation(line: 1723, column: 1, scope: !13843)
!13878 = distinct !DISubprogram(name: "unpend_all", scope: !2210, file: !2210, line: 1674, type: !13879, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13881)
!13879 = !DISubroutineType(types: !13880)
!13880 = !{null, !2136}
!13881 = !{!13882, !13883}
!13882 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13878, file: !2210, line: 1674, type: !2136)
!13883 = !DILocalVariable(name: "thread", scope: !13878, file: !2210, line: 1676, type: !2105)
!13884 = !DILocation(line: 0, scope: !13878)
!13885 = !DILocation(line: 1678, column: 19, scope: !13878)
!13886 = !DILocation(line: 1678, column: 41, scope: !13878)
!13887 = !DILocation(line: 1678, column: 2, scope: !13878)
!13888 = !DILocation(line: 1679, column: 3, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13878, file: !2210, line: 1678, column: 50)
!13890 = !DILocation(line: 1680, column: 9, scope: !13889)
!13891 = !DILocalVariable(name: "thread", arg: 1, scope: !13892, file: !11348, line: 65, type: !2105)
!13892 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11348, file: !11348, line: 65, type: !13893, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13895)
!13893 = !DISubroutineType(types: !13894)
!13894 = !{null, !2105, !32}
!13895 = !{!13891, !13896}
!13896 = !DILocalVariable(name: "value", arg: 2, scope: !13892, file: !11348, line: 65, type: !32)
!13897 = !DILocation(line: 0, scope: !13892, inlinedAt: !13898)
!13898 = distinct !DILocation(line: 1681, column: 3, scope: !13889)
!13899 = !DILocation(line: 67, column: 15, scope: !13892, inlinedAt: !13898)
!13900 = !DILocation(line: 67, column: 33, scope: !13892, inlinedAt: !13898)
!13901 = !DILocation(line: 1682, column: 3, scope: !13889)
!13902 = distinct !{!13902, !13887, !13903}
!13903 = !DILocation(line: 1683, column: 2, scope: !13878)
!13904 = !DILocation(line: 1684, column: 1, scope: !13878)
!13905 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2210, file: !2210, line: 1794, type: !13906, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13908)
!13906 = !DISubroutineType(types: !13907)
!13907 = !{!103, !2105, !12847}
!13908 = !{!13909, !13910, !13911, !13912}
!13909 = !DILocalVariable(name: "thread", arg: 1, scope: !13905, file: !2210, line: 1794, type: !2105)
!13910 = !DILocalVariable(name: "timeout", arg: 2, scope: !13905, file: !2210, line: 1794, type: !12847)
!13911 = !DILocalVariable(name: "key", scope: !13905, file: !2210, line: 1796, type: !12048)
!13912 = !DILocalVariable(name: "ret", scope: !13905, file: !2210, line: 1797, type: !103)
!13913 = !DILocation(line: 0, scope: !13905)
!13914 = !DILocation(line: 0, scope: !12056, inlinedAt: !13915)
!13915 = distinct !DILocation(line: 1796, column: 25, scope: !13905)
!13916 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13917)
!13917 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13915)
!13918 = !DILocation(line: 0, scope: !12065, inlinedAt: !13917)
!13919 = !DILocation(line: 1801, column: 20, scope: !13920)
!13920 = distinct !DILexicalBlock(scope: !13905, file: !2210, line: 1801, column: 6)
!13921 = !DILocation(line: 1801, column: 33, scope: !13920)
!13922 = !DILocation(line: 1801, column: 49, scope: !13920)
!13923 = !DILocation(line: 1801, column: 6, scope: !13905)
!13924 = !DILocation(line: 1803, column: 13, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13920, file: !2210, line: 1803, column: 13)
!13926 = !DILocation(line: 1803, column: 13, scope: !13920)
!13927 = !DILocation(line: 1805, column: 24, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13925, file: !2210, line: 1805, column: 13)
!13929 = !DILocation(line: 1805, column: 21, scope: !13928)
!13930 = !DILocation(line: 1805, column: 34, scope: !13928)
!13931 = !DILocation(line: 1806, column: 20, scope: !13928)
!13932 = !DILocation(line: 1806, column: 44, scope: !13928)
!13933 = !DILocation(line: 1806, column: 30, scope: !13928)
!13934 = !DILocation(line: 1805, column: 13, scope: !13925)
!13935 = !DILocation(line: 1810, column: 42, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13928, file: !2210, line: 1808, column: 9)
!13937 = !DILocation(line: 1810, column: 3, scope: !13936)
!13938 = !DILocation(line: 1811, column: 22, scope: !13936)
!13939 = !DILocation(line: 1811, column: 3, scope: !13936)
!13940 = !DILocation(line: 0, scope: !12667, inlinedAt: !13941)
!13941 = distinct !DILocation(line: 1814, column: 9, scope: !13936)
!13942 = !DILocation(line: 196, column: 9, scope: !12667, inlinedAt: !13941)
!13943 = !DILocation(line: 1817, column: 3, scope: !13936)
!13944 = !DILocation(line: 0, scope: !13920)
!13945 = !DILocation(line: 0, scope: !12083, inlinedAt: !13946)
!13946 = distinct !DILocation(line: 1822, column: 2, scope: !13905)
!13947 = !DILocation(line: 0, scope: !12091, inlinedAt: !13948)
!13948 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13946)
!13949 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !13948)
!13950 = !DILocation(line: 1823, column: 2, scope: !13905)
!13951 = !DILocation(line: 1824, column: 1, scope: !13905)
!13952 = distinct !DISubprogram(name: "z_sched_wake", scope: !2210, file: !2210, line: 1882, type: !13953, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13955)
!13953 = !DISubroutineType(types: !13954)
!13954 = !{!157, !2136, !103, !102}
!13955 = !{!13956, !13957, !13958, !13959, !13960, !13961, !13963}
!13956 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13952, file: !2210, line: 1882, type: !2136)
!13957 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !13952, file: !2210, line: 1882, type: !103)
!13958 = !DILocalVariable(name: "swap_data", arg: 3, scope: !13952, file: !2210, line: 1882, type: !102)
!13959 = !DILocalVariable(name: "thread", scope: !13952, file: !2210, line: 1884, type: !2105)
!13960 = !DILocalVariable(name: "ret", scope: !13952, file: !2210, line: 1885, type: !157)
!13961 = !DILocalVariable(name: "__i", scope: !13962, file: !2210, line: 1887, type: !12048)
!13962 = distinct !DILexicalBlock(scope: !13952, file: !2210, line: 1887, column: 2)
!13963 = !DILocalVariable(name: "__key", scope: !13962, file: !2210, line: 1887, type: !12048)
!13964 = !DILocation(line: 0, scope: !13952)
!13965 = !DILocation(line: 0, scope: !13962)
!13966 = !DILocation(line: 0, scope: !12056, inlinedAt: !13967)
!13967 = distinct !DILocation(line: 1887, column: 2, scope: !13962)
!13968 = !DILocation(line: 55, column: 2, scope: !12065, inlinedAt: !13969)
!13969 = distinct !DILocation(line: 145, column: 10, scope: !12056, inlinedAt: !13967)
!13970 = !DILocation(line: 0, scope: !12065, inlinedAt: !13969)
!13971 = !DILocation(line: 1888, column: 12, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13973, file: !2210, line: 1887, column: 26)
!13973 = distinct !DILexicalBlock(scope: !13962, file: !2210, line: 1887, column: 2)
!13974 = !DILocation(line: 1890, column: 14, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13972, file: !2210, line: 1890, column: 7)
!13976 = !DILocation(line: 1890, column: 7, scope: !13972)
!13977 = !DILocalVariable(name: "thread", arg: 1, scope: !13978, file: !13979, line: 134, type: !2105)
!13978 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13979, file: !13979, line: 134, type: !13980, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13982)
!13979 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13980 = !DISubroutineType(types: !13981)
!13981 = !{null, !2105, !32, !102}
!13982 = !{!13977, !13983, !13984}
!13983 = !DILocalVariable(name: "value", arg: 2, scope: !13978, file: !13979, line: 135, type: !32)
!13984 = !DILocalVariable(name: "data", arg: 3, scope: !13978, file: !13979, line: 136, type: !102)
!13985 = !DILocation(line: 0, scope: !13978, inlinedAt: !13986)
!13986 = distinct !DILocation(line: 1891, column: 4, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13975, file: !2210, line: 1890, column: 23)
!13988 = !DILocation(line: 0, scope: !13892, inlinedAt: !13989)
!13989 = distinct !DILocation(line: 138, column: 2, scope: !13978, inlinedAt: !13986)
!13990 = !DILocation(line: 67, column: 15, scope: !13892, inlinedAt: !13989)
!13991 = !DILocation(line: 67, column: 33, scope: !13892, inlinedAt: !13989)
!13992 = !DILocation(line: 139, column: 15, scope: !13978, inlinedAt: !13986)
!13993 = !DILocation(line: 139, column: 25, scope: !13978, inlinedAt: !13986)
!13994 = !DILocation(line: 1894, column: 4, scope: !13987)
!13995 = !DILocation(line: 1895, column: 10, scope: !13987)
!13996 = !DILocation(line: 1896, column: 4, scope: !13987)
!13997 = !DILocation(line: 1898, column: 3, scope: !13987)
!13998 = !DILocation(line: 0, scope: !12083, inlinedAt: !13999)
!13999 = distinct !DILocation(line: 1887, column: 2, scope: !13973)
!14000 = !DILocation(line: 0, scope: !12091, inlinedAt: !14001)
!14001 = distinct !DILocation(line: 215, column: 2, scope: !12083, inlinedAt: !13999)
!14002 = !DILocation(line: 95, column: 2, scope: !12091, inlinedAt: !14001)
!14003 = !DILocation(line: 1901, column: 2, scope: !13952)
!14004 = distinct !DISubprogram(name: "z_sched_wait", scope: !2210, file: !2210, line: 1904, type: !14005, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !14008)
!14005 = !DISubroutineType(types: !14006)
!14006 = !{!103, !12059, !12048, !2136, !12847, !14007}
!14007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!14008 = !{!14009, !14010, !14011, !14012, !14013, !14014}
!14009 = !DILocalVariable(name: "lock", arg: 1, scope: !14004, file: !2210, line: 1904, type: !12059)
!14010 = !DILocalVariable(name: "key", arg: 2, scope: !14004, file: !2210, line: 1904, type: !12048)
!14011 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14004, file: !2210, line: 1905, type: !2136)
!14012 = !DILocalVariable(name: "timeout", arg: 4, scope: !14004, file: !2210, line: 1905, type: !12847)
!14013 = !DILocalVariable(name: "data", arg: 5, scope: !14004, file: !2210, line: 1905, type: !14007)
!14014 = !DILocalVariable(name: "ret", scope: !14004, file: !2210, line: 1907, type: !103)
!14015 = !DILocation(line: 0, scope: !14004)
!14016 = !DILocation(line: 1907, column: 12, scope: !14004)
!14017 = !DILocation(line: 1909, column: 11, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14004, file: !2210, line: 1909, column: 6)
!14019 = !DILocation(line: 1909, column: 6, scope: !14004)
!14020 = !DILocation(line: 1910, column: 11, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14018, file: !2210, line: 1909, column: 20)
!14022 = !DILocation(line: 1910, column: 26, scope: !14021)
!14023 = !DILocation(line: 1910, column: 9, scope: !14021)
!14024 = !DILocation(line: 1911, column: 2, scope: !14021)
!14025 = !DILocation(line: 1912, column: 2, scope: !14004)
!14026 = distinct !DISubprogram(name: "z_data_copy", scope: !14027, file: !14027, line: 22, type: !2821, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !322)
!14027 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14028 = !DILocation(line: 24, column: 2, scope: !14026)
!14029 = !DILocation(line: 27, column: 2, scope: !14026)
!14030 = !DILocation(line: 71, column: 1, scope: !14026)
!14031 = distinct !DISubprogram(name: "z_add_timeout", scope: !2247, file: !2247, line: 88, type: !14032, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14038)
!14032 = !DISubroutineType(types: !14033)
!14033 = !{null, !2220, !2239, !14034}
!14034 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1457, line: 67, baseType: !14035)
!14035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1457, line: 65, size: 64, elements: !14036)
!14036 = !{!14037}
!14037 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14035, file: !1457, line: 66, baseType: !1456, size: 64)
!14038 = !{!14039, !14040, !14041, !14042, !14048, !14049, !14052, !14055}
!14039 = !DILocalVariable(name: "to", arg: 1, scope: !14031, file: !2247, line: 88, type: !2220)
!14040 = !DILocalVariable(name: "fn", arg: 2, scope: !14031, file: !2247, line: 88, type: !2239)
!14041 = !DILocalVariable(name: "timeout", arg: 3, scope: !14031, file: !2247, line: 89, type: !14034)
!14042 = !DILocalVariable(name: "__i", scope: !14043, file: !2247, line: 102, type: !14044)
!14043 = distinct !DILexicalBlock(scope: !14031, file: !2247, line: 102, column: 2)
!14044 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !14045)
!14045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !14046)
!14046 = !{!14047}
!14047 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14045, file: !321, line: 33, baseType: !103, size: 32)
!14048 = !DILocalVariable(name: "__key", scope: !14043, file: !2247, line: 102, type: !14044)
!14049 = !DILocalVariable(name: "t", scope: !14050, file: !2247, line: 103, type: !2220)
!14050 = distinct !DILexicalBlock(scope: !14051, file: !2247, line: 102, column: 24)
!14051 = distinct !DILexicalBlock(scope: !14043, file: !2247, line: 102, column: 2)
!14052 = !DILocalVariable(name: "ticks", scope: !14053, file: !2247, line: 107, type: !1456)
!14053 = distinct !DILexicalBlock(scope: !14054, file: !2247, line: 106, column: 39)
!14054 = distinct !DILexicalBlock(scope: !14050, file: !2247, line: 105, column: 7)
!14055 = !DILocalVariable(name: "next_time", scope: !14056, file: !2247, line: 137, type: !595)
!14056 = distinct !DILexicalBlock(scope: !14057, file: !2247, line: 127, column: 22)
!14057 = distinct !DILexicalBlock(scope: !14050, file: !2247, line: 127, column: 7)
!14058 = !DILocation(line: 0, scope: !14031)
!14059 = !DILocation(line: 91, column: 6, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14031, file: !2247, line: 91, column: 6)
!14061 = !DILocation(line: 91, column: 6, scope: !14031)
!14062 = !DILocation(line: 100, column: 6, scope: !14031)
!14063 = !DILocation(line: 100, column: 9, scope: !14031)
!14064 = !DILocation(line: 0, scope: !14043)
!14065 = !DILocalVariable(name: "l", arg: 1, scope: !14066, file: !321, line: 136, type: !14069)
!14066 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !14067, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14070)
!14067 = !DISubroutineType(types: !14068)
!14068 = !{!14044, !14069}
!14069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!14070 = !{!14065, !14071}
!14071 = !DILocalVariable(name: "k", scope: !14066, file: !321, line: 139, type: !14044)
!14072 = !DILocation(line: 0, scope: !14066, inlinedAt: !14073)
!14073 = distinct !DILocation(line: 102, column: 2, scope: !14043)
!14074 = !DILocation(line: 55, column: 2, scope: !14075, inlinedAt: !14079)
!14075 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4622, file: !4622, line: 42, type: !4623, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14076)
!14076 = !{!14077, !14078}
!14077 = !DILocalVariable(name: "key", scope: !14075, file: !4622, line: 44, type: !32)
!14078 = !DILocalVariable(name: "tmp", scope: !14075, file: !4622, line: 53, type: !32)
!14079 = distinct !DILocation(line: 145, column: 10, scope: !14066, inlinedAt: !14073)
!14080 = !{i64 2283683}
!14081 = !DILocation(line: 0, scope: !14075, inlinedAt: !14079)
!14082 = !DILocation(line: 106, column: 33, scope: !14054)
!14083 = !DILocation(line: 105, column: 7, scope: !14050)
!14084 = !DILocation(line: 107, column: 50, scope: !14053)
!14085 = !DILocation(line: 107, column: 48, scope: !14053)
!14086 = !DILocation(line: 0, scope: !14053)
!14087 = !DILocation(line: 109, column: 17, scope: !14053)
!14088 = !DILocation(line: 110, column: 3, scope: !14053)
!14089 = !DILocation(line: 111, column: 31, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14054, file: !2247, line: 110, column: 10)
!14091 = !DILocation(line: 111, column: 37, scope: !14090)
!14092 = !DILocation(line: 111, column: 35, scope: !14090)
!14093 = !DILocation(line: 0, scope: !14054)
!14094 = !DILocation(line: 109, column: 8, scope: !14053)
!14095 = !DILocation(line: 109, column: 15, scope: !14053)
!14096 = !DILocation(line: 114, column: 12, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14050, file: !2247, line: 114, column: 3)
!14098 = !DILocation(line: 0, scope: !14050)
!14099 = !DILocation(line: 114, column: 3, scope: !14097)
!14100 = !DILocation(line: 115, column: 24, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14102, file: !2247, line: 115, column: 8)
!14102 = distinct !DILexicalBlock(scope: !14103, file: !2247, line: 114, column: 45)
!14103 = distinct !DILexicalBlock(scope: !14097, file: !2247, line: 114, column: 3)
!14104 = !DILocation(line: 115, column: 11, scope: !14101)
!14105 = !DILocation(line: 115, column: 18, scope: !14101)
!14106 = !DILocation(line: 115, column: 8, scope: !14102)
!14107 = !DILocation(line: 116, column: 15, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14101, file: !2247, line: 115, column: 32)
!14109 = !DILocation(line: 117, column: 26, scope: !14108)
!14110 = !DILocation(line: 117, column: 37, scope: !14108)
!14111 = !DILocation(line: 117, column: 5, scope: !14108)
!14112 = !DILocation(line: 123, column: 7, scope: !14050)
!14113 = !DILocation(line: 120, column: 15, scope: !14102)
!14114 = !DILocation(line: 114, column: 36, scope: !14103)
!14115 = distinct !{!14115, !14099, !14116}
!14116 = !DILocation(line: 121, column: 3, scope: !14097)
!14117 = !DILocation(line: 124, column: 41, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14119, file: !2247, line: 123, column: 18)
!14119 = distinct !DILexicalBlock(scope: !14050, file: !2247, line: 123, column: 7)
!14120 = !DILocation(line: 124, column: 4, scope: !14118)
!14121 = !DILocation(line: 125, column: 3, scope: !14118)
!14122 = !DILocation(line: 127, column: 13, scope: !14057)
!14123 = !DILocation(line: 127, column: 10, scope: !14057)
!14124 = !DILocation(line: 127, column: 7, scope: !14050)
!14125 = !DILocation(line: 137, column: 24, scope: !14056)
!14126 = !DILocation(line: 0, scope: !14056)
!14127 = !DILocation(line: 139, column: 18, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14056, file: !2247, line: 139, column: 8)
!14129 = !DILocation(line: 139, column: 23, scope: !14128)
!14130 = !DILocation(line: 141, column: 5, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14128, file: !2247, line: 140, column: 48)
!14132 = !DILocation(line: 142, column: 4, scope: !14131)
!14133 = !DILocalVariable(name: "key", arg: 2, scope: !14134, file: !321, line: 190, type: !14044)
!14134 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !14135, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14137)
!14135 = !DISubroutineType(types: !14136)
!14136 = !{null, !14069, !14044}
!14137 = !{!14138, !14133}
!14138 = !DILocalVariable(name: "l", arg: 1, scope: !14134, file: !321, line: 189, type: !14069)
!14139 = !DILocation(line: 0, scope: !14134, inlinedAt: !14140)
!14140 = distinct !DILocation(line: 102, column: 2, scope: !14051)
!14141 = !DILocalVariable(name: "key", arg: 1, scope: !14142, file: !4622, line: 84, type: !32)
!14142 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4622, file: !4622, line: 84, type: !4633, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14143)
!14143 = !{!14141}
!14144 = !DILocation(line: 0, scope: !14142, inlinedAt: !14145)
!14145 = distinct !DILocation(line: 215, column: 2, scope: !14134, inlinedAt: !14140)
!14146 = !DILocation(line: 95, column: 2, scope: !14142, inlinedAt: !14145)
!14147 = !{i64 2284500}
!14148 = !DILocation(line: 148, column: 1, scope: !14031)
!14149 = distinct !DISubprogram(name: "elapsed", scope: !2247, file: !2247, line: 62, type: !14150, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14150 = !DISubroutineType(types: !14151)
!14151 = !{!595}
!14152 = !DILocation(line: 64, column: 9, scope: !14149)
!14153 = !DILocation(line: 64, column: 28, scope: !14149)
!14154 = !DILocation(line: 64, column: 35, scope: !14149)
!14155 = !DILocation(line: 64, column: 2, scope: !14149)
!14156 = distinct !DISubprogram(name: "first", scope: !2247, file: !2247, line: 39, type: !14157, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14159)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{!2220}
!14159 = !{!14160}
!14160 = !DILocalVariable(name: "t", scope: !14156, file: !2247, line: 41, type: !14161)
!14161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!14162 = !DILocation(line: 41, column: 19, scope: !14156)
!14163 = !DILocation(line: 0, scope: !14156)
!14164 = !DILocation(line: 43, column: 9, scope: !14156)
!14165 = !DILocation(line: 43, column: 2, scope: !14156)
!14166 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !14167, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14169)
!14167 = !DISubroutineType(types: !14168)
!14168 = !{null, !14161, !14161}
!14169 = !{!14170, !14171, !14172}
!14170 = !DILocalVariable(name: "successor", arg: 1, scope: !14166, file: !221, line: 443, type: !14161)
!14171 = !DILocalVariable(name: "node", arg: 2, scope: !14166, file: !221, line: 443, type: !14161)
!14172 = !DILocalVariable(name: "prev", scope: !14166, file: !221, line: 445, type: !14173)
!14173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14161)
!14174 = !DILocation(line: 0, scope: !14166)
!14175 = !DILocation(line: 445, column: 39, scope: !14166)
!14176 = !DILocation(line: 447, column: 8, scope: !14166)
!14177 = !DILocation(line: 447, column: 13, scope: !14166)
!14178 = !DILocation(line: 448, column: 8, scope: !14166)
!14179 = !DILocation(line: 448, column: 13, scope: !14166)
!14180 = !DILocation(line: 449, column: 8, scope: !14166)
!14181 = !DILocation(line: 449, column: 13, scope: !14166)
!14182 = !DILocation(line: 450, column: 18, scope: !14166)
!14183 = !DILocation(line: 451, column: 1, scope: !14166)
!14184 = distinct !DISubprogram(name: "next", scope: !2247, file: !2247, line: 46, type: !14185, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14187)
!14185 = !DISubroutineType(types: !14186)
!14186 = !{!2220, !2220}
!14187 = !{!14188, !14189}
!14188 = !DILocalVariable(name: "t", arg: 1, scope: !14184, file: !2247, line: 46, type: !2220)
!14189 = !DILocalVariable(name: "n", scope: !14184, file: !2247, line: 48, type: !14161)
!14190 = !DILocation(line: 0, scope: !14184)
!14191 = !DILocation(line: 48, column: 58, scope: !14184)
!14192 = !DILocation(line: 48, column: 19, scope: !14184)
!14193 = !DILocation(line: 50, column: 9, scope: !14184)
!14194 = !DILocation(line: 50, column: 2, scope: !14184)
!14195 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !14196, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14199)
!14196 = !DISubroutineType(types: !14197)
!14197 = !{null, !14198, !14161}
!14198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!14199 = !{!14200, !14201, !14202}
!14200 = !DILocalVariable(name: "list", arg: 1, scope: !14195, file: !221, line: 404, type: !14198)
!14201 = !DILocalVariable(name: "node", arg: 2, scope: !14195, file: !221, line: 404, type: !14161)
!14202 = !DILocalVariable(name: "tail", scope: !14195, file: !221, line: 406, type: !14173)
!14203 = !DILocation(line: 0, scope: !14195)
!14204 = !DILocation(line: 406, column: 34, scope: !14195)
!14205 = !DILocation(line: 408, column: 8, scope: !14195)
!14206 = !DILocation(line: 408, column: 13, scope: !14195)
!14207 = !DILocation(line: 409, column: 8, scope: !14195)
!14208 = !DILocation(line: 409, column: 13, scope: !14195)
!14209 = !DILocation(line: 411, column: 8, scope: !14195)
!14210 = !DILocation(line: 411, column: 13, scope: !14195)
!14211 = !DILocation(line: 412, column: 13, scope: !14195)
!14212 = !DILocation(line: 413, column: 1, scope: !14195)
!14213 = distinct !DISubprogram(name: "next_timeout", scope: !2247, file: !2247, line: 67, type: !14150, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14214)
!14214 = !{!14215, !14216, !14217}
!14215 = !DILocalVariable(name: "to", scope: !14213, file: !2247, line: 69, type: !2220)
!14216 = !DILocalVariable(name: "ticks_elapsed", scope: !14213, file: !2247, line: 70, type: !595)
!14217 = !DILocalVariable(name: "ret", scope: !14213, file: !2247, line: 71, type: !595)
!14218 = !DILocation(line: 69, column: 24, scope: !14213)
!14219 = !DILocation(line: 0, scope: !14213)
!14220 = !DILocation(line: 70, column: 26, scope: !14213)
!14221 = !DILocation(line: 73, column: 10, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14213, file: !2247, line: 73, column: 6)
!14223 = !DILocation(line: 73, column: 19, scope: !14222)
!14224 = !DILocation(line: 74, column: 21, scope: !14222)
!14225 = !DILocation(line: 74, column: 30, scope: !14222)
!14226 = !DILocation(line: 74, column: 28, scope: !14222)
!14227 = !DILocation(line: 74, column: 45, scope: !14222)
!14228 = !DILocation(line: 73, column: 6, scope: !14213)
!14229 = !DILocation(line: 77, column: 9, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14222, file: !2247, line: 76, column: 9)
!14231 = !DILocation(line: 0, scope: !14222)
!14232 = !DILocation(line: 81, column: 20, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14213, file: !2247, line: 81, column: 6)
!14234 = !DILocation(line: 81, column: 6, scope: !14233)
!14235 = !DILocation(line: 81, column: 32, scope: !14233)
!14236 = !DILocation(line: 85, column: 2, scope: !14213)
!14237 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !14238, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14240)
!14238 = !DISubroutineType(types: !14239)
!14239 = !{!14161, !14198, !14161}
!14240 = !{!14241, !14242}
!14241 = !DILocalVariable(name: "list", arg: 1, scope: !14237, file: !221, line: 341, type: !14198)
!14242 = !DILocalVariable(name: "node", arg: 2, scope: !14237, file: !221, line: 342, type: !14161)
!14243 = !DILocation(line: 0, scope: !14237)
!14244 = !DILocation(line: 344, column: 15, scope: !14237)
!14245 = !DILocation(line: 344, column: 9, scope: !14237)
!14246 = !DILocation(line: 344, column: 26, scope: !14237)
!14247 = !DILocation(line: 344, column: 2, scope: !14237)
!14248 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !14238, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14249)
!14249 = !{!14250, !14251}
!14250 = !DILocalVariable(name: "list", arg: 1, scope: !14248, file: !221, line: 325, type: !14198)
!14251 = !DILocalVariable(name: "node", arg: 2, scope: !14248, file: !221, line: 326, type: !14161)
!14252 = !DILocation(line: 0, scope: !14248)
!14253 = !DILocation(line: 328, column: 24, scope: !14248)
!14254 = !DILocation(line: 328, column: 15, scope: !14248)
!14255 = !DILocation(line: 328, column: 9, scope: !14248)
!14256 = !DILocation(line: 328, column: 45, scope: !14248)
!14257 = !DILocation(line: 328, column: 2, scope: !14248)
!14258 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !14259, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14261)
!14259 = !DISubroutineType(types: !14260)
!14260 = !{!14161, !14198}
!14261 = !{!14262}
!14262 = !DILocalVariable(name: "list", arg: 1, scope: !14258, file: !221, line: 294, type: !14198)
!14263 = !DILocation(line: 0, scope: !14258)
!14264 = !DILocation(line: 296, column: 9, scope: !14258)
!14265 = !DILocation(line: 296, column: 2, scope: !14258)
!14266 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !14267, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14269)
!14267 = !DISubroutineType(types: !14268)
!14268 = !{!157, !14198}
!14269 = !{!14270}
!14270 = !DILocalVariable(name: "list", arg: 1, scope: !14266, file: !221, line: 266, type: !14198)
!14271 = !DILocation(line: 0, scope: !14266)
!14272 = !DILocation(line: 268, column: 15, scope: !14266)
!14273 = !DILocation(line: 268, column: 20, scope: !14266)
!14274 = !DILocation(line: 268, column: 2, scope: !14266)
!14275 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2247, file: !2247, line: 150, type: !14276, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14278)
!14276 = !DISubroutineType(types: !14277)
!14277 = !{!103, !2220}
!14278 = !{!14279, !14280, !14281, !14283}
!14279 = !DILocalVariable(name: "to", arg: 1, scope: !14275, file: !2247, line: 150, type: !2220)
!14280 = !DILocalVariable(name: "ret", scope: !14275, file: !2247, line: 152, type: !103)
!14281 = !DILocalVariable(name: "__i", scope: !14282, file: !2247, line: 154, type: !14044)
!14282 = distinct !DILexicalBlock(scope: !14275, file: !2247, line: 154, column: 2)
!14283 = !DILocalVariable(name: "__key", scope: !14282, file: !2247, line: 154, type: !14044)
!14284 = !DILocation(line: 0, scope: !14275)
!14285 = !DILocation(line: 0, scope: !14282)
!14286 = !DILocation(line: 0, scope: !14066, inlinedAt: !14287)
!14287 = distinct !DILocation(line: 154, column: 2, scope: !14282)
!14288 = !DILocation(line: 55, column: 2, scope: !14075, inlinedAt: !14289)
!14289 = distinct !DILocation(line: 145, column: 10, scope: !14066, inlinedAt: !14287)
!14290 = !DILocation(line: 0, scope: !14075, inlinedAt: !14289)
!14291 = !DILocation(line: 155, column: 7, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14293, file: !2247, line: 155, column: 7)
!14293 = distinct !DILexicalBlock(scope: !14294, file: !2247, line: 154, column: 24)
!14294 = distinct !DILexicalBlock(scope: !14282, file: !2247, line: 154, column: 2)
!14295 = !DILocation(line: 155, column: 7, scope: !14293)
!14296 = !DILocation(line: 156, column: 4, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14292, file: !2247, line: 155, column: 39)
!14298 = !DILocation(line: 158, column: 3, scope: !14297)
!14299 = !DILocation(line: 0, scope: !14134, inlinedAt: !14300)
!14300 = distinct !DILocation(line: 154, column: 2, scope: !14294)
!14301 = !DILocation(line: 0, scope: !14142, inlinedAt: !14302)
!14302 = distinct !DILocation(line: 215, column: 2, scope: !14134, inlinedAt: !14300)
!14303 = !DILocation(line: 95, column: 2, scope: !14142, inlinedAt: !14302)
!14304 = !DILocation(line: 161, column: 2, scope: !14275)
!14305 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !14306, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14310)
!14306 = !DISubroutineType(types: !14307)
!14307 = !{!157, !14308}
!14308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14309, size: 32)
!14309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2224)
!14310 = !{!14311}
!14311 = !DILocalVariable(name: "node", arg: 1, scope: !14305, file: !221, line: 225, type: !14308)
!14312 = !DILocation(line: 0, scope: !14305)
!14313 = !DILocation(line: 227, column: 15, scope: !14305)
!14314 = !DILocation(line: 227, column: 20, scope: !14305)
!14315 = !DILocation(line: 227, column: 2, scope: !14305)
!14316 = distinct !DISubprogram(name: "remove_timeout", scope: !2247, file: !2247, line: 53, type: !2241, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14317)
!14317 = !{!14318}
!14318 = !DILocalVariable(name: "t", arg: 1, scope: !14316, file: !2247, line: 53, type: !2220)
!14319 = !DILocation(line: 0, scope: !14316)
!14320 = !DILocation(line: 55, column: 6, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14316, file: !2247, line: 55, column: 6)
!14322 = !DILocation(line: 55, column: 14, scope: !14321)
!14323 = !DILocation(line: 55, column: 6, scope: !14316)
!14324 = !DILocation(line: 56, column: 25, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !14321, file: !2247, line: 55, column: 23)
!14326 = !DILocation(line: 56, column: 12, scope: !14325)
!14327 = !DILocation(line: 56, column: 19, scope: !14325)
!14328 = !DILocation(line: 57, column: 2, scope: !14325)
!14329 = !DILocation(line: 59, column: 23, scope: !14316)
!14330 = !DILocation(line: 59, column: 2, scope: !14316)
!14331 = !DILocation(line: 60, column: 1, scope: !14316)
!14332 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !14333, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14335)
!14333 = !DISubroutineType(types: !14334)
!14334 = !{null, !14161}
!14335 = !{!14336, !14337, !14338}
!14336 = !DILocalVariable(name: "node", arg: 1, scope: !14332, file: !221, line: 496, type: !14161)
!14337 = !DILocalVariable(name: "prev", scope: !14332, file: !221, line: 498, type: !14173)
!14338 = !DILocalVariable(name: "next", scope: !14332, file: !221, line: 499, type: !14173)
!14339 = !DILocation(line: 0, scope: !14332)
!14340 = !DILocation(line: 498, column: 34, scope: !14332)
!14341 = !DILocation(line: 499, column: 34, scope: !14332)
!14342 = !DILocation(line: 501, column: 8, scope: !14332)
!14343 = !DILocation(line: 501, column: 13, scope: !14332)
!14344 = !DILocation(line: 502, column: 8, scope: !14332)
!14345 = !DILocation(line: 502, column: 13, scope: !14332)
!14346 = !DILocation(line: 503, column: 2, scope: !14332)
!14347 = !DILocation(line: 504, column: 1, scope: !14332)
!14348 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !14333, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14349)
!14349 = !{!14350}
!14350 = !DILocalVariable(name: "node", arg: 1, scope: !14348, file: !221, line: 211, type: !14161)
!14351 = !DILocation(line: 0, scope: !14348)
!14352 = !DILocation(line: 213, column: 8, scope: !14348)
!14353 = !DILocation(line: 213, column: 13, scope: !14348)
!14354 = !DILocation(line: 214, column: 8, scope: !14348)
!14355 = !DILocation(line: 214, column: 13, scope: !14348)
!14356 = !DILocation(line: 215, column: 1, scope: !14348)
!14357 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2247, file: !2247, line: 183, type: !14358, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14362)
!14358 = !DISubroutineType(types: !14359)
!14359 = !{!1456, !14360}
!14360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14361, size: 32)
!14361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2221)
!14362 = !{!14363, !14364, !14365, !14367}
!14363 = !DILocalVariable(name: "timeout", arg: 1, scope: !14357, file: !2247, line: 183, type: !14360)
!14364 = !DILocalVariable(name: "ticks", scope: !14357, file: !2247, line: 185, type: !1456)
!14365 = !DILocalVariable(name: "__i", scope: !14366, file: !2247, line: 187, type: !14044)
!14366 = distinct !DILexicalBlock(scope: !14357, file: !2247, line: 187, column: 2)
!14367 = !DILocalVariable(name: "__key", scope: !14366, file: !2247, line: 187, type: !14044)
!14368 = !DILocation(line: 0, scope: !14357)
!14369 = !DILocation(line: 0, scope: !14366)
!14370 = !DILocation(line: 0, scope: !14066, inlinedAt: !14371)
!14371 = distinct !DILocation(line: 187, column: 2, scope: !14366)
!14372 = !DILocation(line: 55, column: 2, scope: !14075, inlinedAt: !14373)
!14373 = distinct !DILocation(line: 145, column: 10, scope: !14066, inlinedAt: !14371)
!14374 = !DILocation(line: 0, scope: !14075, inlinedAt: !14373)
!14375 = !DILocation(line: 188, column: 11, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !14377, file: !2247, line: 187, column: 24)
!14377 = distinct !DILexicalBlock(scope: !14366, file: !2247, line: 187, column: 2)
!14378 = !DILocation(line: 0, scope: !14134, inlinedAt: !14379)
!14379 = distinct !DILocation(line: 187, column: 2, scope: !14377)
!14380 = !DILocation(line: 0, scope: !14142, inlinedAt: !14381)
!14381 = distinct !DILocation(line: 215, column: 2, scope: !14134, inlinedAt: !14379)
!14382 = !DILocation(line: 95, column: 2, scope: !14142, inlinedAt: !14381)
!14383 = !DILocation(line: 191, column: 2, scope: !14357)
!14384 = distinct !DISubprogram(name: "timeout_rem", scope: !2247, file: !2247, line: 165, type: !14358, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14385)
!14385 = !{!14386, !14387, !14388}
!14386 = !DILocalVariable(name: "timeout", arg: 1, scope: !14384, file: !2247, line: 165, type: !14360)
!14387 = !DILocalVariable(name: "ticks", scope: !14384, file: !2247, line: 167, type: !1456)
!14388 = !DILocalVariable(name: "t", scope: !14389, file: !2247, line: 173, type: !2220)
!14389 = distinct !DILexicalBlock(scope: !14384, file: !2247, line: 173, column: 2)
!14390 = !DILocation(line: 0, scope: !14384)
!14391 = !DILocation(line: 169, column: 6, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14384, file: !2247, line: 169, column: 6)
!14393 = !DILocation(line: 169, column: 6, scope: !14384)
!14394 = !DILocation(line: 173, column: 28, scope: !14389)
!14395 = !DILocation(line: 0, scope: !14389)
!14396 = !DILocation(line: 173, column: 39, scope: !14397)
!14397 = distinct !DILexicalBlock(scope: !14389, file: !2247, line: 173, column: 2)
!14398 = !DILocation(line: 173, column: 2, scope: !14389)
!14399 = !DILocation(line: 174, column: 15, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14397, file: !2247, line: 173, column: 61)
!14401 = !DILocation(line: 174, column: 9, scope: !14400)
!14402 = !DILocation(line: 175, column: 15, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14400, file: !2247, line: 175, column: 7)
!14404 = !DILocation(line: 175, column: 7, scope: !14400)
!14405 = !DILocation(line: 173, column: 52, scope: !14397)
!14406 = distinct !{!14406, !14398, !14407}
!14407 = !DILocation(line: 178, column: 2, scope: !14389)
!14408 = !DILocation(line: 180, column: 17, scope: !14384)
!14409 = !DILocation(line: 180, column: 15, scope: !14384)
!14410 = !DILocation(line: 180, column: 2, scope: !14384)
!14411 = !DILocation(line: 181, column: 1, scope: !14384)
!14412 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11722, file: !11722, line: 35, type: !14413, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14415)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{!157, !14360}
!14415 = !{!14416}
!14416 = !DILocalVariable(name: "to", arg: 1, scope: !14412, file: !11722, line: 35, type: !14360)
!14417 = !DILocation(line: 0, scope: !14412)
!14418 = !DILocation(line: 37, column: 35, scope: !14412)
!14419 = !DILocation(line: 37, column: 10, scope: !14412)
!14420 = !DILocation(line: 37, column: 9, scope: !14412)
!14421 = !DILocation(line: 37, column: 2, scope: !14412)
!14422 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2247, file: !2247, line: 194, type: !14358, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14423)
!14423 = !{!14424, !14425, !14426, !14428}
!14424 = !DILocalVariable(name: "timeout", arg: 1, scope: !14422, file: !2247, line: 194, type: !14360)
!14425 = !DILocalVariable(name: "ticks", scope: !14422, file: !2247, line: 196, type: !1456)
!14426 = !DILocalVariable(name: "__i", scope: !14427, file: !2247, line: 198, type: !14044)
!14427 = distinct !DILexicalBlock(scope: !14422, file: !2247, line: 198, column: 2)
!14428 = !DILocalVariable(name: "__key", scope: !14427, file: !2247, line: 198, type: !14044)
!14429 = !DILocation(line: 0, scope: !14422)
!14430 = !DILocation(line: 0, scope: !14427)
!14431 = !DILocation(line: 0, scope: !14066, inlinedAt: !14432)
!14432 = distinct !DILocation(line: 198, column: 2, scope: !14427)
!14433 = !DILocation(line: 55, column: 2, scope: !14075, inlinedAt: !14434)
!14434 = distinct !DILocation(line: 145, column: 10, scope: !14066, inlinedAt: !14432)
!14435 = !DILocation(line: 0, scope: !14075, inlinedAt: !14434)
!14436 = !DILocation(line: 199, column: 11, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14438, file: !2247, line: 198, column: 24)
!14438 = distinct !DILexicalBlock(scope: !14427, file: !2247, line: 198, column: 2)
!14439 = !DILocation(line: 199, column: 23, scope: !14437)
!14440 = !DILocation(line: 0, scope: !14134, inlinedAt: !14441)
!14441 = distinct !DILocation(line: 198, column: 2, scope: !14438)
!14442 = !DILocation(line: 0, scope: !14142, inlinedAt: !14443)
!14443 = distinct !DILocation(line: 215, column: 2, scope: !14134, inlinedAt: !14441)
!14444 = !DILocation(line: 95, column: 2, scope: !14142, inlinedAt: !14443)
!14445 = !DILocation(line: 199, column: 21, scope: !14437)
!14446 = !DILocation(line: 202, column: 2, scope: !14422)
!14447 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2247, file: !2247, line: 205, type: !14150, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14448)
!14448 = !{!14449, !14450, !14452}
!14449 = !DILocalVariable(name: "ret", scope: !14447, file: !2247, line: 207, type: !595)
!14450 = !DILocalVariable(name: "__i", scope: !14451, file: !2247, line: 209, type: !14044)
!14451 = distinct !DILexicalBlock(scope: !14447, file: !2247, line: 209, column: 2)
!14452 = !DILocalVariable(name: "__key", scope: !14451, file: !2247, line: 209, type: !14044)
!14453 = !DILocation(line: 0, scope: !14447)
!14454 = !DILocation(line: 0, scope: !14451)
!14455 = !DILocation(line: 0, scope: !14066, inlinedAt: !14456)
!14456 = distinct !DILocation(line: 209, column: 2, scope: !14451)
!14457 = !DILocation(line: 55, column: 2, scope: !14075, inlinedAt: !14458)
!14458 = distinct !DILocation(line: 145, column: 10, scope: !14066, inlinedAt: !14456)
!14459 = !DILocation(line: 0, scope: !14075, inlinedAt: !14458)
!14460 = !DILocation(line: 210, column: 9, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14462, file: !2247, line: 209, column: 24)
!14462 = distinct !DILexicalBlock(scope: !14451, file: !2247, line: 209, column: 2)
!14463 = !DILocation(line: 0, scope: !14134, inlinedAt: !14464)
!14464 = distinct !DILocation(line: 209, column: 2, scope: !14462)
!14465 = !DILocation(line: 0, scope: !14142, inlinedAt: !14466)
!14466 = distinct !DILocation(line: 215, column: 2, scope: !14134, inlinedAt: !14464)
!14467 = !DILocation(line: 95, column: 2, scope: !14142, inlinedAt: !14466)
!14468 = !DILocation(line: 212, column: 2, scope: !14447)
!14469 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2247, file: !2247, line: 215, type: !8750, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14470)
!14470 = !{!14471, !14472, !14473, !14475, !14476, !14479, !14480}
!14471 = !DILocalVariable(name: "ticks", arg: 1, scope: !14469, file: !2247, line: 215, type: !595)
!14472 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14469, file: !2247, line: 215, type: !157)
!14473 = !DILocalVariable(name: "__i", scope: !14474, file: !2247, line: 217, type: !14044)
!14474 = distinct !DILexicalBlock(scope: !14469, file: !2247, line: 217, column: 2)
!14475 = !DILocalVariable(name: "__key", scope: !14474, file: !2247, line: 217, type: !14044)
!14476 = !DILocalVariable(name: "next_to", scope: !14477, file: !2247, line: 218, type: !103)
!14477 = distinct !DILexicalBlock(scope: !14478, file: !2247, line: 217, column: 24)
!14478 = distinct !DILexicalBlock(scope: !14474, file: !2247, line: 217, column: 2)
!14479 = !DILocalVariable(name: "sooner", scope: !14477, file: !2247, line: 219, type: !157)
!14480 = !DILocalVariable(name: "imminent", scope: !14477, file: !2247, line: 221, type: !157)
!14481 = !DILocation(line: 0, scope: !14469)
!14482 = !DILocation(line: 0, scope: !14474)
!14483 = !DILocation(line: 0, scope: !14066, inlinedAt: !14484)
!14484 = distinct !DILocation(line: 217, column: 2, scope: !14474)
!14485 = !DILocation(line: 55, column: 2, scope: !14075, inlinedAt: !14486)
!14486 = distinct !DILocation(line: 145, column: 10, scope: !14066, inlinedAt: !14484)
!14487 = !DILocation(line: 0, scope: !14075, inlinedAt: !14486)
!14488 = !DILocation(line: 218, column: 17, scope: !14477)
!14489 = !DILocation(line: 0, scope: !14477)
!14490 = !DILocation(line: 221, column: 27, scope: !14477)
!14491 = !DILocation(line: 233, column: 17, scope: !14492)
!14492 = distinct !DILexicalBlock(scope: !14477, file: !2247, line: 233, column: 7)
!14493 = !DILocation(line: 234, column: 26, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14492, file: !2247, line: 233, column: 56)
!14495 = !DILocation(line: 234, column: 4, scope: !14494)
!14496 = !DILocation(line: 235, column: 3, scope: !14494)
!14497 = !DILocation(line: 0, scope: !14134, inlinedAt: !14498)
!14498 = distinct !DILocation(line: 217, column: 2, scope: !14478)
!14499 = !DILocation(line: 0, scope: !14142, inlinedAt: !14500)
!14500 = distinct !DILocation(line: 215, column: 2, scope: !14134, inlinedAt: !14498)
!14501 = !DILocation(line: 95, column: 2, scope: !14142, inlinedAt: !14500)
!14502 = !DILocation(line: 237, column: 1, scope: !14469)
!14503 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2247, file: !2247, line: 239, type: !14504, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14506)
!14504 = !DISubroutineType(types: !14505)
!14505 = !{null, !595}
!14506 = !{!14507, !14508, !14509, !14511}
!14507 = !DILocalVariable(name: "ticks", arg: 1, scope: !14503, file: !2247, line: 239, type: !595)
!14508 = !DILocalVariable(name: "key", scope: !14503, file: !2247, line: 245, type: !14044)
!14509 = !DILocalVariable(name: "t", scope: !14510, file: !2247, line: 262, type: !2220)
!14510 = distinct !DILexicalBlock(scope: !14503, file: !2247, line: 261, column: 67)
!14511 = !DILocalVariable(name: "dt", scope: !14510, file: !2247, line: 263, type: !103)
!14512 = !DILocation(line: 0, scope: !14503)
!14513 = !DILocation(line: 242, column: 2, scope: !14503)
!14514 = !DILocation(line: 0, scope: !14066, inlinedAt: !14515)
!14515 = distinct !DILocation(line: 245, column: 25, scope: !14503)
!14516 = !DILocation(line: 55, column: 2, scope: !14075, inlinedAt: !14517)
!14517 = distinct !DILocation(line: 145, column: 10, scope: !14066, inlinedAt: !14515)
!14518 = !DILocation(line: 0, scope: !14075, inlinedAt: !14517)
!14519 = !DILocation(line: 261, column: 9, scope: !14503)
!14520 = !DILocation(line: 261, column: 17, scope: !14503)
!14521 = !DILocation(line: 261, column: 25, scope: !14503)
!14522 = !DILocation(line: 261, column: 37, scope: !14503)
!14523 = !DILocation(line: 261, column: 47, scope: !14503)
!14524 = !DILocation(line: 261, column: 44, scope: !14503)
!14525 = !DILocation(line: 261, column: 2, scope: !14503)
!14526 = !DILocation(line: 0, scope: !14510)
!14527 = !DILocation(line: 263, column: 12, scope: !14510)
!14528 = !DILocation(line: 265, column: 16, scope: !14510)
!14529 = !DILocation(line: 265, column: 13, scope: !14510)
!14530 = !DILocation(line: 266, column: 13, scope: !14510)
!14531 = !DILocation(line: 267, column: 3, scope: !14510)
!14532 = !DILocation(line: 0, scope: !14134, inlinedAt: !14533)
!14533 = distinct !DILocation(line: 269, column: 3, scope: !14510)
!14534 = !DILocation(line: 0, scope: !14142, inlinedAt: !14535)
!14535 = distinct !DILocation(line: 215, column: 2, scope: !14134, inlinedAt: !14533)
!14536 = !DILocation(line: 95, column: 2, scope: !14142, inlinedAt: !14535)
!14537 = !DILocation(line: 270, column: 6, scope: !14510)
!14538 = !DILocation(line: 270, column: 3, scope: !14510)
!14539 = !DILocation(line: 0, scope: !14066, inlinedAt: !14540)
!14540 = distinct !DILocation(line: 271, column: 9, scope: !14510)
!14541 = !DILocation(line: 55, column: 2, scope: !14075, inlinedAt: !14542)
!14542 = distinct !DILocation(line: 145, column: 10, scope: !14066, inlinedAt: !14540)
!14543 = !DILocation(line: 0, scope: !14075, inlinedAt: !14542)
!14544 = !DILocation(line: 272, column: 22, scope: !14510)
!14545 = distinct !{!14545, !14525, !14546}
!14546 = !DILocation(line: 273, column: 2, scope: !14503)
!14547 = !DILocation(line: 276, column: 19, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14549, file: !2247, line: 275, column: 23)
!14549 = distinct !DILexicalBlock(scope: !14503, file: !2247, line: 275, column: 6)
!14550 = !DILocation(line: 277, column: 2, scope: !14548)
!14551 = !DILocation(line: 279, column: 15, scope: !14503)
!14552 = !DILocation(line: 279, column: 12, scope: !14503)
!14553 = !DILocation(line: 280, column: 21, scope: !14503)
!14554 = !DILocation(line: 282, column: 24, scope: !14503)
!14555 = !DILocation(line: 282, column: 2, scope: !14503)
!14556 = !DILocation(line: 0, scope: !14134, inlinedAt: !14557)
!14557 = distinct !DILocation(line: 284, column: 2, scope: !14503)
!14558 = !DILocation(line: 0, scope: !14142, inlinedAt: !14559)
!14559 = distinct !DILocation(line: 215, column: 2, scope: !14134, inlinedAt: !14557)
!14560 = !DILocation(line: 95, column: 2, scope: !14142, inlinedAt: !14559)
!14561 = !DILocation(line: 285, column: 1, scope: !14503)
!14562 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2247, file: !2247, line: 287, type: !14563, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14565)
!14563 = !DISubroutineType(types: !14564)
!14564 = !{!280}
!14565 = !{!14566, !14567, !14569}
!14566 = !DILocalVariable(name: "t", scope: !14562, file: !2247, line: 289, type: !1308)
!14567 = !DILocalVariable(name: "__i", scope: !14568, file: !2247, line: 291, type: !14044)
!14568 = distinct !DILexicalBlock(scope: !14562, file: !2247, line: 291, column: 2)
!14569 = !DILocalVariable(name: "__key", scope: !14568, file: !2247, line: 291, type: !14044)
!14570 = !DILocation(line: 0, scope: !14562)
!14571 = !DILocation(line: 0, scope: !14568)
!14572 = !DILocation(line: 0, scope: !14066, inlinedAt: !14573)
!14573 = distinct !DILocation(line: 291, column: 2, scope: !14568)
!14574 = !DILocation(line: 55, column: 2, scope: !14075, inlinedAt: !14575)
!14575 = distinct !DILocation(line: 145, column: 10, scope: !14066, inlinedAt: !14573)
!14576 = !DILocation(line: 0, scope: !14075, inlinedAt: !14575)
!14577 = !DILocation(line: 292, column: 7, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14579, file: !2247, line: 291, column: 24)
!14579 = distinct !DILexicalBlock(scope: !14568, file: !2247, line: 291, column: 2)
!14580 = !DILocation(line: 292, column: 19, scope: !14578)
!14581 = !DILocation(line: 0, scope: !14134, inlinedAt: !14582)
!14582 = distinct !DILocation(line: 291, column: 2, scope: !14579)
!14583 = !DILocation(line: 0, scope: !14142, inlinedAt: !14584)
!14584 = distinct !DILocation(line: 215, column: 2, scope: !14134, inlinedAt: !14582)
!14585 = !DILocation(line: 95, column: 2, scope: !14142, inlinedAt: !14584)
!14586 = !DILocation(line: 292, column: 17, scope: !14578)
!14587 = !DILocation(line: 294, column: 2, scope: !14562)
!14588 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2247, file: !2247, line: 297, type: !4877, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14589 = !DILocation(line: 300, column: 19, scope: !14588)
!14590 = !DILocation(line: 300, column: 9, scope: !14588)
!14591 = !DILocation(line: 300, column: 2, scope: !14588)
!14592 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2247, file: !2247, line: 306, type: !14563, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14593 = !DILocation(line: 308, column: 9, scope: !14592)
!14594 = !DILocation(line: 308, column: 2, scope: !14592)
!14595 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2247, file: !2247, line: 319, type: !4887, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14596)
!14596 = !{!14597, !14598, !14599, !14600}
!14597 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14595, file: !2247, line: 319, type: !121)
!14598 = !DILocalVariable(name: "start_cycles", scope: !14595, file: !2247, line: 328, type: !121)
!14599 = !DILocalVariable(name: "cycles_to_wait", scope: !14595, file: !2247, line: 331, type: !121)
!14600 = !DILocalVariable(name: "current_cycles", scope: !14601, file: !2247, line: 338, type: !121)
!14601 = distinct !DILexicalBlock(scope: !14602, file: !2247, line: 337, column: 11)
!14602 = distinct !DILexicalBlock(scope: !14603, file: !2247, line: 337, column: 2)
!14603 = distinct !DILexicalBlock(scope: !14595, file: !2247, line: 337, column: 2)
!14604 = !DILocation(line: 0, scope: !14595)
!14605 = !DILocation(line: 322, column: 19, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14595, file: !2247, line: 322, column: 6)
!14607 = !DILocation(line: 322, column: 6, scope: !14595)
!14608 = !DILocation(line: 328, column: 26, scope: !14595)
!14609 = !DILocation(line: 333, column: 43, scope: !14595)
!14610 = !DILocation(line: 337, column: 2, scope: !14595)
!14611 = !DILocation(line: 338, column: 29, scope: !14601)
!14612 = !DILocation(line: 0, scope: !14601)
!14613 = !DILocation(line: 341, column: 23, scope: !14614)
!14614 = distinct !DILexicalBlock(scope: !14601, file: !2247, line: 341, column: 7)
!14615 = !DILocation(line: 341, column: 39, scope: !14614)
!14616 = !DILocation(line: 349, column: 1, scope: !14595)
!14617 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !307, file: !307, line: 1675, type: !4877, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14618 = !DILocation(line: 1677, column: 9, scope: !14617)
!14619 = !DILocation(line: 1677, column: 2, scope: !14617)
!14620 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14621, file: !14621, line: 24, type: !4877, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14621 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14622 = !DILocation(line: 26, column: 9, scope: !14620)
!14623 = !DILocation(line: 26, column: 2, scope: !14620)
!14624 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2247, file: !2247, line: 364, type: !14625, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14627)
!14625 = !DISubroutineType(types: !14626)
!14626 = !{!1308, !14034}
!14627 = !{!14628, !14629}
!14628 = !DILocalVariable(name: "timeout", arg: 1, scope: !14624, file: !2247, line: 364, type: !14034)
!14629 = !DILocalVariable(name: "dt", scope: !14624, file: !2247, line: 366, type: !1456)
!14630 = !DILocation(line: 0, scope: !14624)
!14631 = !DILocation(line: 368, column: 6, scope: !14624)
!14632 = !DILocation(line: 371, column: 10, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14634, file: !2247, line: 370, column: 47)
!14634 = distinct !DILexicalBlock(scope: !14635, file: !2247, line: 370, column: 13)
!14635 = distinct !DILexicalBlock(scope: !14624, file: !2247, line: 368, column: 6)
!14636 = !DILocation(line: 371, column: 3, scope: !14633)
!14637 = !DILocation(line: 376, column: 58, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14639, file: !2247, line: 376, column: 7)
!14639 = distinct !DILexicalBlock(scope: !14634, file: !2247, line: 372, column: 9)
!14640 = !DILocation(line: 376, column: 7, scope: !14639)
!14641 = !DILocation(line: 376, column: 43, scope: !14638)
!14642 = !DILocation(line: 377, column: 4, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14638, file: !2247, line: 376, column: 64)
!14644 = !DILocation(line: 379, column: 10, scope: !14639)
!14645 = !DILocation(line: 379, column: 33, scope: !14639)
!14646 = !DILocation(line: 379, column: 31, scope: !14639)
!14647 = !DILocation(line: 379, column: 3, scope: !14639)
!14648 = !DILocation(line: 0, scope: !14635)
!14649 = !DILocation(line: 381, column: 1, scope: !14624)
!14650 = distinct !DISubprogram(name: "boot_banner", scope: !14651, file: !14651, line: 26, type: !2821, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !322)
!14651 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14652 = !DILocation(line: 34, column: 2, scope: !14650)
!14653 = !DILocation(line: 36, column: 1, scope: !14650)
